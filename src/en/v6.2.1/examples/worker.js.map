{"version":3,"sources":["webpack:///../src/ol/worker/version.js","webpack:///./worker.js"],"names":["blob","Blob","type","url","URL","createObjectURL","const","map","Map","layers","Tile","source","OSM","target","view","View","center","zoom","worker","Worker","addEventListener","error","console","event","log","data","on","state","frameState","viewState","postMessage"],"mappings":"mIAEcA,EAAO,IAAIC,KAAK,CADP,2IACiB,CAACC,KAAM,2BACjCC,EAAMC,IAAIC,gBAAgBL,GCMxCM,IAAMC,EAAM,IAAIC,EAAA,EAAI,CAClBC,OAAQ,CACN,IAAIC,EAAA,EAAU,CACZC,OAAQ,IAAIC,EAAA,KAGhBC,OAAQ,MACRC,KAAM,IAAIC,EAAA,EAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAIJC,EDjBW,IAAIC,OAAOhB,GCkB5Be,EAAOE,iBAAiB,SAAS,SAASC,GACxCC,QAAQD,MAAM,eAAgBA,MAGhCH,EAAOE,iBAAiB,WAAW,SAASG,GAC1CD,QAAQE,IAAI,uBAAwBD,EAAME,SAG5ClB,EAAImB,GAAG,WAAW,SAASH,GACzBjB,IAAMqB,EAAQJ,EAAMK,WAAWC,UAC/BX,EAAOY,YAAY,CAACb,KAAMU,EAAMV,KAAMD,OAAQW,EAAMX,c","file":"worker.js","sourcesContent":["\n        const source = \"var e=self;e.onmessage=function(s){console.log(\\\"version worker received message:\\\",s.data),e.postMessage(\\\"version: \\\".concat(\\\"latest\\\"))};\";\n        const blob = new Blob([source], {type: 'application/javascript'});\n        const url = URL.createObjectURL(blob);\n        export function create() {\n          return new Worker(url);\n        }\n      \n","/* eslint-disable no-console */\n\nimport Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport OSM from '../src/ol/source/OSM.js';\nimport {create as createVersionWorker} from '../src/ol/worker/version.js';\n\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM()\n    })\n  ],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n\nconst worker = createVersionWorker();\nworker.addEventListener('error', function(error) {\n  console.error('worker error', error);\n});\n\nworker.addEventListener('message', function(event) {\n  console.log('message from worker:', event.data);\n});\n\nmap.on('moveend', function(event) {\n  const state = event.frameState.viewState;\n  worker.postMessage({zoom: state.zoom, center: state.center});\n});\n"],"sourceRoot":""}