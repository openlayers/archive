(window.webpackJsonp=window.webpackJsonp||[]).push([[132],{214:function(t,e,a){"use strict";var n=a(50),r=a(31),s=a(8),i=a(43),o=a(25),l=a(14),h=a(49),c=a(154),u={TRANSLATESTART:"translatestart",TRANSLATING:"translating",TRANSLATEEND:"translateend"},p=function(t){function TranslateEvent(e,a,n){t.call(this,e),this.features=a,this.coordinate=n}return t&&(TranslateEvent.__proto__=t),TranslateEvent.prototype=Object.create(t&&t.prototype),TranslateEvent.prototype.constructor=TranslateEvent,TranslateEvent}(i.a),d=function(t){function Translate(e){t.call(this,{handleDownEvent:handleDownEvent,handleDragEvent:handleDragEvent,handleMoveEvent:handleMoveEvent,handleUpEvent:handleUpEvent});var a,n=e||{};if(this.lastCoordinate_=null,this.features_=void 0!==n.features?n.features:null,n.layers)if("function"==typeof n.layers)a=n.layers;else{var i=n.layers;a=function(t){return Object(l.f)(i,t)}}else a=o.b;this.layerFilter_=a,this.hitTolerance_=n.hitTolerance?n.hitTolerance:0,this.lastFeature_=null,Object(s.a)(this,Object(r.b)(c.a.ACTIVE),this.handleActiveChanged_,this)}return t&&(Translate.__proto__=t),Translate.prototype=Object.create(t&&t.prototype),Translate.prototype.constructor=Translate,Translate.prototype.featuresAtPixel_=function(t,e){return e.forEachFeatureAtPixel(t,function(t){if(!this.features_||Object(l.f)(this.features_.getArray(),t))return t}.bind(this),{layerFilter:this.layerFilter_,hitTolerance:this.hitTolerance_})},Translate.prototype.getHitTolerance=function(){return this.hitTolerance_},Translate.prototype.setHitTolerance=function(t){this.hitTolerance_=t},Translate.prototype.setMap=function(e){var a=this.getMap();t.prototype.setMap.call(this,e),this.updateState_(a)},Translate.prototype.handleActiveChanged_=function(){this.updateState_(null)},Translate.prototype.updateState_=function(t){var e=this.getMap(),a=this.getActive();e&&a||(e=e||t)&&e.getViewport().classList.remove("ol-grab","ol-grabbing")},Translate}(h.b);function handleDownEvent(t){if(this.lastFeature_=this.featuresAtPixel_(t.pixel,t.map),!this.lastCoordinate_&&this.lastFeature_){this.lastCoordinate_=t.coordinate,handleMoveEvent.call(this,t);var e=this.features_||new n.b([this.lastFeature_]);return this.dispatchEvent(new p(u.TRANSLATESTART,e,t.coordinate)),!0}return!1}function handleUpEvent(t){if(this.lastCoordinate_){this.lastCoordinate_=null,handleMoveEvent.call(this,t);var e=this.features_||new n.b([this.lastFeature_]);return this.dispatchEvent(new p(u.TRANSLATEEND,e,t.coordinate)),!0}return!1}function handleDragEvent(t){if(this.lastCoordinate_){var e=t.coordinate,a=e[0]-this.lastCoordinate_[0],r=e[1]-this.lastCoordinate_[1],s=this.features_||new n.b([this.lastFeature_]);s.forEach(function(t){var e=t.getGeometry();e.translate(a,r),t.setGeometry(e)}),this.lastCoordinate_=e,this.dispatchEvent(new p(u.TRANSLATING,s,e))}}function handleMoveEvent(t){var e=t.map.getViewport();this.featuresAtPixel_(t.pixel,t.map)?(e.classList.remove(this.lastCoordinate_?"ol-grab":"ol-grabbing"),e.classList.add(this.lastCoordinate_?"ol-grabbing":"ol-grab")):e.classList.remove("ol-grab","ol-grabbing")}e.a=d},355:function(t,e,a){"use strict";a.r(e);var n=a(1),r=a(0),s=a(21),i=a(98),o=a(214),l=a(47),h=a(3),c=a(18),u=a(4),p=a(13),d=new h.a({source:new u.b}),v=new c.a({source:new p.b({url:"data/geojson/countries.geojson",format:new s.a})}),f=new i.a,_=new o.a({features:f.getFeatures()});new n.a({interactions:Object(l.a)().extend([f,_]),layers:[d,v],target:"map",view:new r.a({center:[0,0],zoom:2})})}},[[355,0]]]);
//# sourceMappingURL=translate-features.js.map