{"version":3,"sources":["webpack:///./vector-layer.js"],"names":["highlight","style","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_5__","fill","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_6__","color","stroke","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_7__","width","text","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_8__","font","vectorLayer","_src_ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_3__","source","_src_ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_4__","url","format","_src_ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_2__","feature","getText","setText","get","map","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","layers","target","view","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","center","zoom","highlightStyle","featureOverlay","displayFeatureInfo","pixel","const","forEachFeatureAtPixel","info","document","getElementById","innerHTML","getId","getSource","removeFeature","addFeature","on","evt","dragging","getEventPixel","originalEvent"],"mappings":"uGA6EIA,wEArEEC,EAAQ,IAAIC,EAAA,GAChBC,KAAM,IAAIC,EAAA,GACRC,MAAO,6BAETC,OAAQ,IAAIC,EAAA,GACVF,MAAO,UACPG,MAAO,IAETC,KAAM,IAAIC,EAAA,GACRC,KAAM,0BACNR,KAAM,IAAIC,EAAA,GACRC,MAAO,SAETC,OAAQ,IAAIC,EAAA,GACVF,MAAO,OACPG,MAAO,QAKPI,EAAc,IAAIC,EAAA,GACtBC,OAAQ,IAAIC,EAAA,GACVC,IAAK,iCACLC,OAAQ,IAAIC,EAAA,IAEdjB,MAAO,SAASkB,GAEd,OADAlB,EAAMmB,UAAUC,QAAQF,EAAQG,IAAI,SAC7BrB,KAILsB,EAAM,IAAIC,EAAA,GACdC,QAASb,GACTc,OAAQ,MACRC,KAAM,IAAIC,EAAA,GACRC,QAAS,EAAG,GACZC,KAAM,MAIJC,EAAiB,IAAI7B,EAAA,GACzBI,OAAQ,IAAIC,EAAA,GACVF,MAAO,OACPG,MAAO,IAETL,KAAM,IAAIC,EAAA,GACRC,MAAO,sBAETI,KAAM,IAAIC,EAAA,GACRC,KAAM,0BACNR,KAAM,IAAIC,EAAA,GACRC,MAAO,SAETC,OAAQ,IAAIC,EAAA,GACVF,MAAO,OACPG,MAAO,QAKPwB,EAAiB,IAAInB,EAAA,GACzBC,OAAQ,IAAIC,EAAA,EACZQ,IAAKA,EACLtB,MAAO,SAASkB,GAEd,OADAY,EAAeX,UAAUC,QAAQF,EAAQG,IAAI,SACtCS,KAKLE,EAAqB,SAASC,GAElCC,IAAMhB,EAAUI,EAAIa,sBAAsBF,EAAO,SAASf,GACxD,OAAOA,IAGHkB,EAAOC,SAASC,eAAe,QAEnCF,EAAKG,UADHrB,EACeA,EAAQsB,QAAU,KAAOtB,EAAQG,IAAI,QAErC,SAGfH,IAAYnB,IACVA,GACFgC,EAAeU,YAAYC,cAAc3C,GAEvCmB,GACFa,EAAeU,YAAYE,WAAWzB,GAExCnB,EAAYmB,IAKhBI,EAAIsB,GAAG,cAAe,SAASC,GAC7B,IAAIA,EAAIC,SAAR,CAGAZ,IAAMD,EAAQX,EAAIyB,cAAcF,EAAIG,eACpChB,EAAmBC,MAGrBX,EAAIsB,GAAG,QAAS,SAASC,GACvBb,EAAmBa,EAAIZ","file":"vector-layer.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport GeoJSON from '../src/ol/format/GeoJSON.js';\nimport VectorLayer from '../src/ol/layer/Vector.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport {Fill, Stroke, Style, Text} from '../src/ol/style.js';\n\n\nconst style = new Style({\n  fill: new Fill({\n    color: 'rgba(255, 255, 255, 0.6)'\n  }),\n  stroke: new Stroke({\n    color: '#319FD3',\n    width: 1\n  }),\n  text: new Text({\n    font: '12px Calibri,sans-serif',\n    fill: new Fill({\n      color: '#000'\n    }),\n    stroke: new Stroke({\n      color: '#fff',\n      width: 3\n    })\n  })\n});\n\nconst vectorLayer = new VectorLayer({\n  source: new VectorSource({\n    url: 'data/geojson/countries.geojson',\n    format: new GeoJSON()\n  }),\n  style: function(feature) {\n    style.getText().setText(feature.get('name'));\n    return style;\n  }\n});\n\nconst map = new Map({\n  layers: [vectorLayer],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 1\n  })\n});\n\nconst highlightStyle = new Style({\n  stroke: new Stroke({\n    color: '#f00',\n    width: 1\n  }),\n  fill: new Fill({\n    color: 'rgba(255,0,0,0.1)'\n  }),\n  text: new Text({\n    font: '12px Calibri,sans-serif',\n    fill: new Fill({\n      color: '#000'\n    }),\n    stroke: new Stroke({\n      color: '#f00',\n      width: 3\n    })\n  })\n});\n\nconst featureOverlay = new VectorLayer({\n  source: new VectorSource(),\n  map: map,\n  style: function(feature) {\n    highlightStyle.getText().setText(feature.get('name'));\n    return highlightStyle;\n  }\n});\n\nlet highlight;\nconst displayFeatureInfo = function(pixel) {\n\n  const feature = map.forEachFeatureAtPixel(pixel, function(feature) {\n    return feature;\n  });\n\n  const info = document.getElementById('info');\n  if (feature) {\n    info.innerHTML = feature.getId() + ': ' + feature.get('name');\n  } else {\n    info.innerHTML = '&nbsp;';\n  }\n\n  if (feature !== highlight) {\n    if (highlight) {\n      featureOverlay.getSource().removeFeature(highlight);\n    }\n    if (feature) {\n      featureOverlay.getSource().addFeature(feature);\n    }\n    highlight = feature;\n  }\n\n};\n\nmap.on('pointermove', function(evt) {\n  if (evt.dragging) {\n    return;\n  }\n  const pixel = map.getEventPixel(evt.originalEvent);\n  displayFeatureInfo(pixel);\n});\n\nmap.on('click', function(evt) {\n  displayFeatureInfo(evt.pixel);\n});\n"],"sourceRoot":""}