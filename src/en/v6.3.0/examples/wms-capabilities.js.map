{"version":3,"sources":["webpack:///../src/ol/format/WMSCapabilities.js","webpack:///./wms-capabilities.js"],"names":["NAMESPACE_URIS","PARSERS","node","objectStack","SERVICE_PARSERS","CAPABILITY_PARSERS","REQUEST_PARSERS","EXCEPTION_PARSERS","LAYER_PARSERS","super","this","version","undefined","readFromDocument","doc","let","n","firstChild","nextSibling","nodeType","Node","ELEMENT_NODE","readFromNode","getAttribute","trim","const","wmsCapabilityObject","readKeywordList","CONTACT_INFORMATION_PARSERS","CONTACT_PERSON_PARSERS","CONTACT_ADDRESS_PARSERS","geographicBoundingBox","EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","extent","resolutions","ATTRIBUTION_PARSERS","authorityObject","readFormatOnlineresource","metadataObject","STYLE_PARSERS","parentLayerObject","length","layerObject","queryable","cascaded","opaque","noSubsets","fixedWidth","fixedHeight","forEach","key","childValue","concat","parentValue","readSizedFormatOnlineresource","readOperationType","OPERATIONTYPE_PARSERS","DCPTYPE_PARSERS","HTTP_PARSERS","FORMAT_ONLINERESOURCE_PARSERS","KEYWORDLIST_PARSERS","formatOnlineresource","size","parser","fetch","then","response","text","result","read","document","getElementById","innerText","JSON","stringify"],"mappings":"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","file":"wms-capabilities.js","sourcesContent":["/**\n * @module ol/format/WMSCapabilities\n */\nimport {readHref} from './XLink.js';\nimport XML from './XML.js';\nimport {readDecimalString, readString, readNonNegativeInteger, readDecimal, readBooleanString, readNonNegativeIntegerString} from './xsd.js';\nimport {makeArrayPusher, makeObjectPropertyPusher, makeObjectPropertySetter,\n  makeStructureNS, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/wms'\n];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Service': makeObjectPropertySetter(readService),\n    'Capability': makeObjectPropertySetter(readCapability)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CAPABILITY_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Request': makeObjectPropertySetter(readRequest),\n    'Exception': makeObjectPropertySetter(readException),\n    'Layer': makeObjectPropertySetter(readCapabilityLayer)\n  });\n\n\n/**\n * @classdesc\n * Format for reading WMS capabilities data\n *\n * @api\n */\nclass WMSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {string|undefined}\n     */\n    this.version = undefined;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(n);\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFromNode(node) {\n    this.version = node.getAttribute('version').trim();\n    const wmsCapabilityObject = pushParseAndPop({\n      'version': this.version\n    }, PARSERS, node, []);\n    return wmsCapabilityObject ? wmsCapabilityObject : null;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\n    'OnlineResource': makeObjectPropertySetter(readHref),\n    'ContactInformation': makeObjectPropertySetter(readContactInformation),\n    'Fees': makeObjectPropertySetter(readString),\n    'AccessConstraints': makeObjectPropertySetter(readString),\n    'LayerLimit': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxHeight': makeObjectPropertySetter(readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_INFORMATION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ContactPersonPrimary': makeObjectPropertySetter(readContactPersonPrimary),\n    'ContactPosition': makeObjectPropertySetter(readString),\n    'ContactAddress': makeObjectPropertySetter(readContactAddress),\n    'ContactVoiceTelephone': makeObjectPropertySetter(readString),\n    'ContactFacsimileTelephone': makeObjectPropertySetter(readString),\n    'ContactElectronicMailAddress': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_PERSON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ContactPerson': makeObjectPropertySetter(readString),\n    'ContactOrganization': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_ADDRESS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'AddressType': makeObjectPropertySetter(readString),\n    'Address': makeObjectPropertySetter(readString),\n    'City': makeObjectPropertySetter(readString),\n    'StateOrProvince': makeObjectPropertySetter(readString),\n    'PostCode': makeObjectPropertySetter(readString),\n    'Country': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXCEPTION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Format': makeArrayPusher(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\n    'CRS': makeObjectPropertyPusher(readString),\n    'EX_GeographicBoundingBox': makeObjectPropertySetter(readEXGeographicBoundingBox),\n    'BoundingBox': makeObjectPropertyPusher(readBoundingBox),\n    'Dimension': makeObjectPropertyPusher(readDimension),\n    'Attribution': makeObjectPropertySetter(readAttribution),\n    'AuthorityURL': makeObjectPropertyPusher(readAuthorityURL),\n    'Identifier': makeObjectPropertyPusher(readString),\n    'MetadataURL': makeObjectPropertyPusher(readMetadataURL),\n    'DataURL': makeObjectPropertyPusher(readFormatOnlineresource),\n    'FeatureListURL': makeObjectPropertyPusher(readFormatOnlineresource),\n    'Style': makeObjectPropertyPusher(readStyle),\n    'MinScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'MaxScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'Layer': makeObjectPropertyPusher(readLayer)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ATTRIBUTION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'OnlineResource': makeObjectPropertySetter(readHref),\n    'LogoURL': makeObjectPropertySetter(readSizedFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS =\n    makeStructureNS(NAMESPACE_URIS, {\n      'westBoundLongitude': makeObjectPropertySetter(readDecimal),\n      'eastBoundLongitude': makeObjectPropertySetter(readDecimal),\n      'southBoundLatitude': makeObjectPropertySetter(readDecimal),\n      'northBoundLatitude': makeObjectPropertySetter(readDecimal)\n    });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REQUEST_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'GetCapabilities': makeObjectPropertySetter(readOperationType),\n    'GetMap': makeObjectPropertySetter(readOperationType),\n    'GetFeatureInfo': makeObjectPropertySetter(readOperationType)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATIONTYPE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Format': makeObjectPropertyPusher(readString),\n    'DCPType': makeObjectPropertyPusher(readDCPType)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DCPTYPE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'HTTP': makeObjectPropertySetter(readHTTP)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst HTTP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Get': makeObjectPropertySetter(readFormatOnlineresource),\n    'Post': makeObjectPropertySetter(readFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'LegendURL': makeObjectPropertyPusher(readSizedFormatOnlineresource),\n    'StyleSheetURL': makeObjectPropertySetter(readFormatOnlineresource),\n    'StyleURL': makeObjectPropertySetter(readFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FORMAT_ONLINERESOURCE_PARSERS =\n    makeStructureNS(NAMESPACE_URIS, {\n      'Format': makeObjectPropertySetter(readString),\n      'OnlineResource': makeObjectPropertySetter(readHref)\n    });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst KEYWORDLIST_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Keyword': makeArrayPusher(readString)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readAttribution(node, objectStack) {\n  return pushParseAndPop({}, ATTRIBUTION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Bounding box object.\n */\nfunction readBoundingBox(node, objectStack) {\n  const extent = [\n    readDecimalString(node.getAttribute('minx')),\n    readDecimalString(node.getAttribute('miny')),\n    readDecimalString(node.getAttribute('maxx')),\n    readDecimalString(node.getAttribute('maxy'))\n  ];\n\n  const resolutions = [\n    readDecimalString(node.getAttribute('resx')),\n    readDecimalString(node.getAttribute('resy'))\n  ];\n\n  return {\n    'crs': node.getAttribute('CRS'),\n    'extent': extent,\n    'res': resolutions\n  };\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../extent.js\").Extent|undefined} Bounding box object.\n */\nfunction readEXGeographicBoundingBox(node, objectStack) {\n  const geographicBoundingBox = pushParseAndPop(\n    {},\n    EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS,\n    node, objectStack);\n  if (!geographicBoundingBox) {\n    return undefined;\n  }\n  const westBoundLongitude = /** @type {number|undefined} */\n        (geographicBoundingBox['westBoundLongitude']);\n  const southBoundLatitude = /** @type {number|undefined} */\n        (geographicBoundingBox['southBoundLatitude']);\n  const eastBoundLongitude = /** @type {number|undefined} */\n        (geographicBoundingBox['eastBoundLongitude']);\n  const northBoundLatitude = /** @type {number|undefined} */\n        (geographicBoundingBox['northBoundLatitude']);\n  if (westBoundLongitude === undefined || southBoundLatitude === undefined ||\n        eastBoundLongitude === undefined || northBoundLatitude === undefined) {\n    return undefined;\n  }\n  return [\n    westBoundLongitude, southBoundLatitude,\n    eastBoundLongitude, northBoundLatitude\n  ];\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Capability object.\n */\nfunction readCapability(node, objectStack) {\n  return pushParseAndPop({}, CAPABILITY_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Service object.\n */\nfunction readService(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact information object.\n */\nfunction readContactInformation(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFORMATION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact person object.\n */\nfunction readContactPersonPrimary(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_PERSON_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact address object.\n */\nfunction readContactAddress(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_ADDRESS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Format array.\n */\nfunction readException(node, objectStack) {\n  return pushParseAndPop([], EXCEPTION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readCapabilityLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readLayer(node, objectStack) {\n  const parentLayerObject = /**  @type {!Object<string,*>} */ (objectStack[objectStack.length - 1]);\n\n  const layerObject = pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n\n  if (!layerObject) {\n    return undefined;\n  }\n  let queryable = readBooleanString(node.getAttribute('queryable'));\n  if (queryable === undefined) {\n    queryable = parentLayerObject['queryable'];\n  }\n  layerObject['queryable'] = queryable !== undefined ? queryable : false;\n\n  let cascaded = readNonNegativeIntegerString(\n    node.getAttribute('cascaded'));\n  if (cascaded === undefined) {\n    cascaded = parentLayerObject['cascaded'];\n  }\n  layerObject['cascaded'] = cascaded;\n\n  let opaque = readBooleanString(node.getAttribute('opaque'));\n  if (opaque === undefined) {\n    opaque = parentLayerObject['opaque'];\n  }\n  layerObject['opaque'] = opaque !== undefined ? opaque : false;\n\n  let noSubsets = readBooleanString(node.getAttribute('noSubsets'));\n  if (noSubsets === undefined) {\n    noSubsets = parentLayerObject['noSubsets'];\n  }\n  layerObject['noSubsets'] = noSubsets !== undefined ? noSubsets : false;\n\n  let fixedWidth = readDecimalString(node.getAttribute('fixedWidth'));\n  if (!fixedWidth) {\n    fixedWidth = parentLayerObject['fixedWidth'];\n  }\n  layerObject['fixedWidth'] = fixedWidth;\n\n  let fixedHeight = readDecimalString(node.getAttribute('fixedHeight'));\n  if (!fixedHeight) {\n    fixedHeight = parentLayerObject['fixedHeight'];\n  }\n  layerObject['fixedHeight'] = fixedHeight;\n\n  // See 7.2.4.8\n  const addKeys = ['Style', 'CRS', 'AuthorityURL'];\n  addKeys.forEach(function(key) {\n    if (key in parentLayerObject) {\n      const childValue = layerObject[key] || [];\n      layerObject[key] = childValue.concat(parentLayerObject[key]);\n    }\n  });\n\n  const replaceKeys = ['EX_GeographicBoundingBox', 'BoundingBox', 'Dimension',\n    'Attribution', 'MinScaleDenominator', 'MaxScaleDenominator'];\n  replaceKeys.forEach(function(key) {\n    if (!(key in layerObject)) {\n      const parentValue = parentLayerObject[key];\n      layerObject[key] = parentValue;\n    }\n  });\n\n  return layerObject;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Dimension object.\n */\nfunction readDimension(node, objectStack) {\n  const dimensionObject = {\n    'name': node.getAttribute('name'),\n    'units': node.getAttribute('units'),\n    'unitSymbol': node.getAttribute('unitSymbol'),\n    'default': node.getAttribute('default'),\n    'multipleValues': readBooleanString(node.getAttribute('multipleValues')),\n    'nearestValue': readBooleanString(node.getAttribute('nearestValue')),\n    'current': readBooleanString(node.getAttribute('current')),\n    'values': readString(node)\n  };\n  return dimensionObject;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readFormatOnlineresource(node, objectStack) {\n  return pushParseAndPop({}, FORMAT_ONLINERESOURCE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Request object.\n */\nfunction readRequest(node, objectStack) {\n  return pushParseAndPop({}, REQUEST_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} DCP type object.\n */\nfunction readDCPType(node, objectStack) {\n  return pushParseAndPop({}, DCPTYPE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} HTTP object.\n */\nfunction readHTTP(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Operation type object.\n */\nfunction readOperationType(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONTYPE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readSizedFormatOnlineresource(node, objectStack) {\n  const formatOnlineresource = readFormatOnlineresource(node, objectStack);\n  if (formatOnlineresource) {\n    const size = [\n      readNonNegativeIntegerString(node.getAttribute('width')),\n      readNonNegativeIntegerString(node.getAttribute('height'))\n    ];\n    formatOnlineresource['size'] = size;\n    return formatOnlineresource;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Authority URL object.\n */\nfunction readAuthorityURL(node, objectStack) {\n  const authorityObject = readFormatOnlineresource(node, objectStack);\n  if (authorityObject) {\n    authorityObject['name'] = node.getAttribute('name');\n    return authorityObject;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Metadata URL object.\n */\nfunction readMetadataURL(node, objectStack) {\n  const metadataObject = readFormatOnlineresource(node, objectStack);\n  if (metadataObject) {\n    metadataObject['type'] = node.getAttribute('type');\n    return metadataObject;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  return pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Keyword list.\n */\nfunction readKeywordList(node, objectStack) {\n  return pushParseAndPop([], KEYWORDLIST_PARSERS, node, objectStack);\n}\n\n\nexport default WMSCapabilities;\n","import WMSCapabilities from '../src/ol/format/WMSCapabilities.js';\n\nconst parser = new WMSCapabilities();\n\nfetch('data/ogcsample.xml').then(function(response) {\n  return response.text();\n}).then(function(text) {\n  const result = parser.read(text);\n  document.getElementById('log').innerText = JSON.stringify(result, null, 2);\n});\n"],"sourceRoot":""}