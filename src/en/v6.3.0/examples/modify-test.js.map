{"version":3,"sources":["webpack:///./modify-test.js"],"names":["styles","image","styleFunction","radius","fill","stroke","color","width","feature","getGeometry","getType","source","features","readFeatures","layer","style","overlayStyle","const","zIndex","concat","select","modify","getFeatures","insertVertexCondition","getArray","every","match","interactions","extend","layers","target","view","center","zoom","multiWorld"],"mappings":"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","file":"modify-test.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport GeoJSON from '../src/ol/format/GeoJSON.js';\nimport {defaults as defaultInteractions, Modify, Select} from '../src/ol/interaction.js';\nimport VectorLayer from '../src/ol/layer/Vector.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport {Circle as CircleStyle, Fill, Stroke, Style} from '../src/ol/style.js';\n\n\nconst styleFunction = (function() {\n  const styles = {};\n  const image = new CircleStyle({\n    radius: 5,\n    fill: null,\n    stroke: new Stroke({color: 'orange', width: 2})\n  });\n  styles['Point'] = new Style({image: image});\n  styles['Polygon'] = new Style({\n    stroke: new Stroke({\n      color: 'blue',\n      width: 3\n    }),\n    fill: new Fill({\n      color: 'rgba(0, 0, 255, 0.1)'\n    })\n  });\n  styles['MultiLineString'] = new Style({\n    stroke: new Stroke({\n      color: 'green',\n      width: 3\n    })\n  });\n  styles['MultiPolygon'] = new Style({\n    stroke: new Stroke({\n      color: 'yellow',\n      width: 1\n    }),\n    fill: new Fill({\n      color: 'rgba(255, 255, 0, 0.1)'\n    })\n  });\n  styles['default'] = new Style({\n    stroke: new Stroke({\n      color: 'red',\n      width: 3\n    }),\n    fill: new Fill({\n      color: 'rgba(255, 0, 0, 0.1)'\n    }),\n    image: image\n  });\n  return function(feature) {\n    return styles[feature.getGeometry().getType()] || styles['default'];\n  };\n})();\n\nconst geojsonObject = {\n  'type': 'FeatureCollection',\n  'crs': {\n    'type': 'name',\n    'properties': {\n      'name': 'EPSG:3857'\n    }\n  },\n  'features': [{\n    'type': 'Feature',\n    'geometry': {\n      'type': 'Point',\n      'coordinates': [0, 0]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'MultiPoint',\n      'coordinates': [[-2e6, 0], [0, -2e6]]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'LineString',\n      'coordinates': [[4e6, -2e6], [8e6, 2e6], [9e6, 2e6]]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'LineString',\n      'coordinates': [[4e6, -2e6], [8e6, 2e6], [8e6, 3e6]]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'Polygon',\n      'coordinates': [[[-5e6, -1e6], [-4e6, 1e6],\n        [-3e6, -1e6], [-5e6, -1e6]], [[-4.5e6, -0.5e6],\n        [-3.5e6, -0.5e6], [-4e6, 0.5e6], [-4.5e6, -0.5e6]]]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'MultiLineString',\n      'coordinates': [\n        [[-1e6, -7.5e5], [-1e6, 7.5e5]],\n        [[-1e6, -7.5e5], [-1e6, 7.5e5], [-5e5, 0], [-1e6, -7.5e5]],\n        [[1e6, -7.5e5], [15e5, 0], [15e5, 0], [1e6, 7.5e5]],\n        [[-7.5e5, -1e6], [7.5e5, -1e6]],\n        [[-7.5e5, 1e6], [7.5e5, 1e6]]\n      ]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'MultiPolygon',\n      'coordinates': [\n        [[[-5e6, 6e6], [-5e6, 8e6], [-3e6, 8e6],\n          [-3e6, 6e6], [-5e6, 6e6]]],\n        [[[-3e6, 6e6], [-2e6, 8e6], [0, 8e6],\n          [0, 6e6], [-3e6, 6e6]]],\n        [[[1e6, 6e6], [1e6, 8e6], [3e6, 8e6],\n          [3e6, 6e6], [1e6, 6e6]]]\n      ]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'GeometryCollection',\n      'geometries': [{\n        'type': 'LineString',\n        'coordinates': [[-5e6, -5e6], [0, -5e6]]\n      }, {\n        'type': 'Point',\n        'coordinates': [4e6, -5e6]\n      }, {\n        'type': 'Polygon',\n        'coordinates': [\n          [[1e6, -6e6], [2e6, -4e6], [3e6, -6e6], [1e6, -6e6]]\n        ]\n      }]\n    }\n  }]\n};\n\nconst source = new VectorSource({\n  features: (new GeoJSON()).readFeatures(geojsonObject)\n});\n\nconst layer = new VectorLayer({\n  source: source,\n  style: styleFunction\n});\n\nconst overlayStyle = (function() {\n  const styles = {};\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: [255, 255, 255, 1],\n        width: 5\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: [0, 153, 255, 1],\n        width: 3\n      })\n    })\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: [255, 255, 255, 1],\n        width: 5\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: [0, 153, 255, 1],\n        width: 3\n      })\n    })\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: 7,\n        fill: new Fill({\n          color: [0, 153, 255, 1]\n        }),\n        stroke: new Stroke({\n          color: [255, 255, 255, 0.75],\n          width: 1.5\n        })\n      }),\n      zIndex: 100000\n    })\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(styles['Point']);\n\n  return function(feature) {\n    return styles[feature.getGeometry().getType()];\n  };\n})();\n\nconst select = new Select({\n  style: overlayStyle\n});\n\nconst modify = new Modify({\n  features: select.getFeatures(),\n  style: overlayStyle,\n  insertVertexCondition: function() {\n    // prevent new vertices to be added to the polygons\n    return !select.getFeatures().getArray().every(function(feature) {\n      return feature.getGeometry().getType().match(/Polygon/);\n    });\n  }\n});\n\nconst map = new Map({\n  interactions: defaultInteractions().extend([select, modify]),\n  layers: [layer],\n  target: 'map',\n  view: new View({\n    center: [0, 1000000],\n    zoom: 2,\n    multiWorld: true\n  })\n});\n"],"sourceRoot":""}