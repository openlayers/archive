{"version":3,"sources":["webpack:///./geolocation.js"],"names":["view","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_3__","center","zoom","map","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_2__","layers","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_6__","source","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_8__","target","controls","Object","_src_ol_control_js__WEBPACK_IMPORTED_MODULE_4__","attributionOptions","collapsible","geolocation","_src_ol_Geolocation_js__WEBPACK_IMPORTED_MODULE_1__","trackingOptions","enableHighAccuracy","projection","getProjection","el","id","document","getElementById","addEventListener","setTracking","this","checked","on","innerText","getAccuracy","getAltitude","getAltitudeAccuracy","getHeading","getSpeed","error","const","info","innerHTML","message","style","display","accuracyFeature","_src_ol_Feature_js__WEBPACK_IMPORTED_MODULE_0__","setGeometry","getAccuracyGeometry","positionFeature","setStyle","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_10__","image","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_11__","radius","fill","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_12__","color","stroke","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_13__","width","coordinates","getPosition","_src_ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_5__","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_7__","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_9__","features"],"mappings":"uNAUMA,EAAO,IAAIC,EAAA,GACfC,QAAS,EAAG,GACZC,KAAM,IAGFC,EAAM,IAAIC,EAAA,GACdC,QACE,IAAIC,EAAA,GACFC,OAAQ,IAAIC,EAAA,KAGhBC,OAAQ,MACRC,SAAUC,OAAAC,EAAA,EAAAD,EACRE,oBACEC,aAAa,KAGjBf,KAAMA,IAGFgB,EAAc,IAAIC,EAAA,GAEtBC,iBACEC,oBAAoB,GAEtBC,WAAYpB,EAAKqB,kBAGnB,SAASC,EAAGC,GACV,OAAOC,SAASC,eAAeF,GAGjCD,EAAG,SAASI,iBAAiB,SAAU,WACrCV,EAAYW,YAAYC,KAAKC,WAI/Bb,EAAYc,GAAG,SAAU,WACvBR,EAAG,YAAYS,UAAYf,EAAYgB,cAAgB,OACvDV,EAAG,YAAYS,UAAYf,EAAYiB,cAAgB,OACvDX,EAAG,oBAAoBS,UAAYf,EAAYkB,sBAAwB,OACvEZ,EAAG,WAAWS,UAAYf,EAAYmB,aAAe,SACrDb,EAAG,SAASS,UAAYf,EAAYoB,WAAa,WAInDpB,EAAYc,GAAG,QAAS,SAASO,GAC/BC,IAAMC,EAAOf,SAASC,eAAe,QACrCc,EAAKC,UAAYH,EAAMI,QACvBF,EAAKG,MAAMC,QAAU,KAGvBL,IAAMM,EAAkB,IAAIC,EAAA,EAC5B7B,EAAYc,GAAG,0BAA2B,WACxCc,EAAgBE,YAAY9B,EAAY+B,yBAG1CT,IAAMU,EAAkB,IAAIH,EAAA,EAC5BG,EAAgBC,SAAS,IAAIC,EAAA,GAC3BC,MAAO,IAAIC,EAAA,GACTC,OAAQ,EACRC,KAAM,IAAIC,EAAA,GACRC,MAAO,YAETC,OAAQ,IAAIC,EAAA,GACVF,MAAO,OACPG,MAAO,SAKb3C,EAAYc,GAAG,kBAAmB,WAChCQ,IAAMsB,EAAc5C,EAAY6C,cAChCb,EAAgBF,YAAYc,EAC1B,IAAIE,EAAA,EAAMF,GAAe,QAG7B,IAAIG,EAAA,GACF3D,IAAKA,EACLI,OAAQ,IAAIwD,EAAA,GACVC,UAAWrB,EAAiBI","file":"geolocation.js","sourcesContent":["import Feature from '../src/ol/Feature.js';\nimport Geolocation from '../src/ol/Geolocation.js';\nimport Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {defaults as defaultControls} from '../src/ol/control.js';\nimport Point from '../src/ol/geom/Point.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\nimport {Circle as CircleStyle, Fill, Stroke, Style} from '../src/ol/style.js';\n\nconst view = new View({\n  center: [0, 0],\n  zoom: 2\n});\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM()\n    })\n  ],\n  target: 'map',\n  controls: defaultControls({\n    attributionOptions: {\n      collapsible: false\n    }\n  }),\n  view: view\n});\n\nconst geolocation = new Geolocation({\n  // enableHighAccuracy must be set to true to have the heading value.\n  trackingOptions: {\n    enableHighAccuracy: true\n  },\n  projection: view.getProjection()\n});\n\nfunction el(id) {\n  return document.getElementById(id);\n}\n\nel('track').addEventListener('change', function() {\n  geolocation.setTracking(this.checked);\n});\n\n// update the HTML page when the position changes.\ngeolocation.on('change', function() {\n  el('accuracy').innerText = geolocation.getAccuracy() + ' [m]';\n  el('altitude').innerText = geolocation.getAltitude() + ' [m]';\n  el('altitudeAccuracy').innerText = geolocation.getAltitudeAccuracy() + ' [m]';\n  el('heading').innerText = geolocation.getHeading() + ' [rad]';\n  el('speed').innerText = geolocation.getSpeed() + ' [m/s]';\n});\n\n// handle geolocation error.\ngeolocation.on('error', function(error) {\n  const info = document.getElementById('info');\n  info.innerHTML = error.message;\n  info.style.display = '';\n});\n\nconst accuracyFeature = new Feature();\ngeolocation.on('change:accuracyGeometry', function() {\n  accuracyFeature.setGeometry(geolocation.getAccuracyGeometry());\n});\n\nconst positionFeature = new Feature();\npositionFeature.setStyle(new Style({\n  image: new CircleStyle({\n    radius: 6,\n    fill: new Fill({\n      color: '#3399CC'\n    }),\n    stroke: new Stroke({\n      color: '#fff',\n      width: 2\n    })\n  })\n}));\n\ngeolocation.on('change:position', function() {\n  const coordinates = geolocation.getPosition();\n  positionFeature.setGeometry(coordinates ?\n    new Point(coordinates) : null);\n});\n\nnew VectorLayer({\n  map: map,\n  source: new VectorSource({\n    features: [accuracyFeature, positionFeature]\n  })\n});\n"],"sourceRoot":""}