{"version":3,"sources":["webpack:///./polygon-styles.js"],"names":["styles","stroke","color","width","fill","image","radius","geometry","feature","const","coordinates","getGeometry","getCoordinates","source","features","readFeatures","layer","style","layers","target","view","center","zoom"],"mappings":"4FAAA,yFAQMA,EAAS,CAQb,IAAI,IAAM,CACRC,OAAQ,IAAI,IAAO,CACjBC,MAAO,OACPC,MAAO,IAETC,KAAM,IAAI,IAAK,CACbF,MAAO,2BAGX,IAAI,IAAM,CACRG,MAAO,IAAI,IAAY,CACrBC,OAAQ,EACRF,KAAM,IAAI,IAAK,CACbF,MAAO,aAGXK,SAAU,SAASC,GAEjBC,IAAMC,EAAcF,EAAQG,cAAcC,iBAAiB,GAC3D,OAAO,IAAI,IAAWF,OA4CtBG,EAAS,IAAI,IAAa,CAC9BC,UAAU,IAAK,KAAWC,aAxCN,CACpB,KAAQ,oBACR,IAAO,CACL,KAAQ,OACR,WAAc,CACZ,KAAQ,cAGZ,SAAY,CAAC,CACX,KAAQ,UACR,SAAY,CACV,KAAQ,UACR,YAAe,CAAC,CAAC,EAAE,IAAK,KAAM,EAAE,IAAK,KAAM,EAAE,IAAK,KAChD,EAAE,IAAK,KAAM,EAAE,IAAK,SAEvB,CACD,KAAQ,UACR,SAAY,CACV,KAAQ,UACR,YAAe,CAAC,CAAC,EAAE,IAAK,KAAM,EAAE,IAAK,KAAM,CAAC,EAAG,KAC7C,CAAC,EAAG,KAAM,EAAE,IAAK,SAEpB,CACD,KAAQ,UACR,SAAY,CACV,KAAQ,UACR,YAAe,CAAC,CAAC,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAC7C,CAAC,IAAK,KAAM,CAAC,IAAK,SAErB,CACD,KAAQ,UACR,SAAY,CACV,KAAQ,UACR,YAAe,CAAC,CAAC,EAAE,KAAM,KAAM,EAAE,IAAK,KACpC,CAAC,GAAI,KAAM,EAAE,KAAM,cASrBC,EAAQ,IAAI,IAAY,CAC5BH,OAAQA,EACRI,MAAOjB,IAGG,IAAI,IAAI,CAClBkB,OAAQ,CAACF,GACTG,OAAQ,MACRC,KAAM,IAAI,IAAK,CACbC,OAAQ,CAAC,EAAG,KACZC,KAAM,Q","file":"polygon-styles.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport GeoJSON from '../src/ol/format/GeoJSON.js';\nimport MultiPoint from '../src/ol/geom/MultiPoint.js';\nimport VectorLayer from '../src/ol/layer/Vector.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport {Circle as CircleStyle, Fill, Stroke, Style} from '../src/ol/style.js';\n\nconst styles = [\n  /* We are using two different styles for the polygons:\n   *  - The first style is for the polygons themselves.\n   *  - The second style is to draw the vertices of the polygons.\n   *    In a custom `geometry` function the vertices of a polygon are\n   *    returned as `MultiPoint` geometry, which will be used to render\n   *    the style.\n   */\n  new Style({\n    stroke: new Stroke({\n      color: 'blue',\n      width: 3\n    }),\n    fill: new Fill({\n      color: 'rgba(0, 0, 255, 0.1)'\n    })\n  }),\n  new Style({\n    image: new CircleStyle({\n      radius: 5,\n      fill: new Fill({\n        color: 'orange'\n      })\n    }),\n    geometry: function(feature) {\n      // return the coordinates of the first ring of the polygon\n      const coordinates = feature.getGeometry().getCoordinates()[0];\n      return new MultiPoint(coordinates);\n    }\n  })\n];\n\nconst geojsonObject = {\n  'type': 'FeatureCollection',\n  'crs': {\n    'type': 'name',\n    'properties': {\n      'name': 'EPSG:3857'\n    }\n  },\n  'features': [{\n    'type': 'Feature',\n    'geometry': {\n      'type': 'Polygon',\n      'coordinates': [[[-5e6, 6e6], [-5e6, 8e6], [-3e6, 8e6],\n        [-3e6, 6e6], [-5e6, 6e6]]]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'Polygon',\n      'coordinates': [[[-2e6, 6e6], [-2e6, 8e6], [0, 8e6],\n        [0, 6e6], [-2e6, 6e6]]]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'Polygon',\n      'coordinates': [[[1e6, 6e6], [1e6, 8e6], [3e6, 8e6],\n        [3e6, 6e6], [1e6, 6e6]]]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'Polygon',\n      'coordinates': [[[-2e6, -1e6], [-1e6, 1e6],\n        [0, -1e6], [-2e6, -1e6]]]\n    }\n  }]\n};\n\nconst source = new VectorSource({\n  features: (new GeoJSON()).readFeatures(geojsonObject)\n});\n\nconst layer = new VectorLayer({\n  source: source,\n  style: styles\n});\n\nconst map = new Map({\n  layers: [layer],\n  target: 'map',\n  view: new View({\n    center: [0, 3000000],\n    zoom: 2\n  })\n});\n"],"sourceRoot":""}