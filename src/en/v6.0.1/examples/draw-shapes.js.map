{"version":3,"sources":["webpack:///./draw-shapes.js"],"names":["draw","raster","source","wrapX","vector","map","layers","target","view","center","zoom","typeSelect","document","getElementById","addInteraction","let","geometryFunction","value","coordinates","geometry","const","last","dx","dy","radius","Math","sqrt","rotation","atan2","newCoordinates","i","angle","PI","fraction","offsetX","cos","offsetY","sin","push","slice","setCoordinates","type","onchange","removeInteraction"],"mappings":"2FAAA,WA4BIA,EA5BJ,4DAOMC,EAAS,IAAI,IAAU,CAC3BC,OAAQ,IAAI,MAGRA,EAAS,IAAI,IAAa,CAACC,OAAO,IAElCC,EAAS,IAAI,IAAY,CAC7BF,OAAQA,IAGJG,EAAM,IAAI,IAAI,CAClBC,OAAQ,CAACL,EAAQG,GACjBG,OAAQ,MACRC,KAAM,IAAI,IAAK,CACbC,OAAQ,EAAE,KAAU,MACpBC,KAAM,MAIJC,EAAaC,SAASC,eAAe,QAG3C,SAASC,IACPC,IAEMC,EAFFC,EAAQN,EAAWM,MACT,SAAVA,IAEY,WAAVA,GACFA,EAAQ,SACRD,EAAmB,YAAqB,IACrB,QAAVC,GACTA,EAAQ,SACRD,EAAmB,eACA,SAAVC,IACTA,EAAQ,SACRD,EAAmB,SAASE,EAAaC,GASvC,IARAC,IAAMX,EAASS,EAAY,GACrBG,EAAOH,EAAY,GACnBI,EAAKb,EAAO,GAAKY,EAAK,GACtBE,EAAKd,EAAO,GAAKY,EAAK,GACtBG,EAASC,KAAKC,KAAKJ,EAAKA,EAAKC,EAAKA,GAClCI,EAAWF,KAAKG,MAAML,EAAID,GAC1BO,EAAiB,GAEdC,EAAI,EAAGA,EADE,KACeA,EAAG,CAClCV,IAAMW,EAAQJ,EAAe,EAAJG,EAAQL,KAAKO,GAFtB,GAGVC,EAAWH,EAAI,GAAM,EAAI,EAAI,GAC7BI,EAAUV,EAASS,EAAWR,KAAKU,IAAIJ,GACvCK,EAAUZ,EAASS,EAAWR,KAAKY,IAAIN,GAC7CF,EAAeS,KAAK,CAAC7B,EAAO,GAAKyB,EAASzB,EAAO,GAAK2B,IAQxD,OANAP,EAAeS,KAAKT,EAAe,GAAGU,SACjCpB,EAGHA,EAASqB,eAAe,CAACX,IAFzBV,EAAW,IAAI,IAAQ,CAACU,IAInBV,IAGXnB,EAAO,IAAI,IAAK,CACdE,OAAQA,EACRuC,KAAMxB,EACND,iBAAkBA,IAEpBX,EAAIS,eAAed,IAQvBW,EAAW+B,SAAW,WACpBrC,EAAIsC,kBAAkB3C,GACtBc,KAGFA,M","file":"draw-shapes.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport Polygon from '../src/ol/geom/Polygon.js';\nimport Draw, {createRegularPolygon, createBox} from '../src/ol/interaction/Draw.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\n\nconst raster = new TileLayer({\n  source: new OSM()\n});\n\nconst source = new VectorSource({wrapX: false});\n\nconst vector = new VectorLayer({\n  source: source\n});\n\nconst map = new Map({\n  layers: [raster, vector],\n  target: 'map',\n  view: new View({\n    center: [-11000000, 4600000],\n    zoom: 4\n  })\n});\n\nconst typeSelect = document.getElementById('type');\n\nlet draw; // global so we can remove it later\nfunction addInteraction() {\n  let value = typeSelect.value;\n  if (value !== 'None') {\n    let geometryFunction;\n    if (value === 'Square') {\n      value = 'Circle';\n      geometryFunction = createRegularPolygon(4);\n    } else if (value === 'Box') {\n      value = 'Circle';\n      geometryFunction = createBox();\n    } else if (value === 'Star') {\n      value = 'Circle';\n      geometryFunction = function(coordinates, geometry) {\n        const center = coordinates[0];\n        const last = coordinates[1];\n        const dx = center[0] - last[0];\n        const dy = center[1] - last[1];\n        const radius = Math.sqrt(dx * dx + dy * dy);\n        const rotation = Math.atan2(dy, dx);\n        const newCoordinates = [];\n        const numPoints = 12;\n        for (let i = 0; i < numPoints; ++i) {\n          const angle = rotation + i * 2 * Math.PI / numPoints;\n          const fraction = i % 2 === 0 ? 1 : 0.5;\n          const offsetX = radius * fraction * Math.cos(angle);\n          const offsetY = radius * fraction * Math.sin(angle);\n          newCoordinates.push([center[0] + offsetX, center[1] + offsetY]);\n        }\n        newCoordinates.push(newCoordinates[0].slice());\n        if (!geometry) {\n          geometry = new Polygon([newCoordinates]);\n        } else {\n          geometry.setCoordinates([newCoordinates]);\n        }\n        return geometry;\n      };\n    }\n    draw = new Draw({\n      source: source,\n      type: value,\n      geometryFunction: geometryFunction\n    });\n    map.addInteraction(draw);\n  }\n}\n\n\n/**\n * Handle change event.\n */\ntypeSelect.onchange = function() {\n  map.removeInteraction(draw);\n  addInteraction();\n};\n\naddInteraction();\n"],"sourceRoot":""}