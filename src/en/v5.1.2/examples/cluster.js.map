{"version":3,"sources":["webpack:///./cluster.js"],"names":["distance","document","getElementById","features","Array","e","i","const","coordinates","Math","random","_src_ol_Feature_js__WEBPACK_IMPORTED_MODULE_0__","_src_ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_3__","source","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_6__","clusterSource","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_7__","parseInt","value","styleCache","clusters","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_4__","style","feature","size","get","length","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_9__","image","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_10__","radius","stroke","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_11__","color","fill","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_12__","text","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_13__","toString","raster","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_5__","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_8__","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_1__","layers","target","view","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_2__","center","zoom","addEventListener","setDistance"],"mappings":"kGAcA,wHALMA,EAAWC,SAASC,eAAe,YAGnCC,EAAW,IAAIC,MADP,KAERC,EAAI,KACDC,EAAI,EAAGA,EAHF,MAGeA,EAAG,CAC9BC,IAAMC,GAAe,IAAQC,KAAKC,SAAWL,EAAG,IAAQI,KAAKC,SAAWL,GACxEF,EAASG,GAAK,IAAIK,EAAA,EAAQ,IAAIC,EAAA,EAAMJ,IAGtCD,IAAMM,EAAS,IAAIC,EAAA,GACjBX,SAAUA,IAGNY,EAAgB,IAAIC,EAAA,GACxBhB,SAAUiB,SAASjB,EAASkB,MAAO,IACnCL,OAAQA,IAGJM,KACAC,EAAW,IAAIC,EAAA,GACnBR,OAAQE,EACRO,MAAO,SAASC,GACdhB,IAAMiB,EAAOD,EAAQE,IAAI,YAAYC,OACjCJ,EAAQH,EAAWK,GAqBvB,OApBKF,IACHA,EAAQ,IAAIK,EAAA,GACVC,MAAO,IAAIC,EAAA,GACTC,OAAQ,GACRC,OAAQ,IAAIC,EAAA,GACVC,MAAO,SAETC,KAAM,IAAIC,EAAA,GACRF,MAAO,cAGXG,KAAM,IAAIC,EAAA,GACRD,KAAMZ,EAAKc,WACXJ,KAAM,IAAIC,EAAA,GACRF,MAAO,aAIbd,EAAWK,GAAQF,GAEdA,KAILiB,EAAS,IAAIC,EAAA,GACjB3B,OAAQ,IAAI4B,EAAA,IAGF,IAAIC,EAAA,GACdC,QAASJ,EAAQnB,GACjBwB,OAAQ,MACRC,KAAM,IAAIC,EAAA,GACRC,QAAS,EAAG,GACZC,KAAM,MAIVhD,EAASiD,iBAAiB,QAAS,WACjClC,EAAcmC,YAAYjC,SAASjB,EAASkB,MAAO","file":"cluster.js","sourcesContent":["import Feature from '../src/ol/Feature.js';\nimport Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport Point from '../src/ol/geom/Point.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {Cluster, OSM, Vector as VectorSource} from '../src/ol/source.js';\nimport {Circle as CircleStyle, Fill, Stroke, Style, Text} from '../src/ol/style.js';\n\n\nconst distance = document.getElementById('distance');\n\nconst count = 20000;\nconst features = new Array(count);\nconst e = 4500000;\nfor (let i = 0; i < count; ++i) {\n  const coordinates = [2 * e * Math.random() - e, 2 * e * Math.random() - e];\n  features[i] = new Feature(new Point(coordinates));\n}\n\nconst source = new VectorSource({\n  features: features\n});\n\nconst clusterSource = new Cluster({\n  distance: parseInt(distance.value, 10),\n  source: source\n});\n\nconst styleCache = {};\nconst clusters = new VectorLayer({\n  source: clusterSource,\n  style: function(feature) {\n    const size = feature.get('features').length;\n    let style = styleCache[size];\n    if (!style) {\n      style = new Style({\n        image: new CircleStyle({\n          radius: 10,\n          stroke: new Stroke({\n            color: '#fff'\n          }),\n          fill: new Fill({\n            color: '#3399CC'\n          })\n        }),\n        text: new Text({\n          text: size.toString(),\n          fill: new Fill({\n            color: '#fff'\n          })\n        })\n      });\n      styleCache[size] = style;\n    }\n    return style;\n  }\n});\n\nconst raster = new TileLayer({\n  source: new OSM()\n});\n\nconst map = new Map({\n  layers: [raster, clusters],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n\ndistance.addEventListener('input', function() {\n  clusterSource.setDistance(parseInt(distance.value, 10));\n});\n"],"sourceRoot":""}