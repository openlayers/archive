{"version":3,"sources":["webpack:///./modify-test.js"],"names":["styleFunction","const","styles","image","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_8__","radius","fill","stroke","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_9__","color","width","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_10__","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_11__","feature","getGeometry","getType","source","_src_ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_7__","features","_src_ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_2__","readFeatures","type","crs","properties","name","geometry","coordinates","geometries","layer","_src_ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_6__","style","overlayStyle","zIndex","concat","select","_src_ol_interaction_js__WEBPACK_IMPORTED_MODULE_3__","modify","_src_ol_interaction_js__WEBPACK_IMPORTED_MODULE_4__","getFeatures","insertVertexCondition","getArray","every","match","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","interactions","Object","_src_ol_interaction_js__WEBPACK_IMPORTED_MODULE_5__","extend","layers","target","view","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","center","zoom"],"mappings":"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","file":"modify-test.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport GeoJSON from '../src/ol/format/GeoJSON.js';\nimport {defaults as defaultInteractions, Modify, Select} from '../src/ol/interaction.js';\nimport VectorLayer from '../src/ol/layer/Vector.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport {Circle as CircleStyle, Fill, Stroke, Style} from '../src/ol/style.js';\n\n\nconst styleFunction = (function() {\n  const styles = {};\n  const image = new CircleStyle({\n    radius: 5,\n    fill: null,\n    stroke: new Stroke({color: 'orange', width: 2})\n  });\n  styles['Point'] = new Style({image: image});\n  styles['Polygon'] = new Style({\n    stroke: new Stroke({\n      color: 'blue',\n      width: 3\n    }),\n    fill: new Fill({\n      color: 'rgba(0, 0, 255, 0.1)'\n    })\n  });\n  styles['MultiLineString'] = new Style({\n    stroke: new Stroke({\n      color: 'green',\n      width: 3\n    })\n  });\n  styles['MultiPolygon'] = new Style({\n    stroke: new Stroke({\n      color: 'yellow',\n      width: 1\n    }),\n    fill: new Fill({\n      color: 'rgba(255, 255, 0, 0.1)'\n    })\n  });\n  styles['default'] = new Style({\n    stroke: new Stroke({\n      color: 'red',\n      width: 3\n    }),\n    fill: new Fill({\n      color: 'rgba(255, 0, 0, 0.1)'\n    }),\n    image: image\n  });\n  return function(feature) {\n    return styles[feature.getGeometry().getType()] || styles['default'];\n  };\n})();\n\nconst geojsonObject = {\n  'type': 'FeatureCollection',\n  'crs': {\n    'type': 'name',\n    'properties': {\n      'name': 'EPSG:3857'\n    }\n  },\n  'features': [{\n    'type': 'Feature',\n    'geometry': {\n      'type': 'Point',\n      'coordinates': [0, 0]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'MultiPoint',\n      'coordinates': [[-2e6, 0], [0, -2e6]]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'LineString',\n      'coordinates': [[4e6, -2e6], [8e6, 2e6], [9e6, 2e6]]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'LineString',\n      'coordinates': [[4e6, -2e6], [8e6, 2e6], [8e6, 3e6]]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'Polygon',\n      'coordinates': [[[-5e6, -1e6], [-4e6, 1e6],\n        [-3e6, -1e6], [-5e6, -1e6]], [[-4.5e6, -0.5e6],\n        [-3.5e6, -0.5e6], [-4e6, 0.5e6], [-4.5e6, -0.5e6]]]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'MultiLineString',\n      'coordinates': [\n        [[-1e6, -7.5e5], [-1e6, 7.5e5]],\n        [[-1e6, -7.5e5], [-1e6, 7.5e5], [-5e5, 0], [-1e6, -7.5e5]],\n        [[1e6, -7.5e5], [15e5, 0], [15e5, 0], [1e6, 7.5e5]],\n        [[-7.5e5, -1e6], [7.5e5, -1e6]],\n        [[-7.5e5, 1e6], [7.5e5, 1e6]]\n      ]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'MultiPolygon',\n      'coordinates': [\n        [[[-5e6, 6e6], [-5e6, 8e6], [-3e6, 8e6],\n          [-3e6, 6e6], [-5e6, 6e6]]],\n        [[[-3e6, 6e6], [-2e6, 8e6], [0, 8e6],\n          [0, 6e6], [-3e6, 6e6]]],\n        [[[1e6, 6e6], [1e6, 8e6], [3e6, 8e6],\n          [3e6, 6e6], [1e6, 6e6]]]\n      ]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'GeometryCollection',\n      'geometries': [{\n        'type': 'LineString',\n        'coordinates': [[-5e6, -5e6], [0, -5e6]]\n      }, {\n        'type': 'Point',\n        'coordinates': [4e6, -5e6]\n      }, {\n        'type': 'Polygon',\n        'coordinates': [\n          [[1e6, -6e6], [2e6, -4e6], [3e6, -6e6], [1e6, -6e6]]\n        ]\n      }]\n    }\n  }]\n};\n\nconst source = new VectorSource({\n  features: (new GeoJSON()).readFeatures(geojsonObject)\n});\n\nconst layer = new VectorLayer({\n  source: source,\n  style: styleFunction\n});\n\nconst overlayStyle = (function() {\n  const styles = {};\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: [255, 255, 255, 1],\n        width: 5\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: [0, 153, 255, 1],\n        width: 3\n      })\n    })\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: [255, 255, 255, 1],\n        width: 5\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: [0, 153, 255, 1],\n        width: 3\n      })\n    })\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: 7,\n        fill: new Fill({\n          color: [0, 153, 255, 1]\n        }),\n        stroke: new Stroke({\n          color: [255, 255, 255, 0.75],\n          width: 1.5\n        })\n      }),\n      zIndex: 100000\n    })\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(styles['Point']);\n\n  return function(feature) {\n    return styles[feature.getGeometry().getType()];\n  };\n})();\n\nconst select = new Select({\n  style: overlayStyle\n});\n\nconst modify = new Modify({\n  features: select.getFeatures(),\n  style: overlayStyle,\n  insertVertexCondition: function() {\n    // prevent new vertices to be added to the polygons\n    return !select.getFeatures().getArray().every(function(feature) {\n      return feature.getGeometry().getType().match(/Polygon/);\n    });\n  }\n});\n\nconst map = new Map({\n  interactions: defaultInteractions().extend([select, modify]),\n  layers: [layer],\n  target: 'map',\n  view: new View({\n    center: [0, 1000000],\n    zoom: 2\n  })\n});\n"],"sourceRoot":""}