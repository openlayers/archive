{"version":3,"file":"ol.js","sources":["../src/ol/util.js","../src/ol/AssertionError.js","../src/ol/CollectionEventType.js","../src/ol/ObjectEventType.js","../src/ol/obj.js","../src/ol/events.js","../src/ol/functions.js","../src/ol/Disposable.js","../src/ol/events/Event.js","../src/ol/events/EventTarget.js","../src/ol/events/EventType.js","../src/ol/Observable.js","../src/ol/Object.js","../src/ol/Collection.js","../src/ol/asserts.js","../src/ol/extent/Corner.js","../src/ol/extent/Relationship.js","../src/ol/extent.js","../src/ol/geom/flat/transform.js","../src/ol/math.js","../src/ol/geom/GeometryType.js","../src/ol/sphere.js","../src/ol/proj/Units.js","../src/ol/proj/Projection.js","../src/ol/proj/epsg3857.js","../src/ol/proj/epsg4326.js","../src/ol/proj/projections.js","../src/ol/proj/transforms.js","../src/ol/proj.js","../src/ol/transform.js","../src/ol/geom/Geometry.js","../src/ol/color.js","../src/ol/colorlike.js","../src/ol/dom.js","../src/ol/webgl.js","../src/ol/has.js","../src/ol/css.js","../src/ol/ImageState.js","../src/ol/structs/LRUCache.js","../src/ol/render/canvas.js","../src/ol/style/Image.js","../src/ol/style/RegularShape.js","../src/ol/style/Circle.js","../src/ol/style/Fill.js","../src/ol/style/Stroke.js","../src/ol/style/Style.js","../src/ol/Feature.js","../src/ol/GeolocationProperty.js","../src/ol/array.js","../src/ol/geom/GeometryLayout.js","../src/ol/geom/SimpleGeometry.js","../src/ol/geom/flat/area.js","../src/ol/geom/flat/closest.js","../src/ol/geom/flat/deflate.js","../src/ol/geom/flat/inflate.js","../src/ol/geom/flat/simplify.js","../src/ol/geom/LinearRing.js","../src/ol/geom/Point.js","../src/ol/geom/flat/contains.js","../src/ol/geom/flat/interiorpoint.js","../src/ol/geom/flat/segments.js","../src/ol/geom/flat/intersectsextent.js","../src/ol/geom/flat/reverse.js","../src/ol/geom/flat/orient.js","../src/ol/geom/Polygon.js","../src/ol/Geolocation.js","../src/ol/string.js","../src/ol/coordinate.js","../src/ol/geom/flat/interpolate.js","../src/ol/geom/flat/length.js","../src/ol/geom/LineString.js","../src/ol/geom/flat/geodesic.js","../src/ol/render/EventType.js","../src/ol/style/TextPlacement.js","../src/ol/style/Text.js","../src/ol/Graticule.js","../src/ol/ImageBase.js","../src/ol/Image.js","../src/ol/TileState.js","../src/ol/easing.js","../src/ol/Tile.js","../src/ol/ImageTile.js","../src/ol/Kinetic.js","../src/ol/MapEvent.js","../src/ol/MapBrowserEvent.js","../src/ol/MapBrowserEventType.js","../src/ol/MapBrowserPointerEvent.js","../src/ol/pointer/EventType.js","../src/ol/pointer/EventSource.js","../src/ol/pointer/MouseSource.js","../src/ol/pointer/MsSource.js","../src/ol/pointer/NativeSource.js","../src/ol/pointer/PointerEvent.js","../src/ol/pointer/TouchSource.js","../src/ol/pointer/PointerEventHandler.js","../src/ol/MapBrowserEventHandler.js","../src/ol/MapEventType.js","../src/ol/MapProperty.js","../src/ol/structs/PriorityQueue.js","../src/ol/TileQueue.js","../src/ol/tilegrid/common.js","../src/ol/centerconstraint.js","../src/ol/rotationconstraint.js","../src/ol/ViewHint.js","../src/ol/ViewProperty.js","../src/ol/View.js","../src/ol/resolutionconstraint.js","../src/ol/layer/Property.js","../src/ol/layer/Base.js","../src/ol/source/State.js","../src/ol/layer/Group.js","../src/ol/size.js","../src/ol/PluggableMap.js","../src/ol/control/Control.js","../src/ol/layer/Layer.js","../src/ol/control/Attribution.js","../src/ol/control/Rotate.js","../src/ol/control/Zoom.js","../src/ol/control/util.js","../src/ol/interaction/Property.js","../src/ol/interaction/Interaction.js","../src/ol/interaction/DoubleClickZoom.js","../src/ol/events/condition.js","../src/ol/interaction/Pointer.js","../src/ol/interaction/DragPan.js","../src/ol/interaction/DragRotate.js","../src/ol/render/Box.js","../src/ol/interaction/DragBox.js","../src/ol/interaction/DragZoom.js","../src/ol/events/KeyCode.js","../src/ol/interaction/KeyboardPan.js","../src/ol/interaction/KeyboardZoom.js","../src/ol/interaction/MouseWheelZoom.js","../src/ol/interaction/PinchRotate.js","../src/ol/interaction/PinchZoom.js","../src/ol/interaction/DragAndDrop.js","../src/ol/interaction/DragRotateAndZoom.js","../src/ol/geom/Circle.js","../src/ol/geom/MultiLineString.js","../src/ol/geom/MultiPoint.js","../src/ol/geom/flat/center.js","../src/ol/geom/MultiPolygon.js","../src/ol/LayerType.js","../src/ol/layer/VectorRenderType.js","../src/ol/layer/Vector.js","../src/ol/format/FormatType.js","../src/ol/featureloader.js","../src/ol/loadingstrategy.js","../src/ol/source/Source.js","../src/ol/source/VectorEventType.js","../node_modules/quickselect/quickselect.js","../node_modules/rbush/index.js","../src/ol/structs/RBush.js","../src/ol/source/Vector.js","../src/ol/interaction/Draw.js","../src/ol/interaction/Extent.js","../src/ol/interaction/Modify.js","../src/ol/interaction/Select.js","../src/ol/interaction/Snap.js","../src/ol/interaction/Translate.js","../src/ol/interaction.js","../src/ol/reproj/common.js","../src/ol/ImageCanvas.js","../src/ol/render/Event.js","../src/ol/render/VectorContext.js","../src/ol/render/canvas/Immediate.js","../src/ol/style/IconImageCache.js","../src/ol/renderer/Map.js","../src/ol/renderer/canvas/Map.js","../src/ol/renderer/Layer.js","../src/ol/renderer/canvas/Layer.js","../src/ol/renderer/canvas/IntermediateCanvas.js","../src/ol/renderer/canvas/ImageLayer.js","../src/ol/TileRange.js","../src/ol/renderer/canvas/TileLayer.js","../src/ol/render/ReplayGroup.js","../src/ol/render/ReplayType.js","../src/ol/geom/flat/textpath.js","../src/ol/render/canvas/Instruction.js","../src/ol/render/replay.js","../src/ol/render/canvas/Replay.js","../src/ol/render/canvas/ImageReplay.js","../src/ol/render/canvas/LineStringReplay.js","../src/ol/render/canvas/PolygonReplay.js","../src/ol/geom/flat/straightchunk.js","../src/ol/render/canvas/ReplayGroup.js","../src/ol/render/canvas/TextReplay.js","../src/ol/renderer/vector.js","../src/ol/renderer/canvas/VectorLayer.js","../src/ol/layer/VectorTileRenderType.js","../src/ol/renderer/canvas/VectorTileLayer.js","../src/ol/Map.js","../src/ol/control/FullScreen.js","../src/ol/OverlayPositioning.js","../src/ol/Overlay.js","../src/ol/VectorTile.js","../src/ol/control/OverviewMap.js","../src/ol/control/ScaleLine.js","../src/ol/control/ZoomSlider.js","../src/ol/control/ZoomToExtent.js","../src/ol/webgl/Shader.js","../src/ol/webgl/Fragment.js","../src/ol/webgl/Vertex.js","../src/ol/render/webgl/circlereplay/defaultshader.js","../src/ol/render/webgl/circlereplay/defaultshader/Locations.js","../src/ol/vec/mat4.js","../src/ol/render/webgl/Replay.js","../src/ol/render/webgl.js","../src/ol/webgl/Buffer.js","../src/ol/render/webgl/CircleReplay.js","../src/ol/render/webgl/texturereplay/defaultshader.js","../src/ol/render/webgl/texturereplay/defaultshader/Locations.js","../src/ol/webgl/ContextEventType.js","../src/ol/webgl/Context.js","../src/ol/render/webgl/TextureReplay.js","../src/ol/render/webgl/ImageReplay.js","../src/ol/geom/flat/topology.js","../src/ol/render/webgl/linestringreplay/defaultshader.js","../src/ol/render/webgl/linestringreplay/defaultshader/Locations.js","../src/ol/render/webgl/LineStringReplay.js","../src/ol/render/webgl/polygonreplay/defaultshader.js","../src/ol/render/webgl/polygonreplay/defaultshader/Locations.js","../src/ol/structs/LinkedList.js","../src/ol/render/webgl/PolygonReplay.js","../src/ol/style/Atlas.js","../src/ol/style/AtlasManager.js","../src/ol/render/webgl/TextReplay.js","../src/ol/render/webgl/ReplayGroup.js","../src/ol/render/webgl/Immediate.js","../src/ol/renderer/webgl/defaultmapshader.js","../src/ol/renderer/webgl/defaultmapshader/Locations.js","../src/ol/renderer/webgl/Layer.js","../src/ol/renderer/webgl/ImageLayer.js","../src/ol/renderer/webgl/Map.js","../src/ol/renderer/webgl/tilelayershader.js","../src/ol/renderer/webgl/tilelayershader/Locations.js","../src/ol/renderer/webgl/TileLayer.js","../src/ol/renderer/webgl/VectorLayer.js","../src/ol/WebGLMap.js","../src/ol/control/MousePosition.js","../src/ol/format/Feature.js","../src/ol/format/JSONFeature.js","../src/ol/format/EsriJSON.js","../src/ol/xml.js","../src/ol/format/XMLFeature.js","../src/ol/format/GMLBase.js","../src/ol/format/xsd.js","../src/ol/format/GML3.js","../src/ol/format/GML.js","../src/ol/format/GML2.js","../src/ol/format/GPX.js","../src/ol/geom/GeometryCollection.js","../src/ol/format/GeoJSON.js","../src/ol/format/TextFeature.js","../src/ol/format/IGC.js","../src/ol/style/IconAnchorUnits.js","../src/ol/style/IconImage.js","../src/ol/format/KML.js","../src/ol/style/IconOrigin.js","../src/ol/style/Icon.js","../node_modules/ieee754/index.js","../node_modules/pbf/index.js","../src/ol/render/Feature.js","../src/ol/format/MVT.js","../src/ol/format/OSMXML.js","../src/ol/geom/flat/flip.js","../src/ol/format/Polyline.js","../src/ol/format/TopoJSON.js","../src/ol/format/filter/Filter.js","../src/ol/format/filter/LogicalNary.js","../src/ol/format/filter/And.js","../src/ol/format/filter/Bbox.js","../src/ol/format/filter/Spatial.js","../src/ol/format/filter/Contains.js","../src/ol/format/filter/Comparison.js","../src/ol/format/filter/During.js","../src/ol/format/filter/ComparisonBinary.js","../src/ol/format/filter/EqualTo.js","../src/ol/format/filter/GreaterThan.js","../src/ol/format/filter/GreaterThanOrEqualTo.js","../src/ol/format/filter/Intersects.js","../src/ol/format/filter/IsBetween.js","../src/ol/format/filter/IsLike.js","../src/ol/format/filter/IsNull.js","../src/ol/format/filter/LessThan.js","../src/ol/format/filter/LessThanOrEqualTo.js","../src/ol/format/filter/Not.js","../src/ol/format/filter/NotEqualTo.js","../src/ol/format/filter/Or.js","../src/ol/format/filter/Within.js","../src/ol/format/filter.js","../src/ol/format/WFS.js","../src/ol/format/WKT.js","../src/ol/format/XLink.js","../src/ol/format/XML.js","../src/ol/format/WMSCapabilities.js","../src/ol/format/WMSGetFeatureInfo.js","../src/ol/format/OWS.js","../src/ol/format/WMTSCapabilities.js","../src/ol/layer/Heatmap.js","../src/ol/layer/Image.js","../src/ol/layer/TileProperty.js","../src/ol/layer/Tile.js","../src/ol/layer/VectorTile.js","../src/ol/tilecoord.js","../src/ol/tileurlfunction.js","../src/ol/net.js","../src/ol/TileCache.js","../src/ol/reproj.js","../src/ol/reproj/Triangulation.js","../src/ol/reproj/Tile.js","../src/ol/tilegrid/TileGrid.js","../src/ol/tilegrid.js","../src/ol/source/Tile.js","../src/ol/source/TileEventType.js","../src/ol/source/UrlTile.js","../src/ol/source/TileImage.js","../src/ol/source/BingMaps.js","../src/ol/source/XYZ.js","../src/ol/source/CartoDB.js","../src/ol/source/Cluster.js","../src/ol/reproj/Image.js","../src/ol/source/Image.js","../src/ol/uri.js","../src/ol/source/ImageArcGISRest.js","../src/ol/source/ImageMapGuide.js","../src/ol/source/common.js","../src/ol/source/WMSServerType.js","../src/ol/source/ImageWMS.js","../src/ol/source/OSM.js","../node_modules/pixelworks/lib/util.js","../node_modules/pixelworks/lib/processor.js","../src/ol/source/Raster.js","../src/ol/source/TileArcGISRest.js","../src/ol/source/TileJSON.js","../src/ol/source/TileWMS.js","../src/ol/source/UTFGrid.js","../src/ol/VectorImageTile.js","../src/ol/source/VectorTile.js","../src/ol/source/WMTSRequestEncoding.js","../src/ol/tilegrid/WMTS.js","../src/ol/source/WMTS.js","index.js","../src/ol/render.js"],"sourcesContent":["/**\n * @module ol/util\n */\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function module:ol.inherits\n * @deprecated\n * @api\n */\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {number} The unique ID for the object.\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = ++uidCounter_);\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION.split('-')[0];\n    const message = 'Assertion failed. See https://openlayers.org/en/' + path +\n    '/doc/errors/#' + code + ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n\n}\n\nexport default AssertionError;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection~CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection~CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object~ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  const output = Object(target);\n  for (let i = 1, ii = arguments.length; i < ii; ++i) {\n    const source = arguments[i];\n    if (source !== undefined && source !== null) {\n      for (const key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  const values = [];\n  for (const property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {module:ol/events~ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {module:ol/events~ListenerFunction} listener\n * @property {EventTarget|module:ol/events/EventTarget} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function(module:ol/events/Event)|function(module:ol/events/Event): boolean} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {module:ol/events~EventsKey} listenerObj Listener object.\n * @return {module:ol/events~ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  const boundListener = function(evt) {\n    const listener = listenerObj.listener;\n    const bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!module:ol/events~EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {module:ol/events~EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  let listenerObj;\n  for (let i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array.<module:ol/events~EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  const listenerMap = target.ol_lm;\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.  If one does not exist on the target, it is\n * created.\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @return {!Object.<string, Array.<module:ol/events~EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target) {\n  let listenerMap = target.ol_lm;\n  if (!listenerMap) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  const listeners = getListeners(target, type);\n  if (listeners) {\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      target.removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    const listenerMap = target.ol_lm;\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        delete target.ol_lm;\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {module:ol/events~EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  const listenerMap = getListenerMap(target);\n  let listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  let listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {module:ol/events~EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    target.addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {module:ol/events~EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  const listeners = getListeners(target, type);\n  if (listeners) {\n    const listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {module:ol/events~EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.boundListener);\n    const listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      const i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  const listenerMap = getListenerMap(target);\n  for (const type in listenerMap) {\n    removeListeners(target, type);\n  }\n}\n","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {undefined} Nothing.\n */\nexport function UNDEFINED() {}\n","/**\n * @module ol/Disposable\n */\nimport {UNDEFINED} from './functions.js';\n\n/**\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed_) {\n      this.disposed_ = true;\n      this.disposeInternal();\n    }\n  }\n}\n\n/**\n * The object has already been disposed.\n * @type {boolean}\n * @private\n */\nDisposable.prototype.disposed_ = false;\n\n/**\n * Extension point for disposable objects.\n * @protected\n */\nDisposable.prototype.disposeInternal = UNDEFINED;\nexport default Disposable;\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/EventTarget~EventTarget}.\n */\nclass Event {\n\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Stop event propagation.\n   * @function\n   * @api\n   */\n  preventDefault() {\n    this.propagationStopped = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @function\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n\n}\n\n\n/**\n * @param {Event|module:ol/events/Event} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|module:ol/events/Event} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n","/**\n * @module ol/events/EventTarget\n */\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {UNDEFINED} from '../functions.js';\nimport Event from '../events/Event.js';\n\n\n/**\n * @typedef {EventTarget|module:ol/events/EventTarget} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass EventTarget extends Disposable {\n  constructor() {\n\n    super();\n\n    /**\n     * @private\n     * @type {!Object.<string, number>}\n     */\n    this.pendingRemovals_ = {};\n\n    /**\n     * @private\n     * @type {!Object.<string, number>}\n     */\n    this.dispatching_ = {};\n\n    /**\n     * @private\n     * @type {!Object.<string, Array.<module:ol/events~ListenerFunction>>}\n     */\n    this.listeners_ = {};\n\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {module:ol/events~ListenerFunction} listener Listener.\n   */\n  addEventListener(type, listener) {\n    let listeners = this.listeners_[type];\n    if (!listeners) {\n      listeners = this.listeners_[type] = [];\n    }\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (EventTarget|module:ol/events/EventTarget|undefined)}|\n   *     module:ol/events/Event|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @function\n   * @api\n   */\n  dispatchEvent(event) {\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    evt.target = this;\n    const listeners = this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n      ++this.dispatching_[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --this.dispatching_[type];\n      if (this.dispatching_[type] === 0) {\n        let pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n        while (pendingRemovals--) {\n          this.removeEventListener(type, UNDEFINED);\n        }\n        delete this.dispatching_[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    unlistenAll(this);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array.<module:ol/events~ListenerFunction>} Listeners.\n   */\n  getListeners(type) {\n    return this.listeners_[type];\n  }\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this EventTarget has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    return opt_type ?\n      opt_type in this.listeners_ :\n      Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {module:ol/events~ListenerFunction} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = UNDEFINED;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\n\nexport default EventTarget;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n","/**\n * @module ol/Observable\n */\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires module:ol/events/Event~Event\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array.<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  on(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array.<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  once(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listenOnce(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listenOnce(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array.<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  un(type, listener) {\n    if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        unlisten(this, type[i], listener);\n      }\n      return;\n    } else {\n      unlisten(this, /** @type {string} */ (type), listener);\n    }\n  }\n}\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {module:ol/events~EventsKey} */ (key));\n  }\n}\n\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport {getUid} from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n  */\nclass ObjectEvent extends Event {\n\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires module:ol/Object~ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n\n  /**\n   * @param {Object.<string, *>=} opt_values An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {!Object.<string, *>}\n     */\n    this.values_ = {};\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array.<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return Object.keys(this.values_);\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object.<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return assign({}, this.values_);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    if (opt_silent) {\n      this.values_[key] = value;\n    } else {\n      const oldValue = this.values_[key];\n      this.values_[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object.<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\n\n/**\n * @type {Object.<string, string>}\n */\nconst changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\nexport default BaseObject;\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n\n  /**\n   * @param {module:ol/CollectionEventType} type Type.\n   * @param {*=} opt_element Element.\n   */\n  constructor(type, opt_element) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n  }\n\n}\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n\n  /**\n   * @param {Array.<T>=} opt_array Array.\n   * @param {module:ol/Collection~Options=} opt_options Collection options.\n   */\n  constructor(opt_array, opt_options) {\n\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array.<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array.<T>} arr Array.\n   * @return {module:ol/Collection.<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array.<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array.<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return /** @type {number} */ (this.get(Property.LENGTH));\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem));\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev));\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem));\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\n\nexport default Collection;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array.<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @return {module:ol/extent~Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array.<number>} xs Xs.\n * @param {Array.<number>} ys Ys.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @private\n * @return {module:ol/extent~Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {module:ol/extent~Extent} extent Extent to clone.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @return {module:ol/extent/Relationship} The relationship (bitwise compare with\n *     module:ol/extent/Relationship~Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {module:ol/extent~Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} rings Rings.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {module:ol/extent~Extent} extent1 The extent to be modified.\n * @param {module:ol/extent~Extent} extent2 The extent that will be included in the first.\n * @return {module:ol/extent~Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} rings Rings.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(this:T, module:ol/coordinate~Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  let val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/extent/Corner} corner Corner.\n * @return {module:ol/coordinate~Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return (\n    /** @type {!module:ol/coordinate~Coordinate} */ (coordinate)\n  );\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  const dx = resolution * size[0] / 2;\n  const dy = resolution * size[1] / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @param {module:ol/extent~Extent=} opt_extent Optional extent to populate with intersection.\n * @return {module:ol/extent~Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @return {module:ol/size~Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @param {module:ol/coordinate~Coordinate} start Segment start coordinate.\n * @param {module:ol/coordinate~Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/proj~TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  const coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  const xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  const ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array.<number>} anchor Rotation anchor point.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array.<number>} anchor Scale anchor point.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      const y = Math.exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array.<Array.<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array.<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {module:ol/geom/Geometry} geometry A geometry.\n * @param {module:ol/sphere~SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {module:ol/geom/Geometry} geometry A geometry.\n * @param {module:ol/sphere~SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {module:ol/coordinate~Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {module:ol/coordinate~Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  const lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object.<module:ol/proj/Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from '../proj/Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {module:ol/proj/Units|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {module:ol/extent~Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {module:ol/extent~Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, module:ol/coordinate~Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{module:ol/coordinate~Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nclass Projection {\n\n  /**\n   * @param {module:ol/proj/Projection~Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {module:ol/proj/Units}\n     */\n    this.units_ = /** @type {module:ol/proj/Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.worldExtent_ = options.worldExtent !== undefined ?\n      options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ = options.axisOrientation !== undefined ?\n      options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, module:ol/coordinate~Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {module:ol/tilegrid/TileGrid}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {module:ol/extent~Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {module:ol/proj/Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {module:ol/extent~Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {module:ol/tilegrid/TileGrid} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {module:ol/tilegrid/TileGrid} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {module:ol/extent~Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n   * for this projection.\n   * @param {function(number, module:ol/coordinate~Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, module:ol/coordinate~Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport {cosh} from '../math.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport const EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function(resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      }\n    });\n\n  }\n\n}\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array.<module:ol/proj/Projection>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array.<number>} input Input array of coordinate values.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array.<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  const halfSize = HALF_SIZE;\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    let y = RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array.<number>} input Input array of coordinate values.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array.<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n\n  /**\n   * @param {string} code Code.\n   * @param {string=} opt_axisOrientation Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT\n    });\n\n  }\n\n}\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array.<module:ol/proj/Projection>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object.<string, module:ol/proj/Projection>}\n */\nlet cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {module:ol/proj/Projection} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {module:ol/proj/Projection} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object.<string, Object.<string, module:ol/proj~TransformFunction>>}\n */\nlet transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {module:ol/proj/Projection} source Source.\n * @param {module:ol/proj/Projection} destination Destination.\n * @param {module:ol/proj~TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {module:ol/proj/Projection} source Source projection.\n * @param {module:ol/proj/Projection} destination Destination projection.\n * @return {module:ol/proj~TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {module:ol/proj~TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {module:ol/proj/Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array.<number>, Array.<number>=, number=): Array.<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\n\n/**\n * @param {Array.<number>} input Input coordinate array.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array.<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array.<number>} input Input coordinate array.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array.<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {module:ol/proj/Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array.<module:ol/proj/Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {module:ol/proj~ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {module:ol/proj/Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  let projection = null;\n  if (projectionLike instanceof Projection) {\n    projection = projectionLike;\n  } else if (typeof projectionLike === 'string') {\n    const code = projectionLike;\n    projection = projections.get(code);\n  }\n  return projection;\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {module:ol/proj~ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {module:ol/coordinate~Coordinate} point Point to find adjusted resolution at.\n * @param {module:ol/proj/Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    const units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      let vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      const metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array.<module:ol/proj/Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array.<module:ol/proj/Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array.<module:ol/proj/Projection>} projections2 Projections with equal\n *     meaning.\n * @param {module:ol/proj~TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {module:ol/proj~TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {module:ol/proj/Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {module:ol/proj/Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {module:ol/proj/Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} coordTransform Coordinate\n *     transform.\n * @return {module:ol/proj~TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array.<number>} input Input.\n     * @param {Array.<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array.<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {module:ol/proj~ProjectionLike} source Source projection.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {module:ol/proj~ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {module:ol/coordinate~Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {module:ol/coordinate~Coordinate} coordinate Projected coordinate.\n * @param {module:ol/proj~ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {module:ol/coordinate~Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {module:ol/proj/Projection} projection1 Projection 1.\n * @param {module:ol/proj/Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {module:ol/proj/Projection} sourceProjection Source Projection object.\n * @param {module:ol/proj/Projection} destinationProjection Destination Projection\n *     object.\n * @return {module:ol/proj~TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {module:ol/proj~ProjectionLike} source Source.\n * @param {module:ol/proj~ProjectionLike} destination Destination.\n * @return {module:ol/proj~TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/proj~ProjectionLike} source Source projection-like.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection-like.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {module:ol/extent~Extent} extent The extent to transform.\n * @param {module:ol/proj~ProjectionLike} source Source projection-like.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection-like.\n * @return {module:ol/extent~Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {module:ol/coordinate~Coordinate} point Point.\n * @param {module:ol/proj/Projection} sourceProjection Source projection.\n * @param {module:ol/proj/Projection} destinationProjection Destination projection.\n * @return {module:ol/coordinate~Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  const transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array.<number>} Transform\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {module:ol/transform~Transform}\n */\nconst tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!module:ol/transform~Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @return {!module:ol/transform~Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!module:ol/transform~Transform} transform1 Transform parameters of matrix 1.\n * @param {!module:ol/transform~Transform} transform2 Transform parameters of matrix 2.\n * @return {!module:ol/transform~Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!module:ol/transform~Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!module:ol/transform~Transform} transform1 Matrix to set transform to.\n * @param {!module:ol/transform~Transform} transform2 Matrix to set transform from.\n * @return {!module:ol/transform~Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {module:ol/transform~Transform} transform The transformation.\n * @param {module:ol/coordinate~Coordinate|module:ol/pixel~Pixel} coordinate The coordinate to transform.\n * @return {module:ol/coordinate~Coordinate|module:ol/pixel~Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!module:ol/transform~Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!module:ol/transform~Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n\n/**\n * Applies translation to the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!module:ol/transform~Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!module:ol/transform~Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!module:ol/transform~Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n\n/**\n * Invert the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @return {!module:ol/transform~Transform} Inverse of the transform.\n */\nexport function invert(transform) {\n  const det = determinant(transform);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = transform[0];\n  const b = transform[1];\n  const c = transform[2];\n  const d = transform[3];\n  const e = transform[4];\n  const f = transform[5];\n\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n\n  return transform;\n}\n\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!module:ol/transform~Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {FALSE} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {module:ol/transform~Transform}\n */\nconst tmpTransform = createTransform();\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n\n    super();\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {Object.<string, module:ol/geom/Geometry>}\n     */\n    this.simplifiedGeometryCache = {};\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!module:ol/geom/Geometry} Clone.\n   */\n  clone() {}\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {module:ol/coordinate~Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {}\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {module:ol/coordinate~Coordinate} point Point.\n   * @param {module:ol/coordinate~Coordinate=} opt_closestPoint Closest point.\n   * @return {module:ol/coordinate~Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @protected\n   * @return {module:ol/extent~Extent} extent Extent.\n   */\n  computeExtent(extent) {}\n\n  /**\n   * Get the extent of the geometry.\n   * @param {module:ol/extent~Extent=} opt_extent Extent.\n   * @return {module:ol/extent~Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      this.extent_ = this.computeExtent(this.extent_);\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {module:ol/coordinate~Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {}\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n   *     sx).\n   * @param {module:ol/coordinate~Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {}\n\n  /**\n   * Translate the geometry. This modifies the geometry coordinates in place.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {}\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the the {@link\n   * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n   * Douglas Peucker} algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @function\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {module:ol/geom/Geometry} A new, simplified version of the original\n   *     geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {module:ol/geom/Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {}\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {module:ol/geom/GeometryType} Geometry type.\n   */\n  getType() {}\n\n  /**\n   * Apply a transform function to each coordinate of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {module:ol/proj~TransformFunction} transformFn Transform.\n   */\n  applyTransform(transformFn) {}\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {}\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   */\n  translate(deltaX, deltaY) {}\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {module:ol/proj~ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {module:ol/proj~ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {module:ol/geom/Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    source = getProjection(source);\n    const transformFn = source.getUnits() == Units.TILE_PIXELS ?\n      function(inCoordinates, outCoordinates, stride) {\n        const pixelExtent = source.getExtent();\n        const projectedExtent = source.getWorldExtent();\n        const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform,\n          projectedExtent[0], projectedExtent[3],\n          scale, -scale, 0,\n          0, 0);\n        transform2D(inCoordinates, 0, inCoordinates.length, stride,\n          tmpTransform, outCoordinates);\n        return getTransform(source, destination)(inCoordinates, outCoordinates, stride);\n      } :\n      getTransform(source, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nGeometry.prototype.containsXY = FALSE;\n\n\nexport default Geometry;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array.<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {module:ol/color~Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {module:ol/color~Color} Color.\n */\nexport const fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    const MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object.<string, module:ol/color~Color>}\n     */\n    const cache = {};\n\n    /**\n     * @type {number}\n     */\n    let cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {module:ol/color~Color} Color.\n       */\n      function(s) {\n        let color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            let i = 0;\n            for (const key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {module:ol/color~Color|string} color Color.\n * @return {module:ol/color~Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(/** @type {string} */ (color));\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {module:ol/color~Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return (\n    /** @type {module:ol/color~Color} */ (color)\n  );\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {module:ol/color~Color} color Color.\n * @return {module:ol/color~Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {module:ol/color~Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @return {module:ol/colorlike~ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (isColorLike(color)) {\n    return /** @type {string|CanvasPattern|CanvasGradient} */ (color);\n  } else {\n    return toString(/** @type {module:ol/color~Color} */ (color));\n  }\n}\n\n\n/**\n * @param {?} color The value that is potentially an {@link ol/colorlike~ColorLike}.\n * @return {boolean} The color is an {@link ol/colorlike~ColorLike}.\n */\nexport function isColorLike(color) {\n  return (\n    typeof color === 'string' ||\n    color instanceof CanvasPattern ||\n    color instanceof CanvasGradient\n  );\n}\n","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  const canvas = /** @type {HTMLCanvasElement} */ (document.createElement('CANVAS'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n","/**\n * @module ol/webgl\n */\n\n\n/**\n * Constants taken from goog.webgl\n */\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ONE = 1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const SRC_ALPHA = 0x0302;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const COLOR_ATTACHMENT0 = 0x8CE0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const COLOR_BUFFER_BIT = 0x00004000;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TRIANGLES = 0x0004;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TRIANGLE_STRIP = 0x0005;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ONE_MINUS_SRC_ALPHA = 0x0303;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const STREAM_DRAW = 0x88E0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const STATIC_DRAW = 0x88E4;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DYNAMIC_DRAW = 0x88E8;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const CULL_FACE = 0x0B44;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const BLEND = 0x0BE2;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const STENCIL_TEST = 0x0B90;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEPTH_TEST = 0x0B71;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const SCISSOR_TEST = 0x0C11;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const RGBA = 0x1908;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const FRAGMENT_SHADER = 0x8B30;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const VERTEX_SHADER = 0x8B31;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const LINK_STATUS = 0x8B82;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const LINEAR = 0x2601;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_MAG_FILTER = 0x2800;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_MIN_FILTER = 0x2801;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_WRAP_S = 0x2802;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_WRAP_T = 0x2803;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_2D = 0x0DE1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE0 = 0x84C0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const CLAMP_TO_EDGE = 0x812F;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const COMPILE_STATUS = 0x8B81;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const FRAMEBUFFER = 0x8D40;\n\n\n/** end of goog.webgl constants\n */\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst CONTEXT_IDS = [\n  'experimental-webgl',\n  'webgl',\n  'webkit-3d',\n  'moz-webgl'\n];\n\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n\n/**\n * Include debuggable shader sources.  Default is `true`. This should be set to\n * `false` for production builds.\n * @type {boolean}\n */\nexport const DEBUG = true;\n\n\n/**\n * The maximum supported WebGL texture size in pixels. If WebGL is not\n * supported, the value is set to `undefined`.\n * @type {number|undefined}\n */\nlet MAX_TEXTURE_SIZE; // value is set below\n\n\n/**\n * List of supported WebGL extensions.\n * @type {Array.<string>}\n */\nlet EXTENSIONS; // value is set below\n\n\n/**\n * True if both OpenLayers and browser support WebGL.\n * @type {boolean}\n * @api\n */\nlet HAS = false;\n\n//TODO Remove side effects\nif (typeof window !== 'undefined' && 'WebGLRenderingContext' in window) {\n  try {\n    const canvas = /** @type {HTMLCanvasElement} */ (document.createElement('CANVAS'));\n    const gl = getContext(canvas, {failIfMajorPerformanceCaveat: true});\n    if (gl) {\n      HAS = true;\n      MAX_TEXTURE_SIZE = /** @type {number} */ (gl.getParameter(gl.MAX_TEXTURE_SIZE));\n      EXTENSIONS = gl.getSupportedExtensions();\n    }\n  } catch (e) {\n    // pass\n  }\n}\n\nexport {HAS, MAX_TEXTURE_SIZE, EXTENSIONS};\n","/**\n * @module ol/has\n */\n\nconst ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\nexport const CANVAS_LINE_DASH = function() {\n  let has = false;\n  try {\n    has = !!document.createElement('CANVAS').getContext('2d').setLineDash;\n  } catch (e) {\n    // pass\n  }\n  return has;\n}();\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport const GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport const TOUCH = 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport const POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport const MSPOINTER = !!(navigator.msPointerEnabled);\n\n\nexport {HAS as WEBGL} from './webgl.js';\n","/**\n * @module ol/css\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object.<string>} The font families (or null if the input spec is invalid).\n */\nexport const getFontFamilies = (function() {\n  let style;\n  const cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      const family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3\n};\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/EventTarget.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires module:ol/events/Event~Event\n * @template T\n */\nclass LRUCache extends EventTarget {\n\n  /**\n   * @param {number=} opt_highWaterMark High water mark.\n   */\n  constructor(opt_highWaterMark) {\n\n    super();\n\n    /**\n     * @type {number}\n     */\n    this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object.<string, module:ol/structs/LRUCache~Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?module:ol/structs/LRUCache~Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/structs/LRUCache~Entry}\n     */\n    this.newest_ = null;\n\n  }\n\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.getCount() > this.highWaterMark;\n  }\n\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n    this.dispatchEvent(EventType.CLEAR);\n  }\n\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n\n  /**\n   * @param {function(this: S, T, string, module:ol/structs/LRUCache): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   * @param {S=} opt_this The object to use as `this` in `f`.\n   * @template S\n   */\n  forEach(f, opt_this) {\n    let entry = this.oldest_;\n    while (entry) {\n      f.call(opt_this, entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n\n  /**\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  get(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined,\n      15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n\n  /**\n   * @return {Array.<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n\n  /**\n   * @return {Array.<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_),\n      16); // Tried to set a value for a key that is used already\n    const entry = /** @type {module:ol/structs/LRUCache~Entry} */ ({\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value\n    });\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n\n\n  /**\n   * Prune the cache.\n   */\n  prune() {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n}\n\nexport default LRUCache;\n","/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {module:ol/colorlike~ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {module:ol/colorlike~ColorLike} [currentFillStyle]\n * @property {module:ol/colorlike~ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array.<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {module:ol/colorlike~ColorLike} [fillStyle]\n * @property {module:ol/colorlike~ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array.<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array.<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {module:ol/colorlike~ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array.<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport const defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nexport const defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport const defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {module:ol/structs/LRUCache.<HTMLCanvasElement>}\n * @api\n */\nexport const labelCache = new LRUCache();\n\n\n/**\n * @type {!Object.<string, number>}\n */\nexport const checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n\n/**\n * @type {!Object.<string, number>}\n */\nexport const textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const checkFont = (function() {\n  const retries = 60;\n  const checked = checkedFonts;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  function isAvailable(font) {\n    const context = getMeasureContext();\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      context.font = size + referenceFont;\n      referenceWidth = context.measureText(text).width;\n      if (font != referenceFont) {\n        context.font = size + font + ',' + referenceFont;\n        const width = context.measureText(text).width;\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    return available;\n  }\n\n  function check() {\n    let done = true;\n    for (const font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    const fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (let i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      const fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {module:ol/size~Size} Measurement.\n */\nexport const measureTextHeight = (function() {\n  let span;\n  const heights = textHeights;\n  return function(font) {\n    let height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  const measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport const resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  let alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n","/**\n * @module ol/style/Image\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n * @property {boolean} snapToPixel\n */\n\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n */\nclass ImageStyle {\n  /**\n   * @param {module:ol/style/Image~Options} options Options.\n   * @api\n   */\n  constructor(options) {\n\n    /**\n    * @private\n    * @type {number}\n    */\n    this.opacity_ = options.opacity;\n\n    /**\n    * @private\n    * @type {boolean}\n    */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n    * @private\n    * @type {number}\n    */\n    this.rotation_ = options.rotation;\n\n    /**\n    * @private\n    * @type {number}\n    */\n    this.scale_ = options.scale;\n\n    /**\n    * @private\n    * @type {boolean}\n    */\n    this.snapToPixel_ = options.snapToPixel;\n\n  }\n\n  /**\n  * Get the symbolizer opacity.\n  * @return {number} Opacity.\n  * @api\n  */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n  * Determine whether the symbolizer rotates with the map.\n  * @return {boolean} Rotate with map.\n  * @api\n  */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n  * Get the symoblizer rotation.\n  * @return {number} Rotation.\n  * @api\n  */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n  * Get the symbolizer scale.\n  * @return {number} Scale.\n  * @api\n  */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n  * Determine whether the symbolizer should be snapped to a pixel.\n  * @return {boolean} The symbolizer should snap to a pixel.\n  * @api\n  */\n  getSnapToPixel() {\n    return this.snapToPixel_;\n  }\n\n  /**\n  * Get the anchor point in pixels. The anchor determines the center point for the\n  * symbolizer.\n  * @abstract\n  * @return {Array.<number>} Anchor.\n  */\n  getAnchor() {}\n\n  /**\n  * Get the image element for the symbolizer.\n  * @abstract\n  * @param {number} pixelRatio Pixel ratio.\n  * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n  */\n  getImage(pixelRatio) {}\n\n  /**\n  * @abstract\n  * @param {number} pixelRatio Pixel ratio.\n  * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n  */\n  getHitDetectionImage(pixelRatio) {}\n\n  /**\n  * @abstract\n  * @return {module:ol/ImageState} Image state.\n  */\n  getImageState() {}\n\n  /**\n  * @abstract\n  * @return {module:ol/size~Size} Image size.\n  */\n  getImageSize() {}\n\n  /**\n  * @abstract\n  * @return {module:ol/size~Size} Size of the hit-detection image.\n  */\n  getHitDetectionImageSize() {}\n\n  /**\n  * Get the origin of the symbolizer.\n  * @abstract\n  * @return {Array.<number>} Origin.\n  */\n  getOrigin() {}\n\n  /**\n  * Get the size of the symbolizer (in pixels).\n  * @abstract\n  * @return {module:ol/size~Size} Size.\n  */\n  getSize() {}\n\n  /**\n  * Set the opacity.\n  *\n  * @param {number} opacity Opacity.\n  * @api\n  */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n  * Set whether to rotate the style with the view.\n  *\n  * @param {boolean} rotateWithView Rotate with map.\n  * @api\n  */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n  * Set the rotation.\n  *\n  * @param {number} rotation Rotation.\n  * @api\n  */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n  * Set the scale.\n  *\n  * @param {number} scale Scale.\n  * @api\n  */\n  setScale(scale) {\n    this.scale_ = scale;\n  }\n\n  /**\n  * Set whether to snap the image to the closest pixel.\n  *\n  * @param {boolean} snapToPixel Snap to pixel?\n  * @api\n  */\n  setSnapToPixel(snapToPixel) {\n    this.snapToPixel_ = snapToPixel;\n  }\n\n  /**\n  * @abstract\n  * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n  * @param {T} thisArg Value to use as `this` when executing `listener`.\n  * @return {module:ol/events~EventsKey|undefined} Listener key.\n  * @template T\n  */\n  listenImageChange(listener, thisArg) {}\n\n  /**\n  * Load not yet loaded URI.\n  * @abstract\n  */\n  load() {}\n\n  /**\n  * @abstract\n  * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n  * @param {T} thisArg Value to use as `this` when executing `listener`.\n  * @template T\n  */\n  unlistenImageChange(listener, thisArg) {}\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {CANVAS_LINE_DASH} from '../has.js';\nimport ImageState from '../ImageState.js';\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\nimport ImageStyle from '../style/Image.js';\n\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {boolean} [snapToPixel=true] If `true` integral numbers of pixels are used as the X and Y pixel coordinate\n * when drawing the shape in the output canvas. If `false` fractional numbers may be used. Using `true` allows for\n * \"sharp\" rendering (no blur), while using `false` allows for \"accurate\" rendering. Note that accuracy is important if\n * the shape's position is animated. Without it, the shape may jitter noticeably.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {module:ol/style/AtlasManager} [atlasManager] The atlas manager to use for this symbol. When\n * using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given, the\n * symbol is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @typedef {Object} RenderOptions\n * @property {module:ol/colorlike~ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array.<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n\n\nclass RegularShape extends ImageStyle {\n  /**\n   * @classdesc\n   * Set regular shape style for vector features. The resulting shape will be\n   * a regular polygon when `radius` is provided, or a star when `radius1` and\n   * `radius2` are provided.\n   *\n   * @param {module:ol/style/RegularShape~Options} options Options.\n   * @api\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const snapToPixel = options.snapToPixel !== undefined ?\n      options.snapToPixel : true;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: 1,\n      snapToPixel: snapToPixel\n    });\n\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n    this.checksums_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/style/Fill}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n      options.radius : options.radius1);\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {module:ol/style/Stroke}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    /**\n     * @protected\n     * @type {module:ol/style/AtlasManager|undefined}\n     */\n    this.atlasManager_ = options.atlasManager;\n\n    this.render_(this.atlasManager_);\n\n  }\n\n  /**\n   * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n   * @return {module:ol/style/RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      snapToPixel: this.getSnapToPixel(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getAnchor() {\n    return this.anchor_;\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {module:ol/style/Fill} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getHitDetectionImage(pixelRatio) {\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.canvas_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImageSize() {\n    return this.imageSize_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getHitDetectionImageSize() {\n    return this.hitDetectionImageSize_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {module:ol/style/Stroke} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  listenImageChange(listener, thisArg) {}\n\n  /**\n   * @inheritDoc\n   */\n  load() {}\n\n  /**\n   * @inheritDoc\n   */\n  unlistenImageChange(listener, thisArg) {}\n\n  /**\n   * @protected\n   * @param {module:ol/style/AtlasManager|undefined} atlasManager An atlas manager.\n   */\n  render_(atlasManager) {\n    let imageSize;\n    let lineCap = '';\n    let lineJoin = '';\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      if (!CANVAS_LINE_DASH) {\n        lineDash = null;\n        lineDashOffset = 0;\n      }\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    let size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    /** @type {module:ol/style/RegularShape~RenderOptions} */\n    const renderOptions = {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit\n    };\n\n    if (atlasManager === undefined) {\n      // no atlas manager is used, create a new canvas\n      const context = createCanvasContext2D(size, size);\n      this.canvas_ = context.canvas;\n\n      // canvas.width and height are rounded to the closest integer\n      size = this.canvas_.width;\n      imageSize = size;\n\n      this.draw_(renderOptions, context, 0, 0);\n\n      this.createHitDetectionCanvas_(renderOptions);\n    } else {\n      // an atlas manager is used, add the symbol to an atlas\n      size = Math.round(size);\n\n      const hasCustomHitDetectionImage = !this.fill_;\n      let renderHitDetectionCallback;\n      if (hasCustomHitDetectionImage) {\n        // render the hit-detection image into a separate atlas image\n        renderHitDetectionCallback =\n            this.drawHitDetectionCanvas_.bind(this, renderOptions);\n      }\n\n      const id = this.getChecksum();\n      const info = atlasManager.add(\n        id, size, size, this.draw_.bind(this, renderOptions),\n        renderHitDetectionCallback);\n\n      this.canvas_ = info.image;\n      this.origin_ = [info.offsetX, info.offsetY];\n      imageSize = info.image.width;\n\n      if (hasCustomHitDetectionImage) {\n        this.hitDetectionCanvas_ = info.hitImage;\n        this.hitDetectionImageSize_ =\n            [info.hitImage.width, info.hitImage.height];\n      } else {\n        this.hitDetectionCanvas_ = this.canvas_;\n        this.hitDetectionImageSize_ = [imageSize, imageSize];\n      }\n    }\n\n    this.anchor_ = [size / 2, size / 2];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  }\n\n  /**\n   * @private\n   * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  draw_(renderOptions, context, x, y) {\n    let i, angle0, radiusC;\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      const radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  }\n\n  /**\n   * @private\n   * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    if (this.fill_) {\n      this.hitDetectionCanvas_ = this.canvas_;\n      return;\n    }\n\n    // if no fill style is set, create an extra hit-detection image with a\n    // default fill style\n    const context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n    this.hitDetectionCanvas_ = context.canvas;\n\n    this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n  }\n\n  /**\n   * @private\n   * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  drawHitDetectionCanvas_(renderOptions, context, x, y) {\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      const radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      let i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  }\n\n  /**\n   * @return {string} The checksum.\n   */\n  getChecksum() {\n    const strokeChecksum = this.stroke_ ?\n      this.stroke_.getChecksum() : '-';\n    const fillChecksum = this.fill_ ?\n      this.fill_.getChecksum() : '-';\n\n    const recalculate = !this.checksums_ ||\n        (strokeChecksum != this.checksums_[1] ||\n        fillChecksum != this.checksums_[2] ||\n        this.radius_ != this.checksums_[3] ||\n        this.radius2_ != this.checksums_[4] ||\n        this.angle_ != this.checksums_[5] ||\n        this.points_ != this.checksums_[6]);\n\n    if (recalculate) {\n      const checksum = 'r' + strokeChecksum + fillChecksum +\n          (this.radius_ !== undefined ? this.radius_.toString() : '-') +\n          (this.radius2_ !== undefined ? this.radius2_.toString() : '-') +\n          (this.angle_ !== undefined ? this.angle_.toString() : '-') +\n          (this.points_ !== undefined ? this.points_.toString() : '-');\n      this.checksums_ = [checksum, strokeChecksum, fillChecksum,\n        this.radius_, this.radius2_, this.angle_, this.points_];\n    }\n\n    return this.checksums_[0];\n  }\n}\n\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from '../style/RegularShape.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {boolean} [snapToPixel=true] If `true` integral numbers of pixels are used as the X and Y pixel coordinate\n * when drawing the circle in the output canvas. If `false` fractional numbers may be used. Using `true` allows for\n * \"sharp\" rendering (no blur), while using `false` allows for \"accurate\" rendering. Note that accuracy is important if\n * the circle's position is animated. Without it, the circle may jitter noticeably.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/AtlasManager} [atlasManager] The atlas manager to use for this circle.\n * When using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given,\n * the circle is added to an atlas. By default no atlas manager is used.\n */\n\n\nclass CircleStyle extends RegularShape {\n  /**\n   * @classdesc\n   * Set circle style for vector features.\n   *\n   * @param {module:ol/style/Circle~Options=} opt_options Options.\n   * @api\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      snapToPixel: options.snapToPixel,\n      stroke: options.stroke,\n      atlasManager: options.atlasManager\n    });\n\n  }\n\n  /**\n  * Clones the style.  If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n  * @return {module:ol/style/Circle} The cloned style.\n  * @override\n  * @api\n  */\n  clone() {\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      snapToPixel: this.getSnapToPixel(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  }\n\n  /**\n  * Set the circle radius.\n  *\n  * @param {number} radius Circle radius.\n  * @api\n  */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render_(this.atlasManager_);\n  }\n}\n\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\nimport {getUid} from '../util.js';\nimport {asString} from '../color.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/color~Color|module:ol/colorlike~ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n\n/**\n * @classdesc\n * Set fill style for vector features.\n */\nclass Fill {\n  /**\n   * @param {module:ol/style/Fill~Options=} opt_options Options.\n   * @api\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {module:ol/color~Color|module:ol/colorlike~ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.checksum_ = undefined;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {module:ol/style/Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: (color && color.slice) ? color.slice() : color || undefined\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {module:ol/color~Color|module:ol/colorlike~ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n    this.checksum_ = undefined;\n  }\n\n  /**\n   * @return {string} The checksum.\n   */\n  getChecksum() {\n    if (this.checksum_ === undefined) {\n      if (\n        this.color_ instanceof CanvasPattern ||\n          this.color_ instanceof CanvasGradient\n      ) {\n        this.checksum_ = getUid(this.color_).toString();\n      } else {\n        this.checksum_ = 'f' + (this.color_ ? asString(this.color_) : '-');\n      }\n    }\n\n    return this.checksum_;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\nimport {getUid} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/color~Color|module:ol/colorlike~ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array.<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n */\nclass Stroke {\n\n  /**\n   * @param {module:ol/style/Stroke~Options=} opt_options Options.\n   * @api\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {module:ol/color~Color|module:ol/colorlike~ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.checksum_ = undefined;\n  }\n\n  /**\n   * Clones the style.\n   * @return {module:ol/style/Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: (color && color.slice) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth()\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {module:ol/color~Color|module:ol/colorlike~ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {string|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array.<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {string|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n    this.checksum_ = undefined;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {string|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n    this.checksum_ = undefined;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array.<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n    this.checksum_ = undefined;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n    this.checksum_ = undefined;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {string|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n    this.checksum_ = undefined;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n    this.checksum_ = undefined;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n    this.checksum_ = undefined;\n  }\n\n  /**\n   * @return {string} The checksum.\n   */\n  getChecksum() {\n    if (this.checksum_ === undefined) {\n      this.checksum_ = 's';\n      if (this.color_) {\n        if (typeof this.color_ === 'string') {\n          this.checksum_ += this.color_;\n        } else {\n          this.checksum_ += getUid(this.color_).toString();\n        }\n      } else {\n        this.checksum_ += '-';\n      }\n      this.checksum_ += ',' +\n          (this.lineCap_ !== undefined ?\n            this.lineCap_.toString() : '-') + ',' +\n          (this.lineDash_ ?\n            this.lineDash_.toString() : '-') + ',' +\n          (this.lineDashOffset_ !== undefined ?\n            this.lineDashOffset_ : '-') + ',' +\n          (this.lineJoin_ !== undefined ?\n            this.lineJoin_ : '-') + ',' +\n          (this.miterLimit_ !== undefined ?\n            this.miterLimit_.toString() : '-') + ',' +\n          (this.width_ !== undefined ?\n            this.width_.toString() : '-');\n    }\n\n    return this.checksum_;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport {assert} from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from '../style/Circle.js';\nimport Fill from '../style/Fill.js';\nimport Stroke from '../style/Stroke.js';\n\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function((module:ol/Feature|module:ol/render/Feature), number):\n *     (module:ol/style/Style|Array.<module:ol/style/Style>)} StyleFunction\n */\n\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function((module:ol/Feature|module:ol/render/Feature)):\n *     (module:ol/geom/Geometry|module:ol/render/Feature|undefined)} GeometryFunction\n */\n\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((module:ol/coordinate~Coordinate|Array<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>),module:ol/render~State)}\n * RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {module:ol/style/Image} [image] Image style.\n * @property {module:ol/style/Style~RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/Text} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n */\nclass Style {\n\n  /**\n   * @param {module:ol/style/Style~Options=} opt_options Style options.\n   * @api\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!module:ol/style/Style~GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {module:ol/style/Fill}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n       * @private\n       * @type {module:ol/style/Image}\n       */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {module:ol/style/Style~RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {module:ol/style/Stroke}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {module:ol/style/Text}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n\n  }\n\n  /**\n   * Clones the style.\n   * @return {module:ol/style/Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && geometry.clone) {\n      geometry = geometry.clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex()\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {module:ol/style/Style~RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {module:ol/style/Style~RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!module:ol/style/Style~GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {module:ol/style/Fill} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {module:ol/style/Fill} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {module:ol/style/Image} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {module:ol/style/Image} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {module:ol/style/Stroke} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {module:ol/style/Stroke} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {module:ol/style/Text} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {module:ol/style/Text} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function(feature) {\n        return (\n          /** @type {module:ol/geom/Geometry} */ (feature.get(geometry))\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function() {\n        return (\n          /** @type {module:ol/geom/Geometry} */ (geometry)\n        );\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of module:ol/style/Style or single style objects wrapped in a\n * new style function.\n * @param {module:ol/style/Style~StyleFunction|Array.<module:ol/style/Style>|module:ol/style/Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {module:ol/style/Style~StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array.<module:ol/style/Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(obj instanceof Style,\n        41); // Expected an `module:ol/style/Style~Style` or an array of `module:ol/style/Style~Style`\n      styles = [obj];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n\n/**\n * @type {Array.<module:ol/style/Style>}\n */\nlet defaultStyles = null;\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/style/Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (module:ol/style/Circle~CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return defaultStyles;\n}\n\n\n/**\n * Default styles for editing features.\n * @return {Object.<module:ol/geom/GeometryType, Array.<module:ol/style/Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object.<module:ol/geom/GeometryType, Array.<module:ol/style/Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_POLYGON] =\n      styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] =\n      styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING]\n      );\n\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[GeometryType.MULTI_POINT] =\n      styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING],\n        styles[GeometryType.POINT]\n      );\n\n  return styles;\n}\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature to get the geometry for.\n * @return {module:ol/geom/Geometry|module:ol/render/Feature|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/Feature\n */\nimport {assert} from './asserts.js';\nimport {listen, unlisten, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport Geometry from './geom/Geometry.js';\nimport Style from './style/Style.js';\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n */\nclass Feature extends BaseObject {\n\n  /**\n   * @param {module:ol/geom/Geometry|Object.<string, *>=} opt_geometryOrProperties\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n\n    super();\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/style/Style~StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n\n    if (opt_geometryOrProperties !== undefined) {\n      if (opt_geometryOrProperties instanceof Geometry ||\n          !opt_geometryOrProperties) {\n        const geometry = opt_geometryOrProperties;\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object.<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {module:ol/Feature} The clone.\n   * @api\n   */\n  clone() {\n    const clone = new Feature(this.getProperties());\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {module:ol/geom/Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return (\n      /** @type {module:ol/geom/Geometry|undefined} */ (this.get(this.geometryName_))\n    );\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {module:ol/style/Style~StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(geometry,\n        EventType.CHANGE, this.handleGeometryChange_, this);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {module:ol/geom/Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature.  This can be a single style object, an array\n   * of styles, or a function that takes a resolution and returns an array of\n   * styles. If it is `null` the feature has no style (a `null` style).\n   * @param {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} style Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    unlisten(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.geometryName_ = name;\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.handleGeometryChanged_();\n  }\n}\n\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of module:ol/style/Style or single style objects wrapped\n * in a new feature style function.\n * @param {module:ol/style/Style~StyleFunction|!Array.<module:ol/style/Style>|!module:ol/style/Style} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {module:ol/style/Style~StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array.<module:ol/style/Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(obj instanceof Style,\n        41); // Expected an `module:ol/style/Style~Style` or an array of `module:ol/style/Style~Style`\n      styles = [obj];\n    }\n    return function() {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/GeolocationProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions'\n};\n","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array.<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array.<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array.<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array.<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to modify.\n * @param {!Array.<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<*>} arr The array to sort (modifies original).\n * @param {Function} compareFnc Comparison function.\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array.<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array.<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {FALSE} from '../functions.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from '../geom/flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n\n    super();\n\n    /**\n     * @protected\n     * @type {module:ol/geom/GeometryLayout}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array.<number>}\n     */\n    this.flatCoordinates = null;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n      0, this.flatCoordinates.length, this.stride, extent);\n  }\n\n  /**\n   * @abstract\n   * @return {Array} Coordinates.\n   */\n  getCoordinates() {}\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {module:ol/coordinate~Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array.<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {module:ol/coordinate~Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout~GeometryLayout layout} of the geometry.\n   * @return {module:ol/geom/GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    const key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      const simplifiedGeometry =\n          this.getSimplifiedGeometryInternal(squaredTolerance);\n      const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n      if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n        this.simplifiedGeometryCache[key] = simplifiedGeometry;\n        return simplifiedGeometry;\n      } else {\n        // Simplification did not actually remove any coordinates.  We now know\n        // that any calls to getSimplifiedGeometry with a squaredTolerance less\n        // than or equal to the current squaredTolerance will also not have any\n        // effect.  This allows us to short circuit simplification (saving CPU\n        // cycles) and prevents the cache of simplified geometries from filling\n        // up with useless identical copies of this geometry (saving memory).\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {module:ol/geom/SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {module:ol/geom/GeometryLayout} layout Layout.\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n    */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {}\n\n  /**\n   * @param {module:ol/geom/GeometryLayout|undefined} layout Layout.\n   * @param {Array} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n      this.changed();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n      this.changed();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n      this.changed();\n    }\n  }\n}\n\n\n/**\n * @param {number} stride Stride.\n * @return {module:ol/geom/GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {module:ol/geom/GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @inheritDoc\n */\nSimpleGeometry.prototype.containsXY = FALSE;\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} simpleGeometry Simple geometry.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array.<number>=} opt_ends Ends.\n * @return {Array.<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array.<Array.<number>>=} opt_endss Endss.\n * @return {Array.<Array.<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array.<module:ol/coordinate~Coordinate>=} opt_coordinates Coordinates.\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  const coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array.<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array.<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  const simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array.<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array.<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<Array.<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<Array.<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {linearRing as linearRingArea} from '../geom/flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {douglasPeucker} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n\n  /**\n   * @param {Array.<module:ol/coordinate~Coordinate>|Array.<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/LinearRing} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  intersectsExtent(extent) {}\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n}\n\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinate} from '../geom/flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/Point} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    return point;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {module:ol/coordinate~Coordinate} Coordinates.\n   * @override\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n}\n\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  const outside = forEachCorner(extent,\n    /**\n     * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from '../flat/contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array.<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array.<number>} flatCenters Flat centers.\n * @return {Array.<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, module:ol/coordinate~Coordinate, module:ol/coordinate~Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  const point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const point2 = [];\n  let ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from '../flat/contains.js';\nimport {forEach as forEachSegment} from '../flat/segments.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {module:ol/coordinate~Coordinate} point1 Start point.\n     * @param {module:ol/coordinate~Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from '../flat/reverse.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    const reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from '../geom/flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {linearRingsContainsXY} from '../geom/flat/contains.js';\nimport {deflateCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateCoordinatesArray} from '../geom/flat/inflate.js';\nimport {getInteriorPointOfArray} from '../geom/flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from '../geom/flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from '../geom/flat/orient.js';\nimport {quantizeArray} from '../geom/flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n\n  /**\n   * @param {!Array.<Array.<module:ol/coordinate~Coordinate>>|!Array.<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @param {Array.<number>=} opt_ends Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n\n    super();\n\n    /**\n     * @type {Array.<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {module:ol/geom/LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/Polygon} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(\n        flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(\n      flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array.<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array.<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n        flatCenter, 0);\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {module:ol/geom/Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {module:ol/geom/LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array.<module:ol/geom/LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array.<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingIsOriented(\n        flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRings(\n              this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {module:ol/coordinate~Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {module:ol/geom/Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {module:ol/extent~Extent} extent The extent.\n * @return {module:ol/geom/Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {module:ol/geom/Circle} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {module:ol/geom/Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n * @param {module:ol/coordinate~Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/Geolocation\n */\nimport GeolocationProperty from './GeolocationProperty.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport {listen} from './events.js';\nimport EventType from './events/EventType.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {GEOLOCATION} from './has.js';\nimport {toRadians} from './math.js';\nimport {get as getProjection, getTransformFromProjections, identityTransform} from './proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See http://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {module:ol/proj~ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](http://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes, register a listener for the generic\n * `change` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     var geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       window.console.log(geolocation.getPosition());\n *     });\n *\n * @fires error\n * @api\n */\nclass Geolocation extends BaseObject {\n\n  /**\n   * @param {module:ol/Geolocation~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * The unprojected (EPSG:4326) device position.\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.position_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/proj~TransformFunction}\n     */\n    this.transform_ = identityTransform;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.watchId_ = undefined;\n\n    listen(\n      this, getChangeEventType(GeolocationProperty.PROJECTION),\n      this.handleProjectionChanged_, this);\n    listen(\n      this, getChangeEventType(GeolocationProperty.TRACKING),\n      this.handleTrackingChanged_, this);\n\n    if (options.projection !== undefined) {\n      this.setProjection(options.projection);\n    }\n    if (options.trackingOptions !== undefined) {\n      this.setTrackingOptions(options.trackingOptions);\n    }\n\n    this.setTracking(options.tracking !== undefined ? options.tracking : false);\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    this.setTracking(false);\n    super.disposeInternal();\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    const projection = this.getProjection();\n    if (projection) {\n      this.transform_ = getTransformFromProjections(\n        getProjection('EPSG:4326'), projection);\n      if (this.position_) {\n        this.set(GeolocationProperty.POSITION, this.transform_(this.position_));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleTrackingChanged_() {\n    if (GEOLOCATION) {\n      const tracking = this.getTracking();\n      if (tracking && this.watchId_ === undefined) {\n        this.watchId_ = navigator.geolocation.watchPosition(\n          this.positionChange_.bind(this),\n          this.positionError_.bind(this),\n          this.getTrackingOptions());\n      } else if (!tracking && this.watchId_ !== undefined) {\n        navigator.geolocation.clearWatch(this.watchId_);\n        this.watchId_ = undefined;\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {Position} position position event.\n   */\n  positionChange_(position) {\n    const coords = position.coords;\n    this.set(GeolocationProperty.ACCURACY, coords.accuracy);\n    this.set(GeolocationProperty.ALTITUDE,\n      coords.altitude === null ? undefined : coords.altitude);\n    this.set(GeolocationProperty.ALTITUDE_ACCURACY,\n      coords.altitudeAccuracy === null ?\n        undefined : coords.altitudeAccuracy);\n    this.set(GeolocationProperty.HEADING, coords.heading === null ?\n      undefined : toRadians(coords.heading));\n    if (!this.position_) {\n      this.position_ = [coords.longitude, coords.latitude];\n    } else {\n      this.position_[0] = coords.longitude;\n      this.position_[1] = coords.latitude;\n    }\n    const projectedPosition = this.transform_(this.position_);\n    this.set(GeolocationProperty.POSITION, projectedPosition);\n    this.set(GeolocationProperty.SPEED,\n      coords.speed === null ? undefined : coords.speed);\n    const geometry = circularPolygon(this.position_, coords.accuracy);\n    geometry.applyTransform(this.transform_);\n    this.set(GeolocationProperty.ACCURACY_GEOMETRY, geometry);\n    this.changed();\n  }\n\n  /**\n   * Triggered when the Geolocation returns an error.\n   * @event error\n   * @api\n   */\n\n  /**\n   * @private\n   * @param {PositionError} error error object.\n   */\n  positionError_(error) {\n    error.type = EventType.ERROR;\n    this.setTracking(false);\n    this.dispatchEvent(/** @type {{type: string, target: undefined}} */ (error));\n  }\n\n  /**\n   * Get the accuracy of the position in meters.\n   * @return {number|undefined} The accuracy of the position measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAccuracy() {\n    return /** @type {number|undefined} */ (this.get(GeolocationProperty.ACCURACY));\n  }\n\n  /**\n   * Get a geometry of the position accuracy.\n   * @return {?module:ol/geom/Polygon} A geometry of the position accuracy.\n   * @observable\n   * @api\n   */\n  getAccuracyGeometry() {\n    return (\n      /** @type {?module:ol/geom/Polygon} */ (this.get(GeolocationProperty.ACCURACY_GEOMETRY) || null)\n    );\n  }\n\n  /**\n   * Get the altitude associated with the position.\n   * @return {number|undefined} The altitude of the position in meters above mean\n   *     sea level.\n   * @observable\n   * @api\n   */\n  getAltitude() {\n    return /** @type {number|undefined} */ (this.get(GeolocationProperty.ALTITUDE));\n  }\n\n  /**\n   * Get the altitude accuracy of the position.\n   * @return {number|undefined} The accuracy of the altitude measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAltitudeAccuracy() {\n    return /** @type {number|undefined} */ (this.get(GeolocationProperty.ALTITUDE_ACCURACY));\n  }\n\n  /**\n   * Get the heading as radians clockwise from North.\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n   * is set to `true` in the tracking options.\n   * @return {number|undefined} The heading of the device in radians from north.\n   * @observable\n   * @api\n   */\n  getHeading() {\n    return /** @type {number|undefined} */ (this.get(GeolocationProperty.HEADING));\n  }\n\n  /**\n   * Get the position of the device.\n   * @return {module:ol/coordinate~Coordinate|undefined} The current position of the device reported\n   *     in the current projection.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return (\n      /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(GeolocationProperty.POSITION))\n    );\n  }\n\n  /**\n   * Get the projection associated with the position.\n   * @return {module:ol/proj/Projection|undefined} The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return (\n      /** @type {module:ol/proj/Projection|undefined} */ (this.get(GeolocationProperty.PROJECTION))\n    );\n  }\n\n  /**\n   * Get the speed in meters per second.\n   * @return {number|undefined} The instantaneous speed of the device in meters\n   *     per second.\n   * @observable\n   * @api\n   */\n  getSpeed() {\n    return /** @type {number|undefined} */ (this.get(GeolocationProperty.SPEED));\n  }\n\n  /**\n   * Determine if the device location is being tracked.\n   * @return {boolean} The device location is being tracked.\n   * @observable\n   * @api\n   */\n  getTracking() {\n    return /** @type {boolean} */ (this.get(GeolocationProperty.TRACKING));\n  }\n\n  /**\n   * Get the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @return {PositionOptions|undefined} PositionOptions as defined by\n   *     the [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  getTrackingOptions() {\n    return /** @type {PositionOptions|undefined} */ (this.get(GeolocationProperty.TRACKING_OPTIONS));\n  }\n\n  /**\n   * Set the projection to use for transforming the coordinates.\n   * @param {module:ol/proj~ProjectionLike} projection The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(GeolocationProperty.PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * Enable or disable tracking.\n   * @param {boolean} tracking Enable tracking.\n   * @observable\n   * @api\n   */\n  setTracking(tracking) {\n    this.set(GeolocationProperty.TRACKING, tracking);\n  }\n\n  /**\n   * Set the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @param {PositionOptions} options PositionOptions as defined by the\n   *     [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  setTrackingOptions(options) {\n    this.set(GeolocationProperty.TRACKING_OPTIONS, options);\n  }\n}\n\n\nexport default Geolocation;\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  const numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array.<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((module:ol/coordinate~Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/coordinate~Coordinate} delta Delta.\n * @return {module:ol/coordinate~Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @param {module:ol/geom/Circle} circle The circle.\n * @return {module:ol/coordinate~Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + r * dx / d;\n  const y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @param {Array.<module:ol/coordinate~Coordinate>} segment The two coordinates\n * of the segment.\n * @return {module:ol/coordinate~Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {module:ol/coordinate~Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {module:ol/coordinate~CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coord1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coord1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate of the point.\n * @param {Array.<module:ol/coordinate~Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  let pointX = NaN;\n  let pointY = NaN;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] +\n        fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n        fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      const t = (target - cumulativeLengths[-index - 2]) /\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      const o = offset + (-index - 2) * stride;\n      pointX = lerp(\n        flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = lerp(\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\n      flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from '../geom/flat/interpolate.js';\nimport {intersectsLineString} from '../geom/flat/intersectsextent.js';\nimport {lineStringLength} from '../geom/flat/length.js';\nimport {forEach as forEachSegment} from '../geom/flat/segments.js';\nimport {douglasPeucker} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n\n  /**\n   * @param {Array.<module:ol/coordinate~Coordinate>|Array.<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n\n    super();\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/LineString} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    return new LineString(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, module:ol/coordinate~Coordinate, module:ol/coordinate~Coordinate): T} callback Function\n   *     called for each segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @return {module:ol/coordinate~Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(this.flatCoordinates, 0,\n      this.flatCoordinates.length, this.stride, m, extrapolate);\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {module:ol/coordinate~Coordinate=} opt_dest Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {module:ol/coordinate~Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      fraction, opt_dest);\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  }\n\n  /**\n   * @return {Array.<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      extent);\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n}\n\n\nexport default LineString;\n","/**\n * @module ol/geom/flat/geodesic\n */\nimport {squaredSegmentDistance, toRadians, toDegrees} from '../../math.js';\nimport {get as getProjection, getTransform} from '../../proj.js';\n\n\n/**\n * @param {function(number): module:ol/coordinate~Coordinate} interpolate Interpolate function.\n * @param {module:ol/proj~TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array.<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n  // FIXME reduce garbage generation\n  // FIXME optimize stack operations\n\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n\n  let geoA = interpolate(0);\n  let geoB = interpolate(1);\n\n  let a = transform(geoA);\n  let b = transform(geoB);\n\n  /** @type {Array.<module:ol/coordinate~Coordinate>} */\n  const geoStack = [geoB, geoA];\n  /** @type {Array.<module:ol/coordinate~Coordinate>} */\n  const stack = [b, a];\n  /** @type {Array.<number>} */\n  const fractionStack = [1, 0];\n\n  /** @type {!Object.<string, boolean>} */\n  const fractions = {};\n\n  let maxIterations = 1e5;\n  let geoM, m, fracA, fracB, fracM, key;\n\n  while (--maxIterations > 0 && fractionStack.length > 0) {\n    // Pop the a coordinate off the stack\n    fracA = fractionStack.pop();\n    geoA = geoStack.pop();\n    a = stack.pop();\n    // Add the a coordinate if it has not been added yet\n    key = fracA.toString();\n    if (!(key in fractions)) {\n      flatCoordinates.push(a[0], a[1]);\n      fractions[key] = true;\n    }\n    // Pop the b coordinate off the stack\n    fracB = fractionStack.pop();\n    geoB = geoStack.pop();\n    b = stack.pop();\n    // Find the m point between the a and b coordinates\n    fracM = (fracA + fracB) / 2;\n    geoM = interpolate(fracM);\n    m = transform(geoM);\n    if (squaredSegmentDistance(m[0], m[1], a[0], a[1],\n      b[0], b[1]) < squaredTolerance) {\n      // If the m point is sufficiently close to the straight line, then we\n      // discard it.  Just use the b coordinate and move on to the next line\n      // segment.\n      flatCoordinates.push(b[0], b[1]);\n      key = fracB.toString();\n      fractions[key] = true;\n    } else {\n      // Otherwise, we need to subdivide the current line segment.  Split it\n      // into two and push the two line segments onto the stack.\n      fractionStack.push(fracB, fracM, fracM, fracA);\n      stack.push(b, m, m, a);\n      geoStack.push(geoB, geoM, geoM, geoA);\n    }\n  }\n\n  return flatCoordinates;\n}\n\n\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array.<number>} Flat coordinates.\n */\nexport function greatCircleArc(lon1, lat1, lon2, lat2, projection, squaredTolerance) {\n  const geoProjection = getProjection('EPSG:4326');\n\n  const cosLat1 = Math.cos(toRadians(lat1));\n  const sinLat1 = Math.sin(toRadians(lat1));\n  const cosLat2 = Math.cos(toRadians(lat2));\n  const sinLat2 = Math.sin(toRadians(lat2));\n  const cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n  const sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n  const d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {module:ol/coordinate~Coordinate} Coordinate.\n     */\n    function(frac) {\n      if (1 <= d) {\n        return [lon2, lat2];\n      }\n      const D = frac * Math.acos(d);\n      const cosD = Math.cos(D);\n      const sinD = Math.sin(D);\n      const y = sinDeltaLon * cosLat2;\n      const x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n      const theta = Math.atan2(y, x);\n      const lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n      const lon = toRadians(lon1) +\n            Math.atan2(Math.sin(theta) * sinD * cosLat1,\n              cosD - sinLat1 * Math.sin(lat));\n      return [toDegrees(lon), toDegrees(lat)];\n    }, getTransform(geoProjection, projection), squaredTolerance);\n}\n\n\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array.<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {module:ol/coordinate~Coordinate} Coordinate.\n     */\n    function(frac) {\n      return [lon, lat1 + ((lat2 - lat1) * frac)];\n    },\n    getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n\n\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array.<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {module:ol/coordinate~Coordinate} Coordinate.\n     */\n    function(frac) {\n      return [lon1 + ((lon2 - lon1) * frac), lat];\n    },\n    getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#render\n   * @api\n   */\n  RENDER: 'render'\n};\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {module:ol/style/TextPlacement|string} [placement] Text placement.\n * @property {number} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {module:ol/style/Fill} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/Fill} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {module:ol/style/Stroke} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array.<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n\n/**\n * @classdesc\n * Set text style for vector features.\n */\nclass Text {\n\n  /**\n   * @param {module:ol/style/Text~Options=} opt_options Options.\n   * @api\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    /**\n    * @private\n    * @type {string|undefined}\n    */\n    this.font_ = options.font;\n\n    /**\n    * @private\n    * @type {number|undefined}\n    */\n    this.rotation_ = options.rotation;\n\n    /**\n    * @private\n    * @type {boolean|undefined}\n    */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n    * @private\n    * @type {number|undefined}\n    */\n    this.scale_ = options.scale;\n\n    /**\n    * @private\n    * @type {string|undefined}\n    */\n    this.text_ = options.text;\n\n    /**\n    * @private\n    * @type {string|undefined}\n    */\n    this.textAlign_ = options.textAlign;\n\n    /**\n    * @private\n    * @type {string|undefined}\n    */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n    * @private\n    * @type {module:ol/style/Fill}\n    */\n    this.fill_ = options.fill !== undefined ? options.fill :\n      new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n    * @private\n    * @type {number}\n    */\n    this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n    * @private\n    * @type {module:ol/style/TextPlacement|string}\n    */\n    this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n    /**\n    * @private\n    * @type {boolean}\n    */\n    this.overflow_ = !!options.overflow;\n\n    /**\n    * @private\n    * @type {module:ol/style/Stroke}\n    */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n    * @private\n    * @type {number}\n    */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n    * @private\n    * @type {number}\n    */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n    * @private\n    * @type {module:ol/style/Fill}\n    */\n    this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n    /**\n    * @private\n    * @type {module:ol/style/Stroke}\n    */\n    this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n    /**\n    * @private\n    * @type {Array.<number>}\n    */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n  * Clones the style.\n  * @return {module:ol/style/Text} The cloned style.\n  * @api\n  */\n  clone() {\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: this.getScale(),\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n      backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n    });\n  }\n\n  /**\n  * Get the `overflow` configuration.\n  * @return {boolean} Let text overflow the length of the path they follow.\n  * @api\n  */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n  * Get the font name.\n  * @return {string|undefined} Font.\n  * @api\n  */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n  * Get the maximum angle between adjacent characters.\n  * @return {number} Angle in radians.\n  * @api\n  */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n  * Get the label placement.\n  * @return {module:ol/style/TextPlacement|string} Text placement.\n  * @api\n  */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n  * Get the x-offset for the text.\n  * @return {number} Horizontal text offset.\n  * @api\n  */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n  * Get the y-offset for the text.\n  * @return {number} Vertical text offset.\n  * @api\n  */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n  * Get the fill style for the text.\n  * @return {module:ol/style/Fill} Fill style.\n  * @api\n  */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n  * Determine whether the text rotates with the map.\n  * @return {boolean|undefined} Rotate with map.\n  * @api\n  */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n  * Get the text rotation.\n  * @return {number|undefined} Rotation.\n  * @api\n  */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n  * Get the text scale.\n  * @return {number|undefined} Scale.\n  * @api\n  */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n  * Get the stroke style for the text.\n  * @return {module:ol/style/Stroke} Stroke style.\n  * @api\n  */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n  * Get the text to be rendered.\n  * @return {string|undefined} Text.\n  * @api\n  */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n  * Get the text alignment.\n  * @return {string|undefined} Text align.\n  * @api\n  */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n  * Get the text baseline.\n  * @return {string|undefined} Text baseline.\n  * @api\n  */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n  * Get the background fill style for the text.\n  * @return {module:ol/style/Fill} Fill style.\n  * @api\n  */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n  * Get the background stroke style for the text.\n  * @return {module:ol/style/Stroke} Stroke style.\n  * @api\n  */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n  * Get the padding for the text.\n  * @return {Array.<number>} Padding.\n  * @api\n  */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n  * Set the `overflow` property.\n  *\n  * @param {boolean} overflow Let text overflow the path that it follows.\n  * @api\n  */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n  * Set the font.\n  *\n  * @param {string|undefined} font Font.\n  * @api\n  */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n  * Set the maximum angle between adjacent characters.\n  *\n  * @param {number} maxAngle Angle in radians.\n  * @api\n  */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n  * Set the x offset.\n  *\n  * @param {number} offsetX Horizontal text offset.\n  * @api\n  */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n  * Set the y offset.\n  *\n  * @param {number} offsetY Vertical text offset.\n  * @api\n  */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n  * Set the text placement.\n  *\n  * @param {module:ol/style/TextPlacement|string} placement Placement.\n  * @api\n  */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n  * Set the fill.\n  *\n  * @param {module:ol/style/Fill} fill Fill style.\n  * @api\n  */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n  * Set the rotation.\n  *\n  * @param {number|undefined} rotation Rotation.\n  * @api\n  */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n  * Set the scale.\n  *\n  * @param {number|undefined} scale Scale.\n  * @api\n  */\n  setScale(scale) {\n    this.scale_ = scale;\n  }\n\n  /**\n  * Set the stroke.\n  *\n  * @param {module:ol/style/Stroke} stroke Stroke style.\n  * @api\n  */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n  * Set the text.\n  *\n  * @param {string|undefined} text Text.\n  * @api\n  */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n  * Set the text alignment.\n  *\n  * @param {string|undefined} textAlign Text align.\n  * @api\n  */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n  * Set the text baseline.\n  *\n  * @param {string|undefined} textBaseline Text baseline.\n  * @api\n  */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n  * Set the background fill.\n  *\n  * @param {module:ol/style/Fill} fill Fill style.\n  * @api\n  */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n  * Set the background stroke.\n  *\n  * @param {module:ol/style/Stroke} stroke Stroke style.\n  * @api\n  */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n  * Set the padding (`[top, right, bottom, left]`).\n  *\n  * @param {!Array.<number>} padding Padding.\n  * @api\n  */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/Graticule\n */\nimport {degreesToStringHDMS} from './coordinate.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {intersects, getCenter} from './extent.js';\nimport GeometryLayout from './geom/GeometryLayout.js';\nimport LineString from './geom/LineString.js';\nimport Point from './geom/Point.js';\nimport {meridian, parallel} from './geom/flat/geodesic.js';\nimport {clamp} from './math.js';\nimport {get as getProjection, equivalent as equivalentProjection, getTransform, transformExtent} from './proj.js';\nimport RenderEventType from './render/EventType.js';\nimport Fill from './style/Fill.js';\nimport Stroke from './style/Stroke.js';\nimport Text from './style/Text.js';\n\n\n/**\n * @type {module:ol/style/Stroke}\n * @private\n * @const\n */\nconst DEFAULT_STROKE_STYLE = new Stroke({\n  color: 'rgba(0,0,0,0.2)'\n});\n\n/**\n * TODO can be configurable\n * @type {Array.<number>}\n * @private\n */\nconst INTERVALS = [\n  90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001\n];\n\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {module:ol/geom/Point} geom\n * @property {string} text\n */\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/PluggableMap} [map] Reference to an\n * {@link module:ol/Map~Map} object.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {module:ol/style/Stroke} [strokeStyle='rgba(0,0,0,0.2)'] The\n * stroke style to use for drawing the graticule. If not provided, a not fully\n * opaque black will be used.\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {module:ol/style/Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {module:ol/style/Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n */\n\n\n/**\n * Render a grid for a coordinate system on a map.\n * @api\n */\nclass Graticule {\n\n  /**\n   * @param {module:ol/Graticule~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {module:ol/PluggableMap}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {?module:ol/events~EventsKey}\n     * @private\n     */\n    this.postcomposeListenerKey_ = null;\n\n    /**\n     * @type {module:ol/proj/Projection}\n     */\n    this.projection_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLat_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLon_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLat_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLon_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLatP_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLonP_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLatP_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLonP_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.targetSize_ = options.targetSize !== undefined ? options.targetSize : 100;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n\n    /**\n     * @type {Array.<module:ol/geom/LineString>}\n     * @private\n     */\n    this.meridians_ = [];\n\n    /**\n     * @type {Array.<module:ol/geom/LineString>}\n     * @private\n     */\n    this.parallels_ = [];\n\n    /**\n     * @type {module:ol/style/Stroke}\n     * @private\n     */\n    this.strokeStyle_ = options.strokeStyle !== undefined ? options.strokeStyle : DEFAULT_STROKE_STYLE;\n\n    /**\n     * @type {module:ol/proj~TransformFunction|undefined}\n     * @private\n     */\n    this.fromLonLatTransform_ = undefined;\n\n    /**\n     * @type {module:ol/proj~TransformFunction|undefined}\n     * @private\n     */\n    this.toLonLatTransform_ = undefined;\n\n    /**\n     * @type {module:ol/coordinate~Coordinate}\n     * @private\n     */\n    this.projectionCenterLonLat_ = null;\n\n    /**\n     * @type {Array.<module:ol/Graticule~GraticuleLabelDataType>}\n     * @private\n     */\n    this.meridiansLabels_ = null;\n\n    /**\n     * @type {Array.<module:ol/Graticule~GraticuleLabelDataType>}\n     * @private\n     */\n    this.parallelsLabels_ = null;\n\n    if (options.showLabels == true) {\n\n      /**\n       * @type {null|function(number):string}\n       * @private\n       */\n      this.lonLabelFormatter_ = options.lonLabelFormatter == undefined ?\n        degreesToStringHDMS.bind(this, 'EW') : options.lonLabelFormatter;\n\n      /**\n       * @type {function(number):string}\n       * @private\n       */\n      this.latLabelFormatter_ = options.latLabelFormatter == undefined ?\n        degreesToStringHDMS.bind(this, 'NS') : options.latLabelFormatter;\n\n      /**\n       * Longitude label position in fractions (0..1) of view extent. 0 means\n       * bottom, 1 means top.\n       * @type {number}\n       * @private\n       */\n      this.lonLabelPosition_ = options.lonLabelPosition == undefined ? 0 :\n        options.lonLabelPosition;\n\n      /**\n       * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n       * means right.\n       * @type {number}\n       * @private\n       */\n      this.latLabelPosition_ = options.latLabelPosition == undefined ? 1 :\n        options.latLabelPosition;\n\n      /**\n       * @type {module:ol/style/Text}\n       * @private\n       */\n      this.lonLabelStyle_ = options.lonLabelStyle !== undefined ? options.lonLabelStyle :\n        new Text({\n          font: '12px Calibri,sans-serif',\n          textBaseline: 'bottom',\n          fill: new Fill({\n            color: 'rgba(0,0,0,1)'\n          }),\n          stroke: new Stroke({\n            color: 'rgba(255,255,255,1)',\n            width: 3\n          })\n        });\n\n      /**\n       * @type {module:ol/style/Text}\n       * @private\n       */\n      this.latLabelStyle_ = options.latLabelStyle !== undefined ? options.latLabelStyle :\n        new Text({\n          font: '12px Calibri,sans-serif',\n          textAlign: 'end',\n          fill: new Fill({\n            color: 'rgba(0,0,0,1)'\n          }),\n          stroke: new Stroke({\n            color: 'rgba(255,255,255,1)',\n            width: 3\n          })\n        });\n\n      this.meridiansLabels_ = [];\n      this.parallelsLabels_ = [];\n    }\n\n    this.setMap(options.map !== undefined ? options.map : null);\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, index) {\n    const lineString = this.getMeridian_(lon, minLat, maxLat, squaredTolerance, index);\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.meridiansLabels_) {\n        const textPoint = this.getMeridianPoint_(lineString, extent, index);\n        this.meridiansLabels_[index] = {\n          geom: textPoint,\n          text: this.lonLabelFormatter_(lon)\n        };\n      }\n      this.meridians_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {module:ol/geom/LineString} lineString Meridian\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {module:ol/geom/Point} Meridian point.\n   * @private\n   */\n  getMeridianPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    const clampedBottom = Math.max(extent[1], flatCoordinates[1]);\n    const clampedTop = Math.min(extent[3], flatCoordinates[flatCoordinates.length - 1]);\n    const lat = clamp(\n      extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\n      clampedBottom, clampedTop);\n    const coordinate = [flatCoordinates[0], lat];\n    let point;\n    if (index in this.meridiansLabels_) {\n      point = this.meridiansLabels_[index];\n      point.setCoordinates(coordinate);\n    } else {\n      point = new Point(coordinate);\n    }\n    return point;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addParallel_(lat, minLon, maxLon, squaredTolerance, extent, index) {\n    const lineString = this.getParallel_(lat, minLon, maxLon, squaredTolerance, index);\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.parallelsLabels_) {\n        const textPoint = this.getParallelPoint_(lineString, extent, index);\n        this.parallelsLabels_[index] = {\n          geom: textPoint,\n          text: this.latLabelFormatter_(lat)\n        };\n      }\n      this.parallels_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {module:ol/geom/LineString} lineString Parallels.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {module:ol/geom/Point} Parallel point.\n   * @private\n   */\n  getParallelPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    const clampedLeft = Math.max(extent[0], flatCoordinates[0]);\n    const clampedRight = Math.min(extent[2], flatCoordinates[flatCoordinates.length - 2]);\n    const lon = clamp(\n      extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\n      clampedLeft, clampedRight);\n    const coordinate = [lon, flatCoordinates[1]];\n    let point;\n    if (index in this.parallelsLabels_) {\n      point = this.parallelsLabels_[index];\n      point.setCoordinates(coordinate);\n    } else {\n      point = new Point(coordinate);\n    }\n    return point;\n  }\n\n  /**\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {module:ol/coordinate~Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @private\n   */\n  createGraticule_(extent, center, resolution, squaredTolerance) {\n\n    const interval = this.getInterval_(resolution);\n    if (interval == -1) {\n      this.meridians_.length = this.parallels_.length = 0;\n      if (this.meridiansLabels_) {\n        this.meridiansLabels_.length = 0;\n      }\n      if (this.parallelsLabels_) {\n        this.parallelsLabels_.length = 0;\n      }\n      return;\n    }\n\n    const centerLonLat = this.toLonLatTransform_(center);\n    let centerLon = centerLonLat[0];\n    let centerLat = centerLonLat[1];\n    const maxLines = this.maxLines_;\n    let cnt, idx, lat, lon;\n\n    let validExtent = [\n      Math.max(extent[0], this.minLonP_),\n      Math.max(extent[1], this.minLatP_),\n      Math.min(extent[2], this.maxLonP_),\n      Math.min(extent[3], this.maxLatP_)\n    ];\n\n    validExtent = transformExtent(validExtent, this.projection_, 'EPSG:4326');\n    const maxLat = validExtent[3];\n    const maxLon = validExtent[2];\n    const minLat = validExtent[1];\n    const minLon = validExtent[0];\n\n    // Create meridians\n\n    centerLon = Math.floor(centerLon / interval) * interval;\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    while (lon != this.minLon_ && cnt++ < maxLines) {\n      lon = Math.max(lon - interval, this.minLon_);\n      idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n    }\n\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    cnt = 0;\n    while (lon != this.maxLon_ && cnt++ < maxLines) {\n      lon = Math.min(lon + interval, this.maxLon_);\n      idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n    }\n\n    this.meridians_.length = idx;\n    if (this.meridiansLabels_) {\n      this.meridiansLabels_.length = idx;\n    }\n\n    // Create parallels\n\n    centerLat = Math.floor(centerLat / interval) * interval;\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    while (lat != this.minLat_ && cnt++ < maxLines) {\n      lat = Math.max(lat - interval, this.minLat_);\n      idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n    }\n\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    cnt = 0;\n    while (lat != this.maxLat_ && cnt++ < maxLines) {\n      lat = Math.min(lat + interval, this.maxLat_);\n      idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n    }\n\n    this.parallels_.length = idx;\n    if (this.parallelsLabels_) {\n      this.parallelsLabels_.length = idx;\n    }\n\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @return {number} The interval in degrees.\n   * @private\n   */\n  getInterval_(resolution) {\n    const centerLon = this.projectionCenterLonLat_[0];\n    const centerLat = this.projectionCenterLonLat_[1];\n    let interval = -1;\n    const target = Math.pow(this.targetSize_ * resolution, 2);\n    /** @type {Array.<number>} **/\n    const p1 = [];\n    /** @type {Array.<number>} **/\n    const p2 = [];\n    for (let i = 0, ii = INTERVALS.length; i < ii; ++i) {\n      const delta = INTERVALS[i] / 2;\n      p1[0] = centerLon - delta;\n      p1[1] = centerLat - delta;\n      p2[0] = centerLon + delta;\n      p2[1] = centerLat + delta;\n      this.fromLonLatTransform_(p1, p1);\n      this.fromLonLatTransform_(p2, p2);\n      const dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n      if (dist <= target) {\n        break;\n      }\n      interval = INTERVALS[i];\n    }\n    return interval;\n  }\n\n  /**\n   * Get the map associated with this graticule.\n   * @return {module:ol/PluggableMap} The map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {module:ol/geom/LineString} The meridian line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getMeridian_(lon, minLat, maxLat, squaredTolerance, index) {\n    const flatCoordinates = meridian(lon, minLat, maxLat, this.projection_, squaredTolerance);\n    let lineString = this.meridians_[index];\n    if (!lineString) {\n      lineString = this.meridians_[index] = new LineString(flatCoordinates, GeometryLayout.XY);\n    } else {\n      lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * Get the list of meridians.  Meridians are lines of equal longitude.\n   * @return {Array.<module:ol/geom/LineString>} The meridians.\n   * @api\n   */\n  getMeridians() {\n    return this.meridians_;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {module:ol/geom/LineString} The parallel line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getParallel_(lat, minLon, maxLon, squaredTolerance, index) {\n    const flatCoordinates = parallel(lat, minLon, maxLon, this.projection_, squaredTolerance);\n    let lineString = this.parallels_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, GeometryLayout.XY);\n    } else {\n      lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * Get the list of parallels.  Parallels are lines of equal latitude.\n   * @return {Array.<module:ol/geom/LineString>} The parallels.\n   * @api\n   */\n  getParallels() {\n    return this.parallels_;\n  }\n\n  /**\n   * @param {module:ol/render/Event} e Event.\n   * @private\n   */\n  handlePostCompose_(e) {\n    const vectorContext = e.vectorContext;\n    const frameState = e.frameState;\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const squaredTolerance =\n        resolution * resolution / (4 * pixelRatio * pixelRatio);\n\n    const updateProjectionInfo = !this.projection_ ||\n        !equivalentProjection(this.projection_, projection);\n\n    if (updateProjectionInfo) {\n      this.updateProjectionInfo_(projection);\n    }\n\n    this.createGraticule_(extent, center, resolution, squaredTolerance);\n\n    // Draw the lines\n    vectorContext.setFillStrokeStyle(null, this.strokeStyle_);\n    let i, l, line;\n    for (i = 0, l = this.meridians_.length; i < l; ++i) {\n      line = this.meridians_[i];\n      vectorContext.drawGeometry(line);\n    }\n    for (i = 0, l = this.parallels_.length; i < l; ++i) {\n      line = this.parallels_[i];\n      vectorContext.drawGeometry(line);\n    }\n    let labelData;\n    if (this.meridiansLabels_) {\n      for (i = 0, l = this.meridiansLabels_.length; i < l; ++i) {\n        labelData = this.meridiansLabels_[i];\n        this.lonLabelStyle_.setText(labelData.text);\n        vectorContext.setTextStyle(this.lonLabelStyle_);\n        vectorContext.drawGeometry(labelData.geom);\n      }\n    }\n    if (this.parallelsLabels_) {\n      for (i = 0, l = this.parallelsLabels_.length; i < l; ++i) {\n        labelData = this.parallelsLabels_[i];\n        this.latLabelStyle_.setText(labelData.text);\n        vectorContext.setTextStyle(this.latLabelStyle_);\n        vectorContext.drawGeometry(labelData.geom);\n      }\n    }\n  }\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @private\n   */\n  updateProjectionInfo_(projection) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const worldExtent = projection.getWorldExtent();\n    const worldExtentP = transformExtent(worldExtent, epsg4326Projection, projection);\n\n    this.maxLat_ = worldExtent[3];\n    this.maxLon_ = worldExtent[2];\n    this.minLat_ = worldExtent[1];\n    this.minLon_ = worldExtent[0];\n\n    this.maxLatP_ = worldExtentP[3];\n    this.maxLonP_ = worldExtentP[2];\n    this.minLatP_ = worldExtentP[1];\n    this.minLonP_ = worldExtentP[0];\n\n    this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n\n    this.toLonLatTransform_ = getTransform(projection, epsg4326Projection);\n\n    this.projectionCenterLonLat_ = this.toLonLatTransform_(getCenter(projection.getExtent()));\n\n    this.projection_ = projection;\n  }\n\n  /**\n   * Set the map for this graticule.  The graticule will be rendered on the\n   * provided map.\n   * @param {module:ol/PluggableMap} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      unlistenByKey(this.postcomposeListenerKey_);\n      this.postcomposeListenerKey_ = null;\n      this.map_.render();\n    }\n    if (map) {\n      this.postcomposeListenerKey_ = listen(map, RenderEventType.POSTCOMPOSE, this.handlePostCompose_, this);\n      map.render();\n    }\n    this.map_ = map;\n  }\n}\n\nexport default Graticule;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n\n  /**\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/ImageState} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n\n    super();\n\n    /**\n     * @protected\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {module:ol/ImageState}\n     */\n    this.state = state;\n\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {module:ol/extent~Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {}\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {module:ol/ImageState} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {}\n}\n\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(module:ol/Image, string)} LoadFunction\n * @api\n */\n\n\nclass ImageWrapper extends ImageBase {\n\n  /**\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {module:ol/Image~LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @protected\n     * @type {module:ol/ImageState}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {module:ol/Image~LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @override\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.imageLoadFunction_(this, this.src_);\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  }\n}\n\n\nexport default ImageWrapper;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments.\n *\n * @typedef {function(module:ol/Tile, string)} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(module:ol/tilecoord~TileCoord, number,\n *           module:ol/proj/Projection): (string|undefined)} UrlFunction\n * @api\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n  */\nclass Tile extends EventTarget {\n\n  /**\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @param {module:ol/TileState} state State.\n   * @param {module:ol/Tile~Options=} opt_options Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {module:ol/tilecoord~TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {module:ol/TileState}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {module:ol/Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ = options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object.<number, number>}\n     */\n    this.transitionStarts_ = {};\n\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!module:ol/Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {module:ol/tilecoord~TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {module:ol/TileState} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * @param {module:ol/TileState} state State.\n   */\n  setState(state) {\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {}\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {number} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + (1000 / 60); // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {number} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {number} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @typedef {function(new: module:ol/ImageTile, module:ol/tilecoord~TileCoord,\n * module:ol/TileState, string, ?string, module:ol/Tile~LoadFunction)} TileClass\n * @api\n */\n\nclass ImageTile extends Tile {\n\n  /**\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @param {module:ol/TileState} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n   * @param {module:ol/Tile~Options=} opt_options Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/Tile~LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    if (this.state == TileState.LOADING) {\n      this.unlistenImage_();\n      this.image_ = getBlankImage();\n    }\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n    this.state = TileState.ABORT;\n    this.changed();\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getKey() {\n    return this.src_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.image_.naturalWidth && this.image_.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.tileLoadFunction_(this, this.src_);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  }\n}\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n\n  /**\n   * @param {string} type Event type.\n   * @param {module:ol/PluggableMap} map Map.\n   * @param {?module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {module:ol/PluggableMap}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?module:ol/PluggableMap~FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n  }\n\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n */\nclass MapBrowserEvent extends MapEvent {\n\n  /**\n   * @param {string} type Event type.\n   * @param {module:ol/PluggableMap} map Map.\n   * @param {Event} browserEvent Browser event.\n   * @param {boolean=} opt_dragging Is the map currently being dragged?\n   * @param {?module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n   */\n  constructor(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {Event}\n     * @api\n     */\n    this.originalEvent = browserEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {module:ol/pixel~Pixel}\n     * @api\n     */\n    this.pixel = map.getEventPixel(browserEvent);\n\n    /**\n     * The coordinate in view projection corresponding to the original browser event.\n     * @type {module:ol/coordinate~Coordinate}\n     * @api\n     */\n    this.coordinate = map.getCoordinateFromPixel(this.pixel);\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @override\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    this.originalEvent.preventDefault();\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @override\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    this.originalEvent.stopPropagation();\n  }\n}\n\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\nclass MapBrowserPointerEvent extends MapBrowserEvent {\n\n  /**\n   * @param {string} type Event type.\n   * @param {module:ol/PluggableMap} map Map.\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer event.\n   * @param {boolean=} opt_dragging Is the map currently being dragged?\n   * @param {?module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n   */\n  constructor(type, map, pointerEvent, opt_dragging, opt_frameState) {\n\n    super(type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState);\n\n    /**\n     * @const\n     * @type {module:ol/pointer/PointerEvent}\n     */\n    this.pointerEvent = pointerEvent;\n\n  }\n\n}\n\nexport default MapBrowserPointerEvent;\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n","/**\n * @module ol/pointer/EventSource\n */\n\nclass EventSource {\n\n  /**\n   * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n   * @param {!Object.<string, function(Event)>} mapping Event mapping.\n   */\n  constructor(dispatcher, mapping) {\n\n    /**\n     * @type {module:ol/pointer/PointerEventHandler}\n     */\n    this.dispatcher = dispatcher;\n\n    /**\n     * @private\n     * @const\n     * @type {!Object.<string, function(Event)>}\n     */\n    this.mapping_ = mapping;\n  }\n\n  /**\n   * List of events supported by this source.\n   * @return {Array.<string>} Event names\n   */\n  getEvents() {\n    return Object.keys(this.mapping_);\n  }\n\n  /**\n   * Returns the handler that should handle a given event type.\n   * @param {string} eventType The event type.\n   * @return {function(Event)} Handler\n   */\n  getHandlerForEvent(eventType) {\n    return this.mapping_[eventType];\n  }\n\n}\n\nexport default EventSource;\n","/**\n * @module ol/pointer/MouseSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from '../pointer/EventSource.js';\n\n\n/**\n * @type {number}\n */\nexport const POINTER_ID = 1;\n\n\n/**\n * @type {string}\n */\nexport const POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nconst DEDUP_DIST = 25;\n\n/**\n * Handler for `mousedown`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mousemove`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseup`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const p = this.pointerMap[POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      const e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n}\n\n/**\n * Handler for `mouseover`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseout`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n}\n\n\nclass MouseSource extends EventSource {\n\n  /**\n   * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n   */\n  constructor(dispatcher) {\n    const mapping = {\n      'mousedown': mousedown,\n      'mousemove': mousemove,\n      'mouseup': mouseup,\n      'mouseover': mouseover,\n      'mouseout': mouseout\n    };\n    super(dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object.<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {Array.<module:ol/pixel~Pixel>}\n     */\n    this.lastTouches = [];\n  }\n\n  /**\n   * Detect if a mouse event was simulated from a touch by\n   * checking if previously there was a touch event at the\n   * same position.\n   *\n   * FIXME - Known problem with the native Android browser on\n   * Samsung GT-I9100 (Android 4.1.2):\n   * In case the page is scrolled, this function does not work\n   * correctly when a canvas is used (WebGL or canvas renderer).\n   * Mouse listeners on canvas elements (for this browser), create\n   * two mouse events: One 'good' and one 'bad' one (on other browsers or\n   * when a div is used, there is only one event). For the 'bad' one,\n   * clientX/clientY and also pageX/pageY are wrong when the page\n   * is scrolled. Because of that, this function can not detect if\n   * the events were simulated from a touch event. As result, a\n   * pointer event at a wrong position is dispatched, which confuses\n   * the map interactions.\n   * It is unclear, how one can get the correct position for the event\n   * or detect that the positions are invalid.\n   *\n   * @private\n   * @param {MouseEvent} inEvent The in event.\n   * @return {boolean} True, if the event was generated by a touch.\n   */\n  isEventSimulatedFromTouch_(inEvent) {\n    const lts = this.lastTouches;\n    const x = inEvent.clientX;\n    const y = inEvent.clientY;\n    for (let i = 0, l = lts.length, t; i < l && (t = lts[i]); i++) {\n      // simulated mouse events will be swallowed near a primary touchend\n      const dx = Math.abs(x - t[0]);\n      const dy = Math.abs(y - t[1]);\n      if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Dispatches a `pointercancel` event.\n   *\n   * @param {Event} inEvent The in event.\n   */\n  cancel(inEvent) {\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanupMouse();\n  }\n\n  /**\n   * Remove the mouse from the list of active pointers.\n   */\n  cleanupMouse() {\n    delete this.pointerMap[POINTER_ID.toString()];\n  }\n}\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nfunction prepareEvent(inEvent, dispatcher) {\n  const e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  const pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n\n  return e;\n}\n\n\nexport default MouseSource;\n","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from '../pointer/EventSource.js';\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst POINTER_TYPES = [\n  '',\n  'unavailable',\n  'touch',\n  'pen',\n  'mouse'\n];\n\n/**\n * Handler for `msPointerDown`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n}\n\n/**\n * Handler for `msPointerMove`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n}\n\n/**\n * Handler for `msPointerUp`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msPointerOut`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n}\n\n/**\n * Handler for `msPointerOver`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n}\n\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n  const e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n  const e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\nclass MsSource extends EventSource {\n\n  /**\n   * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n   */\n  constructor(dispatcher) {\n    const mapping = {\n      'MSPointerDown': msPointerDown,\n      'MSPointerMove': msPointerMove,\n      'MSPointerUp': msPointerUp,\n      'MSPointerOut': msPointerOut,\n      'MSPointerOver': msPointerOver,\n      'MSPointerCancel': msPointerCancel,\n      'MSGotPointerCapture': msGotPointerCapture,\n      'MSLostPointerCapture': msLostPointerCapture\n    };\n    super(dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object.<string, MSPointerEvent|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n  }\n\n  /**\n   * Creates a copy of the original event that will be used\n   * for the fake pointer event.\n   *\n   * @private\n   * @param {MSPointerEvent} inEvent The in event.\n   * @return {Object} The copied event.\n   */\n  prepareEvent_(inEvent) {\n    let e = inEvent;\n    if (typeof inEvent.pointerType === 'number') {\n      e = this.dispatcher.cloneEvent(inEvent, inEvent);\n      e.pointerType = POINTER_TYPES[inEvent.pointerType];\n    }\n\n    return e;\n  }\n\n  /**\n   * Remove this pointer from the list of active pointers.\n   * @param {number} pointerId Pointer identifier.\n   */\n  cleanup(pointerId) {\n    delete this.pointerMap[pointerId.toString()];\n  }\n\n}\n\nexport default MsSource;\n","/**\n * @module ol/pointer/NativeSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from '../pointer/EventSource.js';\n\n/**\n * Handler for `pointerdown`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointermove`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerup`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerout`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerover`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointercancel`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\nclass NativeSource extends EventSource {\n\n  /**\n   * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n   */\n  constructor(dispatcher) {\n    const mapping = {\n      'pointerdown': pointerDown,\n      'pointermove': pointerMove,\n      'pointerup': pointerUp,\n      'pointerout': pointerOut,\n      'pointerover': pointerOver,\n      'pointercancel': pointerCancel,\n      'gotpointercapture': gotPointerCapture,\n      'lostpointercapture': lostPointerCapture\n    };\n    super(dispatcher, mapping);\n  }\n\n}\n\nexport default NativeSource;\n","/**\n * @module ol/pointer/PointerEvent\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport Event from '../events/Event.js';\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nlet HAS_BUTTONS = false;\n\n\nclass PointerEvent extends Event {\n\n  /**\n   * A class for pointer events.\n   *\n   * This class is used as an abstraction for mouse events,\n   * touch events and even native pointer events.\n   *\n   * @param {string} type The type of the event to create.\n   * @param {Event} originalEvent The event.\n   * @param {Object.<string, ?>=} opt_eventDict An optional dictionary of\n   *    initial event properties.\n   */\n  constructor(type, originalEvent, opt_eventDict) {\n    super(type);\n\n    /**\n     * @const\n     * @type {Event}\n     */\n    this.originalEvent = originalEvent;\n\n    const eventDict = opt_eventDict ? opt_eventDict : {};\n\n    /**\n     * @type {number}\n     */\n    this.buttons = this.getButtons_(eventDict);\n\n    /**\n     * @type {number}\n     */\n    this.pressure = this.getPressure_(eventDict, this.buttons);\n\n    // MouseEvent related properties\n\n    /**\n     * @type {boolean}\n     */\n    this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n    /**\n     * @type {Object}\n     */\n    this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n    /**\n     * @type {number}\n     */\n    this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n    /**\n     * @type {Node}\n     */\n    this.relatedTarget = 'relatedTarget' in eventDict ?\n      eventDict['relatedTarget'] : null;\n\n    // PointerEvent related properties\n\n    /**\n     * @const\n     * @type {number}\n     */\n    this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n    /**\n     * @type {string}\n     */\n    this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n    /**\n     * @type {number}\n     */\n    this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n    // keep the semantics of preventDefault\n    if (originalEvent.preventDefault) {\n      this.preventDefault = function() {\n        originalEvent.preventDefault();\n      };\n    }\n  }\n\n  /**\n   * @private\n   * @param {Object.<string, ?>} eventDict The event dictionary.\n   * @return {number} Button indicator.\n   */\n  getButtons_(eventDict) {\n    // According to the w3c spec,\n    // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n    // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n    // left mouse button depressed.\n    //\n    // As of now, the only way to distinguish between the two states of\n    // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n    // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n    // no mouse button is held.\n    //\n    // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n    // but initMouseEvent does not expose an argument with which to set\n    // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n    // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n    // of app developers.\n    //\n    // The only way to propagate the correct state of MouseEvent.which and\n    // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n    // is to call initMouseEvent with a buttonArg value of -1.\n    //\n    // This is fixed with DOM Level 4's use of buttons\n    let buttons;\n    if (eventDict.buttons || HAS_BUTTONS) {\n      buttons = eventDict.buttons;\n    } else {\n      switch (eventDict.which) {\n        case 1: buttons = 1; break;\n        case 2: buttons = 4; break;\n        case 3: buttons = 2; break;\n        default: buttons = 0;\n      }\n    }\n    return buttons;\n  }\n\n  /**\n   * @private\n   * @param {Object.<string, ?>} eventDict The event dictionary.\n   * @param {number} buttons Button indicator.\n   * @return {number} The pressure.\n   */\n  getPressure_(eventDict, buttons) {\n    // Spec requires that pointers without pressure specified use 0.5 for down\n    // state and 0 for up state.\n    let pressure = 0;\n    if (eventDict.pressure) {\n      pressure = eventDict.pressure;\n    } else {\n      pressure = buttons ? 0.5 : 0;\n    }\n    return pressure;\n  }\n}\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    const ev = new MouseEvent('click', {buttons: 1});\n    HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\n\nexport default PointerEvent;\n","/**\n * @module ol/pointer/TouchSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {remove} from '../array.js';\nimport EventSource from '../pointer/EventSource.js';\nimport {POINTER_ID} from '../pointer/MouseSource.js';\n\n\n/**\n * @type {number}\n */\nconst CLICK_COUNT_TIMEOUT = 200;\n\n/**\n * @type {string}\n */\nconst POINTER_TYPE = 'touch';\n\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {module:ol/pointer/TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n}\n\n/**\n * Handler for `touchmove`.\n *\n * @this {module:ol/pointer/TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n  inEvent.preventDefault();\n  this.processTouches_(inEvent, this.moveOverOut_);\n}\n\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {module:ol/pointer/TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n}\n\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {module:ol/pointer/TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n}\n\n\nclass TouchSource extends EventSource {\n\n  /**\n   * @param {module:ol/pointer/PointerEventHandler} dispatcher The event handler.\n   * @param {module:ol/pointer/MouseSource} mouseSource Mouse source.\n   */\n  constructor(dispatcher, mouseSource) {\n    const mapping = {\n      'touchstart': touchstart,\n      'touchmove': touchmove,\n      'touchend': touchend,\n      'touchcancel': touchcancel\n    };\n    super(dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object.<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {module:ol/pointer/MouseSource}\n     */\n    this.mouseSource = mouseSource;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.firstTouchId_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clickCount_ = 0;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.resetId_ = undefined;\n\n    /**\n     * Mouse event timeout: This should be long enough to\n     * ignore compat mouse events made by touch.\n     * @private\n     * @type {number}\n     */\n    this.dedupTimeout_ = 2500;\n  }\n\n  /**\n   * @private\n   * @param {Touch} inTouch The in touch.\n   * @return {boolean} True, if this is the primary touch.\n   */\n  isPrimaryTouch_(inTouch) {\n    return this.firstTouchId_ === inTouch.identifier;\n  }\n\n  /**\n   * Set primary touch if there are no pointers, or the only pointer is the mouse.\n   * @param {Touch} inTouch The in touch.\n   * @private\n   */\n  setPrimaryTouch_(inTouch) {\n    const count = Object.keys(this.pointerMap).length;\n    if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n      this.firstTouchId_ = inTouch.identifier;\n      this.cancelResetClickCount_();\n    }\n  }\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  removePrimaryPointer_(inPointer) {\n    if (inPointer.isPrimary) {\n      this.firstTouchId_ = undefined;\n      this.resetClickCount_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetClickCount_() {\n    this.resetId_ = setTimeout(\n      this.resetClickCountHandler_.bind(this),\n      CLICK_COUNT_TIMEOUT);\n  }\n\n  /**\n   * @private\n   */\n  resetClickCountHandler_() {\n    this.clickCount_ = 0;\n    this.resetId_ = undefined;\n  }\n\n  /**\n   * @private\n   */\n  cancelResetClickCount_() {\n    if (this.resetId_ !== undefined) {\n      clearTimeout(this.resetId_);\n    }\n  }\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent Browser event\n   * @param {Touch} inTouch Touch event\n   * @return {PointerEvent} A pointer object.\n   */\n  touchToPointer_(browserEvent, inTouch) {\n    const e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n    // Spec specifies that pointerId 1 is reserved for Mouse.\n    // Touch identifiers can start at 0.\n    // Add 2 to the touch identifier for compatibility.\n    e.pointerId = inTouch.identifier + 2;\n    // TODO: check if this is necessary?\n    //e.target = findTarget(e);\n    e.bubbles = true;\n    e.cancelable = true;\n    e.detail = this.clickCount_;\n    e.button = 0;\n    e.buttons = 1;\n    e.width = inTouch.webkitRadiusX || inTouch.radiusX || 0;\n    e.height = inTouch.webkitRadiusY || inTouch.radiusY || 0;\n    e.pressure = inTouch.webkitForce || inTouch.force || 0.5;\n    e.isPrimary = this.isPrimaryTouch_(inTouch);\n    e.pointerType = POINTER_TYPE;\n\n    // make sure that the properties that are different for\n    // each `Touch` object are not copied from the BrowserEvent object\n    e.clientX = inTouch.clientX;\n    e.clientY = inTouch.clientY;\n    e.screenX = inTouch.screenX;\n    e.screenY = inTouch.screenY;\n\n    return e;\n  }\n\n  /**\n   * @private\n   * @param {TouchEvent} inEvent Touch event\n   * @param {function(TouchEvent, PointerEvent)} inFunction In function.\n   */\n  processTouches_(inEvent, inFunction) {\n    const touches = Array.prototype.slice.call(inEvent.changedTouches);\n    const count = touches.length;\n    function preventDefault() {\n      inEvent.preventDefault();\n    }\n    for (let i = 0; i < count; ++i) {\n      const pointer = this.touchToPointer_(inEvent, touches[i]);\n      // forward touch preventDefaults\n      pointer.preventDefault = preventDefault;\n      inFunction.call(this, inEvent, pointer);\n    }\n  }\n\n  /**\n   * @private\n   * @param {TouchList} touchList The touch list.\n   * @param {number} searchId Search identifier.\n   * @return {boolean} True, if the `Touch` with the given id is in the list.\n   */\n  findTouch_(touchList, searchId) {\n    const l = touchList.length;\n    for (let i = 0; i < l; i++) {\n      const touch = touchList[i];\n      if (touch.identifier === searchId) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * In some instances, a touchstart can happen without a touchend. This\n   * leaves the pointermap in a broken state.\n   * Therefore, on every touchstart, we remove the touches that did not fire a\n   * touchend event.\n   * To keep state globally consistent, we fire a pointercancel for\n   * this \"abandoned\" touch\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  vacuumTouches_(inEvent) {\n    const touchList = inEvent.touches;\n    // pointerMap.getCount() should be < touchList.length here,\n    // as the touchstart has not been processed yet.\n    const keys = Object.keys(this.pointerMap);\n    const count = keys.length;\n    if (count >= touchList.length) {\n      const d = [];\n      for (let i = 0; i < count; ++i) {\n        const key = keys[i];\n        const value = this.pointerMap[key];\n        // Never remove pointerId == 1, which is mouse.\n        // Touch identifiers are 2 smaller than their pointerId, which is the\n        // index in pointermap.\n        if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n          d.push(value.out);\n        }\n      }\n      for (let i = 0; i < d.length; ++i) {\n        this.cancelOut_(inEvent, d[i]);\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  overDown_(browserEvent, inPointer) {\n    this.pointerMap[inPointer.pointerId] = {\n      target: inPointer.target,\n      out: inPointer,\n      outTarget: inPointer.target\n    };\n    this.dispatcher.over(inPointer, browserEvent);\n    this.dispatcher.enter(inPointer, browserEvent);\n    this.dispatcher.down(inPointer, browserEvent);\n  }\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  moveOverOut_(browserEvent, inPointer) {\n    const event = inPointer;\n    const pointer = this.pointerMap[event.pointerId];\n    // a finger drifted off the screen, ignore it\n    if (!pointer) {\n      return;\n    }\n    const outEvent = pointer.out;\n    const outTarget = pointer.outTarget;\n    this.dispatcher.move(event, browserEvent);\n    if (outEvent && outTarget !== event.target) {\n      outEvent.relatedTarget = event.target;\n      event.relatedTarget = outTarget;\n      // recover from retargeting by shadow\n      outEvent.target = outTarget;\n      if (event.target) {\n        this.dispatcher.leaveOut(outEvent, browserEvent);\n        this.dispatcher.enterOver(event, browserEvent);\n      } else {\n        // clean up case when finger leaves the screen\n        event.target = outTarget;\n        event.relatedTarget = null;\n        this.cancelOut_(browserEvent, event);\n      }\n    }\n    pointer.out = event;\n    pointer.outTarget = event.target;\n  }\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent An event.\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  upOut_(browserEvent, inPointer) {\n    this.dispatcher.up(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  }\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  cancelOut_(browserEvent, inPointer) {\n    this.dispatcher.cancel(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  }\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  cleanUpPointer_(inPointer) {\n    delete this.pointerMap[inPointer.pointerId];\n    this.removePrimaryPointer_(inPointer);\n  }\n\n  /**\n   * Prevent synth mouse events from creating pointer events.\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  dedupSynthMouse_(inEvent) {\n    const lts = this.mouseSource.lastTouches;\n    const t = inEvent.changedTouches[0];\n    // only the primary finger will synth mouse events\n    if (this.isPrimaryTouch_(t)) {\n      // remember x/y of last touch\n      const lt = [t.clientX, t.clientY];\n      lts.push(lt);\n\n      setTimeout(function() {\n        // remove touch after timeout\n        remove(lts, lt);\n      }, this.dedupTimeout_);\n    }\n  }\n}\n\nexport default TouchSource;\n","/**\n * @module ol/pointer/PointerEventHandler\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {listen, unlisten} from '../events.js';\nimport EventTarget from '../events/EventTarget.js';\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport MsSource from '../pointer/MsSource.js';\nimport NativeSource from '../pointer/NativeSource.js';\nimport PointerEvent from '../pointer/PointerEvent.js';\nimport TouchSource from '../pointer/TouchSource.js';\n\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array.<Array>}\n */\nconst CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\n\n\nclass PointerEventHandler extends EventTarget {\n\n  /**\n   * @param {Element|HTMLDocument} element Viewport element.\n   */\n  constructor(element) {\n    super();\n\n    /**\n     * @const\n     * @private\n     * @type {Element|HTMLDocument}\n     */\n    this.element_ = element;\n\n    /**\n     * @const\n     * @type {!Object.<string, Event|Object>}\n     */\n    this.pointerMap = {};\n\n    /**\n     * @type {Object.<string, function(Event)>}\n     * @private\n     */\n    this.eventMap_ = {};\n\n    /**\n     * @type {Array.<module:ol/pointer/EventSource>}\n     * @private\n     */\n    this.eventSourceList_ = [];\n\n    this.registerSources();\n  }\n\n  /**\n   * Set up the event sources (mouse, touch and native pointers)\n   * that generate pointer events.\n   */\n  registerSources() {\n    if (POINTER) {\n      this.registerSource('native', new NativeSource(this));\n    } else if (MSPOINTER) {\n      this.registerSource('ms', new MsSource(this));\n    } else {\n      const mouseSource = new MouseSource(this);\n      this.registerSource('mouse', mouseSource);\n\n      if (TOUCH) {\n        this.registerSource('touch', new TouchSource(this, mouseSource));\n      }\n    }\n\n    // register events on the viewport element\n    this.register_();\n  }\n\n  /**\n   * Add a new event source that will generate pointer events.\n   *\n   * @param {string} name A name for the event source\n   * @param {module:ol/pointer/EventSource} source The source event.\n   */\n  registerSource(name, source) {\n    const s = source;\n    const newEvents = s.getEvents();\n\n    if (newEvents) {\n      newEvents.forEach(function(e) {\n        const handler = s.getHandlerForEvent(e);\n\n        if (handler) {\n          this.eventMap_[e] = handler.bind(s);\n        }\n      }.bind(this));\n      this.eventSourceList_.push(s);\n    }\n  }\n\n  /**\n   * Set up the events for all registered event sources.\n   * @private\n   */\n  register_() {\n    const l = this.eventSourceList_.length;\n    for (let i = 0; i < l; i++) {\n      const eventSource = this.eventSourceList_[i];\n      this.addEvents_(eventSource.getEvents());\n    }\n  }\n\n  /**\n   * Remove all registered events.\n   * @private\n   */\n  unregister_() {\n    const l = this.eventSourceList_.length;\n    for (let i = 0; i < l; i++) {\n      const eventSource = this.eventSourceList_[i];\n      this.removeEvents_(eventSource.getEvents());\n    }\n  }\n\n  /**\n   * Calls the right handler for a new event.\n   * @private\n   * @param {Event} inEvent Browser event.\n   */\n  eventHandler_(inEvent) {\n    const type = inEvent.type;\n    const handler = this.eventMap_[type];\n    if (handler) {\n      handler(inEvent);\n    }\n  }\n\n  /**\n   * Setup listeners for the given events.\n   * @private\n   * @param {Array.<string>} events List of events.\n   */\n  addEvents_(events) {\n    events.forEach(function(eventName) {\n      listen(this.element_, eventName, this.eventHandler_, this);\n    }.bind(this));\n  }\n\n  /**\n   * Unregister listeners for the given events.\n   * @private\n   * @param {Array.<string>} events List of events.\n   */\n  removeEvents_(events) {\n    events.forEach(function(e) {\n      unlisten(this.element_, e, this.eventHandler_, this);\n    }.bind(this));\n  }\n\n  /**\n   * Returns a snapshot of inEvent, with writable properties.\n   *\n   * @param {Event} event Browser event.\n   * @param {Event|Touch} inEvent An event that contains\n   *    properties to copy.\n   * @return {Object} An object containing shallow copies of\n   *    `inEvent`'s properties.\n   */\n  cloneEvent(event, inEvent) {\n    const eventCopy = {};\n    for (let i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n      const p = CLONE_PROPS[i][0];\n      eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n    }\n\n    return eventCopy;\n  }\n\n  // EVENTS\n\n\n  /**\n   * Triggers a 'pointerdown' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  down(data, event) {\n    this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n  }\n\n  /**\n   * Triggers a 'pointermove' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  move(data, event) {\n    this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n  }\n\n  /**\n   * Triggers a 'pointerup' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  up(data, event) {\n    this.fireEvent(PointerEventType.POINTERUP, data, event);\n  }\n\n  /**\n   * Triggers a 'pointerenter' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  enter(data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERENTER, data, event);\n  }\n\n  /**\n   * Triggers a 'pointerleave' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  leave(data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n  }\n\n  /**\n   * Triggers a 'pointerover' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  over(data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROVER, data, event);\n  }\n\n  /**\n   * Triggers a 'pointerout' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  out(data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROUT, data, event);\n  }\n\n  /**\n   * Triggers a 'pointercancel' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  cancel(data, event) {\n    this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n  }\n\n  /**\n   * Triggers a combination of 'pointerout' and 'pointerleave' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  leaveOut(data, event) {\n    this.out(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.leave(data, event);\n    }\n  }\n\n  /**\n   * Triggers a combination of 'pointerover' and 'pointerevents' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  enterOver(data, event) {\n    this.over(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.enter(data, event);\n    }\n  }\n\n  /**\n   * @private\n   * @param {Element} container The container element.\n   * @param {Element} contained The contained element.\n   * @return {boolean} Returns true if the container element\n   *   contains the other element.\n   */\n  contains_(container, contained) {\n    if (!container || !contained) {\n      return false;\n    }\n    return container.contains(contained);\n  }\n\n  // EVENT CREATION AND TRACKING\n  /**\n   * Creates a new Event of type `inType`, based on the information in\n   * `data`.\n   *\n   * @param {string} inType A string representing the type of event to create.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   * @return {module:ol/pointer/PointerEvent} A PointerEvent of type `inType`.\n   */\n  makeEvent(inType, data, event) {\n    return new PointerEvent(inType, event, data);\n  }\n\n  /**\n   * Make and dispatch an event in one call.\n   * @param {string} inType A string representing the type of event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  fireEvent(inType, data, event) {\n    const e = this.makeEvent(inType, data, event);\n    this.dispatchEvent(e);\n  }\n\n  /**\n   * Creates a pointer event from a native pointer event\n   * and dispatches this event.\n   * @param {Event} event A platform event with a target.\n   */\n  fireNativeEvent(event) {\n    const e = this.makeEvent(event.type, event, event);\n    this.dispatchEvent(e);\n  }\n\n  /**\n   * Wrap a native mouse event into a pointer event.\n   * This proxy method is required for the legacy IE support.\n   * @param {string} eventType The pointer event type.\n   * @param {Event} event The event.\n   * @return {module:ol/pointer/PointerEvent} The wrapped event.\n   */\n  wrapMouseEvent(eventType, event) {\n    const pointerEvent = this.makeEvent(\n      eventType, MouseSource.prepareEvent(event, this), event);\n    return pointerEvent;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    this.unregister_();\n    EventTarget.prototype.disposeInternal.call(this);\n  }\n}\n\nexport default PointerEventHandler;\n","/**\n * @module ol/MapBrowserEventHandler\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventTarget from './events/EventTarget.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\n\nclass MapBrowserEventHandler extends EventTarget {\n\n  /**\n   * @param {module:ol/PluggableMap} map The map with the viewport to listen to events on.\n   * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n\n    super();\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {module:ol/PluggableMap}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.clickTimeoutId_ = 0;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array.<module:ol/events~EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance ?\n      moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {module:ol/pointer/PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object.<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * Event handler which generates pointer events for\n     * the viewport element.\n     *\n     * @type {module:ol/pointer/PointerEventHandler}\n     * @private\n     */\n    this.pointerEventHandler_ = new PointerEventHandler(element);\n\n    /**\n     * Event handler which generates pointer events for\n     * the document (used when dragging).\n     *\n     * @type {module:ol/pointer/PointerEventHandler}\n     * @private\n     */\n    this.documentPointerEventHandler_ = null;\n\n    /**\n     * @type {?module:ol/events~EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_, this);\n\n    /**\n     * @type {?module:ol/events~EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_, this);\n\n  }\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.CLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== 0) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = 0;\n      newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(function() {\n        this.clickTimeoutId_ = 0;\n        const newEvent = new MapBrowserPointerEvent(\n          MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n      }.bind(this), 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (event.type == MapBrowserEventType.POINTERUP ||\n        event.type == MapBrowserEventType.POINTERCANCEL) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.stopPropagation() or event.preventDefault().\n    if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n  }\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    this.down_ = pointerEvent;\n\n    if (this.dragListenerKeys_.length === 0) {\n      /* Set up a pointer event handler on the `document`,\n       * which is required when the pointer is moved outside\n       * the viewport when dragging.\n       */\n      this.documentPointerEventHandler_ =\n          new PointerEventHandler(document);\n\n      this.dragListenerKeys_.push(\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_, this),\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERUP,\n          this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(this.pointerEventHandler_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_, this)\n      );\n    }\n  }\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\n        this.dragging_);\n      this.dispatchEvent(newEvent);\n    }\n\n    // Some native android browser triggers mousemove events during small period\n    // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n    // https://code.google.com/p/android/issues/detail?id=19827\n    // ex: Galaxy Tab P3110 + Android 4.1.1\n    pointerEvent.preventDefault();\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserPointerEvent matches the PointerEvent type.\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(new MapBrowserPointerEvent(\n      pointerEvent.type, this.map_, pointerEvent, dragging));\n  }\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return this.dragging_ ||\n        Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n        Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    if (this.documentPointerEventHandler_) {\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n    if (this.pointerEventHandler_) {\n      this.pointerEventHandler_.dispose();\n      this.pointerEventHandler_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n\n/**\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array.<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array.<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object.<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_),\n      31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < (count >> 1)) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex = rIndex < count &&\n          priorities[rIndex] < priorities[lIndex] ?\n        rIndex : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n\n}\n\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport {listen, unlisten} from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n\n\n/**\n * @typedef {function(module:ol/Tile, string, module:ol/coordinate~Coordinate, number): number} PriorityFunction\n */\n\n\nclass TileQueue extends PriorityQueue {\n\n  /**\n   * @param {module:ol/TileQueue~PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function(element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return (/** @type {module:ol/Tile} */ (element[0]).getKey());\n      });\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object.<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      listen(tile, EventType.CHANGE, this.handleTileChange, this);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {module:ol/Tile} */ (event.target);\n    const state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR ||\n        state === TileState.EMPTY || state === TileState.ABORT) {\n      unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let abortedTiles = false;\n    let state, tile, tileKey;\n    while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n           this.getCount() > 0) {\n      tile = /** @type {module:ol/Tile} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.ABORT) {\n        abortedTiles = true;\n      } else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n    if (newLoads === 0 && abortedTiles) {\n      // Do not stop the render loop when all wanted tiles were aborted due to\n      // a small, saturated tile cache.\n      this.tileChangeCallback_();\n    }\n  }\n}\n\n\nexport default TileQueue;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((module:ol/coordinate~Coordinate|undefined)): (module:ol/coordinate~Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/centerconstraint~Type} The constraint.\n */\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {module:ol/coordinate~Coordinate=} center Center.\n     * @return {module:ol/coordinate~Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          clamp(center[0], extent[0], extent[2]),\n          clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate=} center Center.\n * @return {module:ol/coordinate~Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n","/**\n * @module ol/View\n */\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {getUid} from './util.js';\nimport {UNDEFINED} from './functions.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\nimport {inAndOut} from './easing.js';\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport SimpleGeometry from './geom/SimpleGeometry.js';\nimport {clamp, modulo} from './math.js';\nimport {assign} from './obj.js';\nimport {createProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\n\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {module:ol/coordinate~Coordinate} [sourceCenter]\n * @property {module:ol/coordinate~Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {module:ol/coordinate~Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n\n/**\n * @typedef {Object} Constraints\n * @property {module:ol/centerconstraint~Type} center\n * @property {module:ol/resolutionconstraint~Type} resolution\n * @property {module:ol/rotationconstraint~Type} rotation\n */\n\n\n/**\n * @typedef {Object} FitOptions\n * @property {module:ol/size~Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array.<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\n * the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n\n/**\n * @typedef {Object} ViewOptions\n * @property {module:ol/coordinate~Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {module:ol/extent~Extent} [extent] The extent that constrains the\n * center, in other words, center cannot be set outside this extent.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array.<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view. The initial\n * resolution is determined using the {@link #constrainResolution} method.\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\n * resolution constraint.\n */\n\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {module:ol/coordinate~Coordinate|undefined} center The center of the view at the end of\n * the animation.\n * @property {number|undefined} zoom The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number|undefined} resolution The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number|undefined} rotation The rotation of the view at the end of\n * the animation.\n * @property {module:ol/coordinate~Coordinate|undefined} anchor Optional anchor to remained fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {module:ol/coordinate~Coordinate} center\n * @property {module:ol/proj/Projection} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But a View object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n  * @api\n */\nclass View extends BaseObject {\n\n  /**\n   * @param {module:ol/View~ViewOptions=} opt_options View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array.<Array.<module:ol/View~Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    this.updateAnimations_ = this.updateAnimations_.bind(this);\n\n    /**\n     * @private\n     * @const\n     * @type {module:ol/proj/Projection}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {module:ol/View~ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n\n    /**\n     * @type {Object.<string, *>}\n     */\n    const properties = {};\n    properties[ViewProperty.CENTER] = options.center !== undefined ?\n      options.center : null;\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array.<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {module:ol/View~Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint\n    };\n\n    if (options.resolution !== undefined) {\n      properties[ViewProperty.RESOLUTION] = options.resolution;\n    } else if (options.zoom !== undefined) {\n      properties[ViewProperty.RESOLUTION] = this.constrainResolution(\n        this.maxResolution_, options.zoom - this.minZoom_);\n\n      if (this.resolutions_) { // in case map zoom is out of min/max zoom range\n        properties[ViewProperty.RESOLUTION] = clamp(\n          Number(this.getResolution() || properties[ViewProperty.RESOLUTION]),\n          this.minResolution_, this.maxResolution_);\n      }\n    }\n    properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {module:ol/View~ViewOptions}\n     */\n    this.options_ = options;\n\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {module:ol/View~ViewOptions} newOptions New options to be applied.\n   * @return {module:ol/View~ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenter();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(module:ol/View~AnimationOptions|function(boolean))} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenter(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        setTimeout(function() {\n          callback(true);\n        }, 0);\n      }\n      return;\n    }\n    let start = Date.now();\n    let center = this.getCenter().slice();\n    let resolution = this.getResolution();\n    let rotation = this.getRotation();\n    const series = [];\n    for (let i = 0; i < animationCount; ++i) {\n      const options = /** @type {module:ol/View~AnimationOptions} */ (arguments[i]);\n\n      const animation = /** @type {module:ol/View~Animation} */ ({\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut\n      });\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center;\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.constrainResolution(\n          this.maxResolution_, options.zoom - this.minZoom_, 0);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      animation.callback = callback;\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        series[0].callback(false);\n      }\n    }\n    this.animations_.length = 0;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.set(ViewProperty.CENTER, [x, y]);\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution = progress === 1 ?\n            animation.targetResolution :\n            animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterZoom(resolution, animation.anchor));\n          }\n          this.set(ViewProperty.RESOLUTION, resolution);\n        }\n        if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n          const rotation = progress === 1 ?\n            modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n            animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterRotate(rotation, animation.anchor));\n          }\n          this.set(ViewProperty.ROTATION, rotation);\n        }\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        const callback = series[0].callback;\n        if (callback) {\n          setTimeout(function() {\n            callback(true);\n          }, 0);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {module:ol/coordinate~Coordinate} anchor Rotation anchor.\n   * @return {module:ol/coordinate~Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenter();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {module:ol/coordinate~Coordinate} anchor Zoom anchor.\n   * @return {module:ol/coordinate~Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenter();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n      const y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * @private\n   * @return {module:ol/size~Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getSizeFromViewport_() {\n    const size = [100, 100];\n    const selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n    const element = document.querySelector(selector);\n    if (element) {\n      const metrics = getComputedStyle(element);\n      size[0] = parseInt(metrics.width, 10);\n      size[1] = parseInt(metrics.height, 10);\n    }\n    return size;\n  }\n\n  /**\n   * Get the constrained center of this view.\n   * @param {module:ol/coordinate~Coordinate|undefined} center Center.\n   * @return {module:ol/coordinate~Coordinate|undefined} Constrained center.\n   * @api\n   */\n  constrainCenter(center) {\n    return this.constraints_.center(center);\n  }\n\n  /**\n   * Get the constrained resolution of this view.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @param {number=} opt_direction Direction. Default is `0`.\n   * @return {number|undefined} Constrained resolution.\n   * @api\n   */\n  constrainResolution(resolution, opt_delta, opt_direction) {\n    const delta = opt_delta || 0;\n    const direction = opt_direction || 0;\n    return this.constraints_.resolution(resolution, delta, direction);\n  }\n\n  /**\n   * Get the constrained rotation of this view.\n   * @param {number|undefined} rotation Rotation.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @return {number|undefined} Constrained rotation.\n   * @api\n   */\n  constrainRotation(rotation, opt_delta) {\n    const delta = opt_delta || 0;\n    return this.constraints_.rotation(rotation, delta);\n  }\n\n  /**\n   * Get the view center.\n   * @return {module:ol/coordinate~Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    return (\n      /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(ViewProperty.CENTER))\n    );\n  }\n\n  /**\n   * @return {module:ol/View~Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @param {Array.<number>=} opt_hints Destination array.\n   * @return {Array.<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {module:ol/size~Size=} opt_size Box pixel size. If not provided, the size of the\n   * first map that uses this view will be used.\n   * @return {module:ol/extent~Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const size = opt_size || this.getSizeFromViewport_();\n    const center = /** @type {!module:ol/coordinate~Coordinate} */ (this.getCenter());\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {module:ol/proj/Projection} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array.<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {module:ol/size~Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    const size = opt_size || this.getSizeFromViewport_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.maxResolution_;\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function(value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      });\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.maxResolution_;\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function(resolution) {\n        const value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n        return value;\n      });\n  }\n\n  /**\n   * @return {module:ol/View~State} View state.\n   */\n  getState() {\n    const center = /** @type {module:ol/coordinate~Coordinate} */ (this.getCenter());\n    const projection = this.getProjection();\n    const resolution = /** @type {number} */ (this.getResolution());\n    const rotation = this.getRotation();\n    return (\n      /** @type {module:ol/View~State} */ ({\n        center: center.slice(),\n        projection: projection !== undefined ? projection : null,\n        resolution: resolution,\n        rotation: rotation,\n        zoom: this.getZoom()\n      })\n    );\n  }\n\n  /**\n   * Get the current zoom level.  If you configured your view with a resolutions\n   * array (this is rare), this method may return non-integer zoom levels (so\n   * the zoom level is not safe to use as an index into a resolutions array).\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    return /** @type {number} */ (this.constrainResolution(\n      this.maxResolution_, zoom - this.minZoom_, 0));\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {module:ol/geom/SimpleGeometry|module:ol/extent~Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {module:ol/View~FitOptions=} opt_options Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getSizeFromViewport_();\n    }\n    /** @type {module:ol/geom/SimpleGeometry} */\n    let geometry;\n    if (!(geometryOrExtent instanceof SimpleGeometry)) {\n      assert(Array.isArray(geometryOrExtent),\n        24); // Invalid extent or geometry provided as `geometry`\n      assert(!isEmpty(geometryOrExtent),\n        25); // Cannot fit empty extent provided as `geometry`\n      geometry = polygonFromExtent(geometryOrExtent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      geometryOrExtent = geometryOrExtent.getExtent();\n      geometry = polygonFromExtent(geometryOrExtent);\n      geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n    } else {\n      geometry = geometryOrExtent;\n    }\n\n    const padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const constrainResolution = options.constrainResolution !== undefined ?\n      options.constrainResolution : true;\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.constrainResolution(\n        this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n    } else {\n      minResolution = 0;\n    }\n    const coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(-rotation);\n    let sinAngle = Math.sin(-rotation);\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    const stride = geometry.getStride();\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtent(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n    resolution = isNaN(resolution) ? minResolution :\n      Math.max(resolution, minResolution);\n    if (constrainResolution) {\n      let constrainedResolution = this.constrainResolution(resolution, 0, 0);\n      if (!nearest && constrainedResolution < resolution) {\n        constrainedResolution = this.constrainResolution(\n          constrainedResolution, -1, 0);\n      }\n      resolution = constrainedResolution;\n    }\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    let centerRotX = (minRotX + maxRotX) / 2;\n    let centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n    centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n    const centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    const centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    const center = [centerX, centerY];\n    const callback = options.callback ? options.callback : UNDEFINED;\n\n    if (options.duration !== undefined) {\n      this.animate({\n        resolution: resolution,\n        center: center,\n        duration: options.duration,\n        easing: options.easing\n      }, callback);\n    } else {\n      this.setResolution(resolution);\n      this.setCenter(center);\n      setTimeout(callback.bind(undefined, true), 0);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/size~Size} size Box pixel size.\n   * @param {module:ol/pixel~Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    // calculate rotated position\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(-rotation);\n    let sinAngle = Math.sin(-rotation);\n    let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    const resolution = this.getResolution();\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    const centerX = rotX * cosAngle - rotY * sinAngle;\n    const centerY = rotY * cosAngle + rotX * sinAngle;\n\n    this.setCenter([centerX, centerY]);\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenter() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Rotate the view around a given coordinate.\n   * @param {number} rotation New rotation value for the view.\n   * @param {module:ol/coordinate~Coordinate=} opt_anchor The rotation center.\n   * @api\n   */\n  rotate(rotation, opt_anchor) {\n    if (opt_anchor !== undefined) {\n      const center = this.calculateCenterRotate(rotation, opt_anchor);\n      this.setCenter(center);\n    }\n    this.setRotation(rotation);\n  }\n\n  /**\n   * Set the center of the current view.\n   * @param {module:ol/coordinate~Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.set(ViewProperty.CENTER, center);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  }\n\n  /**\n   * @param {module:ol/ViewHint} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.set(ViewProperty.RESOLUTION, resolution);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  }\n\n  /**\n   * Set the rotation for this view.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.set(ViewProperty.ROTATION, rotation);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  }\n\n  /**\n   * Zoom to a specific zoom level.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n}\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {module:ol/centerconstraint~Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    return createExtent(options.extent);\n  } else {\n    return centerNone;\n  }\n}\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {{constraint: module:ol/resolutionconstraint~Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom = options.minZoom !== undefined ?\n    options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = createSnapToResolutions(\n      resolutions);\n  } else {\n    // calculate the default min and max resolution\n    const projection = createProjection(options.projection, 'EPSG:3857');\n    const extent = projection.getExtent();\n    const size = !extent ?\n      // use an extent that can fit the whole world if need be\n      360 * METERS_PER_UNIT[Units.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(getWidth(extent), getHeight(extent));\n\n    const defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution = defaultMaxResolution / Math.pow(\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    resolutionConstraint = createSnapToPower(\n      zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n}\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {module:ol/View~Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\n */\n\n\n/**\n * @param {Array.<number>} resolutions Resolutions.\n * @return {module:ol/resolutionconstraint~Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        let z = linearFindNearest(resolutions, resolution, direction);\n        z = clamp(z + delta, 0, resolutions.length - 1);\n        const index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          const power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {module:ol/resolutionconstraint~Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        const offset = -direction / 2 + 0.5;\n        const oldLevel = Math.floor(\n          Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        let newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n}\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from '../layer/Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n\n\nclass BaseLayer extends BaseObject {\n  /**\n   * @classdesc\n   * Abstract base class; normally only used for creating subclasses and not\n   * instantiated in apps.\n   * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n   * the options is set as a {@link module:ol/Object} property on the layer object, so\n   * is observable, and has get/set accessors.\n   *\n   * @param {module:ol/layer/Base~Options} options Layer options.\n   * @api\n   */\n  constructor(options) {\n\n    super();\n\n    /**\n    * @type {Object.<string, *>}\n    */\n    const properties = assign({}, options);\n    properties[LayerProperty.OPACITY] =\n       options.opacity !== undefined ? options.opacity : 1;\n    properties[LayerProperty.VISIBLE] =\n       options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] =\n       options.zIndex !== undefined ? options.zIndex : 0;\n    properties[LayerProperty.MAX_RESOLUTION] =\n       options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n       options.minResolution !== undefined ? options.minResolution : 0;\n\n    this.setProperties(properties);\n\n    /**\n    * @type {module:ol/layer/Layer~State}\n    * @private\n    */\n    this.state_ = /** @type {module:ol/layer/Layer~State} */ ({\n      layer: /** @type {module:ol/layer/Layer} */ (this),\n      managed: true\n    });\n\n    /**\n    * The layer type.\n    * @type {module:ol/LayerType}\n    * @protected;\n    */\n    this.type;\n\n  }\n\n  /**\n  * Get the layer type (used when creating a layer renderer).\n  * @return {module:ol/LayerType} The layer type.\n  */\n  getType() {\n    return this.type;\n  }\n\n  /**\n  * @return {module:ol/layer/Layer~State} Layer state.\n  */\n  getLayerState() {\n    this.state_.opacity = clamp(this.getOpacity(), 0, 1);\n    this.state_.sourceState = this.getSourceState();\n    this.state_.visible = this.getVisible();\n    this.state_.extent = this.getExtent();\n    this.state_.zIndex = this.getZIndex();\n    this.state_.maxResolution = this.getMaxResolution();\n    this.state_.minResolution = Math.max(this.getMinResolution(), 0);\n\n    return this.state_;\n  }\n\n  /**\n  * @abstract\n  * @param {Array.<module:ol/layer/Layer>=} opt_array Array of layers (to be\n  *     modified in place).\n  * @return {Array.<module:ol/layer/Layer>} Array of layers.\n  */\n  getLayersArray(opt_array) {}\n\n  /**\n  * @abstract\n  * @param {Array.<module:ol/layer/Layer~State>=} opt_states Optional list of layer\n  *     states (to be modified in place).\n  * @return {Array.<module:ol/layer/Layer~State>} List of layer states.\n  */\n  getLayerStatesArray(opt_states) {}\n\n  /**\n  * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n  * will be visible regardless of extent.\n  * @return {module:ol/extent~Extent|undefined} The layer extent.\n  * @observable\n  * @api\n  */\n  getExtent() {\n    return (\n    /** @type {module:ol/extent~Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n    );\n  }\n\n  /**\n  * Return the maximum resolution of the layer.\n  * @return {number} The maximum resolution of the layer.\n  * @observable\n  * @api\n  */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n  * Return the minimum resolution of the layer.\n  * @return {number} The minimum resolution of the layer.\n  * @observable\n  * @api\n  */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n  * Return the opacity of the layer (between 0 and 1).\n  * @return {number} The opacity of the layer.\n  * @observable\n  * @api\n  */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n  * @abstract\n  * @return {module:ol/source/State} Source state.\n  */\n  getSourceState() {}\n\n  /**\n  * Return the visibility of the layer (`true` or `false`).\n  * @return {boolean} The visibility of the layer.\n  * @observable\n  * @api\n  */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n  * Return the Z-index of the layer, which is used to order layers before\n  * rendering. The default Z-index is 0.\n  * @return {number} The Z-index of the layer.\n  * @observable\n  * @api\n  */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n  * Set the extent at which the layer is visible.  If `undefined`, the layer\n  * will be visible at all extents.\n  * @param {module:ol/extent~Extent|undefined} extent The extent of the layer.\n  * @observable\n  * @api\n  */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n  * Set the maximum resolution at which the layer is visible.\n  * @param {number} maxResolution The maximum resolution of the layer.\n  * @observable\n  * @api\n  */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n  * Set the minimum resolution at which the layer is visible.\n  * @param {number} minResolution The minimum resolution of the layer.\n  * @observable\n  * @api\n  */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n  * Set the opacity of the layer, allowed values range from 0 to 1.\n  * @param {number} opacity The opacity of the layer.\n  * @observable\n  * @api\n  */\n  setOpacity(opacity) {\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n  * Set the visibility of the layer (`true` or `false`).\n  * @param {boolean} visible The visibility of the layer.\n  * @observable\n  * @api\n  */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n  * Set Z-index of the layer, which is used to order layers before rendering.\n  * The default Z-index is 0.\n  * @param {number} zindex The z-index of the layer.\n  * @observable\n  * @api\n  */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n}\n\n\nexport default BaseLayer;\n","/**\n * @module ol/source/State\n */\n\n/**\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n * @enum {string}\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n","/**\n * @module ol/layer/Group\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from '../layer/Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {(Array.<module:ol/layer/Base>|module:ol/Collection.<module:ol/layer/Base>)} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers'\n};\n\n\nclass LayerGroup extends BaseLayer {\n  /**\n   * @classdesc\n   * A {@link module:ol/Collection~Collection} of layers that are handled together.\n   *\n   * A generic `change` event is triggered when the group/Collection changes.\n   *\n   * @param {module:ol/layer/Group~Options=} opt_options Layer options.\n   * @api\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n    const baseOptions = /** @type {module:ol/layer/Group~Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object.<string, Array.<module:ol/events~EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    listen(this,\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_, this);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(layers instanceof Collection,\n          43); // Expected `layers` to be an array or a `Collection`\n        layers = layers;\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer).toString()] = [\n        listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {module:ol/layer/Base} */ (collectionEvent.element);\n    const key = getUid(layer).toString();\n    this.listenerKeys_[key] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {module:ol/layer/Base} */ (collectionEvent.element);\n    const key = getUid(layer).toString();\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!module:ol/Collection.<module:ol/layer/Base>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return (\n      /** @type {!module:ol/Collection.<module:ol/layer/Base>} */ (this.get(Property.LAYERS))\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!module:ol/Collection.<module:ol/layer/Base>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function(layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n\n    const pos = states.length;\n\n    this.getLayers().forEach(function(layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(\n        layerState.minResolution, ownLayerState.minResolution);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\n\nexport default LayerGroup;\n","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array.<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {module:ol/size~Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {module:ol/size~Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {module:ol/size~Size} size Size.\n * @param {number} ratio Ratio.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `module:ol/size~Size` array for the passed in number (meaning: square) or\n * `module:ol/size~Size` array.\n * (meaning: non-square),\n * @param {number|module:ol/size~Size} size Width and height.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport {getUid} from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {assert} from './asserts.js';\nimport {removeNode} from './dom.js';\nimport {listen, unlistenByKey, unlisten} from './events.js';\nimport {stopPropagation} from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, TOUCH} from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport {hasArea} from './size.js';\nimport {DROP} from './structs/PriorityQueue.js';\nimport {create as createTransform, apply as applyTransform} from './transform.js';\n\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {module:ol/View~State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {module:ol/transform~Transform} coordinateToPixelTransform\n * @property {null|module:ol/extent~Extent} extent\n * @property {module:ol/coordinate~Coordinate} focus\n * @property {number} index\n * @property {Object.<number, module:ol/layer/Layer~State>} layerStates\n * @property {Array.<module:ol/layer/Layer~State>} layerStatesArray\n * @property {module:ol/transform~Transform} pixelToCoordinateTransform\n * @property {Array.<module:ol/PluggableMap~PostRenderFunction>} postRenderFunctions\n * @property {module:ol/size~Size} size\n * @property {!Object.<string, boolean>} skippedFeatureUids\n * @property {module:ol/TileQueue} tileQueue\n * @property {Object.<string, Object.<string, module:ol/TileRange>>} usedTiles\n * @property {Array.<number>} viewHints\n * @property {!Object.<string, Object.<string, boolean>>} wantedTiles\n */\n\n\n/**\n * @typedef {function(module:ol/PluggableMap, ?module:ol/PluggableMap~FrameState): boolean} PostRenderFunction\n */\n\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {((function(module:ol/layer/Layer): boolean)|undefined)} layerFilter Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {module:ol/Collection.<module:ol/control/Control>} [controls]\n * @property {module:ol/Collection.<module:ol/interaction/Interaction>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {module:ol/Collection.<module:ol/Overlay>} overlays\n * @property {Object.<string, *>} values\n */\n\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {module:ol/Collection.<module:ol/control/Control>|Array.<module:ol/control/Control>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/util~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {module:ol/Collection.<module:ol/interaction/Interaction>|Array.<module:ol/interaction/Interaction>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array.<module:ol/layer/Base>|module:ol/Collection.<module:ol/layer/Base>} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {boolean} [loadTilesWhileAnimating=false] When set to `true`, tiles\n * will be loaded during animations. This may improve the user experience, but\n * can also make animations stutter on devices with slow memory.\n * @property {boolean} [loadTilesWhileInteracting=false] When set to `true`,\n * tiles will be loaded while interacting with the map. This may improve the\n * user experience, but can also make map panning and zooming choppy on devices\n * with slow memory.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {module:ol/Collection.<module:ol/Overlay>|Array.<module:ol/Overlay>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {module:ol/View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n\n/**\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nclass PluggableMap extends BaseObject {\n\n  /**\n   * @param {module:ol/PluggableMap~MapOptions} options Map options.\n   */\n  constructor(options) {\n\n    super();\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileAnimating_ =\n        options.loadTilesWhileAnimating !== undefined ?\n          options.loadTilesWhileAnimating : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileInteracting_ =\n        options.loadTilesWhileInteracting !== undefined ?\n          options.loadTilesWhileInteracting : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio !== undefined ?\n      options.pixelRatio : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = function() {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_.call(this, Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?module:ol/PluggableMap~FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('DIV');\n    this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n    // prevent page zoom on IE >= 10 browsers\n    this.viewport_.style.msTouchAction = 'none';\n    this.viewport_.style.touchAction = 'none';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('DIV');\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('DIV');\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    const overlayEvents = [\n      EventType.CLICK,\n      EventType.DBLCLICK,\n      EventType.MOUSEDOWN,\n      EventType.TOUCHSTART,\n      EventType.MSPOINTERDOWN,\n      MapBrowserEventType.POINTERDOWN,\n      EventType.MOUSEWHEEL,\n      EventType.WHEEL\n    ];\n    for (let i = 0, ii = overlayEvents.length; i < ii; ++i) {\n      listen(this.overlayContainerStopEvent_, overlayEvents[i], stopPropagation);\n    }\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {module:ol/MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\n    for (const key in MapBrowserEventType) {\n      listen(this.mapBrowserEventHandler_, MapBrowserEventType[key],\n        this.handleMapBrowserEvent, this);\n    }\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    listen(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n\n    /**\n     * @type {module:ol/Collection.<module:ol/control/Control>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {module:ol/Collection.<module:ol/interaction/Interaction>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {module:ol/Collection.<module:ol/Overlay>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object.<string, module:ol/Overlay>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {module:ol/renderer/Map}\n     * @private\n     */\n    this.renderer_ = this.createRenderer();\n\n    /**\n     * @type {function(Event)|undefined}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.focus_ = null;\n\n    /**\n     * @private\n     * @type {!Array.<module:ol/PluggableMap~PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {module:ol/TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this));\n\n    /**\n     * Uids of features to skip at rendering time.\n     * @type {Object.<string, boolean>}\n     * @private\n     */\n    this.skippedFeatureUids_ = {};\n\n    listen(\n      this, getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_, this);\n    listen(this, getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_, this);\n    listen(this, getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_, this);\n    listen(this, getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_, this);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {module:ol/control/Control} control Control.\n       * @this {module:ol/PluggableMap}\n       */\n      (function(control) {\n        control.setMap(this);\n      }).bind(this));\n\n    listen(this.controls, CollectionEventType.ADD,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.controls, CollectionEventType.REMOVE,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.interactions.forEach(\n      /**\n       * @param {module:ol/interaction/Interaction} interaction Interaction.\n       * @this {module:ol/PluggableMap}\n       */\n      (function(interaction) {\n        interaction.setMap(this);\n      }).bind(this));\n\n    listen(this.interactions, CollectionEventType.ADD,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.interactions, CollectionEventType.REMOVE,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    listen(this.overlays_, CollectionEventType.ADD,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        this.addOverlayInternal_(/** @type {module:ol/Overlay} */ (event.element));\n      }, this);\n\n    listen(this.overlays_, CollectionEventType.REMOVE,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        const overlay = /** @type {module:ol/Overlay} */ (event.element);\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }, this);\n\n  }\n\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {module:ol/control/Control} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map.\n   * @param {module:ol/interaction/Interaction} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {module:ol/layer/Base} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {module:ol/Overlay} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {module:ol/Overlay} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * @inheritDoc\n   */\n  disposeInternal() {\n    this.mapBrowserEventHandler_.dispose();\n    unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n    if (this.handleResize_ !== undefined) {\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n      this.animationDelayKey_ = undefined;\n    }\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature),\n   *     module:ol/layer/Layer): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    const layerFilter = opt_options.layerFilter !== undefined ?\n      opt_options.layerFilter : TRUE;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, callback, null,\n      layerFilter, null);\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n   * @return {Array.<module:ol/Feature|module:ol/render/Feature>} The detected features or\n   * `null` if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    let features = null;\n    this.forEachFeatureAtPixel(pixel, function(feature) {\n      if (!features) {\n        features = [];\n      }\n      features.push(feature);\n    }, opt_options);\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance = options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @template U\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, layerFilter, null);\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {Event} event Event.\n   * @return {module:ol/coordinate~Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {Event} event Event.\n   * @return {module:ol/pixel~Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition = event.changedTouches ? event.changedTouches[0] : event;\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string' ? document.getElementById(target) : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {module:ol/pixel~Pixel} pixel Pixel position in the map viewport.\n   * @return {module:ol/coordinate~Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {module:ol/Collection.<module:ol/control/Control>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {module:ol/Collection.<module:ol/Overlay>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {module:ol/Overlay} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {module:ol/Collection.<module:ol/interaction/Interaction>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {module:ol/layer/Group} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return (\n      /** @type {module:ol/layer/Group} */ (this.get(MapProperty.LAYERGROUP))\n    );\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!module:ol/Collection.<module:ol/layer/Base>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {module:ol/coordinate~Coordinate} coordinate A map coordinate.\n   * @return {module:ol/pixel~Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {module:ol/renderer/Map} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {module:ol/size~Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return (\n      /** @type {module:ol/size~Size|undefined} */ (this.get(MapProperty.SIZE))\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {module:ol/View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return (\n      /** @type {module:ol/View} */ (this.get(MapProperty.VIEW))\n    );\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @param {module:ol/Tile} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {module:ol/coordinate~Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    const frameState = this.frameState_;\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n      return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n      return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels\n    // between the center of the tile and the focus.  The factor of 65536 means\n    // that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    const deltaX = tileCenter[0] - frameState.focus[0];\n    const deltaY = tileCenter[1] - frameState.focus[1];\n    return 65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n  }\n\n  /**\n   * @param {Event} browserEvent Browser event.\n   * @param {string=} opt_type Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {module:ol/MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    this.focus_ = mapBrowserEvent.coordinate;\n    mapBrowserEvent.frameState = this.frameState_;\n    const interactionsArray = this.getInteractions().getArray();\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (!interaction.getActive()) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING]) {\n          maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n        if (hints[ViewHint.INTERACTING]) {\n          maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.keyHandlerKeys_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n    }\n\n    if (!targetElement) {\n      this.renderer_.removeLayerRenderers();\n      removeNode(this.viewport_);\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n\n      const keyboardEventTarget = !this.keyboardEventTarget_ ?\n        targetElement : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n        listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.viewport_.setAttribute('data-view', getUid(view));\n      this.viewPropertyListenerKey_ = listen(\n        view, ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_, this);\n      this.viewChangeListenerKey_ = listen(\n        view, EventType.CHANGE,\n        this.handleViewPropertyChanged_, this);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(\n          layerGroup, ObjectEventType.PROPERTYCHANGE,\n          this.render, this),\n        listen(\n          layerGroup, EventType.CHANGE,\n          this.render, this)\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {module:ol/control/Control} control Control.\n   * @return {module:ol/control/Control|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {module:ol/interaction/Interaction} interaction Interaction to remove.\n   * @return {module:ol/interaction/Interaction|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {module:ol/layer/Base} layer Layer.\n   * @return {module:ol/layer/Base|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {module:ol/Overlay} overlay Overlay.\n   * @return {module:ol/Overlay|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    let viewState;\n\n    const size = this.getSize();\n    const view = this.getView();\n    const extent = createEmpty();\n    const previousFrameState = this.frameState_;\n    /** @type {?module:ol/PluggableMap~FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n      const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n      const layerStates = {};\n      for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n        layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n      }\n      viewState = view.getState();\n      let focus = this.focus_;\n      if (!focus) {\n        focus = viewState.center;\n        const pixelResolution = viewState.resolution / this.pixelRatio_;\n        focus[0] = Math.round(focus[0] / pixelResolution) * pixelResolution;\n        focus[1] = Math.round(focus[1] / pixelResolution) * pixelResolution;\n      }\n      frameState = /** @type {module:ol/PluggableMap~FrameState} */ ({\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        extent: extent,\n        focus: focus,\n        index: this.frameIndex_++,\n        layerStates: layerStates,\n        layerStatesArray: layerStatesArray,\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        skippedFeatureUids: this.skippedFeatureUids_,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {}\n      });\n    }\n\n    if (frameState) {\n      frameState.extent = getForViewAndSize(viewState.center,\n        viewState.resolution, viewState.rotation, frameState.size, extent);\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n      if (previousFrameState) {\n        const moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                    !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle = this.previousExtent_ &&\n          !frameState.viewHints[ViewHint.ANIMATING] &&\n          !frameState.viewHints[ViewHint.INTERACTING] &&\n          !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    setTimeout(this.handlePostRender.bind(this), 0);\n\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {module:ol/layer/Group} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {module:ol/size~Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {module:ol/View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    this.set(MapProperty.VIEW, view);\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   */\n  skipFeature(feature) {\n    const featureUid = getUid(feature).toString();\n    this.skippedFeatureUids_[featureUid] = true;\n    this.render();\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    if (!targetElement) {\n      this.setSize(undefined);\n    } else {\n      const computedStyle = getComputedStyle(targetElement);\n      this.setSize([\n        targetElement.offsetWidth -\n            parseFloat(computedStyle['borderLeftWidth']) -\n            parseFloat(computedStyle['paddingLeft']) -\n            parseFloat(computedStyle['paddingRight']) -\n            parseFloat(computedStyle['borderRightWidth']),\n        targetElement.offsetHeight -\n            parseFloat(computedStyle['borderTopWidth']) -\n            parseFloat(computedStyle['paddingTop']) -\n            parseFloat(computedStyle['paddingBottom']) -\n            parseFloat(computedStyle['borderBottomWidth'])\n      ]);\n    }\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   */\n  unskipFeature(feature) {\n    const featureUid = getUid(feature).toString();\n    delete this.skippedFeatureUids_[featureUid];\n    this.render();\n  }\n}\n\n\n/**\n * @param {MapOptions} options Map options.\n * @return {module:ol/PluggableMap~MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object.<string, *>}\n   */\n  const values = {};\n\n  const layerGroup = (options.layers instanceof LayerGroup) ?\n    options.layers : new LayerGroup({layers: options.layers});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] = options.view !== undefined ?\n    options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(options.controls instanceof Collection,\n        47); // Expected `controls` to be an array or an `module:ol/Collection~Collection`\n      controls = options.controls;\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(options.interactions instanceof Collection,\n        48); // Expected `interactions` to be an array or an `module:ol/Collection~Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(options.overlays instanceof Collection,\n        49); // Expected `overlays` to be an array or an `module:ol/Collection~Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport {UNDEFINED} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(module:ol/MapEvent)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n\n  /**\n   * @param {module:ol/control/Control~Options} options Control options.\n   */\n  constructor(options) {\n\n    super();\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = options.element ? options.element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/PluggableMap}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array.<module:ol/events~EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    /**\n     * @type {function(module:ol/MapEvent)}\n     */\n    this.render = options.render ? options.render : UNDEFINED;\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {module:ol/PluggableMap} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {module:ol/PluggableMap} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_ ?\n        this.target_ : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== UNDEFINED) {\n        this.listenerKeys.push(listen(map,\n          MapEventType.POSTRENDER, this.render, this));\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ = typeof target === 'string' ?\n      document.getElementById(target) :\n      target;\n  }\n}\n\n\nexport default Control;\n","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from '../layer/Base.js';\nimport LayerProperty from '../layer/Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/source/Source} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {module:ol/layer/Layer} layer\n * @property {number} opacity\n * @property {module:ol/source/Source~State} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {module:ol/extent~Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n\nclass Layer extends BaseLayer {\n  /**\n   * @classdesc\n   * Abstract base class; normally only used for creating subclasses and not\n   * instantiated in apps.\n   * A visual representation of raster or vector map data.\n   * Layers group together those properties that pertain to how the data is to be\n   * displayed, irrespective of the source of that data.\n   *\n   * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n   * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n   * internally. These unmanaged layers are associated with the map using\n   * {@link module:ol/layer/Layer~Layer#setMap} instead.\n   *\n   * A generic `change` event is fired when the state of the source changes.\n   *\n   * @fires module:ol/render/Event~RenderEvent\n   * @param {module:ol/layer/Layer~Options} options Layer options.\n   * @api\n   */\n  constructor(options) {\n\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    listen(this,\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_, this);\n\n    const source = options.source ? options.source : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {module:ol/source/Source} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    const source = this.get(LayerProperty.SOURCE);\n    return (\n      /** @type {module:ol/source/Source} */ (source) || null\n    );\n  }\n\n  /**\n    * @inheritDoc\n    */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(source,\n        EventType.CHANGE, this.handleSourceChange_, this);\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {module:ol/PluggableMap} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n        const layerState = this.getLayerState();\n        layerState.managed = false;\n        layerState.zIndex = Infinity;\n        evt.frameState.layerStatesArray.push(layerState);\n        evt.frameState.layerStates[getUid(this)] = layerState;\n      }, this);\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {module:ol/source/Source} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n}\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n}\n\n\nexport default Layer;\n","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible=true] Specify if attributions can\n * be collapsed. If you use an OSM source, should be set to `false` — see\n * {@link https://www.openstreetmap.org/copyright OSM Copyright} —\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(module:ol/MapEvent)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n\n  /**\n   * @param {module:ol/control/Attribution~Options=} opt_options Attribution options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('UL');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className = options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n\n    const activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array.<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n  }\n\n  /**\n   * Get a list of visible attributions.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @return {Array.<string>} Attributions.\n   * @private\n   */\n  getSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object.<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array.<string>}\n     */\n    const visibleAttributions = [];\n\n    const layerStatesArray = frameState.layerStatesArray;\n    const resolution = frameState.viewState.resolution;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!visibleAtResolution(layerState, resolution)) {\n        continue;\n      }\n\n      const source = layerState.layer.getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.getSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('LI');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n}\n\n\n/**\n * Update the attribution element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/Attribution}\n * @api\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n\n  /**\n   * @param {module:ol/control/Rotate~Options=} opt_options Rotate options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    const className = options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = 'ol-compass';\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add('ol-compass');\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    if (view.getRotation() !== undefined) {\n      if (this.duration_ > 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n}\n\n\n/**\n * Update the rotate control element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/Rotate}\n * @api\n */\nexport function render(mapEvent) {\n  const frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  const rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    const transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      const contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n\n  /**\n   * @param {module:ol/control/Zoom~Options=} opt_options Zoom options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    const className = options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    const zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n      options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n      options.zoomOutTipLabel : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = className + '-in';\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n    );\n\n    listen(inElement, EventType.CLICK, this.handleClick_.bind(this, delta));\n\n    const outElement = document.createElement('button');\n    outElement.className = className + '-out';\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n    );\n\n    listen(outElement, EventType.CLICK, this.handleClick_.bind(this, -delta));\n\n    const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentResolution = view.getResolution();\n    if (currentResolution) {\n      const newResolution = view.constrainResolution(currentResolution, delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          resolution: newResolution,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setResolution(newResolution);\n      }\n    }\n  }\n}\n\n\nexport default Zoom;\n","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {module:ol/control/Attribution~Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {module:ol/control/Rotate~Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {module:ol/control/Zoom~Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {module:ol/control/util~DefaultsOptions=} opt_options\n * Defaults options.\n * @return {module:ol/Collection.<module:ol/control/Control>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(module:ol/MapBrowserEvent):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return).\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {module:ol/interaction/Interaction~InteractionOptions} options Options.\n   * @api\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @private\n     * @type {module:ol/PluggableMap}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n\n    /**\n     * @type {function(module:ol/MapBrowserEvent):boolean}\n     */\n    this.handleEvent = options.handleEvent;\n\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {module:ol/PluggableMap} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {module:ol/PluggableMap} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {module:ol/coordinate~Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenter();\n  if (currentCenter) {\n    const center = view.constrainCenter(\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    const currentRotation = view.getRotation();\n    const currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentResolution = view.getResolution();\n  let resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    const resolutions = view.getResolutions();\n    resolution = clamp(\n      resolution,\n      view.getMinResolution() || resolutions[resolutions.length - 1],\n      view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    const currentCenter = view.getCenter();\n    let center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    const currentResolution = view.getResolution();\n    const currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        const center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n */\nclass DoubleClickZoom extends Interaction {\n\n  /**\n   * @param {module:ol/interaction/DoubleClickZoom~Options=} opt_options Options.\n   * @api\n   */\n  constructor(opt_options) {\n    super({\n      handleEvent: handleEvent\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  const browserEvent = mapBrowserEvent.originalEvent;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    const map = mapBrowserEvent.map;\n    const anchor = mapBrowserEvent.coordinate;\n    const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    const view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, module:ol/MapBrowserEvent): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {module:ol/MapBrowserEvent} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @function\n * @api\n */\nexport const always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @function\n * @api\n */\nexport const never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function(mapBrowserEvent) {\n  const target = mapBrowserEvent.originalEvent.target;\n  const tagName = target.tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function(mapBrowserEvent) {\n  assert(mapBrowserEvent.pointerEvent, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return (\n    /** @type {module:ol/MapBrowserEvent} */ (mapBrowserEvent).pointerEvent.pointerType == 'mouse'\n  );\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function(mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.pointerEvent;\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/Pointer\n */\nimport {FALSE, UNDEFINED} from '../functions.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport Interaction from '../interaction/Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleDragEvent = UNDEFINED;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Capture dragging.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleUpEvent = FALSE;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Capture dragging.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleDownEvent = FALSE;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleMoveEvent = UNDEFINED;\n\n\n/**\n * @typedef {Object} Options\n * @property {(function(module:ol/MapBrowserPointerEvent):boolean)} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {(function(module:ol/MapBrowserPointerEvent))} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {(function(module:ol/MapBrowserEvent):boolean)} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {(function(module:ol/MapBrowserPointerEvent))} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {(function(module:ol/MapBrowserPointerEvent):boolean)} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} stopDown\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {module:ol/interaction/Pointer~Options=} opt_options Options.\n   * @api\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      handleEvent: options.handleEvent || handleEvent\n    });\n\n    /**\n     * @type {function(module:ol/MapBrowserPointerEvent):boolean}\n     * @private\n     */\n    this.handleDownEvent_ = options.handleDownEvent ?\n      options.handleDownEvent : handleDownEvent;\n\n    /**\n     * @type {function(module:ol/MapBrowserPointerEvent)}\n     * @private\n     */\n    this.handleDragEvent_ = options.handleDragEvent ?\n      options.handleDragEvent : handleDragEvent;\n\n    /**\n     * @type {function(module:ol/MapBrowserPointerEvent)}\n     * @private\n     */\n    this.handleMoveEvent_ = options.handleMoveEvent ?\n      options.handleMoveEvent : handleMoveEvent;\n\n    /**\n     * @type {function(module:ol/MapBrowserPointerEvent):boolean}\n     * @private\n     */\n    this.handleUpEvent_ = options.handleUpEvent ?\n      options.handleUpEvent : handleUpEvent;\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @type {function(boolean):boolean}\n     * @protected\n     */\n    this.stopDown = options.stopDown ? options.stopDown : stopDown;\n\n    /**\n     * @type {!Object.<string, module:ol/pointer/PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array.<module:ol/pointer/PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n\n  }\n\n  /**\n   * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.pointerEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type ==\n          MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n\n}\n\n\n/**\n * @param {Array.<module:ol/pointer/PointerEvent>} pointerEvents List of events.\n * @return {module:ol/pixel~Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n * detected.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Pointer}\n * @api\n */\nexport function handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n\n  let stopEvent = false;\n  this.updateTrackedPointers_(mapBrowserEvent);\n  if (this.handlingDownUpSequence) {\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n      this.handleDragEvent_(mapBrowserEvent);\n    } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n      const handledUp = this.handleUpEvent_(mapBrowserEvent);\n      this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n    }\n  } else {\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n      const handled = this.handleDownEvent_(mapBrowserEvent);\n      this.handlingDownUpSequence = handled;\n      stopEvent = this.stopDown(handled);\n    } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n      this.handleMoveEvent_(mapBrowserEvent);\n    }\n  }\n  return !stopEvent;\n}\n\n\nexport default PointerInteraction;\n\n/**\n * @param {boolean} handled Was the event handled by the interaction?\n * @return {boolean} Should the `down` event be stopped?\n */\nfunction stopDown(handled) {\n  return handled;\n}\n","/**\n * @module ol/interaction/DragPan\n */\nimport ViewHint from '../ViewHint.js';\nimport {scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {module:ol/Kinetic} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {module:ol/interaction/DragPan~Options=} opt_options Options.\n   * @api\n   */\n  constructor(opt_options) {\n\n    super({\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {module:ol/Kinetic|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {module:ol/pixel~Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n\n  }\n\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  const targetPointers = this.targetPointers;\n  const centroid = centroidFromPointers(targetPointers);\n  if (targetPointers.length == this.lastPointersCount_) {\n    if (this.kinetic_) {\n      this.kinetic_.update(centroid[0], centroid[1]);\n    }\n    if (this.lastCentroid) {\n      const deltaX = this.lastCentroid[0] - centroid[0];\n      const deltaY = centroid[1] - this.lastCentroid[1];\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      let center = [deltaX, deltaY];\n      scaleCoordinate(center, view.getResolution());\n      rotateCoordinate(center, view.getRotation());\n      addCoordinate(center, view.getCenter());\n      center = view.constrainCenter(center);\n      view.setCenter(center);\n    }\n  } else if (this.kinetic_) {\n    // reset so we don't overestimate the kinetic energy after\n    // after one finger down, tiny drag, second finger down\n    this.kinetic_.begin();\n  }\n  this.lastCentroid = centroid;\n  this.lastPointersCount_ = targetPointers.length;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  if (this.targetPointers.length === 0) {\n    if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n      const distance = this.kinetic_.getDistance();\n      const angle = this.kinetic_.getAngle();\n      const center = /** @type {!module:ol/coordinate~Coordinate} */ (view.getCenter());\n      const centerpx = map.getPixelFromCoordinate(center);\n      const dest = map.getCoordinateFromPixel([\n        centerpx[0] - distance * Math.cos(angle),\n        centerpx[1] - distance * Math.sin(angle)\n      ]);\n      view.animate({\n        center: view.constrainCenter(dest),\n        duration: 500,\n        easing: easeOut\n      });\n    }\n    view.setHint(ViewHint.INTERACTING, -1);\n    return false;\n  } else {\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    this.lastCentroid = null;\n    if (!this.handlingDownUpSequence) {\n      view.setHint(ViewHint.INTERACTING, 1);\n    }\n    // stop any current animation\n    if (view.getAnimating()) {\n      view.setCenter(mapBrowserEvent.frameState.viewState.center);\n    }\n    if (this.kinetic_) {\n      this.kinetic_.begin();\n    }\n    // No kinetic as soon as more than one pointer on the screen is\n    // detected. This is to prevent nasty pans after pinch.\n    this.noKinetic_ = this.targetPointers.length > 1;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n */\nclass DragRotate extends PointerInteraction {\n\n  /**\n   * @param {module:ol/interaction/DragRotate~Options=} opt_options Options.\n   * @api\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  if (view.getConstraints().rotation === disable) {\n    return;\n  }\n  const size = map.getSize();\n  const offset = mapBrowserEvent.pixel;\n  const theta =\n      Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n  if (this.lastAngle_ !== undefined) {\n    const delta = theta - this.lastAngle_;\n    const rotation = view.getRotation();\n    rotateWithoutConstraints(view, rotation - delta);\n  }\n  this.lastAngle_ = theta;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n  const rotation = view.getRotation();\n  rotate(view, rotation, undefined, this.duration_);\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n    const map = mapBrowserEvent.map;\n    map.getView().setHint(ViewHint.INTERACTING, 1);\n    this.lastAngle_ = undefined;\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {module:ol/geom/Polygon}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\n    this.element_.style.position = 'absolute';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {module:ol/PluggableMap}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/pixel~Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/pixel~Pixel}\n     */\n    this.endPixel_ = null;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {module:ol/PluggableMap} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = style.top = style.width = style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {module:ol/pixel~Pixel} startPixel Start pixel.\n   * @param {module:ol/pixel~Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]]\n    ];\n    const coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {module:ol/geom/Polygon} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {UNDEFINED} from '../functions.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, module:ol/MapBrowserEvent, module:ol/pixel~Pixel, module:ol/pixel~Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {module:ol/interaction/DragBox~EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:module:ol/interaction/DragBox, module:ol/MapBrowserEvent)} onBoxEnd Code to execute just\n * before `boxend` is fired.\n */\n\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nclass DragBoxEvent extends Event {\n\n  /**\n   * @param {string} type The event type.\n   * @param {module:ol/coordinate~Coordinate} coordinate The event coordinate.\n   * @param {module:ol/MapBrowserEvent} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {module:ol/coordinate~Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {module:ol/MapBrowserEvent}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires module:ol/interaction/DragBox~DragBoxEvent\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {module:ol/interaction/DragBox~Options=} opt_options Options.\n   * @api\n   */\n  constructor(opt_options) {\n\n    super({\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n    * @type {module:ol/render/Box}\n    * @private\n    */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @type {function(this:module:ol/interaction/DragBox, module:ol/MapBrowserEvent)}\n     * @private\n     */\n    this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : UNDEFINED;\n\n    /**\n    * @type {module:ol/pixel~Pixel}\n    * @private\n    */\n    this.startPixel_ = null;\n\n    /**\n    * @private\n    * @type {module:ol/events/condition~Condition}\n    */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n    * @private\n    * @type {module:ol/interaction/DragBox~EndCondition}\n    */\n    this.boxEndCondition_ = options.boxEndCondition ?\n      options.boxEndCondition : defaultBoxEndCondition;\n  }\n\n  /**\n  * Returns geometry of last drawn box.\n  * @return {module:ol/geom/Polygon} Geometry.\n  * @api\n  */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n}\n\n\n/**\n * The default condition for determining whether the boxend event\n * should fire.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent The originating MapBrowserEvent\n *     leading to the box end.\n * @param {module:ol/pixel~Pixel} startPixel The starting pixel of the box.\n * @param {module:ol/pixel~Pixel} endPixel The end pixel of the box.\n * @return {boolean} Whether or not the boxend condition should be fired.\n * @this {module:ol/interaction/DragBox}\n */\nfunction defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n  const width = endPixel[0] - startPixel[0];\n  const height = endPixel[1] - startPixel[1];\n  return width * width + height * height >= this.minArea_;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n  this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n    mapBrowserEvent.coordinate, mapBrowserEvent));\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  this.box_.setMap(null);\n\n  if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n    this.onBoxEnd_(mapBrowserEvent);\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)) {\n    this.startPixel_ = mapBrowserEvent.pixel;\n    this.box_.setMap(mapBrowserEvent.map);\n    this.box_.setPixels(this.startPixel_, this.startPixel_);\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from '../interaction/DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {module:ol/interaction/DragZoom~Options=} opt_options Options.\n   * @api\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      onBoxEnd: onBoxEnd\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n}\n\n\n/**\n * @this {module:ol/interaction/DragZoom}\n */\nfunction onBoxEnd() {\n  const map = this.getMap();\n  const view = /** @type {!module:ol/View} */ (map.getView());\n  const size = /** @type {!module:ol/size~Size} */ (map.getSize());\n  let extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    const mapExtent = view.calculateExtent(size);\n    const boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    const factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  const resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  let center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {module:ol/interaction/KeyboardPan~Options=} opt_options Options.\n   * @api\n   */\n  constructor(opt_options) {\n\n    super({\n      handleEvent: handleEvent\n    });\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {module:ol/MapBrowserEvent} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function(mapBrowserEvent) {\n      return noModifierKeys(mapBrowserEvent) &&\n        targetNotEditable(mapBrowserEvent);\n    };\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition !== undefined ?\n      options.condition : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ = options.pixelDelta !== undefined ?\n      options.pixelDelta : 128;\n\n  }\n\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    const keyEvent = mapBrowserEvent.originalEvent;\n    const keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      let deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      const delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link moudle:ol/interaction/KeyboardPan~KeyboardPan}.\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {module:ol/interaction/KeyboardZoom~Options=} opt_options Options.\n   * @api\n   */\n  constructor(opt_options) {\n\n    super({\n      handleEvent: handleEvent\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  }\n\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    const keyEvent = mapBrowserEvent.originalEvent;\n    const charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      const map = mapBrowserEvent.map;\n      const delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {always} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\nconst MAX_DELTA = 1;\n\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [constrainResolution=false] When using a trackpad or\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\n * ends.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {module:ol/interaction/MouseWheelZoom~Options=} opt_options Options.\n   * @api\n   */\n  constructor(opt_options) {\n\n    super({\n      handleEvent: handleEvent\n    });\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {?module:ol/coordinate~Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.timeoutId_ = undefined;\n\n    /**\n     * @private\n     * @type {module:ol/interaction/MouseWheelZoom~Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {number|undefined}\n     */\n    this.trackpadTimeoutId_ = undefined;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.trackpadDeltaPerZoom_ = 300;\n\n    /**\n     * The zoom factor by which scroll zooming is allowed to exceed the limits.\n     * @private\n     * @type {number}\n     */\n    this.trackpadZoomBuffer_ = 1.5;\n\n  }\n\n  /**\n   * @private\n   */\n  decrementInteractingHint_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n  }\n\n  /**\n   * @private\n   * @param {module:ol/PluggableMap} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    const maxDelta = MAX_DELTA;\n    const delta = clamp(this.delta_, -maxDelta, maxDelta);\n    zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n    this.mode_ = undefined;\n    this.delta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * mousewheel-event) and eventually zooms the map.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} Allow event propagation.\n * @this {module:ol/interaction/MouseWheelZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  const type = mapBrowserEvent.type;\n  if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n    return true;\n  }\n\n  mapBrowserEvent.preventDefault();\n\n  const map = mapBrowserEvent.map;\n  const wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n  if (this.useAnchor_) {\n    this.lastAnchor_ = mapBrowserEvent.coordinate;\n  }\n\n  // Delta normalisation inspired by\n  // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n  let delta;\n  if (mapBrowserEvent.type == EventType.WHEEL) {\n    delta = wheelEvent.deltaY;\n    if (FIREFOX &&\n        wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      delta /= DEVICE_PIXEL_RATIO;\n    }\n    if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      delta *= 40;\n    }\n  } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n    delta = -wheelEvent.wheelDeltaY;\n    if (SAFARI) {\n      delta /= 3;\n    }\n  }\n\n  if (delta === 0) {\n    return false;\n  }\n\n  const now = Date.now();\n\n  if (this.startTime_ === undefined) {\n    this.startTime_ = now;\n  }\n\n  if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n    this.mode_ = Math.abs(delta) < 4 ?\n      Mode.TRACKPAD :\n      Mode.WHEEL;\n  }\n\n  if (this.mode_ === Mode.TRACKPAD) {\n    const view = map.getView();\n    if (this.trackpadTimeoutId_) {\n      clearTimeout(this.trackpadTimeoutId_);\n    } else {\n      view.setHint(ViewHint.INTERACTING, 1);\n    }\n    this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n    let resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n    const minResolution = view.getMinResolution();\n    const maxResolution = view.getMaxResolution();\n    let rebound = 0;\n    if (resolution < minResolution) {\n      resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n      rebound = 1;\n    } else if (resolution > maxResolution) {\n      resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n      rebound = -1;\n    }\n    if (this.lastAnchor_) {\n      const center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n      view.setCenter(view.constrainCenter(center));\n    }\n    view.setResolution(resolution);\n\n    if (rebound === 0 && this.constrainResolution_) {\n      view.animate({\n        resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: this.duration_\n      });\n    }\n\n    if (rebound > 0) {\n      view.animate({\n        resolution: minResolution,\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: 500\n      });\n    } else if (rebound < 0) {\n      view.animate({\n        resolution: maxResolution,\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: 500\n      });\n    }\n    this.startTime_ = now;\n    return false;\n  }\n\n  this.delta_ += delta;\n\n  const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n  clearTimeout(this.timeoutId_);\n  this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n  return false;\n}\n\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {module:ol/interaction/PinchRotate~Options=} opt_options Options.\n   * @api\n   */\n  constructor(opt_options) {\n\n    super({\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  let rotationDelta = 0.0;\n\n  const touch0 = this.targetPointers[0];\n  const touch1 = this.targetPointers[1];\n\n  // angle between touches\n  const angle = Math.atan2(\n    touch1.clientY - touch0.clientY,\n    touch1.clientX - touch0.clientX);\n\n  if (this.lastAngle_ !== undefined) {\n    const delta = angle - this.lastAngle_;\n    this.rotationDelta_ += delta;\n    if (!this.rotating_ &&\n        Math.abs(this.rotationDelta_) > this.threshold_) {\n      this.rotating_ = true;\n    }\n    rotationDelta = delta;\n  }\n  this.lastAngle_ = angle;\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  if (view.getConstraints().rotation === disable) {\n    return;\n  }\n\n  // rotate anchor point.\n  // FIXME: should be the intersection point between the lines:\n  //     touch0,touch1 and previousTouch0,previousTouch1\n  const viewportPosition = map.getViewport().getBoundingClientRect();\n  const centroid = centroidFromPointers(this.targetPointers);\n  centroid[0] -= viewportPosition.left;\n  centroid[1] -= viewportPosition.top;\n  this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n  // rotate\n  if (this.rotating_) {\n    const rotation = view.getRotation();\n    map.render();\n    rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (this.targetPointers.length < 2) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    if (this.rotating_) {\n      const rotation = view.getRotation();\n      rotate(view, rotation, this.anchor_, this.duration_);\n    }\n    return false;\n  } else {\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length >= 2) {\n    const map = mapBrowserEvent.map;\n    this.anchor_ = null;\n    this.lastAngle_ = undefined;\n    this.rotating_ = false;\n    this.rotationDelta_ = 0.0;\n    if (!this.handlingDownUpSequence) {\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {zoom, zoomWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {module:ol/interaction/PinchZoom~Options=} opt_options Options.\n   * @api\n   */\n  constructor(opt_options) {\n\n    super({\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n\n  }\n\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  let scaleDelta = 1.0;\n\n  const touch0 = this.targetPointers[0];\n  const touch1 = this.targetPointers[1];\n  const dx = touch0.clientX - touch1.clientX;\n  const dy = touch0.clientY - touch1.clientY;\n\n  // distance between touches\n  const distance = Math.sqrt(dx * dx + dy * dy);\n\n  if (this.lastDistance_ !== undefined) {\n    scaleDelta = this.lastDistance_ / distance;\n  }\n  this.lastDistance_ = distance;\n\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  const resolution = view.getResolution();\n  const maxResolution = view.getMaxResolution();\n  const minResolution = view.getMinResolution();\n  let newResolution = resolution * scaleDelta;\n  if (newResolution > maxResolution) {\n    scaleDelta = maxResolution / resolution;\n    newResolution = maxResolution;\n  } else if (newResolution < minResolution) {\n    scaleDelta = minResolution / resolution;\n    newResolution = minResolution;\n  }\n\n  if (scaleDelta != 1.0) {\n    this.lastScaleDelta_ = scaleDelta;\n  }\n\n  // scale anchor point.\n  const viewportPosition = map.getViewport().getBoundingClientRect();\n  const centroid = centroidFromPointers(this.targetPointers);\n  centroid[0] -= viewportPosition.left;\n  centroid[1] -= viewportPosition.top;\n  this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n  // scale, bypass the resolution constraint\n  map.render();\n  zoomWithoutConstraints(view, newResolution, this.anchor_);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (this.targetPointers.length < 2) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    const resolution = view.getResolution();\n    if (this.constrainResolution_ ||\n        resolution < view.getMinResolution() ||\n        resolution > view.getMaxResolution()) {\n      // Zoom to final resolution, with an animation, and provide a\n      // direction not to zoom out/in if user was pinching in/out.\n      // Direction is > 0 if pinching out, and < 0 if pinching in.\n      const direction = this.lastScaleDelta_ - 1;\n      zoom(view, resolution, this.anchor_, this.duration_, direction);\n    }\n    return false;\n  } else {\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length >= 2) {\n    const map = mapBrowserEvent.map;\n    this.anchor_ = null;\n    this.lastDistance_ = undefined;\n    this.lastScaleDelta_ = 1;\n    if (!this.handlingDownUpSequence) {\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport {TRUE} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from '../interaction/Interaction.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array.<function(new: module:ol/format/Feature)>} [formatConstructors] Format constructors.\n * @property {module:ol/source/Vector} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {module:ol/proj~ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {Element} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n\n/**\n * @enum {string}\n */\nconst DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event module:ol/interaction/DragAndDrop~DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nclass DragAndDropEvent extends Event {\n\n  /**\n   * @param {module:ol/interaction/DragAndDrop~DragAndDropEventType} type Type.\n   * @param {File} file File.\n   * @param {Array.<module:ol/Feature>=} opt_features Features.\n   * @param {module:ol/proj/Projection=} opt_projection Projection.\n   */\n  constructor(type, file, opt_features, opt_projection) {\n\n    super(type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array.<module:ol/Feature>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {module:ol/proj/Projection|undefined}\n     * @api\n     */\n    this.projection = opt_projection;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * @fires module:ol/interaction/DragAndDrop~DragAndDropEvent\n */\nclass DragAndDrop extends Interaction {\n  /**\n   * @param {module:ol/interaction/DragAndDrop~Options=} opt_options Options.\n   * @api\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      handleEvent: TRUE\n    });\n\n    /**\n     * @private\n     * @type {Array.<function(new: module:ol/format/Feature)>}\n     */\n    this.formatConstructors_ = options.formatConstructors ?\n      options.formatConstructors : [];\n\n    /**\n     * @private\n     * @type {module:ol/proj/Projection}\n     */\n    this.projection_ = options.projection ?\n      getProjection(options.projection) : null;\n\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/source/Vector}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {Element}\n     */\n    this.target = options.target ? options.target : null;\n\n  }\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  handleResult_(file, event) {\n    const result = event.target.result;\n    const map = this.getMap();\n    let projection = this.projection_;\n    if (!projection) {\n      const view = map.getView();\n      projection = view.getProjection();\n    }\n\n    const formatConstructors = this.formatConstructors_;\n    let features = [];\n    for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      /**\n       * Avoid \"cannot instantiate abstract class\" error.\n       * @type {Function}\n       */\n      const formatConstructor = formatConstructors[i];\n      /**\n       * @type {module:ol/format/Feature}\n       */\n      const format = new formatConstructor();\n      features = this.tryReadFeatures_(format, result, {\n        featureProjection: projection\n      });\n      if (features && features.length > 0) {\n        break;\n      }\n    }\n    if (this.source_) {\n      this.source_.clear();\n      this.source_.addFeatures(features);\n    }\n    this.dispatchEvent(\n      new DragAndDropEvent(\n        DragAndDropEventType.ADD_FEATURES, file,\n        features, projection));\n  }\n\n  /**\n   * @private\n   */\n  registerListeners_() {\n    const map = this.getMap();\n    if (map) {\n      const dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [\n        listen(dropArea, EventType.DROP, handleDrop, this),\n        listen(dropArea, EventType.DRAGENTER, handleStop, this),\n        listen(dropArea, EventType.DRAGOVER, handleStop, this),\n        listen(dropArea, EventType.DROP, handleStop, this)\n      ];\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setActive(active) {\n    super.setActive(active);\n    if (active) {\n      this.registerListeners_();\n    } else {\n      this.unregisterListeners_();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    this.unregisterListeners_();\n    super.setMap(map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  }\n\n  /**\n   * @param {module:ol/format/Feature} format Format.\n   * @param {string} text Text.\n   * @param {module:ol/format/Feature~ReadOptions} options Read options.\n   * @private\n   * @return {Array.<module:ol/Feature>} Features.\n   */\n  tryReadFeatures_(format, text, options) {\n    try {\n      return format.readFeatures(text, options);\n    } catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * @private\n   */\n  unregisterListeners_() {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  }\n}\n\n\n/**\n * @param {DragEvent} event Event.\n * @this {module:ol/interaction/DragAndDrop}\n */\nfunction handleDrop(event) {\n  const files = event.dataTransfer.files;\n  for (let i = 0, ii = files.length; i < ii; ++i) {\n    const file = files.item(i);\n    const reader = new FileReader();\n    reader.addEventListener(EventType.LOAD, this.handleResult_.bind(this, file));\n    reader.readAsText(file);\n  }\n}\n\n\n/**\n * @param {DragEvent} event Event.\n */\nfunction handleStop(event) {\n  event.stopPropagation();\n  event.preventDefault();\n  event.dataTransfer.dropEffect = 'copy';\n}\n\n\nexport default DragAndDrop;\n","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {shiftKeyOnly, mouseOnly} from '../events/condition.js';\nimport {rotate, rotateWithoutConstraints, zoom, zoomWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n */\nclass DragRotateAndZoom extends PointerInteraction {\n\n  /**\n   * @param {module:ol/interaction/DragRotateAndZoom~Options=} opt_options Options.\n   * @api\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent\n    });\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastMagnitude_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n  }\n\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  const map = mapBrowserEvent.map;\n  const size = map.getSize();\n  const offset = mapBrowserEvent.pixel;\n  const deltaX = offset[0] - size[0] / 2;\n  const deltaY = size[1] / 2 - offset[1];\n  const theta = Math.atan2(deltaY, deltaX);\n  const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n  const view = map.getView();\n  if (view.getConstraints().rotation !== disable && this.lastAngle_ !== undefined) {\n    const angleDelta = theta - this.lastAngle_;\n    rotateWithoutConstraints(view, view.getRotation() - angleDelta);\n  }\n  this.lastAngle_ = theta;\n  if (this.lastMagnitude_ !== undefined) {\n    const resolution = this.lastMagnitude_ * (view.getResolution() / magnitude);\n    zoomWithoutConstraints(view, resolution);\n  }\n  if (this.lastMagnitude_ !== undefined) {\n    this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n  }\n  this.lastMagnitude_ = magnitude;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n  const direction = this.lastScaleDelta_ - 1;\n  rotate(view, view.getRotation());\n  zoom(view, view.getResolution(), undefined, this.duration_, direction);\n  this.lastScaleDelta_ = 0;\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (this.condition_(mapBrowserEvent)) {\n    mapBrowserEvent.map.getView().setHint(ViewHint.INTERACTING, 1);\n    this.lastAngle_ = undefined;\n    this.lastMagnitude_ = undefined;\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default DragRotateAndZoom;\n","/**\n * @module ol/geom/Circle\n */\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinate} from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n\n  /**\n   * @param {!module:ol/coordinate~Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `opt_layout` and no\n   *     `opt_radius` are also accepted.\n   * @param {number=} opt_radius Radius.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   */\n  constructor(center, opt_radius, opt_layout) {\n    super();\n    if (opt_layout !== undefined && opt_radius === undefined) {\n      this.setFlatCoordinates(opt_layout, center);\n    } else {\n      const radius = opt_radius ? opt_radius : 0;\n      this.setCenterAndRadius(center, radius, opt_layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/Circle} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    return new Circle(this.flatCoordinates.slice(), undefined, this.layout);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {module:ol/coordinate~Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n      extent);\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.CIRCLE;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate, this);\n    }\n    return false;\n\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {module:ol/coordinate~Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!module:ol/coordinate~Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, opt_layout) {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getCoordinates() {}\n\n  /**\n   * @inheritDoc\n   */\n  setCoordinates(coordinates, opt_layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n}\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {module:ol/proj~ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {module:ol/proj~ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {module:ol/geom/Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateCoordinatesArray} from '../geom/flat/inflate.js';\nimport {interpolatePoint, lineStringsCoordinateAtM} from '../geom/flat/interpolate.js';\nimport {intersectsLineStringArray} from '../geom/flat/intersectsextent.js';\nimport {douglasPeuckerArray} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n\n  /**\n   * @param {Array.<Array.<module:ol/coordinate~Coordinate>|module:ol/geom~MultiLineString>|Array.<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `opt_layout` and `opt_ends` are also accepted.)\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @param {Array.<number>} opt_ends Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n\n    super();\n\n    /**\n     * @type {Array.<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(coordinates, opt_layout);\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n      this.ends_ = opt_ends;\n    } else {\n      let layout = this.getLayout();\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        const lineString = coordinates[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {module:ol/geom/LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/MultiLineString} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n   * @return {module:ol/coordinate~Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate, opt_interpolate) {\n    if ((this.layout != GeometryLayout.XYM &&\n         this.layout != GeometryLayout.XYZM) ||\n        this.flatCoordinates.length === 0) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(this.flatCoordinates, 0,\n      this.ends_, this.stride, m, extrapolate, interpolate);\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array.<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {module:ol/geom/LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array.<module:ol/geom/LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array.<module:ol/geom/LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array.<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates, offset, end, stride, 0.5);\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_LINE_STRING;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n\n  /**\n   * @param {Array.<module:ol/coordinate~Coordinate>|Array.<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {module:ol/geom/Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/MultiPoint} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n    return multiPoint;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {module:ol/geom/Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(this.flatCoordinates.slice(\n      index * this.stride, (index + 1) * this.stride), this.layout);\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array.<module:ol/geom/Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array.<module:ol/geom/Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POINT;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n}\n\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array.<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from '../geom/flat/area.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {linearRingssContainsXY} from '../geom/flat/contains.js';\nimport {deflateMultiCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from '../geom/flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from '../geom/flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from '../geom/flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRingsArray} from '../geom/flat/orient.js';\nimport {quantizeMultiArray} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n\n  /**\n   * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>|Array.<number>} coordinates Coordinates.\n   *     For internal use, flat coordinats in combination with `opt_layout` and `opt_endss` are also accepted.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @param {Array.<number>} opt_endss Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, opt_layout, opt_endss) {\n\n    super();\n\n    /**\n     * @type {Array.<Array.<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      let layout = this.getLayout();\n      const flatCoordinates = [];\n      const endss = [];\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        const polygon = coordinates[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {module:ol/geom/Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array.<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/MultiPolygon} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    return new MultiPolygon(\n      this.flatCoordinates.slice(), this.layout, newEndss);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} Coordinates.\n   * @override\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates, 0, this.endss_, this.stride);\n  }\n\n  /**\n   * @return {Array.<Array.<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array.<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates, 0, this.endss_, this.stride);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n        flatCenters);\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {module:ol/geom/MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n  }\n\n  /**\n   * @return {Array.<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(\n        flatCoordinates, 0, this.endss_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRingsArray(\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates, 0, this.endss_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\n    return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {module:ol/geom/Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array.<module:ol/geom/Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POLYGON;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\n\nexport default MultiPolygon;\n","/**\n * @module ol/LayerType\n */\n\n/**\n * A layer type used when creating layer renderers.\n * @enum {string}\n */\nexport default {\n  IMAGE: 'IMAGE',\n  TILE: 'TILE',\n  VECTOR_TILE: 'VECTOR_TILE',\n  VECTOR: 'VECTOR'\n};\n","/**\n * @module ol/layer/VectorRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n","/**\n * @module ol/layer/Vector\n */\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport VectorRenderType from '../layer/VectorRenderType.js';\nimport {assign} from '../obj.js';\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {module:ol/layer/VectorRenderType|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {module:ol/source/Vector} [source] Source.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during animations. This means that no\n * vectors will be shown clipped, but the setting will have a performance impact for large\n * amounts of vector data. When set to `false`, batches will be recreated when no animation\n * is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during interactions. See also\n * `updateWhileAnimating`.\n */\n\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport const RenderType = {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n\n\nclass VectorLayer extends Layer {\n  /**\n   * @classdesc\n   * Vector data that is rendered client-side.\n   * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n   * property on the layer object; for example, setting `title: 'My Title'` in the\n   * options means that `title` is observable, and has get/set accessors.\n   *\n   * @param {module:ol/layer/Vector~Options=} opt_options Options.\n   * @api\n   */\n  constructor(opt_options) {\n    const options = opt_options ?\n      opt_options : /** @type {module:ol/layer/Vector~Options} */ ({});\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n    * @private\n    * @type {boolean}\n    */\n    this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.renderBuffer_ = options.renderBuffer !== undefined ?\n      options.renderBuffer : 100;\n\n    /**\n    * User provided style.\n    * @type {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n    * @private\n    */\n    this.style_ = null;\n\n    /**\n    * Style function for use within the library.\n    * @type {module:ol/style/Style~StyleFunction|undefined}\n    * @private\n    */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n      options.updateWhileAnimating : false;\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n      options.updateWhileInteracting : false;\n\n    /**\n    * @private\n    * @type {module:ol/layer/VectorTileRenderType|string}\n    */\n    this.renderMode_ = options.renderMode || VectorRenderType.VECTOR;\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {module:ol/LayerType}\n    */\n    this.type = LayerType.VECTOR;\n\n  }\n\n  /**\n  * @return {boolean} Declutter.\n  */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n  * @param {boolean} declutter Declutter.\n  */\n  setDeclutter(declutter) {\n    this.declutter_ = declutter;\n  }\n\n  /**\n  * @return {number|undefined} Render buffer.\n  */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n  * @return {function(module:ol/Feature, module:ol/Feature): number|null|undefined} Render\n  *     order.\n  */\n  getRenderOrder() {\n    return (\n    /** @type {module:ol/render~OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\n    );\n  }\n\n  /**\n  * Get the style for features.  This returns whatever was passed to the `style`\n  * option at construction or to the `setStyle` method.\n  * @return {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n  *     Layer style.\n  * @api\n  */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n  * Get the style function.\n  * @return {module:ol/style/Style~StyleFunction|undefined} Layer style function.\n  * @api\n  */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     animating.\n  */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     interacting.\n  */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n  * @param {module:ol/render~OrderFunction|null|undefined} renderOrder\n  *     Render order.\n  */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n  * Set the style for features.  This can be a single style object, an array\n  * of styles, or a function that takes a feature and resolution and returns\n  * an array of styles. If it is `undefined` the default style is used. If\n  * it is `null` the layer has no style (a `null` style), so only features\n  * that have their own styles will be rendered in the layer. See\n  * {@link module:ol/style} for information on the default style.\n  * @param {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction|null|undefined}\n  *     style Layer style.\n  * @api\n  */\n  setStyle(style) {\n    this.style_ = style !== undefined ? style : createDefaultStyle;\n    this.styleFunction_ = style === null ?\n      undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n\n  /**\n  * @return {module:ol/layer/VectorRenderType|string} The render mode.\n  */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n}\n\n\n/**\n * Return the associated {@link module:ol/source/Vector vectorsource} of the layer.\n * @function\n * @return {module:ol/source/Vector} Source.\n * @api\n */\nVectorLayer.prototype.getSource;\n\n\nexport default VectorLayer;\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n","/**\n * @module ol/featureloader\n */\nimport {UNDEFINED} from './functions.js';\nimport FormatType from './format/FormatType.js';\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:module:ol/source/Vector, module:ol/extent~Extent, number,\n *                    module:ol/proj/Projection)} FeatureLoader\n * @api\n */\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(module:ol/extent~Extent, number, module:ol/proj/Projection): string} FeatureUrlFunction\n * @api\n */\n\n\n/**\n * @param {string|module:ol/featureloader~FeatureUrlFunction} url Feature URL service.\n * @param {module:ol/format/Feature} format Feature format.\n * @param {function(this:module:ol/VectorTile, Array.<module:ol/Feature>, module:ol/proj/Projection, module:ol/extent~Extent)|function(this:module:ol/source/Vector, Array.<module:ol/Feature>)} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:module:ol/VectorTile)|function(this:module:ol/source/Vector)} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {module:ol/featureloader~FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {module:ol/extent~Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @this {module:ol/source/Vector|module:ol/VectorTile}\n     */\n    function(extent, resolution, projection) {\n      const xhr = new XMLHttpRequest();\n      xhr.open('GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true);\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          const type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          let source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source,\n              {featureProjection: projection}),\n            format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|module:ol/featureloader~FeatureUrlFunction} url Feature URL service.\n * @param {module:ol/format/Feature} format Feature format.\n * @return {module:ol/featureloader~FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n    /**\n     * @param {Array.<module:ol/Feature>} features The loaded features.\n     * @param {module:ol/proj/Projection} dataProjection Data\n     * projection.\n     * @this {module:ol/source/Vector}\n     */\n    function(features, dataProjection) {\n      this.addFeatures(features);\n    }, /* FIXME handle error */ UNDEFINED);\n}\n","/**\n * @module ol/loadingstrategy\n */\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/extent~Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/extent~Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {function(module:ol/extent~Extent, number): Array.<module:ol/extent~Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {module:ol/extent~Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array.<module:ol/extent~Extent>} Extents.\n     */\n    function(extent, resolution) {\n      const z = tileGrid.getZForResolution(resolution);\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array.<module:ol/extent~Extent>} */\n      const extents = [];\n      /** @type {module:ol/tilecoord~TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/source/Source\n */\n\nimport {UNDEFINED} from '../functions.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(module:ol/PluggableMap~FrameState): (string|Array.<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array.<string>|module:ol/source/Source~Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {module:ol/proj~ProjectionLike} projection\n * @property {module:ol/source/State} [state]\n * @property {boolean} [wrapX]\n */\n\n\nclass Source extends BaseObject {\n  /**\n   * @classdesc\n   * Abstract base class; normally only used for creating subclasses and not\n   * instantiated in apps.\n   * Base class for {@link module:ol/layer/Layer~Layer} sources.\n   *\n   * A generic `change` event is triggered when the state of the source changes.\n   *\n   * @param {module:ol/source/Source~Options} options Source options.\n   * @api\n   */\n  constructor(options) {\n\n    super();\n\n    /**\n    * @private\n    * @type {module:ol/proj/Projection}\n    */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n    * @private\n    * @type {?module:ol/source/Source~Attribution}\n    */\n    this.attributions_ = this.adaptAttributions_(options.attributions);\n\n    /**\n    * @private\n    * @type {module:ol/source/State}\n    */\n    this.state_ = options.state !== undefined ?\n      options.state : SourceState.READY;\n\n    /**\n    * @private\n    * @type {boolean}\n    */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n  }\n\n  /**\n  * Turns the attributions option into an attributions function.\n  * @param {module:ol/source/Source~AttributionLike|undefined} attributionLike The attribution option.\n  * @return {?module:ol/source/Source~Attribution} An attribution function (or null).\n  */\n  adaptAttributions_(attributionLike) {\n    if (!attributionLike) {\n      return null;\n    }\n    if (Array.isArray(attributionLike)) {\n      return function(frameState) {\n        return attributionLike;\n      };\n    }\n\n    if (typeof attributionLike === 'function') {\n      return attributionLike;\n    }\n\n    return function(frameState) {\n      return [attributionLike];\n    };\n  }\n\n  /**\n  * Get the attribution function for the source.\n  * @return {?module:ol/source/Source~Attribution} Attribution function.\n  */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n  * Get the projection of the source.\n  * @return {module:ol/proj/Projection} Projection.\n  * @api\n  */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n  * @abstract\n  * @return {Array.<number>|undefined} Resolutions.\n  */\n  getResolutions() {}\n\n  /**\n  * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n  * @return {module:ol/source/State} State.\n  * @api\n  */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n  * @return {boolean|undefined} Wrap X.\n  */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n  * Refreshes the source and finally dispatches a 'change' event.\n  * @api\n  */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n  * Set the attributions of the source.\n  * @param {module:ol/source/Source~AttributionLike|undefined} attributions Attributions.\n  *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n  *     or `undefined`.\n  * @api\n  */\n  setAttributions(attributions) {\n    this.attributions_ = this.adaptAttributions_(attributions);\n    this.changed();\n  }\n\n  /**\n  * Set the state of the source.\n  * @param {module:ol/source/State} state State.\n  * @protected\n  */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {Object.<string, boolean>} skippedFeatureUids Skipped feature uids.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T} callback Feature callback.\n * @return {T|undefined} Callback result.\n * @template T\n */\nSource.prototype.forEachFeatureAtCoordinate = UNDEFINED;\n\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event ol/source/Vector~VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event ol/source/Vector~VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event ol/source/Vector~VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event ol/source/Vector~VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/structs/RBush\n */\nimport {getUid} from '../util.js';\nimport rbush from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n\n  /**\n   * @param {number=} opt_maxEntries Max entries.\n   */\n  constructor(opt_maxEntries) {\n\n    /**\n     * @private\n     */\n    this.rbush_ = rbush(opt_maxEntries, undefined);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object.<number, module:ol/structs/RBush~Entry>}\n     */\n    this.items_ = {};\n\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {module:ol/structs/RBush~Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array.<module:ol/extent~Extent>} extents Extents.\n   * @param {Array.<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {module:ol/structs/RBush~Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array.<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function(item) {\n      return item.value;\n    });\n  }\n\n\n  /**\n   * Return all values in the given extent.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @return {Array.<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {module:ol/structs/RBush~Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3]\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function(item) {\n      return item.value;\n    });\n  }\n\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(this: S, T): *} callback Callback.\n   * @param {S=} opt_this The object to use as `this` in `callback`.\n   * @return {*} Callback return value.\n   * @template S\n   */\n  forEach(callback, opt_this) {\n    return this.forEach_(this.getAll(), callback, opt_this);\n  }\n\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {function(this: S, T): *} callback Callback.\n   * @param {S=} opt_this The object to use as `this` in `callback`.\n   * @return {*} Callback return value.\n   * @template S\n   */\n  forEachInExtent(extent, callback, opt_this) {\n    return this.forEach_(this.getInExtent(extent), callback, opt_this);\n  }\n\n\n  /**\n   * @param {Array.<T>} values Values.\n   * @param {function(this: S, T): *} callback Callback.\n   * @param {S=} opt_this The object to use as `this` in `callback`.\n   * @private\n   * @return {*} Callback return value.\n   * @template S\n   */\n  forEach_(values, callback, opt_this) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback.call(opt_this, values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n\n  /**\n   * @param {module:ol/extent~Extent=} opt_extent Extent.\n   * @return {module:ol/extent~Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    // FIXME add getExtent() to rbush\n    const data = this.rbush_.data;\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n  }\n\n\n  /**\n   * @param {module:ol/structs/RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i | 0] = rbush.items_[i | 0];\n    }\n  }\n\n}\n\n\nexport default RBush;\n","/**\n * @module ol/source/Vector\n */\n\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, UNDEFINED} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty, getValues} from '../obj.js';\nimport Source from '../source/Source.js';\nimport SourceState from '../source/State.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(module:ol/extent~Extent, number): Array.<module:ol/extent~Extent>} LoadingStrategy\n * @api\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n *\n * @param {string} type Type.\n * @param {module:ol/Feature=} opt_feature Feature.\n */\nexport class VectorSourceEvent extends Event {\n\n  constructor(type, opt_feature) {\n\n    super(type);\n\n    /**\n     * The feature being added or removed.\n     * @type {module:ol/Feature|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n  }\n\n}\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {Array.<module:ol/Feature>|module:ol/Collection.<module:ol/Feature>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {module:ol/format/Feature} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {module:ol/featureloader~FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {module:ol/source/Vector~LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|module:ol/featureloader~FeatureUrlfunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlfunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n\nclass VectorSource extends Source {\n\n  /**\n   * @classdesc\n   * Provides a source of features for vector layers. Vector features provided\n   * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n   * vector data that is optimized for rendering.\n   *\n   * @fires ol/source/Vector~VectorSourceEvent\n   * @param {module:ol/source/Vector~Options=} opt_options Vector source options.\n   * @api\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n    /**\n     * @private\n     * @type {module:ol/featureloader~FeatureLoader}\n     */\n    this.loader_ = UNDEFINED;\n\n    /**\n     * @private\n     * @type {module:ol/format/Feature|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|module:ol/featureloader~FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, /** @type {module:ol/format/Feature} */ (this.format_));\n    }\n\n    /**\n     * @private\n     * @type {module:ol/source/Vector~LoadingStrategy}\n     */\n    this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n        options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {module:ol/structs/RBush.<module:ol/Feature>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {module:ol/structs/RBush.<{extent: module:ol/extent~Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @private\n     * @type {!Object.<string, module:ol/Feature>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object.<string, module:ol/Feature>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features without id (keyed by getUid(feature)).\n     * @private\n     * @type {!Object.<string, module:ol/Feature>}\n     */\n    this.undefIdIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object.<string, Array.<module:ol/events~EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (options.features instanceof Collection) {\n      collection = options.features;\n      features = collection.getArray();\n    } else if (Array.isArray(options.features)) {\n      features = options.features;\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n\n  }\n\n}\n\n\n/**\n * Add a single feature to the source.  If you want to add a batch of features\n * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n * instead. A feature will not be added to the source if feature with\n * the same id is already there. The reason for this behavior is to avoid\n * feature duplication when using bbox or tile loading strategies.\n * @param {module:ol/Feature} feature Feature to add.\n * @api\n */\nVectorSource.prototype.addFeature = function(feature) {\n  this.addFeatureInternal(feature);\n  this.changed();\n};\n\n\n/**\n * Add a feature without firing a `change` event.\n * @param {module:ol/Feature} feature Feature.\n * @protected\n */\nVectorSource.prototype.addFeatureInternal = function(feature) {\n  const featureKey = getUid(feature).toString();\n\n  if (!this.addToIndex_(featureKey, feature)) {\n    return;\n  }\n\n  this.setupChangeEvents_(featureKey, feature);\n\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const extent = geometry.getExtent();\n    if (this.featuresRtree_) {\n      this.featuresRtree_.insert(extent, feature);\n    }\n  } else {\n    this.nullGeometryFeatures_[featureKey] = feature;\n  }\n\n  this.dispatchEvent(\n    new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n};\n\n\n/**\n * @param {string} featureKey Unique identifier for the feature.\n * @param {module:ol/Feature} feature The feature.\n * @private\n */\nVectorSource.prototype.setupChangeEvents_ = function(featureKey, feature) {\n  this.featureChangeKeys_[featureKey] = [\n    listen(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this),\n    listen(feature, ObjectEventType.PROPERTYCHANGE,\n      this.handleFeatureChange_, this)\n  ];\n};\n\n\n/**\n * @param {string} featureKey Unique identifier for the feature.\n * @param {module:ol/Feature} feature The feature.\n * @return {boolean} The feature is \"valid\", in the sense that it is also a\n *     candidate for insertion into the Rtree.\n * @private\n */\nVectorSource.prototype.addToIndex_ = function(featureKey, feature) {\n  let valid = true;\n  const id = feature.getId();\n  if (id !== undefined) {\n    if (!(id.toString() in this.idIndex_)) {\n      this.idIndex_[id.toString()] = feature;\n    } else {\n      valid = false;\n    }\n  } else {\n    assert(!(featureKey in this.undefIdIndex_),\n      30); // The passed `feature` was already added to the source\n    this.undefIdIndex_[featureKey] = feature;\n  }\n  return valid;\n};\n\n\n/**\n * Add a batch of features to the source.\n * @param {Array.<module:ol/Feature>} features Features to add.\n * @api\n */\nVectorSource.prototype.addFeatures = function(features) {\n  this.addFeaturesInternal(features);\n  this.changed();\n};\n\n\n/**\n * Add features without firing a `change` event.\n * @param {Array.<module:ol/Feature>} features Features.\n * @protected\n */\nVectorSource.prototype.addFeaturesInternal = function(features) {\n  const extents = [];\n  const newFeatures = [];\n  const geometryFeatures = [];\n\n  for (let i = 0, length = features.length; i < length; i++) {\n    const feature = features[i];\n    const featureKey = getUid(feature).toString();\n    if (this.addToIndex_(featureKey, feature)) {\n      newFeatures.push(feature);\n    }\n  }\n\n  for (let i = 0, length = newFeatures.length; i < length; i++) {\n    const feature = newFeatures[i];\n    const featureKey = getUid(feature).toString();\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      extents.push(extent);\n      geometryFeatures.push(feature);\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n  }\n  if (this.featuresRtree_) {\n    this.featuresRtree_.load(extents, geometryFeatures);\n  }\n\n  for (let i = 0, length = newFeatures.length; i < length; i++) {\n    this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n  }\n};\n\n\n/**\n * @param {!module:ol/Collection.<module:ol/Feature>} collection Collection.\n * @private\n */\nVectorSource.prototype.bindFeaturesCollection_ = function(collection) {\n  let modifyingCollection = false;\n  listen(this, VectorEventType.ADDFEATURE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        collection.push(evt.feature);\n        modifyingCollection = false;\n      }\n    });\n  listen(this, VectorEventType.REMOVEFEATURE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        collection.remove(evt.feature);\n        modifyingCollection = false;\n      }\n    });\n  listen(collection, CollectionEventType.ADD,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        this.addFeature(/** @type {module:ol/Feature} */ (evt.element));\n        modifyingCollection = false;\n      }\n    }, this);\n  listen(collection, CollectionEventType.REMOVE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        this.removeFeature(/** @type {module:ol/Feature} */ (evt.element));\n        modifyingCollection = false;\n      }\n    }, this);\n  this.featuresCollection_ = collection;\n};\n\n\n/**\n * Remove all features from the source.\n * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector~VectorSourceEvent#removefeature} events.\n * @api\n */\nVectorSource.prototype.clear = function(opt_fast) {\n  if (opt_fast) {\n    for (const featureId in this.featureChangeKeys_) {\n      const keys = this.featureChangeKeys_[featureId];\n      keys.forEach(unlistenByKey);\n    }\n    if (!this.featuresCollection_) {\n      this.featureChangeKeys_ = {};\n      this.idIndex_ = {};\n      this.undefIdIndex_ = {};\n    }\n  } else {\n    if (this.featuresRtree_) {\n      this.featuresRtree_.forEach(this.removeFeatureInternal, this);\n      for (const id in this.nullGeometryFeatures_) {\n        this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n      }\n    }\n  }\n  if (this.featuresCollection_) {\n    this.featuresCollection_.clear();\n  }\n\n  if (this.featuresRtree_) {\n    this.featuresRtree_.clear();\n  }\n  this.loadedExtentsRtree_.clear();\n  this.nullGeometryFeatures_ = {};\n\n  const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n  this.dispatchEvent(clearEvent);\n  this.changed();\n};\n\n\n/**\n * Iterate through all features on the source, calling the provided callback\n * with each one.  If the callback returns any \"truthy\" value, iteration will\n * stop and the function will return the same value.\n * Note: this function only iterate through the feature that have a defined geometry.\n *\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     on the source.  Return a truthy value to stop iteration.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeature = function(callback) {\n  if (this.featuresRtree_) {\n    return this.featuresRtree_.forEach(callback);\n  } else if (this.featuresCollection_) {\n    return this.featuresCollection_.forEach(callback);\n  }\n};\n\n\n/**\n * Iterate through all features whose geometries contain the provided\n * coordinate, calling the callback with each feature.  If the callback returns\n * a \"truthy\" value, iteration will stop and the function will return the same\n * value.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose goemetry contains the provided coordinate.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n */\nVectorSource.prototype.forEachFeatureAtCoordinateDirect = function(coordinate, callback) {\n  const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n  return this.forEachFeatureInExtent(extent, function(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry.intersectsCoordinate(coordinate)) {\n      return callback(feature);\n    } else {\n      return undefined;\n    }\n  });\n};\n\n\n/**\n * Iterate through all features whose bounding box intersects the provided\n * extent (note that the feature's geometry may not intersect the extent),\n * calling the callback with each feature.  If the callback returns a \"truthy\"\n * value, iteration will stop and the function will return the same value.\n *\n * If you are interested in features whose geometry intersects an extent, call\n * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n *\n * When `useSpatialIndex` is set to false, this method will loop through all\n * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose bounding box intersects the provided extent.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeatureInExtent = function(extent, callback) {\n  if (this.featuresRtree_) {\n    return this.featuresRtree_.forEachInExtent(extent, callback);\n  } else if (this.featuresCollection_) {\n    return this.featuresCollection_.forEach(callback);\n  }\n};\n\n\n/**\n * Iterate through all features whose geometry intersects the provided extent,\n * calling the callback with each feature.  If the callback returns a \"truthy\"\n * value, iteration will stop and the function will return the same value.\n *\n * If you only want to test for bounding box intersection, call the\n * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose geometry intersects the provided extent.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeatureIntersectingExtent = function(extent, callback) {\n  return this.forEachFeatureInExtent(extent,\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    function(feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsExtent(extent)) {\n        const result = callback(feature);\n        if (result) {\n          return result;\n        }\n      }\n    });\n};\n\n\n/**\n * Get the features collection associated with this source. Will be `null`\n * unless the source was configured with `useSpatialIndex` set to `false`, or\n * with an {@link module:ol/Collection} as `features`.\n * @return {module:ol/Collection.<module:ol/Feature>} The collection of features.\n * @api\n */\nVectorSource.prototype.getFeaturesCollection = function() {\n  return this.featuresCollection_;\n};\n\n\n/**\n * Get all features on the source in random order.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeatures = function() {\n  let features;\n  if (this.featuresCollection_) {\n    features = this.featuresCollection_.getArray();\n  } else if (this.featuresRtree_) {\n    features = this.featuresRtree_.getAll();\n    if (!isEmpty(this.nullGeometryFeatures_)) {\n      extend(features, getValues(this.nullGeometryFeatures_));\n    }\n  }\n  return (\n    /** @type {Array.<module:ol/Feature>} */ (features)\n  );\n};\n\n\n/**\n * Get all features whose geometry intersects the provided coordinate.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeaturesAtCoordinate = function(coordinate) {\n  const features = [];\n  this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n    features.push(feature);\n  });\n  return features;\n};\n\n\n/**\n * Get all features in the provided extent.  Note that this returns an array of\n * all features intersecting the given extent in random order (so it may include\n * features whose geometries do not intersect the extent).\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeaturesInExtent = function(extent) {\n  return this.featuresRtree_.getInExtent(extent);\n};\n\n\n/**\n * Get the closest feature to the provided coordinate.\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {function(module:ol/Feature):boolean=} opt_filter Feature filter function.\n *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n *     and it should return a boolean value. By default, no filtering is made.\n * @return {module:ol/Feature} Closest feature.\n * @api\n */\nVectorSource.prototype.getClosestFeatureToCoordinate = function(coordinate, opt_filter) {\n  // Find the closest feature using branch and bound.  We start searching an\n  // infinite extent, and find the distance from the first feature found.  This\n  // becomes the closest feature.  We then compute a smaller extent which any\n  // closer feature must intersect.  We continue searching with this smaller\n  // extent, trying to find a closer feature.  Every time we find a closer\n  // feature, we update the extent being searched so that any even closer\n  // feature must intersect it.  We continue until we run out of features.\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let closestFeature = null;\n  const closestPoint = [NaN, NaN];\n  let minSquaredDistance = Infinity;\n  const extent = [-Infinity, -Infinity, Infinity, Infinity];\n  const filter = opt_filter ? opt_filter : TRUE;\n  this.featuresRtree_.forEachInExtent(extent,\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     */\n    function(feature) {\n      if (filter(feature)) {\n        const geometry = feature.getGeometry();\n        const previousMinSquaredDistance = minSquaredDistance;\n        minSquaredDistance = geometry.closestPointXY(\n          x, y, closestPoint, minSquaredDistance);\n        if (minSquaredDistance < previousMinSquaredDistance) {\n          closestFeature = feature;\n          // This is sneaky.  Reduce the extent that it is currently being\n          // searched while the R-Tree traversal using this same extent object\n          // is still in progress.  This is safe because the new extent is\n          // strictly contained by the old extent.\n          const minDistance = Math.sqrt(minSquaredDistance);\n          extent[0] = x - minDistance;\n          extent[1] = y - minDistance;\n          extent[2] = x + minDistance;\n          extent[3] = y + minDistance;\n        }\n      }\n    });\n  return closestFeature;\n};\n\n\n/**\n * Get the extent of the features currently in the source.\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent. If provided, no new extent\n *     will be created. Instead, that extent's coordinates will be overwritten.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nVectorSource.prototype.getExtent = function(opt_extent) {\n  return this.featuresRtree_.getExtent(opt_extent);\n};\n\n\n/**\n * Get a feature by its identifier (the value returned by feature.getId()).\n * Note that the index treats string and numeric identifiers as the same.  So\n * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n *\n * @param {string|number} id Feature identifier.\n * @return {module:ol/Feature} The feature (or `null` if not found).\n * @api\n */\nVectorSource.prototype.getFeatureById = function(id) {\n  const feature = this.idIndex_[id.toString()];\n  return feature !== undefined ? feature : null;\n};\n\n\n/**\n * Get the format associated with this source.\n *\n * @return {module:ol/format/Feature|undefined} The feature format.\n * @api\n */\nVectorSource.prototype.getFormat = function() {\n  return this.format_;\n};\n\n\n/**\n * @return {boolean} The source can have overlapping geometries.\n */\nVectorSource.prototype.getOverlaps = function() {\n  return this.overlaps_;\n};\n\n\n/**\n * @override\n */\nVectorSource.prototype.getResolutions = function() {};\n\n\n/**\n * Get the url associated with this source.\n *\n * @return {string|module:ol/featureloader~FeatureUrlFunction|undefined} The url.\n * @api\n */\nVectorSource.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n * @private\n */\nVectorSource.prototype.handleFeatureChange_ = function(event) {\n  const feature = /** @type {module:ol/Feature} */ (event.target);\n  const featureKey = getUid(feature).toString();\n  const geometry = feature.getGeometry();\n  if (!geometry) {\n    if (!(featureKey in this.nullGeometryFeatures_)) {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n  } else {\n    const extent = geometry.getExtent();\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.update(extent, feature);\n      }\n    }\n  }\n  const id = feature.getId();\n  if (id !== undefined) {\n    const sid = id.toString();\n    if (featureKey in this.undefIdIndex_) {\n      delete this.undefIdIndex_[featureKey];\n      this.idIndex_[sid] = feature;\n    } else {\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    }\n  } else {\n    if (!(featureKey in this.undefIdIndex_)) {\n      this.removeFromIdIndex_(feature);\n      this.undefIdIndex_[featureKey] = feature;\n    }\n  }\n  this.changed();\n  this.dispatchEvent(new VectorSourceEvent(\n    VectorEventType.CHANGEFEATURE, feature));\n};\n\n/**\n * Returns true if the feature is contained within the source.\n * @param {module:ol/Feature} feature Feature.\n * @return {boolean} Has feature.\n * @api\n */\nVectorSource.prototype.hasFeature = function(feature) {\n  const id = feature.getId();\n  if (id !== undefined) {\n    return id in this.idIndex_;\n  } else {\n    const featureKey = getUid(feature).toString();\n    return featureKey in this.undefIdIndex_;\n  }\n};\n\n/**\n * @return {boolean} Is empty.\n */\nVectorSource.prototype.isEmpty = function() {\n  return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n};\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {module:ol/proj/Projection} projection Projection.\n */\nVectorSource.prototype.loadFeatures = function(extent, resolution, projection) {\n  const loadedExtentsRtree = this.loadedExtentsRtree_;\n  const extentsToLoad = this.strategy_(extent, resolution);\n  for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n    const extentToLoad = extentsToLoad[i];\n    const alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n      /**\n       * @param {{extent: module:ol/extent~Extent}} object Object.\n       * @return {boolean} Contains.\n       */\n      function(object) {\n        return containsExtent(object.extent, extentToLoad);\n      });\n    if (!alreadyLoaded) {\n      this.loader_.call(this, extentToLoad, resolution, projection);\n      loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n    }\n  }\n};\n\n\n/**\n * Remove an extent from the list of loaded extents.\n * @param {module:ol/extent~Extent} extent Extent.\n * @api\n */\nVectorSource.prototype.removeLoadedExtent = function(extent) {\n  const loadedExtentsRtree = this.loadedExtentsRtree_;\n  let obj;\n  loadedExtentsRtree.forEachInExtent(extent, function(object) {\n    if (equals(object.extent, extent)) {\n      obj = object;\n      return true;\n    }\n  });\n  if (obj) {\n    loadedExtentsRtree.remove(obj);\n  }\n};\n\n\n/**\n * Remove a single feature from the source.  If you want to remove all features\n * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n * instead.\n * @param {module:ol/Feature} feature Feature to remove.\n * @api\n */\nVectorSource.prototype.removeFeature = function(feature) {\n  const featureKey = getUid(feature).toString();\n  if (featureKey in this.nullGeometryFeatures_) {\n    delete this.nullGeometryFeatures_[featureKey];\n  } else {\n    if (this.featuresRtree_) {\n      this.featuresRtree_.remove(feature);\n    }\n  }\n  this.removeFeatureInternal(feature);\n  this.changed();\n};\n\n\n/**\n * Remove feature without firing a `change` event.\n * @param {module:ol/Feature} feature Feature.\n * @protected\n */\nVectorSource.prototype.removeFeatureInternal = function(feature) {\n  const featureKey = getUid(feature).toString();\n  this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n  delete this.featureChangeKeys_[featureKey];\n  const id = feature.getId();\n  if (id !== undefined) {\n    delete this.idIndex_[id.toString()];\n  } else {\n    delete this.undefIdIndex_[featureKey];\n  }\n  this.dispatchEvent(new VectorSourceEvent(\n    VectorEventType.REMOVEFEATURE, feature));\n};\n\n\n/**\n * Remove a feature from the id index.  Called internally when the feature id\n * may have changed.\n * @param {module:ol/Feature} feature The feature.\n * @return {boolean} Removed the feature from the index.\n * @private\n */\nVectorSource.prototype.removeFromIdIndex_ = function(feature) {\n  let removed = false;\n  for (const id in this.idIndex_) {\n    if (this.idIndex_[id] === feature) {\n      delete this.idIndex_[id];\n      removed = true;\n      break;\n    }\n  }\n  return removed;\n};\n\n\n/**\n * Set the new loader of the source. The next loadFeatures call will use the\n * new loader.\n * @param {module:ol/featureloader~FeatureLoader} loader The loader to set.\n * @api\n */\nVectorSource.prototype.setLoader = function(loader) {\n  this.loader_ = loader;\n};\n\nexport default VectorSource;\n","/**\n * @module ol/interaction/Draw\n */\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {getChangeEventType} from '../Object.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {noModifierKeys, always, shiftKeyOnly} from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport {POINTER_TYPE} from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/geom/GeometryType} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * Destination collection for the drawn features.\n * @property {module:ol/source/Vector} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {module:ol/events/condition~Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style for sketch features.\n * @property {module:ol/interaction/Draw~GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {module:ol/events/condition~Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry as\n * arguments, and returns a geometry. The optional existing geometry is the\n * geometry that is returned when the function is called without a second\n * argument.\n * @typedef {function(!Array.<module:ol/coordinate~Coordinate>, module:ol/geom/SimpleGeometry=):\n *     module:ol/geom/SimpleGeometry} GeometryFunction\n */\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nconst Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event module:ol/interaction/Draw~DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event module:ol/interaction/Draw~DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nclass DrawEvent extends Event {\n  /**\n   * @param {module:ol/interaction/Draw~DrawEventType} type Type.\n   * @param {module:ol/Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {module:ol/Feature}\n     * @api\n     */\n    this.feature = feature;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires module:ol/interaction/Draw~DrawEvent\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {module:ol/interaction/Draw~Options} options Options.\n   * @api\n   */\n  constructor(options) {\n\n    super({\n      handleDownEvent: handleDownEvent,\n      handleEvent: handleEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {module:ol/pixel~Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {module:ol/source/Vector}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {module:ol/geom/GeometryType}\n     * @private\n     */\n    this.type_ = /** @type {module:ol/geom/GeometryType} */ (options.type);\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {module:ol/interaction/Draw~Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints ?\n      options.minPoints :\n      (this.mode_ === Mode.POLYGON ? 3 : 2);\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      if (this.type_ === GeometryType.CIRCLE) {\n        /**\n         * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates\n         *     The coordinates.\n         * @param {module:ol/geom/SimpleGeometry=} opt_geometry Optional geometry.\n         * @return {module:ol/geom/SimpleGeometry} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          const circle = opt_geometry ? /** @type {module:ol/geom/Circle} */ (opt_geometry) :\n            new Circle([NaN, NaN]);\n          const squaredLength = squaredCoordinateDistance(\n            coordinates[0], coordinates[1]);\n          circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n          return circle;\n        };\n      } else {\n        let Constructor;\n        const mode = this.mode_;\n        if (mode === Mode.POINT) {\n          Constructor = Point;\n        } else if (mode === Mode.LINE_STRING) {\n          Constructor = LineString;\n        } else if (mode === Mode.POLYGON) {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates\n         *     The coordinates.\n         * @param {module:ol/geom/SimpleGeometry=} opt_geometry Optional geometry.\n         * @return {module:ol/geom/SimpleGeometry} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          let geometry = opt_geometry;\n          if (geometry) {\n            if (mode === Mode.POLYGON) {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n              } else {\n                geometry.setCoordinates([]);\n              }\n            } else {\n              geometry.setCoordinates(coordinates);\n            }\n          } else {\n            geometry = new Constructor(coordinates);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {module:ol/interaction/Draw~GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {module:ol/coordinate~Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {module:ol/coordinate~Coordinate|Array.<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {Array.<module:ol/coordinate~Coordinate>}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance ?\n      options.clickTolerance * options.clickTolerance : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {module:ol/layer/Vector}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileInteracting: true\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition ?\n        options.freehandCondition : shiftKeyOnly;\n    }\n\n    listen(this,\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.updateState_, this);\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Handle move events.\n   * @param {module:ol/MapBrowserEvent} event A move event.\n   * @return {boolean} Pass the event to other interactions.\n   * @private\n   */\n  handlePointerMove_(event) {\n    if (this.downPx_ &&\n        ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_ ?\n        squaredDistance > this.squaredClickTolerance_ :\n        squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return true;\n      }\n    }\n\n    if (this.finishCoordinate_) {\n      this.modifyDrawing_(event);\n    } else {\n      this.createOrUpdateSketchPoint_(event);\n    }\n    return true;\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {module:ol/MapBrowserEvent} event Event.\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(event) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      if (this.mode_ === Mode.LINE_STRING) {\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n      } else if (this.mode_ === Mode.POLYGON) {\n        potentiallyDone = this.sketchCoords_[0].length >\n            this.minPoints_;\n        potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n          this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n      }\n      if (potentiallyDone) {\n        const map = event.map;\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const pixel = event.pixel;\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {module:ol/MapBrowserEvent} event Event.\n   * @private\n   */\n  createOrUpdateSketchPoint_(event) {\n    const coordinates = event.coordinate.slice();\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = /** @type {module:ol/geom/Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {module:ol/MapBrowserEvent} event Event.\n   * @private\n   */\n  startDrawing_(event) {\n    const start = event.coordinate;\n    this.finishCoordinate_ = start;\n    if (this.mode_ === Mode.POINT) {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === Mode.POLYGON) {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(\n        new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(this.sketchCoords_);\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {module:ol/MapBrowserEvent} event Event.\n   * @private\n   */\n  modifyDrawing_(event) {\n    let coordinate = event.coordinate;\n    const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n    let coordinates, last;\n    if (this.mode_ === Mode.POINT) {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = this.sketchCoords_[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(event)) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(/** @type {!Array.<module:ol/coordinate~Coordinate>} */ (this.sketchCoords_), geometry);\n    if (this.sketchPoint_) {\n      const sketchPointGeom = /** @type {module:ol/geom/Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    let sketchLineGeom;\n    if (geometry instanceof Polygon &&\n        this.mode_ !== Mode.POLYGON) {\n      if (!this.sketchLine_) {\n        this.sketchLine_ = new Feature();\n      }\n      const ring = geometry.getLinearRing(0);\n      sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n      if (!sketchLineGeom) {\n        sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\n        this.sketchLine_.setGeometry(sketchLineGeom);\n      } else {\n        sketchLineGeom.setFlatCoordinates(\n          ring.getLayout(), ring.getFlatCoordinates());\n        sketchLineGeom.changed();\n      }\n    } else if (this.sketchLineCoords_) {\n      sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {module:ol/MapBrowserEvent} event Event.\n   * @private\n   */\n  addToDrawing_(event) {\n    const coordinate = event.coordinate;\n    const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n    let done;\n    let coordinates;\n    if (this.mode_ === Mode.LINE_STRING) {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = this.sketchCoords_;\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = this.sketchCoords_[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn.\n   * @api\n   */\n  removeLastPoint() {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n    let coordinates, sketchLineGeom;\n    if (this.mode_ === Mode.LINE_STRING) {\n      coordinates = this.sketchCoords_;\n      coordinates.splice(-2, 1);\n      this.geometryFunction_(coordinates, geometry);\n      if (coordinates.length >= 2) {\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n      }\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = this.sketchCoords_[0];\n      coordinates.splice(-2, 1);\n      sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(coordinates);\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n\n    if (coordinates.length === 0) {\n      this.finishCoordinate_ = null;\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (sketchFeature.getGeometry());\n    if (this.mode_ === Mode.LINE_STRING) {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      // remove the redundant last point in ring\n      coordinates[0].pop();\n      this.geometryFunction_(coordinates, geometry);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === GeometryType.MULTI_POINT) {\n      sketchFeature.setGeometry(new MultiPoint([coordinates]));\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n      sketchFeature.setGeometry(new MultiLineString([coordinates]));\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n      sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {module:ol/Feature} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    if (sketchFeature) {\n      this.sketchFeature_ = null;\n      this.sketchPoint_ = null;\n      this.sketchLine_ = null;\n      this.overlay_.getSource().clear(true);\n    }\n    return sketchFeature;\n  }\n\n  /**\n   * Extend an existing geometry by adding additional points. This only works\n   * on features with `LineString` geometries, where the interaction will\n   * extend lines by adding points to the end of the coordinates array.\n   * @param {!module:ol/Feature} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = /** @type {module:ol/geom/LineString} */ (geometry);\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing_();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {module:ol/MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Draw}\n * @api\n */\nexport function handleEvent(event) {\n  if (event.originalEvent.type === EventType.CONTEXTMENU) {\n    // Avoid context menu for long taps when drawing on mobile\n    event.preventDefault();\n  }\n  this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n  let move = event.type === MapBrowserEventType.POINTERMOVE;\n  let pass = true;\n  if (this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n    const now = Date.now();\n    if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n      this.downPx_ = event.pixel;\n      this.shouldHandle_ = !this.freehand_;\n      move = true;\n    } else {\n      this.lastDragTime_ = undefined;\n    }\n    if (this.shouldHandle_ && this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n  }\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (move) {\n    pass = event.type === MapBrowserEventType.POINTERMOVE;\n    if (pass && this.freehand_) {\n      pass = this.handlePointerMove_(event);\n    } else if (event.pointerEvent.pointerType == POINTER_TYPE ||\n        (event.type === MapBrowserEventType.POINTERDRAG && !this.downTimeout_)) {\n      this.handlePointerMove_(event);\n    }\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n\n  return handlePointerEvent.call(this, event) && pass;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Draw}\n */\nfunction handleDownEvent(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(function() {\n      this.handlePointerMove_(new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, event.frameState));\n    }.bind(this), this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Draw}\n */\nfunction handleUpEvent(event) {\n  let pass = true;\n\n  if (this.downTimeout_) {\n    clearTimeout(this.downTimeout_);\n    this.downTimeout_ = undefined;\n  }\n\n  this.handlePointerMove_(event);\n\n  const circleMode = this.mode_ === Mode.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Mode.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n}\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `module:ol/geom/Circle~Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {module:ol/interaction/Draw~GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function(coordinates, opt_geometry) {\n    const center = coordinates[0];\n    const end = coordinates[1];\n    const radius = Math.sqrt(\n      squaredCoordinateDistance(center, end));\n    const geometry = opt_geometry ? /** @type {module:ol/geom/Polygon} */ (opt_geometry) :\n      fromCircle(new Circle(center), opt_sides);\n    const angle = opt_angle ? opt_angle :\n      Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n    makeRegular(geometry, center, radius, angle);\n    return geometry;\n  };\n}\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {module:ol/interaction/Draw~GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return (\n    function(coordinates, opt_geometry) {\n      const extent = boundingExtent(coordinates);\n      const boxCoordinates = [[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]];\n      let geometry = opt_geometry;\n      if (geometry) {\n        geometry.setCoordinates(boxCoordinates);\n      } else {\n        geometry = new Polygon(boxCoordinates);\n      }\n      return geometry;\n    }\n  );\n}\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {module:ol/geom/GeometryType} type Geometry type.\n * @return {module:ol/interaction/Draw~Mode} Drawing mode.\n */\nfunction getMode(type) {\n  let mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Mode.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Mode.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Mode.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Mode.CIRCLE;\n  }\n  return (\n    /** @type {!module:ol/interaction/Draw~Mode} */ (mode)\n  );\n}\n\n\nexport default Draw;\n","/**\n * @module ol/interaction/Extent\n */\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {squaredDistanceToSegment, closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [boxStyle]\n * Style for the drawn extent box. Defaults to\n * {@link module:ol/style/Style~createEditing()['Polygon']}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to\n * {@link module:ol/style/Style~createEditing()['Point']}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n\n/**\n * @enum {string}\n */\nconst ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event module:ol/interaction/Extent~ExtentEventType#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nclass ExtentInteractionEvent extends Event {\n\n  /**\n   * @param {module:ol/extent~Extent} extent the new extent\n   */\n  constructor(extent) {\n    super(ExtentEventType.EXTENTCHANGED);\n\n    /**\n     * The current extent.\n     * @type {module:ol/extent~Extent}\n     * @api\n     */\n    this.extent = extent;\n  }\n\n}\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires module:ol/interaction/Extent~Event\n */\nclass ExtentInteraction extends PointerInteraction {\n  /**\n   * @param {module:ol/interaction/Extent~Options=} opt_options Options.\n   * @api\n   */\n  constructor(opt_options) {\n\n    super({\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleEvent: handleEvent,\n      handleUpEvent: handleUpEvent\n    });\n\n    const options = opt_options || {};\n\n    /**\n     * Extent of the drawn box\n     * @type {module:ol/extent~Extent}\n     * @private\n     */\n    this.extent_ = null;\n\n    /**\n     * Handler for pointer move events\n     * @type {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent|null}\n     * @private\n     */\n    this.pointerHandler_ = null;\n\n    /**\n     * Pixel threshold to snap to extent\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * Is the pointer snapped to an extent vertex\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Feature for displaying the visible extent\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.extentFeature_ = null;\n\n    /**\n     * Feature for displaying the visible pointer\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    if (!opt_options) {\n      opt_options = {};\n    }\n\n    /**\n     * Layer for the extentFeature\n     * @type {module:ol/layer/Vector}\n     * @private\n     */\n    this.extentOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX\n      }),\n      style: opt_options.boxStyle ? opt_options.boxStyle : getDefaultExtentStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * Layer for the vertexFeature\n     * @type {module:ol/layer/Vector}\n     * @private\n     */\n    this.vertexOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX\n      }),\n      style: opt_options.pointerStyle ? opt_options.pointerStyle : getDefaultPointerStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    if (opt_options.extent) {\n      this.setExtent(opt_options.extent);\n    }\n  }\n\n  /**\n   * @param {module:ol/pixel~Pixel} pixel cursor location\n   * @param {module:ol/PluggableMap} map map\n   * @returns {module:ol/coordinate~Coordinate|null} snapped vertex on extent\n   * @private\n   */\n  snapToVertex_(pixel, map) {\n    const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n    const sortByDistance = function(a, b) {\n      return squaredDistanceToSegment(pixelCoordinate, a) -\n          squaredDistanceToSegment(pixelCoordinate, b);\n    };\n    const extent = this.getExtent();\n    if (extent) {\n      //convert extents to line segments and find the segment closest to pixelCoordinate\n      const segments = getSegments(extent);\n      segments.sort(sortByDistance);\n      const closestSegment = segments[0];\n\n      let vertex = (closestOnSegment(pixelCoordinate,\n        closestSegment));\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n\n      //if the distance is within tolerance, snap to the segment\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        //test if we should further snap to a vertex\n        const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex = squaredDist1 > squaredDist2 ?\n            closestSegment[1] : closestSegment[0];\n        }\n        return vertex;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {module:ol/MapBrowserEvent} mapBrowserEvent pointer move event\n   * @private\n   */\n  handlePointerMove_(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    let vertex = this.snapToVertex_(pixel, map);\n    if (!vertex) {\n      vertex = map.getCoordinateFromPixel(pixel);\n    }\n    this.createOrUpdatePointerFeature_(vertex);\n  }\n\n  /**\n   * @param {module:ol/extent~Extent} extent extent\n   * @returns {module:ol/Feature} extent as featrue\n   * @private\n   */\n  createOrUpdateExtentFeature_(extent) {\n    let extentFeature = this.extentFeature_;\n\n    if (!extentFeature) {\n      if (!extent) {\n        extentFeature = new Feature({});\n      } else {\n        extentFeature = new Feature(polygonFromExtent(extent));\n      }\n      this.extentFeature_ = extentFeature;\n      this.extentOverlay_.getSource().addFeature(extentFeature);\n    } else {\n      if (!extent) {\n        extentFeature.setGeometry(undefined);\n      } else {\n        extentFeature.setGeometry(polygonFromExtent(extent));\n      }\n    }\n    return extentFeature;\n  }\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} vertex location of feature\n   * @returns {module:ol/Feature} vertex as feature\n   * @private\n   */\n  createOrUpdatePointerFeature_(vertex) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(vertex));\n      this.vertexFeature_ = vertexFeature;\n      this.vertexOverlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n      geometry.setCoordinates(vertex);\n    }\n    return vertexFeature;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    this.extentOverlay_.setMap(map);\n    this.vertexOverlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection\n   *\n   * @return {module:ol/extent~Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Manually sets the drawn extent, using the view projection.\n   *\n   * @param {module:ol/extent~Extent} extent Extent\n   * @api\n   */\n  setExtent(extent) {\n    //Null extent means no bbox\n    this.extent_ = extent ? extent : null;\n    this.createOrUpdateExtentFeature_(extent);\n    this.dispatchEvent(new ExtentInteractionEvent(this.extent_));\n  }\n}\n\n/**\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Event.\n * @return {boolean} Propagate event?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  //display pointer (if not dragging)\n  if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE && !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  //call pointer to determine up/down/drag\n  handlePointerEvent.call(this, mapBrowserEvent);\n  //return false to stop propagation\n  return false;\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Event handled?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  const pixel = mapBrowserEvent.pixel;\n  const map = mapBrowserEvent.map;\n\n  const extent = this.getExtent();\n  let vertex = this.snapToVertex_(pixel, map);\n\n  //find the extent corner opposite the passed corner\n  const getOpposingPoint = function(point) {\n    let x_ = null;\n    let y_ = null;\n    if (point[0] == extent[0]) {\n      x_ = extent[2];\n    } else if (point[0] == extent[2]) {\n      x_ = extent[0];\n    }\n    if (point[1] == extent[1]) {\n      y_ = extent[3];\n    } else if (point[1] == extent[3]) {\n      y_ = extent[1];\n    }\n    if (x_ !== null && y_ !== null) {\n      return [x_, y_];\n    }\n    return null;\n  };\n  if (vertex && extent) {\n    const x = (vertex[0] == extent[0] || vertex[0] == extent[2]) ? vertex[0] : null;\n    const y = (vertex[1] == extent[1] || vertex[1] == extent[3]) ? vertex[1] : null;\n\n    //snap to point\n    if (x !== null && y !== null) {\n      this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n    //snap to edge\n    } else if (x !== null) {\n      this.pointerHandler_ = getEdgeHandler(\n        getOpposingPoint([x, extent[1]]),\n        getOpposingPoint([x, extent[3]])\n      );\n    } else if (y !== null) {\n      this.pointerHandler_ = getEdgeHandler(\n        getOpposingPoint([extent[0], y]),\n        getOpposingPoint([extent[2], y])\n      );\n    }\n  //no snap - new bbox\n  } else {\n    vertex = map.getCoordinateFromPixel(pixel);\n    this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n    this.pointerHandler_ = getPointHandler(vertex);\n  }\n  return true; //event handled; start downup sequence\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Event handled?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (this.pointerHandler_) {\n    const pixelCoordinate = mapBrowserEvent.coordinate;\n    this.setExtent(this.pointerHandler_(pixelCoordinate));\n    this.createOrUpdatePointerFeature_(pixelCoordinate);\n  }\n  return true;\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  this.pointerHandler_ = null;\n  //If bbox is zero area, set to null;\n  const extent = this.getExtent();\n  if (!extent || getArea(extent) === 0) {\n    this.setExtent(null);\n  }\n  return false; //Stop handling downup sequence\n}\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {module:ol/style/Style~StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POLYGON];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {module:ol/style/Style~StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n/**\n * @param {module:ol/coordinate~Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @returns {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function(point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {module:ol/coordinate~Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {module:ol/coordinate~Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @returns {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  } else if (fixedP1[1] == fixedP2[1]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  } else {\n    return null;\n  }\n}\n\n/**\n * @param {module:ol/extent~Extent} extent extent\n * @returns {Array<Array<module:ol/coordinate~Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [[extent[0], extent[1]], [extent[0], extent[3]]],\n    [[extent[0], extent[3]], [extent[2], extent[3]]],\n    [[extent[2], extent[3]], [extent[2], extent[1]]],\n    [[extent[2], extent[1]], [extent[0], extent[1]]]\n  ];\n}\n\n\nexport default ExtentInteraction;\n","/**\n * @module ol/interaction/Modify\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {equals} from '../array.js';\nimport {equals as coordinatesEqual, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, closestOnSegment} from '../coordinate.js';\nimport {listen, unlisten} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {always, primaryAction, altKeyOnly, singleClick} from '../events/condition.js';\nimport {boundingExtent, buffer, createOrUpdateFromCoordinate} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend'\n};\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array.<number>} [depth]\n * @property {module:ol/Feature} feature\n * @property {module:ol/geom/SimpleGeometry} geometry\n * @property {number} index\n * @property {Array.<module:ol/extent~Extent>} segment\n * @property {Array.<module:ol/interaction/Modify~SegmentData>} [featureSegments]\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {module:ol/events/condition~Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {module:ol/events/condition~Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex can be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style used for the features being modified. By default the default edit\n * style is used (see {@link module:ol/style}).\n * @property {module:ol/source/Vector} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the features option.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the source option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport class ModifyEvent extends Event {\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {module:ol/Collection.<module:ol/Feature>} features\n   * The features modified.\n   * @param {module:ol/MapBrowserPointerEvent} mapBrowserPointerEvent\n   * Associated {@link module:ol/MapBrowserPointerEvent}.\n   */\n  constructor(type, features, mapBrowserPointerEvent) {\n    super(type);\n\n    /**\n     * The features being modified.\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {module:ol/MapBrowserEvent}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserPointerEvent;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires module:ol/interaction/Modify~ModifyEvent\n */\nclass Modify extends PointerInteraction {\n  /**\n   * @param {module:ol/interaction/Modify~Options} options Options.\n   * @api\n   */\n  constructor(options) {\n\n    super({\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleEvent: handleEvent,\n      handleUpEvent: handleUpEvent\n    });\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n\n    /**\n     * @private\n     * @param {module:ol/MapBrowserEvent} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function(mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {module:ol/events/condition~Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition ?\n      options.deleteCondition : this.defaultDeleteCondition_;\n\n    /**\n     * @type {module:ol/events/condition~Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition ?\n      options.insertVertexCondition : always;\n\n    /**\n     * Editing vertex.\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object.<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {module:ol/pixel~Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.modified_ = false;\n\n    /**\n     * Segment RTree for each layer\n     * @type {module:ol/structs/RBush.<module:ol/interaction/Modify~SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {module:ol/layer/Vector}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object.<string, function(module:ol/Feature, module:ol/geom/Geometry)>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_,\n      'LineString': this.writeLineStringGeometry_,\n      'LinearRing': this.writeLineStringGeometry_,\n      'Polygon': this.writePolygonGeometry_,\n      'MultiPoint': this.writeMultiPointGeometry_,\n      'MultiLineString': this.writeMultiLineStringGeometry_,\n      'MultiPolygon': this.writeMultiPolygonGeometry_,\n      'Circle': this.writeCircleGeometry_,\n      'GeometryCollection': this.writeGeometryCollectionGeometry_\n    };\n\n\n    /**\n     * @type {module:ol/source/Vector}\n     * @private\n     */\n    this.source_ = null;\n\n    let features;\n    if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      listen(this.source_, VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_, this);\n      listen(this.source_, VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_, this);\n    } else {\n      features = options.features;\n    }\n    if (!features) {\n      throw new Error('The modify interaction requires features or a source');\n    }\n\n    /**\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    listen(this.features_, CollectionEventType.ADD,\n      this.handleFeatureAdd_, this);\n    listen(this.features_, CollectionEventType.REMOVE,\n      this.handleFeatureRemove_, this);\n\n    /**\n     * @type {module:ol/MapBrowserPointerEvent}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @private\n   */\n  addFeature_(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n      this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n    }\n    const map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    listen(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n\n  /**\n   * @param {module:ol/MapBrowserPointerEvent} evt Map browser event\n   * @private\n   */\n  willModifyFeatures_(evt) {\n    if (!this.modified_) {\n      this.modified_ = true;\n      this.dispatchEvent(new ModifyEvent(\n        ModifyEventType.MODIFYSTART, this.features_, evt));\n    }\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @private\n   */\n  removeFeature_(feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of canditate features\n    // is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    unlisten(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @private\n   */\n  removeFeatureSegmentData_(feature) {\n    const rBush = this.rBush_;\n    const /** @type {Array.<module:ol/interaction/Modify~SegmentData>} */ nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {module:ol/interaction/Modify~SegmentData} node RTree node.\n       */\n      function(node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setActive(active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    this.overlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * @param {module:ol/source/Vector~VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceAdd_(event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  }\n\n  /**\n   * @param {module:ol/source/Vector~VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceRemove_(event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  }\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    this.addFeature_(/** @type {module:ol/Feature} */ (evt.element));\n  }\n\n  /**\n   * @param {module:ol/events/Event} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    if (!this.changingFeature_) {\n      const feature = /** @type {module:ol/Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  }\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = /** @type {module:ol/Feature} */ (evt.element);\n    this.removeFeature_(feature);\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiPoint} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n      const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates]\n      });\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/LineString} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiLineString} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/Polygon} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n          const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment\n          });\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/geom/Circle} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const coordinates = geometry.getCenter();\n    const centerSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates]\n    });\n    const circumferenceSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates]\n    });\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n    this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      this.SEGMENT_WRITERS_[geometries[i].getType()].call(this, feature, geometries[i]);\n    }\n  }\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinates Coordinates.\n   * @return {module:ol/Feature} Vertex feature.\n   * @private\n   */\n  createOrUpdateVertexFeature_(coordinates) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n      geometry.setCoordinates(coordinates);\n    }\n    return vertexFeature;\n  }\n\n  /**\n   * @param {module:ol/MapBrowserEvent} evt Event.\n   * @private\n   */\n  handlePointerMove_(evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map);\n  }\n\n  /**\n   * @param {module:ol/pixel~Pixel} pixel Pixel\n   * @param {module:ol/PluggableMap} map Map.\n   * @private\n   */\n  handlePointerAtPixel_(pixel, map) {\n    const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n    const sortByDistance = function(a, b) {\n      return pointDistanceToSegmentDataSquared(pixelCoordinate, a) -\n          pointDistanceToSegmentDataSquared(pixelCoordinate, b);\n    };\n\n    const box = buffer(createOrUpdateFromCoordinate(pixelCoordinate),\n      map.getView().getResolution() * this.pixelTolerance_);\n\n    const rBush = this.rBush_;\n    const nodes = rBush.getInExtent(box);\n    if (nodes.length > 0) {\n      nodes.sort(sortByDistance);\n      const node = nodes[0];\n      const closestSegment = node.segment;\n      let vertex = closestOnSegmentData(pixelCoordinate, node);\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n      let dist = coordinateDistance(pixel, vertexPixel);\n      if (dist <= this.pixelTolerance_) {\n        const vertexSegments = {};\n\n        if (node.geometry.getType() === GeometryType.CIRCLE &&\n        node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(vertex);\n        } else {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(vertex);\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\n            const segment = nodes[i].segment;\n            if ((coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1]) ||\n                (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0])))) {\n              vertexSegments[getUid(segment)] = true;\n            } else {\n              break;\n            }\n          }\n        }\n\n        vertexSegments[getUid(closestSegment)] = true;\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  }\n\n  /**\n   * @param {module:ol/interaction/Modify~SegmentData} segmentData Segment data.\n   * @param {module:ol/coordinate~Coordinate} vertex Vertex.\n   * @private\n   */\n  insertVertex_(segmentData, vertex) {\n    const segment = segmentData.segment;\n    const feature = segmentData.feature;\n    const geometry = segmentData.geometry;\n    const depth = segmentData.depth;\n    const index = /** @type {number} */ (segmentData.index);\n    let coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    const rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n    const newSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index\n    });\n    rTree.insert(boundingExtent(newSegmentData.segment),\n      newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    const newSegmentData2 = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1\n    });\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  }\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  removePoint() {\n    if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n      const evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt);\n      this.removeVertex_();\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n      this.modified_ = false;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  removeVertex_() {\n    const dragSegments = this.dragSegments_;\n    const segmentsByFeature = {};\n    let deleted = false;\n    let component, coordinates, dragSegment, geometry, i, index, left;\n    let newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case GeometryType.MULTI_LINE_STRING:\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.LINE_STRING:\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.MULTI_POLYGON:\n          component = component[segmentData.depth[1]];\n          /* falls through */\n        case GeometryType.POLYGON:\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n          // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        const segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          const newSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments\n          });\n          this.rBush_.insert(boundingExtent(newSegmentData.segment),\n            newSegmentData);\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n\n    }\n    return deleted;\n  }\n\n  /**\n   * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  setGeometryCoordinates_(geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  }\n\n  /**\n   * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array.<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  updateSegmentIndices_(geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\n      if (segmentDataMatch.geometry === geometry &&\n          (depth === undefined || segmentDataMatch.depth === undefined ||\n          equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index) {\n        segmentDataMatch.index += delta;\n      }\n    });\n  }\n}\n\n\n/**\n * @param {module:ol/interaction/Modify~SegmentData} a The first segment data.\n * @param {module:ol/interaction/Modify~SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Modify}\n */\nfunction handleDownEvent(evt) {\n  if (!this.condition_(evt)) {\n    return false;\n  }\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  const pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n  this.dragSegments_.length = 0;\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const insertVertices = [];\n    const geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(compareIndexes);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += '-' + depth.join('-'); // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n      segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        const closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch);\n        if (coordinatesEqual(closestVertex, vertex) && !componentSegments[uid][0]) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n        }\n      } else if (coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n\n        // prevent dragging closed linestrings by the connecting node\n        if ((segmentDataMatch.geometry.getType() ===\n            GeometryType.LINE_STRING ||\n            segmentDataMatch.geometry.getType() ===\n            GeometryType.MULTI_LINE_STRING) &&\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0) {\n          continue;\n        }\n\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      } else if (this.insertVertexCondition_(evt) && getUid(segment) in this.vertexSegments_ &&\n          (!componentSegments[uid][0] && !componentSegments[uid][1])) {\n        insertVertices.push([segmentDataMatch, vertex]);\n      }\n    }\n    if (insertVertices.length) {\n      this.willModifyFeatures_(evt);\n    }\n    for (let j = insertVertices.length - 1; j >= 0; --j) {\n      this.insertVertex_.apply(this, insertVertices[j]);\n    }\n  }\n  return !!this.vertexFeature_;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @this {module:ol/interaction/Modify}\n */\nfunction handleDragEvent(evt) {\n  this.ignoreNextSingleClick_ = false;\n  this.willModifyFeatures_(evt);\n\n  const vertex = evt.coordinate;\n  for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n    const dragSegment = this.dragSegments_[i];\n    const segmentData = dragSegment[0];\n    const depth = segmentData.depth;\n    const geometry = segmentData.geometry;\n    let coordinates;\n    const segment = segmentData.segment;\n    const index = dragSegment[1];\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(segment[index][vertex.length]);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.POINT:\n        coordinates = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.MULTI_POINT:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index] = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.CIRCLE:\n        segment[0] = segment[1] = vertex;\n        if (segmentData.index === CIRCLE_CENTER_INDEX) {\n          this.changingFeature_ = true;\n          geometry.setCenter(vertex);\n          this.changingFeature_ = false;\n        } else { // We're dragging the circle's circumference:\n          this.changingFeature_ = true;\n          geometry.setRadius(coordinateDistance(geometry.getCenter(), vertex));\n          this.changingFeature_ = false;\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (coordinates) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n    }\n  }\n  this.createOrUpdateVertexFeature_(vertex);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Modify}\n */\nfunction handleUpEvent(evt) {\n  for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n    const segmentData = this.dragSegments_[i][0];\n    const geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE) {\n      // Update a circle object in the R* bush:\n      const coordinates = geometry.getCenter();\n      const centerSegmentData = segmentData.featureSegments[0];\n      const circumferenceSegmentData = segmentData.featureSegments[1];\n      centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n      circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n      this.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n      this.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n    } else {\n      this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n    }\n  }\n  if (this.modified_) {\n    this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n  }\n  return false;\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Modify}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  this.lastPointerEvent_ = mapBrowserEvent;\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n    if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK || !this.ignoreNextSingleClick_) {\n      handled = this.removePoint();\n    } else {\n      handled = true;\n    }\n  }\n\n  if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n    this.ignoreNextSingleClick_ = false;\n  }\n\n  return handlePointerEvent.call(this, mapBrowserEvent) && !handled;\n}\n\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {module:ol/coordinate~Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {module:ol/interaction/Modify~SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction pointDistanceToSegmentDataSquared(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    const circleGeometry = /** @type {module:ol/geom/Circle} */ (geometry);\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const distanceToCenterSquared =\n            squaredCoordinateDistance(circleGeometry.getCenter(), pointCoordinates);\n      const distanceToCircumference =\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n  return squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {module:ol/coordinate~Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {module:ol/interaction/Modify~SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {module:ol/coordinate~Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE &&\n  segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n    return geometry.getClosestPoint(pointCoordinates);\n  }\n  return closestOnSegment(pointCoordinates, segmentData.segment);\n}\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n\nexport default Modify;\n","/**\n * @module ol/interaction/Select\n */\nimport {getUid} from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {extend, includes} from '../array.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {singleClick, never, shiftKeyOnly, pointerMove} from '../events/condition.js';\nimport {TRUE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from '../interaction/Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clear} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select'\n};\n\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function((module:ol/Feature|module:ol/render/Feature), module:ol/layer/Layer):\n *     boolean} FilterFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array.<module:ol/layer/Layer>|function(module:ol/layer/Layer): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}).\n * @property {module:ol/events/condition~Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {module:ol/events/condition~Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {module:ol/interaction/Select~FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the selection\n * overlay.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nclass SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array.<module:ol/Feature>} selected Selected features.\n   * @param {Array.<module:ol/Feature>} deselected Deselected features.\n   * @param {module:ol/MapBrowserEvent} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array.<module:ol/Feature>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array.<module:ol/Feature>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {module:ol/MapBrowserEvent}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n */\nclass Select extends Interaction {\n  /**\n   * @param {module:ol/interaction/Select~Options=} opt_options Options.\n   * @api\n   */\n  constructor(opt_options) {\n\n    super({\n      handleEvent: handleEvent\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {module:ol/interaction/Select~FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    const featureOverlay = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        features: options.features,\n        wrapX: options.wrapX\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * @private\n     * @type {module:ol/layer/Vector}\n     */\n    this.featureOverlay_ = featureOverlay;\n\n    /** @type {function(module:ol/layer/Layer): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(module:ol/layer/Layer): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object.<number, module:ol/layer/Layer>}\n     */\n    this.featureLayerAssociation_ = {};\n\n    const features = this.featureOverlay_.getSource().getFeaturesCollection();\n    listen(features, CollectionEventType.ADD,\n      this.addFeature_, this);\n    listen(features, CollectionEventType.REMOVE,\n      this.removeFeature_, this);\n\n  }\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @private\n   */\n  addFeatureLayerAssociation_(feature, layer) {\n    const key = getUid(feature);\n    this.featureLayerAssociation_[key] = layer;\n  }\n\n  /**\n   * Get the selected features.\n   * @return {module:ol/Collection.<module:ol/Feature>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.featureOverlay_.getSource().getFeaturesCollection();\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n   * the (last) selected feature. Note that this will not work with any\n   * programmatic method like pushing features to\n   * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature\n   * @return {module:ol/layer/Vector} Layer.\n   * @api\n   */\n  getLayer(feature) {\n    const key = getUid(feature);\n    return (\n      /** @type {module:ol/layer/Vector} */ (this.featureLayerAssociation_[key])\n    );\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features. This only works for the canvas renderer and\n   * not for WebGL.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {module:ol/PluggableMap} map Map.\n   * @override\n   * @api\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    const selectedFeatures =\n        this.featureOverlay_.getSource().getFeaturesCollection();\n    if (currentMap) {\n      selectedFeatures.forEach(currentMap.unskipFeature.bind(currentMap));\n    }\n    super.setMap(map);\n    this.featureOverlay_.setMap(map);\n    if (map) {\n      selectedFeatures.forEach(map.skipFeature.bind(map));\n    }\n  }\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    const map = this.getMap();\n    if (map) {\n      map.skipFeature(/** @type {module:ol/Feature} */ (evt.element));\n    }\n  }\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    const map = this.getMap();\n    if (map) {\n      map.unskipFeature(/** @type {module:ol/Feature} */ (evt.element));\n    }\n  }\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @private\n   */\n  removeFeatureLayerAssociation_(feature) {\n    const key = getUid(feature);\n    delete this.featureLayerAssociation_[key];\n  }\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n * selected state of features.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Select}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  const add = this.addCondition_(mapBrowserEvent);\n  const remove = this.removeCondition_(mapBrowserEvent);\n  const toggle = this.toggleCondition_(mapBrowserEvent);\n  const set = !add && !remove && !toggle;\n  const map = mapBrowserEvent.map;\n  const features = this.featureOverlay_.getSource().getFeaturesCollection();\n  const deselected = [];\n  const selected = [];\n  if (set) {\n    // Replace the currently selected feature(s) with the feature(s) at the\n    // pixel, or clear the selected feature(s) if there is no feature at\n    // the pixel.\n    clear(this.featureLayerAssociation_);\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @param {module:ol/layer/Layer} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            selected.push(feature);\n            this.addFeatureLayerAssociation_(feature, layer);\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (let i = features.getLength() - 1; i >= 0; --i) {\n      const feature = features.item(i);\n      const index = selected.indexOf(feature);\n      if (index > -1) {\n        // feature is already selected\n        selected.splice(index, 1);\n      } else {\n        features.remove(feature);\n        deselected.push(feature);\n      }\n    }\n    if (selected.length !== 0) {\n      features.extend(selected);\n    }\n  } else {\n    // Modify the currently selected feature(s).\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @param {module:ol/layer/Layer} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\n              selected.push(feature);\n              this.addFeatureLayerAssociation_(feature, layer);\n            } else if ((remove || toggle) && includes(features.getArray(), feature)) {\n              deselected.push(feature);\n              this.removeFeatureLayerAssociation_(feature);\n            }\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (let j = deselected.length - 1; j >= 0; --j) {\n      features.remove(deselected[j]);\n    }\n    features.extend(selected);\n  }\n  if (selected.length > 0 || deselected.length > 0) {\n    this.dispatchEvent(\n      new SelectEvent(SelectEventType.SELECT,\n        selected, deselected, mapBrowserEvent));\n  }\n  return pointerMove(mapBrowserEvent);\n}\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n\n  return function(feature, resolution) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\nexport default Select;\n","/**\n * @module ol/interaction/Snap\n */\nimport {getUid} from '../util.js';\nimport {CollectionEvent} from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, closestOnCircle, closestOnSegment, squaredDistanceToSegment} from '../coordinate.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport {VectorSourceEvent} from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped\n * @property {module:ol/coordinate~Coordinate|null} vertex\n * @property {module:ol/pixel~Pixel|null} vertexPixel\n */\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {module:ol/Feature} feature\n * @property {Array.<module:ol/coordinate~Coordinate>} segment\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/Collection.<module:ol/Feature>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {module:ol/source/Vector} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     var snap = new Snap({\n *       source: source\n *     });\n */\nclass Snap extends PointerInteraction {\n  /**\n   * @param {module:ol/interaction/Snap~Options=} opt_options Options.\n   * @api\n   */\n  constructor(opt_options) {\n\n    super({\n      handleEvent: handleEvent,\n      handleDownEvent: TRUE,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {module:ol/source/Vector}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array.<module:ol/events~EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object.<number, module:ol/events~EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object.<number, module:ol/extent~Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object.<number, module:ol/Feature>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * Used for distance sorting in sortByDistance_\n     * @type {module:ol/coordinate~Coordinate}\n     * @private\n     */\n    this.pixelCoordinate_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * @type {function(module:ol/interaction/Snap~SegmentData, module:ol/interaction/Snap~SegmentData): number}\n     * @private\n     */\n    this.sortByDistance_ = sortByDistance.bind(this);\n\n\n    /**\n    * Segment RTree for each layer\n    * @type {module:ol/structs/RBush.<module:ol/interaction/Snap~SegmentData>}\n    * @private\n    */\n    this.rBush_ = new RBush();\n\n\n    /**\n    * @const\n    * @private\n    * @type {Object.<string, function(module:ol/Feature, module:ol/geom/Geometry)>}\n    */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_,\n      'LineString': this.writeLineStringGeometry_,\n      'LinearRing': this.writeLineStringGeometry_,\n      'Polygon': this.writePolygonGeometry_,\n      'MultiPoint': this.writeMultiPointGeometry_,\n      'MultiLineString': this.writeMultiLineStringGeometry_,\n      'MultiPolygon': this.writeMultiPolygonGeometry_,\n      'GeometryCollection': this.writeGeometryCollectionGeometry_,\n      'Circle': this.writeCircleGeometry_\n    };\n  }\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {module:ol/Feature} feature Feature.\n   * @param {boolean=} opt_listen Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  addFeature(feature, opt_listen) {\n    const register = opt_listen !== undefined ? opt_listen : true;\n    const feature_uid = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (segmentWriter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n        segmentWriter.call(this, feature, geometry);\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_, this);\n    }\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @private\n   */\n  forEachFeatureAdd_(feature) {\n    this.addFeature(feature);\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @private\n   */\n  forEachFeatureRemove_(feature) {\n    this.removeFeature(feature);\n  }\n\n  /**\n   * @return {module:ol/Collection.<module:ol/Feature>|Array.<module:ol/Feature>} Features.\n   * @private\n   */\n  getFeatures_() {\n    let features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return (\n      /** @type {!Array.<module:ol/Feature>|!module:ol/Collection.<module:ol/Feature>} */ (features)\n    );\n  }\n\n  /**\n   * @param {module:ol/source/Vector|module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    let feature;\n    if (evt instanceof VectorSourceEvent) {\n      feature = evt.feature;\n    } else if (evt instanceof CollectionEvent) {\n      feature = evt.element;\n    }\n    this.addFeature(/** @type {module:ol/Feature} */ (feature));\n  }\n\n  /**\n   * @param {module:ol/source/Vector|module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    let feature;\n    if (evt instanceof VectorSourceEvent) {\n      feature = evt.feature;\n    } else if (evt instanceof CollectionEvent) {\n      feature = evt.element;\n    }\n    this.removeFeature(/** @type {module:ol/Feature} */ (feature));\n  }\n\n  /**\n   * @param {module:ol/events/Event} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    const feature = /** @type {module:ol/Feature} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      const uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  }\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {module:ol/Feature} feature Feature\n   * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  removeFeature(feature, opt_unlisten) {\n    const unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n    const feature_uid = getUid(feature);\n    const extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      const rBush = this.rBush_;\n      const nodesToRemove = [];\n      rBush.forEachInExtent(extent, function(node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    const keys = this.featuresListenerKeys_;\n    const features = this.getFeatures_();\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      features.forEach(this.forEachFeatureRemove_.bind(this));\n    }\n    super.setMap(map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(this.features_, CollectionEventType.ADD,\n            this.handleFeatureAdd_, this),\n          listen(this.features_, CollectionEventType.REMOVE,\n            this.handleFeatureRemove_, this)\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(this.source_, VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_, this),\n          listen(this.source_, VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_, this)\n        );\n      }\n      features.forEach(this.forEachFeatureAdd_.bind(this));\n    }\n  }\n\n  /**\n   * @param {module:ol/pixel~Pixel} pixel Pixel\n   * @param {module:ol/coordinate~Coordinate} pixelCoordinate Coordinate\n   * @param {module:ol/PluggableMap} map Map.\n   * @return {module:ol/interaction/Snap~Result} Snap result\n   */\n  snapTo(pixel, pixelCoordinate, map) {\n\n    const lowerLeft = map.getCoordinateFromPixel(\n      [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n    const upperRight = map.getCoordinateFromPixel(\n      [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n    const box = boundingExtent([lowerLeft, upperRight]);\n\n    let segments = this.rBush_.getInExtent(box);\n\n    // If snapping on vertices only, don't consider circles\n    if (this.vertex_ && !this.edge_) {\n      segments = segments.filter(function(segment) {\n        return segment.feature.getGeometry().getType() !==\n            GeometryType.CIRCLE;\n      });\n    }\n\n    let snappedToVertex = false;\n    let snapped = false;\n    let vertex = null;\n    let vertexPixel = null;\n    let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n    if (segments.length > 0) {\n      this.pixelCoordinate_ = pixelCoordinate;\n      segments.sort(this.sortByDistance_);\n      const closestSegment = segments[0].segment;\n      const isCircle = segments[0].feature.getGeometry().getType() ===\n          GeometryType.CIRCLE;\n      if (this.vertex_ && !this.edge_) {\n        pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n        squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        snappedToVertex = dist <= this.pixelTolerance_;\n        if (snappedToVertex) {\n          snapped = true;\n          vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n          vertexPixel = map.getPixelFromCoordinate(vertex);\n        }\n      } else if (this.edge_) {\n        if (isCircle) {\n          vertex = closestOnCircle(pixelCoordinate,\n            /** @type {module:ol/geom/Circle} */ (segments[0].feature.getGeometry()));\n        } else {\n          vertex = closestOnSegment(pixelCoordinate, closestSegment);\n        }\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n        if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n          snapped = true;\n          if (this.vertex_ && !isCircle) {\n            pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n            pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n            squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n            squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n            dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n            snappedToVertex = dist <= this.pixelTolerance_;\n            if (snappedToVertex) {\n              vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n              vertexPixel = map.getPixelFromCoordinate(vertex);\n            }\n          }\n        }\n      }\n      if (snapped) {\n        vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n      }\n    }\n    return (\n      /** @type {module:ol/interaction/Snap~Result} */ ({\n        snapped: snapped,\n        vertex: vertex,\n        vertexPixel: vertexPixel\n      })\n    );\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @private\n   */\n  updateFeature_(feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/Circle} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const polygon = fromCircle(geometry);\n    const coordinates = polygon.getCoordinates()[0];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n      if (segmentWriter) {\n        segmentWriter.call(this, feature, geometries[i]);\n      }\n    }\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/LineString} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiLineString} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiPoint} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n      const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: [coordinates, coordinates]\n      });\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n          const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n            feature: feature,\n            segment: segment\n          });\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/Polygon} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n}\n\n\n/**\n * Handle all pointer events events.\n * @param {module:ol/MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {module:ol/interaction/Snap}\n */\nexport function handleEvent(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return handlePointerEvent.call(this, evt);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Snap}\n */\nfunction handleUpEvent(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n}\n\n\n/**\n * Sort segments by distance, helper function\n * @param {module:ol/interaction/Snap~SegmentData} a The first segment data.\n * @param {module:ol/interaction/Snap~SegmentData} b The second segment data.\n * @return {number} The difference in distance.\n * @this {module:ol/interaction/Snap}\n */\nfunction sortByDistance(a, b) {\n  const deltaA = squaredDistanceToSegment(this.pixelCoordinate_, a.segment);\n  const deltaB = squaredDistanceToSegment(this.pixelCoordinate_, b.segment);\n  return deltaA - deltaB;\n}\n\nexport default Snap;\n","/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {TRUE} from '../functions.js';\nimport {includes} from '../array.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\n\n\n/**\n * @enum {string}\n */\nconst TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/Collection.<module:ol/Feature>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array.<module:ol/layer/Layer>|function(module:ol/layer/Layer): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nexport class TranslateEvent extends Event {\n  /**\n   * @param {module:ol/interaction/Translate~TranslateEventType} type Type.\n   * @param {module:ol/Collection.<module:ol/Feature>} features The features translated.\n   * @param {module:ol/coordinate~Coordinate} coordinate The event coordinate.\n   */\n  constructor(type, features, coordinate) {\n\n    super(type);\n\n    /**\n     * The features being translated.\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {module:ol/coordinate~Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @fires module:ol/interaction/Translate~TranslateEvent\n */\nclass Translate extends PointerInteraction {\n  /**\n   * @param {module:ol/interaction/Translate~Options=} opt_options Options.\n   * @api\n   */\n  constructor(opt_options) {\n    super({\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleMoveEvent: handleMoveEvent,\n      handleUpEvent: handleUpEvent\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * The last position we translated to.\n     * @type {module:ol/coordinate~Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = null;\n\n\n    /**\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     * @private\n     */\n    this.features_ = options.features !== undefined ? options.features : null;\n\n    /** @type {function(module:ol/layer/Layer): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(module:ol/layer/Layer): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.lastFeature_ = null;\n\n    listen(this,\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.handleActiveChanged_, this);\n\n  }\n\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {module:ol/pixel~Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {module:ol/PluggableMap} map Map to test the intersection on.\n   * @return {module:ol/Feature} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  featuresAtPixel_(pixel, map) {\n    return map.forEachFeatureAtPixel(pixel,\n      function(feature) {\n        if (!this.features_ || includes(this.features_.getArray(), feature)) {\n          return feature;\n        }\n      }.bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features. This only works for the canvas renderer and\n   * not for WebGL.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    this.updateState_(oldMap);\n  }\n\n  /**\n   * @private\n   */\n  handleActiveChanged_() {\n    this.updateState_(null);\n  }\n\n  /**\n   * @param {module:ol/PluggableMap} oldMap Old map.\n   * @private\n   */\n  updateState_(oldMap) {\n    let map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        const elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Translate}\n */\nfunction handleDownEvent(event) {\n  this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n  if (!this.lastCoordinate_ && this.lastFeature_) {\n    this.lastCoordinate_ = event.coordinate;\n    handleMoveEvent.call(this, event);\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATESTART, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Translate}\n */\nfunction handleUpEvent(event) {\n  if (this.lastCoordinate_) {\n    this.lastCoordinate_ = null;\n    handleMoveEvent.call(this, event);\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATEEND, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @this {module:ol/interaction/Translate}\n */\nfunction handleDragEvent(event) {\n  if (this.lastCoordinate_) {\n    const newCoordinate = event.coordinate;\n    const deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n    const deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    features.forEach(function(feature) {\n      const geom = feature.getGeometry();\n      geom.translate(deltaX, deltaY);\n      feature.setGeometry(geom);\n    });\n\n    this.lastCoordinate_ = newCoordinate;\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATING, features,\n        newCoordinate));\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserEvent} event Event.\n * @this {module:ol/interaction/Translate}\n */\nfunction handleMoveEvent(event) {\n  const elem = event.map.getViewport();\n\n  // Change the cursor to grab/grabbing if hovering any of the features managed\n  // by the interaction\n  if (this.featuresAtPixel_(event.pixel, event.map)) {\n    elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n    elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n  } else {\n    elem.classList.remove('ol-grab', 'ol-grabbing');\n  }\n}\n\n\nexport default Translate;\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the wheel/trackpad or pinch gesture ends.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\n * mousewheel zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. The default set of\n * interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {module:ol/interaction/Interaction~DefaultsOptions=} opt_options\n * Defaults options.\n * @return {module:ol/Collection.<module:ol/interaction/Interaction>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      kinetic: kinetic\n    }));\n  }\n\n  const pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n","/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error))} Loader\n */\n\n\nclass ImageCanvas extends ImageBase {\n\n  /**\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {module:ol/ImageCanvas~Loader=} opt_loader Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, opt_loader) {\n\n    const state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?module:ol/ImageCanvas~Loader}\n     * @private\n     */\n    this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {Error}\n     */\n    this.error_ = null;\n\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} err Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\n\nexport default ImageCanvas;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n\n  /**\n   * @param {module:ol/render/EventType} type Type.\n   * @param {module:ol/render/VectorContext=} opt_vectorContext Vector context.\n   * @param {module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n   * @param {?CanvasRenderingContext2D=} opt_context Context.\n   * @param {?module:ol/webgl/Context=} opt_glContext WebGL Context.\n   */\n  constructor(type, opt_vectorContext, opt_frameState, opt_context, opt_glContext) {\n\n    super(type);\n\n    /**\n     * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n     * @type {module:ol/render/VectorContext|undefined}\n     * @api\n     */\n    this.vectorContext = opt_vectorContext;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {module:ol/PluggableMap~FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Only available when a Canvas renderer is used, null\n     * otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n\n    /**\n     * WebGL context. Only available when a WebGL renderer is used, null\n     * otherwise.\n     * @type {module:ol/webgl/Context|null|undefined}\n     * @api\n     */\n    this.glContext = opt_glContext;\n\n  }\n\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {module:ol/geom/Geometry} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {module:ol/style/Style} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {module:ol/geom/Circle} circleGeometry Circle geometry.\n   * @param {module:ol/Feature} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/style/Style} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {module:ol/geom/GeometryCollection} geometryCollectionGeometry Geometry collection.\n   * @param {module:ol/Feature} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {module:ol/geom/LineString|module:ol/render/Feature} lineStringGeometry Line string geometry.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} multiLineStringGeometry MultiLineString geometry.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} multiPointGeometry MultiPoint geometry.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {module:ol/geom/MultiPolygon} multiPolygonGeometry MultiPolygon geometry.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {module:ol/geom/Point|module:ol/render/Feature} pointGeometry Point geometry.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {module:ol/geom/Polygon|module:ol/render/Feature} polygonGeometry Polygon geometry.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {module:ol/style/Fill} fillStyle Fill style.\n   * @param {module:ol/style/Stroke} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {module:ol/style/Image} imageStyle Image style.\n   * @param {module:ol/render/canvas~DeclutterGroup=} opt_declutterGroup Declutter.\n   */\n  setImageStyle(imageStyle, opt_declutterGroup) {}\n\n  /**\n   * @param {module:ol/style/Text} textStyle Text style.\n   * @param {module:ol/render/canvas~DeclutterGroup=} opt_declutterGroup Declutter.\n   */\n  setTextStyle(textStyle, opt_declutterGroup) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @classdesc\n   * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n   * direct rendering of features and geometries to an HTML5 Canvas context.\n   * Instances of this class are created internally by the library and\n   * provided to application code as vectorContext member of the\n   * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n   * render events emitted by layers and maps.\n   *\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   */\n  constructor(context, pixelRatio, extent, transform, viewRotation) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageScale_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageSnapToPixel_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textScale_ = 0;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n\n  }\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, 2, this.transform_,\n      this.pixelCoordinates_);\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      let x = pixelCoordinates[i] - this.imageAnchorX_;\n      let y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (this.imageSnapToPixel_) {\n        x = Math.round(x);\n        y = Math.round(y);\n      }\n      if (rotation !== 0 || this.imageScale_ != 1) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(localTransform,\n          centerX, centerY,\n          this.imageScale_, this.imageScale_,\n          rotation,\n          -centerX, -centerY);\n        context.setTransform.apply(context, localTransform);\n      }\n      context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_,\n        this.imageWidth_, this.imageHeight_, x, y,\n        this.imageWidth_, this.imageHeight_);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (rotation !== 0 || this.textScale_ != 1) {\n        const localTransform = composeTransform(this.tmpLocalTransform_,\n          x, y,\n          this.textScale_, this.textScale_,\n          rotation,\n          -x, -y);\n        context.setTransform.apply(context, localTransform);\n      }\n      if (this.textStrokeState_) {\n        context.strokeText(this.text_, x, y);\n      }\n      if (this.textFillState_) {\n        context.fillText(this.text_, x, y);\n      }\n    }\n    if (rotation !== 0 || this.textScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n  }\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array.<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {module:ol/geom/Circle} geometry Circle geometry.\n   * @override\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry, this.transform_, this.pixelCoordinates_);\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {module:ol/style/Style} style The rendering style.\n   * @override\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {module:ol/geom/Point} */ (geometry));\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {module:ol/geom/LineString} */ (geometry));\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {module:ol/geom/Polygon} */ (geometry));\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {module:ol/geom/MultiPoint} */ (geometry));\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {module:ol/geom/MultiLineString} */ (geometry));\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {module:ol/geom/MultiPolygon} */ (geometry));\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {module:ol/geom/GeometryCollection} */ (geometry));\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {module:ol/geom/Circle} */ (geometry));\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/style/Style} style Style.\n   * @override\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {module:ol/geom/GeometryCollection} geometry Geometry collection.\n   * @override\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {module:ol/geom/Point|module:ol/render/Feature} geometry Point geometry.\n   * @override\n   */\n  drawPoint(geometry) {\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} geometry MultiPoint geometry.\n   * @override\n   */\n  drawMultiPoint(geometry) {\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {module:ol/geom/LineString|module:ol/render/Feature} geometry LineString geometry.\n   * @override\n   */\n  drawLineString(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n        geometry.getStride(), false);\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} geometry MultiLineString geometry.\n   * @override\n   */\n  drawMultiLineString(geometry) {\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = geometry.getEnds();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {module:ol/geom/Polygon|module:ol/render/Feature} geometry Polygon geometry.\n   * @override\n   */\n  drawPolygon(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(geometry.getOrientedFlatCoordinates(),\n        0, geometry.getEnds(), geometry.getStride());\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {module:ol/geom/MultiPolygon} geometry MultiPolygon geometry.\n   * @override\n   */\n  drawMultiPolygon(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {module:ol/render/canvas~FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {module:ol/render/canvas~StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (CANVAS_LINE_DASH) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = context.lineCap = strokeState.lineCap;\n      }\n      if (CANVAS_LINE_DASH) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = context.lineDashOffset =\n              strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = context.miterLimit =\n            strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = context.strokeStyle =\n            strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {module:ol/render/canvas~TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign ?\n      textState.textAlign : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = context.textBaseline =\n            textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {module:ol/style/Fill} fillStyle Fill style.\n   * @param {module:ol/style/Stroke} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(fillStyleColor ?\n          fillStyleColor : defaultFillStyle)\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap: strokeStyleLineCap !== undefined ?\n          strokeStyleLineCap : defaultLineCap,\n        lineDash: strokeStyleLineDash ?\n          strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset ?\n          strokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: strokeStyleLineJoin !== undefined ?\n          strokeStyleLineJoin : defaultLineJoin,\n        lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n          strokeStyleWidth : defaultLineWidth),\n        miterLimit: strokeStyleMiterLimit !== undefined ?\n          strokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(strokeStyleColor ?\n          strokeStyleColor : defaultStrokeStyle)\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {module:ol/style/Image} imageStyle Image style.\n   * @override\n   */\n  setImageStyle(imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      const imageAnchor = imageStyle.getAnchor();\n      // FIXME pixel ratio\n      const imageImage = imageStyle.getImage(1);\n      const imageOrigin = imageStyle.getOrigin();\n      const imageSize = imageStyle.getSize();\n      this.imageAnchorX_ = imageAnchor[0];\n      this.imageAnchorY_ = imageAnchor[1];\n      this.imageHeight_ = imageSize[1];\n      this.image_ = imageImage;\n      this.imageOpacity_ = imageStyle.getOpacity();\n      this.imageOriginX_ = imageOrigin[0];\n      this.imageOriginY_ = imageOrigin[1];\n      this.imageRotateWithView_ = imageStyle.getRotateWithView();\n      this.imageRotation_ = imageStyle.getRotation();\n      this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n      this.imageSnapToPixel_ = imageStyle.getSnapToPixel();\n      this.imageWidth_ = imageSize[0];\n    }\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {module:ol/style/Text} textStyle Text style.\n   * @override\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(textFillStyleColor ?\n            textFillStyleColor : defaultFillStyle)\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap: textStrokeStyleLineCap !== undefined ?\n            textStrokeStyleLineCap : defaultLineCap,\n          lineDash: textStrokeStyleLineDash ?\n            textStrokeStyleLineDash : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset ?\n            textStrokeStyleLineDashOffset : defaultLineDashOffset,\n          lineJoin: textStrokeStyleLineJoin !== undefined ?\n            textStrokeStyleLineJoin : defaultLineJoin,\n          lineWidth: textStrokeStyleWidth !== undefined ?\n            textStrokeStyleWidth : defaultLineWidth,\n          miterLimit: textStrokeStyleMiterLimit !== undefined ?\n            textStrokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(textStrokeStyleColor ?\n            textStrokeStyleColor : defaultStrokeStyle)\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScale();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ?\n          textFont : defaultFont,\n        textAlign: textTextAlign !== undefined ?\n          textTextAlign : defaultTextAlign,\n        textBaseline: textTextBaseline !== undefined ?\n          textTextBaseline : defaultTextBaseline\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n          textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n      this.textOffsetY_ =\n          textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n        textScale : 1);\n    }\n  }\n}\n\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n\n    /**\n    * @type {!Object.<string, module:ol/style/IconImage>}\n    * @private\n    */\n    this.cache_ = {};\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.cacheSize_ = 0;\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n  * FIXME empty description for jsdoc\n  */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n  * FIXME empty description for jsdoc\n  */\n  expire() {\n    if (this.cacheSize_ > this.maxCacheSize_) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n  * @param {string} src Src.\n  * @param {?string} crossOrigin Cross origin.\n  * @param {module:ol/color~Color} color Color.\n  * @return {module:ol/style/IconImage} Icon image.\n  */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n  * @param {string} src Src.\n  * @param {?string} crossOrigin Cross origin.\n  * @param {module:ol/color~Color} color Color.\n  * @param {module:ol/style/IconImage} iconImage Icon image.\n  */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n  * Set the cache size of the icon cache. Default is `32`. Change this value when\n  * your map uses more than 32 different icon images and you are not caching icon\n  * styles on the application level.\n  * @param {number} maxCacheSize Cache max size.\n  * @api\n  */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/color~Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/renderer/Map\n */\nimport {getUid} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE, UNDEFINED} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\n\n\nclass MapRenderer extends Disposable {\n\n  /**\n   * @param {module:ol/PluggableMap} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {module:ol/PluggableMap}\n     */\n    this.map_ = map;\n\n    /**\n     * @private\n     * @type {!Object.<string, module:ol/renderer/Layer>}\n     */\n    this.layerRenderers_ = {};\n\n    /**\n     * @private\n     * @type {Object.<string, module:ol/events~EventsKey>}\n     */\n    this.layerRendererListeners_ = {};\n\n    /**\n     * @private\n     * @type {Array.<module:ol/renderer/Layer>}\n     */\n    this.layerRendererConstructors_ = [];\n\n  }\n\n  /**\n   * Register layer renderer constructors.\n   * @param {Array.<module:ol/renderer/Layer>} constructors Layer renderers.\n   */\n  registerLayerRenderers(constructors) {\n    this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n  }\n\n  /**\n   * Get the registered layer renderer constructors.\n   * @return {Array.<module:ol/renderer/Layer>} Registered layer renderers.\n   */\n  getLayerRendererConstructors() {\n    return this.layerRendererConstructors_;\n  }\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(coordinateToPixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / viewState.resolution, -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0], -viewState.center[1]);\n\n    invertTransform(\n      transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n  }\n\n  /**\n   * Removes all layer renderers.\n   */\n  removeLayerRenderers() {\n    for (const key in this.layerRenderers_) {\n      this.removeLayerRendererByKey_(key).dispose();\n    }\n  }\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature),\n   *     module:ol/layer/Layer): T} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @param {module:ol/layer/Layer} layer Layer.\n     * @return {?} Callback result.\n     */\n    function forEachFeatureAtCoordinate(feature, layer) {\n      const key = getUid(feature).toString();\n      const managed = frameState.layerStates[getUid(layer)].managed;\n      if (!(key in frameState.skippedFeatureUids && !managed)) {\n        return callback.call(thisArg, feature, managed ? layer : null);\n      }\n    }\n\n    const projection = viewState.projection;\n\n    let translatedCoordinate = coordinate;\n    if (projection.canWrapX()) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      const x = coordinate[0];\n      if (x < projectionExtent[0] || x > projectionExtent[2]) {\n        const worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n        translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n      }\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n    let i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        const layerRenderer = this.getLayerRenderer(layer);\n        if (layer.getSource()) {\n          result = layerRenderer.forEachFeatureAtCoordinate(\n            layer.getSource().getWrapX() ? translatedCoordinate : coordinate,\n            frameState, hitTolerance, forEachFeatureAtCoordinate, thisArg);\n        }\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {}\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @protected\n   * @return {module:ol/renderer/Layer} Layer renderer.\n   */\n  getLayerRenderer(layer) {\n    const layerKey = getUid(layer).toString();\n    if (layerKey in this.layerRenderers_) {\n      return this.layerRenderers_[layerKey];\n    } else {\n      let renderer;\n      for (let i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n        const candidate = this.layerRendererConstructors_[i];\n        if (candidate['handles'](layer)) {\n          renderer = candidate['create'](this, layer);\n          break;\n        }\n      }\n      if (renderer) {\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer,\n          EventType.CHANGE, this.handleLayerRendererChange_, this);\n      } else {\n        throw new Error('Unable to create renderer for layer: ' + layer.getType());\n      }\n      return renderer;\n    }\n  }\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @protected\n   * @return {module:ol/renderer/Layer} Layer renderer.\n   */\n  getLayerRendererByKey(layerKey) {\n    return this.layerRenderers_[layerKey];\n  }\n\n  /**\n   * @protected\n   * @return {Object.<string, module:ol/renderer/Layer>} Layer renderers.\n   */\n  getLayerRenderers() {\n    return this.layerRenderers_;\n  }\n\n  /**\n   * @return {module:ol/PluggableMap} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handle changes in a layer renderer.\n   * @private\n   */\n  handleLayerRendererChange_() {\n    this.map_.render();\n  }\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @return {module:ol/renderer/Layer} Layer renderer.\n   * @private\n   */\n  removeLayerRendererByKey_(layerKey) {\n    const layerRenderer = this.layerRenderers_[layerKey];\n    delete this.layerRenderers_[layerKey];\n\n    unlistenByKey(this.layerRendererListeners_[layerKey]);\n    delete this.layerRendererListeners_[layerKey];\n\n    return layerRenderer;\n  }\n\n  /**\n   * @param {module:ol/PluggableMap} map Map.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @private\n   */\n  removeUnusedLayerRenderers_(map, frameState) {\n    for (const layerKey in this.layerRenderers_) {\n      if (!frameState || !(layerKey in frameState.layerStates)) {\n        this.removeLayerRendererByKey_(layerKey).dispose();\n      }\n    }\n  }\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    frameState.postRenderFunctions.push(/** @type {module:ol/PluggableMap~PostRenderFunction} */ (expireIconCache));\n  }\n\n  /**\n   * @param {!module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleRemoveUnusedLayerRenderers(frameState) {\n    for (const layerKey in this.layerRenderers_) {\n      if (!(layerKey in frameState.layerStates)) {\n        frameState.postRenderFunctions.push(\n          /** @type {module:ol/PluggableMap~PostRenderFunction} */ (this.removeUnusedLayerRenderers_.bind(this))\n        );\n        return;\n      }\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/PluggableMap} map Map.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n\n/**\n * Render.\n * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nMapRenderer.prototype.renderFrame = UNDEFINED;\n\n\n/**\n * @param {module:ol/layer/Layer~State} state1 First layer state.\n * @param {module:ol/layer/Layer~State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n","/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array.<module:ol/renderer/Layer>}\n */\nexport const layerRendererConstructors = [];\n\n\nclass CanvasMapRenderer extends MapRenderer {\n\n  /**\n   * @param {module:ol/PluggableMap} map Map.\n   * @api\n   */\n  constructor(map) {\n    super(map);\n\n    const container = map.getViewport();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = this.context_.canvas;\n\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  /**\n   * @param {module:ol/render/EventType} type Event type.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchComposeEvent_(type, frameState) {\n    const map = this.getMap();\n    const context = this.context_;\n    if (map.hasListener(type)) {\n      const extent = frameState.extent;\n      const pixelRatio = frameState.pixelRatio;\n      const viewState = frameState.viewState;\n      const rotation = viewState.rotation;\n\n      const transform = this.getTransform(frameState);\n\n      const vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n        extent, transform, rotation);\n      const composeEvent = new RenderEvent(type, vectorContext,\n        frameState, context, null);\n      map.dispatchEvent(composeEvent);\n    }\n  }\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @protected\n   * @return {!module:ol/transform~Transform} Transform.\n   */\n  getTransform(frameState) {\n    const viewState = frameState.viewState;\n    const dx1 = this.canvas_.width / 2;\n    const dy1 = this.canvas_.height / 2;\n    const sx = frameState.pixelRatio / viewState.resolution;\n    const sy = -sx;\n    const angle = -viewState.rotation;\n    const dx2 = -viewState.center[0];\n    const dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  renderFrame(frameState) {\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const context = this.context_;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n\n    const rotation = frameState.viewState.rotation;\n\n    this.calculateMatrices2D(frameState);\n\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    if (rotation) {\n      context.save();\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n\n    const viewResolution = frameState.viewState.resolution;\n    let i, ii, layer, layerRenderer, layerState;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      layerState = layerStatesArray[i];\n      layer = layerState.layer;\n      layerRenderer = /** @type {module:ol/renderer/canvas/Layer} */ (this.getLayerRenderer(layer));\n      if (!visibleAtResolution(layerState, viewResolution) ||\n          layerState.sourceState != SourceState.READY) {\n        continue;\n      }\n      if (layerRenderer.prepareFrame(frameState, layerState)) {\n        layerRenderer.composeFrame(frameState, layerState, context);\n      }\n    }\n\n    if (rotation) {\n      context.restore();\n    }\n\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    let result;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n\n    let i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        const layerRenderer = /** @type {module:ol/renderer/canvas/Layer} */ (this.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtCoordinate(\n          coordinate, frameState, hitTolerance, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  registerLayerRenderers(constructors) {\n    MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n    for (let i = 0, ii = constructors.length; i < ii; ++i) {\n      const ctor = constructors[i];\n      if (!includes(layerRendererConstructors, ctor)) {\n        layerRendererConstructors.push(ctor);\n      }\n    }\n  }\n}\n\n\nexport default CanvasMapRenderer;\n","/**\n * @module ol/renderer/Layer\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {FALSE, UNDEFINED} from '../functions.js';\nimport SourceState from '../source/State.js';\n\nclass LayerRenderer extends Observable {\n\n  /**\n   * @param {module:ol/layer/Layer} layer Layer.\n   */\n  constructor(layer) {\n\n    super();\n\n    /**\n     * @private\n     * @type {module:ol/layer/Layer}\n     */\n    this.layer_ = layer;\n\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {module:ol/source/Tile} source Tile source.\n   * @param {module:ol/proj/Projection} projection Projection of the tiles.\n   * @param {Object.<number, Object.<string, module:ol/Tile>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, module:ol/TileRange):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {module:ol/TileRange} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      function(zoom, tileRange) {\n        function callback(tile) {\n          if (!tiles[zoom]) {\n            tiles[zoom] = {};\n          }\n          tiles[zoom][tile.tileCoord.toString()] = tile;\n        }\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n\n  /**\n   * @return {module:ol/layer/Layer} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Handle changes in image state.\n   * @param {module:ol/events/Event} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {module:ol/Image} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {module:ol/ImageBase} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      listen(image, EventType.CHANGE, this.handleImageChange_, this);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/source/Tile} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {module:ol/source/Tile} tileSource Tile source.\n       * @param {module:ol/PluggableMap} map Map.\n       * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function(tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource).toString();\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]);\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {module:ol/PluggableMap~PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  }\n\n  /**\n   * @param {!Object.<string, !Object.<string, module:ol/TileRange>>} usedTiles Used tiles.\n   * @param {module:ol/source/Tile} tileSource Tile source.\n   * @param {number} z Z.\n   * @param {module:ol/TileRange} tileRange Tile range.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, z, tileRange) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource).toString();\n    const zKey = z.toString();\n    if (tileSourceKey in usedTiles) {\n      if (zKey in usedTiles[tileSourceKey]) {\n        usedTiles[tileSourceKey][zKey].extend(tileRange);\n      } else {\n        usedTiles[tileSourceKey][zKey] = tileRange;\n      }\n    } else {\n      usedTiles[tileSourceKey] = {};\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/source/Tile} tileSource Tile source.\n   * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(this: T, module:ol/Tile)=} opt_tileCallback Tile callback.\n   * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n   * @protected\n   * @template T\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback,\n    opt_this\n  ) {\n    const tileSourceKey = getUid(tileSource).toString();\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([tile, tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback.call(opt_this, tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature), module:ol/layer/Layer): T}\n *     callback Feature callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @return {T|undefined} Callback result.\n * @template S,T\n */\nLayerRenderer.prototype.forEachFeatureAtCoordinate = UNDEFINED;\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @return {boolean} Is there a feature at the given coordinate?\n */\nLayerRenderer.prototype.hasFeatureAtCoordinate = FALSE;\n\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {TRUE} from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\nclass CanvasLayerRenderer extends LayerRenderer {\n\n  /**\n   * @param {module:ol/layer/Layer} layer Layer.\n   */\n  constructor(layer) {\n\n    super(layer);\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/extent~Extent} extent Clip extent.\n   * @protected\n   */\n  clip(context, frameState, extent) {\n    const pixelRatio = frameState.pixelRatio;\n    const width = frameState.size[0] * pixelRatio;\n    const height = frameState.size[1] * pixelRatio;\n    const rotation = frameState.viewState.rotation;\n    const topLeft = getTopLeft(/** @type {module:ol/extent~Extent} */ (extent));\n    const topRight = getTopRight(/** @type {module:ol/extent~Extent} */ (extent));\n    const bottomRight = getBottomRight(/** @type {module:ol/extent~Extent} */ (extent));\n    const bottomLeft = getBottomLeft(/** @type {module:ol/extent~Extent} */ (extent));\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  }\n\n  /**\n   * @param {module:ol/render/EventType} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @private\n   */\n  dispatchComposeEvent_(type, context, frameState, opt_transform) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const width = frameState.size[0] * frameState.pixelRatio;\n      const height = frameState.size[1] * frameState.pixelRatio;\n      const rotation = frameState.viewState.rotation;\n      rotateAtOffset(context, -rotation, width / 2, height / 2);\n      const transform = opt_transform !== undefined ?\n        opt_transform : this.getTransform(frameState, 0);\n      const render = new CanvasImmediateRenderer(\n        context, frameState.pixelRatio, frameState.extent, transform,\n        frameState.viewState.rotation);\n      const composeEvent = new RenderEvent(type, render, frameState,\n        context, null);\n      layer.dispatchEvent(composeEvent);\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n  }\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachLayerAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg) {\n    const hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE, this);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @protected\n   */\n  postCompose(context, frameState, layerState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @protected\n   */\n  preCompose(context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @protected\n   */\n  dispatchRenderEvent(context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n  }\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!module:ol/transform~Transform} Transform.\n   */\n  getTransform(frameState, offsetX) {\n    const viewState = frameState.viewState;\n    const pixelRatio = frameState.pixelRatio;\n    const dx1 = pixelRatio * frameState.size[0] / 2;\n    const dy1 = pixelRatio * frameState.size[1] / 2;\n    const sx = pixelRatio / viewState.resolution;\n    const sy = -sx;\n    const angle = -viewState.rotation;\n    const dx2 = -viewState.center[0] + offsetX;\n    const dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  }\n\n  /**\n   * @abstract\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  composeFrame(frameState, layerState, context) {}\n\n  /**\n   * @abstract\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @return {boolean} whether composeFrame should be called.\n   */\n  prepareFrame(frameState, layerState) {}\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport {scale as scaleCoordinate} from '../../coordinate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport {UNDEFINED} from '../../functions.js';\nimport CanvasLayerRenderer from '../canvas/Layer.js';\nimport {create as createTransform, apply as applyTransform} from '../../transform.js';\n\nclass IntermediateCanvasRenderer extends CanvasLayerRenderer {\n\n  /**\n   * @param {module:ol/layer/Layer} layer Layer.\n   */\n  constructor(layer) {\n\n    super(layer);\n\n    /**\n     * @protected\n     * @type {module:ol/transform~Transform}\n     */\n    this.coordinateToCanvasPixelTransform = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitCanvasContext_ = null;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  composeFrame(frameState, layerState, context) {\n\n    this.preCompose(context, frameState);\n\n    const image = this.getImage();\n    if (image) {\n\n      // clipped rendering if layer extent is set\n      const extent = layerState.extent;\n      const clipped = extent !== undefined &&\n          !containsExtent(extent, frameState.extent) &&\n          intersects(extent, frameState.extent);\n      if (clipped) {\n        this.clip(context, frameState, /** @type {module:ol/extent~Extent} */ (extent));\n      }\n\n      const imageTransform = this.getImageTransform();\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      const alpha = context.globalAlpha;\n      context.globalAlpha = layerState.opacity;\n\n      // for performance reasons, context.setTransform is only used\n      // when the view is rotated. see http://jsperf.com/canvas-transform\n      const dx = imageTransform[4];\n      const dy = imageTransform[5];\n      const dw = image.width * imageTransform[0];\n      const dh = image.height * imageTransform[3];\n      context.drawImage(image, 0, 0, +image.width, +image.height,\n        Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n      context.globalAlpha = alpha;\n\n      if (clipped) {\n        context.restore();\n      }\n    }\n\n    this.postCompose(context, frameState, layerState);\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Canvas.\n   */\n  getImage() {}\n\n  /**\n   * @abstract\n   * @return {!module:ol/transform~Transform} Image transform.\n   */\n  getImageTransform() {}\n\n  /**\n   * @inheritDoc\n   */\n  forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg) {\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const skippedFeatureUids = frameState.skippedFeatureUids;\n    return source.forEachFeatureAtCoordinate(\n      coordinate, resolution, rotation, hitTolerance, skippedFeatureUids,\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        return callback.call(thisArg, feature, layer);\n      });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachLayerAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.getImage()) {\n      return undefined;\n    }\n\n    if (this.getLayer().getSource().forEachFeatureAtCoordinate !== UNDEFINED) {\n      // for ImageCanvas sources use the original hit-detection logic,\n      // so that for example also transparent polygons are detected\n      return CanvasLayerRenderer.prototype.forEachLayerAtCoordinate.apply(this, arguments);\n    } else {\n      const pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n      scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n      if (!this.hitCanvasContext_) {\n        this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n      }\n\n      this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n      this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n      const imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n      if (imageData[3] > 0) {\n        return callback.call(thisArg, this.getLayer(), imageData);\n      } else {\n        return undefined;\n      }\n    }\n  }\n}\n\n\nexport default IntermediateCanvasRenderer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\nclass CanvasImageLayerRenderer extends IntermediateCanvasRenderer {\n\n  /**\n   * @param {module:ol/layer/Image|module:ol/layer/Vector} imageLayer Image or vector layer.\n   * @api\n   */\n  constructor(imageLayer) {\n\n    super(imageLayer);\n\n    /**\n     * @private\n     * @type {?module:ol/ImageBase}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @type {!Array.<string>}\n     */\n    this.skippedFeatures_ = [];\n\n    /**\n     * @private\n     * @type {module:ol/renderer/canvas/VectorLayer}\n     */\n    this.vectorRenderer_ = null;\n\n    if (imageLayer.getType() === LayerType.VECTOR) {\n      for (let i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n        const ctor = layerRendererConstructors[i];\n        if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n          this.vectorRenderer_ = new ctor(imageLayer);\n          break;\n        }\n      }\n    }\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    if (this.vectorRenderer_) {\n      this.vectorRenderer_.dispose();\n    }\n    IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImage() {\n    return !this.image_ ? null : this.image_.getImage();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImageTransform() {\n    return this.imageTransform_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  prepareFrame(frameState, layerState) {\n\n    const pixelRatio = frameState.pixelRatio;\n    const size = frameState.size;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n\n    let image;\n    const imageLayer = /** @type {module:ol/layer/Image} */ (this.getLayer());\n    const imageSource = imageLayer.getSource();\n\n    const hints = frameState.viewHints;\n\n    const vectorRenderer = this.vectorRenderer_;\n    let renderedExtent = frameState.extent;\n    if (!vectorRenderer && layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      let projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        const sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      let skippedFeatures = this.skippedFeatures_;\n      if (vectorRenderer) {\n        const context = vectorRenderer.context;\n        const imageFrameState = /** @type {module:ol/PluggableMap~FrameState} */ (assign({}, frameState, {\n          size: [\n            getWidth(renderedExtent) / viewResolution,\n            getHeight(renderedExtent) / viewResolution\n          ],\n          viewState: /** @type {module:ol/View~State} */ (assign({}, frameState.viewState, {\n            rotation: 0\n          }))\n        }));\n        const newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n        image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n          if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n              (vectorRenderer.replayGroupChanged ||\n              !equals(skippedFeatures, newSkippedFeatures))) {\n            context.canvas.width = imageFrameState.size[0] * pixelRatio;\n            context.canvas.height = imageFrameState.size[1] * pixelRatio;\n            vectorRenderer.compose(context, imageFrameState, layerState);\n            skippedFeatures = newSkippedFeatures;\n            callback();\n          }\n        });\n      } else {\n        image = imageSource.getImage(\n          renderedExtent, viewResolution, pixelRatio, projection);\n      }\n      if (image && this.loadImage(image)) {\n        this.image_ = image;\n        this.skippedFeatures_ = skippedFeatures;\n      }\n    }\n\n    if (this.image_) {\n      image = this.image_;\n      const imageExtent = image.getExtent();\n      const imageResolution = image.getResolution();\n      const imagePixelRatio = image.getPixelRatio();\n      const scale = pixelRatio * imageResolution /\n          (viewResolution * imagePixelRatio);\n      const transform = composeTransform(this.imageTransform_,\n        pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n        scale, scale,\n        0,\n        imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n        imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n      composeTransform(this.coordinateToCanvasPixelTransform,\n        pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n        pixelRatio / viewResolution, -pixelRatio / viewResolution,\n        0,\n        -viewCenter[0], -viewCenter[1]);\n\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg);\n    } else {\n      return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback, thisArg);\n    }\n  }\n}\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {module:ol/layer/Vector} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/ImageLayer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {module:ol/layer/Image} */ (layer));\n};\n\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n\n  }\n\n  /**\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {module:ol/TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n       this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {module:ol/TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n       this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n  }\n\n  /**\n   * @param {module:ol/TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n  * @return {number} Height.\n  */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n  * @return {module:ol/size~Size} Size.\n  */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n  * @return {number} Width.\n  */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n  * @param {module:ol/TileRange} tileRange Tile range.\n  * @return {boolean} Intersects.\n  */\n  intersects(tileRange) {\n    return this.minX <= tileRange.maxX &&\n       this.maxX >= tileRange.minX &&\n       this.minY <= tileRange.maxY &&\n       this.maxY >= tileRange.minY;\n  }\n}\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {module:ol/TileRange=} tileRange TileRange.\n * @return {module:ol/TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, createEmpty, equals, getIntersection, isEmpty} from '../../extent.js';\nimport IntermediateCanvasRenderer from '../canvas/IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\nclass CanvasTileLayerRenderer extends IntermediateCanvasRenderer {\n\n  /**\n   * @param {module:ol/layer/Tile|module:ol/layer/VectorTile} tileLayer Tile layer.\n   * @param {boolean=} opt_noContext Skip the context creation.\n   * @api\n   */\n  constructor(tileLayer, opt_noContext) {\n\n    super(tileLayer);\n\n    /**\n     * @protected\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = opt_noContext ? null : createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.oversampling_;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array.<module:ol/Tile>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {module:ol/extent~Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {module:ol/TileRange}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.zDirection = 0;\n\n  }\n\n  /**\n   * @private\n   * @param {module:ol/Tile} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile_(tile) {\n    const tileState = tile.getState();\n    const useInterimTilesOnError = this.getLayer().getUseInterimTilesOnError();\n    return tileState == TileState.LOADED ||\n        tileState == TileState.EMPTY ||\n        tileState == TileState.ERROR && !useInterimTilesOnError;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {!module:ol/Tile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const layer = this.getLayer();\n    const source = /** @type {module:ol/source/Tile} */ (layer.getSource());\n    let tile = source.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!layer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (layer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile_(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  prepareFrame(frameState, layerState) {\n\n    const pixelRatio = frameState.pixelRatio;\n    const size = frameState.size;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n\n    const tileLayer = this.getLayer();\n    const tileSource = /** @type {module:ol/source/Tile} */ (tileLayer.getSource());\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n    let oversampling = Math.round(viewResolution / tileResolution) || 1;\n    let extent = frameState.extent;\n\n    if (layerState.extent !== undefined) {\n      extent = getIntersection(extent, layerState.extent);\n    }\n    if (isEmpty(extent)) {\n      // Return false to prevent the rendering of the layer.\n      return false;\n    }\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    const imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    /**\n     * @type {Object.<number, Object.<string, module:ol/Tile>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource, projection, tilesToDrawByZ);\n\n    const hints = frameState.viewHints;\n    const animatingOrInteracting = hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING];\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    let tile, x, y;\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (Date.now() - frameState.time > 16 && animatingOrInteracting) {\n          continue;\n        }\n        tile = this.getTile(z, x, y, pixelRatio, projection);\n        if (this.isDrawableTile_(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord, tmpTileRange, tmpExtent);\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n        }\n\n      }\n    }\n\n    const renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n    if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\n      this.newTiles_ ||\n          !(this.renderedExtent_ && containsExtent(this.renderedExtent_, extent)) ||\n          this.renderedRevision != sourceRevision ||\n          oversampling != this.oversampling_ ||\n          !animatingOrInteracting && renderedResolution != this.renderedResolution\n    )) {\n\n      const context = this.context;\n      if (context) {\n        const tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n        const width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n        const height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n        const canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n          this.oversampling_ = oversampling;\n          canvas.width = width;\n          canvas.height = height;\n        } else {\n          if (this.renderedExtent_ && !equals(imageExtent, this.renderedExtent_)) {\n            context.clearRect(0, 0, width, height);\n          }\n          oversampling = this.oversampling_;\n        }\n      }\n\n      this.renderedTiles.length = 0;\n      /** @type {Array.<number>} */\n      const zs = Object.keys(tilesToDrawByZ).map(Number);\n      zs.sort(function(a, b) {\n        if (a === z) {\n          return 1;\n        } else if (b === z) {\n          return -1;\n        } else {\n          return a > b ? 1 : a < b ? -1 : 0;\n        }\n      });\n      let currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n      let tileExtent, tileGutter, tilesToDraw, w, h;\n      for (i = 0, ii = zs.length; i < ii; ++i) {\n        currentZ = zs[i];\n        currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n        currentResolution = tileGrid.getResolution(currentZ);\n        currentScale = currentResolution / tileResolution;\n        tileGutter = tilePixelRatio * tileSource.getGutter(projection);\n        tilesToDraw = tilesToDrawByZ[currentZ];\n        for (const tileCoordKey in tilesToDraw) {\n          tile = tilesToDraw[tileCoordKey];\n          tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n          x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n          y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n          w = currentTilePixelSize[0] * currentScale / oversampling;\n          h = currentTilePixelSize[1] * currentScale / oversampling;\n          this.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n          this.renderedTiles.push(tile);\n        }\n      }\n\n      this.renderedRevision = sourceRevision;\n      this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n      this.renderedExtent_ = imageExtent;\n    }\n\n    const scale = this.renderedResolution / viewResolution;\n    const transform = composeTransform(this.imageTransform_,\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n      scale, scale,\n      0,\n      (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\n      (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n    composeTransform(this.coordinateToCanvasPixelTransform,\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\n      0,\n      -viewCenter[0], -viewCenter[1]);\n\n\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n    this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n      projection, extent, z, tileLayer.getPreload());\n    this.scheduleExpireCache(frameState, tileSource);\n\n    return this.renderedTiles.length > 0;\n  }\n\n  /**\n   * @param {module:ol/Tile} tile Tile.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, layerState, x, y, w, h, gutter, transition) {\n    const image = tile.getImage(this.getLayer());\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    if (alpha === 1 && !this.getLayer().getSource().getOpaque(frameState.viewState.projection)) {\n      this.context.clearRect(x, y, w, h);\n    }\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(image, gutter, gutter,\n      image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImageTransform() {\n    return this.imageTransform_;\n  }\n}\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/TileLayer} The layer renderer.\n */\nCanvasTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasTileLayerRenderer(/** @type {module:ol/layer/Tile} */ (layer));\n};\n\n\n/**\n * @function\n * @return {module:ol/layer/Tile|module:ol/layer/VectorTile}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/render/ReplayGroup\n */\n/**\n * Base class for replay groups.\n */\nclass ReplayGroup {\n  /**\n   * @abstract\n   * @param {number|undefined} zIndex Z index.\n   * @param {module:ol/render/ReplayType} replayType Replay type.\n   * @return {module:ol/render/VectorContext} Replay.\n   */\n  getReplay(zIndex, replayType) {}\n\n  /**\n   * @abstract\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {}\n}\n\nexport default ReplayGroup;\n","/**\n * @module ol/render/ReplayType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array.<Array.<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  const result = [];\n\n  // Keep text upright\n  const reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  const numChars = text.length;\n\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let segmentM = 0;\n  let segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  let chunk = '';\n  let chunkLength = 0;\n  let data, index, previousAngle;\n  for (let i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    const char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    const charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    const charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    const segmentPos = charM - segmentM;\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    const interpolate = segmentPos / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n","/**\n * @module ol/render/replay\n */\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * @const\n * @type {Array.<module:ol/render/ReplayType>}\n */\nexport const ORDER = [\n  ReplayType.POLYGON,\n  ReplayType.CIRCLE,\n  ReplayType.LINE_STRING,\n  ReplayType.IMAGE,\n  ReplayType.TEXT,\n  ReplayType.DEFAULT\n];\n\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\n","/**\n * @module ol/render/canvas/Replay\n */\nimport {getUid} from '../../util.js';\nimport {UNDEFINED} from '../../functions.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship, createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, extendCoordinate, intersects} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {isEmpty} from '../../obj.js';\nimport VectorContext from '../VectorContext.js';\nimport {drawImage, resetTransform, defaultPadding, defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\n\n\n/**\n * @type {module:ol/extent~Extent}\n */\nconst tmpExtent = createEmpty();\n\n\n/**\n * @type {!module:ol/transform~Transform}\n */\nconst tmpTransform = createTransform();\n\n\nclass CanvasReplay extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {?} declutterTree Declutter tree.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    super();\n\n    /**\n     * @type {?}\n     */\n    this.declutterTree = declutterTree;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {module:ol/extent~Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @private\n     * @type {Array.<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array.<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array.<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array.<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {!Object.<number,module:ol/coordinate~Coordinate|Array.<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!module:ol/transform~Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array.<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @protected\n     * @type {module:ol/render/canvas~FillStrokeState}\n     */\n    this.state = /** @type {module:ol/render/canvas~FillStrokeState} */ ({});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/coordinate~Coordinate} p1 1st point of the background box.\n   * @param {module:ol/coordinate~Coordinate} p2 2nd point of the background box.\n   * @param {module:ol/coordinate~Coordinate} p3 3rd point of the background box.\n   * @param {module:ol/coordinate~Coordinate} p4 4th point of the background box.\n   * @param {Array.<*>} fillInstruction Fill instruction.\n   * @param {Array.<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(context, /** @type {Array.<*>} */ (strokeInstruction));\n      context.stroke();\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n   * @param {number} height Height.\n   * @param {number} opacity Opacity.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {number} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {number} width Width.\n   * @param {Array.<number>} padding Padding.\n   * @param {Array.<*>} fillInstruction Fill instruction.\n   * @param {Array.<*>} strokeInstruction Stroke instruction.\n   */\n  replayImage_(\n    context,\n    x,\n    y,\n    image,\n    anchorX,\n    anchorY,\n    declutterGroup,\n    height,\n    opacity,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    width,\n    padding,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = fillInstruction || strokeInstruction;\n    anchorX *= scale;\n    anchorY *= scale;\n    x -= anchorX;\n    y -= anchorY;\n\n    const w = (width + originX > image.width) ? image.width - originX : width;\n    const h = (height + originY > image.height) ? image.height - originY : height;\n    const boxW = padding[3] + w * scale + padding[1];\n    const boxH = padding[0] + h * scale + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    /** @type {module:ol/coordinate~Coordinate} */\n    let p1;\n    /** @type {module:ol/coordinate~Coordinate} */\n    let p2;\n    /** @type {module:ol/coordinate~Coordinate} */\n    let p3;\n    /** @type {module:ol/coordinate~Coordinate} */\n    let p4;\n    if (fillStroke || rotation !== 0) {\n      p1 = [boxX, boxY];\n      p2 = [boxX + boxW, boxY];\n      p3 = [boxX + boxW, boxY + boxH];\n      p4 = [boxX, boxY + boxH];\n    }\n\n    let transform = null;\n    if (rotation !== 0) {\n      const centerX = x + anchorX;\n      const centerY = y + anchorY;\n      transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n      createOrUpdateEmpty(tmpExtent);\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p1));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p2));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p3));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p4));\n    } else {\n      createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n    }\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n    const intersects =\n        tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n        tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n\n    if (declutterGroup) {\n      if (!intersects && declutterGroup[4] == 1) {\n        return;\n      }\n      extend(declutterGroup, tmpExtent);\n      const declutterArgs = intersects ?\n        [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n        null;\n      if (declutterArgs && fillStroke) {\n        declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n      }\n      declutterGroup.push(declutterArgs);\n    } else if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(context, p1, p2, p3, p4,\n          /** @type {Array.<*>} */ (fillInstruction),\n          /** @type {Array.<*>} */ (strokeInstruction));\n      }\n      drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n    }\n  }\n\n  /**\n   * @protected\n   * @param {Array.<number>} dashArray Dash array.\n   * @return {Array.<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n      return dash * pixelRatio;\n    });\n  }\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatCoordinates(flatCoordinates, offset, end, stride, closed, skipFirst) {\n\n    let myEnd = this.coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    const lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    const nextCoord = [NaN, NaN];\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          this.coordinates[myEnd++] = lastCoord[0];\n          this.coordinates[myEnd++] = lastCoord[1];\n        }\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else if (nextRel === Relationship.INTERSECTING) {\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastCoord[0] = nextCoord[0];\n      lastCoord[1] = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      this.coordinates[myEnd++] = lastCoord[0];\n      this.coordinates[myEnd++] = lastCoord[1];\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array.<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array.<number>} replayEnds Replay ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, replayEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const replayEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n      replayEnds.push(replayEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @inheritDoc.\n   */\n  drawCustom(geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const replayBegin = this.coordinates.length;\n    let flatCoordinates, replayEnd, replayEnds, replayEndss;\n    let offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      geometry = /** @type {module:ol/geom/MultiPolygon} */ (geometry);\n      flatCoordinates = geometry.getOrientedFlatCoordinates();\n      replayEndss = [];\n      const endss = geometry.getEndss();\n      offset = 0;\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const myEnds = [];\n        offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n        replayEndss.push(myEnds);\n      }\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n    } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n      replayEnds = [];\n      flatCoordinates = (type == GeometryType.POLYGON) ?\n        /** @type {module:ol/geom/Polygon} */ (geometry).getOrientedFlatCoordinates() :\n        geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n        /** @type {module:ol/geom/Polygon|module:ol/geom/MultiLineString} */ (geometry).getEnds(),\n        stride, replayEnds);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnds, geometry, renderer, inflateCoordinatesArray]);\n    } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      replayEnd = this.appendFlatCoordinates(\n        flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer, inflateCoordinates]);\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      replayEnd = this.coordinates.length;\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer]);\n    }\n    this.endGeometry(geometry, feature);\n  }\n\n  /**\n   * @protected\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.setTransform.apply(context, resetTransform);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array.<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle = /** @type {module:ol/colorlike~ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {string} */ (instruction[3]);\n    context.lineJoin = /** @type {string} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (CANVAS_LINE_DASH) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array.<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   */\n  renderDeclutter_(declutterGroup, feature) {\n    if (declutterGroup && declutterGroup.length > 5) {\n      const groupCount = declutterGroup[4];\n      if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n        /** @type {module:ol/structs/RBush~Entry} */\n        const box = {\n          minX: /** @type {number} */ (declutterGroup[0]),\n          minY: /** @type {number} */ (declutterGroup[1]),\n          maxX: /** @type {number} */ (declutterGroup[2]),\n          maxY: /** @type {number} */ (declutterGroup[3]),\n          value: feature\n        };\n        if (!this.declutterTree.collides(box)) {\n          this.declutterTree.insert(box);\n          for (let j = 5, jj = declutterGroup.length; j < jj; ++j) {\n            const declutterData = /** @type {Array} */ (declutterGroup[j]);\n            if (declutterData) {\n              if (declutterData.length > 11) {\n                this.replayTextBackground_(declutterData[0],\n                  declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                  declutterData[11], declutterData[12]);\n              }\n              drawImage.apply(undefined, declutterData);\n            }\n          }\n        }\n        declutterGroup.length = 5;\n        createOrUpdateEmpty(declutterGroup);\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {Array.<*>} instructions Instructions array.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined}\n   *     featureCallback Feature callback.\n   * @param {module:ol/extent~Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  replay_(\n    context,\n    transform,\n    skippedFeaturesHash,\n    instructions,\n    featureCallback,\n    opt_hitExtent\n  ) {\n    /** @type {Array.<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates, 0, this.coordinates.length, 2,\n        transform, this.pixelCoordinates_);\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    const skipFeatures = !isEmpty(skippedFeaturesHash);\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n\n    const state = /** @type {module:ol/render~State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {module:ol/Feature|module:ol/render/Feature} */ feature;\n    let x, y;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {module:ol/render/canvas/Instruction} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {module:ol/Feature|module:ol/render/Feature} */ (instruction[1]);\n          if ((skipFeatures &&\n              skippedFeaturesHash[getUid(feature).toString()]) ||\n              !feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (opt_hitExtent !== undefined && !intersects(\n            opt_hitExtent, feature.getGeometry().getExtent())) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (instruction[3]);\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */\n              (instruction[3]);\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          declutterGroup = featureCallback ? null : /** @type {module:ol/render/canvas~DeclutterGroup} */ (instruction[6]);\n          const height = /** @type {number} */ (instruction[7]);\n          const opacity = /** @type {number} */ (instruction[8]);\n          const originX = /** @type {number} */ (instruction[9]);\n          const originY = /** @type {number} */ (instruction[10]);\n          const rotateWithView = /** @type {boolean} */ (instruction[11]);\n          let rotation = /** @type {number} */ (instruction[12]);\n          const scale = /** @type {number} */ (instruction[13]);\n          const snapToPixel = /** @type {boolean} */ (instruction[14]);\n          const width = /** @type {number} */ (instruction[15]);\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array.<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = backgroundStroke = false;\n          }\n\n          if (rotateWithView) {\n            rotation += viewRotation;\n          }\n          for (; d < dd; d += 2) {\n            this.replayImage_(context,\n              pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n              declutterGroup, height, opacity, originX, originY, rotation, scale,\n              snapToPixel, width, padding,\n              backgroundFill ? /** @type {Array.<*>} */ (lastFillInstruction) : null,\n              backgroundStroke ? /** @type {Array.<*>} */ (lastStrokeInstruction) : null);\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          declutterGroup = featureCallback ? null : /** @type {module:ol/render/canvas~DeclutterGroup} */ (instruction[4]);\n          const overflow = /** @type {number} */ (instruction[5]);\n          const fillKey = /** @type {string} */ (instruction[6]);\n          const maxAngle = /** @type {number} */ (instruction[7]);\n          const measure = /** @type {function(string):number} */ (instruction[8]);\n          const offsetY = /** @type {number} */ (instruction[9]);\n          const strokeKey = /** @type {string} */ (instruction[10]);\n          const strokeWidth = /** @type {number} */ (instruction[11]);\n          const text = /** @type {string} */ (instruction[12]);\n          const textKey = /** @type {string} */ (instruction[13]);\n          const textScale = /** @type {number} */ (instruction[14]);\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength = measure(text);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = /** @type {module:ol~render} */ (this).textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\n            if (parts) {\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = /** @type {module:ol~render} */ (this).getImage(chars, textKey, '', strokeKey);\n                  anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                  anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = /** @type {module:ol~render} */ (this).getImage(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n            }\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {module:ol/Feature|module:ol/render/Feature} */ (instruction[1]);\n            const result = featureCallback(feature);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {module:ol/colorlike~ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array.<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   */\n  replay(context, transform, viewRotation, skippedFeaturesHash) {\n    this.viewRotation_ = viewRotation;\n    this.replay_(context, transform,\n      skippedFeaturesHash, this.instructions, undefined, undefined);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T=} opt_featureCallback\n   *     Feature callback.\n   * @param {module:ol/extent~Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  replayHitDetection(\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.replay_(context, transform, skippedFeaturesHash,\n      this.hitDetectionInstructions, opt_featureCallback, opt_hitExtent);\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {module:ol/render/canvas/Instruction} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle);\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle);\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap = strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash.slice() : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin = strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit = strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   * @return {Array.<*>} Fill instruction.\n   */\n  createFill(state, geometry) {\n    const fillStyle = state.fillStyle;\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   * @return {Array.<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n      state.lineJoin, state.miterLimit,\n      this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n    ];\n  }\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   * @param {function(this:module:ol/render/canvas/Replay, module:ol/render/canvas~FillStrokeState, (module:ol/geom/Geometry|module:ol/render/Feature)):Array.<*>} createFill Create fill.\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   */\n  updateFillStyle(state, createFill, geometry) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state, geometry));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   * @param {function(this:module:ol/render/canvas/Replay, module:ol/render/canvas~FillStrokeState)} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (state.currentStrokeStyle != strokeStyle ||\n        state.currentLineCap != lineCap ||\n        (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n        state.currentLineDashOffset != lineDashOffset ||\n        state.currentLineJoin != lineJoin ||\n        state.currentLineWidth != lineWidth ||\n        state.currentMiterLimit != miterLimit) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   */\n  endGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {module:ol/extent~Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = this.resolution * (this.maxLineWidth + 1) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\n\n/**\n * FIXME empty description for jsdoc\n */\nCanvasReplay.prototype.finish = UNDEFINED;\n\n\nexport default CanvasReplay;\n","/**\n * @module ol/render/canvas/ImageReplay\n */\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\nclass CanvasImageReplay extends CanvasReplay {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {?} declutterTree Declutter tree.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    super(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {module:ol/render/canvas~DeclutterGroup}\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.snapToPixel_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n  }\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} My end.\n   */\n  drawCoordinates_(flatCoordinates, offset, end, stride) {\n    return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.snapToPixel_, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.snapToPixel_, this.width_\n    ]);\n    this.endGeometry(pointGeometry, feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.snapToPixel_, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.snapToPixel_, this.width_\n    ]);\n    this.endGeometry(multiPointGeometry, feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.snapToPixel_ = undefined;\n    this.width_ = undefined;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setImageStyle(imageStyle, declutterGroup) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    const image = imageStyle.getImage(1);\n    const origin = imageStyle.getOrigin();\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.declutterGroup_ = /** @type {module:ol/render/canvas~DeclutterGroup} */ (declutterGroup);\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScale();\n    this.snapToPixel_ = imageStyle.getSnapToPixel();\n    this.width_ = size[0];\n  }\n}\n\n\nexport default CanvasImageReplay;\n","/**\n * @module ol/render/canvas/LineStringReplay\n */\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\nclass CanvasLineStringReplay extends CanvasReplay {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {?} declutterTree Declutter tree.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    super(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatCoordinates(\n      flatCoordinates, offset, end, stride, false, false);\n    const moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(lineStringGeometry, feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(multiLineStringGeometry, feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  finish() {\n    const state = this.state;\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n  }\n\n  /**\n   * @inheritDoc.\n   */\n  applyStroke(state) {\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    CanvasReplay.prototype.applyStroke.call(this, state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\n\nexport default CanvasLineStringReplay;\n","/**\n * @module ol/render/canvas/PolygonReplay\n */\nimport {asString} from '../../color.js';\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\n\nclass CanvasPolygonReplay extends CanvasReplay {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {?} declutterTree Declutter tree.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    super(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array.<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle != undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n      const moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(circleGeometry);\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(fillInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(circleGeometry, feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(polygonGeometry);\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n    this.endGeometry(polygonGeometry, feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(multiPolygonGeometry);\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n    }\n    this.endGeometry(multiPolygonGeometry, feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   */\n  setFillStrokeStyles_(geometry) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill, geometry);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\n\nexport default CanvasPolygonReplay;\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array.<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/ReplayGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport ReplayType from '../ReplayType.js';\nimport CanvasReplay from '../canvas/Replay.js';\nimport CanvasImageReplay from '../canvas/ImageReplay.js';\nimport CanvasLineStringReplay from '../canvas/LineStringReplay.js';\nimport CanvasPolygonReplay from '../canvas/PolygonReplay.js';\nimport CanvasTextReplay from '../canvas/TextReplay.js';\nimport {ORDER} from '../replay.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @type {Object.<module:ol/render/ReplayType,\n *                function(new: module:ol/render/canvas/Replay, number, module:ol/extent~Extent,\n *                number, number, boolean, Array.<module:ol/render/canvas~DeclutterGroup>)>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': CanvasPolygonReplay,\n  'Default': CanvasReplay,\n  'Image': CanvasImageReplay,\n  'LineString': CanvasLineStringReplay,\n  'Polygon': CanvasPolygonReplay,\n  'Text': CanvasTextReplay\n};\n\n\nclass CanvasReplayGroup extends ReplayGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {module:ol/extent~Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay group can have overlapping geometries.\n   * @param {?} declutterTree Declutter tree for declutter processing in postrender.\n   * @param {number=} opt_renderBuffer Optional rendering buffer.\n   */\n  constructor(\n    tolerance,\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    declutterTree,\n    opt_renderBuffer\n  ) {\n    super();\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = declutterTree;\n\n    /**\n     * @type {module:ol/render/canvas~DeclutterGroup}\n     * @private\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object.<string, !Object.<module:ol/render/ReplayType, module:ol/render/canvas/Replay>>}\n     */\n    this.replaysByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n  }\n\n  /**\n   * @param {boolean} group Group with previous replay.\n   * @return {module:ol/render/canvas~DeclutterGroup} Declutter instruction group.\n   */\n  addDeclutter(group) {\n    let declutter = null;\n    if (this.declutterTree_) {\n      if (group) {\n        declutter = this.declutterGroup_;\n        /** @type {number} */ (declutter[4])++;\n      } else {\n        declutter = this.declutterGroup_ = createEmpty();\n        declutter.push(1);\n      }\n    }\n    return declutter;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * @param {Array.<module:ol/render/ReplayType>} replays Replays.\n   * @return {boolean} Has replays of the provided types.\n   */\n  hasReplays(replays) {\n    for (const zIndex in this.replaysByZIndex_) {\n      const candidates = this.replaysByZIndex_[zIndex];\n      for (let i = 0, ii = replays.length; i < ii; ++i) {\n        if (replays[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  finish() {\n    for (const zKey in this.replaysByZIndex_) {\n      const replays = this.replaysByZIndex_[zKey];\n      for (const replayKey in replays) {\n        replays[replayKey].finish();\n      }\n    }\n  }\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T} callback Feature callback.\n   * @param {Object.<string, module:ol/render/canvas~DeclutterGroup>} declutterReplays Declutter replays.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    skippedFeaturesHash,\n    callback,\n    declutterReplays\n  ) {\n\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(this.hitDetectionTransform_,\n      hitTolerance + 0.5, hitTolerance + 0.5,\n      1 / resolution, -1 / resolution,\n      -rotation,\n      -coordinate[0], -coordinate[1]);\n    const context = this.hitDetectionContext_;\n\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {module:ol/extent~Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n    }\n\n    const mask = getCircleArray(hitTolerance);\n    let declutteredFeatures;\n    if (this.declutterTree_) {\n      declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n        return entry.value;\n      });\n    }\n\n    let replayType;\n\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @return {?} Callback result.\n     */\n    function featureCallback(feature) {\n      const imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n      for (let i = 0; i < contextSize; i++) {\n        for (let j = 0; j < contextSize; j++) {\n          if (mask[i][j]) {\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n              let result;\n              if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\n                  declutteredFeatures.indexOf(feature) !== -1) {\n                result = callback(feature);\n              }\n              if (result) {\n                return result;\n              } else {\n                context.clearRect(0, 0, contextSize, contextSize);\n                return undefined;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /** @type {Array.<number>} */\n    const zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, replays, replay, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        replayType = ORDER[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            const declutter = declutterReplays[zIndexKey];\n            if (!declutter) {\n              declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            result = replay.replayHitDetection(context, transform, rotation,\n              skippedFeaturesHash, featureCallback, hitExtent);\n            if (result) {\n              return result;\n            }\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @return {Array.<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getReplay(zIndex, replayType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.replaysByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.replaysByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[replayType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[replayType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_,\n        this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n      replays[replayType] = replay;\n    }\n    return replay;\n  }\n\n  /**\n   * @return {Object.<string, Object.<module:ol/render/ReplayType, module:ol/render/canvas/Replay>>} Replays.\n   */\n  getReplays() {\n    return this.replaysByZIndex_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  isEmpty() {\n    return isEmpty(this.replaysByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {Array.<module:ol/render/ReplayType>=} opt_replayTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {Object.<string, module:ol/render/canvas~DeclutterGroup>=} opt_declutterReplays Declutter replays.\n   */\n  replay(\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    opt_replayTypes,\n    opt_declutterReplays\n  ) {\n\n    /** @type {Array.<number>} */\n    const zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    context.save();\n    this.clip(context, transform);\n\n    const replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n      for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n        const replayType = replayTypes[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (opt_declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            const declutter = opt_declutterReplays[zIndexKey];\n            if (!declutter) {\n              opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            replay.replay(context, transform, viewRotation, skippedFeaturesHash);\n          }\n        }\n      }\n    }\n\n    context.restore();\n  }\n}\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object.<number, Array.<Array.<(boolean|undefined)>>>}\n */\nconst circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array.<Array.<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  let i;\n  const radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array.<Array.<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  const arraySize = radius * 2 + 1;\n  const arr = new Array(arraySize);\n  for (let i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  let x = radius;\n  let y = 0;\n  let error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object.<string, Array.<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n */\nexport function replayDeclutter(declutterReplays, context, rotation) {\n  const zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  const skippedFeatureUids = {};\n  for (let z = 0, zz = zs.length; z < zz; ++z) {\n    const replayData = declutterReplays[zs[z].toString()];\n    for (let i = 0, ii = replayData.length; i < ii;) {\n      const replay = replayData[i++];\n      const transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids);\n    }\n  }\n}\n\n\nexport default CanvasReplayGroup;\n","/**\n * @module ol/render/canvas/TextReplay\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {labelCache, measureTextWidth, defaultTextAlign, measureTextHeight, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n\nclass CanvasTextReplay extends CanvasReplay {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {?} declutterTree Declutter tree.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    super(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {module:ol/render/canvas~DeclutterGroup}\n     */\n    this.declutterGroup_;\n\n    /**\n     * @private\n     * @type {Array.<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object.<string, module:ol/render/canvas~FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object.<string, module:ol/render/canvas~StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {module:ol/render/canvas~TextState}\n     */\n    this.textState_ = /** @type {module:ol/render/canvas~TextState} */ ({});\n\n    /**\n     * @type {!Object.<string, module:ol/render/canvas~TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {Object.<string, Object.<string, number>>}\n     */\n    this.widths_ = {};\n\n    labelCache.prune();\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    let begin = this.coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let end = 2;\n    let stride = 2;\n    let i, ii;\n\n    if (textState.placement === TextPlacement.LINE) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      stride = geometry.getStride();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = geometry.getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = geometry.getEnds().slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss = geometry.getEndss();\n        ends = [];\n        for (i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (i = flatOffset; i < flatEnd; i += stride) {\n          this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        end = this.coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end, this.declutterGroup_);\n        begin = end;\n      }\n      this.endGeometry(geometry, feature);\n\n    } else {\n      const label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\n      const width = label.width / this.pixelRatio;\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {module:ol/geom/LineString} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {module:ol/geom/Circle} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {module:ol/geom/MultiLineString} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\n            return;\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints = /** @type {module:ol/geom/MultiPolygon} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (textState.overflow || interiorPoints[i + 2] / this.resolution >= width) {\n              flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n            }\n          }\n          end = flatCoordinates.length;\n          if (end == 0) {\n            return;\n          }\n          break;\n        default:\n      }\n      end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill, geometry);\n          this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      this.drawTextImage_(label, begin, end);\n      this.endGeometry(geometry, feature);\n    }\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {HTMLCanvasElement} Image.\n   */\n  getImage(text, textKey, fillKey, strokeKey) {\n    let label;\n    const key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n    if (!labelCache.containsKey(key)) {\n      const strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\n      const fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\n      const textState = this.textStates[textKey] || this.textState_;\n      const pixelRatio = this.pixelRatio;\n      const scale = textState.scale * pixelRatio;\n      const align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n      const strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n      const lines = text.split('\\n');\n      const numLines = lines.length;\n      const widths = [];\n      const width = measureTextWidths(textState.font, lines, widths);\n      const lineHeight = measureTextHeight(textState.font);\n      const height = lineHeight * numLines;\n      const renderWidth = (width + strokeWidth);\n      const context = createCanvasContext2D(\n        Math.ceil(renderWidth * scale),\n        Math.ceil((height + strokeWidth) * scale));\n      label = context.canvas;\n      labelCache.set(key, label);\n      if (scale != 1) {\n        context.scale(scale, scale);\n      }\n      context.font = textState.font;\n      if (strokeKey) {\n        context.strokeStyle = strokeState.strokeStyle;\n        context.lineWidth = strokeWidth;\n        context.lineCap = strokeState.lineCap;\n        context.lineJoin = strokeState.lineJoin;\n        context.miterLimit = strokeState.miterLimit;\n        if (CANVAS_LINE_DASH && strokeState.lineDash.length) {\n          context.setLineDash(strokeState.lineDash);\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (fillKey) {\n        context.fillStyle = fillState.fillStyle;\n      }\n      context.textBaseline = 'middle';\n      context.textAlign = 'center';\n      const leftRight = (0.5 - align);\n      const x = align * label.width / scale + leftRight * strokeWidth;\n      let i;\n      if (strokeKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n      if (fillKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n    }\n    return labelCache.get(key);\n  }\n\n  /**\n   * @private\n   * @param {HTMLCanvasElement} label Label.\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawTextImage_(label, begin, end) {\n    const textState = this.textState_;\n    const strokeState = this.textStrokeState_;\n    const pixelRatio = this.pixelRatio;\n    const align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n    const strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n    const anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n    this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1, true, label.width,\n      textState.padding == defaultPadding ?\n        defaultPadding : textState.padding.map(function(p) {\n          return p * pixelRatio;\n        }),\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1 / pixelRatio, true, label.width, textState.padding,\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n   */\n  drawChars_(begin, end, declutterGroup) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = /** @type {module:ol/render/canvas~StrokeState} */ ({\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash\n        });\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(this.textKey_ in this.textStates)) {\n      this.textStates[this.textKey_] = /** @type {module:ol/render/canvas~TextState} */ ({\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        scale: textState.scale\n      });\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = /** @type {module:ol/render/canvas~FillState} */ ({\n          fillStyle: fillState.fillStyle\n        });\n      }\n    }\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const font = textState.font;\n    const textScale = textState.scale;\n    const strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n    let widths = this.widths_[font];\n    if (!widths) {\n      this.widths_[font] = widths = {};\n    }\n    this.instructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        let width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale * pixelRatio;\n      },\n      offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        let width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale;\n      },\n      offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n    ]);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setTextStyle(textStyle, declutterGroup) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      this.declutterGroup_ = /** @type {module:ol/render/canvas~DeclutterGroup} */ (declutterGroup);\n\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = this.textFillState_ = null;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = this.textFillState_ = /** @type {module:ol/render/canvas~FillState} */ ({});\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle);\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = this.textStrokeState_ = null;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = this.textStrokeState_ = /** @type {module:ol/render/canvas~StrokeState} */ ({});\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n            lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n            lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n            miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle);\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      checkFont(font);\n      const textScale = textStyle.getScale();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? 1 : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState ?\n        (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n        strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n        strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n        '';\n      this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n      this.fillKey_ = fillState ?\n        (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n        '';\n    }\n  }\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array.<string>} lines Lines to measure.\n * @param {Array.<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\nexport default CanvasTextReplay;\n","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object.<module:ol/geom/GeometryType,\n *                function(module:ol/render/ReplayGroup, module:ol/geom/Geometry,\n *                         module:ol/style/Style, Object)>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature1 Feature 1.\n * @param {module:ol/Feature|module:ol/render/Feature} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return getUid(feature1) - getUid(feature2);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Circle} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n\n  return loading;\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom(/** @type {module:ol/geom/SimpleGeometry} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/LineString|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Point|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup from '../../render/canvas/ReplayGroup.js';\nimport CanvasLayerRenderer from '../canvas/Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\n\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n\n  /**\n   * @param {module:ol/layer/Vector} vectorLayer Vector layer.\n   * @api\n   */\n  constructor(vectorLayer) {\n\n    super(vectorLayer);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {function(module:ol/Feature, module:ol/Feature): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/render/canvas/ReplayGroup}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = createCanvasContext2D();\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasLayerRenderer.prototype.disposeInternal.call(this);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   */\n  compose(context, frameState, layerState) {\n    const extent = frameState.extent;\n    const pixelRatio = frameState.pixelRatio;\n    const skippedFeatureUids = layerState.managed ?\n      frameState.skippedFeatureUids : {};\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = /** @type {module:ol/source/Vector} */ (this.getLayer().getSource());\n\n    let transform = this.getTransform(frameState, 0);\n\n    // clipped rendering if layer extent is set\n    const clipExtent = layerState.extent;\n    const clipped = clipExtent !== undefined;\n    if (clipped) {\n      this.clip(context, frameState, /** @type {module:ol/extent~Extent} */ (clipExtent));\n    }\n    const replayGroup = this.replayGroup_;\n    if (replayGroup && !replayGroup.isEmpty()) {\n      if (this.declutterTree_) {\n        this.declutterTree_.clear();\n      }\n      const layer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n      let drawOffsetX = 0;\n      let drawOffsetY = 0;\n      let replayContext;\n      const transparentLayer = layerState.opacity !== 1;\n      const hasRenderListeners = layer.hasListener(RenderEventType.RENDER);\n      if (transparentLayer || hasRenderListeners) {\n        let drawWidth = context.canvas.width;\n        let drawHeight = context.canvas.height;\n        if (rotation) {\n          const drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n          drawOffsetX = (drawSize - drawWidth) / 2;\n          drawOffsetY = (drawSize - drawHeight) / 2;\n          drawWidth = drawHeight = drawSize;\n        }\n        // resize and clear\n        this.context.canvas.width = drawWidth;\n        this.context.canvas.height = drawHeight;\n        replayContext = this.context;\n      } else {\n        replayContext = context;\n      }\n\n      const alpha = replayContext.globalAlpha;\n      if (!transparentLayer) {\n        // for performance reasons, context.save / context.restore is not used\n        // to save and restore the transformation matrix and the opacity.\n        // see http://jsperf.com/context-save-restore-versus-variable\n        replayContext.globalAlpha = layerState.opacity;\n      }\n\n      if (replayContext != context) {\n        replayContext.translate(drawOffsetX, drawOffsetY);\n      }\n\n      const width = frameState.size[0] * pixelRatio;\n      const height = frameState.size[1] * pixelRatio;\n      rotateAtOffset(replayContext, -rotation,\n        width / 2, height / 2);\n      replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n      if (vectorSource.getWrapX() && projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)) {\n        let startX = extent[0];\n        const worldWidth = getWidth(projectionExtent);\n        let world = 0;\n        let offsetX;\n        while (startX < projectionExtent[0]) {\n          --world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n          startX += worldWidth;\n        }\n        world = 0;\n        startX = extent[2];\n        while (startX > projectionExtent[2]) {\n          ++world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n          startX -= worldWidth;\n        }\n      }\n      rotateAtOffset(replayContext, rotation,\n        width / 2, height / 2);\n\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (replayContext != context) {\n        if (transparentLayer) {\n          const mainContextAlpha = context.globalAlpha;\n          context.globalAlpha = layerState.opacity;\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n          context.globalAlpha = mainContextAlpha;\n        } else {\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        }\n        replayContext.translate(-drawOffsetX, -drawOffsetY);\n      }\n\n      if (!transparentLayer) {\n        replayContext.globalAlpha = alpha;\n      }\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  composeFrame(frameState, layerState, context) {\n    const transform = this.getTransform(frameState, 0);\n    this.preCompose(context, frameState, transform);\n    this.compose(context, frameState, layerState);\n    this.postCompose(context, frameState, layerState, transform);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.replayGroup_) {\n      return undefined;\n    } else {\n      const resolution = frameState.viewState.resolution;\n      const rotation = frameState.viewState.rotation;\n      const layer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n      /** @type {!Object.<string, boolean>} */\n      const features = {};\n      const result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          const key = getUid(feature).toString();\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n      return result;\n    }\n  }\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   */\n  handleFontsChanged_(event) {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {module:ol/events/Event} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  prepareFrame(frameState, layerState) {\n    const vectorLayer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n    const vectorSource = vectorLayer.getSource();\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      return true;\n    }\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n    const projectionExtent = viewState.projection.getExtent();\n\n    if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n        !containsExtent(projectionExtent, frameState.extent)) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n    }\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasReplayGroup(\n      getRenderTolerance(resolution, pixelRatio), extent, resolution,\n      pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n    vectorSource.loadFeatures(extent, resolution, projection);\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     * @this {module:ol/renderer/canvas/VectorLayer}\n     */\n    const render = function(feature) {\n      let styles;\n      const styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        const dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    }.bind(this);\n    if (vectorLayerRenderOrder) {\n      /** @type {Array.<module:ol/Feature>} */\n      const features = [];\n      vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {module:ol/Feature} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        }, this);\n      features.sort(vectorLayerRenderOrder);\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        render(features[i]);\n      }\n    } else {\n      vectorSource.forEachFeatureInExtent(extent, render, this);\n    }\n    replayGroup.finish();\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.replayGroup_ = replayGroup;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {(module:ol/style/Style|Array.<module:ol/style/Style>)} styles The style or array of styles.\n   * @param {module:ol/render/canvas/ReplayGroup} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(feature, resolution, pixelRatio, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i],\n          getSquaredRenderTolerance(resolution, pixelRatio),\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles,\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  }\n}\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/VectorLayer} The layer renderer.\n */\nCanvasVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorLayerRenderer(/** @type {module:ol/layer/Vector} */ (layer));\n};\n\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileState from '../../TileState.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport {equivalent as equivalentProjection} from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/ReplayType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\nimport {ORDER} from '../../render/replay.js';\nimport CanvasTileLayerRenderer from '../canvas/TileLayer.js';\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  reset as resetTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\n\n\n/**\n * @type {!Object.<string, Array.<module:ol/render/ReplayType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n\n\n/**\n * @type {!Object.<string, Array.<module:ol/render/ReplayType>>}\n */\nconst VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': ORDER\n};\n\n\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n\n  /**\n   * @param {module:ol/layer/VectorTile} layer VectorTile layer.\n   * @api\n   */\n  constructor(layer) {\n\n    super(layer, true);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n    this.zDirection = layer.getRenderMode() == VectorTileRenderType.VECTOR ? 1 : 0;\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const tile = CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection);\n    if (tile.getState() === TileState.LOADED) {\n      this.createReplayGroup_(tile, pixelRatio, projection);\n      if (this.context) {\n        this.renderTileImage_(tile, pixelRatio, projection);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  prepareFrame(frameState, layerState) {\n    const layer = this.getLayer();\n    const layerRevision = layer.getRevision();\n    if (this.renderedLayerRevision_ != layerRevision) {\n      this.renderedTiles.length = 0;\n      const renderMode = layer.getRenderMode();\n      if (!this.context && renderMode != VectorTileRenderType.VECTOR) {\n        this.context = createCanvasContext2D();\n      }\n      if (this.context && renderMode == VectorTileRenderType.VECTOR) {\n        this.context = null;\n      }\n    }\n    this.renderedLayerRevision_ = layerRevision;\n    return CanvasTileLayerRenderer.prototype.prepareFrame.apply(this, arguments);\n  }\n\n  /**\n   * @param {module:ol/VectorImageTile} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @private\n   */\n  createReplayGroup_(tile, pixelRatio, projection) {\n    const layer = this.getLayer();\n    const revision = layer.getRevision();\n    const renderOrder = /** @type {module:ol/render~OrderFunction} */ (layer.getRenderOrder()) || null;\n\n    const replayState = tile.getReplayState(layer);\n    if (!replayState.dirty && replayState.renderedRevision == revision &&\n        replayState.renderedRenderOrder == renderOrder) {\n      return;\n    }\n\n    const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const resolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const tileExtent = tile.extent;\n\n    const zIndexKeys = {};\n    for (let t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n      const sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n\n      const sourceTileCoord = sourceTile.tileCoord;\n      const sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n        buffer(sharedExtent, layer.getRenderBuffer() * resolution, this.tmpExtent);\n      const tileProjection = sourceTile.getProjection();\n      let reproject = false;\n      if (!equivalentProjection(projection, tileProjection)) {\n        reproject = true;\n        sourceTile.setProjection(projection);\n      }\n      replayState.dirty = false;\n      const replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\n        pixelRatio, source.getOverlaps(), this.declutterTree_, layer.getRenderBuffer());\n      const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @this {module:ol/renderer/canvas/VectorTileLayer}\n       */\n      const render = function(feature) {\n        let styles;\n        const styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n          this.dirty_ = this.dirty_ || dirty;\n          replayState.dirty = replayState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        const feature = features[i];\n        if (reproject) {\n          if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n            // projected tile extent\n            tileProjection.setWorldExtent(sourceTileExtent);\n            // tile extent in tile pixel space\n            tileProjection.setExtent(sourceTile.getExtent());\n          }\n          feature.getGeometry().transform(tileProjection, projection);\n        }\n        if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n          render.call(this, feature);\n        }\n      }\n      replayGroup.finish();\n      for (const r in replayGroup.getReplays()) {\n        zIndexKeys[r] = true;\n      }\n      sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n    }\n    replayState.renderedRevision = revision;\n    replayState.renderedRenderOrder = renderOrder;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    /** @type {!Object.<string, boolean>} */\n    const features = {};\n\n    /** @type {Array.<module:ol/VectorImageTile>} */\n    const renderedTiles = this.renderedTiles;\n\n    let bufferedExtent, found;\n    let i, ii, replayGroup;\n    for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n      const tile = renderedTiles[i];\n      bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\n      if (!containsCoordinate(bufferedExtent, coordinate)) {\n        continue;\n      }\n      for (let t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n        const sourceTile = tile.getTile(tile.tileKeys[t]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n        found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n          /**\n           * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n           * @return {?} Callback result.\n           */\n          function(feature) {\n            const key = getUid(feature).toString();\n            if (!(key in features)) {\n              features[key] = true;\n              return callback.call(thisArg, feature, layer);\n            }\n          }, null);\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @param {module:ol/VectorTile} tile Tile.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @return {module:ol/transform~Transform} transform Transform.\n   * @private\n   */\n  getReplayTransform_(tile, frameState) {\n    const layer = this.getLayer();\n    const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n    const tileGrid = source.getTileGrid();\n    const tileCoord = tile.tileCoord;\n    const tileResolution = tileGrid.getResolution(tileCoord[0]);\n    const viewState = frameState.viewState;\n    const pixelRatio = frameState.pixelRatio;\n    const renderResolution = viewState.resolution / pixelRatio;\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    const center = viewState.center;\n    const origin = getTopLeft(tileExtent);\n    const size = frameState.size;\n    const offsetX = Math.round(pixelRatio * size[0] / 2);\n    const offsetY = Math.round(pixelRatio * size[1] / 2);\n    return composeTransform(this.tmpTransform_,\n      offsetX, offsetY,\n      tileResolution / renderResolution, tileResolution / renderResolution,\n      viewState.rotation,\n      (origin[0] - center[0]) / tileResolution,\n      (center[1] - origin[1]) / tileResolution);\n  }\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   */\n  handleFontsChanged_(event) {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {module:ol/events/Event} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  postCompose(context, frameState, layerState) {\n    const layer = this.getLayer();\n    const renderMode = layer.getRenderMode();\n    if (renderMode != VectorTileRenderType.IMAGE) {\n      const declutterReplays = layer.getDeclutter() ? {} : null;\n      const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n      const replayTypes = VECTOR_REPLAYS[renderMode];\n      const pixelRatio = frameState.pixelRatio;\n      const rotation = frameState.viewState.rotation;\n      const size = frameState.size;\n      let offsetX, offsetY;\n      if (rotation) {\n        offsetX = Math.round(pixelRatio * size[0] / 2);\n        offsetY = Math.round(pixelRatio * size[1] / 2);\n        rotateAtOffset(context, -rotation, offsetX, offsetY);\n      }\n      if (declutterReplays) {\n        this.declutterTree_.clear();\n      }\n      const tiles = this.renderedTiles;\n      const tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n      const clips = [];\n      const zs = [];\n      for (let i = tiles.length - 1; i >= 0; --i) {\n        const tile = /** @type {module:ol/VectorImageTile} */ (tiles[i]);\n        if (tile.getState() == TileState.ABORT) {\n          continue;\n        }\n        const tileCoord = tile.tileCoord;\n        const worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tile.extent[0];\n        let transform = undefined;\n        for (let t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n          const sourceTile = tile.getTile(tile.tileKeys[t]);\n          if (sourceTile.getState() != TileState.LOADED) {\n            continue;\n          }\n          const replayGroup = sourceTile.getReplayGroup(layer, tileCoord.toString());\n          if (!replayGroup || !replayGroup.hasReplays(replayTypes)) {\n            // sourceTile was not yet loaded when this.createReplayGroup_() was\n            // called, or it has no replays of the types we want to render\n            continue;\n          }\n          if (!transform) {\n            transform = this.getTransform(frameState, worldOffset);\n          }\n          const currentZ = sourceTile.tileCoord[0];\n          const currentClip = replayGroup.getClipCoords(transform);\n          context.save();\n          context.globalAlpha = layerState.opacity;\n          // Create a clip mask for regions in this low resolution tile that are\n          // already filled by a higher resolution tile\n          for (let j = 0, jj = clips.length; j < jj; ++j) {\n            const clip = clips[j];\n            if (currentZ < zs[j]) {\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher resolution tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n          replayGroup.replay(context, transform, rotation, {}, replayTypes, declutterReplays);\n          context.restore();\n          clips.push(currentClip);\n          zs.push(currentZ);\n        }\n      }\n      if (declutterReplays) {\n        replayDeclutter(declutterReplays, context, rotation);\n      }\n      if (rotation) {\n        rotateAtOffset(context, rotation,\n          /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n      }\n    }\n    CanvasTileLayerRenderer.prototype.postCompose.apply(this, arguments);\n  }\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {(module:ol/style/Style|Array.<module:ol/style/Style>)} styles The style or array of styles.\n   * @param {module:ol/render/canvas/ReplayGroup} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(feature, squaredTolerance, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i], squaredTolerance,\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles, squaredTolerance,\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  }\n\n  /**\n   * @param {module:ol/VectorImageTile} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @private\n   */\n  renderTileImage_(tile, pixelRatio, projection) {\n    const layer = this.getLayer();\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const replays = IMAGE_REPLAYS[layer.getRenderMode()];\n    if (replays && replayState.renderedTileRevision !== revision) {\n      replayState.renderedTileRevision = revision;\n      const tileCoord = tile.wrappedTileCoord;\n      const z = tileCoord[0];\n      const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n      const tileGrid = source.getTileGridForProjection(projection);\n      const resolution = tileGrid.getResolution(z);\n      const context = tile.getContext(layer);\n      const size = source.getTilePixelSize(z, pixelRatio, projection);\n      context.canvas.width = size[0];\n      context.canvas.height = size[1];\n      const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n      for (let i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n        const sourceTile = tile.getTile(tile.tileKeys[i]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        const pixelScale = pixelRatio / resolution;\n        const transform = resetTransform(this.tmpTransform_);\n        scaleTransform(transform, pixelScale, -pixelScale);\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n        const replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n        replayGroup.replay(context, transform, 0, {}, replays);\n      }\n    }\n  }\n}\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/VectorTileLayer} The layer renderer.\n */\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorTileLayerRenderer(/** @type {module:ol/layer/VectorTile} */ (layer));\n};\n\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control/util.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport CanvasImageLayerRenderer from './renderer/canvas/ImageLayer.js';\nimport CanvasMapRenderer from './renderer/canvas/Map.js';\nimport CanvasTileLayerRenderer from './renderer/canvas/TileLayer.js';\nimport CanvasVectorLayerRenderer from './renderer/canvas/VectorLayer.js';\nimport CanvasVectorTileLayerRenderer from './renderer/canvas/VectorTileLayer.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nclass Map extends PluggableMap {\n\n  /**\n   * @param {module:ol/PluggableMap~MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions();\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    const renderer = new CanvasMapRenderer(this);\n    renderer.registerLayerRenderers([\n      CanvasImageLayerRenderer,\n      CanvasTileLayerRenderer,\n      CanvasVectorLayerRenderer,\n      CanvasVectorTileLayerRenderer\n    ]);\n    return renderer;\n  }\n}\n\n\nexport default Map;\n","/**\n * @module ol/control/FullScreen\n */\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @return {string} Change type.\n */\nconst getChangeType = (function() {\n  let changeType;\n  return function() {\n    if (!changeType) {\n      const body = document.body;\n      if (body.webkitRequestFullscreen) {\n        changeType = 'webkitfullscreenchange';\n      } else if (body.mozRequestFullScreen) {\n        changeType = 'mozfullscreenchange';\n      } else if (body.msRequestFullscreen) {\n        changeType = 'MSFullscreenChange';\n      } else if (body.requestFullscreen) {\n        changeType = 'fullscreenchange';\n      }\n    }\n    return changeType;\n  };\n})();\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|HTMLElement} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](http://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @api\n */\nclass FullScreen extends Control {\n\n  /**\n   * @param {module:ol/control/FullScreen~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ = options.className !== undefined ? options.className :\n      'ol-full-screen';\n\n    const label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.labelNode_ = typeof label === 'string' ?\n      document.createTextNode(label) : label;\n\n    const labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.labelActiveNode_ = typeof labelActive === 'string' ?\n      document.createTextNode(labelActive) : labelActive;\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n    const button = document.createElement('button');\n    button.className = this.cssClassName_ + '-' + isFullScreen();\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.labelNode_);\n\n    listen(button, EventType.CLICK,\n      this.handleClick_, this);\n\n    const cssClasses = this.cssClassName_ + ' ' + CLASS_UNSELECTABLE +\n        ' ' + CLASS_CONTROL + ' ' +\n        (!isFullScreenSupported() ? CLASS_UNSUPPORTED : '');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreen_() {\n    if (!isFullScreenSupported()) {\n      return;\n    }\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    if (isFullScreen()) {\n      exitFullScreen();\n    } else {\n      let element;\n      if (this.source_) {\n        element = typeof this.source_ === 'string' ?\n          document.getElementById(this.source_) :\n          this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreenChange_() {\n    const button = this.element.firstElementChild;\n    const map = this.getMap();\n    if (isFullScreen()) {\n      button.className = this.cssClassName_ + '-true';\n      replaceNode(this.labelActiveNode_, this.labelNode_);\n    } else {\n      button.className = this.cssClassName_ + '-false';\n      replaceNode(this.labelNode_, this.labelActiveNode_);\n    }\n    if (map) {\n      map.updateSize();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      this.listenerKeys.push(listen(document,\n        getChangeType(),\n        this.handleFullScreenChange_, this)\n      );\n    }\n  }\n}\n\n\n/**\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported() {\n  const body = document.body;\n  return !!(\n    body.webkitRequestFullscreen ||\n    (body.mozRequestFullScreen && document.mozFullScreenEnabled) ||\n    (body.msRequestFullscreen && document.msFullscreenEnabled) ||\n    (body.requestFullscreen && document.fullscreenEnabled)\n  );\n}\n\n/**\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen() {\n  return !!(\n    document.webkitIsFullScreen || document.mozFullScreen ||\n    document.msFullscreenElement || document.fullscreenElement\n  );\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.msRequestFullscreen) {\n    element.msRequestFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element.mozRequestFullScreenWithKeys) {\n    element.mozRequestFullScreenWithKeys();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n */\nfunction exitFullScreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.msExitFullscreen) {\n    document.msExitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n\nexport default FullScreen;\n","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right'\n};\n","/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {removeNode, removeChildren, outerWidth, outerHeight} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {containsExtent} from './extent.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array.<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {module:ol/coordinate~Coordinate} [position] The overlay position\n * in map projection.\n * @property {module:ol/OverlayPositioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\n * calling `setPosition`, so that the overlay is entirely visible in the current\n * viewport.\n * @property {module:ol/Overlay~PanOptions} [autoPanAnimation] The\n * animation options used to pan the overlay into view. This animation is only\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\n * customize the animation.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning'\n};\n\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n\n  /**\n   * @param {module:ol/Overlay~Options} options Overlay options.\n   */\n  constructor(options) {\n\n    super();\n\n    /**\n     * @protected\n     * @type {module:ol/Overlay~Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst = options.insertFirst !== undefined ?\n      options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('DIV');\n    this.element.className = options.className !== undefined ?\n      options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\n\n    /**\n     * @protected\n     * @type {module:ol/Overlay~PanOptions}\n     */\n    this.autoPanAnimation = options.autoPanAnimation || /** @type {module:ol/Overlay~PanOptions} */ ({});\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.autoPanMargin = options.autoPanMargin !== undefined ?\n      options.autoPanMargin : 20;\n\n    /**\n     * @protected\n     * @type {{bottom_: string,\n     *         left_: string,\n     *         right_: string,\n     *         top_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      bottom_: '',\n      left_: '',\n      right_: '',\n      top_: '',\n      visible: true\n    };\n\n    /**\n     * @protected\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    listen(\n      this, getChangeEventType(Property.ELEMENT),\n      this.handleElementChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.MAP),\n      this.handleMapChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.OFFSET),\n      this.handleOffsetChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITION),\n      this.handlePositionChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITIONING),\n      this.handlePositioningChanged, this);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning !== undefined ?\n      /** @type {module:ol/OverlayPositioning} */ (options.positioning) :\n      OverlayPositioning.TOP_LEFT);\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {module:ol/PluggableMap|undefined} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return (\n      /** @type {module:ol/PluggableMap|undefined} */ (this.get(Property.MAP))\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array.<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array.<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {module:ol/coordinate~Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return (\n      /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(Property.POSITION))\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {module:ol/OverlayPositioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return (\n      /** @type {module:ol/OverlayPositioning} */ (this.get(Property.POSITIONING))\n    );\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(map,\n        MapEventType.POSTRENDER, this.render, this);\n      this.updatePixelPosition();\n      const container = this.stopEvent ?\n        map.getOverlayContainerStopEvent() : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    if (this.get(Property.POSITION) && this.autoPan) {\n      this.panIntoView();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {module:ol/PluggableMap|undefined} map The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array.<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {module:ol/coordinate~Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @protected\n   */\n  panIntoView() {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement()) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\n\n    const margin = this.autoPanMargin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - margin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + margin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - margin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + margin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {module:ol/coordinate~Coordinate} */ (map.getView().getCenter());\n        const centerPx = map.getPixelFromCoordinate(center);\n        const newCenterPx = [\n          centerPx[0] + delta[0],\n          centerPx[1] + delta[1]\n        ];\n\n        map.getView().animate({\n          center: map.getCoordinateFromPixel(newCenterPx),\n          duration: this.autoPanAnimation.duration,\n          easing: this.autoPanAnimation.easing\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement|undefined} element The element.\n   * @param {module:ol/size~Size|undefined} size The size of the element.\n   * @return {module:ol/extent~Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [\n      offsetX,\n      offsetY,\n      offsetX + size[0],\n      offsetY + size[1]\n    ];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {module:ol/OverlayPositioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {module:ol/pixel~Pixel} pixel The pixel location.\n   * @param {module:ol/size~Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    let offsetX = offset[0];\n    let offsetY = offset[1];\n    if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n        positioning == OverlayPositioning.CENTER_RIGHT ||\n        positioning == OverlayPositioning.TOP_RIGHT) {\n      if (this.rendered.left_ !== '') {\n        this.rendered.left_ = style.left = '';\n      }\n      const right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\n      if (this.rendered.right_ != right) {\n        this.rendered.right_ = style.right = right;\n      }\n    } else {\n      if (this.rendered.right_ !== '') {\n        this.rendered.right_ = style.right = '';\n      }\n      if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.TOP_CENTER) {\n        offsetX -= this.element.offsetWidth / 2;\n      }\n      const left = Math.round(pixel[0] + offsetX) + 'px';\n      if (this.rendered.left_ != left) {\n        this.rendered.left_ = style.left = left;\n      }\n    }\n    if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n        positioning == OverlayPositioning.BOTTOM_CENTER ||\n        positioning == OverlayPositioning.BOTTOM_RIGHT) {\n      if (this.rendered.top_ !== '') {\n        this.rendered.top_ = style.top = '';\n      }\n      const bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\n      if (this.rendered.bottom_ != bottom) {\n        this.rendered.bottom_ = style.bottom = bottom;\n      }\n    } else {\n      if (this.rendered.bottom_ !== '') {\n        this.rendered.bottom_ = style.bottom = '';\n      }\n      if (positioning == OverlayPositioning.CENTER_LEFT ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.CENTER_RIGHT) {\n        offsetY -= this.element.offsetHeight / 2;\n      }\n      const top = Math.round(pixel[1] + offsetY) + 'px';\n      if (this.rendered.top_ != top) {\n        this.rendered.top_ = style.top = top;\n      }\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {module:ol/Overlay~Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\n\nexport default Overlay;\n","/**\n * @module ol/VectorTile\n */\nimport {getUid} from './util.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nconst DEFAULT_EXTENT = [0, 0, 4096, 4096];\n\n\n/**\n * @typedef {function(new: module:ol/VectorTile, module:ol/tilecoord~TileCoord,\n * module:ol/TileState, string, ?string, module:ol/Tile~LoadFunction)} TileClass\n * @api\n */\n\nclass VectorTile extends Tile {\n\n  /**\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @param {module:ol/TileState} state State.\n   * @param {string} src Data source url.\n   * @param {module:ol/format/Feature} format Feature format.\n   * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n   * @param {module:ol/Tile~Options=} opt_options Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, opt_options) {\n\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @type {number}\n     */\n    this.consumers = 0;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/format/Feature}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array.<module:ol/Feature>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/featureloader~FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Data projection\n     * @private\n     * @type {module:ol/proj/Projection}\n     */\n    this.projection_ = null;\n\n    /**\n     * @private\n     * @type {Object.<string, module:ol/render/ReplayGroup>}\n     */\n    this.replayGroups_ = {};\n\n    /**\n     * @private\n     * @type {module:ol/Tile~LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    this.features_ = null;\n    this.replayGroups_ = {};\n    this.state = TileState.ABORT;\n    this.changed();\n    super.disposeInternal();\n  }\n\n  /**\n   * Gets the extent of the vector tile.\n   * @return {module:ol/extent~Extent} The extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_ || DEFAULT_EXTENT;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {module:ol/format/Feature} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the projection returned\n   * by {@link module:ol/VectorTile~VectorTile#getProjection}.\n   * @return {Array.<module:ol/Feature|module:ol/render/Feature>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getKey() {\n    return this.url_;\n  }\n\n  /**\n   * Get the feature projection of features returned by\n   * {@link module:ol/VectorTile~VectorTile#getFeatures}.\n   * @return {module:ol/proj/Projection} Feature projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @param {string} key Key.\n   * @return {module:ol/render/ReplayGroup} Replay group.\n   */\n  getReplayGroup(layer, key) {\n    return this.replayGroups_[getUid(layer) + ',' + key];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      this.loader_(null, NaN, null);\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array.<module:ol/Feature>} features The loaded features.\n   * @param {module:ol/proj/Projection} dataProjection Data projection.\n   * @param {module:ol/extent~Extent} extent Extent.\n   */\n  onLoad(features, dataProjection, extent) {\n    this.setProjection(dataProjection);\n    this.setFeatures(features);\n    this.setExtent(extent);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s\n   * `tileLoadFunction`. Sets the extent of the vector tile. This is only required\n   * for tiles in projections with `tile-pixels` as units. The extent should be\n   * set to `[0, 0, tilePixelSize, tilePixelSize]`, where `tilePixelSize` is\n   * calculated by multiplying the tile size with the tile pixel ratio. For\n   * sources using {@link module:ol/format/MVT~MVT} as feature format, the\n   * {@link module:ol/format/MVT~MVT#getLastExtent} method will return the correct\n   * extent. The default is `[0, 0, 4096, 4096]`.\n   * @param {module:ol/extent~Extent} extent The extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array.<module:ol/Feature>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the projection of the features that were added with\n   * {@link module:ol/VectorTile~VectorTile#setFeatures}.\n   * @param {module:ol/proj/Projection} projection Feature projection.\n   * @api\n   */\n  setProjection(projection) {\n    this.projection_ = projection;\n  }\n\n  /**\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @param {string} key Key.\n   * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n   */\n  setReplayGroup(layer, key, replayGroup) {\n    this.replayGroups_[getUid(layer) + ',' + key] = replayGroup;\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {module:ol/featureloader~FeatureLoader} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","/**\n * @module ol/control/OverviewMap\n */\nimport Collection from '../Collection.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport OverlayPositioning from '../OverlayPositioning.js';\nimport ViewProperty from '../ViewProperty.js';\nimport Control from '../control/Control.js';\nimport {rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen, listenOnce, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight, scaleFromCenter} from '../extent.js';\n\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nconst MAX_RATIO = 0.75;\n\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nconst MIN_RATIO = 0.1;\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='«'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='»'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array.<module:ol/layer/Layer>|module:ol/Collection.<module:ol/layer/Layer>} [layers]\n * Layers for the overview map. If not set, then all main map layers are used\n * instead.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {module:ol/View} [view] Custom view for the overview map. If not provided,\n * a default view with an EPSG:3857 projection will be used.\n */\n\n\n/**\n * Create a new control with a map acting as an overview map for an other\n * defined map.\n *\n * @api\n */\nclass OverviewMap extends Control {\n\n  /**\n   * @param {module:ol/control/OverviewMap~Options=} opt_options OverviewMap options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className = options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    const tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    const collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00AB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : '\\u00BB';\n\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK,\n      this.handleClick_, this);\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('DIV');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * @type {module:ol/Map}\n     * @private\n     */\n    this.ovmap_ = new Map({\n      controls: new Collection(),\n      interactions: new Collection(),\n      view: options.view\n    });\n    const ovmap = this.ovmap_;\n\n    if (options.layers) {\n      options.layers.forEach(\n        /**\n         * @param {module:ol/layer/Layer} layer Layer.\n         */\n        (function(layer) {\n          ovmap.addLayer(layer);\n        }).bind(this));\n    }\n\n    const box = document.createElement('DIV');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {module:ol/Overlay}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: OverlayPositioning.BOTTOM_LEFT,\n      element: box\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    const scope = this;\n\n    const overlay = this.boxOverlay_;\n    const overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    const computeDesiredMousePosition = function(mousePosition) {\n      return {\n        clientX: mousePosition.clientX - (overlayBox.offsetWidth / 2),\n        clientY: mousePosition.clientY + (overlayBox.offsetHeight / 2)\n      };\n    };\n\n    const move = function(event) {\n      const coordinates = ovmap.getEventCoordinate(computeDesiredMousePosition(event));\n\n      overlay.setPosition(coordinates);\n    };\n\n    const endMoving = function(event) {\n      const coordinates = ovmap.getEventCoordinate(event);\n\n      scope.getMap().getView().setCenter(coordinates);\n\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', endMoving);\n    };\n\n    /* Binding */\n\n    overlayBox.addEventListener('mousedown', function() {\n      window.addEventListener('mousemove', move);\n      window.addEventListener('mouseup', endMoving);\n    });\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      const oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    super.setMap(map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(listen(\n        map, ObjectEventType.PROPERTYCHANGE,\n        this.handleMapPropertyChange_, this));\n\n      // TODO: to really support map switching, this would need to be reworked\n      if (this.ovmap_.getLayers().getLength() === 0) {\n        this.ovmap_.setLayerGroup(map.getLayerGroup());\n      }\n\n      const view = map.getView();\n      if (view) {\n        this.bindView_(view);\n        if (view.isDef()) {\n          this.ovmap_.updateSize();\n          this.resetExtent_();\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {module:ol/Object~ObjectEvent} event The propertychange event.\n   * @private\n   */\n  handleMapPropertyChange_(event) {\n    if (event.key === MapProperty.VIEW) {\n      const oldView = /** @type {module:ol/View} */ (event.oldValue);\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      const newView = this.getMap().getView();\n      this.bindView_(newView);\n    }\n  }\n\n  /**\n   * Register listeners for view property changes.\n   * @param {module:ol/View} view The view.\n   * @private\n   */\n  bindView_(view) {\n    listen(view,\n      getChangeEventType(ViewProperty.ROTATION),\n      this.handleRotationChanged_, this);\n  }\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {module:ol/View} view The view.\n   * @private\n   */\n  unbindView_(view) {\n    unlisten(view,\n      getChangeEventType(ViewProperty.ROTATION),\n      this.handleRotationChanged_, this);\n  }\n\n  /**\n   * Handle rotation changes to the main map.\n   * TODO: This should rotate the extent rectrangle instead of the\n   * overview map's view.\n   * @private\n   */\n  handleRotationChanged_() {\n    this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n  }\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  validateExtent_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {module:ol/size~Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtent(mapSize);\n\n    const ovmapSize = /** @type {module:ol/size~Size} */ (ovmap.getSize());\n\n    const ovview = ovmap.getView();\n    const ovextent = ovview.calculateExtent(ovmapSize);\n\n    const topLeftPixel =\n        ovmap.getPixelFromCoordinate(getTopLeft(extent));\n    const bottomRightPixel =\n        ovmap.getPixelFromCoordinate(getBottomRight(extent));\n\n    const boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    const boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    const ovmapWidth = ovmapSize[0];\n    const ovmapHeight = ovmapSize[1];\n\n    if (boxWidth < ovmapWidth * MIN_RATIO ||\n        boxHeight < ovmapHeight * MIN_RATIO ||\n        boxWidth > ovmapWidth * MAX_RATIO ||\n        boxHeight > ovmapHeight * MAX_RATIO) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  }\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  resetExtent_() {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const mapSize = /** @type {module:ol/size~Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtent(mapSize);\n\n    const ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    const steps = Math.log(\n      MAX_RATIO / MIN_RATIO) / Math.LN2;\n    const ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fit(extent);\n  }\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  recenter_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    ovview.setCenter(view.getCenter());\n  }\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  updateBox_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {module:ol/size~Size} */ (map.getSize());\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    const rotation = view.getRotation();\n\n    const overlay = this.boxOverlay_;\n    const box = this.boxOverlay_.getElement();\n    const extent = view.calculateExtent(mapSize);\n    const ovresolution = ovview.getResolution();\n    const bottomLeft = getBottomLeft(extent);\n    const topRight = getTopRight(extent);\n\n    // set position using bottom left coordinates\n    const rotateBottomLeft = this.calculateCoordinateRotate_(rotation, bottomLeft);\n    overlay.setPosition(rotateBottomLeft);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = Math.abs((bottomLeft[0] - topRight[0]) / ovresolution) + 'px';\n      box.style.height = Math.abs((topRight[1] - bottomLeft[1]) / ovresolution) + 'px';\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @return {module:ol/coordinate~Coordinate|undefined} Coordinate for rotation and center anchor.\n   * @private\n   */\n  calculateCoordinateRotate_(rotation, coordinate) {\n    let coordinateRotate;\n\n    const map = this.getMap();\n    const view = map.getView();\n\n    const currentCenter = view.getCenter();\n\n    if (currentCenter) {\n      coordinateRotate = [\n        coordinate[0] - currentCenter[0],\n        coordinate[1] - currentCenter[1]\n      ];\n      rotateCoordinate(coordinateRotate, rotation);\n      addCoordinate(coordinateRotate, currentCenter);\n    }\n    return coordinateRotate;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    const ovmap = this.ovmap_;\n    if (!this.collapsed_ && !ovmap.isRendered()) {\n      ovmap.updateSize();\n      this.resetExtent_();\n      listenOnce(ovmap, MapEventType.POSTRENDER,\n        function(event) {\n          this.updateBox_();\n        },\n        this);\n    }\n  }\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Return the overview map.\n   * @return {module:ol/PluggableMap} Overview map.\n   * @api\n   */\n  getOverviewMap() {\n    return this.ovmap_;\n  }\n}\n\n\n/**\n * Update the overview map element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/OverviewMap}\n * @api\n */\nexport function render(mapEvent) {\n  this.validateExtent_();\n  this.updateBox_();\n}\n\n\nexport default OverviewMap;\n","/**\n * @module ol/control/ScaleLine\n */\nimport {getChangeEventType} from '../Object.js';\nimport {assert} from '../asserts.js';\nimport Control from '../control/Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {listen} from '../events.js';\nimport {getPointResolution, METERS_PER_UNIT} from '../proj.js';\nimport ProjUnits from '../proj/Units.js';\n\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport const Units = {\n  DEGREES: 'degrees',\n  IMPERIAL: 'imperial',\n  NAUTICAL: 'nautical',\n  METRIC: 'metric',\n  US: 'us'\n};\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {module:ol/control/ScaleLine~Units|string} [units='metric'] Units.\n */\n\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n *\n * @api\n */\nclass ScaleLine extends Control {\n\n  /**\n   * @param {module:ol/control/ScaleLine~Options=} opt_options Scale line options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    const className = options.className !== undefined ? options.className : 'ol-scale-line';\n\n    super({\n      element: document.createElement('DIV'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('DIV');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?module:ol/View~State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    listen(\n      this, getChangeEventType(UNITS_PROP),\n      this.handleUnitsChanged_, this);\n\n    this.setUnits(/** @type {module:ol/control/ScaleLine~Units} */ (options.units) ||\n        Units.METRIC);\n\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {module:ol/control/ScaleLine~Units|undefined} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return (\n      /** @type {module:ol/control/ScaleLine~Units|undefined} */ (this.get(UNITS_PROP))\n    );\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {module:ol/control/ScaleLine~Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits = units == Units.DEGREES ?\n      ProjUnits.DEGREES :\n      ProjUnits.METERS;\n    let pointResolution =\n        getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n    if (projection.getUnits() != ProjUnits.DEGREES && projection.getMetersPerUnit()\n      && pointResolutionUnits == ProjUnits.METERS) {\n      pointResolution *= projection.getMetersPerUnit();\n    }\n\n    let nominalCount = this.minWidth_ * pointResolution;\n    let suffix = '';\n    if (units == Units.DEGREES) {\n      const metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n      if (projection.getUnits() == ProjUnits.DEGREES) {\n        nominalCount *= metersPerDegree;\n      } else {\n        pointResolution /= metersPerDegree;\n      }\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == Units.IMPERIAL) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == Units.NAUTICAL) {\n      pointResolution /= 1852;\n      suffix = 'nm';\n    } else if (units == Units.METRIC) {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == Units.US) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    let i = 3 * Math.floor(\n      Math.log(this.minWidth_ * pointResolution) / Math.log(10));\n    let count, width;\n    while (true) {\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] *\n          Math.pow(10, Math.floor(i / 3));\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      } else if (width >= this.minWidth_) {\n        break;\n      }\n      ++i;\n    }\n\n    const html = count + ' ' + suffix;\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n  }\n}\n\n\n/**\n * Update the scale line element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/ScaleLine}\n * @api\n */\nexport function render(mapEvent) {\n  const frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.viewState_ = null;\n  } else {\n    this.viewState_ = frameState.viewState;\n  }\n  this.updateElement_();\n}\n\n\nexport default ScaleLine;\n","/**\n * @module ol/control/ZoomSlider\n */\nimport ViewHint from '../ViewHint.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {clamp} from '../math.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport PointerEventHandler from '../pointer/PointerEventHandler.js';\n\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nconst Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n */\n\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nclass ZoomSlider extends Control {\n\n  /**\n   * @param {module:ol/control/ZoomSlider~Options=} opt_options Zoom slider options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render || render\n    });\n\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    this.currentResolution_ = undefined;\n\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    this.direction_ = Direction.VERTICAL;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.heightLimit_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.widthLimit_ = 0;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.previousX_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.previousY_;\n\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {module:ol/size~Size}\n     * @private\n     */\n    this.thumbSize_ = null;\n\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    this.sliderInitialized_ = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    const className = options.className !== undefined ? options.className : 'ol-zoomslider';\n    const thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    const containerElement = this.element;\n    containerElement.className = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n    /**\n     * @type {module:ol/pointer/PointerEventHandler}\n     * @private\n     */\n    this.dragger_ = new PointerEventHandler(containerElement);\n\n    listen(this.dragger_, PointerEventType.POINTERDOWN,\n      this.handleDraggerStart_, this);\n    listen(this.dragger_, PointerEventType.POINTERMOVE,\n      this.handleDraggerDrag_, this);\n    listen(this.dragger_, PointerEventType.POINTERUP,\n      this.handleDraggerEnd_, this);\n\n    listen(containerElement, EventType.CLICK, this.handleContainerClick_, this);\n    listen(thumbElement, EventType.CLICK, stopPropagation);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    this.dragger_.dispose();\n    super.disposeInternal();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      map.render();\n    }\n  }\n\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @private\n   */\n  initSlider_() {\n    const container = this.element;\n    const containerSize = {\n      width: container.offsetWidth, height: container.offsetHeight\n    };\n\n    const thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n    const computedStyle = getComputedStyle(thumb);\n    const thumbWidth = thumb.offsetWidth +\n        parseFloat(computedStyle['marginRight']) +\n        parseFloat(computedStyle['marginLeft']);\n    const thumbHeight = thumb.offsetHeight +\n        parseFloat(computedStyle['marginTop']) +\n        parseFloat(computedStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerSize.width > containerSize.height) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerSize.width - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerSize.height - thumbHeight;\n    }\n    this.sliderInitialized_ = true;\n  }\n\n  /**\n   * @param {MouseEvent} event The browser event to handle.\n   * @private\n   */\n  handleContainerClick_(event) {\n    const view = this.getMap().getView();\n\n    const relativePosition = this.getRelativePosition_(\n      event.offsetX - this.thumbSize_[0] / 2,\n      event.offsetY - this.thumbSize_[1] / 2);\n\n    const resolution = this.getResolutionForPosition_(relativePosition);\n\n    view.animate({\n      resolution: view.constrainResolution(resolution),\n      duration: this.duration_,\n      easing: easeOut\n    });\n  }\n\n  /**\n   * Handle dragger start events.\n   * @param {module:ol/pointer/PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerStart_(event) {\n    if (!this.dragging_ && event.originalEvent.target === this.element.firstElementChild) {\n      this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n      this.previousX_ = event.clientX;\n      this.previousY_ = event.clientY;\n      this.dragging_ = true;\n    }\n  }\n\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {module:ol/pointer/PointerEvent|Event} event The drag event.\n   * @private\n   */\n  handleDraggerDrag_(event) {\n    if (this.dragging_) {\n      const element = /** @type {HTMLElement} */ (this.element.firstElementChild);\n      const deltaX = event.clientX - this.previousX_ + parseInt(element.style.left, 10);\n      const deltaY = event.clientY - this.previousY_ + parseInt(element.style.top, 10);\n      const relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ = this.getResolutionForPosition_(relativePosition);\n      this.getMap().getView().setResolution(this.currentResolution_);\n      this.setThumbPosition_(this.currentResolution_);\n      this.previousX_ = event.clientX;\n      this.previousY_ = event.clientY;\n    }\n  }\n\n  /**\n   * Handle dragger end events.\n   * @param {module:ol/pointer/PointerEvent|Event} event The drag event.\n   * @private\n   */\n  handleDraggerEnd_(event) {\n    if (this.dragging_) {\n      const view = this.getMap().getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n\n      view.animate({\n        resolution: view.constrainResolution(this.currentResolution_),\n        duration: this.duration_,\n        easing: easeOut\n      });\n\n      this.dragging_ = false;\n      this.previousX_ = undefined;\n      this.previousY_ = undefined;\n    }\n  }\n\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  setThumbPosition_(res) {\n    const position = this.getPositionForResolution_(res);\n    const thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  }\n\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  getRelativePosition_(x, y) {\n    let amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  }\n\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  getResolutionForPosition_(position) {\n    const fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  }\n\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  getPositionForResolution_(res) {\n    const fn = this.getMap().getView().getValueForResolutionFunction();\n    return 1 - fn(res);\n  }\n}\n\n\n/**\n * Update the zoomslider element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/ZoomSlider}\n * @api\n */\nexport function render(mapEvent) {\n  if (!mapEvent.frameState) {\n    return;\n  }\n  if (!this.sliderInitialized_) {\n    this.initSlider_();\n  }\n  const res = mapEvent.frameState.viewState.resolution;\n  if (res !== this.currentResolution_) {\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\n\nexport default ZoomSlider;\n","/**\n * @module ol/control/ZoomToExtent\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {module:ol/extent~Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nclass ZoomToExtent extends Control {\n\n  /**\n   * @param {module:ol/control/ZoomToExtent~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    /**\n     * @type {module:ol/extent~Extent}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    const className = options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    const label = options.label !== undefined ? options.label : 'E';\n    const tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label\n    );\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  }\n\n  /**\n   * @protected\n   */\n  handleZoomToExtent() {\n    const map = this.getMap();\n    const view = map.getView();\n    const extent = !this.extent ? view.getProjection().getExtent() : this.extent;\n    view.fit(extent);\n  }\n}\n\nexport default ZoomToExtent;\n","/**\n * @module ol/webgl/Shader\n */\nimport {FALSE} from '../functions.js';\n\n/**\n * @abstract\n */\nclass WebGLShader {\n\n  /**\n   * @param {string} source Source.\n   */\n  constructor(source) {\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.source_ = source;\n\n  }\n\n  /**\n   * @abstract\n   * @return {number} Type.\n   */\n  getType() {}\n\n  /**\n   * @return {string} Source.\n   */\n  getSource() {\n    return this.source_;\n  }\n}\n\n\n/**\n * @return {boolean} Is animated?\n */\nWebGLShader.prototype.isAnimated = FALSE;\nexport default WebGLShader;\n","/**\n * @module ol/webgl/Fragment\n */\n\nimport {FRAGMENT_SHADER} from '../webgl.js';\nimport WebGLShader from '../webgl/Shader.js';\n\nclass WebGLFragment extends WebGLShader {\n\n  /**\n   * @param {string} source Source.\n   */\n  constructor(source) {\n    super(source);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getType() {\n    return FRAGMENT_SHADER;\n  }\n}\n\n\nexport default WebGLFragment;\n","/**\n * @module ol/webgl/Vertex\n */\n\nimport {VERTEX_SHADER} from '../webgl.js';\nimport WebGLShader from '../webgl/Shader.js';\n\nclass WebGLVertex extends WebGLShader {\n\n  /**\n   * @param {string} source Source.\n   */\n  constructor(source) {\n    super(source);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getType() {\n    return VERTEX_SHADER;\n  }\n}\n\n\nexport default WebGLVertex;\n","/**\n * @module ol/render/webgl/circlereplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport const fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_center;\\nvarying vec2 v_offset;\\nvarying float v_halfWidth;\\nvarying float v_pixelRatio;\\n\\n\\n\\nuniform float u_opacity;\\nuniform vec4 u_fillColor;\\nuniform vec4 u_strokeColor;\\nuniform vec2 u_size;\\n\\nvoid main(void) {\\n  vec2 windowCenter = vec2((v_center.x + 1.0) / 2.0 * u_size.x * v_pixelRatio,\\n      (v_center.y + 1.0) / 2.0 * u_size.y * v_pixelRatio);\\n  vec2 windowOffset = vec2((v_offset.x + 1.0) / 2.0 * u_size.x * v_pixelRatio,\\n      (v_offset.y + 1.0) / 2.0 * u_size.y * v_pixelRatio);\\n  float radius = length(windowCenter - windowOffset);\\n  float dist = length(windowCenter - gl_FragCoord.xy);\\n  if (dist > radius + v_halfWidth) {\\n    if (u_strokeColor.a == 0.0) {\\n      gl_FragColor = u_fillColor;\\n    } else {\\n      gl_FragColor = u_strokeColor;\\n    }\\n    gl_FragColor.a = gl_FragColor.a - (dist - (radius + v_halfWidth));\\n  } else if (u_fillColor.a == 0.0) {\\n    // Hooray, no fill, just stroke. We can use real antialiasing.\\n    gl_FragColor = u_strokeColor;\\n    if (dist < radius - v_halfWidth) {\\n      gl_FragColor.a = gl_FragColor.a - (radius - v_halfWidth - dist);\\n    }\\n  } else {\\n    gl_FragColor = u_fillColor;\\n    float strokeDist = radius - v_halfWidth;\\n    float antialias = 2.0 * v_pixelRatio;\\n    if (dist > strokeDist) {\\n      gl_FragColor = u_strokeColor;\\n    } else if (dist >= strokeDist - antialias) {\\n      float step = smoothstep(strokeDist - antialias, strokeDist, dist);\\n      gl_FragColor = mix(u_fillColor, u_strokeColor, step);\\n    }\\n  }\\n  gl_FragColor.a = gl_FragColor.a * u_opacity;\\n  if (gl_FragColor.a <= 0.0) {\\n    discard;\\n  }\\n}\\n' :\n  'precision mediump float;varying vec2 a;varying vec2 b;varying float c;varying float d;uniform float m;uniform vec4 n;uniform vec4 o;uniform vec2 p;void main(void){vec2 windowCenter=vec2((a.x+1.0)/2.0*p.x*d,(a.y+1.0)/2.0*p.y*d);vec2 windowOffset=vec2((b.x+1.0)/2.0*p.x*d,(b.y+1.0)/2.0*p.y*d);float radius=length(windowCenter-windowOffset);float dist=length(windowCenter-gl_FragCoord.xy);if(dist>radius+c){if(o.a==0.0){gl_FragColor=n;}else{gl_FragColor=o;}gl_FragColor.a=gl_FragColor.a-(dist-(radius+c));}else if(n.a==0.0){gl_FragColor=o;if(dist<radius-c){gl_FragColor.a=gl_FragColor.a-(radius-c-dist);}} else{gl_FragColor=n;float strokeDist=radius-c;float antialias=2.0*d;if(dist>strokeDist){gl_FragColor=o;}else if(dist>=strokeDist-antialias){float step=smoothstep(strokeDist-antialias,strokeDist,dist);gl_FragColor=mix(n,o,step);}} gl_FragColor.a=gl_FragColor.a*m;if(gl_FragColor.a<=0.0){discard;}}');\n\nexport const vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_center;\\nvarying vec2 v_offset;\\nvarying float v_halfWidth;\\nvarying float v_pixelRatio;\\n\\n\\nattribute vec2 a_position;\\nattribute float a_instruction;\\nattribute float a_radius;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\nuniform float u_lineWidth;\\nuniform float u_pixelRatio;\\n\\nvoid main(void) {\\n  mat4 offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  v_center = vec4(u_projectionMatrix * vec4(a_position, 0.0, 1.0)).xy;\\n  v_pixelRatio = u_pixelRatio;\\n  float lineWidth = u_lineWidth * u_pixelRatio;\\n  v_halfWidth = lineWidth / 2.0;\\n  if (lineWidth == 0.0) {\\n    lineWidth = 2.0 * u_pixelRatio;\\n  }\\n  vec2 offset;\\n  // Radius with anitaliasing (roughly).\\n  float radius = a_radius + 3.0 * u_pixelRatio;\\n  // Until we get gl_VertexID in WebGL, we store an instruction.\\n  if (a_instruction == 0.0) {\\n    // Offsetting the edges of the triangle by lineWidth / 2 is necessary, however\\n    // we should also leave some space for the antialiasing, thus we offset by lineWidth.\\n    offset = vec2(-1.0, 1.0);\\n  } else if (a_instruction == 1.0) {\\n    offset = vec2(-1.0, -1.0);\\n  } else if (a_instruction == 2.0) {\\n    offset = vec2(1.0, -1.0);\\n  } else {\\n    offset = vec2(1.0, 1.0);\\n  }\\n\\n  gl_Position = u_projectionMatrix * vec4(a_position + offset * radius, 0.0, 1.0) +\\n      offsetMatrix * vec4(offset * lineWidth, 0.0, 0.0);\\n  v_offset = vec4(u_projectionMatrix * vec4(a_position.x + a_radius, a_position.y,\\n      0.0, 1.0)).xy;\\n\\n  if (distance(v_center, v_offset) > 20000.0) {\\n    gl_Position = vec4(v_center, 0.0, 1.0);\\n  }\\n}\\n\\n\\n' :\n  'varying vec2 a;varying vec2 b;varying float c;varying float d;attribute vec2 e;attribute float f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;uniform float k;uniform float l;void main(void){mat4 offsetMatrix=i*j;a=vec4(h*vec4(e,0.0,1.0)).xy;d=l;float lineWidth=k*l;c=lineWidth/2.0;if(lineWidth==0.0){lineWidth=2.0*l;}vec2 offset;float radius=g+3.0*l;if(f==0.0){offset=vec2(-1.0,1.0);}else if(f==1.0){offset=vec2(-1.0,-1.0);}else if(f==2.0){offset=vec2(1.0,-1.0);}else{offset=vec2(1.0,1.0);}gl_Position=h*vec4(e+offset*radius,0.0,1.0)+offsetMatrix*vec4(offset*lineWidth,0.0,0.0);b=vec4(h*vec4(e.x+g,e.y,0.0,1.0)).xy;if(distance(a,b)>20000.0){gl_Position=vec4(a,0.0,1.0);}}');\n","/**\n * @module ol/render/webgl/circlereplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\nclass Locations {\n\n  /**\n   * @param {WebGLRenderingContext} gl GL.\n   * @param {WebGLProgram} program Program.\n   */\n  constructor(gl, program) {\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_projectionMatrix = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_offsetScaleMatrix = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_offsetRotateMatrix = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_lineWidth = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_lineWidth' : 'k');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_pixelRatio = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_pixelRatio' : 'l');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_opacity = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_opacity' : 'm');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_fillColor = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_fillColor' : 'n');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_strokeColor = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_strokeColor' : 'o');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_size = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_size' : 'p');\n\n    /**\n     * @type {number}\n     */\n    this.a_position = gl.getAttribLocation(\n      program, DEBUG_WEBGL ? 'a_position' : 'e');\n\n    /**\n     * @type {number}\n     */\n    this.a_instruction = gl.getAttribLocation(\n      program, DEBUG_WEBGL ? 'a_instruction' : 'f');\n\n    /**\n     * @type {number}\n     */\n    this.a_radius = gl.getAttribLocation(\n      program, DEBUG_WEBGL ? 'a_radius' : 'g');\n\n  }\n\n}\n\nexport default Locations;\n","/**\n * @module ol/vec/mat4\n */\n\n\n/**\n * @return {Array.<number>} 4x4 matrix representing a 3D identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n\n/**\n * @param {Array.<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {module:ol/transform~Transform} transform Transformation matrix.\n * @return {Array.<number>} 2D transformation matrix as flattened 4x4 matrix.\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n","/**\n * @module ol/render/webgl/Replay\n */\n\nimport {getCenter} from '../../extent.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\nimport {create, fromTransform} from '../../vec/mat4.js';\nimport {ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, TRIANGLES,\n  UNSIGNED_INT, UNSIGNED_SHORT} from '../../webgl.js';\n\nclass WebGLReplay extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {module:ol/extent~Extent} maxExtent Max extent.\n   */\n  constructor(tolerance, maxExtent) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {module:ol/extent~Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * The origin of the coordinate system for the point coordinates sent to\n     * the GPU. To eliminate jitter caused by precision problems in the GPU\n     * we use the \"Rendering Relative to Eye\" technique described in the \"3D\n     * Engine Design for Virtual Globes\" book.\n     * @protected\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.origin = getCenter(maxExtent);\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.projectionMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.offsetRotateMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.offsetScaleMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @protected\n     * @type {Array.<number>}\n     */\n    this.indices = [];\n\n    /**\n     * @protected\n     * @type {?module:ol/webgl/Buffer}\n     */\n    this.indicesBuffer = null;\n\n    /**\n     * Start index per feature (the index).\n     * @protected\n     * @type {Array.<number>}\n     */\n    this.startIndices = [];\n\n    /**\n     * Start index per feature (the feature).\n     * @protected\n     * @type {Array.<module:ol/Feature|module:ol/render/Feature>}\n     */\n    this.startIndicesFeature = [];\n\n    /**\n     * @protected\n     * @type {Array.<number>}\n     */\n    this.vertices = [];\n\n    /**\n     * @protected\n     * @type {?module:ol/webgl/Buffer}\n     */\n    this.verticesBuffer = null;\n\n    /**\n     * Optional parameter for PolygonReplay instances.\n     * @protected\n     * @type {module:ol/render/webgl/LineStringReplay|undefined}\n     */\n    this.lineStringReplay = undefined;\n\n  }\n\n  /**\n   * @abstract\n   * @param {module:ol/webgl/Context} context WebGL context.\n   * @return {function()} Delete resources function.\n   */\n  getDeleteResourcesFunction(context) {}\n\n  /**\n   * @abstract\n   * @param {module:ol/webgl/Context} context Context.\n   */\n  finish(context) {}\n\n  /**\n   * @abstract\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {module:ol/render/webgl/circlereplay/defaultshader/Locations|\n     module:ol/render/webgl/linestringreplay/defaultshader/Locations|\n     module:ol/render/webgl/polygonreplay/defaultshader/Locations|\n     module:ol/render/webgl/texturereplay/defaultshader/Locations} Locations.\n   */\n  setUpProgram(gl, context, size, pixelRatio) {}\n\n  /**\n   * @abstract\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/render/webgl/circlereplay/defaultshader/Locations|\n     module:ol/render/webgl/linestringreplay/defaultshader/Locations|\n     module:ol/render/webgl/polygonreplay/defaultshader/Locations|\n     module:ol/render/webgl/texturereplay/defaultshader/Locations} locations Locations.\n   */\n  shutDownProgram(gl, locations) {}\n\n  /**\n   * @abstract\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {boolean} hitDetection Hit detection mode.\n   */\n  drawReplay(gl, context, skippedFeaturesHash, hitDetection) {}\n\n  /**\n   * @abstract\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n   * @param {module:ol/extent~Extent=} opt_hitExtent Hit extent: Only features intersecting this extent are checked.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  drawHitDetectionReplayOneByOne(gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {}\n\n  /**\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n   * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n   * @param {module:ol/extent~Extent=} opt_hitExtent Hit extent: Only features intersecting this extent are checked.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  drawHitDetectionReplay(gl, context, skippedFeaturesHash, featureCallback, oneByOne, opt_hitExtent) {\n    if (!oneByOne) {\n      // draw all hit-detection features in \"once\" (by texture group)\n      return this.drawHitDetectionReplayAll(gl, context,\n        skippedFeaturesHash, featureCallback);\n    } else {\n      // draw hit-detection features one by one\n      return this.drawHitDetectionReplayOneByOne(gl, context,\n        skippedFeaturesHash, featureCallback, opt_hitExtent);\n    }\n  }\n\n  /**\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  drawHitDetectionReplayAll(gl, context, skippedFeaturesHash, featureCallback) {\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    this.drawReplay(gl, context, skippedFeaturesHash, true);\n\n    const result = featureCallback(null);\n    if (result) {\n      return result;\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {module:ol/coordinate~Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n   * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n   * @param {module:ol/extent~Extent=} opt_hitExtent Hit extent: Only features intersecting this extent are checked.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  replay(\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash,\n    featureCallback,\n    oneByOne,\n    opt_hitExtent\n  ) {\n    const gl = context.getGL();\n    let tmpStencil, tmpStencilFunc, tmpStencilMaskVal, tmpStencilRef, tmpStencilMask,\n        tmpStencilOpFail, tmpStencilOpPass, tmpStencilOpZFail;\n\n    if (this.lineStringReplay) {\n      tmpStencil = gl.isEnabled(gl.STENCIL_TEST);\n      tmpStencilFunc = gl.getParameter(gl.STENCIL_FUNC);\n      tmpStencilMaskVal = gl.getParameter(gl.STENCIL_VALUE_MASK);\n      tmpStencilRef = gl.getParameter(gl.STENCIL_REF);\n      tmpStencilMask = gl.getParameter(gl.STENCIL_WRITEMASK);\n      tmpStencilOpFail = gl.getParameter(gl.STENCIL_FAIL);\n      tmpStencilOpPass = gl.getParameter(gl.STENCIL_PASS_DEPTH_PASS);\n      tmpStencilOpZFail = gl.getParameter(gl.STENCIL_PASS_DEPTH_FAIL);\n\n      gl.enable(gl.STENCIL_TEST);\n      gl.clear(gl.STENCIL_BUFFER_BIT);\n      gl.stencilMask(255);\n      gl.stencilFunc(gl.ALWAYS, 1, 255);\n      gl.stencilOp(gl.KEEP, gl.KEEP, gl.REPLACE);\n\n      this.lineStringReplay.replay(context,\n        center, resolution, rotation, size, pixelRatio,\n        opacity, skippedFeaturesHash,\n        featureCallback, oneByOne, opt_hitExtent);\n\n      gl.stencilMask(0);\n      gl.stencilFunc(gl.NOTEQUAL, 1, 255);\n    }\n\n    context.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n\n    context.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n\n    const locations = this.setUpProgram(gl, context, size, pixelRatio);\n\n    // set the \"uniform\" values\n    const projectionMatrix = resetTransform(this.projectionMatrix_);\n    scaleTransform(projectionMatrix, 2 / (resolution * size[0]), 2 / (resolution * size[1]));\n    rotateTransform(projectionMatrix, -rotation);\n    translateTransform(projectionMatrix, -(center[0] - this.origin[0]), -(center[1] - this.origin[1]));\n\n    const offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n    scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n\n    const offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n    if (rotation !== 0) {\n      rotateTransform(offsetRotateMatrix, -rotation);\n    }\n\n    gl.uniformMatrix4fv(locations.u_projectionMatrix, false,\n      fromTransform(this.tmpMat4_, projectionMatrix));\n    gl.uniformMatrix4fv(locations.u_offsetScaleMatrix, false,\n      fromTransform(this.tmpMat4_, offsetScaleMatrix));\n    gl.uniformMatrix4fv(locations.u_offsetRotateMatrix, false,\n      fromTransform(this.tmpMat4_, offsetRotateMatrix));\n    gl.uniform1f(locations.u_opacity, opacity);\n\n    // draw!\n    let result;\n    if (featureCallback === undefined) {\n      this.drawReplay(gl, context, skippedFeaturesHash, false);\n    } else {\n      // draw feature by feature for the hit-detection\n      result = this.drawHitDetectionReplay(gl, context, skippedFeaturesHash,\n        featureCallback, oneByOne, opt_hitExtent);\n    }\n\n    // disable the vertex attrib arrays\n    this.shutDownProgram(gl, locations);\n\n    if (this.lineStringReplay) {\n      if (!tmpStencil) {\n        gl.disable(gl.STENCIL_TEST);\n      }\n      gl.clear(gl.STENCIL_BUFFER_BIT);\n      gl.stencilFunc(/** @type {number} */ (tmpStencilFunc),\n        /** @type {number} */ (tmpStencilRef), /** @type {number} */ (tmpStencilMaskVal));\n      gl.stencilMask(/** @type {number} */ (tmpStencilMask));\n      gl.stencilOp(/** @type {number} */ (tmpStencilOpFail),\n        /** @type {number} */ (tmpStencilOpZFail), /** @type {number} */ (tmpStencilOpPass));\n    }\n\n    return result;\n  }\n\n  /**\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   */\n  drawElements(gl, context, start, end) {\n    const elementType = context.hasOESElementIndexUint ?\n      UNSIGNED_INT : UNSIGNED_SHORT;\n    const elementSize = context.hasOESElementIndexUint ? 4 : 2;\n\n    const numItems = end - start;\n    const offsetInBytes = start * elementSize;\n    gl.drawElements(TRIANGLES, numItems, elementType, offsetInBytes);\n  }\n}\n\n\nexport default WebGLReplay;\n","/**\n * @module ol/render/webgl\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport const DEFAULT_FONT = '10px sans-serif';\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport const DEFAULT_FILLSTYLE = [0.0, 0.0, 0.0, 1.0];\n\n\n/**\n * @const\n * @type {string}\n */\nexport const DEFAULT_LINECAP = 'round';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nexport const DEFAULT_LINEDASH = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEFAULT_LINEDASHOFFSET = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport const DEFAULT_LINEJOIN = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEFAULT_MITERLIMIT = 10;\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport const DEFAULT_STROKESTYLE = [0.0, 0.0, 0.0, 1.0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEFAULT_TEXTALIGN = 0.5;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEFAULT_TEXTBASELINE = 0.5;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEFAULT_LINEWIDTH = 1;\n\n/**\n * @const\n * @type {number}\n */\nexport const EPSILON = Number.EPSILON || 2.220446049250313e-16;\n\n/**\n * Calculates the orientation of a triangle based on the determinant method.\n * @param {number} x1 First X coordinate.\n * @param {number} y1 First Y coordinate.\n * @param {number} x2 Second X coordinate.\n * @param {number} y2 Second Y coordinate.\n * @param {number} x3 Third X coordinate.\n * @param {number} y3 Third Y coordinate.\n * @return {boolean|undefined} Triangle is clockwise.\n */\nexport const triangleIsCounterClockwise = function(x1, y1, x2, y2, x3, y3) {\n  const area = (x2 - x1) * (y3 - y1) - (x3 - x1) * (y2 - y1);\n  return (area <= EPSILON && area >= -EPSILON) ?\n    undefined : area > 0;\n};\n\n","/**\n * @module ol/webgl/Buffer\n */\nimport {STATIC_DRAW, STREAM_DRAW, DYNAMIC_DRAW} from '../webgl.js';\n\n/**\n * @enum {number}\n */\nconst BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW\n};\n\n\nclass WebGLBuffer {\n\n  /**\n   * @param {Array.<number>=} opt_arr Array.\n   * @param {number=} opt_usage Usage.\n   */\n  constructor(opt_arr, opt_usage) {\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.arr_ = opt_arr !== undefined ? opt_arr : [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.usage_ = opt_usage !== undefined ? opt_usage : BufferUsage.STATIC_DRAW;\n\n  }\n\n  /**\n   * @return {Array.<number>} Array.\n   */\n  getArray() {\n    return this.arr_;\n  }\n\n  /**\n   * @return {number} Usage.\n   */\n  getUsage() {\n    return this.usage_;\n  }\n}\n\nexport default WebGLBuffer;\n","/**\n * @module ol/render/webgl/CircleReplay\n */\nimport {getUid} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {intersects} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {translate} from '../../geom/flat/transform.js';\nimport {fragment, vertex} from '../webgl/circlereplay/defaultshader.js';\nimport Locations from '../webgl/circlereplay/defaultshader/Locations.js';\nimport WebGLReplay from '../webgl/Replay.js';\nimport {DEFAULT_LINEDASH, DEFAULT_LINEDASHOFFSET, DEFAULT_STROKESTYLE,\n  DEFAULT_FILLSTYLE, DEFAULT_LINEWIDTH} from '../webgl.js';\nimport {FLOAT} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\nclass WebGLCircleReplay extends WebGLReplay {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {module:ol/extent~Extent} maxExtent Max extent.\n   */\n  constructor(tolerance, maxExtent) {\n    super(tolerance, maxExtent);\n\n    /**\n     * @private\n     * @type {module:ol/render/webgl/circlereplay/defaultshader/Locations}\n     */\n    this.defaultLocations_ = null;\n\n    /**\n     * @private\n     * @type {Array.<Array.<Array.<number>|number>>}\n     */\n    this.styles_ = [];\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.styleIndices_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.radius_ = 0;\n\n    /**\n     * @private\n     * @type {{fillColor: (Array.<number>|null),\n     *         strokeColor: (Array.<number>|null),\n     *         lineDash: Array.<number>,\n     *         lineDashOffset: (number|undefined),\n     *         lineWidth: (number|undefined),\n     *         changed: boolean}|null}\n     */\n    this.state_ = {\n      fillColor: null,\n      strokeColor: null,\n      lineDash: null,\n      lineDashOffset: undefined,\n      lineWidth: undefined,\n      changed: false\n    };\n\n  }\n\n  /**\n   * @private\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   */\n  drawCoordinates_(flatCoordinates, offset, end, stride) {\n    let numVertices = this.vertices.length;\n    let numIndices = this.indices.length;\n    let n = numVertices / 4;\n    let i, ii;\n    for (i = offset, ii = end; i < ii; i += stride) {\n      this.vertices[numVertices++] = flatCoordinates[i];\n      this.vertices[numVertices++] = flatCoordinates[i + 1];\n      this.vertices[numVertices++] = 0;\n      this.vertices[numVertices++] = this.radius_;\n\n      this.vertices[numVertices++] = flatCoordinates[i];\n      this.vertices[numVertices++] = flatCoordinates[i + 1];\n      this.vertices[numVertices++] = 1;\n      this.vertices[numVertices++] = this.radius_;\n\n      this.vertices[numVertices++] = flatCoordinates[i];\n      this.vertices[numVertices++] = flatCoordinates[i + 1];\n      this.vertices[numVertices++] = 2;\n      this.vertices[numVertices++] = this.radius_;\n\n      this.vertices[numVertices++] = flatCoordinates[i];\n      this.vertices[numVertices++] = flatCoordinates[i + 1];\n      this.vertices[numVertices++] = 3;\n      this.vertices[numVertices++] = this.radius_;\n\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = n + 1;\n      this.indices[numIndices++] = n + 2;\n\n      this.indices[numIndices++] = n + 2;\n      this.indices[numIndices++] = n + 3;\n      this.indices[numIndices++] = n;\n\n      n += 4;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawCircle(circleGeometry, feature) {\n    const radius = circleGeometry.getRadius();\n    const stride = circleGeometry.getStride();\n    if (radius) {\n      this.startIndices.push(this.indices.length);\n      this.startIndicesFeature.push(feature);\n      if (this.state_.changed) {\n        this.styleIndices_.push(this.indices.length);\n        this.state_.changed = false;\n      }\n\n      this.radius_ = radius;\n      let flatCoordinates = circleGeometry.getFlatCoordinates();\n      flatCoordinates = translate(flatCoordinates, 0, 2,\n        stride, -this.origin[0], -this.origin[1]);\n      this.drawCoordinates_(flatCoordinates, 0, 2, stride);\n    } else {\n      if (this.state_.changed) {\n        this.styles_.pop();\n        if (this.styles_.length) {\n          const lastState = this.styles_[this.styles_.length - 1];\n          this.state_.fillColor = /** @type {Array.<number>} */ (lastState[0]);\n          this.state_.strokeColor = /** @type {Array.<number>} */ (lastState[1]);\n          this.state_.lineWidth = /** @type {number} */ (lastState[2]);\n          this.state_.changed = false;\n        }\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   **/\n  finish(context) {\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(this.indices);\n\n    this.startIndices.push(this.indices.length);\n\n    //Clean up, if there is nothing to draw\n    if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n      this.styles_ = [];\n    }\n\n    this.vertices = null;\n    this.indices = null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getDeleteResourcesFunction(context) {\n    // We only delete our stuff here. The shaders and the program may\n    // be used by other CircleReplay instances (for other layers). And\n    // they will be deleted when disposing of the module:ol/webgl/Context~WebGLContext\n    // object.\n    const verticesBuffer = this.verticesBuffer;\n    const indicesBuffer = this.indicesBuffer;\n    return function() {\n      context.deleteBuffer(verticesBuffer);\n      context.deleteBuffer(indicesBuffer);\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setUpProgram(gl, context, size, pixelRatio) {\n    // get the program\n    const program = context.getProgram(fragment, vertex);\n\n    // get the locations\n    let locations;\n    if (!this.defaultLocations_) {\n      locations = new Locations(gl, program);\n      this.defaultLocations_ = locations;\n    } else {\n      locations = this.defaultLocations_;\n    }\n\n    context.useProgram(program);\n\n    // enable the vertex attrib arrays\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n      false, 16, 0);\n\n    gl.enableVertexAttribArray(locations.a_instruction);\n    gl.vertexAttribPointer(locations.a_instruction, 1, FLOAT,\n      false, 16, 8);\n\n    gl.enableVertexAttribArray(locations.a_radius);\n    gl.vertexAttribPointer(locations.a_radius, 1, FLOAT,\n      false, 16, 12);\n\n    // Enable renderer specific uniforms.\n    gl.uniform2fv(locations.u_size, size);\n    gl.uniform1f(locations.u_pixelRatio, pixelRatio);\n\n    return locations;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  shutDownProgram(gl, locations) {\n    gl.disableVertexAttribArray(locations.a_position);\n    gl.disableVertexAttribArray(locations.a_instruction);\n    gl.disableVertexAttribArray(locations.a_radius);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawReplay(gl, context, skippedFeaturesHash, hitDetection) {\n    if (!isEmpty(skippedFeaturesHash)) {\n      this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n    } else {\n      //Draw by style groups to minimize drawElements() calls.\n      let i, start, end, nextStyle;\n      end = this.startIndices[this.startIndices.length - 1];\n      for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n        start = this.styleIndices_[i];\n        nextStyle = this.styles_[i];\n        this.setFillStyle_(gl, /** @type {Array.<number>} */ (nextStyle[0]));\n        this.setStrokeStyle_(gl, /** @type {Array.<number>} */ (nextStyle[1]),\n          /** @type {number} */ (nextStyle[2]));\n        this.drawElements(gl, context, start, end);\n        end = start;\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawHitDetectionReplayOneByOne(gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\n    let i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex;\n    featureIndex = this.startIndices.length - 2;\n    end = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this.styles_[i];\n      this.setFillStyle_(gl, /** @type {Array.<number>} */ (nextStyle[0]));\n      this.setStrokeStyle_(gl, /** @type {Array.<number>} */ (nextStyle[1]),\n        /** @type {number} */ (nextStyle[2]));\n      groupStart = this.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        start = this.startIndices[featureIndex];\n        feature = this.startIndicesFeature[featureIndex];\n        featureUid = getUid(feature).toString();\n\n        if (skippedFeaturesHash[featureUid] === undefined &&\n            feature.getGeometry() &&\n            (opt_hitExtent === undefined || intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n          this.drawElements(gl, context, start, end);\n\n          const result = featureCallback(feature);\n\n          if (result) {\n            return result;\n          }\n\n        }\n        featureIndex--;\n        end = start;\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object} skippedFeaturesHash Ids of features to skip.\n   */\n  drawReplaySkipping_(gl, context, skippedFeaturesHash) {\n    let i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex, featureStart;\n    featureIndex = this.startIndices.length - 2;\n    end = start = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this.styles_[i];\n      this.setFillStyle_(gl, /** @type {Array.<number>} */ (nextStyle[0]));\n      this.setStrokeStyle_(gl, /** @type {Array.<number>} */ (nextStyle[1]),\n        /** @type {number} */ (nextStyle[2]));\n      groupStart = this.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        featureStart = this.startIndices[featureIndex];\n        feature = this.startIndicesFeature[featureIndex];\n        featureUid = getUid(feature).toString();\n\n        if (skippedFeaturesHash[featureUid]) {\n          if (start !== end) {\n            this.drawElements(gl, context, start, end);\n          }\n          end = featureStart;\n        }\n        featureIndex--;\n        start = featureStart;\n      }\n      if (start !== end) {\n        this.drawElements(gl, context, start, end);\n      }\n      start = end = groupStart;\n    }\n  }\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {Array.<number>} color Color.\n   */\n  setFillStyle_(gl, color) {\n    gl.uniform4fv(this.defaultLocations_.u_fillColor, color);\n  }\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {Array.<number>} color Color.\n   * @param {number} lineWidth Line width.\n   */\n  setStrokeStyle_(gl, color, lineWidth) {\n    gl.uniform4fv(this.defaultLocations_.u_strokeColor, color);\n    gl.uniform1f(this.defaultLocations_.u_lineWidth, lineWidth);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    let strokeStyleColor, strokeStyleWidth;\n    if (strokeStyle) {\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      this.state_.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash : DEFAULT_LINEDASH;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      this.state_.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : DEFAULT_LINEDASHOFFSET;\n      strokeStyleColor = strokeStyle.getColor();\n      if (!(strokeStyleColor instanceof CanvasGradient) &&\n          !(strokeStyleColor instanceof CanvasPattern)) {\n        strokeStyleColor = asArray(strokeStyleColor).map(function(c, i) {\n          return i != 3 ? c / 255 : c;\n        }) || DEFAULT_STROKESTYLE;\n      } else {\n        strokeStyleColor = DEFAULT_STROKESTYLE;\n      }\n      strokeStyleWidth = strokeStyle.getWidth();\n      strokeStyleWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : DEFAULT_LINEWIDTH;\n    } else {\n      strokeStyleColor = [0, 0, 0, 0];\n      strokeStyleWidth = 0;\n    }\n    let fillStyleColor = fillStyle ? fillStyle.getColor() : [0, 0, 0, 0];\n    if (!(fillStyleColor instanceof CanvasGradient) &&\n        !(fillStyleColor instanceof CanvasPattern)) {\n      fillStyleColor = asArray(fillStyleColor).map(function(c, i) {\n        return i != 3 ? c / 255 : c;\n      }) || DEFAULT_FILLSTYLE;\n    } else {\n      fillStyleColor = DEFAULT_FILLSTYLE;\n    }\n    if (!this.state_.strokeColor || !equals(this.state_.strokeColor, strokeStyleColor) ||\n        !this.state_.fillColor || !equals(this.state_.fillColor, fillStyleColor) ||\n        this.state_.lineWidth !== strokeStyleWidth) {\n      this.state_.changed = true;\n      this.state_.fillColor = fillStyleColor;\n      this.state_.strokeColor = strokeStyleColor;\n      this.state_.lineWidth = strokeStyleWidth;\n      this.styles_.push([fillStyleColor, strokeStyleColor, strokeStyleWidth]);\n    }\n  }\n}\n\n\nexport default WebGLCircleReplay;\n","/**\n * @module ol/render/webgl/texturereplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport const fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\nvarying float v_opacity;\\n\\nuniform float u_opacity;\\nuniform sampler2D u_image;\\n\\nvoid main(void) {\\n  vec4 texColor = texture2D(u_image, v_texCoord);\\n  gl_FragColor.rgb = texColor.rgb;\\n  float alpha = texColor.a * v_opacity * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;varying vec2 a;varying float b;uniform float k;uniform sampler2D l;void main(void){vec4 texColor=texture2D(l,a);gl_FragColor.rgb=texColor.rgb;float alpha=texColor.a*b*k;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\nexport const vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\nvarying float v_opacity;\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\nattribute vec2 a_offsets;\\nattribute float a_opacity;\\nattribute float a_rotateWithView;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\n\\nvoid main(void) {\\n  mat4 offsetMatrix = u_offsetScaleMatrix;\\n  if (a_rotateWithView == 1.0) {\\n    offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  }\\n  vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\\n  v_texCoord = a_texCoord;\\n  v_opacity = a_opacity;\\n}\\n\\n\\n' :\n  'varying vec2 a;varying float b;attribute vec2 c;attribute vec2 d;attribute vec2 e;attribute float f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;void main(void){mat4 offsetMatrix=i;if(g==1.0){offsetMatrix=i*j;}vec4 offsets=offsetMatrix*vec4(e,0.0,0.0);gl_Position=h*vec4(c,0.0,1.0)+offsets;a=d;b=f;}');\n","/**\n * @module ol/render/webgl/texturereplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\nclass Locations {\n\n  /**\n   * @param {WebGLRenderingContext} gl GL.\n   * @param {WebGLProgram} program Program.\n   */\n  constructor(gl, program) {\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_projectionMatrix = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_offsetScaleMatrix = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_offsetRotateMatrix = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_opacity = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_opacity' : 'k');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_image = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_image' : 'l');\n\n    /**\n     * @type {number}\n     */\n    this.a_position = gl.getAttribLocation(\n      program, DEBUG_WEBGL ? 'a_position' : 'c');\n\n    /**\n     * @type {number}\n     */\n    this.a_texCoord = gl.getAttribLocation(\n      program, DEBUG_WEBGL ? 'a_texCoord' : 'd');\n\n    /**\n     * @type {number}\n     */\n    this.a_offsets = gl.getAttribLocation(\n      program, DEBUG_WEBGL ? 'a_offsets' : 'e');\n\n    /**\n     * @type {number}\n     */\n    this.a_opacity = gl.getAttribLocation(\n      program, DEBUG_WEBGL ? 'a_opacity' : 'f');\n\n    /**\n     * @type {number}\n     */\n    this.a_rotateWithView = gl.getAttribLocation(\n      program, DEBUG_WEBGL ? 'a_rotateWithView' : 'g');\n\n  }\n\n}\n\nexport default Locations;\n","/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored'\n};\n","/**\n * @module ol/webgl/Context\n */\nimport {getUid} from '../util.js';\nimport {EXTENSIONS as WEBGL_EXTENSIONS} from '../webgl.js';\nimport Disposable from '../Disposable.js';\nimport {includes} from '../array.js';\nimport {listen, unlistenAll} from '../events.js';\nimport {clear} from '../obj.js';\nimport {ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, TEXTURE_2D, TEXTURE_WRAP_S, TEXTURE_WRAP_T} from '../webgl.js';\nimport ContextEventType from '../webgl/ContextEventType.js';\n\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {module:ol/webgl/Buffer} buf\n * @property {WebGLBuffer} buffer\n */\n\n\n/**\n * @classdesc\n * A WebGL context for accessing low-level WebGL capabilities.\n */\nclass WebGLContext extends Disposable {\n\n  /**\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {WebGLRenderingContext} gl GL.\n   */\n  constructor(canvas, gl) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = gl;\n\n    /**\n     * @private\n     * @type {!Object.<string, module:ol/webgl/Context~BufferCacheEntry>}\n     */\n    this.bufferCache_ = {};\n\n    /**\n     * @private\n     * @type {!Object.<string, WebGLShader>}\n     */\n    this.shaderCache_ = {};\n\n    /**\n     * @private\n     * @type {!Object.<string, WebGLProgram>}\n     */\n    this.programCache_ = {};\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.currentProgram_ = null;\n\n    /**\n     * @private\n     * @type {WebGLFramebuffer}\n     */\n    this.hitDetectionFramebuffer_ = null;\n\n    /**\n     * @private\n     * @type {WebGLTexture}\n     */\n    this.hitDetectionTexture_ = null;\n\n    /**\n     * @private\n     * @type {WebGLRenderbuffer}\n     */\n    this.hitDetectionRenderbuffer_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.hasOESElementIndexUint = includes(WEBGL_EXTENSIONS, 'OES_element_index_uint');\n\n    // use the OES_element_index_uint extension if available\n    if (this.hasOESElementIndexUint) {\n      gl.getExtension('OES_element_index_uint');\n    }\n\n    listen(this.canvas_, ContextEventType.LOST,\n      this.handleWebGLContextLost, this);\n    listen(this.canvas_, ContextEventType.RESTORED,\n      this.handleWebGLContextRestored, this);\n\n  }\n\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * @param {number} target Target.\n   * @param {module:ol/webgl/Buffer} buf Buffer.\n   */\n  bindBuffer(target, buf) {\n    const gl = this.getGL();\n    const arr = buf.getArray();\n    const bufferKey = String(getUid(buf));\n    if (bufferKey in this.bufferCache_) {\n      const bufferCacheEntry = this.bufferCache_[bufferKey];\n      gl.bindBuffer(target, bufferCacheEntry.buffer);\n    } else {\n      const buffer = gl.createBuffer();\n      gl.bindBuffer(target, buffer);\n      let /** @type {ArrayBufferView} */ arrayBuffer;\n      if (target == ARRAY_BUFFER) {\n        arrayBuffer = new Float32Array(arr);\n      } else if (target == ELEMENT_ARRAY_BUFFER) {\n        arrayBuffer = this.hasOESElementIndexUint ?\n          new Uint32Array(arr) : new Uint16Array(arr);\n      }\n      gl.bufferData(target, arrayBuffer, buf.getUsage());\n      this.bufferCache_[bufferKey] = {\n        buf: buf,\n        buffer: buffer\n      };\n    }\n  }\n\n  /**\n   * @param {module:ol/webgl/Buffer} buf Buffer.\n   */\n  deleteBuffer(buf) {\n    const gl = this.getGL();\n    const bufferKey = String(getUid(buf));\n    const bufferCacheEntry = this.bufferCache_[bufferKey];\n    if (!gl.isContextLost()) {\n      gl.deleteBuffer(bufferCacheEntry.buffer);\n    }\n    delete this.bufferCache_[bufferKey];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    unlistenAll(this.canvas_);\n    const gl = this.getGL();\n    if (!gl.isContextLost()) {\n      for (const key in this.bufferCache_) {\n        gl.deleteBuffer(this.bufferCache_[key].buffer);\n      }\n      for (const key in this.programCache_) {\n        gl.deleteProgram(this.programCache_[key]);\n      }\n      for (const key in this.shaderCache_) {\n        gl.deleteShader(this.shaderCache_[key]);\n      }\n      // delete objects for hit-detection\n      gl.deleteFramebuffer(this.hitDetectionFramebuffer_);\n      gl.deleteRenderbuffer(this.hitDetectionRenderbuffer_);\n      gl.deleteTexture(this.hitDetectionTexture_);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getCanvas() {\n    return this.canvas_;\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   * @api\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Get the frame buffer for hit detection.\n   * @return {WebGLFramebuffer} The hit detection frame buffer.\n   */\n  getHitDetectionFramebuffer() {\n    if (!this.hitDetectionFramebuffer_) {\n      this.initHitDetectionFramebuffer_();\n    }\n    return this.hitDetectionFramebuffer_;\n  }\n\n  /**\n   * Get shader from the cache if it's in the cache. Otherwise, create\n   * the WebGL shader, compile it, and add entry to cache.\n   * @param {module:ol/webgl/Shader} shaderObject Shader object.\n   * @return {WebGLShader} Shader.\n   */\n  getShader(shaderObject) {\n    const shaderKey = String(getUid(shaderObject));\n    if (shaderKey in this.shaderCache_) {\n      return this.shaderCache_[shaderKey];\n    } else {\n      const gl = this.getGL();\n      const shader = gl.createShader(shaderObject.getType());\n      gl.shaderSource(shader, shaderObject.getSource());\n      gl.compileShader(shader);\n      this.shaderCache_[shaderKey] = shader;\n      return shader;\n    }\n  }\n\n  /**\n   * Get the program from the cache if it's in the cache. Otherwise create\n   * the WebGL program, attach the shaders to it, and add an entry to the\n   * cache.\n   * @param {module:ol/webgl/Fragment} fragmentShaderObject Fragment shader.\n   * @param {module:ol/webgl/Vertex} vertexShaderObject Vertex shader.\n   * @return {WebGLProgram} Program.\n   */\n  getProgram(fragmentShaderObject, vertexShaderObject) {\n    const programKey = getUid(fragmentShaderObject) + '/' + getUid(vertexShaderObject);\n    if (programKey in this.programCache_) {\n      return this.programCache_[programKey];\n    } else {\n      const gl = this.getGL();\n      const program = gl.createProgram();\n      gl.attachShader(program, this.getShader(fragmentShaderObject));\n      gl.attachShader(program, this.getShader(vertexShaderObject));\n      gl.linkProgram(program);\n      this.programCache_[programKey] = program;\n      return program;\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  handleWebGLContextLost() {\n    clear(this.bufferCache_);\n    clear(this.shaderCache_);\n    clear(this.programCache_);\n    this.currentProgram_ = null;\n    this.hitDetectionFramebuffer_ = null;\n    this.hitDetectionTexture_ = null;\n    this.hitDetectionRenderbuffer_ = null;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  handleWebGLContextRestored() {\n  }\n\n  /**\n   * Creates a 1x1 pixel framebuffer for the hit-detection.\n   * @private\n   */\n  initHitDetectionFramebuffer_() {\n    const gl = this.gl_;\n    const framebuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\n    const texture = createEmptyTexture(gl, 1, 1);\n    const renderbuffer = gl.createRenderbuffer();\n    gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\n    gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, 1, 1);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT,\n      gl.RENDERBUFFER, renderbuffer);\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n    this.hitDetectionFramebuffer_ = framebuffer;\n    this.hitDetectionTexture_ = texture;\n    this.hitDetectionRenderbuffer_ = renderbuffer;\n  }\n\n  /**\n   * Use a program.  If the program is already in use, this will return `false`.\n   * @param {WebGLProgram} program Program.\n   * @return {boolean} Changed.\n   * @api\n   */\n  useProgram(program) {\n    if (program == this.currentProgram_) {\n      return false;\n    } else {\n      const gl = this.getGL();\n      gl.useProgram(program);\n      this.currentProgram_ = program;\n      return true;\n    }\n  }\n}\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\nfunction createTextureInternal(gl, opt_wrapS, opt_wrapT) {\n  const texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\n  if (opt_wrapS !== undefined) {\n    gl.texParameteri(\n      TEXTURE_2D, TEXTURE_WRAP_S, opt_wrapS);\n  }\n  if (opt_wrapT !== undefined) {\n    gl.texParameteri(\n      TEXTURE_2D, TEXTURE_WRAP_T, opt_wrapT);\n  }\n\n  return texture;\n}\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {number} width Width.\n * @param {number} height Height.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\nexport function createEmptyTexture(gl, width, height, opt_wrapS, opt_wrapT) {\n  const texture = createTextureInternal(gl, opt_wrapS, opt_wrapT);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n  return texture;\n}\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\nexport function createTexture(gl, image, opt_wrapS, opt_wrapT) {\n  const texture = createTextureInternal(gl, opt_wrapS, opt_wrapT);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n  return texture;\n}\n\nexport default WebGLContext;\n","/**\n * @module ol/render/webgl/TextureReplay\n */\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {fragment, vertex} from '../webgl/texturereplay/defaultshader.js';\nimport Locations from '../webgl/texturereplay/defaultshader/Locations.js';\nimport WebGLReplay from '../webgl/Replay.js';\nimport {CLAMP_TO_EDGE, FLOAT, TEXTURE_2D} from '../../webgl.js';\nimport {createTexture} from '../../webgl/Context.js';\n\nclass WebGLTextureReplay extends WebGLReplay {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {module:ol/extent~Extent} maxExtent Max extent.\n   */\n  constructor(tolerance, maxExtent) {\n    super(tolerance, maxExtent);\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.anchorX = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.anchorY = undefined;\n\n    /**\n     * @type {Array.<number>}\n     * @protected\n     */\n    this.groupIndices = [];\n\n    /**\n     * @type {Array.<number>}\n     * @protected\n     */\n    this.hitDetectionGroupIndices = [];\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.height = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.imageHeight = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.imageWidth = undefined;\n\n    /**\n     * @protected\n     * @type {module:ol/render/webgl/texturereplay/defaultshader/Locations}\n     */\n    this.defaultLocations = null;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.opacity = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.originX = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.originY = undefined;\n\n    /**\n     * @protected\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView = undefined;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.rotation = undefined;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.scale = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.width = undefined;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getDeleteResourcesFunction(context) {\n    const verticesBuffer = this.verticesBuffer;\n    const indicesBuffer = this.indicesBuffer;\n    const textures = this.getTextures(true);\n    const gl = context.getGL();\n    return function() {\n      if (!gl.isContextLost()) {\n        let i, ii;\n        for (i = 0, ii = textures.length; i < ii; ++i) {\n          gl.deleteTexture(textures[i]);\n        }\n      }\n      context.deleteBuffer(verticesBuffer);\n      context.deleteBuffer(indicesBuffer);\n    };\n  }\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @return {number} My end.\n   * @protected\n   */\n  drawCoordinates(flatCoordinates, offset, end, stride) {\n    const anchorX = /** @type {number} */ (this.anchorX);\n    const anchorY = /** @type {number} */ (this.anchorY);\n    const height = /** @type {number} */ (this.height);\n    const imageHeight = /** @type {number} */ (this.imageHeight);\n    const imageWidth = /** @type {number} */ (this.imageWidth);\n    const opacity = /** @type {number} */ (this.opacity);\n    const originX = /** @type {number} */ (this.originX);\n    const originY = /** @type {number} */ (this.originY);\n    const rotateWithView = this.rotateWithView ? 1.0 : 0.0;\n    // this.rotation_ is anti-clockwise, but rotation is clockwise\n    const rotation = /** @type {number} */ (-this.rotation);\n    const scale = /** @type {number} */ (this.scale);\n    const width = /** @type {number} */ (this.width);\n    const cos = Math.cos(rotation);\n    const sin = Math.sin(rotation);\n    let numIndices = this.indices.length;\n    let numVertices = this.vertices.length;\n    let i, n, offsetX, offsetY, x, y;\n    for (i = offset; i < end; i += stride) {\n      x = flatCoordinates[i] - this.origin[0];\n      y = flatCoordinates[i + 1] - this.origin[1];\n\n      // There are 4 vertices per [x, y] point, one for each corner of the\n      // rectangle we're going to draw. We'd use 1 vertex per [x, y] point if\n      // WebGL supported Geometry Shaders (which can emit new vertices), but that\n      // is not currently the case.\n      //\n      // And each vertex includes 8 values: the x and y coordinates, the x and\n      // y offsets used to calculate the position of the corner, the u and\n      // v texture coordinates for the corner, the opacity, and whether the\n      // the image should be rotated with the view (rotateWithView).\n\n      n = numVertices / 8;\n\n      // bottom-left corner\n      offsetX = -scale * anchorX;\n      offsetY = -scale * (height - anchorY);\n      this.vertices[numVertices++] = x;\n      this.vertices[numVertices++] = y;\n      this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n      this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n      this.vertices[numVertices++] = originX / imageWidth;\n      this.vertices[numVertices++] = (originY + height) / imageHeight;\n      this.vertices[numVertices++] = opacity;\n      this.vertices[numVertices++] = rotateWithView;\n\n      // bottom-right corner\n      offsetX = scale * (width - anchorX);\n      offsetY = -scale * (height - anchorY);\n      this.vertices[numVertices++] = x;\n      this.vertices[numVertices++] = y;\n      this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n      this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n      this.vertices[numVertices++] = (originX + width) / imageWidth;\n      this.vertices[numVertices++] = (originY + height) / imageHeight;\n      this.vertices[numVertices++] = opacity;\n      this.vertices[numVertices++] = rotateWithView;\n\n      // top-right corner\n      offsetX = scale * (width - anchorX);\n      offsetY = scale * anchorY;\n      this.vertices[numVertices++] = x;\n      this.vertices[numVertices++] = y;\n      this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n      this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n      this.vertices[numVertices++] = (originX + width) / imageWidth;\n      this.vertices[numVertices++] = originY / imageHeight;\n      this.vertices[numVertices++] = opacity;\n      this.vertices[numVertices++] = rotateWithView;\n\n      // top-left corner\n      offsetX = -scale * anchorX;\n      offsetY = scale * anchorY;\n      this.vertices[numVertices++] = x;\n      this.vertices[numVertices++] = y;\n      this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n      this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n      this.vertices[numVertices++] = originX / imageWidth;\n      this.vertices[numVertices++] = originY / imageHeight;\n      this.vertices[numVertices++] = opacity;\n      this.vertices[numVertices++] = rotateWithView;\n\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = n + 1;\n      this.indices[numIndices++] = n + 2;\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = n + 2;\n      this.indices[numIndices++] = n + 3;\n    }\n\n    return numVertices;\n  }\n\n  /**\n   * @protected\n   * @param {Array.<WebGLTexture>} textures Textures.\n   * @param {Array.<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>} images Images.\n   * @param {!Object.<string, WebGLTexture>} texturePerImage Texture cache.\n   * @param {WebGLRenderingContext} gl Gl.\n   */\n  createTextures(textures, images, texturePerImage, gl) {\n    let texture, image, uid, i;\n    const ii = images.length;\n    for (i = 0; i < ii; ++i) {\n      image = images[i];\n\n      uid = getUid(image).toString();\n      if (uid in texturePerImage) {\n        texture = texturePerImage[uid];\n      } else {\n        texture = createTexture(\n          gl, image, CLAMP_TO_EDGE, CLAMP_TO_EDGE);\n        texturePerImage[uid] = texture;\n      }\n      textures[i] = texture;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setUpProgram(gl, context, size, pixelRatio) {\n    // get the program\n    const program = context.getProgram(fragment, vertex);\n\n    // get the locations\n    let locations;\n    if (!this.defaultLocations) {\n      locations = new Locations(gl, program);\n      this.defaultLocations = locations;\n    } else {\n      locations = this.defaultLocations;\n    }\n\n    // use the program (FIXME: use the return value)\n    context.useProgram(program);\n\n    // enable the vertex attrib arrays\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n      false, 32, 0);\n\n    gl.enableVertexAttribArray(locations.a_offsets);\n    gl.vertexAttribPointer(locations.a_offsets, 2, FLOAT,\n      false, 32, 8);\n\n    gl.enableVertexAttribArray(locations.a_texCoord);\n    gl.vertexAttribPointer(locations.a_texCoord, 2, FLOAT,\n      false, 32, 16);\n\n    gl.enableVertexAttribArray(locations.a_opacity);\n    gl.vertexAttribPointer(locations.a_opacity, 1, FLOAT,\n      false, 32, 24);\n\n    gl.enableVertexAttribArray(locations.a_rotateWithView);\n    gl.vertexAttribPointer(locations.a_rotateWithView, 1, FLOAT,\n      false, 32, 28);\n\n    return locations;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  shutDownProgram(gl, locations) {\n    gl.disableVertexAttribArray(locations.a_position);\n    gl.disableVertexAttribArray(locations.a_offsets);\n    gl.disableVertexAttribArray(locations.a_texCoord);\n    gl.disableVertexAttribArray(locations.a_opacity);\n    gl.disableVertexAttribArray(locations.a_rotateWithView);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawReplay(gl, context, skippedFeaturesHash, hitDetection) {\n    const textures = hitDetection ? this.getHitDetectionTextures() : this.getTextures();\n    const groupIndices = hitDetection ? this.hitDetectionGroupIndices : this.groupIndices;\n\n    if (!isEmpty(skippedFeaturesHash)) {\n      this.drawReplaySkipping(gl, context, skippedFeaturesHash, textures, groupIndices);\n    } else {\n      let i, ii, start;\n      for (i = 0, ii = textures.length, start = 0; i < ii; ++i) {\n        gl.bindTexture(TEXTURE_2D, textures[i]);\n        const end = groupIndices[i];\n        this.drawElements(gl, context, start, end);\n        start = end;\n      }\n    }\n  }\n\n  /**\n   * Draw the replay while paying attention to skipped features.\n   *\n   * This functions creates groups of features that can be drawn to together,\n   * so that the number of `drawElements` calls is minimized.\n   *\n   * For example given the following texture groups:\n   *\n   *    Group 1: A B C\n   *    Group 2: D [E] F G\n   *\n   * If feature E should be skipped, the following `drawElements` calls will be\n   * made:\n   *\n   *    drawElements with feature A, B and C\n   *    drawElements with feature D\n   *    drawElements with feature F and G\n   *\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n   *  to skip.\n   * @param {Array.<WebGLTexture>} textures Textures.\n   * @param {Array.<number>} groupIndices Texture group indices.\n   */\n  drawReplaySkipping(gl, context, skippedFeaturesHash, textures, groupIndices) {\n    let featureIndex = 0;\n\n    let i, ii;\n    for (i = 0, ii = textures.length; i < ii; ++i) {\n      gl.bindTexture(TEXTURE_2D, textures[i]);\n      const groupStart = (i > 0) ? groupIndices[i - 1] : 0;\n      const groupEnd = groupIndices[i];\n\n      let start = groupStart;\n      let end = groupStart;\n      while (featureIndex < this.startIndices.length &&\n          this.startIndices[featureIndex] <= groupEnd) {\n        const feature = this.startIndicesFeature[featureIndex];\n\n        const featureUid = getUid(feature).toString();\n        if (skippedFeaturesHash[featureUid] !== undefined) {\n          // feature should be skipped\n          if (start !== end) {\n            // draw the features so far\n            this.drawElements(gl, context, start, end);\n          }\n          // continue with the next feature\n          start = (featureIndex === this.startIndices.length - 1) ?\n            groupEnd : this.startIndices[featureIndex + 1];\n          end = start;\n        } else {\n          // the feature is not skipped, augment the end index\n          end = (featureIndex === this.startIndices.length - 1) ?\n            groupEnd : this.startIndices[featureIndex + 1];\n        }\n        featureIndex++;\n      }\n\n      if (start !== end) {\n        // draw the remaining features (in case there was no skipped feature\n        // in this texture group, all features of a group are drawn together)\n        this.drawElements(gl, context, start, end);\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawHitDetectionReplayOneByOne(gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\n    let i, groupStart, start, end, feature, featureUid;\n    let featureIndex = this.startIndices.length - 1;\n    const hitDetectionTextures = this.getHitDetectionTextures();\n    for (i = hitDetectionTextures.length - 1; i >= 0; --i) {\n      gl.bindTexture(TEXTURE_2D, hitDetectionTextures[i]);\n      groupStart = (i > 0) ? this.hitDetectionGroupIndices[i - 1] : 0;\n      end = this.hitDetectionGroupIndices[i];\n\n      // draw all features for this texture group\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        start = this.startIndices[featureIndex];\n        feature = this.startIndicesFeature[featureIndex];\n        featureUid = getUid(feature).toString();\n\n        if (skippedFeaturesHash[featureUid] === undefined &&\n            feature.getGeometry() &&\n            (opt_hitExtent === undefined || intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n          this.drawElements(gl, context, start, end);\n\n          const result = featureCallback(feature);\n          if (result) {\n            return result;\n          }\n        }\n\n        end = start;\n        featureIndex--;\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  finish(context) {\n    this.anchorX = undefined;\n    this.anchorY = undefined;\n    this.height = undefined;\n    this.imageHeight = undefined;\n    this.imageWidth = undefined;\n    this.indices = null;\n    this.opacity = undefined;\n    this.originX = undefined;\n    this.originY = undefined;\n    this.rotateWithView = undefined;\n    this.rotation = undefined;\n    this.scale = undefined;\n    this.vertices = null;\n    this.width = undefined;\n  }\n\n  /**\n   * @abstract\n   * @protected\n   * @param {boolean=} opt_all Return hit detection textures with regular ones.\n   * @returns {Array.<WebGLTexture>} Textures.\n   */\n  getTextures(opt_all) {}\n\n  /**\n   * @abstract\n   * @protected\n   * @returns {Array.<WebGLTexture>} Textures.\n   */\n  getHitDetectionTextures() {}\n}\n\n\nexport default WebGLTextureReplay;\n","/**\n * @module ol/render/webgl/ImageReplay\n */\nimport {getUid} from '../../util.js';\nimport WebGLTextureReplay from '../webgl/TextureReplay.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\nclass WebGLImageReplay extends WebGLTextureReplay {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {module:ol/extent~Extent} maxExtent Max extent.\n   */\n  constructor(tolerance, maxExtent) {\n    super(tolerance, maxExtent);\n\n    /**\n     * @type {Array.<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>}\n     * @protected\n     */\n    this.images_ = [];\n\n    /**\n     * @type {Array.<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>}\n     * @protected\n     */\n    this.hitDetectionImages_ = [];\n\n    /**\n     * @type {Array.<WebGLTexture>}\n     * @private\n     */\n    this.textures_ = [];\n\n    /**\n     * @type {Array.<WebGLTexture>}\n     * @private\n     */\n    this.hitDetectionTextures_ = [];\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    this.startIndices.push(this.indices.length);\n    this.startIndicesFeature.push(feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    this.drawCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawPoint(pointGeometry, feature) {\n    this.startIndices.push(this.indices.length);\n    this.startIndicesFeature.push(feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    this.drawCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  finish(context) {\n    const gl = context.getGL();\n\n    this.groupIndices.push(this.indices.length);\n    this.hitDetectionGroupIndices.push(this.indices.length);\n\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    const indices = this.indices;\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(indices);\n\n    // create textures\n    /** @type {Object.<string, WebGLTexture>} */\n    const texturePerImage = {};\n\n    this.createTextures(this.textures_, this.images_, texturePerImage, gl);\n\n    this.createTextures(this.hitDetectionTextures_, this.hitDetectionImages_,\n      texturePerImage, gl);\n\n    this.images_ = null;\n    this.hitDetectionImages_ = null;\n    WebGLTextureReplay.prototype.finish.call(this, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setImageStyle(imageStyle) {\n    const anchor = imageStyle.getAnchor();\n    const image = imageStyle.getImage(1);\n    const imageSize = imageStyle.getImageSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    const opacity = imageStyle.getOpacity();\n    const origin = imageStyle.getOrigin();\n    const rotateWithView = imageStyle.getRotateWithView();\n    const rotation = imageStyle.getRotation();\n    const size = imageStyle.getSize();\n    const scale = imageStyle.getScale();\n\n    let currentImage;\n    if (this.images_.length === 0) {\n      this.images_.push(image);\n    } else {\n      currentImage = this.images_[this.images_.length - 1];\n      if (getUid(currentImage) != getUid(image)) {\n        this.groupIndices.push(this.indices.length);\n        this.images_.push(image);\n      }\n    }\n\n    if (this.hitDetectionImages_.length === 0) {\n      this.hitDetectionImages_.push(hitDetectionImage);\n    } else {\n      currentImage =\n          this.hitDetectionImages_[this.hitDetectionImages_.length - 1];\n      if (getUid(currentImage) != getUid(hitDetectionImage)) {\n        this.hitDetectionGroupIndices.push(this.indices.length);\n        this.hitDetectionImages_.push(hitDetectionImage);\n      }\n    }\n\n    this.anchorX = anchor[0];\n    this.anchorY = anchor[1];\n    this.height = size[1];\n    this.imageHeight = imageSize[1];\n    this.imageWidth = imageSize[0];\n    this.opacity = opacity;\n    this.originX = origin[0];\n    this.originY = origin[1];\n    this.rotation = rotation;\n    this.rotateWithView = rotateWithView;\n    this.scale = scale;\n    this.width = size[0];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTextures(opt_all) {\n    return opt_all ? this.textures_.concat(this.hitDetectionTextures_) : this.textures_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getHitDetectionTextures() {\n    return this.hitDetectionTextures_;\n  }\n}\n\n\nexport default WebGLImageReplay;\n","/**\n * @module ol/geom/flat/topology\n */\nimport {linearRing as linearRingArea} from '../flat/area.js';\n\n/**\n * Check if the linestring is a boundary.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} The linestring is a boundary.\n */\nexport function lineStringIsClosed(flatCoordinates, offset, end, stride) {\n  const lastCoord = end - stride;\n  if (flatCoordinates[offset] === flatCoordinates[lastCoord] &&\n      flatCoordinates[offset + 1] === flatCoordinates[lastCoord + 1] && (end - offset) / stride > 3) {\n    return !!linearRingArea(flatCoordinates, offset, end, stride);\n  }\n  return false;\n}\n","/**\n * @module ol/render/webgl/linestringreplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport const fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying float v_round;\\nvarying vec2 v_roundVertex;\\nvarying float v_halfWidth;\\n\\n\\n\\nuniform float u_opacity;\\nuniform vec4 u_color;\\nuniform vec2 u_size;\\nuniform float u_pixelRatio;\\n\\nvoid main(void) {\\n  if (v_round > 0.0) {\\n    vec2 windowCoords = vec2((v_roundVertex.x + 1.0) / 2.0 * u_size.x * u_pixelRatio,\\n        (v_roundVertex.y + 1.0) / 2.0 * u_size.y * u_pixelRatio);\\n    if (length(windowCoords - gl_FragCoord.xy) > v_halfWidth * u_pixelRatio) {\\n      discard;\\n    }\\n  }\\n  gl_FragColor = u_color;\\n  float alpha = u_color.a * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;varying float a;varying vec2 aVertex;varying float c;uniform float m;uniform vec4 n;uniform vec2 o;uniform float p;void main(void){if(a>0.0){vec2 windowCoords=vec2((aVertex.x+1.0)/2.0*o.x*p,(aVertex.y+1.0)/2.0*o.y*p);if(length(windowCoords-gl_FragCoord.xy)>c*p){discard;}} gl_FragColor=n;float alpha=n.a*m;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\nexport const vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying float v_round;\\nvarying vec2 v_roundVertex;\\nvarying float v_halfWidth;\\n\\n\\nattribute vec2 a_lastPos;\\nattribute vec2 a_position;\\nattribute vec2 a_nextPos;\\nattribute float a_direction;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\nuniform float u_lineWidth;\\nuniform float u_miterLimit;\\n\\nbool nearlyEquals(in float value, in float ref) {\\n  float epsilon = 0.000000000001;\\n  return value >= ref - epsilon && value <= ref + epsilon;\\n}\\n\\nvoid alongNormal(out vec2 offset, in vec2 nextP, in float turnDir, in float direction) {\\n  vec2 dirVect = nextP - a_position;\\n  vec2 normal = normalize(vec2(-turnDir * dirVect.y, turnDir * dirVect.x));\\n  offset = u_lineWidth / 2.0 * normal * direction;\\n}\\n\\nvoid miterUp(out vec2 offset, out float round, in bool isRound, in float direction) {\\n  float halfWidth = u_lineWidth / 2.0;\\n  vec2 tangent = normalize(normalize(a_nextPos - a_position) + normalize(a_position - a_lastPos));\\n  vec2 normal = vec2(-tangent.y, tangent.x);\\n  vec2 dirVect = a_nextPos - a_position;\\n  vec2 tmpNormal = normalize(vec2(-dirVect.y, dirVect.x));\\n  float miterLength = abs(halfWidth / dot(normal, tmpNormal));\\n  offset = normal * direction * miterLength;\\n  round = 0.0;\\n  if (isRound) {\\n    round = 1.0;\\n  } else if (miterLength > u_miterLimit + u_lineWidth) {\\n    offset = halfWidth * tmpNormal * direction;\\n  }\\n}\\n\\nbool miterDown(out vec2 offset, in vec4 projPos, in mat4 offsetMatrix, in float direction) {\\n  bool degenerate = false;\\n  vec2 tangent = normalize(normalize(a_nextPos - a_position) + normalize(a_position - a_lastPos));\\n  vec2 normal = vec2(-tangent.y, tangent.x);\\n  vec2 dirVect = a_lastPos - a_position;\\n  vec2 tmpNormal = normalize(vec2(-dirVect.y, dirVect.x));\\n  vec2 longOffset, shortOffset, longVertex;\\n  vec4 shortProjVertex;\\n  float halfWidth = u_lineWidth / 2.0;\\n  if (length(a_nextPos - a_position) > length(a_lastPos - a_position)) {\\n    longOffset = tmpNormal * direction * halfWidth;\\n    shortOffset = normalize(vec2(dirVect.y, -dirVect.x)) * direction * halfWidth;\\n    longVertex = a_nextPos;\\n    shortProjVertex = u_projectionMatrix * vec4(a_lastPos, 0.0, 1.0);\\n  } else {\\n    shortOffset = tmpNormal * direction * halfWidth;\\n    longOffset = normalize(vec2(dirVect.y, -dirVect.x)) * direction * halfWidth;\\n    longVertex = a_lastPos;\\n    shortProjVertex = u_projectionMatrix * vec4(a_nextPos, 0.0, 1.0);\\n  }\\n  //Intersection algorithm based on theory by Paul Bourke (http://paulbourke.net/geometry/pointlineplane/).\\n  vec4 p1 = u_projectionMatrix * vec4(longVertex, 0.0, 1.0) + offsetMatrix * vec4(longOffset, 0.0, 0.0);\\n  vec4 p2 = projPos + offsetMatrix * vec4(longOffset, 0.0, 0.0);\\n  vec4 p3 = shortProjVertex + offsetMatrix * vec4(-shortOffset, 0.0, 0.0);\\n  vec4 p4 = shortProjVertex + offsetMatrix * vec4(shortOffset, 0.0, 0.0);\\n  float denom = (p4.y - p3.y) * (p2.x - p1.x) - (p4.x - p3.x) * (p2.y - p1.y);\\n  float firstU = ((p4.x - p3.x) * (p1.y - p3.y) - (p4.y - p3.y) * (p1.x - p3.x)) / denom;\\n  float secondU = ((p2.x - p1.x) * (p1.y - p3.y) - (p2.y - p1.y) * (p1.x - p3.x)) / denom;\\n  float epsilon = 0.000000000001;\\n  if (firstU > epsilon && firstU < 1.0 - epsilon && secondU > epsilon && secondU < 1.0 - epsilon) {\\n    shortProjVertex.x = p1.x + firstU * (p2.x - p1.x);\\n    shortProjVertex.y = p1.y + firstU * (p2.y - p1.y);\\n    offset = shortProjVertex.xy;\\n    degenerate = true;\\n  } else {\\n    float miterLength = abs(halfWidth / dot(normal, tmpNormal));\\n    offset = normal * direction * miterLength;\\n  }\\n  return degenerate;\\n}\\n\\nvoid squareCap(out vec2 offset, out float round, in bool isRound, in vec2 nextP,\\n    in float turnDir, in float direction) {\\n  round = 0.0;\\n  vec2 dirVect = a_position - nextP;\\n  vec2 firstNormal = normalize(dirVect);\\n  vec2 secondNormal = vec2(turnDir * firstNormal.y * direction, -turnDir * firstNormal.x * direction);\\n  vec2 hypotenuse = normalize(firstNormal - secondNormal);\\n  vec2 normal = vec2(turnDir * hypotenuse.y * direction, -turnDir * hypotenuse.x * direction);\\n  float length = sqrt(v_halfWidth * v_halfWidth * 2.0);\\n  offset = normal * length;\\n  if (isRound) {\\n    round = 1.0;\\n  }\\n}\\n\\nvoid main(void) {\\n  bool degenerate = false;\\n  float direction = float(sign(a_direction));\\n  mat4 offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  vec2 offset;\\n  vec4 projPos = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\\n  bool round = nearlyEquals(mod(a_direction, 2.0), 0.0);\\n\\n  v_round = 0.0;\\n  v_halfWidth = u_lineWidth / 2.0;\\n  v_roundVertex = projPos.xy;\\n\\n  if (nearlyEquals(mod(a_direction, 3.0), 0.0) || nearlyEquals(mod(a_direction, 17.0), 0.0)) {\\n    alongNormal(offset, a_nextPos, 1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 5.0), 0.0) || nearlyEquals(mod(a_direction, 13.0), 0.0)) {\\n    alongNormal(offset, a_lastPos, -1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 23.0), 0.0)) {\\n    miterUp(offset, v_round, round, direction);\\n  } else if (nearlyEquals(mod(a_direction, 19.0), 0.0)) {\\n    degenerate = miterDown(offset, projPos, offsetMatrix, direction);\\n  } else if (nearlyEquals(mod(a_direction, 7.0), 0.0)) {\\n    squareCap(offset, v_round, round, a_nextPos, 1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 11.0), 0.0)) {\\n    squareCap(offset, v_round, round, a_lastPos, -1.0, direction);\\n  }\\n  if (!degenerate) {\\n    vec4 offsets = offsetMatrix * vec4(offset, 0.0, 0.0);\\n    gl_Position = projPos + offsets;\\n  } else {\\n    gl_Position = vec4(offset, 0.0, 1.0);\\n  }\\n}\\n\\n\\n' :\n  'varying float a;varying vec2 aVertex;varying float c;attribute vec2 d;attribute vec2 e;attribute vec2 f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;uniform float k;uniform float l;bool nearlyEquals(in float value,in float ref){float epsilon=0.000000000001;return value>=ref-epsilon&&value<=ref+epsilon;}void alongNormal(out vec2 offset,in vec2 nextP,in float turnDir,in float direction){vec2 dirVect=nextP-e;vec2 normal=normalize(vec2(-turnDir*dirVect.y,turnDir*dirVect.x));offset=k/2.0*normal*direction;}void miterUp(out vec2 offset,out float round,in bool isRound,in float direction){float halfWidth=k/2.0;vec2 tangent=normalize(normalize(f-e)+normalize(e-d));vec2 normal=vec2(-tangent.y,tangent.x);vec2 dirVect=f-e;vec2 tmpNormal=normalize(vec2(-dirVect.y,dirVect.x));float miterLength=abs(halfWidth/dot(normal,tmpNormal));offset=normal*direction*miterLength;round=0.0;if(isRound){round=1.0;}else if(miterLength>l+k){offset=halfWidth*tmpNormal*direction;}} bool miterDown(out vec2 offset,in vec4 projPos,in mat4 offsetMatrix,in float direction){bool degenerate=false;vec2 tangent=normalize(normalize(f-e)+normalize(e-d));vec2 normal=vec2(-tangent.y,tangent.x);vec2 dirVect=d-e;vec2 tmpNormal=normalize(vec2(-dirVect.y,dirVect.x));vec2 longOffset,shortOffset,longVertex;vec4 shortProjVertex;float halfWidth=k/2.0;if(length(f-e)>length(d-e)){longOffset=tmpNormal*direction*halfWidth;shortOffset=normalize(vec2(dirVect.y,-dirVect.x))*direction*halfWidth;longVertex=f;shortProjVertex=h*vec4(d,0.0,1.0);}else{shortOffset=tmpNormal*direction*halfWidth;longOffset=normalize(vec2(dirVect.y,-dirVect.x))*direction*halfWidth;longVertex=d;shortProjVertex=h*vec4(f,0.0,1.0);}vec4 p1=h*vec4(longVertex,0.0,1.0)+offsetMatrix*vec4(longOffset,0.0,0.0);vec4 p2=projPos+offsetMatrix*vec4(longOffset,0.0,0.0);vec4 p3=shortProjVertex+offsetMatrix*vec4(-shortOffset,0.0,0.0);vec4 p4=shortProjVertex+offsetMatrix*vec4(shortOffset,0.0,0.0);float denom=(p4.y-p3.y)*(p2.x-p1.x)-(p4.x-p3.x)*(p2.y-p1.y);float firstU=((p4.x-p3.x)*(p1.y-p3.y)-(p4.y-p3.y)*(p1.x-p3.x))/denom;float secondU=((p2.x-p1.x)*(p1.y-p3.y)-(p2.y-p1.y)*(p1.x-p3.x))/denom;float epsilon=0.000000000001;if(firstU>epsilon&&firstU<1.0-epsilon&&secondU>epsilon&&secondU<1.0-epsilon){shortProjVertex.x=p1.x+firstU*(p2.x-p1.x);shortProjVertex.y=p1.y+firstU*(p2.y-p1.y);offset=shortProjVertex.xy;degenerate=true;}else{float miterLength=abs(halfWidth/dot(normal,tmpNormal));offset=normal*direction*miterLength;}return degenerate;}void squareCap(out vec2 offset,out float round,in bool isRound,in vec2 nextP,in float turnDir,in float direction){round=0.0;vec2 dirVect=e-nextP;vec2 firstNormal=normalize(dirVect);vec2 secondNormal=vec2(turnDir*firstNormal.y*direction,-turnDir*firstNormal.x*direction);vec2 hypotenuse=normalize(firstNormal-secondNormal);vec2 normal=vec2(turnDir*hypotenuse.y*direction,-turnDir*hypotenuse.x*direction);float length=sqrt(c*c*2.0);offset=normal*length;if(isRound){round=1.0;}} void main(void){bool degenerate=false;float direction=float(sign(g));mat4 offsetMatrix=i*j;vec2 offset;vec4 projPos=h*vec4(e,0.0,1.0);bool round=nearlyEquals(mod(g,2.0),0.0);a=0.0;c=k/2.0;aVertex=projPos.xy;if(nearlyEquals(mod(g,3.0),0.0)||nearlyEquals(mod(g,17.0),0.0)){alongNormal(offset,f,1.0,direction);}else if(nearlyEquals(mod(g,5.0),0.0)||nearlyEquals(mod(g,13.0),0.0)){alongNormal(offset,d,-1.0,direction);}else if(nearlyEquals(mod(g,23.0),0.0)){miterUp(offset,a,round,direction);}else if(nearlyEquals(mod(g,19.0),0.0)){degenerate=miterDown(offset,projPos,offsetMatrix,direction);}else if(nearlyEquals(mod(g,7.0),0.0)){squareCap(offset,a,round,f,1.0,direction);}else if(nearlyEquals(mod(g,11.0),0.0)){squareCap(offset,a,round,d,-1.0,direction);}if(!degenerate){vec4 offsets=offsetMatrix*vec4(offset,0.0,0.0);gl_Position=projPos+offsets;}else{gl_Position=vec4(offset,0.0,1.0);}}');\n","/**\n * @module ol/render/webgl/linestringreplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\nclass Locations {\n\n  /**\n   * @param {WebGLRenderingContext} gl GL.\n   * @param {WebGLProgram} program Program.\n   */\n  constructor(gl, program) {\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_projectionMatrix = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_offsetScaleMatrix = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_offsetRotateMatrix = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_lineWidth = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_lineWidth' : 'k');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_miterLimit = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_miterLimit' : 'l');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_opacity = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_opacity' : 'm');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_color = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_color' : 'n');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_size = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_size' : 'o');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_pixelRatio = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_pixelRatio' : 'p');\n\n    /**\n     * @type {number}\n     */\n    this.a_lastPos = gl.getAttribLocation(\n      program, DEBUG_WEBGL ? 'a_lastPos' : 'd');\n\n    /**\n     * @type {number}\n     */\n    this.a_position = gl.getAttribLocation(\n      program, DEBUG_WEBGL ? 'a_position' : 'e');\n\n    /**\n     * @type {number}\n     */\n    this.a_nextPos = gl.getAttribLocation(\n      program, DEBUG_WEBGL ? 'a_nextPos' : 'f');\n\n    /**\n     * @type {number}\n     */\n    this.a_direction = gl.getAttribLocation(\n      program, DEBUG_WEBGL ? 'a_direction' : 'g');\n\n  }\n\n}\n\nexport default Locations;\n","/**\n * @module ol/render/webgl/LineStringReplay\n */\nimport {getUid} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {intersects} from '../../extent.js';\nimport {linearRingIsClockwise} from '../../geom/flat/orient.js';\nimport {translate} from '../../geom/flat/transform.js';\nimport {lineStringIsClosed} from '../../geom/flat/topology.js';\nimport {isEmpty} from '../../obj.js';\nimport {DEFAULT_LINECAP, DEFAULT_LINEDASH, DEFAULT_LINEDASHOFFSET,\n  DEFAULT_LINEJOIN, DEFAULT_LINEWIDTH, DEFAULT_MITERLIMIT, DEFAULT_STROKESTYLE,\n  triangleIsCounterClockwise} from '../webgl.js';\nimport WebGLReplay from '../webgl/Replay.js';\nimport {fragment, vertex} from '../webgl/linestringreplay/defaultshader.js';\nimport Locations from '../webgl/linestringreplay/defaultshader/Locations.js';\nimport {FLOAT} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  ROUND: 2,\n  BEGIN_LINE: 3,\n  END_LINE: 5,\n  BEGIN_LINE_CAP: 7,\n  END_LINE_CAP: 11,\n  BEVEL_FIRST: 13,\n  BEVEL_SECOND: 17,\n  MITER_BOTTOM: 19,\n  MITER_TOP: 23\n};\n\n\nclass WebGLLineStringReplay extends WebGLReplay {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {module:ol/extent~Extent} maxExtent Max extent.\n   */\n  constructor(tolerance, maxExtent) {\n    super(tolerance, maxExtent);\n\n    /**\n     * @private\n     * @type {module:ol/render/webgl/linestringreplay/defaultshader/Locations}\n     */\n    this.defaultLocations_ = null;\n\n    /**\n     * @private\n     * @type {Array.<Array.<?>>}\n     */\n    this.styles_ = [];\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.styleIndices_ = [];\n\n    /**\n     * @private\n     * @type {{strokeColor: (Array.<number>|null),\n     *         lineCap: (string|undefined),\n     *         lineDash: Array.<number>,\n     *         lineDashOffset: (number|undefined),\n     *         lineJoin: (string|undefined),\n     *         lineWidth: (number|undefined),\n     *         miterLimit: (number|undefined),\n     *         changed: boolean}|null}\n     */\n    this.state_ = {\n      strokeColor: null,\n      lineCap: undefined,\n      lineDash: null,\n      lineDashOffset: undefined,\n      lineJoin: undefined,\n      lineWidth: undefined,\n      miterLimit: undefined,\n      changed: false\n    };\n\n  }\n\n  /**\n   * Draw one segment.\n   * @private\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   */\n  drawCoordinates_(flatCoordinates, offset, end, stride) {\n\n    let i, ii;\n    let numVertices = this.vertices.length;\n    let numIndices = this.indices.length;\n    //To save a vertex, the direction of a point is a product of the sign (1 or -1), a prime from\n    //Instruction, and a rounding factor (1 or 2). If the product is even,\n    //we round it. If it is odd, we don't.\n    const lineJoin = this.state_.lineJoin === 'bevel' ? 0 :\n      this.state_.lineJoin === 'miter' ? 1 : 2;\n    const lineCap = this.state_.lineCap === 'butt' ? 0 :\n      this.state_.lineCap === 'square' ? 1 : 2;\n    const closed = lineStringIsClosed(flatCoordinates, offset, end, stride);\n    let startCoords, sign, n;\n    let lastIndex = numIndices;\n    let lastSign = 1;\n    //We need the adjacent vertices to define normals in joins. p0 = last, p1 = current, p2 = next.\n    let p0, p1, p2;\n\n    for (i = offset, ii = end; i < ii; i += stride) {\n\n      n = numVertices / 7;\n\n      p0 = p1;\n      p1 = p2 || [flatCoordinates[i], flatCoordinates[i + 1]];\n      //First vertex.\n      if (i === offset) {\n        p2 = [flatCoordinates[i + stride], flatCoordinates[i + stride + 1]];\n        if (end - offset === stride * 2 && equals(p1, p2)) {\n          break;\n        }\n        if (closed) {\n          //A closed line! Complete the circle.\n          p0 = [flatCoordinates[end - stride * 2],\n            flatCoordinates[end - stride * 2 + 1]];\n\n          startCoords = p2;\n        } else {\n          //Add the first two/four vertices.\n\n          if (lineCap) {\n            numVertices = this.addVertices_([0, 0], p1, p2,\n              lastSign * Instruction.BEGIN_LINE_CAP * lineCap, numVertices);\n\n            numVertices = this.addVertices_([0, 0], p1, p2,\n              -lastSign * Instruction.BEGIN_LINE_CAP * lineCap, numVertices);\n\n            this.indices[numIndices++] = n + 2;\n            this.indices[numIndices++] = n;\n            this.indices[numIndices++] = n + 1;\n\n            this.indices[numIndices++] = n + 1;\n            this.indices[numIndices++] = n + 3;\n            this.indices[numIndices++] = n + 2;\n\n          }\n\n          numVertices = this.addVertices_([0, 0], p1, p2,\n            lastSign * Instruction.BEGIN_LINE * (lineCap || 1), numVertices);\n\n          numVertices = this.addVertices_([0, 0], p1, p2,\n            -lastSign * Instruction.BEGIN_LINE * (lineCap || 1), numVertices);\n\n          lastIndex = numVertices / 7 - 1;\n\n          continue;\n        }\n      } else if (i === end - stride) {\n        //Last vertex.\n        if (closed) {\n          //Same as the first vertex.\n          p2 = startCoords;\n          break;\n        } else {\n          p0 = p0 || [0, 0];\n\n          numVertices = this.addVertices_(p0, p1, [0, 0],\n            lastSign * Instruction.END_LINE * (lineCap || 1), numVertices);\n\n          numVertices = this.addVertices_(p0, p1, [0, 0],\n            -lastSign * Instruction.END_LINE * (lineCap || 1), numVertices);\n\n          this.indices[numIndices++] = n;\n          this.indices[numIndices++] = lastIndex - 1;\n          this.indices[numIndices++] = lastIndex;\n\n          this.indices[numIndices++] = lastIndex;\n          this.indices[numIndices++] = n + 1;\n          this.indices[numIndices++] = n;\n\n          if (lineCap) {\n            numVertices = this.addVertices_(p0, p1, [0, 0],\n              lastSign * Instruction.END_LINE_CAP * lineCap, numVertices);\n\n            numVertices = this.addVertices_(p0, p1, [0, 0],\n              -lastSign * Instruction.END_LINE_CAP * lineCap, numVertices);\n\n            this.indices[numIndices++] = n + 2;\n            this.indices[numIndices++] = n;\n            this.indices[numIndices++] = n + 1;\n\n            this.indices[numIndices++] = n + 1;\n            this.indices[numIndices++] = n + 3;\n            this.indices[numIndices++] = n + 2;\n\n          }\n\n          break;\n        }\n      } else {\n        p2 = [flatCoordinates[i + stride], flatCoordinates[i + stride + 1]];\n      }\n\n      // We group CW and straight lines, thus the not so inituitive CCW checking function.\n      sign = triangleIsCounterClockwise(p0[0], p0[1], p1[0], p1[1], p2[0], p2[1])\n        ? -1 : 1;\n\n      numVertices = this.addVertices_(p0, p1, p2,\n        sign * Instruction.BEVEL_FIRST * (lineJoin || 1), numVertices);\n\n      numVertices = this.addVertices_(p0, p1, p2,\n        sign * Instruction.BEVEL_SECOND * (lineJoin || 1), numVertices);\n\n      numVertices = this.addVertices_(p0, p1, p2,\n        -sign * Instruction.MITER_BOTTOM * (lineJoin || 1), numVertices);\n\n      if (i > offset) {\n        this.indices[numIndices++] = n;\n        this.indices[numIndices++] = lastIndex - 1;\n        this.indices[numIndices++] = lastIndex;\n\n        this.indices[numIndices++] = n + 2;\n        this.indices[numIndices++] = n;\n        this.indices[numIndices++] = lastSign * sign > 0 ? lastIndex : lastIndex - 1;\n      }\n\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = n + 2;\n      this.indices[numIndices++] = n + 1;\n\n      lastIndex = n + 2;\n      lastSign = sign;\n\n      //Add miter\n      if (lineJoin) {\n        numVertices = this.addVertices_(p0, p1, p2,\n          sign * Instruction.MITER_TOP * lineJoin, numVertices);\n\n        this.indices[numIndices++] = n + 1;\n        this.indices[numIndices++] = n + 3;\n        this.indices[numIndices++] = n;\n      }\n    }\n\n    if (closed) {\n      n = n || numVertices / 7;\n      sign = linearRingIsClockwise([p0[0], p0[1], p1[0], p1[1], p2[0], p2[1]], 0, 6, 2)\n        ? 1 : -1;\n\n      numVertices = this.addVertices_(p0, p1, p2,\n        sign * Instruction.BEVEL_FIRST * (lineJoin || 1), numVertices);\n\n      numVertices = this.addVertices_(p0, p1, p2,\n        -sign * Instruction.MITER_BOTTOM * (lineJoin || 1), numVertices);\n\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = lastIndex - 1;\n      this.indices[numIndices++] = lastIndex;\n\n      this.indices[numIndices++] = n + 1;\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = lastSign * sign > 0 ? lastIndex : lastIndex - 1;\n    }\n  }\n\n  /**\n   * @param {Array.<number>} p0 Last coordinates.\n   * @param {Array.<number>} p1 Current coordinates.\n   * @param {Array.<number>} p2 Next coordinates.\n   * @param {number} product Sign, instruction, and rounding product.\n   * @param {number} numVertices Vertex counter.\n   * @return {number} Vertex counter.\n   * @private\n   */\n  addVertices_(p0, p1, p2, product, numVertices) {\n    this.vertices[numVertices++] = p0[0];\n    this.vertices[numVertices++] = p0[1];\n    this.vertices[numVertices++] = p1[0];\n    this.vertices[numVertices++] = p1[1];\n    this.vertices[numVertices++] = p2[0];\n    this.vertices[numVertices++] = p2[1];\n    this.vertices[numVertices++] = product;\n\n    return numVertices;\n  }\n\n  /**\n   * Check if the linestring can be drawn (i. e. valid).\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @return {boolean} The linestring can be drawn.\n   * @private\n   */\n  isValid_(flatCoordinates, offset, end, stride) {\n    const range = end - offset;\n    if (range < stride * 2) {\n      return false;\n    } else if (range === stride * 2) {\n      const firstP = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n      const lastP = [flatCoordinates[offset + stride], flatCoordinates[offset + stride + 1]];\n      return !equals(firstP, lastP);\n    }\n\n    return true;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawLineString(lineStringGeometry, feature) {\n    let flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    if (this.isValid_(flatCoordinates, 0, flatCoordinates.length, stride)) {\n      flatCoordinates = translate(flatCoordinates, 0, flatCoordinates.length,\n        stride, -this.origin[0], -this.origin[1]);\n      if (this.state_.changed) {\n        this.styleIndices_.push(this.indices.length);\n        this.state_.changed = false;\n      }\n      this.startIndices.push(this.indices.length);\n      this.startIndicesFeature.push(feature);\n      this.drawCoordinates_(\n        flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const indexCount = this.indices.length;\n    const ends = multiLineStringGeometry.getEnds();\n    ends.unshift(0);\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let i, ii;\n    if (ends.length > 1) {\n      for (i = 1, ii = ends.length; i < ii; ++i) {\n        if (this.isValid_(flatCoordinates, ends[i - 1], ends[i], stride)) {\n          const lineString = translate(flatCoordinates, ends[i - 1], ends[i],\n            stride, -this.origin[0], -this.origin[1]);\n          this.drawCoordinates_(\n            lineString, 0, lineString.length, stride);\n        }\n      }\n    }\n    if (this.indices.length > indexCount) {\n      this.startIndices.push(indexCount);\n      this.startIndicesFeature.push(feature);\n      if (this.state_.changed) {\n        this.styleIndices_.push(indexCount);\n        this.state_.changed = false;\n      }\n    }\n  }\n\n  /**\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {Array.<Array.<number>>} holeFlatCoordinates Hole flat coordinates.\n   * @param {number} stride Stride.\n   */\n  drawPolygonCoordinates(flatCoordinates, holeFlatCoordinates, stride) {\n    if (!lineStringIsClosed(flatCoordinates, 0, flatCoordinates.length, stride)) {\n      flatCoordinates.push(flatCoordinates[0]);\n      flatCoordinates.push(flatCoordinates[1]);\n    }\n    this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    if (holeFlatCoordinates.length) {\n      let i, ii;\n      for (i = 0, ii = holeFlatCoordinates.length; i < ii; ++i) {\n        if (!lineStringIsClosed(holeFlatCoordinates[i], 0, holeFlatCoordinates[i].length, stride)) {\n          holeFlatCoordinates[i].push(holeFlatCoordinates[i][0]);\n          holeFlatCoordinates[i].push(holeFlatCoordinates[i][1]);\n        }\n        this.drawCoordinates_(holeFlatCoordinates[i], 0,\n          holeFlatCoordinates[i].length, stride);\n      }\n    }\n  }\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @param {number=} opt_index Index count.\n   */\n  setPolygonStyle(feature, opt_index) {\n    const index = opt_index === undefined ? this.indices.length : opt_index;\n    this.startIndices.push(index);\n    this.startIndicesFeature.push(feature);\n    if (this.state_.changed) {\n      this.styleIndices_.push(index);\n      this.state_.changed = false;\n    }\n  }\n\n  /**\n   * @return {number} Current index.\n   */\n  getCurrentIndex() {\n    return this.indices.length;\n  }\n\n  /**\n   * @inheritDoc\n   **/\n  finish(context) {\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(this.indices);\n\n    this.startIndices.push(this.indices.length);\n\n    //Clean up, if there is nothing to draw\n    if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n      this.styles_ = [];\n    }\n\n    this.vertices = null;\n    this.indices = null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getDeleteResourcesFunction(context) {\n    const verticesBuffer = this.verticesBuffer;\n    const indicesBuffer = this.indicesBuffer;\n    return function() {\n      context.deleteBuffer(verticesBuffer);\n      context.deleteBuffer(indicesBuffer);\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setUpProgram(gl, context, size, pixelRatio) {\n    // get the program\n    const program = context.getProgram(fragment, vertex);\n\n    // get the locations\n    let locations;\n    if (!this.defaultLocations_) {\n      locations = new Locations(gl, program);\n      this.defaultLocations_ = locations;\n    } else {\n      locations = this.defaultLocations_;\n    }\n\n    context.useProgram(program);\n\n    // enable the vertex attrib arrays\n    gl.enableVertexAttribArray(locations.a_lastPos);\n    gl.vertexAttribPointer(locations.a_lastPos, 2, FLOAT,\n      false, 28, 0);\n\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n      false, 28, 8);\n\n    gl.enableVertexAttribArray(locations.a_nextPos);\n    gl.vertexAttribPointer(locations.a_nextPos, 2, FLOAT,\n      false, 28, 16);\n\n    gl.enableVertexAttribArray(locations.a_direction);\n    gl.vertexAttribPointer(locations.a_direction, 1, FLOAT,\n      false, 28, 24);\n\n    // Enable renderer specific uniforms.\n    gl.uniform2fv(locations.u_size, size);\n    gl.uniform1f(locations.u_pixelRatio, pixelRatio);\n\n    return locations;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  shutDownProgram(gl, locations) {\n    gl.disableVertexAttribArray(locations.a_lastPos);\n    gl.disableVertexAttribArray(locations.a_position);\n    gl.disableVertexAttribArray(locations.a_nextPos);\n    gl.disableVertexAttribArray(locations.a_direction);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawReplay(gl, context, skippedFeaturesHash, hitDetection) {\n    //Save GL parameters.\n    const tmpDepthFunc = /** @type {number} */ (gl.getParameter(gl.DEPTH_FUNC));\n    const tmpDepthMask = /** @type {boolean} */ (gl.getParameter(gl.DEPTH_WRITEMASK));\n\n    if (!hitDetection) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthMask(true);\n      gl.depthFunc(gl.NOTEQUAL);\n    }\n\n    if (!isEmpty(skippedFeaturesHash)) {\n      this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n    } else {\n      //Draw by style groups to minimize drawElements() calls.\n      let i, start, end, nextStyle;\n      end = this.startIndices[this.startIndices.length - 1];\n      for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n        start = this.styleIndices_[i];\n        nextStyle = this.styles_[i];\n        this.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n        this.drawElements(gl, context, start, end);\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n        end = start;\n      }\n    }\n    if (!hitDetection) {\n      gl.disable(gl.DEPTH_TEST);\n      gl.clear(gl.DEPTH_BUFFER_BIT);\n      //Restore GL parameters.\n      gl.depthMask(tmpDepthMask);\n      gl.depthFunc(tmpDepthFunc);\n    }\n  }\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object} skippedFeaturesHash Ids of features to skip.\n   */\n  drawReplaySkipping_(gl, context, skippedFeaturesHash) {\n    let i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex, featureStart;\n    featureIndex = this.startIndices.length - 2;\n    end = start = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this.styles_[i];\n      this.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n      groupStart = this.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        featureStart = this.startIndices[featureIndex];\n        feature = this.startIndicesFeature[featureIndex];\n        featureUid = getUid(feature).toString();\n\n        if (skippedFeaturesHash[featureUid]) {\n          if (start !== end) {\n            this.drawElements(gl, context, start, end);\n            gl.clear(gl.DEPTH_BUFFER_BIT);\n          }\n          end = featureStart;\n        }\n        featureIndex--;\n        start = featureStart;\n      }\n      if (start !== end) {\n        this.drawElements(gl, context, start, end);\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n      }\n      start = end = groupStart;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawHitDetectionReplayOneByOne(gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\n    let i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex;\n    featureIndex = this.startIndices.length - 2;\n    end = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this.styles_[i];\n      this.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n      groupStart = this.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        start = this.startIndices[featureIndex];\n        feature = this.startIndicesFeature[featureIndex];\n        featureUid = getUid(feature).toString();\n\n        if (skippedFeaturesHash[featureUid] === undefined &&\n            feature.getGeometry() &&\n            (opt_hitExtent === undefined || intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n          this.drawElements(gl, context, start, end);\n\n          const result = featureCallback(feature);\n\n          if (result) {\n            return result;\n          }\n\n        }\n        featureIndex--;\n        end = start;\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {Array.<number>} color Color.\n   * @param {number} lineWidth Line width.\n   * @param {number} miterLimit Miter limit.\n   */\n  setStrokeStyle_(gl, color, lineWidth, miterLimit) {\n    gl.uniform4fv(this.defaultLocations_.u_color, color);\n    gl.uniform1f(this.defaultLocations_.u_lineWidth, lineWidth);\n    gl.uniform1f(this.defaultLocations_.u_miterLimit, miterLimit);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const strokeStyleLineCap = strokeStyle.getLineCap();\n    this.state_.lineCap = strokeStyleLineCap !== undefined ?\n      strokeStyleLineCap : DEFAULT_LINECAP;\n    const strokeStyleLineDash = strokeStyle.getLineDash();\n    this.state_.lineDash = strokeStyleLineDash ?\n      strokeStyleLineDash : DEFAULT_LINEDASH;\n    const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n    this.state_.lineDashOffset = strokeStyleLineDashOffset ?\n      strokeStyleLineDashOffset : DEFAULT_LINEDASHOFFSET;\n    const strokeStyleLineJoin = strokeStyle.getLineJoin();\n    this.state_.lineJoin = strokeStyleLineJoin !== undefined ?\n      strokeStyleLineJoin : DEFAULT_LINEJOIN;\n    let strokeStyleColor = strokeStyle.getColor();\n    if (!(strokeStyleColor instanceof CanvasGradient) &&\n        !(strokeStyleColor instanceof CanvasPattern)) {\n      strokeStyleColor = asArray(strokeStyleColor).map(function(c, i) {\n        return i != 3 ? c / 255 : c;\n      }) || DEFAULT_STROKESTYLE;\n    } else {\n      strokeStyleColor = DEFAULT_STROKESTYLE;\n    }\n    let strokeStyleWidth = strokeStyle.getWidth();\n    strokeStyleWidth = strokeStyleWidth !== undefined ?\n      strokeStyleWidth : DEFAULT_LINEWIDTH;\n    let strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n    strokeStyleMiterLimit = strokeStyleMiterLimit !== undefined ?\n      strokeStyleMiterLimit : DEFAULT_MITERLIMIT;\n    if (!this.state_.strokeColor || !equals(this.state_.strokeColor, strokeStyleColor) ||\n        this.state_.lineWidth !== strokeStyleWidth || this.state_.miterLimit !== strokeStyleMiterLimit) {\n      this.state_.changed = true;\n      this.state_.strokeColor = strokeStyleColor;\n      this.state_.lineWidth = strokeStyleWidth;\n      this.state_.miterLimit = strokeStyleMiterLimit;\n      this.styles_.push([strokeStyleColor, strokeStyleWidth, strokeStyleMiterLimit]);\n    }\n  }\n}\n\n\nexport default WebGLLineStringReplay;\n","/**\n * @module ol/render/webgl/polygonreplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport const fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\n\\n\\n\\nuniform vec4 u_color;\\nuniform float u_opacity;\\n\\nvoid main(void) {\\n  gl_FragColor = u_color;\\n  float alpha = u_color.a * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;uniform vec4 e;uniform float f;void main(void){gl_FragColor=e;float alpha=e.a*f;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\nexport const vertex = new WebGLVertex(DEBUG_WEBGL ?\n  '\\n\\nattribute vec2 a_position;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\n\\nvoid main(void) {\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\\n}\\n\\n\\n' :\n  'attribute vec2 a;uniform mat4 b;uniform mat4 c;uniform mat4 d;void main(void){gl_Position=b*vec4(a,0.0,1.0);}');\n","/**\n * @module ol/render/webgl/polygonreplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\nclass Locations {\n\n  /**\n   * @param {WebGLRenderingContext} gl GL.\n   * @param {WebGLProgram} program Program.\n   */\n  constructor(gl, program) {\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_projectionMatrix = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'b');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_offsetScaleMatrix = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'c');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_offsetRotateMatrix = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'd');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_color = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_color' : 'e');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_opacity = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_opacity' : 'f');\n\n    /**\n     * @type {number}\n     */\n    this.a_position = gl.getAttribLocation(\n      program, DEBUG_WEBGL ? 'a_position' : 'a');\n\n  }\n\n}\n\nexport default Locations;\n","/**\n * @module ol/structs/LinkedList\n */\n\n\n/**\n * @typedef {Object} Item\n * @property {module:ol/structs/LinkedList~Item} [prev]\n * @property {module:ol/structs/LinkedList~Item} [next]\n * @property {?} data\n */\n\n\nclass LinkedList {\n\n  /**\n   * Creates an empty linked list structure.\n   *\n   * @param {boolean=} opt_circular The last item is connected to the first one,\n   * and the first item to the last one. Default is true.\n   */\n  constructor(opt_circular) {\n\n    /**\n     * @private\n     * @type {module:ol/structs/LinkedList~Item|undefined}\n     */\n    this.first_;\n\n    /**\n     * @private\n     * @type {module:ol/structs/LinkedList~Item|undefined}\n     */\n    this.last_;\n\n    /**\n     * @private\n     * @type {module:ol/structs/LinkedList~Item|undefined}\n     */\n    this.head_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.circular_ = opt_circular === undefined ? true : opt_circular;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.length_ = 0;\n\n  }\n\n  /**\n   * Inserts an item into the linked list right after the current one.\n   *\n   * @param {?} data Item data.\n   */\n  insertItem(data) {\n\n    /** @type {module:ol/structs/LinkedList~Item} */\n    const item = {\n      prev: undefined,\n      next: undefined,\n      data: data\n    };\n\n    const head = this.head_;\n\n    //Initialize the list.\n    if (!head) {\n      this.first_ = item;\n      this.last_ = item;\n      if (this.circular_) {\n        item.next = item;\n        item.prev = item;\n      }\n    } else {\n      //Link the new item to the adjacent ones.\n      const next = head.next;\n      item.prev = head;\n      item.next = next;\n      head.next = item;\n      if (next) {\n        next.prev = item;\n      }\n\n      if (head === this.last_) {\n        this.last_ = item;\n      }\n    }\n    this.head_ = item;\n    this.length_++;\n  }\n\n  /**\n   * Removes the current item from the list. Sets the cursor to the next item,\n   * if possible.\n   */\n  removeItem() {\n    const head = this.head_;\n    if (head) {\n      const next = head.next;\n      const prev = head.prev;\n      if (next) {\n        next.prev = prev;\n      }\n      if (prev) {\n        prev.next = next;\n      }\n      this.head_ = next || prev;\n\n      if (this.first_ === this.last_) {\n        this.head_ = undefined;\n        this.first_ = undefined;\n        this.last_ = undefined;\n      } else if (this.first_ === head) {\n        this.first_ = this.head_;\n      } else if (this.last_ === head) {\n        this.last_ = prev ? this.head_.prev : this.head_;\n      }\n      this.length_--;\n    }\n  }\n\n  /**\n   * Sets the cursor to the first item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  firstItem() {\n    this.head_ = this.first_;\n    if (this.head_) {\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n  * Sets the cursor to the last item, and returns the associated data.\n  *\n  * @return {?} Item data.\n  */\n  lastItem() {\n    this.head_ = this.last_;\n    if (this.head_) {\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the cursor to the next item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  nextItem() {\n    if (this.head_ && this.head_.next) {\n      this.head_ = this.head_.next;\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the next item's data without moving the cursor.\n   *\n   * @return {?} Item data.\n   */\n  getNextItem() {\n    if (this.head_ && this.head_.next) {\n      return this.head_.next.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the cursor to the previous item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  prevItem() {\n    if (this.head_ && this.head_.prev) {\n      this.head_ = this.head_.prev;\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the previous item's data without moving the cursor.\n   *\n   * @return {?} Item data.\n   */\n  getPrevItem() {\n    if (this.head_ && this.head_.prev) {\n      return this.head_.prev.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the current item's data.\n   *\n   * @return {?} Item data.\n   */\n  getCurrItem() {\n    if (this.head_) {\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the first item of the list. This only works for circular lists, and sets\n   * the last item accordingly.\n   */\n  setFirstItem() {\n    if (this.circular_ && this.head_) {\n      this.first_ = this.head_;\n      this.last_ = this.head_.prev;\n    }\n  }\n\n  /**\n   * Concatenates two lists.\n   * @param {module:ol/structs/LinkedList} list List to merge into the current list.\n   */\n  concat(list) {\n    if (list.head_) {\n      if (this.head_) {\n        const end = this.head_.next;\n        this.head_.next = list.first_;\n        list.first_.prev = this.head_;\n        end.prev = list.last_;\n        list.last_.next = end;\n        this.length_ += list.length_;\n      } else {\n        this.head_ = list.head_;\n        this.first_ = list.first_;\n        this.last_ = list.last_;\n        this.length_ = list.length_;\n      }\n      list.head_ = undefined;\n      list.first_ = undefined;\n      list.last_ = undefined;\n      list.length_ = 0;\n    }\n  }\n\n  /**\n   * Returns the current length of the list.\n   *\n   * @return {number} Length.\n   */\n  getLength() {\n    return this.length_;\n  }\n\n}\n\n\nexport default LinkedList;\n","/**\n * @module ol/render/webgl/PolygonReplay\n */\nimport {getUid} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {intersects} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {linearRingContainsXY} from '../../geom/flat/contains.js';\nimport {linearRingIsClockwise} from '../../geom/flat/orient.js';\nimport {translate} from '../../geom/flat/transform.js';\nimport {fragment, vertex} from '../webgl/polygonreplay/defaultshader.js';\nimport Locations from '../webgl/polygonreplay/defaultshader/Locations.js';\nimport WebGLLineStringReplay from '../webgl/LineStringReplay.js';\nimport WebGLReplay from '../webgl/Replay.js';\nimport {triangleIsCounterClockwise, EPSILON, DEFAULT_FILLSTYLE} from '../webgl.js';\nimport Stroke from '../../style/Stroke.js';\nimport LinkedList from '../../structs/LinkedList.js';\nimport RBush from '../../structs/RBush.js';\nimport {FLOAT} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n\n/**\n * @typedef {Object} PolygonVertex\n * @property {number} x\n * @property {number} y\n * @property {number} i\n * @property {boolean} [reflex]\n */\n\n/**\n * @typedef {Object} PolygonSegment\n * @property {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0\n * @property {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1\n */\n\n\nclass WebGLPolygonReplay extends WebGLReplay {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {module:ol/extent~Extent} maxExtent Max extent.\n   */\n  constructor(tolerance, maxExtent) {\n    super(tolerance, maxExtent);\n\n    this.lineStringReplay = new WebGLLineStringReplay(\n      tolerance, maxExtent);\n\n    /**\n     * @private\n     * @type {module:ol/render/webgl/polygonreplay/defaultshader/Locations}\n     */\n    this.defaultLocations_ = null;\n\n    /**\n     * @private\n     * @type {Array.<Array.<number>>}\n     */\n    this.styles_ = [];\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.styleIndices_ = [];\n\n    /**\n     * @private\n     * @type {{fillColor: (Array.<number>|null),\n     *         changed: boolean}|null}\n     */\n    this.state_ = {\n      fillColor: null,\n      changed: false\n    };\n\n  }\n\n  /**\n   * Draw one polygon.\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {Array.<Array.<number>>} holeFlatCoordinates Hole flat coordinates.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawCoordinates_(flatCoordinates, holeFlatCoordinates, stride) {\n    // Triangulate the polygon\n    const outerRing = new LinkedList();\n    const rtree = new RBush();\n    // Initialize the outer ring\n    this.processFlatCoordinates_(flatCoordinates, stride, outerRing, rtree, true);\n    const maxCoords = this.getMaxCoords_(outerRing);\n\n    // Eliminate holes, if there are any\n    if (holeFlatCoordinates.length) {\n      let i, ii;\n      const holeLists = [];\n      for (i = 0, ii = holeFlatCoordinates.length; i < ii; ++i) {\n        const holeList = {\n          list: new LinkedList(),\n          maxCoords: undefined,\n          rtree: new RBush()\n        };\n        holeLists.push(holeList);\n        this.processFlatCoordinates_(holeFlatCoordinates[i],\n          stride, holeList.list, holeList.rtree, false);\n        this.classifyPoints_(holeList.list, holeList.rtree, true);\n        holeList.maxCoords = this.getMaxCoords_(holeList.list);\n      }\n      holeLists.sort(function(a, b) {\n        return b.maxCoords[0] === a.maxCoords[0] ?\n          a.maxCoords[1] - b.maxCoords[1] : b.maxCoords[0] - a.maxCoords[0];\n      });\n      for (i = 0; i < holeLists.length; ++i) {\n        const currList = holeLists[i].list;\n        const start = currList.firstItem();\n        let currItem = start;\n        let intersection;\n        do {\n          //TODO: Triangulate holes when they intersect the outer ring.\n          if (this.getIntersections_(currItem, rtree).length) {\n            intersection = true;\n            break;\n          }\n          currItem = currList.nextItem();\n        } while (start !== currItem);\n        if (!intersection) {\n          if (this.bridgeHole_(currList, holeLists[i].maxCoords[0], outerRing, maxCoords[0], rtree)) {\n            rtree.concat(holeLists[i].rtree);\n            this.classifyPoints_(outerRing, rtree, false);\n          }\n        }\n      }\n    } else {\n      this.classifyPoints_(outerRing, rtree, false);\n    }\n    this.triangulate_(outerRing, rtree);\n  }\n\n  /**\n   * Inserts flat coordinates in a linked list and adds them to the vertex buffer.\n   * @private\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @param {module:ol/structs/LinkedList} list Linked list.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @param {boolean} clockwise Coordinate order should be clockwise.\n   */\n  processFlatCoordinates_(flatCoordinates, stride, list, rtree, clockwise) {\n    const isClockwise = linearRingIsClockwise(flatCoordinates,\n      0, flatCoordinates.length, stride);\n    let i, ii;\n    let n = this.vertices.length / 2;\n    /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n    let start;\n    /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n    let p0;\n    /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n    let p1;\n    const extents = [];\n    const segments = [];\n    if (clockwise === isClockwise) {\n      start = this.createPoint_(flatCoordinates[0], flatCoordinates[1], n++);\n      p0 = start;\n      for (i = stride, ii = flatCoordinates.length; i < ii; i += stride) {\n        p1 = this.createPoint_(flatCoordinates[i], flatCoordinates[i + 1], n++);\n        segments.push(this.insertItem_(p0, p1, list));\n        extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n          Math.max(p0.y, p1.y)]);\n        p0 = p1;\n      }\n      segments.push(this.insertItem_(p1, start, list));\n      extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n        Math.max(p0.y, p1.y)]);\n    } else {\n      const end = flatCoordinates.length - stride;\n      start = this.createPoint_(flatCoordinates[end], flatCoordinates[end + 1], n++);\n      p0 = start;\n      for (i = end - stride, ii = 0; i >= ii; i -= stride) {\n        p1 = this.createPoint_(flatCoordinates[i], flatCoordinates[i + 1], n++);\n        segments.push(this.insertItem_(p0, p1, list));\n        extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n          Math.max(p0.y, p1.y)]);\n        p0 = p1;\n      }\n      segments.push(this.insertItem_(p1, start, list));\n      extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n        Math.max(p0.y, p1.y)]);\n    }\n    rtree.load(extents, segments);\n  }\n\n  /**\n   * Returns the rightmost coordinates of a polygon on the X axis.\n   * @private\n   * @param {module:ol/structs/LinkedList} list Polygons ring.\n   * @return {Array.<number>} Max X coordinates.\n   */\n  getMaxCoords_(list) {\n    const start = list.firstItem();\n    let seg = start;\n    let maxCoords = [seg.p0.x, seg.p0.y];\n\n    do {\n      seg = list.nextItem();\n      if (seg.p0.x > maxCoords[0]) {\n        maxCoords = [seg.p0.x, seg.p0.y];\n      }\n    } while (seg !== start);\n\n    return maxCoords;\n  }\n\n  /**\n   * Classifies the points of a polygon list as convex, reflex. Removes collinear vertices.\n   * @private\n   * @param {module:ol/structs/LinkedList} list Polygon ring.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @param {boolean} ccw The orientation of the polygon is counter-clockwise.\n   * @return {boolean} There were reclassified points.\n   */\n  classifyPoints_(list, rtree, ccw) {\n    let start = list.firstItem();\n    let s0 = start;\n    let s1 = list.nextItem();\n    let pointsReclassified = false;\n    do {\n      const reflex = ccw ? triangleIsCounterClockwise(s1.p1.x,\n        s1.p1.y, s0.p1.x, s0.p1.y, s0.p0.x, s0.p0.y) :\n        triangleIsCounterClockwise(s0.p0.x, s0.p0.y, s0.p1.x,\n          s0.p1.y, s1.p1.x, s1.p1.y);\n      if (reflex === undefined) {\n        this.removeItem_(s0, s1, list, rtree);\n        pointsReclassified = true;\n        if (s1 === start) {\n          start = list.getNextItem();\n        }\n        s1 = s0;\n        list.prevItem();\n      } else if (s0.p1.reflex !== reflex) {\n        s0.p1.reflex = reflex;\n        pointsReclassified = true;\n      }\n      s0 = s1;\n      s1 = list.nextItem();\n    } while (s0 !== start);\n    return pointsReclassified;\n  }\n\n  /**\n   * @private\n   * @param {module:ol/structs/LinkedList} hole Linked list of the hole.\n   * @param {number} holeMaxX Maximum X value of the hole.\n   * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n   * @param {number} listMaxX Maximum X value of the polygon.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @return {boolean} Bridging was successful.\n   */\n  bridgeHole_(hole, holeMaxX, list, listMaxX, rtree) {\n    let seg = hole.firstItem();\n    while (seg.p1.x !== holeMaxX) {\n      seg = hole.nextItem();\n    }\n\n    const p1 = seg.p1;\n    /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n    const p2 = {x: listMaxX, y: p1.y, i: -1};\n    let minDist = Infinity;\n    let i, ii, bestPoint;\n    /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n    let p5;\n\n    const intersectingSegments = this.getIntersections_({p0: p1, p1: p2}, rtree, true);\n    for (i = 0, ii = intersectingSegments.length; i < ii; ++i) {\n      const currSeg = intersectingSegments[i];\n      const intersection = this.calculateIntersection_(p1, p2, currSeg.p0,\n        currSeg.p1, true);\n      const dist = Math.abs(p1.x - intersection[0]);\n      if (dist < minDist && triangleIsCounterClockwise(p1.x, p1.y,\n        currSeg.p0.x, currSeg.p0.y, currSeg.p1.x, currSeg.p1.y) !== undefined) {\n        minDist = dist;\n        p5 = {x: intersection[0], y: intersection[1], i: -1};\n        seg = currSeg;\n      }\n    }\n    if (minDist === Infinity) {\n      return false;\n    }\n    bestPoint = seg.p1;\n\n    if (minDist > 0) {\n      const pointsInTriangle = this.getPointsInTriangle_(p1, p5, seg.p1, rtree);\n      if (pointsInTriangle.length) {\n        let theta = Infinity;\n        for (i = 0, ii = pointsInTriangle.length; i < ii; ++i) {\n          const currPoint = pointsInTriangle[i];\n          const currTheta = Math.atan2(p1.y - currPoint.y, p2.x - currPoint.x);\n          if (currTheta < theta || (currTheta === theta && currPoint.x < bestPoint.x)) {\n            theta = currTheta;\n            bestPoint = currPoint;\n          }\n        }\n      }\n    }\n\n    seg = list.firstItem();\n    while (seg.p1.x !== bestPoint.x || seg.p1.y !== bestPoint.y) {\n      seg = list.nextItem();\n    }\n\n    //We clone the bridge points as they can have different convexity.\n    const p0Bridge = {x: p1.x, y: p1.y, i: p1.i, reflex: undefined};\n    const p1Bridge = {x: seg.p1.x, y: seg.p1.y, i: seg.p1.i, reflex: undefined};\n\n    hole.getNextItem().p0 = p0Bridge;\n    this.insertItem_(p1, seg.p1, hole, rtree);\n    this.insertItem_(p1Bridge, p0Bridge, hole, rtree);\n    seg.p1 = p1Bridge;\n    hole.setFirstItem();\n    list.concat(hole);\n\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   */\n  triangulate_(list, rtree) {\n    let ccw = false;\n    let simple = this.isSimple_(list, rtree);\n\n    // Start clipping ears\n    while (list.getLength() > 3) {\n      if (simple) {\n        if (!this.clipEars_(list, rtree, simple, ccw)) {\n          if (!this.classifyPoints_(list, rtree, ccw)) {\n            // Due to the behavior of OL's PIP algorithm, the ear clipping cannot\n            // introduce touching segments. However, the original data may have some.\n            if (!this.resolveSelfIntersections_(list, rtree, true)) {\n              break;\n            }\n          }\n        }\n      } else {\n        if (!this.clipEars_(list, rtree, simple, ccw)) {\n          // We ran out of ears, try to reclassify.\n          if (!this.classifyPoints_(list, rtree, ccw)) {\n            // We have a bad polygon, try to resolve local self-intersections.\n            if (!this.resolveSelfIntersections_(list, rtree)) {\n              simple = this.isSimple_(list, rtree);\n              if (!simple) {\n                // We have a really bad polygon, try more time consuming methods.\n                this.splitPolygon_(list, rtree);\n                break;\n              } else {\n                ccw = !this.isClockwise_(list);\n                this.classifyPoints_(list, rtree, ccw);\n              }\n            }\n          }\n        }\n      }\n    }\n    if (list.getLength() === 3) {\n      let numIndices = this.indices.length;\n      this.indices[numIndices++] = list.getPrevItem().p0.i;\n      this.indices[numIndices++] = list.getCurrItem().p0.i;\n      this.indices[numIndices++] = list.getNextItem().p0.i;\n    }\n  }\n\n  /**\n   * @private\n   * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @param {boolean} simple The polygon is simple.\n   * @param {boolean} ccw Orientation of the polygon is counter-clockwise.\n   * @return {boolean} There were processed ears.\n   */\n  clipEars_(list, rtree, simple, ccw) {\n    let numIndices = this.indices.length;\n    let start = list.firstItem();\n    let s0 = list.getPrevItem();\n    let s1 = start;\n    let s2 = list.nextItem();\n    let s3 = list.getNextItem();\n    let p0, p1, p2;\n    let processedEars = false;\n    do {\n      p0 = s1.p0;\n      p1 = s1.p1;\n      p2 = s2.p1;\n      if (p1.reflex === false) {\n        // We might have a valid ear\n        let variableCriterion;\n        if (simple) {\n          variableCriterion = this.getPointsInTriangle_(p0, p1, p2, rtree, true).length === 0;\n        } else {\n          variableCriterion = ccw ? this.diagonalIsInside_(s3.p1, p2, p1, p0,\n            s0.p0) : this.diagonalIsInside_(s0.p0, p0, p1, p2, s3.p1);\n        }\n        if ((simple || this.getIntersections_({p0: p0, p1: p2}, rtree).length === 0) &&\n            variableCriterion) {\n          //The diagonal is completely inside the polygon\n          if (simple || p0.reflex === false || p2.reflex === false ||\n              linearRingIsClockwise([s0.p0.x, s0.p0.y, p0.x,\n                p0.y, p1.x, p1.y, p2.x, p2.y, s3.p1.x, s3.p1.y], 0, 10, 2) === !ccw) {\n            //The diagonal is persumably valid, we have an ear\n            this.indices[numIndices++] = p0.i;\n            this.indices[numIndices++] = p1.i;\n            this.indices[numIndices++] = p2.i;\n            this.removeItem_(s1, s2, list, rtree);\n            if (s2 === start) {\n              start = s3;\n            }\n            processedEars = true;\n          }\n        }\n      }\n      // Else we have a reflex point.\n      s0 = list.getPrevItem();\n      s1 = list.getCurrItem();\n      s2 = list.nextItem();\n      s3 = list.getNextItem();\n    } while (s1 !== start && list.getLength() > 3);\n\n    return processedEars;\n  }\n\n  /**\n   * @private\n   * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @param {boolean=} opt_touch Resolve touching segments.\n   * @return {boolean} There were resolved intersections.\n  */\n  resolveSelfIntersections_(list, rtree, opt_touch) {\n    const start = list.firstItem();\n    list.nextItem();\n    let s0 = start;\n    let s1 = list.nextItem();\n    let resolvedIntersections = false;\n\n    do {\n      const intersection = this.calculateIntersection_(s0.p0, s0.p1, s1.p0, s1.p1,\n        opt_touch);\n      if (intersection) {\n        let breakCond = false;\n        const numVertices = this.vertices.length;\n        let numIndices = this.indices.length;\n        const n = numVertices / 2;\n        const seg = list.prevItem();\n        list.removeItem();\n        rtree.remove(seg);\n        breakCond = (seg === start);\n        let p;\n        if (opt_touch) {\n          if (intersection[0] === s0.p0.x && intersection[1] === s0.p0.y) {\n            list.prevItem();\n            p = s0.p0;\n            s1.p0 = p;\n            rtree.remove(s0);\n            breakCond = breakCond || (s0 === start);\n          } else {\n            p = s1.p1;\n            s0.p1 = p;\n            rtree.remove(s1);\n            breakCond = breakCond || (s1 === start);\n          }\n          list.removeItem();\n        } else {\n          p = this.createPoint_(intersection[0], intersection[1], n);\n          s0.p1 = p;\n          s1.p0 = p;\n          rtree.update([Math.min(s0.p0.x, s0.p1.x), Math.min(s0.p0.y, s0.p1.y),\n            Math.max(s0.p0.x, s0.p1.x), Math.max(s0.p0.y, s0.p1.y)], s0);\n          rtree.update([Math.min(s1.p0.x, s1.p1.x), Math.min(s1.p0.y, s1.p1.y),\n            Math.max(s1.p0.x, s1.p1.x), Math.max(s1.p0.y, s1.p1.y)], s1);\n        }\n\n        this.indices[numIndices++] = seg.p0.i;\n        this.indices[numIndices++] = seg.p1.i;\n        this.indices[numIndices++] = p.i;\n\n        resolvedIntersections = true;\n        if (breakCond) {\n          break;\n        }\n      }\n\n      s0 = list.getPrevItem();\n      s1 = list.nextItem();\n    } while (s0 !== start);\n    return resolvedIntersections;\n  }\n\n  /**\n   * @private\n   * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @return {boolean} The polygon is simple.\n   */\n  isSimple_(list, rtree) {\n    const start = list.firstItem();\n    let seg = start;\n    do {\n      if (this.getIntersections_(seg, rtree).length) {\n        return false;\n      }\n      seg = list.nextItem();\n    } while (seg !== start);\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n   * @return {boolean} Orientation is clockwise.\n   */\n  isClockwise_(list) {\n    const length = list.getLength() * 2;\n    const flatCoordinates = new Array(length);\n    const start = list.firstItem();\n    let seg = start;\n    let i = 0;\n    do {\n      flatCoordinates[i++] = seg.p0.x;\n      flatCoordinates[i++] = seg.p0.y;\n      seg = list.nextItem();\n    } while (seg !== start);\n    return linearRingIsClockwise(flatCoordinates, 0, length, 2);\n  }\n\n  /**\n   * @private\n   * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   */\n  splitPolygon_(list, rtree) {\n    const start = list.firstItem();\n    let s0 = start;\n    do {\n      const intersections = this.getIntersections_(s0, rtree);\n      if (intersections.length) {\n        const s1 = intersections[0];\n        const n = this.vertices.length / 2;\n        const intersection = this.calculateIntersection_(s0.p0,\n          s0.p1, s1.p0, s1.p1);\n        const p = this.createPoint_(intersection[0], intersection[1], n);\n        const newPolygon = new LinkedList();\n        const newRtree = new RBush();\n        this.insertItem_(p, s0.p1, newPolygon, newRtree);\n        s0.p1 = p;\n        rtree.update([Math.min(s0.p0.x, p.x), Math.min(s0.p0.y, p.y),\n          Math.max(s0.p0.x, p.x), Math.max(s0.p0.y, p.y)], s0);\n        let currItem = list.nextItem();\n        while (currItem !== s1) {\n          this.insertItem_(currItem.p0, currItem.p1, newPolygon, newRtree);\n          rtree.remove(currItem);\n          list.removeItem();\n          currItem = list.getCurrItem();\n        }\n        this.insertItem_(s1.p0, p, newPolygon, newRtree);\n        s1.p0 = p;\n        rtree.update([Math.min(s1.p1.x, p.x), Math.min(s1.p1.y, p.y),\n          Math.max(s1.p1.x, p.x), Math.max(s1.p1.y, p.y)], s1);\n        this.classifyPoints_(list, rtree, false);\n        this.triangulate_(list, rtree);\n        this.classifyPoints_(newPolygon, newRtree, false);\n        this.triangulate_(newPolygon, newRtree);\n        break;\n      }\n      s0 = list.nextItem();\n    } while (s0 !== start);\n  }\n\n  /**\n   * @private\n   * @param {number} x X coordinate.\n   * @param {number} y Y coordinate.\n   * @param {number} i Index.\n   * @return {module:ol/render/webgl/PolygonReplay~PolygonVertex} List item.\n   */\n  createPoint_(x, y, i) {\n    let numVertices = this.vertices.length;\n    this.vertices[numVertices++] = x;\n    this.vertices[numVertices++] = y;\n    /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n    const p = {\n      x: x,\n      y: y,\n      i: i,\n      reflex: undefined\n    };\n    return p;\n  }\n\n  /**\n   * @private\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0 First point of segment.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1 Second point of segment.\n   * @param {module:ol/structs/LinkedList} list Polygon ring.\n   * @param {module:ol/structs/RBush=} opt_rtree Insert the segment into the R-Tree.\n   * @return {module:ol/render/webgl/PolygonReplay~PolygonSegment} segment.\n   */\n  insertItem_(p0, p1, list, opt_rtree) {\n    const seg = {\n      p0: p0,\n      p1: p1\n    };\n    list.insertItem(seg);\n    if (opt_rtree) {\n      opt_rtree.insert([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y),\n        Math.max(p0.x, p1.x), Math.max(p0.y, p1.y)], seg);\n    }\n    return seg;\n  }\n\n  /**\n    * @private\n    * @param {module:ol/render/webgl/PolygonReplay~PolygonSegment} s0 Segment before the remove candidate.\n    * @param {module:ol/render/webgl/PolygonReplay~PolygonSegment} s1 Remove candidate segment.\n    * @param {module:ol/structs/LinkedList} list Polygon ring.\n    * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n    */\n  removeItem_(s0, s1, list, rtree) {\n    if (list.getCurrItem() === s1) {\n      list.removeItem();\n      s0.p1 = s1.p1;\n      rtree.remove(s1);\n      rtree.update([Math.min(s0.p0.x, s0.p1.x), Math.min(s0.p0.y, s0.p1.y),\n        Math.max(s0.p0.x, s0.p1.x), Math.max(s0.p0.y, s0.p1.y)], s0);\n    }\n  }\n\n  /**\n   * @private\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0 First point.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1 Second point.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p2 Third point.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @param {boolean=} opt_reflex Only include reflex points.\n   * @return {Array.<module:ol/render/webgl/PolygonReplay~PolygonVertex>} Points in the triangle.\n   */\n  getPointsInTriangle_(p0, p1, p2, rtree, opt_reflex) {\n    const result = [];\n    const segmentsInExtent = rtree.getInExtent([Math.min(p0.x, p1.x, p2.x),\n      Math.min(p0.y, p1.y, p2.y), Math.max(p0.x, p1.x, p2.x), Math.max(p0.y,\n        p1.y, p2.y)]);\n    for (let i = 0, ii = segmentsInExtent.length; i < ii; ++i) {\n      for (const j in segmentsInExtent[i]) {\n        const p = segmentsInExtent[i][j];\n        if (typeof p === 'object' && (!opt_reflex || p.reflex)) {\n          if ((p.x !== p0.x || p.y !== p0.y) && (p.x !== p1.x || p.y !== p1.y) &&\n              (p.x !== p2.x || p.y !== p2.y) && result.indexOf(p) === -1 &&\n              linearRingContainsXY([p0.x, p0.y, p1.x, p1.y, p2.x, p2.y], 0, 6, 2, p.x, p.y)) {\n            result.push(p);\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @private\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonSegment} segment Segment.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @param {boolean=} opt_touch Touching segments should be considered an intersection.\n   * @return {Array.<module:ol/render/webgl/PolygonReplay~PolygonSegment>} Intersecting segments.\n   */\n  getIntersections_(segment, rtree, opt_touch) {\n    const p0 = segment.p0;\n    const p1 = segment.p1;\n    const segmentsInExtent = rtree.getInExtent([Math.min(p0.x, p1.x),\n      Math.min(p0.y, p1.y), Math.max(p0.x, p1.x), Math.max(p0.y, p1.y)]);\n    const result = [];\n    for (let i = 0, ii = segmentsInExtent.length; i < ii; ++i) {\n      const currSeg = segmentsInExtent[i];\n      if (segment !== currSeg && (opt_touch || currSeg.p0 !== p1 || currSeg.p1 !== p0) &&\n          this.calculateIntersection_(p0, p1, currSeg.p0, currSeg.p1, opt_touch)) {\n        result.push(currSeg);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Line intersection algorithm by Paul Bourke.\n   * See http://paulbourke.net/geometry/pointlineplane/.\n   *\n   * @private\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0 First point.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1 Second point.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p2 Third point.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p3 Fourth point.\n   * @param {boolean=} opt_touch Touching segments should be considered an intersection.\n   * @return {Array.<number>|undefined} Intersection coordinates.\n   */\n  calculateIntersection_(p0, p1, p2, p3, opt_touch) {\n    const denom = (p3.y - p2.y) * (p1.x - p0.x) - (p3.x - p2.x) * (p1.y - p0.y);\n    if (denom !== 0) {\n      const ua = ((p3.x - p2.x) * (p0.y - p2.y) - (p3.y - p2.y) * (p0.x - p2.x)) / denom;\n      const ub = ((p1.x - p0.x) * (p0.y - p2.y) - (p1.y - p0.y) * (p0.x - p2.x)) / denom;\n      if ((!opt_touch && ua > EPSILON && ua < 1 - EPSILON &&\n          ub > EPSILON && ub < 1 - EPSILON) || (opt_touch &&\n          ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1)) {\n        return [p0.x + ua * (p1.x - p0.x), p0.y + ua * (p1.y - p0.y)];\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @private\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0 Point before the start of the diagonal.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1 Start point of the diagonal.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p2 Ear candidate.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p3 End point of the diagonal.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p4 Point after the end of the diagonal.\n   * @return {boolean} Diagonal is inside the polygon.\n   */\n  diagonalIsInside_(p0, p1, p2, p3, p4) {\n    if (p1.reflex === undefined || p3.reflex === undefined) {\n      return false;\n    }\n    const p1IsLeftOf = (p2.x - p3.x) * (p1.y - p3.y) > (p2.y - p3.y) * (p1.x - p3.x);\n    const p1IsRightOf = (p4.x - p3.x) * (p1.y - p3.y) < (p4.y - p3.y) * (p1.x - p3.x);\n    const p3IsLeftOf = (p0.x - p1.x) * (p3.y - p1.y) > (p0.y - p1.y) * (p3.x - p1.x);\n    const p3IsRightOf = (p2.x - p1.x) * (p3.y - p1.y) < (p2.y - p1.y) * (p3.x - p1.x);\n    const p1InCone = p3.reflex ? p1IsRightOf || p1IsLeftOf : p1IsRightOf && p1IsLeftOf;\n    const p3InCone = p1.reflex ? p3IsRightOf || p3IsLeftOf : p3IsRightOf && p3IsLeftOf;\n    return p1InCone && p3InCone;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const endss = multiPolygonGeometry.getEndss();\n    const stride = multiPolygonGeometry.getStride();\n    const currIndex = this.indices.length;\n    const currLineIndex = this.lineStringReplay.getCurrentIndex();\n    const flatCoordinates = multiPolygonGeometry.getFlatCoordinates();\n    let i, ii, j, jj;\n    let start = 0;\n    for (i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i];\n      if (ends.length > 0) {\n        const outerRing = translate(flatCoordinates, start, ends[0],\n          stride, -this.origin[0], -this.origin[1]);\n        if (outerRing.length) {\n          const holes = [];\n          let holeFlatCoords;\n          for (j = 1, jj = ends.length; j < jj; ++j) {\n            if (ends[j] !== ends[j - 1]) {\n              holeFlatCoords = translate(flatCoordinates, ends[j - 1],\n                ends[j], stride, -this.origin[0], -this.origin[1]);\n              holes.push(holeFlatCoords);\n            }\n          }\n          this.lineStringReplay.drawPolygonCoordinates(outerRing, holes, stride);\n          this.drawCoordinates_(outerRing, holes, stride);\n        }\n      }\n      start = ends[ends.length - 1];\n    }\n    if (this.indices.length > currIndex) {\n      this.startIndices.push(currIndex);\n      this.startIndicesFeature.push(feature);\n      if (this.state_.changed) {\n        this.styleIndices_.push(currIndex);\n        this.state_.changed = false;\n      }\n    }\n    if (this.lineStringReplay.getCurrentIndex() > currLineIndex) {\n      this.lineStringReplay.setPolygonStyle(feature, currLineIndex);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const ends = polygonGeometry.getEnds();\n    const stride = polygonGeometry.getStride();\n    if (ends.length > 0) {\n      const flatCoordinates = polygonGeometry.getFlatCoordinates().map(Number);\n      const outerRing = translate(flatCoordinates, 0, ends[0],\n        stride, -this.origin[0], -this.origin[1]);\n      if (outerRing.length) {\n        const holes = [];\n        let i, ii, holeFlatCoords;\n        for (i = 1, ii = ends.length; i < ii; ++i) {\n          if (ends[i] !== ends[i - 1]) {\n            holeFlatCoords = translate(flatCoordinates, ends[i - 1],\n              ends[i], stride, -this.origin[0], -this.origin[1]);\n            holes.push(holeFlatCoords);\n          }\n        }\n\n        this.startIndices.push(this.indices.length);\n        this.startIndicesFeature.push(feature);\n        if (this.state_.changed) {\n          this.styleIndices_.push(this.indices.length);\n          this.state_.changed = false;\n        }\n        this.lineStringReplay.setPolygonStyle(feature);\n\n        this.lineStringReplay.drawPolygonCoordinates(outerRing, holes, stride);\n        this.drawCoordinates_(outerRing, holes, stride);\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   **/\n  finish(context) {\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(this.indices);\n\n    this.startIndices.push(this.indices.length);\n\n    this.lineStringReplay.finish(context);\n\n    //Clean up, if there is nothing to draw\n    if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n      this.styles_ = [];\n    }\n\n    this.vertices = null;\n    this.indices = null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getDeleteResourcesFunction(context) {\n    const verticesBuffer = this.verticesBuffer;\n    const indicesBuffer = this.indicesBuffer;\n    const lineDeleter = this.lineStringReplay.getDeleteResourcesFunction(context);\n    return function() {\n      context.deleteBuffer(verticesBuffer);\n      context.deleteBuffer(indicesBuffer);\n      lineDeleter();\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setUpProgram(gl, context, size, pixelRatio) {\n    // get the program\n    const program = context.getProgram(fragment, vertex);\n\n    // get the locations\n    let locations;\n    if (!this.defaultLocations_) {\n      locations = new Locations(gl, program);\n      this.defaultLocations_ = locations;\n    } else {\n      locations = this.defaultLocations_;\n    }\n\n    context.useProgram(program);\n\n    // enable the vertex attrib arrays\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n      false, 8, 0);\n\n    return locations;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  shutDownProgram(gl, locations) {\n    gl.disableVertexAttribArray(locations.a_position);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawReplay(gl, context, skippedFeaturesHash, hitDetection) {\n    //Save GL parameters.\n    const tmpDepthFunc = /** @type {number} */ (gl.getParameter(gl.DEPTH_FUNC));\n    const tmpDepthMask = /** @type {boolean} */ (gl.getParameter(gl.DEPTH_WRITEMASK));\n\n    if (!hitDetection) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthMask(true);\n      gl.depthFunc(gl.NOTEQUAL);\n    }\n\n    if (!isEmpty(skippedFeaturesHash)) {\n      this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n    } else {\n      //Draw by style groups to minimize drawElements() calls.\n      let i, start, end, nextStyle;\n      end = this.startIndices[this.startIndices.length - 1];\n      for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n        start = this.styleIndices_[i];\n        nextStyle = this.styles_[i];\n        this.setFillStyle_(gl, nextStyle);\n        this.drawElements(gl, context, start, end);\n        end = start;\n      }\n    }\n    if (!hitDetection) {\n      gl.disable(gl.DEPTH_TEST);\n      gl.clear(gl.DEPTH_BUFFER_BIT);\n      //Restore GL parameters.\n      gl.depthMask(tmpDepthMask);\n      gl.depthFunc(tmpDepthFunc);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawHitDetectionReplayOneByOne(gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\n    let i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex;\n    featureIndex = this.startIndices.length - 2;\n    end = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this.styles_[i];\n      this.setFillStyle_(gl, nextStyle);\n      groupStart = this.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        start = this.startIndices[featureIndex];\n        feature = this.startIndicesFeature[featureIndex];\n        featureUid = getUid(feature).toString();\n\n        if (skippedFeaturesHash[featureUid] === undefined &&\n            feature.getGeometry() &&\n            (opt_hitExtent === undefined || intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n          this.drawElements(gl, context, start, end);\n\n          const result = featureCallback(feature);\n\n          if (result) {\n            return result;\n          }\n\n        }\n        featureIndex--;\n        end = start;\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object} skippedFeaturesHash Ids of features to skip.\n   */\n  drawReplaySkipping_(gl, context, skippedFeaturesHash) {\n    let i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex, featureStart;\n    featureIndex = this.startIndices.length - 2;\n    end = start = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this.styles_[i];\n      this.setFillStyle_(gl, nextStyle);\n      groupStart = this.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        featureStart = this.startIndices[featureIndex];\n        feature = this.startIndicesFeature[featureIndex];\n        featureUid = getUid(feature).toString();\n\n        if (skippedFeaturesHash[featureUid]) {\n          if (start !== end) {\n            this.drawElements(gl, context, start, end);\n            gl.clear(gl.DEPTH_BUFFER_BIT);\n          }\n          end = featureStart;\n        }\n        featureIndex--;\n        start = featureStart;\n      }\n      if (start !== end) {\n        this.drawElements(gl, context, start, end);\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n      }\n      start = end = groupStart;\n    }\n  }\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {Array.<number>} color Color.\n   */\n  setFillStyle_(gl, color) {\n    gl.uniform4fv(this.defaultLocations_.u_color, color);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    let fillStyleColor = fillStyle ? fillStyle.getColor() : [0, 0, 0, 0];\n    if (!(fillStyleColor instanceof CanvasGradient) &&\n        !(fillStyleColor instanceof CanvasPattern)) {\n      fillStyleColor = asArray(fillStyleColor).map(function(c, i) {\n        return i != 3 ? c / 255 : c;\n      }) || DEFAULT_FILLSTYLE;\n    } else {\n      fillStyleColor = DEFAULT_FILLSTYLE;\n    }\n    if (!this.state_.fillColor || !equals(fillStyleColor, this.state_.fillColor)) {\n      this.state_.fillColor = fillStyleColor;\n      this.state_.changed = true;\n      this.styles_.push(fillStyleColor);\n    }\n    //Provide a null stroke style, if no strokeStyle is provided. Required for the draw interaction to work.\n    if (strokeStyle) {\n      this.lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    } else {\n      const nullStrokeStyle = new Stroke({\n        color: [0, 0, 0, 0],\n        lineWidth: 0\n      });\n      this.lineStringReplay.setFillStrokeStyle(null, nullStrokeStyle);\n    }\n  }\n}\n\n\nexport default WebGLPolygonReplay;\n","/**\n * @module ol/style/Atlas\n */\nimport {createCanvasContext2D} from '../dom.js';\n\n\n/**\n * @typedef {Object} AtlasBlock\n * @property {number} x\n * @property {number} y\n * @property {number} width\n * @property {number} height\n */\n\n/**\n * Provides information for an image inside an atlas.\n * `offsetX` and `offsetY` are the position of the image inside the atlas image `image`.\n * @typedef {Object} AtlasInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n */\n\nclass Atlas {\n\n  /**\n   * This class facilitates the creation of image atlases.\n   *\n   * Images added to an atlas will be rendered onto a single\n   * atlas canvas. The distribution of images on the canvas is\n   * managed with the bin packing algorithm described in:\n   * http://www.blackpawn.com/texts/lightmaps/\n   *\n   * @param {number} size The size in pixels of the sprite image.\n   * @param {number} space The space in pixels between images.\n   *    Because texture coordinates are float values, the edges of\n   *    images might not be completely correct (in a way that the\n   *    edges overlap when being rendered). To avoid this we add a\n   *    padding around each image.\n   */\n  constructor(size, space) {\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.space_ = space;\n\n    /**\n     * @private\n     * @type {Array.<module:ol/style/Atlas~AtlasBlock>}\n     */\n    this.emptyBlocks_ = [{x: 0, y: 0, width: size, height: size}];\n\n    /**\n     * @private\n     * @type {Object.<string, module:ol/style/Atlas~AtlasInfo>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D(size, size);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = this.context_.canvas;\n  }\n\n  /**\n   * @param {string} id The identifier of the entry to check.\n   * @return {?module:ol/style/Atlas~AtlasInfo} The atlas info.\n   */\n  get(id) {\n    return this.entries_[id] || null;\n  }\n\n  /**\n   * @param {string} id The identifier of the entry to add.\n   * @param {number} width The width.\n   * @param {number} height The height.\n   * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n   *    Called to render the new image onto an atlas image.\n   * @param {Object=} opt_this Value to use as `this` when executing\n   *    `renderCallback`.\n   * @return {?module:ol/style/Atlas~AtlasInfo} The position and atlas image for the entry.\n   */\n  add(id, width, height, renderCallback, opt_this) {\n    for (let i = 0, ii = this.emptyBlocks_.length; i < ii; ++i) {\n      const block = this.emptyBlocks_[i];\n      if (block.width >= width + this.space_ &&\n          block.height >= height + this.space_) {\n        // we found a block that is big enough for our entry\n        const entry = {\n          offsetX: block.x + this.space_,\n          offsetY: block.y + this.space_,\n          image: this.canvas_\n        };\n        this.entries_[id] = entry;\n\n        // render the image on the atlas image\n        renderCallback.call(opt_this, this.context_,\n          block.x + this.space_, block.y + this.space_);\n\n        // split the block after the insertion, either horizontally or vertically\n        this.split_(i, block, width + this.space_, height + this.space_);\n\n        return entry;\n      }\n    }\n\n    // there is no space for the new entry in this atlas\n    return null;\n  }\n\n  /**\n   * @private\n   * @param {number} index The index of the block.\n   * @param {module:ol/style/Atlas~AtlasBlock} block The block to split.\n   * @param {number} width The width of the entry to insert.\n   * @param {number} height The height of the entry to insert.\n   */\n  split_(index, block, width, height) {\n    const deltaWidth = block.width - width;\n    const deltaHeight = block.height - height;\n\n    /** @type {module:ol/style/Atlas~AtlasBlock} */\n    let newBlock1;\n    /** @type {module:ol/style/Atlas~AtlasBlock} */\n    let newBlock2;\n\n    if (deltaWidth > deltaHeight) {\n      // split vertically\n      // block right of the inserted entry\n      newBlock1 = {\n        x: block.x + width,\n        y: block.y,\n        width: block.width - width,\n        height: block.height\n      };\n\n      // block below the inserted entry\n      newBlock2 = {\n        x: block.x,\n        y: block.y + height,\n        width: width,\n        height: block.height - height\n      };\n      this.updateBlocks_(index, newBlock1, newBlock2);\n    } else {\n      // split horizontally\n      // block right of the inserted entry\n      newBlock1 = {\n        x: block.x + width,\n        y: block.y,\n        width: block.width - width,\n        height: height\n      };\n\n      // block below the inserted entry\n      newBlock2 = {\n        x: block.x,\n        y: block.y + height,\n        width: block.width,\n        height: block.height - height\n      };\n      this.updateBlocks_(index, newBlock1, newBlock2);\n    }\n  }\n\n  /**\n   * Remove the old block and insert new blocks at the same array position.\n   * The new blocks are inserted at the same position, so that splitted\n   * blocks (that are potentially smaller) are filled first.\n   * @private\n   * @param {number} index The index of the block to remove.\n   * @param {module:ol/style/Atlas~AtlasBlock} newBlock1 The 1st block to add.\n   * @param {module:ol/style/Atlas~AtlasBlock} newBlock2 The 2nd block to add.\n   */\n  updateBlocks_(index, newBlock1, newBlock2) {\n    const args = [index, 1];\n    if (newBlock1.width > 0 && newBlock1.height > 0) {\n      args.push(newBlock1);\n    }\n    if (newBlock2.width > 0 && newBlock2.height > 0) {\n      args.push(newBlock2);\n    }\n    this.emptyBlocks_.splice.apply(this.emptyBlocks_, args);\n  }\n}\n\nexport default Atlas;\n","/**\n * @module ol/style/AtlasManager\n */\nimport {MAX_TEXTURE_SIZE as WEBGL_MAX_TEXTURE_SIZE} from '../webgl.js';\nimport {UNDEFINED} from '../functions.js';\nimport Atlas from '../style/Atlas.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [initialSize=256] The size in pixels of the first atlas image.\n * @property {number} [maxSize] The maximum size in pixels of atlas images. Default is\n * `webgl/MAX_TEXTURE_SIZE` or 2048 if WebGL is not supported.\n * @property {number} [space=1] The space in pixels between images.\n */\n\n\n/**\n * Provides information for an image inside an atlas manager.\n * `offsetX` and `offsetY` is the position of the image inside\n * the atlas image `image` and the position of the hit-detection image\n * inside the hit-detection atlas image `hitImage`.\n * @typedef {Object} AtlasManagerInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n * @property {HTMLCanvasElement} hitImage\n */\n\n\n/**\n * The size in pixels of the first atlas image.\n * @type {number}\n */\nconst INITIAL_ATLAS_SIZE = 256;\n\n/**\n * The maximum size in pixels of atlas images.\n * @type {number}\n */\nconst MAX_ATLAS_SIZE = -1;\n\n\nclass AtlasManager {\n  /**\n   * Manages the creation of image atlases.\n   *\n   * Images added to this manager will be inserted into an atlas, which\n   * will be used for rendering.\n   * The `size` given in the constructor is the size for the first\n   * atlas. After that, when new atlases are created, they will have\n   * twice the size as the latest atlas (until `maxSize` is reached).\n   *\n   * If an application uses many images or very large images, it is recommended\n   * to set a higher `size` value to avoid the creation of too many atlases.\n   *\n   * @api\n   * @param {module:ol/style/AtlasManager~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    /**\n     * The size in pixels of the latest atlas image.\n     * @private\n     * @type {number}\n     */\n    this.currentSize_ = options.initialSize !== undefined ?\n      options.initialSize : INITIAL_ATLAS_SIZE;\n\n    /**\n     * The maximum size in pixels of atlas images.\n     * @private\n     * @type {number}\n     */\n    this.maxSize_ = options.maxSize !== undefined ?\n      options.maxSize : MAX_ATLAS_SIZE != -1 ?\n        MAX_ATLAS_SIZE : WEBGL_MAX_TEXTURE_SIZE !== undefined ?\n          WEBGL_MAX_TEXTURE_SIZE : 2048;\n\n    /**\n     * The size in pixels between images.\n     * @private\n     * @type {number}\n     */\n    this.space_ = options.space !== undefined ? options.space : 1;\n\n    /**\n     * @private\n     * @type {Array.<module:ol/style/Atlas>}\n     */\n    this.atlases_ = [new Atlas(this.currentSize_, this.space_)];\n\n    /**\n     * The size in pixels of the latest atlas image for hit-detection images.\n     * @private\n     * @type {number}\n     */\n    this.currentHitSize_ = this.currentSize_;\n\n    /**\n     * @private\n     * @type {Array.<module:ol/style/Atlas>}\n     */\n    this.hitAtlases_ = [new Atlas(this.currentHitSize_, this.space_)];\n  }\n\n  /**\n   * @param {string} id The identifier of the entry to check.\n   * @return {?module:ol/style/AtlasManager~AtlasManagerInfo} The position and atlas image for the\n   *    entry, or `null` if the entry is not part of the atlas manager.\n   */\n  getInfo(id) {\n    /** @type {?module:ol/style/Atlas~AtlasInfo} */\n    const info = this.getInfo_(this.atlases_, id);\n\n    if (!info) {\n      return null;\n    }\n    const hitInfo = /** @type {module:ol/style/Atlas~AtlasInfo} */ (this.getInfo_(this.hitAtlases_, id));\n\n    return this.mergeInfos_(info, hitInfo);\n  }\n\n  /**\n   * @private\n   * @param {Array.<module:ol/style/Atlas>} atlases The atlases to search.\n   * @param {string} id The identifier of the entry to check.\n   * @return {?module:ol/style/Atlas~AtlasInfo} The position and atlas image for the entry,\n   *    or `null` if the entry is not part of the atlases.\n   */\n  getInfo_(atlases, id) {\n    for (let i = 0, ii = atlases.length; i < ii; ++i) {\n      const atlas = atlases[i];\n      const info = atlas.get(id);\n      if (info) {\n        return info;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @private\n   * @param {module:ol/style/Atlas~AtlasInfo} info The info for the real image.\n   * @param {module:ol/style/Atlas~AtlasInfo} hitInfo The info for the hit-detection\n   *    image.\n   * @return {?module:ol/style/AtlasManager~AtlasManagerInfo} The position and atlas image for the\n   *    entry, or `null` if the entry is not part of the atlases.\n   */\n  mergeInfos_(info, hitInfo) {\n    return (\n      /** @type {module:ol/style/AtlasManager~AtlasManagerInfo} */ ({\n        offsetX: info.offsetX,\n        offsetY: info.offsetY,\n        image: info.image,\n        hitImage: hitInfo.image\n      })\n    );\n  }\n\n  /**\n   * Add an image to the atlas manager.\n   *\n   * If an entry for the given id already exists, the entry will\n   * be overridden (but the space on the atlas graphic will not be freed).\n   *\n   * If `renderHitCallback` is provided, the image (or the hit-detection version\n   * of the image) will be rendered into a separate hit-detection atlas image.\n   *\n   * @param {string} id The identifier of the entry to add.\n   * @param {number} width The width.\n   * @param {number} height The height.\n   * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n   *    Called to render the new image onto an atlas image.\n   * @param {function(CanvasRenderingContext2D, number, number)=}\n   *    opt_renderHitCallback Called to render a hit-detection image onto a hit\n   *    detection atlas image.\n   * @param {Object=} opt_this Value to use as `this` when executing\n   *    `renderCallback` and `renderHitCallback`.\n   * @return {?module:ol/style/AtlasManager~AtlasManagerInfo}  The position and atlas image for the\n   *    entry, or `null` if the image is too big.\n   */\n  add(id, width, height, renderCallback, opt_renderHitCallback, opt_this) {\n    if (width + this.space_ > this.maxSize_ ||\n        height + this.space_ > this.maxSize_) {\n      return null;\n    }\n\n    /** @type {?module:ol/style/Atlas~AtlasInfo} */\n    const info = this.add_(false, id, width, height, renderCallback, opt_this);\n    if (!info) {\n      return null;\n    }\n\n    // even if no hit-detection entry is requested, we insert a fake entry into\n    // the hit-detection atlas, to make sure that the offset is the same for\n    // the original image and the hit-detection image.\n    const renderHitCallback = opt_renderHitCallback !== undefined ?\n      opt_renderHitCallback : UNDEFINED;\n\n    const hitInfo = /** @type {module:ol/style/Atlas~AtlasInfo} */ (this.add_(true,\n      id, width, height, renderHitCallback, opt_this));\n\n    return this.mergeInfos_(info, hitInfo);\n  }\n\n  /**\n   * @private\n   * @param {boolean} isHitAtlas If the hit-detection atlases are used.\n   * @param {string} id The identifier of the entry to add.\n   * @param {number} width The width.\n   * @param {number} height The height.\n   * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n   *    Called to render the new image onto an atlas image.\n   * @param {Object=} opt_this Value to use as `this` when executing\n   *    `renderCallback` and `renderHitCallback`.\n   * @return {?module:ol/style/Atlas~AtlasInfo}  The position and atlas image for the entry,\n   *    or `null` if the image is too big.\n   */\n  add_(isHitAtlas, id, width, height, renderCallback, opt_this) {\n    const atlases = (isHitAtlas) ? this.hitAtlases_ : this.atlases_;\n    let atlas, info, i, ii;\n    for (i = 0, ii = atlases.length; i < ii; ++i) {\n      atlas = atlases[i];\n      info = atlas.add(id, width, height, renderCallback, opt_this);\n      if (info) {\n        return info;\n      } else if (!info && i === ii - 1) {\n        // the entry could not be added to one of the existing atlases,\n        // create a new atlas that is twice as big and try to add to this one.\n        let size;\n        if (isHitAtlas) {\n          size = Math.min(this.currentHitSize_ * 2, this.maxSize_);\n          this.currentHitSize_ = size;\n        } else {\n          size = Math.min(this.currentSize_ * 2, this.maxSize_);\n          this.currentSize_ = size;\n        }\n        atlas = new Atlas(size, this.space_);\n        atlases.push(atlas);\n        // run the loop another time\n        ++ii;\n      }\n    }\n    return null;\n  }\n}\n\nexport default AtlasManager;\n","/**\n * @module ol/render/webgl/TextReplay\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {DEFAULT_FILLSTYLE, DEFAULT_FONT, DEFAULT_LINECAP, DEFAULT_LINEDASH,\n  DEFAULT_LINEDASHOFFSET, DEFAULT_LINEJOIN, DEFAULT_LINEWIDTH, DEFAULT_MITERLIMIT,\n  DEFAULT_STROKESTYLE, DEFAULT_TEXTALIGN, DEFAULT_TEXTBASELINE} from '../webgl.js';\nimport WebGLTextureReplay from '../webgl/TextureReplay.js';\nimport AtlasManager from '../../style/AtlasManager.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n/**\n * @typedef {Object} GlyphAtlas\n * @property {module:ol/style/AtlasManager} atlas\n * @property {Object.<string, number>} width\n * @property {number} height\n */\n\n\nclass WebGLTextReplay extends WebGLTextureReplay {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {module:ol/extent~Extent} maxExtent Max extent.\n   */\n  constructor(tolerance, maxExtent) {\n    super(tolerance, maxExtent);\n\n    /**\n     * @private\n     * @type {Array.<HTMLCanvasElement>}\n     */\n    this.images_ = [];\n\n    /**\n     * @private\n     * @type {Array.<WebGLTexture>}\n     */\n    this.textures_ = [];\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.measureCanvas_ = createCanvasContext2D(0, 0).canvas;\n\n    /**\n     * @private\n     * @type {{strokeColor: (module:ol/colorlike~ColorLike|null),\n     *         lineCap: (string|undefined),\n     *         lineDash: Array.<number>,\n     *         lineDashOffset: (number|undefined),\n     *         lineJoin: (string|undefined),\n     *         lineWidth: number,\n     *         miterLimit: (number|undefined),\n     *         fillColor: (module:ol/colorlike~ColorLike|null),\n     *         font: (string|undefined),\n     *         scale: (number|undefined)}}\n     */\n    this.state_ = {\n      strokeColor: null,\n      lineCap: undefined,\n      lineDash: null,\n      lineDashOffset: undefined,\n      lineJoin: undefined,\n      lineWidth: 0,\n      miterLimit: undefined,\n      fillColor: null,\n      font: undefined,\n      scale: undefined\n    };\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.textAlign_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.textBaseline_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.offsetX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.offsetY_ = undefined;\n\n    /**\n     * @private\n     * @type {Object.<string, module:ol/render/webgl/TextReplay~GlyphAtlas>}\n     */\n    this.atlases_ = {};\n\n    /**\n     * @private\n     * @type {module:ol/render/webgl/TextReplay~GlyphAtlas|undefined}\n     */\n    this.currAtlas_ = undefined;\n\n    this.scale = 1;\n\n    this.opacity = 1;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawText(geometry, feature) {\n    if (this.text_) {\n      let flatCoordinates = null;\n      const offset = 0;\n      let end = 2;\n      let stride = 2;\n      switch (geometry.getType()) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          stride = geometry.getStride();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {module:ol/geom/Circle} */ (geometry).getCenter();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {module:ol/geom/LineString} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {module:ol/geom/MultiLineString} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getFlatInteriorPoint();\n          break;\n        case GeometryType.MULTI_POLYGON:\n          flatCoordinates = /** @type {module:ol/geom/MultiPolygon} */ (geometry).getFlatInteriorPoints();\n          end = flatCoordinates.length;\n          break;\n        default:\n      }\n      this.startIndices.push(this.indices.length);\n      this.startIndicesFeature.push(feature);\n\n      const glyphAtlas = this.currAtlas_;\n      const lines = this.text_.split('\\n');\n      const textSize = this.getTextSize_(lines);\n      let i, ii, j, jj, currX, currY, charArr, charInfo;\n      const anchorX = Math.round(textSize[0] * this.textAlign_ - this.offsetX_);\n      const anchorY = Math.round(textSize[1] * this.textBaseline_ - this.offsetY_);\n      const lineWidth = (this.state_.lineWidth / 2) * this.state_.scale;\n\n      for (i = 0, ii = lines.length; i < ii; ++i) {\n        currX = 0;\n        currY = glyphAtlas.height * i;\n        charArr = lines[i].split('');\n\n        for (j = 0, jj = charArr.length; j < jj; ++j) {\n          charInfo = glyphAtlas.atlas.getInfo(charArr[j]);\n\n          if (charInfo) {\n            const image = charInfo.image;\n\n            this.anchorX = anchorX - currX;\n            this.anchorY = anchorY - currY;\n            this.originX = j === 0 ? charInfo.offsetX - lineWidth : charInfo.offsetX;\n            this.originY = charInfo.offsetY;\n            this.height = glyphAtlas.height;\n            this.width = j === 0 || j === charArr.length - 1 ?\n              glyphAtlas.width[charArr[j]] + lineWidth : glyphAtlas.width[charArr[j]];\n            this.imageHeight = image.height;\n            this.imageWidth = image.width;\n\n            if (this.images_.length === 0) {\n              this.images_.push(image);\n            } else {\n              const currentImage = this.images_[this.images_.length - 1];\n              if (getUid(currentImage) != getUid(image)) {\n                this.groupIndices.push(this.indices.length);\n                this.images_.push(image);\n              }\n            }\n\n            this.drawText_(flatCoordinates, offset, end, stride);\n          }\n          currX += this.width;\n        }\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {Array.<string>} lines Label to draw split to lines.\n   * @return {Array.<number>} Size of the label in pixels.\n   */\n  getTextSize_(lines) {\n    const self = this;\n    const glyphAtlas = this.currAtlas_;\n    const textHeight = lines.length * glyphAtlas.height;\n    //Split every line to an array of chars, sum up their width, and select the longest.\n    const textWidth = lines.map(function(str) {\n      let sum = 0;\n      for (let i = 0, ii = str.length; i < ii; ++i) {\n        const curr = str[i];\n        if (!glyphAtlas.width[curr]) {\n          self.addCharToAtlas_(curr);\n        }\n        sum += glyphAtlas.width[curr] ? glyphAtlas.width[curr] : 0;\n      }\n      return sum;\n    }).reduce(function(max, curr) {\n      return Math.max(max, curr);\n    });\n\n    return [textWidth, textHeight];\n  }\n\n  /**\n   * @private\n   * @param {Array.<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    for (let i = offset, ii = end; i < ii; i += stride) {\n      this.drawCoordinates(flatCoordinates, offset, end, stride);\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} char Character.\n   */\n  addCharToAtlas_(char) {\n    if (char.length === 1) {\n      const glyphAtlas = this.currAtlas_;\n      const state = this.state_;\n      const mCtx = this.measureCanvas_.getContext('2d');\n      mCtx.font = state.font;\n      const width = Math.ceil(mCtx.measureText(char).width * state.scale);\n\n      const info = glyphAtlas.atlas.add(char, width, glyphAtlas.height,\n        function(ctx, x, y) {\n          //Parameterize the canvas\n          ctx.font = /** @type {string} */ (state.font);\n          ctx.fillStyle = state.fillColor;\n          ctx.strokeStyle = state.strokeColor;\n          ctx.lineWidth = state.lineWidth;\n          ctx.lineCap = /*** @type {string} */ (state.lineCap);\n          ctx.lineJoin = /** @type {string} */ (state.lineJoin);\n          ctx.miterLimit = /** @type {number} */ (state.miterLimit);\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          if (CANVAS_LINE_DASH && state.lineDash) {\n            //FIXME: use pixelRatio\n            ctx.setLineDash(state.lineDash);\n            ctx.lineDashOffset = /** @type {number} */ (state.lineDashOffset);\n          }\n          if (state.scale !== 1) {\n            //FIXME: use pixelRatio\n            ctx.setTransform(/** @type {number} */ (state.scale), 0, 0,\n              /** @type {number} */ (state.scale), 0, 0);\n          }\n\n          //Draw the character on the canvas\n          if (state.strokeColor) {\n            ctx.strokeText(char, x, y);\n          }\n          if (state.fillColor) {\n            ctx.fillText(char, x, y);\n          }\n        });\n\n      if (info) {\n        glyphAtlas.width[char] = width;\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  finish(context) {\n    const gl = context.getGL();\n\n    this.groupIndices.push(this.indices.length);\n    this.hitDetectionGroupIndices = this.groupIndices;\n\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(this.indices);\n\n    // create textures\n    /** @type {Object.<string, WebGLTexture>} */\n    const texturePerImage = {};\n\n    this.createTextures(this.textures_, this.images_, texturePerImage, gl);\n\n    this.state_ = {\n      strokeColor: null,\n      lineCap: undefined,\n      lineDash: null,\n      lineDashOffset: undefined,\n      lineJoin: undefined,\n      lineWidth: 0,\n      miterLimit: undefined,\n      fillColor: null,\n      font: undefined,\n      scale: undefined\n    };\n    this.text_ = '';\n    this.textAlign_ = undefined;\n    this.textBaseline_ = undefined;\n    this.offsetX_ = undefined;\n    this.offsetY_ = undefined;\n    this.images_ = null;\n    this.atlases_ = {};\n    this.currAtlas_ = undefined;\n    WebGLTextureReplay.prototype.finish.call(this, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setTextStyle(textStyle) {\n    const state = this.state_;\n    const textFillStyle = textStyle.getFill();\n    const textStrokeStyle = textStyle.getStroke();\n    if (!textStyle || !textStyle.getText() || (!textFillStyle && !textStrokeStyle)) {\n      this.text_ = '';\n    } else {\n      if (!textFillStyle) {\n        state.fillColor = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        state.fillColor = asColorLike(textFillStyleColor ?\n          textFillStyleColor : DEFAULT_FILLSTYLE);\n      }\n      if (!textStrokeStyle) {\n        state.strokeColor = null;\n        state.lineWidth = 0;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        state.strokeColor = asColorLike(textStrokeStyleColor ?\n          textStrokeStyleColor : DEFAULT_STROKESTYLE);\n        state.lineWidth = textStrokeStyle.getWidth() || DEFAULT_LINEWIDTH;\n        state.lineCap = textStrokeStyle.getLineCap() || DEFAULT_LINECAP;\n        state.lineDashOffset = textStrokeStyle.getLineDashOffset() || DEFAULT_LINEDASHOFFSET;\n        state.lineJoin = textStrokeStyle.getLineJoin() || DEFAULT_LINEJOIN;\n        state.miterLimit = textStrokeStyle.getMiterLimit() || DEFAULT_MITERLIMIT;\n        const lineDash = textStrokeStyle.getLineDash();\n        state.lineDash = lineDash ? lineDash.slice() : DEFAULT_LINEDASH;\n      }\n      state.font = textStyle.getFont() || DEFAULT_FONT;\n      state.scale = textStyle.getScale() || 1;\n      this.text_ = /** @type {string} */ (textStyle.getText());\n      const textAlign = TEXT_ALIGN[textStyle.getTextAlign()];\n      const textBaseline = TEXT_ALIGN[textStyle.getTextBaseline()];\n      this.textAlign_ = textAlign === undefined ?\n        DEFAULT_TEXTALIGN : textAlign;\n      this.textBaseline_ = textBaseline === undefined ?\n        DEFAULT_TEXTBASELINE : textBaseline;\n      this.offsetX_ = textStyle.getOffsetX() || 0;\n      this.offsetY_ = textStyle.getOffsetY() || 0;\n      this.rotateWithView = !!textStyle.getRotateWithView();\n      this.rotation = textStyle.getRotation() || 0;\n\n      this.currAtlas_ = this.getAtlas_(state);\n    }\n  }\n\n  /**\n   * @private\n   * @param {Object} state Font attributes.\n   * @return {module:ol/render/webgl/TextReplay~GlyphAtlas} Glyph atlas.\n   */\n  getAtlas_(state) {\n    let params = [];\n    for (const i in state) {\n      if (state[i] || state[i] === 0) {\n        if (Array.isArray(state[i])) {\n          params = params.concat(state[i]);\n        } else {\n          params.push(state[i]);\n        }\n      }\n    }\n    const hash = this.calculateHash_(params);\n    if (!this.atlases_[hash]) {\n      const mCtx = this.measureCanvas_.getContext('2d');\n      mCtx.font = state.font;\n      const height = Math.ceil((mCtx.measureText('M').width * 1.5 +\n          state.lineWidth / 2) * state.scale);\n\n      this.atlases_[hash] = {\n        atlas: new AtlasManager({\n          space: state.lineWidth + 1\n        }),\n        width: {},\n        height: height\n      };\n    }\n    return this.atlases_[hash];\n  }\n\n  /**\n   * @private\n   * @param {Array.<string|number>} params Array of parameters.\n   * @return {string} Hash string.\n   */\n  calculateHash_(params) {\n    //TODO: Create a more performant, reliable, general hash function.\n    let hash = '';\n    for (let i = 0, ii = params.length; i < ii; ++i) {\n      hash += params[i];\n    }\n    return hash;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTextures(opt_all) {\n    return this.textures_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getHitDetectionTextures() {\n    return this.textures_;\n  }\n}\n\n\nexport default WebGLTextReplay;\n","/**\n * @module ol/render/webgl/ReplayGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {buffer, createOrUpdateFromCoordinate} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {ORDER} from '../replay.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport WebGLCircleReplay from '../webgl/CircleReplay.js';\nimport WebGLImageReplay from '../webgl/ImageReplay.js';\nimport WebGLLineStringReplay from '../webgl/LineStringReplay.js';\nimport WebGLPolygonReplay from '../webgl/PolygonReplay.js';\nimport WebGLTextReplay from '../webgl/TextReplay.js';\n\n/**\n * @type {Array.<number>}\n */\nconst HIT_DETECTION_SIZE = [1, 1];\n\n/**\n * @type {Object.<module:ol/render/ReplayType,\n *                function(new: module:ol/render/webgl/Replay, number,\n *                module:ol/extent~Extent)>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': WebGLCircleReplay,\n  'Image': WebGLImageReplay,\n  'LineString': WebGLLineStringReplay,\n  'Polygon': WebGLPolygonReplay,\n  'Text': WebGLTextReplay\n};\n\n\nclass WebGLReplayGroup extends ReplayGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {module:ol/extent~Extent} maxExtent Max extent.\n   * @param {number=} opt_renderBuffer Render buffer.\n   */\n  constructor(tolerance, maxExtent, opt_renderBuffer) {\n    super();\n\n    /**\n     * @type {module:ol/extent~Extent}\n     * @private\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object.<string,\n     *        Object.<module:ol/render/ReplayType, module:ol/render/webgl/Replay>>}\n     */\n    this.replaysByZIndex_ = {};\n\n  }\n\n  /**\n   * @param {module:ol/style/Style} style Style.\n   * @param {boolean} group Group with previous replay.\n   */\n  addDeclutter(style, group) {}\n\n  /**\n   * @param {module:ol/webgl/Context} context WebGL context.\n   * @return {function()} Delete resources function.\n   */\n  getDeleteResourcesFunction(context) {\n    const functions = [];\n    let zKey;\n    for (zKey in this.replaysByZIndex_) {\n      const replays = this.replaysByZIndex_[zKey];\n      for (const replayKey in replays) {\n        functions.push(\n          replays[replayKey].getDeleteResourcesFunction(context));\n      }\n    }\n    return function() {\n      const length = functions.length;\n      let result;\n      for (let i = 0; i < length; i++) {\n        result = functions[i].apply(this, arguments);\n      }\n      return result;\n    };\n  }\n\n  /**\n   * @param {module:ol/webgl/Context} context Context.\n   */\n  finish(context) {\n    let zKey;\n    for (zKey in this.replaysByZIndex_) {\n      const replays = this.replaysByZIndex_[zKey];\n      for (const replayKey in replays) {\n        replays[replayKey].finish(context);\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getReplay(zIndex, replayType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.replaysByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.replaysByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[replayType];\n    if (replay === undefined) {\n      /**\n       * @type {Function}\n       */\n      const Constructor = BATCH_CONSTRUCTORS[replayType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_);\n      replays[replayType] = replay;\n    }\n    return replay;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  isEmpty() {\n    return isEmpty(this.replaysByZIndex_);\n  }\n\n  /**\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {module:ol/coordinate~Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   */\n  replay(\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash\n  ) {\n    /** @type {Array.<number>} */\n    const zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      replays = this.replaysByZIndex_[zs[i].toString()];\n      for (j = 0, jj = ORDER.length; j < jj; ++j) {\n        replay = replays[ORDER[j]];\n        if (replay !== undefined) {\n          replay.replay(context,\n            center, resolution, rotation, size, pixelRatio,\n            opacity, skippedFeaturesHash,\n            undefined, false);\n        }\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {module:ol/coordinate~Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n   * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n   * @param {module:ol/extent~Extent=} opt_hitExtent Hit extent: Only features intersecting\n   *  this extent are checked.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  replayHitDetection_(\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash,\n    featureCallback,\n    oneByOne,\n    opt_hitExtent\n  ) {\n    /** @type {Array.<number>} */\n    const zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(function(a, b) {\n      return b - a;\n    });\n\n    let i, ii, j, replays, replay, result;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      replays = this.replaysByZIndex_[zs[i].toString()];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        replay = replays[ORDER[j]];\n        if (replay !== undefined) {\n          result = replay.replay(context,\n            center, resolution, rotation, size, pixelRatio, opacity,\n            skippedFeaturesHash, featureCallback, oneByOne, opt_hitExtent);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {module:ol/coordinate~Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} callback Feature callback.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash,\n    callback\n  ) {\n    const gl = context.getGL();\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER, context.getHitDetectionFramebuffer());\n\n\n    /**\n     * @type {module:ol/extent~Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      // build an extent around the coordinate, so that only features that\n      // intersect this extent are checked\n      hitExtent = buffer(createOrUpdateFromCoordinate(coordinate), resolution * this.renderBuffer_);\n    }\n\n    return this.replayHitDetection_(context,\n      coordinate, resolution, rotation, HIT_DETECTION_SIZE,\n      pixelRatio, opacity, skippedFeaturesHash,\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        const imageData = new Uint8Array(4);\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n\n        if (imageData[3] > 0) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }, true, hitExtent);\n  }\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {module:ol/coordinate~Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @return {boolean} Is there a feature at the given coordinate?\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash\n  ) {\n    const gl = context.getGL();\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER, context.getHitDetectionFramebuffer());\n\n    const hasFeature = this.replayHitDetection_(context,\n      coordinate, resolution, rotation, HIT_DETECTION_SIZE,\n      pixelRatio, opacity, skippedFeaturesHash,\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @return {boolean} Is there a feature?\n       */\n      function(feature) {\n        const imageData = new Uint8Array(4);\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n        return imageData[3] > 0;\n      }, false);\n\n    return hasFeature !== undefined;\n  }\n}\n\n\nexport default WebGLReplayGroup;\n","/**\n * @module ol/render/webgl/Immediate\n */\n\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport ReplayType from '../ReplayType.js';\nimport VectorContext from '../VectorContext.js';\nimport WebGLReplayGroup from '../webgl/ReplayGroup.js';\n\nclass WebGLImmediateRenderer extends VectorContext {\n  /**\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {module:ol/coordinate~Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {module:ol/size~Size} size Size.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(context, center, resolution, rotation, size, extent, pixelRatio) {\n    super();\n\n    /**\n     * @private\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     */\n    this.center_ = center;\n\n    /**\n     * @private\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     */\n    this.rotation_ = rotation;\n\n    /**\n     * @private\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {module:ol/style/Image}\n     */\n    this.imageStyle_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/style/Fill}\n     */\n    this.fillStyle_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/style/Stroke}\n     */\n    this.strokeStyle_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/style/Text}\n     */\n    this.textStyle_ = null;\n\n  }\n\n  /**\n   * @param {module:ol/render/webgl/ReplayGroup} replayGroup Replay group.\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   * @private\n   */\n  drawText_(replayGroup, geometry) {\n    const context = this.context_;\n    const replay = /** @type {module:ol/render/webgl/TextReplay} */ (\n      replayGroup.getReplay(0, ReplayType.TEXT));\n    replay.setTextStyle(this.textStyle_);\n    replay.drawText(geometry, null);\n    replay.finish(context);\n    // default colors\n    const opacity = 1;\n    const skippedFeatures = {};\n    let featureCallback;\n    const oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {module:ol/style/Style} style The rendering style.\n   * @override\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link ol/render/webgl/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {module:ol/geom/Point} */ (geometry), null);\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {module:ol/geom/LineString} */ (geometry), null);\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {module:ol/geom/Polygon} */ (geometry), null);\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {module:ol/geom/MultiPoint} */ (geometry), null);\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {module:ol/geom/MultiLineString} */ (geometry), null);\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {module:ol/geom/MultiPolygon} */ (geometry), null);\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {module:ol/geom/GeometryCollection} */ (geometry), null);\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {module:ol/geom/Circle} */ (geometry), null);\n        break;\n      default:\n        // pass\n    }\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawGeometryCollection(geometry, data) {\n    const geometries = geometry.getGeometriesArray();\n    let i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawPoint(geometry, data) {\n    const context = this.context_;\n    const replayGroup = new WebGLReplayGroup(1, this.extent_);\n    const replay = /** @type {module:ol/render/webgl/ImageReplay} */ (\n      replayGroup.getReplay(0, ReplayType.IMAGE));\n    replay.setImageStyle(this.imageStyle_);\n    replay.drawPoint(geometry, data);\n    replay.finish(context);\n    // default colors\n    const opacity = 1;\n    const skippedFeatures = {};\n    let featureCallback;\n    const oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawMultiPoint(geometry, data) {\n    const context = this.context_;\n    const replayGroup = new WebGLReplayGroup(1, this.extent_);\n    const replay = /** @type {module:ol/render/webgl/ImageReplay} */ (\n      replayGroup.getReplay(0, ReplayType.IMAGE));\n    replay.setImageStyle(this.imageStyle_);\n    replay.drawMultiPoint(geometry, data);\n    replay.finish(context);\n    const opacity = 1;\n    const skippedFeatures = {};\n    let featureCallback;\n    const oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawLineString(geometry, data) {\n    const context = this.context_;\n    const replayGroup = new WebGLReplayGroup(1, this.extent_);\n    const replay = /** @type {module:ol/render/webgl/LineStringReplay} */ (\n      replayGroup.getReplay(0, ReplayType.LINE_STRING));\n    replay.setFillStrokeStyle(null, this.strokeStyle_);\n    replay.drawLineString(geometry, data);\n    replay.finish(context);\n    const opacity = 1;\n    const skippedFeatures = {};\n    let featureCallback;\n    const oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawMultiLineString(geometry, data) {\n    const context = this.context_;\n    const replayGroup = new WebGLReplayGroup(1, this.extent_);\n    const replay = /** @type {module:ol/render/webgl/LineStringReplay} */ (\n      replayGroup.getReplay(0, ReplayType.LINE_STRING));\n    replay.setFillStrokeStyle(null, this.strokeStyle_);\n    replay.drawMultiLineString(geometry, data);\n    replay.finish(context);\n    const opacity = 1;\n    const skippedFeatures = {};\n    let featureCallback;\n    const oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawPolygon(geometry, data) {\n    const context = this.context_;\n    const replayGroup = new WebGLReplayGroup(1, this.extent_);\n    const replay = /** @type {module:ol/render/webgl/PolygonReplay} */ (\n      replayGroup.getReplay(0, ReplayType.POLYGON));\n    replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n    replay.drawPolygon(geometry, data);\n    replay.finish(context);\n    const opacity = 1;\n    const skippedFeatures = {};\n    let featureCallback;\n    const oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawMultiPolygon(geometry, data) {\n    const context = this.context_;\n    const replayGroup = new WebGLReplayGroup(1, this.extent_);\n    const replay = /** @type {module:ol/render/webgl/PolygonReplay} */ (\n      replayGroup.getReplay(0, ReplayType.POLYGON));\n    replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n    replay.drawMultiPolygon(geometry, data);\n    replay.finish(context);\n    const opacity = 1;\n    const skippedFeatures = {};\n    let featureCallback;\n    const oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawCircle(geometry, data) {\n    const context = this.context_;\n    const replayGroup = new WebGLReplayGroup(1, this.extent_);\n    const replay = /** @type {module:ol/render/webgl/CircleReplay} */ (\n      replayGroup.getReplay(0, ReplayType.CIRCLE));\n    replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n    replay.drawCircle(geometry, data);\n    replay.finish(context);\n    const opacity = 1;\n    const skippedFeatures = {};\n    let featureCallback;\n    const oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setImageStyle(imageStyle) {\n    this.imageStyle_ = imageStyle;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    this.fillStyle_ = fillStyle;\n    this.strokeStyle_ = strokeStyle;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setTextStyle(textStyle) {\n    this.textStyle_ = textStyle;\n  }\n}\n\n\nexport default WebGLImmediateRenderer;\n","/**\n * @module ol/renderer/webgl/defaultmapshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../webgl.js';\nimport WebGLFragment from '../../webgl/Fragment.js';\nimport WebGLVertex from '../../webgl/Vertex.js';\n\nexport const fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\n\\n\\nuniform float u_opacity;\\nuniform sampler2D u_texture;\\n\\nvoid main(void) {\\n  vec4 texColor = texture2D(u_texture, v_texCoord);\\n  gl_FragColor.rgb = texColor.rgb;\\n  gl_FragColor.a = texColor.a * u_opacity;\\n}\\n' :\n  'precision mediump float;varying vec2 a;uniform float f;uniform sampler2D g;void main(void){vec4 texColor=texture2D(g,a);gl_FragColor.rgb=texColor.rgb;gl_FragColor.a=texColor.a*f;}');\n\nexport const vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\n\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\n\\nuniform mat4 u_texCoordMatrix;\\nuniform mat4 u_projectionMatrix;\\n\\nvoid main(void) {\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0., 1.);\\n  v_texCoord = (u_texCoordMatrix * vec4(a_texCoord, 0., 1.)).st;\\n}\\n\\n\\n' :\n  'varying vec2 a;attribute vec2 b;attribute vec2 c;uniform mat4 d;uniform mat4 e;void main(void){gl_Position=e*vec4(b,0.,1.);a=(d*vec4(c,0.,1.)).st;}');\n","/**\n * @module ol/renderer/webgl/defaultmapshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\n\nclass Locations {\n\n  /**\n   * @param {WebGLRenderingContext} gl GL.\n   * @param {WebGLProgram} program Program.\n   */\n  constructor(gl, program) {\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_texCoordMatrix = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_texCoordMatrix' : 'd');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_projectionMatrix = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'e');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_opacity = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_opacity' : 'f');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_texture = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_texture' : 'g');\n\n    /**\n     * @type {number}\n     */\n    this.a_position = gl.getAttribLocation(\n      program, DEBUG_WEBGL ? 'a_position' : 'b');\n\n    /**\n     * @type {number}\n     */\n    this.a_texCoord = gl.getAttribLocation(\n      program, DEBUG_WEBGL ? 'a_texCoord' : 'c');\n\n  }\n\n}\n\nexport default Locations;\n","/**\n * @module ol/renderer/webgl/Layer\n */\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLImmediateRenderer from '../../render/webgl/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {fragment, vertex} from '../webgl/defaultmapshader.js';\nimport Locations from '../webgl/defaultmapshader/Locations.js';\nimport {create as createTransform} from '../../transform.js';\nimport {create, fromTransform} from '../../vec/mat4.js';\nimport {ARRAY_BUFFER, FRAMEBUFFER, FLOAT, TEXTURE_2D,\n  TRIANGLE_STRIP, COLOR_ATTACHMENT0} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\nimport {createEmptyTexture} from '../../webgl/Context.js';\n\nclass WebGLLayerRenderer extends LayerRenderer {\n\n  /**\n   * @param {module:ol/renderer/webgl/Map} mapRenderer Map renderer.\n   * @param {module:ol/layer/Layer} layer Layer.\n   */\n  constructor(mapRenderer, layer) {\n\n    super(layer);\n\n    /**\n     * @protected\n     * @type {module:ol/renderer/webgl/Map}\n     */\n    this.mapRenderer = mapRenderer;\n\n    /**\n     * @private\n     * @type {module:ol/webgl/Buffer}\n     */\n    this.arrayBuffer_ = new WebGLBuffer([\n      -1, -1, 0, 0,\n      1, -1, 1, 0,\n      -1, 1, 0, 1,\n      1, 1, 1, 1\n    ]);\n\n    /**\n     * @protected\n     * @type {WebGLTexture}\n     */\n    this.texture = null;\n\n    /**\n     * @protected\n     * @type {WebGLFramebuffer}\n     */\n    this.framebuffer = null;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.framebufferDimension = undefined;\n\n    /**\n     * @protected\n     * @type {module:ol/transform~Transform}\n     */\n    this.texCoordMatrix = createTransform();\n\n    /**\n     * @protected\n     * @type {module:ol/transform~Transform}\n     */\n    this.projectionMatrix = createTransform();\n\n    /**\n     * @type {Array.<number>}\n     * @private\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @private\n     * @type {module:ol/renderer/webgl/defaultmapshader/Locations}\n     */\n    this.defaultLocations_ = null;\n\n  }\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {number} framebufferDimension Framebuffer dimension.\n   * @protected\n   */\n  bindFramebuffer(frameState, framebufferDimension) {\n\n    const gl = this.mapRenderer.getGL();\n\n    if (this.framebufferDimension === undefined ||\n        this.framebufferDimension != framebufferDimension) {\n      /**\n       * @param {WebGLRenderingContext} gl GL.\n       * @param {WebGLFramebuffer} framebuffer Framebuffer.\n       * @param {WebGLTexture} texture Texture.\n       */\n      const postRenderFunction = function(gl, framebuffer, texture) {\n        if (!gl.isContextLost()) {\n          gl.deleteFramebuffer(framebuffer);\n          gl.deleteTexture(texture);\n        }\n      }.bind(null, gl, this.framebuffer, this.texture);\n\n      frameState.postRenderFunctions.push(\n        /** @type {module:ol/PluggableMap~PostRenderFunction} */ (postRenderFunction)\n      );\n\n      const texture = createEmptyTexture(\n        gl, framebufferDimension, framebufferDimension);\n\n      const framebuffer = gl.createFramebuffer();\n      gl.bindFramebuffer(FRAMEBUFFER, framebuffer);\n      gl.framebufferTexture2D(FRAMEBUFFER,\n        COLOR_ATTACHMENT0, TEXTURE_2D, texture, 0);\n\n      this.texture = texture;\n      this.framebuffer = framebuffer;\n      this.framebufferDimension = framebufferDimension;\n\n    } else {\n      gl.bindFramebuffer(FRAMEBUFFER, this.framebuffer);\n    }\n\n  }\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @param {module:ol/webgl/Context} context Context.\n   */\n  composeFrame(frameState, layerState, context) {\n\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState);\n\n    context.bindBuffer(ARRAY_BUFFER, this.arrayBuffer_);\n\n    const gl = context.getGL();\n\n    const program = context.getProgram(fragment, vertex);\n\n    let locations;\n    if (!this.defaultLocations_) {\n      locations = new Locations(gl, program);\n      this.defaultLocations_ = locations;\n    } else {\n      locations = this.defaultLocations_;\n    }\n\n    if (context.useProgram(program)) {\n      gl.enableVertexAttribArray(locations.a_position);\n      gl.vertexAttribPointer(\n        locations.a_position, 2, FLOAT, false, 16, 0);\n      gl.enableVertexAttribArray(locations.a_texCoord);\n      gl.vertexAttribPointer(\n        locations.a_texCoord, 2, FLOAT, false, 16, 8);\n      gl.uniform1i(locations.u_texture, 0);\n    }\n\n    gl.uniformMatrix4fv(locations.u_texCoordMatrix, false,\n      fromTransform(this.tmpMat4_, this.getTexCoordMatrix()));\n    gl.uniformMatrix4fv(locations.u_projectionMatrix, false,\n      fromTransform(this.tmpMat4_, this.getProjectionMatrix()));\n    gl.uniform1f(locations.u_opacity, layerState.opacity);\n    gl.bindTexture(TEXTURE_2D, this.getTexture());\n    gl.drawArrays(TRIANGLE_STRIP, 0, 4);\n\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState);\n  }\n\n  /**\n   * @param {module:ol/render/EventType} type Event type.\n   * @param {module:ol/webgl/Context} context WebGL context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchComposeEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const viewState = frameState.viewState;\n      const resolution = viewState.resolution;\n      const pixelRatio = frameState.pixelRatio;\n      const extent = frameState.extent;\n      const center = viewState.center;\n      const rotation = viewState.rotation;\n      const size = frameState.size;\n\n      const render = new WebGLImmediateRenderer(\n        context, center, resolution, rotation, size, extent, pixelRatio);\n      const composeEvent = new RenderEvent(\n        type, render, frameState, null, context);\n      layer.dispatchEvent(composeEvent);\n    }\n  }\n\n  /**\n   * @return {!module:ol/transform~Transform} Matrix.\n   */\n  getTexCoordMatrix() {\n    return this.texCoordMatrix;\n  }\n\n  /**\n   * @return {WebGLTexture} Texture.\n   */\n  getTexture() {\n    return this.texture;\n  }\n\n  /**\n   * @return {!module:ol/transform~Transform} Matrix.\n   */\n  getProjectionMatrix() {\n    return this.projectionMatrix;\n  }\n\n  /**\n   * Handle webglcontextlost.\n   */\n  handleWebGLContextLost() {\n    this.texture = null;\n    this.framebuffer = null;\n    this.framebufferDimension = undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @param {module:ol/webgl/Context} context Context.\n   * @return {boolean} whether composeFrame should be called.\n   */\n  prepareFrame(frameState, layerState, context) {}\n\n  /**\n   * @abstract\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachLayerAtPixel(pixel, frameState, callback, thisArg) {}\n}\n\n\nexport default WebGLLayerRenderer;\n","/**\n * @module ol/renderer/webgl/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport {TRUE, UNDEFINED} from '../../functions.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {getIntersection, isEmpty} from '../../extent.js';\nimport WebGLLayerRenderer from '../webgl/Layer.js';\nimport {\n  create as createTransform,\n  rotate as rotateTransform,\n  translate as translateTransform,\n  scale as scaleTransform,\n  reset as resetTransform,\n  apply as applyTransform,\n  invert as invertTransform,\n  multiply as multiplyTransform\n} from '../../transform.js';\nimport {CLAMP_TO_EDGE} from '../../webgl.js';\nimport {createTexture} from '../../webgl/Context.js';\n\nclass WebGLImageLayerRenderer extends WebGLLayerRenderer {\n\n  /**\n   * @param {module:ol/renderer/webgl/Map} mapRenderer Map renderer.\n   * @param {module:ol/layer/Image} imageLayer Tile layer.\n   * @api\n   */\n  constructor(mapRenderer, imageLayer) {\n\n    super(mapRenderer, imageLayer);\n\n    /**\n     * The last rendered image.\n     * @private\n     * @type {?module:ol/ImageBase}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitCanvasContext_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/transform~Transform}\n     */\n    this.hitTransformationMatrix_ = null;\n\n  }\n\n  /**\n   * @param {module:ol/ImageBase} image Image.\n   * @private\n   * @return {WebGLTexture} Texture.\n   */\n  createTexture_(image) {\n\n    // We meet the conditions to work with non-power of two textures.\n    // http://www.khronos.org/webgl/wiki/WebGL_and_OpenGL_Differences#Non-Power_of_Two_Texture_Support\n    // http://learningwebgl.com/blog/?p=2101\n\n    const imageElement = image.getImage();\n    const gl = this.mapRenderer.getGL();\n\n    return createTexture(\n      gl, imageElement, CLAMP_TO_EDGE, CLAMP_TO_EDGE);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg) {\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const skippedFeatureUids = frameState.skippedFeatureUids;\n    return source.forEachFeatureAtCoordinate(\n      coordinate, resolution, rotation, hitTolerance, skippedFeatureUids,\n\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        return callback.call(thisArg, feature, layer);\n      });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  prepareFrame(frameState, layerState, context) {\n\n    const gl = this.mapRenderer.getGL();\n\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const viewRotation = viewState.rotation;\n\n    let image = this.image_;\n    let texture = this.texture;\n    const imageLayer = /** @type {module:ol/layer/Image} */ (this.getLayer());\n    const imageSource = imageLayer.getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      let projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        const sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      const image_ = imageSource.getImage(renderedExtent, viewResolution,\n        pixelRatio, projection);\n      if (image_) {\n        const loaded = this.loadImage(image_);\n        if (loaded) {\n          image = image_;\n          texture = this.createTexture_(image_);\n          if (this.texture) {\n            /**\n             * @param {WebGLRenderingContext} gl GL.\n             * @param {WebGLTexture} texture Texture.\n             */\n            const postRenderFunction = function(gl, texture) {\n              if (!gl.isContextLost()) {\n                gl.deleteTexture(texture);\n              }\n            }.bind(null, gl, this.texture);\n            frameState.postRenderFunctions.push(\n              /** @type {module:ol/PluggableMap~PostRenderFunction} */ (postRenderFunction)\n            );\n          }\n        }\n      }\n    }\n\n    if (image) {\n      const canvas = this.mapRenderer.getContext().getCanvas();\n\n      this.updateProjectionMatrix_(canvas.width, canvas.height,\n        pixelRatio, viewCenter, viewResolution, viewRotation,\n        image.getExtent());\n      this.hitTransformationMatrix_ = null;\n\n      // Translate and scale to flip the Y coord.\n      const texCoordMatrix = this.texCoordMatrix;\n      resetTransform(texCoordMatrix);\n      scaleTransform(texCoordMatrix, 1, -1);\n      translateTransform(texCoordMatrix, 0, -1);\n\n      this.image_ = image;\n      this.texture = texture;\n    }\n\n    return !!image;\n  }\n\n  /**\n   * @param {number} canvasWidth Canvas width.\n   * @param {number} canvasHeight Canvas height.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/coordinate~Coordinate} viewCenter View center.\n   * @param {number} viewResolution View resolution.\n   * @param {number} viewRotation View rotation.\n   * @param {module:ol/extent~Extent} imageExtent Image extent.\n   * @private\n   */\n  updateProjectionMatrix_(\n    canvasWidth,\n    canvasHeight,\n    pixelRatio,\n    viewCenter,\n    viewResolution,\n    viewRotation,\n    imageExtent\n  ) {\n\n    const canvasExtentWidth = canvasWidth * viewResolution;\n    const canvasExtentHeight = canvasHeight * viewResolution;\n\n    const projectionMatrix = this.projectionMatrix;\n    resetTransform(projectionMatrix);\n    scaleTransform(projectionMatrix,\n      pixelRatio * 2 / canvasExtentWidth,\n      pixelRatio * 2 / canvasExtentHeight);\n    rotateTransform(projectionMatrix, -viewRotation);\n    translateTransform(projectionMatrix,\n      imageExtent[0] - viewCenter[0],\n      imageExtent[1] - viewCenter[1]);\n    scaleTransform(projectionMatrix,\n      (imageExtent[2] - imageExtent[0]) / 2,\n      (imageExtent[3] - imageExtent[1]) / 2);\n    translateTransform(projectionMatrix, 1, 1);\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  hasFeatureAtCoordinate(coordinate, frameState) {\n    const hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, 0, TRUE, this);\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachLayerAtPixel(pixel, frameState, callback, thisArg) {\n    if (!this.image_ || !this.image_.getImage()) {\n      return undefined;\n    }\n\n    if (this.getLayer().getSource().forEachFeatureAtCoordinate !== UNDEFINED) {\n      // for ImageCanvas sources use the original hit-detection logic,\n      // so that for example also transparent polygons are detected\n      const coordinate = applyTransform(\n        frameState.pixelToCoordinateTransform, pixel.slice());\n      const hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, 0, TRUE, this);\n\n      if (hasFeature) {\n        return callback.call(thisArg, this.getLayer(), null);\n      } else {\n        return undefined;\n      }\n    } else {\n      const imageSize =\n          [this.image_.getImage().width, this.image_.getImage().height];\n\n      if (!this.hitTransformationMatrix_) {\n        this.hitTransformationMatrix_ = this.getHitTransformationMatrix_(\n          frameState.size, imageSize);\n      }\n\n      const pixelOnFrameBuffer = applyTransform(\n        this.hitTransformationMatrix_, pixel.slice());\n\n      if (pixelOnFrameBuffer[0] < 0 || pixelOnFrameBuffer[0] > imageSize[0] ||\n          pixelOnFrameBuffer[1] < 0 || pixelOnFrameBuffer[1] > imageSize[1]) {\n        // outside the image, no need to check\n        return undefined;\n      }\n\n      if (!this.hitCanvasContext_) {\n        this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n      }\n\n      this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n      this.hitCanvasContext_.drawImage(this.image_.getImage(),\n        pixelOnFrameBuffer[0], pixelOnFrameBuffer[1], 1, 1, 0, 0, 1, 1);\n\n      const imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n      if (imageData[3] > 0) {\n        return callback.call(thisArg, this.getLayer(), imageData);\n      } else {\n        return undefined;\n      }\n    }\n  }\n\n  /**\n   * The transformation matrix to get the pixel on the image for a\n   * pixel on the map.\n   * @param {module:ol/size~Size} mapSize The map size.\n   * @param {module:ol/size~Size} imageSize The image size.\n   * @return {module:ol/transform~Transform} The transformation matrix.\n   * @private\n   */\n  getHitTransformationMatrix_(mapSize, imageSize) {\n    // the first matrix takes a map pixel, flips the y-axis and scales to\n    // a range between -1 ... 1\n    const mapCoordTransform = createTransform();\n    translateTransform(mapCoordTransform, -1, -1);\n    scaleTransform(mapCoordTransform, 2 / mapSize[0], 2 / mapSize[1]);\n    translateTransform(mapCoordTransform, 0, mapSize[1]);\n    scaleTransform(mapCoordTransform, 1, -1);\n\n    // the second matrix is the inverse of the projection matrix used in the\n    // shader for drawing\n    const projectionMatrixInv = invertTransform(this.projectionMatrix.slice());\n\n    // the third matrix scales to the image dimensions and flips the y-axis again\n    const transform = createTransform();\n    translateTransform(transform, 0, imageSize[1]);\n    scaleTransform(transform, 1, -1);\n    scaleTransform(transform, imageSize[0] / 2, imageSize[1] / 2);\n    translateTransform(transform, 1, 1);\n\n    multiplyTransform(transform, projectionMatrixInv);\n    multiplyTransform(transform, mapCoordTransform);\n\n    return transform;\n  }\n}\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nWebGLImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/webgl/ImageLayer} The layer renderer.\n */\nWebGLImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new WebGLImageLayerRenderer(\n    /** @type {module:ol/renderer/webgl/Map} */ (mapRenderer),\n    /** @type {module:ol/layer/Image} */ (layer)\n  );\n};\n\n\nexport default WebGLImageLayerRenderer;\n","/**\n * @module ol/renderer/webgl/Map\n */\n\nimport {stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen} from '../../events.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLImmediateRenderer from '../../render/webgl/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport PriorityQueue from '../../structs/PriorityQueue.js';\nimport {BLEND, CLAMP_TO_EDGE, COLOR_BUFFER_BIT, CULL_FACE, DEPTH_TEST, FRAMEBUFFER,\n  getContext, LINEAR, ONE, ONE_MINUS_SRC_ALPHA, RGBA, SCISSOR_TEST, SRC_ALPHA,\n  STENCIL_TEST, TEXTURE0, TEXTURE_2D, TEXTURE_MAG_FILTER, TEXTURE_MIN_FILTER,\n  TEXTURE_WRAP_S, TEXTURE_WRAP_T, UNSIGNED_BYTE} from '../../webgl.js';\nimport WebGLContext from '../../webgl/Context.js';\nimport ContextEventType from '../../webgl/ContextEventType.js';\n\n\n/**\n * @typedef {Object} TextureCacheEntry\n * @property {number} magFilter\n * @property {number} minFilter\n * @property {WebGLTexture} texture\n */\n\n\n/**\n * Texture cache high water mark.\n * @type {number}\n */\nconst WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK = 1024;\n\n\nclass WebGLMapRenderer extends MapRenderer {\n\n  /**\n   * @param {module:ol/PluggableMap} map Map.\n   * @api\n   */\n  constructor(map) {\n    super(map);\n\n    const container = map.getViewport();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = /** @type {HTMLCanvasElement} */\n      (document.createElement('CANVAS'));\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clipTileCanvasWidth_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clipTileCanvasHeight_ = 0;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.clipTileContext_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = getContext(this.canvas_, {\n      antialias: true,\n      depth: true,\n      failIfMajorPerformanceCaveat: true,\n      preserveDrawingBuffer: false,\n      stencil: true\n    });\n\n    /**\n     * @private\n     * @type {module:ol/webgl/Context}\n     */\n    this.context_ = new WebGLContext(this.canvas_, this.gl_);\n\n    listen(this.canvas_, ContextEventType.LOST,\n      this.handleWebGLContextLost, this);\n    listen(this.canvas_, ContextEventType.RESTORED,\n      this.handleWebGLContextRestored, this);\n\n    /**\n     * @private\n     * @type {module:ol/structs/LRUCache.<module:ol/renderer/webgl/Map~TextureCacheEntry|null>}\n     */\n    this.textureCache_ = new LRUCache();\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.focus_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/structs/PriorityQueue.<Array>}\n     */\n    this.tileTextureQueue_ = new PriorityQueue(\n      /**\n       * @param {Array.<*>} element Element.\n       * @return {number} Priority.\n       * @this {module:ol/renderer/webgl/Map}\n       */\n      (function(element) {\n        const tileCenter = /** @type {module:ol/coordinate~Coordinate} */ (element[1]);\n        const tileResolution = /** @type {number} */ (element[2]);\n        const deltaX = tileCenter[0] - this.focus_[0];\n        const deltaY = tileCenter[1] - this.focus_[1];\n        return 65536 * Math.log(tileResolution) +\n              Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n      }).bind(this),\n      /**\n       * @param {Array.<*>} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return (\n          /** @type {module:ol/Tile} */ (element[0]).getKey()\n        );\n      });\n\n\n    /**\n     * @param {module:ol/PluggableMap} map Map.\n     * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n     * @return {boolean} false.\n     * @this {module:ol/renderer/webgl/Map}\n     */\n    this.loadNextTileTexture_ =\n        function(map, frameState) {\n          if (!this.tileTextureQueue_.isEmpty()) {\n            this.tileTextureQueue_.reprioritize();\n            const element = this.tileTextureQueue_.dequeue();\n            const tile = /** @type {module:ol/Tile} */ (element[0]);\n            const tileSize = /** @type {module:ol/size~Size} */ (element[3]);\n            const tileGutter = /** @type {number} */ (element[4]);\n            this.bindTileTexture(\n              tile, tileSize, tileGutter, LINEAR, LINEAR);\n          }\n          return false;\n        }.bind(this);\n\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textureCacheFrameMarkerCount_ = 0;\n\n    this.initializeGL_();\n  }\n\n  /**\n   * @param {module:ol/Tile} tile Tile.\n   * @param {module:ol/size~Size} tileSize Tile size.\n   * @param {number} tileGutter Tile gutter.\n   * @param {number} magFilter Mag filter.\n   * @param {number} minFilter Min filter.\n   */\n  bindTileTexture(tile, tileSize, tileGutter, magFilter, minFilter) {\n    const gl = this.getGL();\n    const tileKey = tile.getKey();\n    if (this.textureCache_.containsKey(tileKey)) {\n      const textureCacheEntry = this.textureCache_.get(tileKey);\n      gl.bindTexture(TEXTURE_2D, textureCacheEntry.texture);\n      if (textureCacheEntry.magFilter != magFilter) {\n        gl.texParameteri(\n          TEXTURE_2D, TEXTURE_MAG_FILTER, magFilter);\n        textureCacheEntry.magFilter = magFilter;\n      }\n      if (textureCacheEntry.minFilter != minFilter) {\n        gl.texParameteri(\n          TEXTURE_2D, TEXTURE_MIN_FILTER, minFilter);\n        textureCacheEntry.minFilter = minFilter;\n      }\n    } else {\n      const texture = gl.createTexture();\n      gl.bindTexture(TEXTURE_2D, texture);\n      if (tileGutter > 0) {\n        const clipTileCanvas = this.clipTileContext_.canvas;\n        const clipTileContext = this.clipTileContext_;\n        if (this.clipTileCanvasWidth_ !== tileSize[0] ||\n            this.clipTileCanvasHeight_ !== tileSize[1]) {\n          clipTileCanvas.width = tileSize[0];\n          clipTileCanvas.height = tileSize[1];\n          this.clipTileCanvasWidth_ = tileSize[0];\n          this.clipTileCanvasHeight_ = tileSize[1];\n        } else {\n          clipTileContext.clearRect(0, 0, tileSize[0], tileSize[1]);\n        }\n        clipTileContext.drawImage(tile.getImage(), tileGutter, tileGutter,\n          tileSize[0], tileSize[1], 0, 0, tileSize[0], tileSize[1]);\n        gl.texImage2D(TEXTURE_2D, 0,\n          RGBA, RGBA,\n          UNSIGNED_BYTE, clipTileCanvas);\n      } else {\n        gl.texImage2D(TEXTURE_2D, 0,\n          RGBA, RGBA,\n          UNSIGNED_BYTE, tile.getImage());\n      }\n      gl.texParameteri(\n        TEXTURE_2D, TEXTURE_MAG_FILTER, magFilter);\n      gl.texParameteri(\n        TEXTURE_2D, TEXTURE_MIN_FILTER, minFilter);\n      gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_S,\n        CLAMP_TO_EDGE);\n      gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_T,\n        CLAMP_TO_EDGE);\n      this.textureCache_.set(tileKey, {\n        texture: texture,\n        magFilter: magFilter,\n        minFilter: minFilter\n      });\n    }\n  }\n\n  /**\n   * @param {module:ol/render/EventType} type Event type.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchComposeEvent_(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const context = this.context_;\n\n      const extent = frameState.extent;\n      const size = frameState.size;\n      const viewState = frameState.viewState;\n      const pixelRatio = frameState.pixelRatio;\n\n      const resolution = viewState.resolution;\n      const center = viewState.center;\n      const rotation = viewState.rotation;\n\n      const vectorContext = new WebGLImmediateRenderer(context,\n        center, resolution, rotation, size, extent, pixelRatio);\n      const composeEvent = new RenderEvent(type, vectorContext,\n        frameState, null, context);\n      map.dispatchEvent(composeEvent);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    const gl = this.getGL();\n    if (!gl.isContextLost()) {\n      this.textureCache_.forEach(\n        /**\n         * @param {?module:ol/renderer/webgl/Map~TextureCacheEntry} textureCacheEntry\n         *     Texture cache entry.\n         */\n        function(textureCacheEntry) {\n          if (textureCacheEntry) {\n            gl.deleteTexture(textureCacheEntry.texture);\n          }\n        });\n    }\n    this.context_.dispose();\n    MapRenderer.prototype.disposeInternal.call(this);\n  }\n\n  /**\n   * @param {module:ol/PluggableMap} map Map.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @private\n   */\n  expireCache_(map, frameState) {\n    const gl = this.getGL();\n    let textureCacheEntry;\n    while (this.textureCache_.getCount() - this.textureCacheFrameMarkerCount_ >\n        WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK) {\n      textureCacheEntry = this.textureCache_.peekLast();\n      if (!textureCacheEntry) {\n        if (+this.textureCache_.peekLastKey() == frameState.index) {\n          break;\n        } else {\n          --this.textureCacheFrameMarkerCount_;\n        }\n      } else {\n        gl.deleteTexture(textureCacheEntry.texture);\n      }\n      this.textureCache_.pop();\n    }\n  }\n\n  /**\n   * @return {module:ol/webgl/Context} The context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @return {WebGLRenderingContext} GL.\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * @return {module:ol/structs/PriorityQueue.<Array>} Tile texture queue.\n   */\n  getTileTextureQueue() {\n    return this.tileTextureQueue_;\n  }\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   * @protected\n   */\n  handleWebGLContextLost(event) {\n    event.preventDefault();\n    this.textureCache_.clear();\n    this.textureCacheFrameMarkerCount_ = 0;\n\n    const renderers = this.getLayerRenderers();\n    for (const id in renderers) {\n      const renderer = /** @type {module:ol/renderer/webgl/Layer} */ (renderers[id]);\n      renderer.handleWebGLContextLost();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleWebGLContextRestored() {\n    this.initializeGL_();\n    this.getMap().render();\n  }\n\n  /**\n   * @private\n   */\n  initializeGL_() {\n    const gl = this.gl_;\n    gl.activeTexture(TEXTURE0);\n    gl.blendFuncSeparate(\n      SRC_ALPHA, ONE_MINUS_SRC_ALPHA,\n      ONE, ONE_MINUS_SRC_ALPHA);\n    gl.disable(CULL_FACE);\n    gl.disable(DEPTH_TEST);\n    gl.disable(SCISSOR_TEST);\n    gl.disable(STENCIL_TEST);\n  }\n\n  /**\n   * @param {module:ol/Tile} tile Tile.\n   * @return {boolean} Is tile texture loaded.\n   */\n  isTileTextureLoaded(tile) {\n    return this.textureCache_.containsKey(tile.getKey());\n  }\n\n  /**\n   * @inheritDoc\n   */\n  renderFrame(frameState) {\n\n    const context = this.getContext();\n    const gl = this.getGL();\n\n    if (gl.isContextLost()) {\n      return false;\n    }\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return false;\n    }\n\n    this.focus_ = frameState.focus;\n\n    this.textureCache_.set((-frameState.index).toString(), null);\n    ++this.textureCacheFrameMarkerCount_;\n\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, frameState);\n\n    /** @type {Array.<module:ol/layer/Layer~State>} */\n    const layerStatesToDraw = [];\n    const layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    const viewResolution = frameState.viewState.resolution;\n    let i, ii, layerRenderer, layerState;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      layerState = layerStatesArray[i];\n      if (visibleAtResolution(layerState, viewResolution) &&\n          layerState.sourceState == SourceState.READY) {\n        layerRenderer = /** @type {module:ol/renderer/webgl/Layer} */ (this.getLayerRenderer(layerState.layer));\n        if (layerRenderer.prepareFrame(frameState, layerState, context)) {\n          layerStatesToDraw.push(layerState);\n        }\n      }\n    }\n\n    const width = frameState.size[0] * frameState.pixelRatio;\n    const height = frameState.size[1] * frameState.pixelRatio;\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    }\n\n    gl.bindFramebuffer(FRAMEBUFFER, null);\n\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(COLOR_BUFFER_BIT);\n    gl.enable(BLEND);\n    gl.viewport(0, 0, this.canvas_.width, this.canvas_.height);\n\n    for (i = 0, ii = layerStatesToDraw.length; i < ii; ++i) {\n      layerState = layerStatesToDraw[i];\n      layerRenderer = /** @type {module:ol/renderer/webgl/Layer} */ (this.getLayerRenderer(layerState.layer));\n      layerRenderer.composeFrame(frameState, layerState, context);\n    }\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.calculateMatrices2D(frameState);\n\n    if (this.textureCache_.getCount() - this.textureCacheFrameMarkerCount_ >\n        WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK) {\n      frameState.postRenderFunctions.push(\n        /** @type {module:ol/PluggableMap~PostRenderFunction} */ (this.expireCache_.bind(this))\n      );\n    }\n\n    if (!this.tileTextureQueue_.isEmpty()) {\n      frameState.postRenderFunctions.push(this.loadNextTileTexture_);\n      frameState.animate = true;\n    }\n\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, frameState);\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n\n    if (this.getGL().isContextLost()) {\n      return false;\n    }\n\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n    let i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewState.resolution) &&\n          layerFilter.call(thisArg2, layer)) {\n        const layerRenderer = this.getLayerRenderer(layer);\n        result = layerRenderer.forEachFeatureAtCoordinate(\n          coordinate, frameState, hitTolerance, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  hasFeatureAtCoordinate(coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    let hasFeature = false;\n\n    if (this.getGL().isContextLost()) {\n      return false;\n    }\n\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n    let i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewState.resolution) &&\n          layerFilter.call(thisArg, layer)) {\n        const layerRenderer = this.getLayerRenderer(layer);\n        hasFeature =\n            layerRenderer.hasFeatureAtCoordinate(coordinate, frameState);\n        if (hasFeature) {\n          return true;\n        }\n      }\n    }\n    return hasFeature;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    if (this.getGL().isContextLost()) {\n      return false;\n    }\n\n    const viewState = frameState.viewState;\n    let result;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n    let i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewState.resolution) &&\n          layerFilter.call(thisArg, layer)) {\n        const layerRenderer = /** @type {module:ol/renderer/webgl/Layer} */ (this.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtPixel(\n          pixel, frameState, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\n\nexport default WebGLMapRenderer;\n","/**\n * @module ol/renderer/webgl/tilelayershader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../webgl.js';\nimport WebGLFragment from '../../webgl/Fragment.js';\nimport WebGLVertex from '../../webgl/Vertex.js';\n\nexport const fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\n\\n\\nuniform sampler2D u_texture;\\n\\nvoid main(void) {\\n  gl_FragColor = texture2D(u_texture, v_texCoord);\\n}\\n' :\n  'precision mediump float;varying vec2 a;uniform sampler2D e;void main(void){gl_FragColor=texture2D(e,a);}');\n\nexport const vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\n\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\nuniform vec4 u_tileOffset;\\n\\nvoid main(void) {\\n  gl_Position = vec4(a_position * u_tileOffset.xy + u_tileOffset.zw, 0., 1.);\\n  v_texCoord = a_texCoord;\\n}\\n\\n\\n' :\n  'varying vec2 a;attribute vec2 b;attribute vec2 c;uniform vec4 d;void main(void){gl_Position=vec4(b*d.xy+d.zw,0.,1.);a=c;}');\n","/**\n * @module ol/renderer/webgl/tilelayershader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\n\nclass Locations {\n\n  /**\n   * @param {WebGLRenderingContext} gl GL.\n   * @param {WebGLProgram} program Program.\n   */\n  constructor(gl, program) {\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_tileOffset = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_tileOffset' : 'd');\n\n    /**\n     * @type {WebGLUniformLocation}\n     */\n    this.u_texture = gl.getUniformLocation(\n      program, DEBUG_WEBGL ? 'u_texture' : 'e');\n\n    /**\n     * @type {number}\n     */\n    this.a_position = gl.getAttribLocation(\n      program, DEBUG_WEBGL ? 'a_position' : 'b');\n\n    /**\n     * @type {number}\n     */\n    this.a_texCoord = gl.getAttribLocation(\n      program, DEBUG_WEBGL ? 'a_texCoord' : 'c');\n\n  }\n\n}\n\nexport default Locations;\n","/**\n * @module ol/renderer/webgl/TileLayer\n */\n// FIXME large resolutions lead to too large framebuffers :-(\n// FIXME animated shaders! check in redraw\n\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createEmpty, intersects} from '../../extent.js';\nimport {roundUpToPowerOfTwo} from '../../math.js';\nimport WebGLLayerRenderer from '../webgl/Layer.js';\nimport {fragment, vertex} from '../webgl/tilelayershader.js';\nimport Locations from '../webgl/tilelayershader/Locations.js';\nimport {toSize} from '../../size.js';\nimport {\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform,\n  apply as applyTransform\n} from '../../transform.js';\nimport {COLOR_BUFFER_BIT, BLEND, ARRAY_BUFFER, FLOAT, LINEAR, TRIANGLE_STRIP} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\nclass WebGLTileLayerRenderer extends WebGLLayerRenderer {\n\n  /**\n   * @param {module:ol/renderer/webgl/Map} mapRenderer Map renderer.\n   * @param {module:ol/layer/Tile} tileLayer Tile layer.\n   * @api\n   */\n  constructor(mapRenderer, tileLayer) {\n\n    super(mapRenderer, tileLayer);\n\n    /**\n     * @private\n     * @type {module:ol/webgl/Fragment}\n     */\n    this.fragmentShader_ = fragment;\n\n    /**\n     * @private\n     * @type {module:ol/webgl/Vertex}\n     */\n    this.vertexShader_ = vertex;\n\n    /**\n     * @private\n     * @type {module:ol/renderer/webgl/tilelayershader/Locations}\n     */\n    this.locations_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/webgl/Buffer}\n     */\n    this.renderArrayBuffer_ = new WebGLBuffer([\n      0, 0, 0, 1,\n      1, 0, 1, 1,\n      0, 1, 0, 0,\n      1, 1, 1, 0\n    ]);\n\n    /**\n     * @private\n     * @type {module:ol/TileRange}\n     */\n    this.renderedTileRange_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.renderedFramebufferExtent_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    const context = this.mapRenderer.getContext();\n    context.deleteBuffer(this.renderArrayBuffer_);\n    WebGLLayerRenderer.prototype.disposeInternal.call(this);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    const mapRenderer = this.mapRenderer;\n\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {module:ol/TileRange} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      function(zoom, tileRange) {\n        function callback(tile) {\n          const loaded = mapRenderer.isTileTextureLoaded(tile);\n          if (loaded) {\n            if (!tiles[zoom]) {\n              tiles[zoom] = {};\n            }\n            tiles[zoom][tile.tileCoord.toString()] = tile;\n          }\n          return loaded;\n        }\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleWebGLContextLost() {\n    WebGLLayerRenderer.prototype.handleWebGLContextLost.call(this);\n    this.locations_ = null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  prepareFrame(frameState, layerState, context) {\n\n    const mapRenderer = this.mapRenderer;\n    const gl = context.getGL();\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    const tileLayer = /** @type {module:ol/layer/Tile} */ (this.getLayer());\n    const tileSource = tileLayer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewState.resolution);\n    const tileResolution = tileGrid.getResolution(z);\n\n    const tilePixelSize =\n        tileSource.getTilePixelSize(z, frameState.pixelRatio, projection);\n    const pixelRatio = tilePixelSize[0] /\n        toSize(tileGrid.getTileSize(z), this.tmpSize_)[0];\n    const tilePixelResolution = tileResolution / pixelRatio;\n    const tileGutter = tileSource.getTilePixelRatio(pixelRatio) * tileSource.getGutter(projection);\n\n    const center = viewState.center;\n    const extent = frameState.extent;\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    let framebufferExtent;\n    if (this.renderedTileRange_ &&\n        this.renderedTileRange_.equals(tileRange) &&\n        this.renderedRevision_ == tileSource.getRevision()) {\n      framebufferExtent = this.renderedFramebufferExtent_;\n    } else {\n\n      const tileRangeSize = tileRange.getSize();\n\n      const maxDimension = Math.max(\n        tileRangeSize[0] * tilePixelSize[0],\n        tileRangeSize[1] * tilePixelSize[1]);\n      const framebufferDimension = roundUpToPowerOfTwo(maxDimension);\n      const framebufferExtentDimension = tilePixelResolution * framebufferDimension;\n      const origin = tileGrid.getOrigin(z);\n      const minX = origin[0] +\n          tileRange.minX * tilePixelSize[0] * tilePixelResolution;\n      const minY = origin[1] +\n          tileRange.minY * tilePixelSize[1] * tilePixelResolution;\n      framebufferExtent = [\n        minX, minY,\n        minX + framebufferExtentDimension, minY + framebufferExtentDimension\n      ];\n\n      this.bindFramebuffer(frameState, framebufferDimension);\n      gl.viewport(0, 0, framebufferDimension, framebufferDimension);\n\n      gl.clearColor(0, 0, 0, 0);\n      gl.clear(COLOR_BUFFER_BIT);\n      gl.disable(BLEND);\n\n      const program = context.getProgram(this.fragmentShader_, this.vertexShader_);\n      context.useProgram(program);\n      if (!this.locations_) {\n        this.locations_ = new Locations(gl, program);\n      }\n\n      context.bindBuffer(ARRAY_BUFFER, this.renderArrayBuffer_);\n      gl.enableVertexAttribArray(this.locations_.a_position);\n      gl.vertexAttribPointer(\n        this.locations_.a_position, 2, FLOAT, false, 16, 0);\n      gl.enableVertexAttribArray(this.locations_.a_texCoord);\n      gl.vertexAttribPointer(\n        this.locations_.a_texCoord, 2, FLOAT, false, 16, 8);\n      gl.uniform1i(this.locations_.u_texture, 0);\n\n      /**\n       * @type {Object.<number, Object.<string, module:ol/Tile>>}\n       */\n      const tilesToDrawByZ = {};\n      tilesToDrawByZ[z] = {};\n\n      const findLoadedTiles = this.createLoadedTileFinder(\n        tileSource, projection, tilesToDrawByZ);\n\n      const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n      let allTilesLoaded = true;\n      const tmpExtent = createEmpty();\n      const tmpTileRange = new TileRange(0, 0, 0, 0);\n      let childTileRange, drawable, fullyLoaded, tile, tileState;\n      let x, y, tileExtent;\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n\n          tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n          if (layerState.extent !== undefined) {\n            // ignore tiles outside layer extent\n            tileExtent = tileGrid.getTileCoordExtent(tile.tileCoord, tmpExtent);\n            if (!intersects(tileExtent, layerState.extent)) {\n              continue;\n            }\n          }\n          tileState = tile.getState();\n          drawable = tileState == TileState.LOADED ||\n              tileState == TileState.EMPTY ||\n              tileState == TileState.ERROR && !useInterimTilesOnError;\n          if (!drawable) {\n            tile = tile.getInterimTile();\n          }\n          tileState = tile.getState();\n          if (tileState == TileState.LOADED) {\n            if (mapRenderer.isTileTextureLoaded(tile)) {\n              tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n              continue;\n            }\n          } else if (tileState == TileState.EMPTY ||\n                     (tileState == TileState.ERROR &&\n                      !useInterimTilesOnError)) {\n            continue;\n          }\n\n          allTilesLoaded = false;\n          fullyLoaded = tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n          if (!fullyLoaded) {\n            childTileRange = tileGrid.getTileCoordChildTileRange(\n              tile.tileCoord, tmpTileRange, tmpExtent);\n            if (childTileRange) {\n              findLoadedTiles(z + 1, childTileRange);\n            }\n          }\n\n        }\n\n      }\n\n      /** @type {Array.<number>} */\n      const zs = Object.keys(tilesToDrawByZ).map(Number);\n      zs.sort(numberSafeCompareFunction);\n      const u_tileOffset = new Float32Array(4);\n      for (let i = 0, ii = zs.length; i < ii; ++i) {\n        const tilesToDraw = tilesToDrawByZ[zs[i]];\n        for (const tileKey in tilesToDraw) {\n          tile = tilesToDraw[tileKey];\n          tileExtent = tileGrid.getTileCoordExtent(tile.tileCoord, tmpExtent);\n          u_tileOffset[0] = 2 * (tileExtent[2] - tileExtent[0]) /\n              framebufferExtentDimension;\n          u_tileOffset[1] = 2 * (tileExtent[3] - tileExtent[1]) /\n              framebufferExtentDimension;\n          u_tileOffset[2] = 2 * (tileExtent[0] - framebufferExtent[0]) /\n              framebufferExtentDimension - 1;\n          u_tileOffset[3] = 2 * (tileExtent[1] - framebufferExtent[1]) /\n              framebufferExtentDimension - 1;\n          gl.uniform4fv(this.locations_.u_tileOffset, u_tileOffset);\n          mapRenderer.bindTileTexture(tile, tilePixelSize,\n            tileGutter * pixelRatio, LINEAR, LINEAR);\n          gl.drawArrays(TRIANGLE_STRIP, 0, 4);\n        }\n      }\n\n      if (allTilesLoaded) {\n        this.renderedTileRange_ = tileRange;\n        this.renderedFramebufferExtent_ = framebufferExtent;\n        this.renderedRevision_ = tileSource.getRevision();\n      } else {\n        this.renderedTileRange_ = null;\n        this.renderedFramebufferExtent_ = null;\n        this.renderedRevision_ = -1;\n        frameState.animate = true;\n      }\n\n    }\n\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n    const tileTextureQueue = mapRenderer.getTileTextureQueue();\n    this.manageTilePyramid(\n      frameState, tileSource, tileGrid, pixelRatio, projection, extent, z,\n      tileLayer.getPreload(),\n      /**\n       * @param {module:ol/Tile} tile Tile.\n       */\n      function(tile) {\n        if (tile.getState() == TileState.LOADED &&\n              !mapRenderer.isTileTextureLoaded(tile) &&\n              !tileTextureQueue.isKeyQueued(tile.getKey())) {\n          tileTextureQueue.enqueue([\n            tile,\n            tileGrid.getTileCoordCenter(tile.tileCoord),\n            tileGrid.getResolution(tile.tileCoord[0]),\n            tilePixelSize, tileGutter * pixelRatio\n          ]);\n        }\n      }, this);\n    this.scheduleExpireCache(frameState, tileSource);\n\n    const texCoordMatrix = this.texCoordMatrix;\n    resetTransform(texCoordMatrix);\n    translateTransform(texCoordMatrix,\n      (Math.round(center[0] / tileResolution) * tileResolution - framebufferExtent[0]) /\n            (framebufferExtent[2] - framebufferExtent[0]),\n      (Math.round(center[1] / tileResolution) * tileResolution - framebufferExtent[1]) /\n            (framebufferExtent[3] - framebufferExtent[1]));\n    if (viewState.rotation !== 0) {\n      rotateTransform(texCoordMatrix, viewState.rotation);\n    }\n    scaleTransform(texCoordMatrix,\n      frameState.size[0] * viewState.resolution /\n            (framebufferExtent[2] - framebufferExtent[0]),\n      frameState.size[1] * viewState.resolution /\n            (framebufferExtent[3] - framebufferExtent[1]));\n    translateTransform(texCoordMatrix, -0.5, -0.5);\n\n    return true;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachLayerAtPixel(pixel, frameState, callback, thisArg) {\n    if (!this.framebuffer) {\n      return undefined;\n    }\n\n    const pixelOnMapScaled = [\n      pixel[0] / frameState.size[0],\n      (frameState.size[1] - pixel[1]) / frameState.size[1]];\n\n    const pixelOnFrameBufferScaled = applyTransform(\n      this.texCoordMatrix, pixelOnMapScaled.slice());\n    const pixelOnFrameBuffer = [\n      pixelOnFrameBufferScaled[0] * this.framebufferDimension,\n      pixelOnFrameBufferScaled[1] * this.framebufferDimension];\n\n    const gl = this.mapRenderer.getContext().getGL();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    const imageData = new Uint8Array(4);\n    gl.readPixels(pixelOnFrameBuffer[0], pixelOnFrameBuffer[1], 1, 1,\n      gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(), imageData);\n    } else {\n      return undefined;\n    }\n  }\n}\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nWebGLTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/webgl/TileLayer} The layer renderer.\n */\nWebGLTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new WebGLTileLayerRenderer(\n    /** @type {module:ol/renderer/webgl/Map} */ (mapRenderer),\n    /** @type {module:ol/layer/Tile} */ (layer)\n  );\n};\n\n\nexport default WebGLTileLayerRenderer;\n","/**\n * @module ol/renderer/webgl/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {buffer, containsExtent, createEmpty} from '../../extent.js';\nimport WebGLReplayGroup from '../../render/webgl/ReplayGroup.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport WebGLLayerRenderer from '../webgl/Layer.js';\nimport {apply as applyTransform} from '../../transform.js';\n\nclass WebGLVectorLayerRenderer extends WebGLLayerRenderer {\n\n  /**\n   * @param {module:ol/renderer/webgl/Map} mapRenderer Map renderer.\n   * @param {module:ol/layer/Vector} vectorLayer Vector layer.\n   * @api\n   */\n  constructor(mapRenderer, vectorLayer) {\n\n    super(mapRenderer, vectorLayer);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {function(module:ol/Feature, module:ol/Feature): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/render/webgl/ReplayGroup}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * The last layer state.\n     * @private\n     * @type {?module:ol/layer/Layer~State}\n     */\n    this.layerState_ = null;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  composeFrame(frameState, layerState, context) {\n    this.layerState_ = layerState;\n    const viewState = frameState.viewState;\n    const replayGroup = this.replayGroup_;\n    const size = frameState.size;\n    const pixelRatio = frameState.pixelRatio;\n    const gl = this.mapRenderer.getGL();\n    if (replayGroup && !replayGroup.isEmpty()) {\n      gl.enable(gl.SCISSOR_TEST);\n      gl.scissor(0, 0, size[0] * pixelRatio, size[1] * pixelRatio);\n      replayGroup.replay(context,\n        viewState.center, viewState.resolution, viewState.rotation,\n        size, pixelRatio, layerState.opacity,\n        layerState.managed ? frameState.skippedFeatureUids : {});\n      gl.disable(gl.SCISSOR_TEST);\n    }\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    const replayGroup = this.replayGroup_;\n    if (replayGroup) {\n      const context = this.mapRenderer.getContext();\n      replayGroup.getDeleteResourcesFunction(context)();\n      this.replayGroup_ = null;\n    }\n    WebGLLayerRenderer.prototype.disposeInternal.call(this);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.replayGroup_ || !this.layerState_) {\n      return undefined;\n    } else {\n      const context = this.mapRenderer.getContext();\n      const viewState = frameState.viewState;\n      const layer = this.getLayer();\n      const layerState = this.layerState_;\n      /** @type {!Object.<string, boolean>} */\n      const features = {};\n      return this.replayGroup_.forEachFeatureAtCoordinate(coordinate,\n        context, viewState.center, viewState.resolution, viewState.rotation,\n        frameState.size, frameState.pixelRatio, layerState.opacity,\n        {},\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          const key = getUid(feature).toString();\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  hasFeatureAtCoordinate(coordinate, frameState) {\n    if (!this.replayGroup_ || !this.layerState_) {\n      return false;\n    } else {\n      const context = this.mapRenderer.getContext();\n      const viewState = frameState.viewState;\n      const layerState = this.layerState_;\n      return this.replayGroup_.hasFeatureAtCoordinate(coordinate,\n        context, viewState.center, viewState.resolution, viewState.rotation,\n        frameState.size, frameState.pixelRatio, layerState.opacity,\n        frameState.skippedFeatureUids);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachLayerAtPixel(pixel, frameState, callback, thisArg) {\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n    const hasFeature = this.hasFeatureAtCoordinate(coordinate, frameState);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {module:ol/events/Event} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  prepareFrame(frameState, layerState, context) {\n    const vectorLayer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n    const vectorSource = vectorLayer.getSource();\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      return true;\n    }\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      return true;\n    }\n\n    if (this.replayGroup_) {\n      frameState.postRenderFunctions.push(\n        this.replayGroup_.getDeleteResourcesFunction(context));\n    }\n\n    this.dirty_ = false;\n\n    const replayGroup = new WebGLReplayGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent, vectorLayer.getRenderBuffer());\n    vectorSource.loadFeatures(extent, resolution, projection);\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     * @this {module:ol/renderer/webgl/VectorLayer}\n     */\n    const render = function(feature) {\n      let styles;\n      const styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        const dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    };\n    if (vectorLayerRenderOrder) {\n      /** @type {Array.<module:ol/Feature>} */\n      const features = [];\n      vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {module:ol/Feature} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        }, this);\n      features.sort(vectorLayerRenderOrder);\n      features.forEach(render.bind(this));\n    } else {\n      vectorSource.forEachFeatureInExtent(extent, render, this);\n    }\n    replayGroup.finish(context);\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.replayGroup_ = replayGroup;\n\n    return true;\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {(module:ol/style/Style|Array.<module:ol/style/Style>)} styles The style or array of\n   *     styles.\n   * @param {module:ol/render/webgl/ReplayGroup} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(feature, resolution, pixelRatio, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = styles.length - 1, ii = 0; i >= ii; --i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i],\n          getSquaredRenderTolerance(resolution, pixelRatio),\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles,\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this) || loading;\n    }\n    return loading;\n  }\n}\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nWebGLVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/webgl/VectorLayer} The layer renderer.\n */\nWebGLVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new WebGLVectorLayerRenderer(\n    /** @type {module:ol/renderer/webgl/Map} */ (mapRenderer),\n    /** @type {module:ol/layer/Vector} */ (layer)\n  );\n};\n\n\nexport default WebGLVectorLayerRenderer;\n","/**\n * @module ol/WebGLMap\n */\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport WebGLImageLayerRenderer from './renderer/webgl/ImageLayer.js';\nimport WebGLMapRenderer from './renderer/webgl/Map.js';\nimport WebGLTileLayerRenderer from './renderer/webgl/TileLayer.js';\nimport WebGLVectorLayerRenderer from './renderer/webgl/VectorLayer.js';\n\n\n/**\n * @classdesc\n * The WebGLMap uses WebGL for rendering map layers.  This renderer has limited\n * support for vector data and no support for vector tiles.\n *\n *     import WebGLMap from 'ol/WebGLMap';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *     import View from 'ol/View';\n *\n *     var map = new WebGLMap({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`.\n * Note that {@link module:ol/layer/Group~Group} is a subclass of\n * {@link module:ol/layer/Base}, so layers entered in the options or added\n * with `addLayer` can be groups, which can contain further groups, and so on.\n *\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nclass WebGLMap extends PluggableMap {\n\n  /**\n   * @param {module:ol/PluggableMap~MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions();\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    const renderer = new WebGLMapRenderer(this);\n    renderer.registerLayerRenderers([\n      WebGLImageLayerRenderer,\n      WebGLTileLayerRenderer,\n      WebGLVectorLayerRenderer\n    ]);\n    return renderer;\n  }\n}\n\n\nexport default WebGLMap;\n","/**\n * @module ol/control/MousePosition\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport Control from '../control/Control.js';\nimport {getTransformFromProjections, identityTransform, get as getProjection} from '../proj.js';\n\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {module:ol/coordinate~CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {function(module:ol/MapEvent)} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {Element|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [undefinedHTML='&nbsp;'] Markup to show when coordinates are not\n * available (e.g. when the pointer leaves the map viewport).  By default, the last position\n * will be replaced with `'&nbsp;'` when the pointer leaves the viewport.  To\n * retain the last rendered position, set this option to something falsey (like an empty\n * string `''`).\n */\n\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * @api\n */\nclass MousePosition extends Control {\n\n  /**\n   * @param {module:ol/control/MousePosition~Options=} opt_options Mouse position options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    const element = document.createElement('DIV');\n    element.className = options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    super({\n      element: element,\n      render: options.render || render,\n      target: options.target\n    });\n\n    listen(this,\n      getChangeEventType(PROJECTION),\n      this.handleProjectionChanged_, this);\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.undefinedHTML_ = 'undefinedHTML' in options ? options.undefinedHTML : '&nbsp;';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = !!this.undefinedHTML_;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {module:ol/proj/Projection}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/proj~TransformFunction}\n     */\n    this.transform_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/pixel~Pixel}\n     */\n    this.lastMouseMovePixel_ = null;\n\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    this.transform_ = null;\n  }\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {module:ol/coordinate~CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  getCoordinateFormat() {\n    return (\n      /** @type {module:ol/coordinate~CoordinateFormat|undefined} */ (this.get(COORDINATE_FORMAT))\n    );\n  }\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {module:ol/proj/Projection|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return (\n      /** @type {module:ol/proj/Projection|undefined} */ (this.get(PROJECTION))\n    );\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseMove(event) {\n    const map = this.getMap();\n    this.lastMouseMovePixel_ = map.getEventPixel(event);\n    this.updateHTML_(this.lastMouseMovePixel_);\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseOut(event) {\n    this.updateHTML_(null);\n    this.lastMouseMovePixel_ = null;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      const viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.MOUSEMOVE, this.handleMouseMove, this)\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.MOUSEOUT, this.handleMouseOut, this)\n        );\n      }\n    }\n  }\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {module:ol/coordinate~CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  setCoordinateFormat(format) {\n    this.set(COORDINATE_FORMAT, format);\n  }\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {module:ol/proj~ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * @param {?module:ol/pixel~Pixel} pixel Pixel.\n   * @private\n   */\n  updateHTML_(pixel) {\n    let html = this.undefinedHTML_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        const projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_, projection);\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      const map = this.getMap();\n      const coordinate = map.getCoordinateFromPixel(pixel);\n      if (coordinate) {\n        this.transform_(coordinate, coordinate);\n        const coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  }\n}\n\n\n/**\n * Update the mouseposition element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/MousePosition}\n * @api\n */\nexport function render(mapEvent) {\n  const frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.mapProjection_ = null;\n  } else {\n    if (this.mapProjection_ != frameState.viewState.projection) {\n      this.mapProjection_ = frameState.viewState.projection;\n      this.transform_ = null;\n    }\n  }\n  this.updateHTML_(this.lastMouseMovePixel_);\n}\n\n\nexport default MousePosition;\n","/**\n * @module ol/format/Feature\n */\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, equivalent as equivalentProjection, transformExtent} from '../proj.js';\n\n\n/**\n * @typedef {Object} ReadOptions\n * @property {module:ol/proj~ProjectionLike} dataProjection Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {module:ol/extent~Extent} extent Tile extent of the tile being read. This is only used and\n * required for {@link module:ol/format/MVT}.\n * @property {module:ol/proj~ProjectionLike} featureProjection Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n\n/**\n * @typedef {Object} WriteOptions\n * @property {module:ol/proj~ProjectionLike} dataProjection Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {module:ol/proj~ProjectionLike} featureProjection Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n\n    /**\n     * @protected\n     * @type {module:ol/proj/Projection}\n     */\n    this.dataProjection = null;\n\n    /**\n     * @protected\n     * @type {module:ol/proj/Projection}\n     */\n    this.defaultFeatureProjection = null;\n\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n   * @return {module:ol/format/Feature~ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, opt_options) {\n    let options;\n    if (opt_options) {\n      options = {\n        dataProjection: opt_options.dataProjection ?\n          opt_options.dataProjection : this.readProjection(source),\n        featureProjection: opt_options.featureProjection\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {module:ol/format/Feature~WriteOptions|module:ol/format/Feature~ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {module:ol/format/Feature~WriteOptions|module:ol/format/Feature~ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return assign({\n      dataProjection: this.dataProjection,\n      featureProjection: this.defaultFeatureProjection\n    }, options);\n  }\n\n  /**\n   * Get the extent from the source of the last {@link readFeatures} call.\n   * @return {module:ol/extent~Extent} Tile extent.\n   */\n  getLastExtent() {\n    return null;\n  }\n\n  /**\n   * @abstract\n   * @return {module:ol/format/FormatType} Format.\n   */\n  getType() {}\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {module:ol/Feature} Feature.\n   */\n  readFeature(source, opt_options) {}\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {Array.<module:ol/Feature>} Features.\n   */\n  readFeatures(source, opt_options) {}\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {module:ol/geom/Geometry} Geometry.\n   */\n  readGeometry(source, opt_options) {}\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Node|Object|string} source Source.\n   * @return {module:ol/proj/Projection} Projection.\n   */\n  readProjection(source) {}\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {string} Result.\n   */\n  writeFeature(feature, opt_options) {}\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array.<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {string} Result.\n   */\n  writeFeatures(features, opt_options) {}\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {module:ol/geom/Geometry} geometry Geometry.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {string} Result.\n   */\n  writeGeometry(geometry, opt_options) {}\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {module:ol/geom/Geometry|module:ol/extent~Extent} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(module:ol/format/Feature~WriteOptions|module:ol/format/Feature~ReadOptions)=} opt_options\n *     Options.\n * @return {module:ol/geom/Geometry|module:ol/extent~Extent} Transformed geometry.\n */\nexport function transformWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options ?\n    getProjection(opt_options.featureProjection) : null;\n  const dataProjection = opt_options ?\n    getProjection(opt_options.dataProjection) : null;\n  /**\n   * @type {module:ol/geom/Geometry|module:ol/extent~Extent}\n   */\n  let transformed;\n  if (featureProjection && dataProjection &&\n      !equivalentProjection(featureProjection, dataProjection)) {\n    if (geometry instanceof Geometry) {\n      transformed = (write ? geometry.clone() : geometry).transform(\n        write ? featureProjection : dataProjection,\n        write ? dataProjection : featureProjection);\n    } else {\n      // FIXME this is necessary because GML treats extents\n      // as geometries\n      transformed = transformExtent(\n        geometry,\n        dataProjection,\n        featureProjection);\n    }\n  } else {\n    transformed = geometry;\n  }\n  if (write && opt_options && opt_options.decimals !== undefined) {\n    const power = Math.pow(10, opt_options.decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array.<number>} coordinates Coordinates.\n     * @return {Array.<number>} Transformed coordinates.\n     */\n    const transform = function(coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = transformed.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getType() {\n    return FormatType.JSON;\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {module:ol/Feature} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    return this.readFeatureFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {Array.<module:ol/Feature>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    return this.readFeaturesFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {module:ol/Feature} Feature.\n   */\n  readFeatureFromObject(object, opt_options) {}\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array.<module:ol/Feature>} Features.\n   */\n  readFeaturesFromObject(object, opt_options) {}\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {module:ol/geom/Geometry} Geometry.\n   * @api\n   */\n  readGeometry(source, opt_options) {\n    return this.readGeometryFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {module:ol/geom/Geometry} Geometry.\n   */\n  readGeometryFromObject(object, opt_options) {}\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @return {module:ol/proj/Projection} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {module:ol/proj/Projection} Projection.\n   */\n  readProjectionFromObject(object) {}\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, opt_options) {\n    return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, opt_options) {}\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array.<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array.<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, opt_options) {}\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {module:ol/geom/Geometry} geometry Geometry.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, opt_options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {module:ol/geom/Geometry} geometry Geometry.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, opt_options) {}\n}\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\n\nexport default JSONFeature;\n","/**\n * @module ol/format/EsriJSON\n */\nimport Feature from '../Feature.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport JSONFeature from '../format/JSONFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {linearRingIsClockwise} from '../geom/flat/orient.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @const\n * @type {Object.<module:ol/geom/GeometryType, function(EsriJSONGeometry): module:ol/geom/Geometry>}\n */\nconst GEOMETRY_READERS = {};\nGEOMETRY_READERS[GeometryType.POINT] = readPointGeometry;\nGEOMETRY_READERS[GeometryType.LINE_STRING] = readLineStringGeometry;\nGEOMETRY_READERS[GeometryType.POLYGON] = readPolygonGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_POINT] = readMultiPointGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_LINE_STRING] = readMultiLineStringGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_POLYGON] = readMultiPolygonGeometry;\n\n\n/**\n * @const\n * @type {Object.<string, function(module:ol/geom/Geometry, module:ol/format/Feature~WriteOptions=): (EsriJSONGeometry)>}\n */\nconst GEOMETRY_WRITERS = {};\nGEOMETRY_WRITERS[GeometryType.POINT] = writePointGeometry;\nGEOMETRY_WRITERS[GeometryType.LINE_STRING] = writeLineStringGeometry;\nGEOMETRY_WRITERS[GeometryType.POLYGON] = writePolygonGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_POINT] = writeMultiPointGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_LINE_STRING] = writeMultiLineStringGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_POLYGON] = writeMultiPolygonGeometry;\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [geometryName] Geometry name to use when creating features.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the EsriJSON format.\n *\n * @api\n */\nclass EsriJSON extends JSONFeature {\n\n  /**\n   * @param {module:ol/format/EsriJSON~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super();\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeatureFromObject(object, opt_options) {\n    const esriJSONFeature = /** @type {EsriJSONFeature} */ (object);\n    const geometry = readGeometry(esriJSONFeature.geometry, opt_options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    }\n    feature.setGeometry(geometry);\n    if (opt_options && opt_options.idField &&\n      esriJSONFeature.attributes[opt_options.idField]) {\n      feature.setId(/** @type {number} */(esriJSONFeature.attributes[opt_options.idField]));\n    }\n    if (esriJSONFeature.attributes) {\n      feature.setProperties(esriJSONFeature.attributes);\n    }\n    return feature;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeaturesFromObject(object, opt_options) {\n    const esriJSONObject = /** @type {EsriJSONObject} */ (object);\n    const options = opt_options ? opt_options : {};\n    if (esriJSONObject.features) {\n      const esriJSONFeatureCollection = /** @type {EsriJSONFeatureCollection} */ (object);\n      /** @type {Array.<module:ol/Feature>} */\n      const features = [];\n      const esriJSONFeatures = esriJSONFeatureCollection.features;\n      options.idField = object.objectIdFieldName;\n      for (let i = 0, ii = esriJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(esriJSONFeatures[i], options));\n      }\n      return features;\n    } else {\n      return [this.readFeatureFromObject(object, options)];\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readGeometryFromObject(object, opt_options) {\n    return readGeometry(/** @type {EsriJSONGeometry} */(object), opt_options);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readProjectionFromObject(object) {\n    const esriJSONObject = /** @type {EsriJSONObject} */ (object);\n    if (esriJSONObject.spatialReference && esriJSONObject.spatialReference.wkid) {\n      const crs = esriJSONObject.spatialReference.wkid;\n      return getProjection('EPSG:' + crs);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Encode a geometry as a EsriJSON object.\n   *\n   * @param {module:ol/geom/Geometry} geometry Geometry.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {EsriJSONGeometry} Object.\n   * @override\n   * @api\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * Encode a feature as a esriJSON Feature object.\n   *\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   * @override\n   * @api\n   */\n  writeFeatureObject(feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const object = {};\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object['geometry'] = writeGeometry(geometry, opt_options);\n      if (opt_options && opt_options.featureProjection) {\n        object['geometry']['spatialReference'] = /** @type {EsriJSONCRS} */({\n          wkid: getProjection(opt_options.featureProjection).getCode().split(':').pop()\n        });\n      }\n    }\n    const properties = feature.getProperties();\n    delete properties[feature.getGeometryName()];\n    if (!isEmpty(properties)) {\n      object['attributes'] = properties;\n    } else {\n      object['attributes'] = {};\n    }\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a EsriJSON object.\n   *\n   * @param {Array.<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {Object} EsriJSON Object.\n   * @override\n   * @api\n   */\n  writeFeaturesObject(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], opt_options));\n    }\n    return /** @type {EsriJSONFeatureCollection} */ ({\n      'features': objects\n    });\n  }\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/Geometry} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n  /** @type {module:ol/geom/GeometryType} */\n  let type;\n  if (typeof object.x === 'number' && typeof object.y === 'number') {\n    type = GeometryType.POINT;\n  } else if (object.points) {\n    type = GeometryType.MULTI_POINT;\n  } else if (object.paths) {\n    if (object.paths.length === 1) {\n      type = GeometryType.LINE_STRING;\n    } else {\n      type = GeometryType.MULTI_LINE_STRING;\n    }\n  } else if (object.rings) {\n    const layout = getGeometryLayout(object);\n    const rings = convertRings(object.rings, layout);\n    object = /** @type {EsriJSONGeometry} */(assign({}, object));\n    if (rings.length === 1) {\n      type = GeometryType.POLYGON;\n      object.rings = rings[0];\n    } else {\n      type = GeometryType.MULTI_POLYGON;\n      object.rings = rings;\n    }\n  }\n  const geometryReader = GEOMETRY_READERS[type];\n  return (\n    /** @type {module:ol/geom/Geometry} */ (transformWithOptions(geometryReader(object), false, opt_options))\n  );\n}\n\n\n/**\n * Determines inner and outer rings.\n * Checks if any polygons in this array contain any other polygons in this\n * array. It is used for checking for holes.\n * Logic inspired by: https://github.com/Esri/terraformer-arcgis-parser\n * @param {Array.<!Array.<!Array.<number>>>} rings Rings.\n * @param {module:ol/geom/GeometryLayout} layout Geometry layout.\n * @return {Array.<!Array.<!Array.<number>>>} Transformed rings.\n */\nfunction convertRings(rings, layout) {\n  const flatRing = [];\n  const outerRings = [];\n  const holes = [];\n  let i, ii;\n  for (i = 0, ii = rings.length; i < ii; ++i) {\n    flatRing.length = 0;\n    deflateCoordinates(flatRing, 0, rings[i], layout.length);\n    // is this ring an outer ring? is it clockwise?\n    const clockwise = linearRingIsClockwise(flatRing, 0,\n      flatRing.length, layout.length);\n    if (clockwise) {\n      outerRings.push([rings[i]]);\n    } else {\n      holes.push(rings[i]);\n    }\n  }\n  while (holes.length) {\n    const hole = holes.shift();\n    let matched = false;\n    // loop over all outer rings and see if they contain our hole.\n    for (i = outerRings.length - 1; i >= 0; i--) {\n      const outerRing = outerRings[i][0];\n      const containsHole = containsExtent(\n        new LinearRing(outerRing).getExtent(),\n        new LinearRing(hole).getExtent()\n      );\n      if (containsHole) {\n        // the hole is contained push it into our polygon\n        outerRings[i].push(hole);\n        matched = true;\n        break;\n      }\n    }\n    if (!matched) {\n      // no outer rings contain this hole turn it into and outer\n      // ring (reverse it)\n      outerRings.push([hole.reverse()]);\n    }\n  }\n  return outerRings;\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} Point.\n */\nfunction readPointGeometry(object) {\n  let point;\n  if (object.m !== undefined && object.z !== undefined) {\n    point = new Point([object.x, object.y, object.z, object.m],\n      GeometryLayout.XYZM);\n  } else if (object.z !== undefined) {\n    point = new Point([object.x, object.y, object.z],\n      GeometryLayout.XYZ);\n  } else if (object.m !== undefined) {\n    point = new Point([object.x, object.y, object.m],\n      GeometryLayout.XYM);\n  } else {\n    point = new Point([object.x, object.y]);\n  }\n  return point;\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} LineString.\n */\nfunction readLineStringGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new LineString(object.paths[0], layout);\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new MultiLineString(object.paths, layout);\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/GeometryLayout} The geometry layout to use.\n */\nfunction getGeometryLayout(object) {\n  let layout = GeometryLayout.XY;\n  if (object.hasZ === true && object.hasM === true) {\n    layout = GeometryLayout.XYZM;\n  } else if (object.hasZ === true) {\n    layout = GeometryLayout.XYZ;\n  } else if (object.hasM === true) {\n    layout = GeometryLayout.XYM;\n  }\n  return layout;\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new MultiPoint(object.points, layout);\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new MultiPolygon(\n    /** @type {Array.<Array.<Array.<Array.<number>>>>} */(object.rings),\n    layout);\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new Polygon(object.rings, layout);\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONGeometry} EsriJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  const coordinates = /** @type {module:ol/geom/Point} */ (geometry).getCoordinates();\n  let esriJSON;\n  const layout = /** @type {module:ol/geom/Point} */ (geometry).getLayout();\n  if (layout === GeometryLayout.XYZ) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1],\n      z: coordinates[2]\n    });\n  } else if (layout === GeometryLayout.XYM) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1],\n      m: coordinates[2]\n    });\n  } else if (layout === GeometryLayout.XYZM) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1],\n      z: coordinates[2],\n      m: coordinates[3]\n    });\n  } else if (layout === GeometryLayout.XY) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1]\n    });\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n  return /** @type {EsriJSONGeometry} */ (esriJSON);\n}\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @return {Object} Object with boolean hasZ and hasM keys.\n */\nfunction getHasZM(geometry) {\n  const layout = geometry.getLayout();\n  return {\n    hasZ: (layout === GeometryLayout.XYZ ||\n      layout === GeometryLayout.XYZM),\n    hasM: (layout === GeometryLayout.XYM ||\n      layout === GeometryLayout.XYZM)\n  };\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  const hasZM = getHasZM(/** @type {module:ol/geom/LineString} */(geometry));\n  return (\n    /** @type {EsriJSONPolyline} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      paths: [\n        /** @type {module:ol/geom/LineString} */ (geometry).getCoordinates()\n      ]\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  // Esri geometries use the left-hand rule\n  const hasZM = getHasZM(/** @type {module:ol/geom/Polygon} */(geometry));\n  return (\n    /** @type {EsriJSONPolygon} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      rings: /** @type {module:ol/geom/Polygon} */ (geometry).getCoordinates(false)\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  const hasZM = getHasZM(/** @type {module:ol/geom/MultiLineString} */(geometry));\n  return (\n    /** @type {EsriJSONPolyline} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      paths: /** @type {module:ol/geom/MultiLineString} */ (geometry).getCoordinates()\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONMultipoint} EsriJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  const hasZM = getHasZM(/** @type {module:ol/geom/MultiPoint} */(geometry));\n  return (\n    /** @type {EsriJSONMultipoint} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      points: /** @type {module:ol/geom/MultiPoint} */ (geometry).getCoordinates()\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  const hasZM = getHasZM(/** @type {module:ol/geom/MultiPolygon} */(geometry));\n  const coordinates = /** @type {module:ol/geom/MultiPolygon} */ (geometry).getCoordinates(false);\n  const output = [];\n  for (let i = 0; i < coordinates.length; i++) {\n    for (let x = coordinates[i].length - 1; x >= 0; x--) {\n      output.push(coordinates[i][x]);\n    }\n  }\n  return /** @type {EsriJSONPolygon} */ ({\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    rings: output\n  });\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONGeometry} EsriJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  const geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n  return geometryWriter(/** @type {module:ol/geom/Geometry} */(\n    transformWithOptions(geometry, true, opt_options)), opt_options);\n}\n\n\nexport default EsriJSON;\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n\n/**\n * When using {@link module:ol/xml~makeChildAppender} or\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node\n */\n\n\n/**\n * @typedef {function(Node, Array.<*>)} Parser\n */\n\n\n/**\n * @typedef {function(Node, *, Array.<*>)} Serializer\n */\n\n\n/**\n * This document should be used when creating nodes for XML serializations. This\n * document is also used by {@link module:ol/xml~createElementNS}\n * @const\n * @type {Document}\n */\nexport const DOCUMENT = document.implementation.createDocument('', '', null);\n\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI = 'http://www.w3.org/2001/XMLSchema-instance';\n\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Node} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return DOCUMENT.createElementNS(namespaceURI, qualifiedName);\n}\n\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array.<string>} accumulator Accumulator.\n * @private\n * @return {Array.<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (node.nodeType == Node.CDATA_SECTION_NODE ||\n      node.nodeType == Node.TEXT_NODE) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n\n/**\n * @param {?} value Value.\n * @return {boolean} Is document.\n */\nexport function isDocument(value) {\n  return value instanceof Document;\n}\n\n\n/**\n * @param {?} value Value.\n * @return {boolean} Is node.\n */\nexport function isNode(value) {\n  return value instanceof Node;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array.<*>): (Array.<*>|undefined)}\n *     valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        const array = /** @type {Array.<*>} */ (objectStack[objectStack.length - 1]);\n        extend(array, value);\n      }\n    }\n  );\n}\n\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array.<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        const array = /** @type {Array.<*>} */ (objectStack[objectStack.length - 1]);\n        array.push(value);\n      }\n    });\n}\n\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array.<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    });\n}\n\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Node, Array.<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        const property = opt_property !== undefined ? opt_property : node.localName;\n        let array;\n        if (property in object) {\n          array = object[property];\n        } else {\n          array = object[property] = [];\n        }\n        array.push(value);\n      }\n    });\n}\n\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Node, Array.<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        const property = opt_property !== undefined ? opt_property : node.localName;\n        object[property] = value;\n      }\n    });\n}\n\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array.<*>)}\n *     nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {module:ol/xml~Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n  return function(node, value, objectStack) {\n    nodeWriter.call(opt_this !== undefined ? opt_this : this, node, value, objectStack);\n    const parent = /** @type {module:ol/xml~NodeStackItem} */ (objectStack[objectStack.length - 1]);\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Node, V, Array.<*>)}\n *     nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {module:ol/xml~Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n  let serializersNS, nodeFactory;\n  return function(node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string=} opt_nodeName Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string=} opt_namespaceURI Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array.<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n  const fixedNodeName = opt_nodeName;\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array.<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node} Node.\n     */\n    function(value, objectStack, opt_nodeName) {\n      const context = /** @type {module:ol/xml~NodeStackItem} */ (objectStack[objectStack.length - 1]);\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = opt_nodeName;\n      }\n\n      const namespaceURI = opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object.<string, V>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array.<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array.<V>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n * @template V\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array.<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object.<string, T>=} opt_structureNS Namespaced structure to add to.\n * @return {Object.<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n  /**\n   * @type {Object.<string, T>}\n   */\n  const structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object.<string, Object.<string, module:ol/xml~Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(opt_this, n, objectStack);\n      }\n    }\n  }\n}\n\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object.<string, Object.<string, module:ol/xml~Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, opt_this) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, opt_this);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object.<string, Object.<string, module:ol/xml~Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array.<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array.<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array.<*>} objectStack Node stack.\n * @param {Array.<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n  const length = (opt_keys !== undefined ? opt_keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(opt_this !== undefined ? opt_this : this, value, objectStack,\n        opt_keys !== undefined ? opt_keys[i] : undefined);\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName]\n          .call(opt_this, node, value, objectStack);\n      }\n    }\n  }\n}\n\n\n/**\n * @param {O} object Object.\n * @param {Object.<string, Object.<string, module:ol/xml~Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array.<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array.<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array.<*>} objectStack Node stack.\n * @param {Array.<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(object, serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n","/**\n * @module ol/format/XMLFeature\n */\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport {isDocument, isNode, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nclass XMLFeature extends FeatureFormat {\n  constructor() {\n    super();\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = new XMLSerializer();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getType() {\n    return FormatType.XML;\n  }\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {module:ol/Feature} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    if (isDocument(source)) {\n      return this.readFeatureFromDocument(/** @type {Document} */ (source), opt_options);\n    } else if (isNode(source)) {\n      return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureFromDocument(doc, opt_options);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n   * @return {module:ol/Feature} Feature.\n   */\n  readFeatureFromDocument(doc, opt_options) {\n    const features = this.readFeaturesFromDocument(doc, opt_options);\n    if (features.length > 0) {\n      return features[0];\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n   * @return {module:ol/Feature} Feature.\n   */\n  readFeatureFromNode(node, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @function\n   * @param {Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n   * @return {Array.<module:ol/Feature>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source), opt_options);\n    } else if (isNode(source)) {\n      return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeaturesFromDocument(doc, opt_options);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n   * @protected\n   * @return {Array.<module:ol/Feature>} Features.\n   */\n  readFeaturesFromDocument(doc, opt_options) {\n    /** @type {Array.<module:ol/Feature>} */\n    const features = [];\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(features, this.readFeaturesFromNode(n, opt_options));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @abstract\n   * @param {Node} node Node.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n   * @protected\n   * @return {Array.<module:ol/Feature>} Features.\n   */\n  readFeaturesFromNode(node, opt_options) {}\n\n  /**\n   * @inheritDoc\n   */\n  readGeometry(source, opt_options) {\n    if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source), opt_options);\n    } else if (isNode(source)) {\n      return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readGeometryFromDocument(doc, opt_options);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n   * @protected\n   * @return {module:ol/geom/Geometry} Geometry.\n   */\n  readGeometryFromDocument(doc, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n   * @protected\n   * @return {module:ol/geom/Geometry} Geometry.\n   */\n  readGeometryFromNode(node, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @return {module:ol/proj/Projection} Projection.\n   * @api\n   */\n  readProjection(source) {\n    if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    } else if (isNode(source)) {\n      return this.readProjectionFromNode(/** @type {Node} */ (source));\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {module:ol/proj/Projection} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    return this.dataProjection;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @protected\n   * @return {module:ol/proj/Projection} Projection.\n   */\n  readProjectionFromNode(node) {\n    return this.dataProjection;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  writeFeature(feature, opt_options) {\n    const node = this.writeFeatureNode(feature, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  writeFeatureNode(feature, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array.<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {string} Result.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    const node = this.writeFeaturesNode(features, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {Array.<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   */\n  writeFeaturesNode(features, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * @inheritDoc\n   */\n  writeGeometry(geometry, opt_options) {\n    const node = this.writeGeometryNode(geometry, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {module:ol/geom/Geometry} geometry Geometry.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   */\n  writeGeometryNode(geometry, opt_options) {\n    return null; // not implemented\n  }\n}\n\n\nexport default XMLFeature;\n","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {getAllTextContent, getAttributeNS, makeArrayPusher, makeReplacer, parseNode, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {string}\n */\nexport const GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n */\nconst ONLY_WHITESPACE_RE = /^[\\s\\xa0]*$/;\n\n\n/**\n * @typedef {Object} Options\n * @property {Object.<string, string>|string} [featureNS] Feature\n * namespace. If not defined will be derived from GML. If multiple\n * feature types have been configured which come from different feature\n * namespaces, this will be an object with the keys being the prefixes used\n * in the entries of featureType array. The values of the object will be the\n * feature namespaces themselves. So for instance there might be a featureType\n * item `topp:states` in the `featureType` array and then there will be a key\n * `topp` in the featureNS object with value `http://www.openplans.org/topp`.\n * @property {Array.<string>|string} [featureType] Feature type(s) to parse.\n * If multiple feature types need to be configured\n * which come from different feature namespaces, `featureNS` will be an object\n * with the keys being the prefixes used in the entries of featureType array.\n * The values of the object will be the feature namespaces themselves.\n * So for instance there might be a featureType item `topp:states` and then\n * there will be a key named `topp` in the featureNS object with value\n * `http://www.openplans.org/topp`.\n * @property {string} srsName srsName to use when writing geometries.\n * @property {boolean} [surface=false] Write gml:Surface instead of gml:Polygon\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [curve=false] Write gml:Curve instead of gml:LineString\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [multiCurve=true] Write gml:MultiCurve instead of gml:MultiLineString.\n * Since the latter is deprecated in GML 3.\n * @property {boolean} [multiSurface=true] Write gml:multiSurface instead of\n * gml:MultiPolygon. Since the latter is deprecated in GML 3.\n * @property {string} [schemaLocation] Optional schemaLocation to use when\n * writing out the GML, this will override the default provided.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes GML2 and GML3.\n *\n * @abstract\n */\nclass GMLBase extends XMLFeature {\n\n  /**\n   * @param {module:ol/format/GMLBase~Options=} opt_options Optional configuration object.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = /** @type {module:ol/format/GMLBase~Options} */ (opt_options ? opt_options : {});\n\n    /**\n     * @protected\n     * @type {Array.<string>|string|undefined}\n     */\n    this.featureType = options.featureType;\n\n    /**\n     * @protected\n     * @type {Object.<string, string>|string|undefined}\n     */\n    this.featureNS = options.featureNS;\n\n    /**\n     * @protected\n     * @type {string}\n     */\n    this.srsName = options.srsName;\n\n    /**\n     * @protected\n     * @type {string}\n     */\n    this.schemaLocation = '';\n\n    /**\n     * @type {Object.<string, Object.<string, Object>>}\n     */\n    this.FEATURE_COLLECTION_PARSERS = {};\n    this.FEATURE_COLLECTION_PARSERS[GMLNS] = {\n      'featureMember': makeReplacer(this.readFeaturesInternal),\n      'featureMembers': makeReplacer(this.readFeaturesInternal)\n    };\n\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @return {Array.<module:ol/Feature> | undefined} Features.\n   */\n  readFeaturesInternal(node, objectStack) {\n    const localName = node.localName;\n    let features = null;\n    if (localName == 'FeatureCollection') {\n      if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n        features = pushParseAndPop([],\n          this.FEATURE_COLLECTION_PARSERS, node,\n          objectStack, this);\n      } else {\n        features = pushParseAndPop(null,\n          this.FEATURE_COLLECTION_PARSERS, node,\n          objectStack, this);\n      }\n    } else if (localName == 'featureMembers' || localName == 'featureMember') {\n      const context = objectStack[0];\n      let featureType = context['featureType'];\n      let featureNS = context['featureNS'];\n      const prefix = 'p';\n      const defaultPrefix = 'p0';\n      if (!featureType && node.childNodes) {\n        featureType = [], featureNS = {};\n        for (let i = 0, ii = node.childNodes.length; i < ii; ++i) {\n          const child = node.childNodes[i];\n          if (child.nodeType === 1) {\n            const ft = child.nodeName.split(':').pop();\n            if (featureType.indexOf(ft) === -1) {\n              let key = '';\n              let count = 0;\n              const uri = child.namespaceURI;\n              for (const candidate in featureNS) {\n                if (featureNS[candidate] === uri) {\n                  key = candidate;\n                  break;\n                }\n                ++count;\n              }\n              if (!key) {\n                key = prefix + count;\n                featureNS[key] = uri;\n              }\n              featureType.push(key + ':' + ft);\n            }\n          }\n        }\n        if (localName != 'featureMember') {\n          // recheck featureType for each featureMember\n          context['featureType'] = featureType;\n          context['featureNS'] = featureNS;\n        }\n      }\n      if (typeof featureNS === 'string') {\n        const ns = featureNS;\n        featureNS = {};\n        featureNS[defaultPrefix] = ns;\n      }\n      const parsersNS = {};\n      const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n      for (const p in featureNS) {\n        const parsers = {};\n        for (let i = 0, ii = featureTypes.length; i < ii; ++i) {\n          const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n            defaultPrefix : featureTypes[i].split(':')[0];\n          if (featurePrefix === p) {\n            parsers[featureTypes[i].split(':').pop()] =\n                (localName == 'featureMembers') ?\n                  makeArrayPusher(this.readFeatureElement, this) :\n                  makeReplacer(this.readFeatureElement, this);\n          }\n        }\n        parsersNS[featureNS[p]] = parsers;\n      }\n      if (localName == 'featureMember') {\n        features = pushParseAndPop(undefined, parsersNS, node, objectStack);\n      } else {\n        features = pushParseAndPop([], parsersNS, node, objectStack);\n      }\n    }\n    if (features === null) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @return {module:ol/geom/Geometry|undefined} Geometry.\n   */\n  readGeometryElement(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    context['srsName'] = node.firstElementChild.getAttribute('srsName');\n    context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n    /** @type {module:ol/geom/Geometry} */\n    const geometry = pushParseAndPop(null, this.GEOMETRY_PARSERS_, node, objectStack, this);\n    if (geometry) {\n      return (\n        /** @type {module:ol/geom/Geometry} */ (transformWithOptions(geometry, false, context))\n      );\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @return {module:ol/Feature} Feature.\n   */\n  readFeatureElement(node, objectStack) {\n    let n;\n    const fid = node.getAttribute('fid') || getAttributeNS(node, GMLNS, 'id');\n    const values = {};\n    let geometryName;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      // Assume attribute elements have one child node and that the child\n      // is a text or CDATA node (to be treated as text).\n      // Otherwise assume it is a geometry node.\n      if (n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n        let value = getAllTextContent(n, false);\n        if (ONLY_WHITESPACE_RE.test(value)) {\n          value = undefined;\n        }\n        values[localName] = value;\n      } else {\n        // boundedBy is an extent and must not be considered as a geometry\n        if (localName !== 'boundedBy') {\n          geometryName = localName;\n        }\n        values[localName] = this.readGeometryElement(n, objectStack);\n      }\n    }\n    const feature = new Feature(values);\n    if (geometryName) {\n      feature.setGeometryName(geometryName);\n    }\n    if (fid) {\n      feature.setId(fid);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @return {module:ol/geom/Point|undefined} Point.\n   */\n  readPoint(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n    if (flatCoordinates) {\n      return new Point(flatCoordinates, GeometryLayout.XYZ);\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @return {module:ol/geom/MultiPoint|undefined} MultiPoint.\n   */\n  readMultiPoint(node, objectStack) {\n    /** @type {Array.<Array.<number>>} */\n    const coordinates = pushParseAndPop([],\n      this.MULTIPOINT_PARSERS_, node, objectStack, this);\n    if (coordinates) {\n      return new MultiPoint(coordinates);\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @return {module:ol/geom/MultiLineString|undefined} MultiLineString.\n   */\n  readMultiLineString(node, objectStack) {\n    /** @type {Array.<module:ol/geom/LineString>} */\n    const lineStrings = pushParseAndPop([],\n      this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n    if (lineStrings) {\n      return new MultiLineString(lineStrings);\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @return {module:ol/geom/MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiPolygon(node, objectStack) {\n    /** @type {Array.<module:ol/geom/Polygon>} */\n    const polygons = pushParseAndPop([], this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @private\n   */\n  pointMemberParser_(node, objectStack) {\n    parseNode(this.POINTMEMBER_PARSERS_, node, objectStack, this);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @private\n   */\n  lineStringMemberParser_(node, objectStack) {\n    parseNode(this.LINESTRINGMEMBER_PARSERS_, node, objectStack, this);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @private\n   */\n  polygonMemberParser_(node, objectStack) {\n    parseNode(this.POLYGONMEMBER_PARSERS_, node, objectStack, this);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @return {module:ol/geom/LineString|undefined} LineString.\n   */\n  readLineString(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n      return lineString;\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @private\n   * @return {Array.<number>|undefined} LinearRing flat coordinates.\n   */\n  readFlatLinearRing_(node, objectStack) {\n    const ring = pushParseAndPop(null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n      objectStack, this);\n    if (ring) {\n      return ring;\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @return {module:ol/geom/LinearRing|undefined} LinearRing.\n   */\n  readLinearRing(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n    if (flatCoordinates) {\n      return new LinearRing(flatCoordinates, GeometryLayout.XYZ);\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @return {module:ol/geom/Polygon|undefined} Polygon.\n   */\n  readPolygon(node, objectStack) {\n    /** @type {Array.<Array.<number>>} */\n    const flatLinearRings = pushParseAndPop([null],\n      this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @private\n   * @return {Array.<number>} Flat coordinates.\n   */\n  readFlatCoordinatesFromNode_(node, objectStack) {\n    return pushParseAndPop(null, this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node, objectStack, this);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readGeometryFromNode(node, opt_options) {\n    const geometry = this.readGeometryElement(node,\n      [this.getReadOptions(node, opt_options ? opt_options : {})]);\n    return geometry ? geometry : null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeaturesFromNode(node, opt_options) {\n    const options = {\n      featureType: this.featureType,\n      featureNS: this.featureNS\n    };\n    if (opt_options) {\n      assign(options, this.getReadOptions(node, opt_options));\n    }\n    const features = this.readFeaturesInternal(node, [options]);\n    return features || [];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readProjectionFromNode(node) {\n    return getProjection(this.srsName ? this.srsName : node.firstElementChild.getAttribute('srsName'));\n  }\n}\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser_),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\nexport default GMLBase;\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, DOCUMENT} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, (bool) ? '1' : '0');\n}\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(DOCUMENT.createCDATASection(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      padNumber(date.getUTCDate(), 2) + 'T' +\n      padNumber(date.getUTCHours(), 2) + ':' +\n      padNumber(date.getUTCMinutes(), 2) + ':' +\n      padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n","/**\n * @module ol/format/GML3\n */\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase, {GMLNS} from '../format/GMLBase.js';\nimport {readNonNegativeIntegerString, writeStringTextNode} from '../format/xsd.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport {createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender,\n  makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, parseNode,\n  pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nconst schemaLocation = GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @api\n */\nclass GML3 extends GMLBase {\n\n  /**\n   * @param {module:ol/format/GMLBase~Options=} opt_options Optional configuration object.\n   */\n  constructor(opt_options) {\n    const options = /** @type {module:ol/format/GMLBase~Options} */\n        (opt_options ? opt_options : {});\n\n    super(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.surface_ = options.surface !== undefined ? options.surface : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.curve_ = options.curve !== undefined ? options.curve : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiCurve_ = options.multiCurve !== undefined ?\n      options.multiCurve : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiSurface_ = options.multiSurface !== undefined ?\n      options.multiSurface : true;\n\n    /**\n     * @inheritDoc\n     */\n    this.schemaLocation = options.schemaLocation ?\n      options.schemaLocation : schemaLocation;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hasZ = options.hasZ !== undefined ?\n      options.hasZ : false;\n\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @private\n   * @return {module:ol/geom/MultiLineString|undefined} MultiLineString.\n   */\n  readMultiCurve_(node, objectStack) {\n    /** @type {Array.<module:ol/geom/LineString>} */\n    const lineStrings = pushParseAndPop([],\n      this.MULTICURVE_PARSERS_, node, objectStack, this);\n    if (lineStrings) {\n      const multiLineString = new MultiLineString(lineStrings);\n      return multiLineString;\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @private\n   * @return {module:ol/geom/MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiSurface_(node, objectStack) {\n    /** @type {Array.<module:ol/geom/Polygon>} */\n    const polygons = pushParseAndPop([],\n      this.MULTISURFACE_PARSERS_, node, objectStack, this);\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @private\n   */\n  curveMemberParser_(node, objectStack) {\n    parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @private\n   */\n  surfaceMemberParser_(node, objectStack) {\n    parseNode(this.SURFACEMEMBER_PARSERS_,\n      node, objectStack, this);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @private\n   * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n   */\n  readPatch_(node, objectStack) {\n    return pushParseAndPop([null],\n      this.PATCHES_PARSERS_, node, objectStack, this);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @private\n   * @return {Array.<number>|undefined} flat coordinates.\n   */\n  readSegment_(node, objectStack) {\n    return pushParseAndPop([null],\n      this.SEGMENTS_PARSERS_, node, objectStack, this);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @private\n   * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n   */\n  readPolygonPatch_(node, objectStack) {\n    return pushParseAndPop([null],\n      this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @private\n   * @return {Array.<number>|undefined} flat coordinates.\n   */\n  readLineStringSegment_(node, objectStack) {\n    return pushParseAndPop([null],\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n      node, objectStack, this);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @private\n   */\n  interiorParser_(node, objectStack) {\n    /** @type {Array.<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n    if (flatLinearRing) {\n      const flatLinearRings = /** @type {Array.<Array.<number>>} */\n          (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @private\n   */\n  exteriorParser_(node, objectStack) {\n    /** @type {Array.<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n    if (flatLinearRing) {\n      const flatLinearRings = /** @type {Array.<Array.<number>>} */\n          (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @private\n   * @return {module:ol/geom/Polygon|undefined} Polygon.\n   */\n  readSurface_(node, objectStack) {\n    /** @type {Array.<Array.<number>>} */\n    const flatLinearRings = pushParseAndPop([null],\n      this.SURFACE_PARSERS_, node, objectStack, this);\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @private\n   * @return {module:ol/geom/LineString|undefined} LineString.\n   */\n  readCurve_(node, objectStack) {\n    /** @type {Array.<number>} */\n    const flatCoordinates = pushParseAndPop([null],\n      this.CURVE_PARSERS_, node, objectStack, this);\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n      return lineString;\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @private\n   * @return {module:ol/extent~Extent|undefined} Envelope.\n   */\n  readEnvelope_(node, objectStack) {\n    /** @type {Array.<number>} */\n    const flatCoordinates = pushParseAndPop([null],\n      this.ENVELOPE_PARSERS_, node, objectStack, this);\n    return createOrUpdate(flatCoordinates[1][0],\n      flatCoordinates[1][1], flatCoordinates[2][0],\n      flatCoordinates[2][1]);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @private\n   * @return {Array.<number>|undefined} Flat coordinates.\n   */\n  readFlatPos_(node, objectStack) {\n    let s = getAllTextContent(node, false);\n    const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n    /** @type {Array.<number>} */\n    const flatCoordinates = [];\n    let m;\n    while ((m = re.exec(s))) {\n      flatCoordinates.push(parseFloat(m[1]));\n      s = s.substr(m[0].length);\n    }\n    if (s !== '') {\n      return undefined;\n    }\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    if (axisOrientation === 'neu') {\n      let i, ii;\n      for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n        const y = flatCoordinates[i];\n        const x = flatCoordinates[i + 1];\n        flatCoordinates[i] = x;\n        flatCoordinates[i + 1] = y;\n      }\n    }\n    const len = flatCoordinates.length;\n    if (len == 2) {\n      flatCoordinates.push(0);\n    }\n    if (len === 0) {\n      return undefined;\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @private\n   * @return {Array.<number>|undefined} Flat coordinates.\n   */\n  readFlatPosList_(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    const contextDimension = context['srsDimension'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    const coords = s.split(/\\s+/);\n    // The \"dimension\" attribute is from the GML 3.0.1 spec.\n    let dim = 2;\n    if (node.getAttribute('srsDimension')) {\n      dim = readNonNegativeIntegerString(\n        node.getAttribute('srsDimension'));\n    } else if (node.getAttribute('dimension')) {\n      dim = readNonNegativeIntegerString(\n        node.getAttribute('dimension'));\n    } else if (node.parentNode.getAttribute('srsDimension')) {\n      dim = readNonNegativeIntegerString(\n        node.parentNode.getAttribute('srsDimension'));\n    } else if (contextDimension) {\n      dim = readNonNegativeIntegerString(contextDimension);\n    }\n    let x, y, z;\n    const flatCoordinates = [];\n    for (let i = 0, ii = coords.length; i < ii; i += dim) {\n      x = parseFloat(coords[i]);\n      y = parseFloat(coords[i + 1]);\n      z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Point} value Point geometry.\n   * @param {Array.<*>} objectStack Node stack.\n   * @private\n   */\n  writePos_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? 3 : 2;\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    const point = value.getCoordinates();\n    let coords;\n    // only 2d for simple features profile\n    if (axisOrientation.substr(0, 2) === 'en') {\n      coords = (point[0] + ' ' + point[1]);\n    } else {\n      coords = (point[1] + ' ' + point[0]);\n    }\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n    writeStringTextNode(node, coords);\n  }\n\n  /**\n   * @param {Array.<number>} point Point geometry.\n   * @param {string=} opt_srsName Optional srsName\n   * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, opt_srsName, opt_hasZ) {\n    let axisOrientation = 'enu';\n    if (opt_srsName) {\n      axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n    }\n    let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n      point[0] + ' ' + point[1] :\n      point[1] + ' ' + point[0]);\n    if (opt_hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LineString|module:ol/geom/LinearRing} value Geometry.\n   * @param {Array.<*>} objectStack Node stack.\n   * @private\n   */\n  writePosList_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? 3 : 2;\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    let point;\n    for (let i = 0; i < len; ++i) {\n      point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Point} geometry Point geometry.\n   * @param {Array.<*>} objectStack Node stack.\n   * @private\n   */\n  writePoint_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const pos = createElementNS(node.namespaceURI, 'pos');\n    node.appendChild(pos);\n    this.writePos_(pos, geometry, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {Array.<*>} objectStack Node stack.\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n      ({node: node}), this.ENVELOPE_SERIALIZERS_,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack, keys, this);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LinearRing} geometry LinearRing geometry.\n   * @param {Array.<*>} objectStack Node stack.\n   * @private\n   */\n  writeLinearRing_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const posList = createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array.<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, opt_nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'interior' : 'exterior');\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Polygon} geometry Polygon geometry.\n   * @param {Array.<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfaceOrPolygon_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS_,\n        this.RING_NODE_FACTORY_,\n        rings, objectStack, undefined, this);\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(\n        patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LineString} geometry LineString geometry.\n   * @param {Array.<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveOrLineString_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'LineString' ||\n        node.nodeName === 'LineStringSegment') {\n      const posList = createElementNS(node.namespaceURI, 'posList');\n      node.appendChild(posList);\n      this.writePosList_(posList, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments,\n        geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/MultiPolygon} geometry MultiPolygon geometry.\n   * @param {Array.<*>} objectStack Node stack.\n   * @private\n   */\n  writeMultiSurfaceOrPolygon_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n      objectStack, undefined, this);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/MultiPoint} geometry MultiPoint geometry.\n   * @param {Array.<*>} objectStack Node stack.\n   * @private\n   */\n  writeMultiPoint_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    const hasZ = context['hasZ'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS_,\n      makeSimpleNodeFactory('pointMember'), points,\n      objectStack, undefined, this);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/MultiLineString} geometry MultiLineString geometry.\n   * @param {Array.<*>} objectStack Node stack.\n   * @private\n   */\n  writeMultiCurveOrLineString_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n      objectStack, undefined, this);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LinearRing} ring LinearRing geometry.\n   * @param {Array.<*>} objectStack Node stack.\n   * @private\n   */\n  writeRing_(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing_(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n   * @param {Array.<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfaceOrPolygonMember_(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(\n      polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Point} point Point geometry.\n   * @param {Array.<*>} objectStack Node stack.\n   * @private\n   */\n  writePointMember_(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint_(child, point, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LineString} line LineString geometry.\n   * @param {Array.<*>} objectStack Node stack.\n   * @private\n   */\n  writeLineStringOrCurveMember_(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString_(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n   * @param {Array.<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LineString} line LineString geometry.\n   * @param {Array.<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI,\n      'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Geometry|module:ol/extent~Extent} geometry Geometry.\n   * @param {Array.<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[objectStack.length - 1]);\n    const item = assign({}, context);\n    item.node = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      if (context.dataProjection) {\n        value = transformExtent(\n          geometry, context.featureProjection, context.dataProjection);\n      } else {\n        value = geometry;\n      }\n    } else {\n      value = transformWithOptions(/** @type {module:ol/geom/Geometry} */ (geometry), true, context);\n    }\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n      (item), this.GEOMETRY_SERIALIZERS_,\n      this.GEOMETRY_NODE_FACTORY_, [value],\n      objectStack, undefined, this);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/Feature} feature Feature.\n   * @param {Array.<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', fid);\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const properties = feature.getProperties();\n    const keys = [];\n    const values = [];\n    for (const key in properties) {\n      const value = properties[key];\n      if (value !== null) {\n        keys.push(key);\n        values.push(value);\n        if (key == geometryName || value instanceof Geometry) {\n          if (!(key in context.serializers[featureNS])) {\n            context.serializers[featureNS][key] = makeChildAppender(\n              this.writeGeometryElement, this);\n          }\n        } else {\n          if (!(key in context.serializers[featureNS])) {\n            context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\n          }\n        }\n      }\n    }\n    const item = assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n      (item), context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack, keys);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<module:ol/Feature>} features Features.\n   * @param {Array.<*>} objectStack Node stack.\n   * @private\n   */\n  writeFeatureMembers_(node, features, objectStack) {\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureType = context['featureType'];\n    const featureNS = context['featureNS'];\n    const serializers = {};\n    serializers[featureNS] = {};\n    serializers[featureNS][featureType] = makeChildAppender(\n      this.writeFeatureElement, this);\n    const item = assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n      (item),\n      serializers,\n      makeSimpleNodeFactory(featureType, featureNS), features,\n      objectStack);\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array.<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, opt_nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS('http://www.opengis.net/gml',\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array.<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, opt_nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const curve = context['curve'];\n    const multiCurve = context['multiCurve'];\n    let nodeName;\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {module:ol/geom/Geometry} */ (value).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'LineString' && curve === true) {\n        nodeName = 'Curve';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS('http://www.opengis.net/gml',\n      nodeName);\n  }\n\n  /**\n   * Encode a geometry in GML 3.1.1 Simple Features.\n   *\n   * @param {module:ol/geom/Geometry} geometry Geometry.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   * @override\n   * @api\n   */\n  writeGeometryNode(geometry, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const geom = createElementNS('http://www.opengis.net/gml', 'geom');\n    const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n      curve: this.curve_, surface: this.surface_,\n      multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n    if (opt_options) {\n      assign(context, opt_options);\n    }\n    this.writeGeometryElement(geom, geometry, [context]);\n    return geom;\n  }\n\n  /**\n   * Encode an array of features in the GML 3.1.1 format as an XML node.\n   *\n   * @param {Array.<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   * @override\n   * @api\n   */\n  writeFeaturesNode(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const node = createElementNS('http://www.opengis.net/gml', 'featureMembers');\n    node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation);\n    const context = {\n      srsName: this.srsName,\n      hasZ: this.hasZ,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n      featureNS: this.featureNS,\n      featureType: this.featureType\n    };\n    if (opt_options) {\n      assign(context, opt_options);\n    }\n    this.writeFeatureMembers_(node, features, [context]);\n    return node;\n  }\n}\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML3.prototype.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing_),\n    'interior': makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML3.prototype.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML3.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML3.prototype.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML3.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML3.prototype.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\nexport default GML3;\n","/**\n * @module ol/format/GML\n */\nimport GML3 from '../format/GML3.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @param {module:ol/format/GMLBase~Options=} opt_options\n *     Optional configuration object.\n * @api\n */\nconst GML = GML3;\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @function\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @api\n */\nGML.prototype.writeFeaturesNode;\n\nexport default GML;\n","/**\n * @module ol/format/GML2\n */\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase, {GMLNS} from '../format/GMLBase.js';\nimport {writeStringTextNode} from '../format/xsd.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport {createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender,\n  makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, pushParseAndPop, pushSerializeAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {string}\n */\nconst schemaLocation = GMLNS + ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @api\n */\nclass GML2 extends GMLBase {\n\n  /**\n   * @param {module:ol/format/GMLBase~Options=} opt_options Optional configuration object.\n   */\n  constructor(opt_options) {\n    const options = /** @type {module:ol/format/GMLBase~Options} */\n        (opt_options ? opt_options : {});\n\n    super(options);\n\n    this.FEATURE_COLLECTION_PARSERS[GMLNS][\n      'featureMember'] =\n        makeArrayPusher(this.readFeaturesInternal);\n\n    /**\n     * @inheritDoc\n     */\n    this.schemaLocation = options.schemaLocation ?\n      options.schemaLocation : schemaLocation;\n\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @private\n   * @return {Array.<number>|undefined} Flat coordinates.\n   */\n  readFlatCoordinates_(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = /** @type {module:ol/xml~NodeStackItem} */ (objectStack[0]);\n    const containerSrs = context['srsName'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      if (proj) {\n        axisOrientation = proj.getAxisOrientation();\n      }\n    }\n    const coordsGroups = s.trim().split(/\\s+/);\n    const flatCoordinates = [];\n    for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n      const coords = coordsGroups[i].split(/,+/);\n      const x = parseFloat(coords[0]);\n      const y = parseFloat(coords[1]);\n      const z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @private\n   * @return {module:ol/extent~Extent|undefined} Envelope.\n   */\n  readBox_(node, objectStack) {\n    /** @type {Array.<number>} */\n    const flatCoordinates = pushParseAndPop([null],\n      this.BOX_PARSERS_, node, objectStack, this);\n    return createOrUpdate(flatCoordinates[1][0],\n      flatCoordinates[1][1], flatCoordinates[1][3],\n      flatCoordinates[1][4]);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @private\n   */\n  innerBoundaryIsParser_(node, objectStack) {\n    /** @type {Array.<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n    if (flatLinearRing) {\n      const flatLinearRings = /** @type {Array.<Array.<number>>} */\n          (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @private\n   */\n  outerBoundaryIsParser_(node, objectStack) {\n    /** @type {Array.<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n    if (flatLinearRing) {\n      const flatLinearRings = /** @type {Array.<Array.<number>>} */\n          (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array.<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, opt_nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const multiCurve = context['multiCurve'];\n    let nodeName;\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {module:ol/geom/Geometry} */ (value).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS('http://www.opengis.net/gml',\n      nodeName);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/Feature} feature Feature.\n   * @param {Array.<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', fid);\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const properties = feature.getProperties();\n    const keys = [];\n    const values = [];\n    for (const key in properties) {\n      const value = properties[key];\n      if (value !== null) {\n        keys.push(key);\n        values.push(value);\n        if (key == geometryName || value instanceof Geometry) {\n          if (!(key in context.serializers[featureNS])) {\n            context.serializers[featureNS][key] = makeChildAppender(\n              this.writeGeometryElement, this);\n          }\n        } else {\n          if (!(key in context.serializers[featureNS])) {\n            context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\n          }\n        }\n      }\n    }\n    const item = assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n      (item), context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack, keys);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LineString} geometry LineString geometry.\n   * @param {Array.<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveOrLineString_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'LineString' ||\n        node.nodeName === 'LineStringSegment') {\n      const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n      node.appendChild(coordinates);\n      this.writeCoordinates_(coordinates, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments,\n        geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LineString} line LineString geometry.\n   * @param {Array.<*>} objectStack Node stack.\n   * @private\n   */\n  writeLineStringOrCurveMember_(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString_(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/MultiLineString} geometry MultiLineString geometry.\n   * @param {Array.<*>} objectStack Node stack.\n   * @private\n   */\n  writeMultiCurveOrLineString_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n      objectStack, undefined, this);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Geometry|module:ol/extent~Extent} geometry Geometry.\n   * @param {Array.<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[objectStack.length - 1]);\n    const item = assign({}, context);\n    item.node = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      if (context.dataProjection) {\n        value = transformExtent(\n          geometry, context.featureProjection, context.dataProjection);\n      } else {\n        value = geometry;\n      }\n    } else {\n      value = transformWithOptions(/** @type {module:ol/geom/Geometry} */ (geometry), true, context);\n    }\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n      (item), this.GEOMETRY_SERIALIZERS_,\n      this.GEOMETRY_NODE_FACTORY_, [value],\n      objectStack, undefined, this);\n  }\n\n  /**\n   * @param {string} namespaceURI XML namespace.\n   * @returns {Node} coordinates node.\n   * @private\n   */\n  createCoordinatesNode_(namespaceURI) {\n    const coordinates = createElementNS(namespaceURI, 'coordinates');\n    coordinates.setAttribute('decimal', '.');\n    coordinates.setAttribute('cs', ',');\n    coordinates.setAttribute('ts', ' ');\n\n    return coordinates;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LineString|module:ol/geom/LinearRing} value Geometry.\n   * @param {Array.<*>} objectStack Node stack.\n   * @private\n   */\n  writeCoordinates_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      const point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LineString} line LineString geometry.\n   * @param {Array.<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Polygon} geometry Polygon geometry.\n   * @param {Array.<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfaceOrPolygon_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS_,\n        this.RING_NODE_FACTORY_,\n        rings, objectStack, undefined, this);\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(\n        patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array.<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, opt_nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n   * @param {Array.<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LinearRing} ring LinearRing geometry.\n   * @param {Array.<*>} objectStack Node stack.\n   * @private\n   */\n  writeRing_(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing_(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Array.<number>} point Point geometry.\n   * @param {string=} opt_srsName Optional srsName\n   * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, opt_srsName, opt_hasZ) {\n    let axisOrientation = 'enu';\n    if (opt_srsName) {\n      axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n    }\n    let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n      point[0] + ',' + point[1] :\n      point[1] + ',' + point[0]);\n    if (opt_hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ',' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Point} geometry Point geometry.\n   * @param {Array.<*>} objectStack Node stack.\n   * @private\n   */\n  writePoint_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    const point = geometry.getCoordinates();\n    const coord = this.getCoords_(point, srsName, hasZ);\n    writeStringTextNode(coordinates, coord);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/MultiPoint} geometry MultiPoint geometry.\n   * @param {Array.<*>} objectStack Node stack.\n   * @private\n   */\n  writeMultiPoint_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS_,\n      makeSimpleNodeFactory('pointMember'), points,\n      objectStack, undefined, this);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Point} point Point geometry.\n   * @param {Array.<*>} objectStack Node stack.\n   * @private\n   */\n  writePointMember_(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint_(child, point, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LinearRing} geometry LinearRing geometry.\n   * @param {Array.<*>} objectStack Node stack.\n   * @private\n   */\n  writeLinearRing_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/MultiPolygon} geometry MultiPolygon geometry.\n   * @param {Array.<*>} objectStack Node stack.\n   * @private\n   */\n  writeMultiSurfaceOrPolygon_(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n      objectStack, undefined, this);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n   * @param {Array.<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfaceOrPolygonMember_(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(\n      polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {Array.<*>} objectStack Node stack.\n   * @private\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n      ({node: node}), this.ENVELOPE_SERIALIZERS_,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack, keys, this);\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array.<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, opt_nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS('http://www.opengis.net/gml',\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\n  }\n}\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode)\n  }\n};\n\nexport default GML2;\n","/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport {includes} from '../array.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {readString, readDecimal, readNonNegativeInteger, readDateTime, writeStringTextNode, writeNonNegativeIntegerTextNode, writeDecimalTextNode, writeDateTimeTextNode} from '../format/xsd.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport {get as getProjection} from '../proj.js';\nimport {createElementNS, makeArrayPusher, makeArraySerializer, makeChildAppender,\n  makeObjectPropertySetter, makeSequence, makeSimpleNodeFactory, makeStructureNS,\n  OBJECT_PROPERTY_NODE_FACTORY, parseNode, pushParseAndPop, pushSerializeAndPop,\n  XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array.<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n\n/**\n * @const\n * @type {Object.<string, function(Node, Array.<*>): (module:ol/Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst GPX_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': makeArrayPusher(readRte),\n    'trk': makeArrayPusher(readTrk),\n    'wpt': makeArrayPusher(readWpt)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst LINK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': makeObjectPropertySetter(readString, 'linkText'),\n    'type': makeObjectPropertySetter(readString, 'linkType')\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst GPX_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': makeChildAppender(writeRte),\n    'trk': makeChildAppender(writeTrk),\n    'wpt': makeChildAppender(writeWpt)\n  });\n\n\n/**\n * @typedef {Object} Options\n * @property {function(module:ol/Feature, Node)} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ]\n * @property {boolean} [hasM]\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nclass GPX extends XMLFeature {\n\n  /**\n   * @param {module:ol/format/GPX~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @type {function(module:ol/Feature, Node)|undefined}\n     * @private\n     */\n    this.readExtensions_ = options.readExtensions;\n  }\n\n  /**\n   * @param {Array.<module:ol/Feature>} features List of features.\n   * @private\n   */\n  handleReadExtensions_(features) {\n    if (!features) {\n      features = [];\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      if (this.readExtensions_) {\n        const extensionsNode = feature.get('extensionsNode_') || null;\n        this.readExtensions_(feature, extensionsNode);\n      }\n      feature.set('extensionsNode_', undefined);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeatureFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return null;\n    }\n    const featureReader = FEATURE_READER[node.localName];\n    if (!featureReader) {\n      return null;\n    }\n    const feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n    if (!feature) {\n      return null;\n    }\n    this.handleReadExtensions_([feature]);\n    return feature;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeaturesFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return [];\n    }\n    if (node.localName == 'gpx') {\n      /** @type {Array.<module:ol/Feature>} */\n      const features = pushParseAndPop([], GPX_PARSERS,\n        node, [this.getReadOptions(node, opt_options)]);\n      if (features) {\n        this.handleReadExtensions_(features);\n        return features;\n      } else {\n        return [];\n      }\n    }\n    return [];\n  }\n\n  /**\n   * Encode an array of features in the GPX format as an XML node.\n   * LineString geometries are output as routes (`<rte>`), and MultiLineString\n   * as tracks (`<trk>`).\n   *\n   * @param {Array.<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   * @override\n   * @api\n   */\n  writeFeaturesNode(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    //FIXME Serialize metadata\n    const gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    gpx.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n    gpx.setAttribute('version', '1.1');\n    gpx.setAttribute('creator', 'OpenLayers');\n\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n      ({node: gpx}), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n    return gpx;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst RTE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\n    'extensions': parseExtensions,\n    'type': makeObjectPropertySetter(readString),\n    'rtept': parseRtePt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst RTEPT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst TRK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\n    'type': makeObjectPropertySetter(readString),\n    'extensions': parseExtensions,\n    'trkseg': parseTrkSeg\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst TRKSEG_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': parseTrkPt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst TRKPT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst WPT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime),\n    'magvar': makeObjectPropertySetter(readDecimal),\n    'geoidheight': makeObjectPropertySetter(readDecimal),\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'sym': makeObjectPropertySetter(readString),\n    'type': makeObjectPropertySetter(readString),\n    'fix': makeObjectPropertySetter(readString),\n    'sat': makeObjectPropertySetter(readNonNegativeInteger),\n    'hdop': makeObjectPropertySetter(readDecimal),\n    'vdop': makeObjectPropertySetter(readDecimal),\n    'pdop': makeObjectPropertySetter(readDecimal),\n    'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n    'dgpsid': makeObjectPropertySetter(readNonNegativeInteger),\n    'extensions': parseExtensions\n  });\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst LINK_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': makeChildAppender(writeStringTextNode),\n    'type': makeChildAppender(writeStringTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst RTE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'rtept': makeArraySerializer(makeChildAppender(writeWptType))\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTEPT_TYPE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst TRK_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst TRK_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg))\n  });\n\n\n/**\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst TRKSEG_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': makeChildAppender(writeWptType)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst WPT_TYPE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n    'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n    'ageofdgpsdata', 'dgpsid'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst WPT_TYPE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeChildAppender(writeDecimalTextNode),\n    'time': makeChildAppender(writeDateTimeTextNode),\n    'magvar': makeChildAppender(writeDecimalTextNode),\n    'geoidheight': makeChildAppender(writeDecimalTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'sym': makeChildAppender(writeStringTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'fix': makeChildAppender(writeStringTextNode),\n    'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'hdop': makeChildAppender(writeDecimalTextNode),\n    'vdop': makeChildAppender(writeDecimalTextNode),\n    'pdop': makeChildAppender(writeDecimalTextNode),\n    'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n    'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk'\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  const geometry = /** @type {module:ol/Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {module:ol/format/GPX~LayoutOptions} layoutOptions Layout options.\n * @param {Node} node Node.\n * @param {!Object} values Values.\n * @return {Array.<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')));\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {module:ol/format/GPX~LayoutOptions} layoutOptions Layout options.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>=} ends Ends.\n * @return {module:ol/geom/GeometryLayout} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n  let layout = GeometryLayout.XY;\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    for (let i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = flatCoordinates.length / 4 * stride;\n    if (ends) {\n      for (let i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = ends[i] / 4 * stride;\n      }\n    }\n  }\n  return layout;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */ (rteValues['flatCoordinates']);\n    const layoutOptions = /** @type {module:ol/format/GPX~LayoutOptions} */ (rteValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */ (trkValues['flatCoordinates']);\n    const layoutOptions = /** @type {module:ol/format/GPX~LayoutOptions} */ (trkValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {module:ol/format/Feature~ReadOptions} */ (objectStack[0]);\n  const values = pushParseAndPop({\n    'flatCoordinates': [],\n    'layoutOptions': {}\n  }, RTE_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {module:ol/format/GPX~LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n  const geometry = new LineString(flatCoordinates, layout);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {module:ol/format/Feature~ReadOptions} */ (objectStack[0]);\n  const values = pushParseAndPop({\n    'flatCoordinates': [],\n    'ends': [],\n    'layoutOptions': {}\n  }, TRK_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {module:ol/format/GPX~LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(flatCoordinates, layout, ends);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {module:ol/format/Feature~ReadOptions} */ (objectStack[0]);\n  const values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {module:ol/format/GPX~LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = applyLayoutOptions(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [\n    properties['linkText'],\n    properties['linkType']\n  ];\n  pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    link, objectStack, LINK_SEQUENCE);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  node.setAttributeNS(null, 'lat', coordinate[1]);\n  node.setAttributeNS(null, 'lon', coordinate[0]);\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n      // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n      // pass\n  }\n  const orderedKeys = (node.nodeName == 'rtept') ?\n    RTEPT_TYPE_SEQUENCE[namespaceURI] :\n    WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {module:ol/geom/LineString} */ (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    properties['rtept'] = geometry.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context,\n    RTE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  /** @type {module:ol/xml~NodeStackItem} */\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {module:ol/geom/MultiLineString} */\n      (transformWithOptions(geometry, true, options));\n    properties['trkseg'] = geometry.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context,\n    TRK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LineString} lineString LineString.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {module:ol/xml~NodeStackItem} */\n  const context = {node: node, 'geometryLayout': lineString.getLayout(),\n    'properties': {}};\n  pushSerializeAndPop(context,\n    TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(), objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[0]);\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {module:ol/geom/Point} */\n      (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    writeWptType(node, geometry.getCoordinates(), objectStack);\n  }\n}\n\n\nexport default GPX;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n\n  /**\n   * @param {Array.<module:ol/geom/Geometry>=} opt_geometries Geometries.\n   */\n  constructor(opt_geometries) {\n\n    super();\n\n    /**\n     * @private\n     * @type {Array.<module:ol/geom/Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      unlisten(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n    }\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      listen(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/GeometryCollection} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    return geometryCollection;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x, y, closestPoint, minSquaredDistance);\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array.<module:ol/geom/Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array.<module:ol/geom/Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    const key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      const simplifiedGeometries = [];\n      const geometries = this.geometries_;\n      let simplified = false;\n      for (let i = 0, ii = geometries.length; i < ii; ++i) {\n        const geometry = geometries[i];\n        const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n        simplifiedGeometries.push(simplifiedGeometry);\n        if (simplifiedGeometry !== geometry) {\n          simplified = true;\n        }\n      }\n      if (simplified) {\n        const simplifiedGeometryCollection = new GeometryCollection(null);\n        simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n        this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n        return simplifiedGeometryCollection;\n      } else {\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.GEOMETRY_COLLECTION;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array.<module:ol/geom/Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array.<module:ol/geom/Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @override\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    Geometry.prototype.disposeInternal.call(this);\n  }\n}\n\n\n/**\n * @param {Array.<module:ol/geom/Geometry>} geometries Geometries.\n * @return {Array.<module:ol/geom/Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/GeoJSON\n */\n// TODO: serialize dataProjection as crs member when writing\n// see https://github.com/openlayers/openlayers/issues/2078\n\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport JSONFeature from '../format/JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/proj~ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {module:ol/proj~ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n  * @api\n */\nclass GeoJSON extends JSONFeature {\n\n  /**\n   * @param {module:ol/format/GeoJSON~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super();\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ?\n        options.dataProjection : 'EPSG:4326');\n\n    if (options.featureProjection) {\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeatureFromObject(object, opt_options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object.type === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ ({\n        type: 'Feature',\n        geometry: /** @type {GeoJSONGeometry|GeoJSONGeometryCollection} */ (object)\n      });\n    }\n\n    const geometry = readGeometry(geoJSONFeature.geometry, opt_options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && geoJSONFeature.geometry_name !== undefined) {\n      feature.setGeometryName(geoJSONFeature.geometry_name);\n    }\n    feature.setGeometry(geometry);\n    if (geoJSONFeature.id !== undefined) {\n      feature.setId(geoJSONFeature.id);\n    }\n    if (geoJSONFeature.properties) {\n      feature.setProperties(geoJSONFeature.properties);\n    }\n    return feature;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeaturesFromObject(object, opt_options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array.<module:ol/Feature>} */\n    let features = null;\n    if (geoJSONObject.type === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection.features;\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, opt_options)];\n    }\n    return features;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readGeometryFromObject(object, opt_options) {\n    return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readProjectionFromObject(object) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    const crs = geoJSONObject.crs;\n    let projection;\n    if (crs) {\n      if (crs.type == 'name') {\n        projection = getProjection(crs.properties.name);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return (\n      /** @type {module:ol/proj/Projection} */ (projection)\n    );\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeature} Object.\n   * @override\n   * @api\n   */\n  writeFeatureObject(feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n\n    const object = /** @type {GeoJSONFeature} */ ({\n      'type': 'Feature'\n    });\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, opt_options);\n    } else {\n      object.geometry = null;\n    }\n    const properties = feature.getProperties();\n    delete properties[feature.getGeometryName()];\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    } else {\n      object.properties = null;\n    }\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array.<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @override\n   * @api\n   */\n  writeFeaturesObject(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], opt_options));\n    }\n    return /** @type {GeoJSONFeatureCollection} */ ({\n      type: 'FeatureCollection',\n      features: objects\n    });\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {module:ol/geom/Geometry} geometry Geometry.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @override\n   * @api\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, function(GeoJSONObject): module:ol/geom/Geometry>}\n */\nconst GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry,\n  'GeometryCollection': readGeometryCollectionGeometry\n};\n\n\n/**\n * @const\n * @type {Object.<string, function(module:ol/geom/Geometry, module:ol/format/Feature~WriteOptions=): (GeoJSONGeometry|GeoJSONGeometryCollection)>}\n */\nconst GEOMETRY_WRITERS = {\n  'Point': writePointGeometry,\n  'LineString': writeLineStringGeometry,\n  'Polygon': writePolygonGeometry,\n  'MultiPoint': writeMultiPointGeometry,\n  'MultiLineString': writeMultiLineStringGeometry,\n  'MultiPolygon': writeMultiPolygonGeometry,\n  'GeometryCollection': writeGeometryCollectionGeometry,\n  'Circle': writeEmptyGeometryCollectionGeometry\n};\n\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/Geometry} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n  const geometryReader = GEOMETRY_READERS[object.type];\n  return (\n    /** @type {module:ol/geom/Geometry} */ (transformWithOptions(geometryReader(object), false, opt_options))\n  );\n}\n\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  const geometries = object.geometries.map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {module:ol/geom/Geometry} geometry Geometry.\n     */\n    function(geometry) {\n      return readGeometry(geometry, opt_options);\n    });\n  return new GeometryCollection(geometries);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object.coordinates);\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry|GeoJSONGeometryCollection} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  const geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n  return geometryWriter(/** @type {module:ol/geom/Geometry} */ (\n    transformWithOptions(geometry, true, opt_options)), opt_options);\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @return {GeoJSONGeometryCollection} Empty GeoJSON geometry collection.\n */\nfunction writeEmptyGeometryCollectionGeometry(geometry) {\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: []\n  });\n}\n\n\n/**\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  const geometries = geometry.getGeometriesArray().map(function(geometry) {\n    const options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: geometries\n  });\n}\n\n\n/**\n * @param {module:ol/geom/LineString} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'LineString',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {module:ol/geom/MultiLineString} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {module:ol/geom/MultiPoint} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n}\n\n\n/**\n * @param {module:ol/geom/Point} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Point',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {module:ol/geom/Polygon} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n}\n\n\nexport default GeoJSON;\n","/**\n * @module ol/format/TextFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nclass TextFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getType() {\n    return FormatType.TEXT;\n  }\n\n  /**\n   * Read the feature from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {module:ol/Feature} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    return this.readFeatureFromText(getText(source), this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {module:ol/Feature} Feature.\n   */\n  readFeatureFromText(text, opt_options) {}\n\n  /**\n   * Read the features from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {Array.<module:ol/Feature>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    return this.readFeaturesFromText(getText(source), this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array.<module:ol/Feature>} Features.\n   */\n  readFeaturesFromText(text, opt_options) {}\n\n  /**\n   * Read the geometry from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {module:ol/geom/Geometry} Geometry.\n   * @api\n   */\n  readGeometry(source, opt_options) {\n    return this.readGeometryFromText(getText(source), this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {module:ol/geom/Geometry} Geometry.\n   */\n  readGeometryFromText(text, opt_options) {}\n\n  /**\n   * Read the projection from the source.\n   *\n   * @function\n   * @param {Document|Node|Object|string} source Source.\n   * @return {module:ol/proj/Projection} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromText(getText(source));\n  }\n\n  /**\n   * @param {string} text Text.\n   * @protected\n   * @return {module:ol/proj/Projection} Projection.\n   */\n  readProjectionFromText(text) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as a string.\n   *\n   * @function\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, opt_options) {\n    return this.writeFeatureText(feature, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {module:ol/Feature} feature Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, opt_options) {}\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array.<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    return this.writeFeaturesText(features, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array.<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, opt_options) {}\n\n  /**\n   * Write a single geometry.\n   *\n   * @function\n   * @param {module:ol/geom/Geometry} geometry Geometry.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {string} Geometry.\n   * @api\n   */\n  writeGeometry(geometry, opt_options) {\n    return this.writeGeometryText(geometry, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {module:ol/geom/Geometry} geometry Geometry.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, opt_options) {}\n}\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  } else {\n    return '';\n  }\n}\n\n\nexport default TextFeature;\n","/**\n * @module ol/format/IGC\n */\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport TextFeature from '../format/TextFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * IGC altitude/z. One of 'barometric', 'gps', 'none'.\n * @enum {string}\n */\nconst IGCZ = {\n  BAROMETRIC: 'barometric',\n  GPS: 'gps',\n  NONE: 'none'\n};\n\n/**\n * @const\n * @type {RegExp}\n */\nconst B_RECORD_RE =\n    /^B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5})/;\n\n\n/**\n * @const\n * @type {RegExp}\n */\nconst H_RECORD_RE = /^H.([A-Z]{3}).*?:(.*)/;\n\n\n/**\n * @const\n * @type {RegExp}\n */\nconst HFDTE_RECORD_RE = /^HFDTE(\\d{2})(\\d{2})(\\d{2})/;\n\n\n/**\n * A regular expression matching the newline characters `\\r\\n`, `\\r` and `\\n`.\n *\n * @const\n * @type {RegExp}\n */\nconst NEWLINE_RE = /\\r\\n|\\r|\\n/;\n\n\n/**\n * @typedef {Object} Options\n * @property {IGCZ|string} [altitudeMode='none'] Altitude mode. Possible\n * values are `'barometric'`, `'gps'`, and `'none'`.\n */\n\n\n/**\n * @classdesc\n * Feature format for `*.igc` flight recording files.\n *\n * As IGC sources contain a single feature,\n * {@link module:ol/format/IGC~IGC#readFeatures} will return the feature in an\n * array\n *\n * @api\n */\nclass IGC extends TextFeature {\n\n  /**\n   * @param {module:ol/format/IGC~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {IGCZ}\n     */\n    this.altitudeMode_ = options.altitudeMode ? options.altitudeMode : IGCZ.NONE;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeatureFromText(text, opt_options) {\n    const altitudeMode = this.altitudeMode_;\n    const lines = text.split(NEWLINE_RE);\n    /** @type {Object.<string, string>} */\n    const properties = {};\n    const flatCoordinates = [];\n    let year = 2000;\n    let month = 0;\n    let day = 1;\n    let lastDateTime = -1;\n    let i, ii;\n    for (i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      let m;\n      if (line.charAt(0) == 'B') {\n        m = B_RECORD_RE.exec(line);\n        if (m) {\n          const hour = parseInt(m[1], 10);\n          const minute = parseInt(m[2], 10);\n          const second = parseInt(m[3], 10);\n          let y = parseInt(m[4], 10) + parseInt(m[5], 10) / 60000;\n          if (m[6] == 'S') {\n            y = -y;\n          }\n          let x = parseInt(m[7], 10) + parseInt(m[8], 10) / 60000;\n          if (m[9] == 'W') {\n            x = -x;\n          }\n          flatCoordinates.push(x, y);\n          if (altitudeMode != IGCZ.NONE) {\n            let z;\n            if (altitudeMode == IGCZ.GPS) {\n              z = parseInt(m[11], 10);\n            } else if (altitudeMode == IGCZ.BAROMETRIC) {\n              z = parseInt(m[12], 10);\n            } else {\n              z = 0;\n            }\n            flatCoordinates.push(z);\n          }\n          let dateTime = Date.UTC(year, month, day, hour, minute, second);\n          // Detect UTC midnight wrap around.\n          if (dateTime < lastDateTime) {\n            dateTime = Date.UTC(year, month, day + 1, hour, minute, second);\n          }\n          flatCoordinates.push(dateTime / 1000);\n          lastDateTime = dateTime;\n        }\n      } else if (line.charAt(0) == 'H') {\n        m = HFDTE_RECORD_RE.exec(line);\n        if (m) {\n          day = parseInt(m[1], 10);\n          month = parseInt(m[2], 10) - 1;\n          year = 2000 + parseInt(m[3], 10);\n        } else {\n          m = H_RECORD_RE.exec(line);\n          if (m) {\n            properties[m[1]] = m[2].trim();\n          }\n        }\n      }\n    }\n    if (flatCoordinates.length === 0) {\n      return null;\n    }\n    const layout = altitudeMode == IGCZ.NONE ? GeometryLayout.XYM : GeometryLayout.XYZM;\n    const lineString = new LineString(flatCoordinates, layout);\n    const feature = new Feature(transformWithOptions(lineString, false, opt_options));\n    feature.setProperties(properties);\n    return feature;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeaturesFromText(text, opt_options) {\n    const feature = this.readFeatureFromText(text, opt_options);\n    if (feature) {\n      return [feature];\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Not implemented.\n   * @inheritDoc\n   */\n  writeFeatureText(feature, opt_options) {}\n\n  /**\n   * Not implemented.\n   * @inheritDoc\n   */\n  writeFeaturesText(features, opt_options) {}\n\n  /**\n   * Not implemented.\n   * @inheritDoc\n   */\n  writeGeometryText(geometry, opt_options) {}\n\n  /**\n   * Not implemented.\n   * @inheritDoc\n   */\n  readGeometryFromText(text, opt_options) {}\n}\n\nexport default IGC;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  FRACTION: 'fraction',\n  PIXELS: 'pixels'\n};\n","/**\n * @module ol/style/IconImage\n */\n\nimport {createCanvasContext2D} from '../dom.js';\nimport {listenOnce, unlistenByKey} from '../events.js';\nimport EventTarget from '../events/EventTarget.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {module:ol/size~Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {module:ol/ImageState} imageState Image state.\n   * @param {module:ol/color~Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = color ?\n      /** @type {HTMLCanvasElement} */ (document.createElement('CANVAS')) :\n      null;\n\n    /**\n     * @private\n     * @type {module:ol/color~Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/ImageState}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.tainting_ = false;\n    if (this.imageState_ == ImageState.LOADED) {\n      this.determineTainting_();\n    }\n\n  }\n\n  /**\n   * @private\n   */\n  determineTainting_() {\n    const context = createCanvasContext2D(1, 1);\n    try {\n      context.drawImage(this.image_, 0, 0);\n      context.getImageData(0, 0, 1, 1);\n    } catch (e) {\n      this.tainting_ = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    }\n    this.size_ = [this.image_.width, this.image_.height];\n    this.unlistenImage_();\n    this.determineTainting_();\n    this.replaceColor_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    return this.canvas_ ? this.canvas_ : this.image_;\n  }\n\n  /**\n   * @return {module:ol/ImageState} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage(pixelRatio) {\n    if (!this.hitDetectionImage_) {\n      if (this.tainting_) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * @return {module:ol/size~Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      try {\n        this.image_.src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  replaceColor_() {\n    if (this.tainting_ || this.color_ === null) {\n      return;\n    }\n\n    this.canvas_.width = this.image_.width;\n    this.canvas_.height = this.image_.height;\n\n    const ctx = this.canvas_.getContext('2d');\n    ctx.drawImage(this.image_, 0, 0);\n\n    const imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n    const data = imgData.data;\n    const r = this.color_[0] / 255.0;\n    const g = this.color_[1] / 255.0;\n    const b = this.color_[2] / 255.0;\n\n    for (let i = 0, ii = data.length; i < ii; i += 4) {\n      data[i] *= r;\n      data[i + 1] *= g;\n      data[i + 2] *= b;\n    }\n    ctx.putImageData(imgData, 0, 0);\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  }\n}\n\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {module:ol/size~Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/ImageState} imageState Image state.\n * @param {module:ol/color~Color} color Color.\n * @return {module:ol/style/IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\n\nexport default IconImage;\n","/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport {extend, includes} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {readDecimal, readBoolean, readString, writeStringTextNode, writeCDATASection, writeDecimalTextNode, writeBooleanTextNode} from '../format/xsd.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {toRadians} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport {createElementNS, getAllTextContent, isDocument, isNode, makeArrayExtender,\n  makeArrayPusher, makeChildAppender, makeObjectPropertySetter,\n  makeReplacer, makeSequence, makeSimpleNodeFactory, makeStructureNS,\n  OBJECT_PROPERTY_NODE_FACTORY, parse, parseNode, pushParseAndPop,\n  pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x\n * @property {module:ol/style/IconAnchorUnits} xunits\n * @property {number} y\n * @property {module:ol/style/IconAnchorUnits} yunits\n * @property {module:ol/style/IconOrigin} origin\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array.<number>} flatCoordinates\n * @property {Array.<number>} whens\n */\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst GX_NAMESPACE_URIS = [\n  'http://www.google.com/kml/ext/2.2'\n];\n\n\n/**\n * @const\n * @type {Array.<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n\n/**\n * @type {Object.<string, module:ol/style/IconAnchorUnits>}\n */\nconst ICON_ANCHOR_UNITS_MAP = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS\n};\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst PLACEMARK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(\n      readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(\n      readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(\n      readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(\n      readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(\n      readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI),\n    'visibility': makeObjectPropertySetter(readBoolean)\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'MultiTrack': makeObjectPropertySetter(\n        readGxMultiTrack, 'geometry'),\n      'Track': makeObjectPropertySetter(\n        readGxTrack, 'geometry')\n    }\n  ));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst NETWORK_LINK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'Link': linkParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'visibility': makeObjectPropertySetter(readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst LINK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst REGION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LatLonAltBox': latLonAltBoxParser,\n    'Lod': lodParser\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst KML_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'Document', 'Placemark'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst KML_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Document': makeChildAppender(writeDocument),\n    'Placemark': makeChildAppender(writePlacemark)\n  });\n\n\n/**\n * @type {module:ol/color~Color}\n */\nlet DEFAULT_COLOR;\n\n/**\n * @type {module:ol/style/Fill}\n */\nlet DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {module:ol/style/Fill} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {module:ol/size~Size}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {module:ol/style/IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {module:ol/style/IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {module:ol/size~Size}\n */\nlet DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nlet DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {number}\n */\nlet DEFAULT_IMAGE_SCALE_MULTIPLIER;\n\n/**\n * @type {module:ol/style/Image}\n */\nlet DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {module:ol/style/Image} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nlet DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {module:ol/style/Stroke}\n */\nlet DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {module:ol/style/Stroke} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {module:ol/style/Stroke}\n */\nlet DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {module:ol/style/Text}\n */\nlet DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {module:ol/style/Text} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {module:ol/style/Style}\n */\nlet DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {module:ol/style/Style} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array.<module:ol/style/Style>}\n */\nlet DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array.<module:ol/style/Style>} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\n\nfunction createStyleDefaults() {\n\n  DEFAULT_COLOR = [255, 255, 255, 1];\n\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR\n  });\n\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2]; // FIXME maybe [8, 32] ?\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n\n  DEFAULT_IMAGE_STYLE_SRC =\n      'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  DEFAULT_IMAGE_SCALE_MULTIPLIER = 0.5;\n\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: DEFAULT_IMAGE_SCALE_MULTIPLIER,\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC\n  });\n\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1\n  });\n\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8\n  });\n\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0\n  });\n\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n\n}\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array.<module:ol/style/Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @api\n */\nclass KML extends XMLFeature {\n\n  /**\n   * @param {module:ol/format/KML~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    if (!DEFAULT_STYLE_ARRAY) {\n      createStyleDefaults();\n    }\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {Array.<module:ol/style/Style>}\n     */\n    this.defaultStyle_ = options.defaultStyle ?\n      options.defaultStyle : DEFAULT_STYLE_ARRAY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.extractStyles_ = options.extractStyles !== undefined ?\n      options.extractStyles : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.writeStyles_ = options.writeStyles !== undefined ?\n      options.writeStyles : true;\n\n    /**\n     * @private\n     * @type {!Object.<string, (Array.<module:ol/style/Style>|string)>}\n     */\n    this.sharedStyles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.showPointNames_ = options.showPointNames !== undefined ?\n      options.showPointNames : true;\n\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @private\n   * @return {Array.<module:ol/Feature>|undefined} Features.\n   */\n  readDocumentOrFolder_(node, objectStack) {\n    // FIXME use scope somehow\n    const parsersNS = makeStructureNS(\n      NAMESPACE_URIS, {\n        'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n        'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n        'Placemark': makeArrayPusher(this.readPlacemark_, this),\n        'Style': this.readSharedStyle_.bind(this),\n        'StyleMap': this.readSharedStyleMap_.bind(this)\n      });\n    /** @type {Array.<module:ol/Feature>} */\n    const features = pushParseAndPop([], parsersNS, node, objectStack, this);\n    if (features) {\n      return features;\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @private\n   * @return {module:ol/Feature|undefined} Feature.\n   */\n  readPlacemark_(node, objectStack) {\n    const object = pushParseAndPop({'geometry': null},\n      PLACEMARK_PARSERS, node, objectStack);\n    if (!object) {\n      return undefined;\n    }\n    const feature = new Feature();\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      feature.setId(id);\n    }\n    const options = /** @type {module:ol/format/Feature~ReadOptions} */ (objectStack[0]);\n\n    const geometry = object['geometry'];\n    if (geometry) {\n      transformWithOptions(geometry, false, options);\n    }\n    feature.setGeometry(geometry);\n    delete object['geometry'];\n\n    if (this.extractStyles_) {\n      const style = object['Style'];\n      const styleUrl = object['styleUrl'];\n      const styleFunction = createFeatureStyleFunction(\n        style, styleUrl, this.defaultStyle_, this.sharedStyles_,\n        this.showPointNames_);\n      feature.setStyle(styleFunction);\n    }\n    delete object['Style'];\n    // we do not remove the styleUrl property from the object, so it\n    // gets stored on feature when setProperties is called\n\n    feature.setProperties(object);\n\n    return feature;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyle_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      const style = readStyle(node, objectStack);\n      if (style) {\n        let styleUri;\n        let baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n          baseURI = window.location.href;\n        }\n        if (baseURI) {\n          const url = new URL('#' + id, baseURI);\n          styleUri = url.href;\n        } else {\n          styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = style;\n      }\n    }\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyleMap_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id === null) {\n      return;\n    }\n    const styleMapValue = readStyleMapValue(node, objectStack);\n    if (!styleMapValue) {\n      return;\n    }\n    let styleUri;\n    let baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n      baseURI = window.location.href;\n    }\n    if (baseURI) {\n      const url = new URL('#' + id, baseURI);\n      styleUri = url.href;\n    } else {\n      styleUri = '#' + id;\n    }\n    this.sharedStyles_[styleUri] = styleMapValue;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeatureFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return null;\n    }\n    const feature = this.readPlacemark_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (feature) {\n      return feature;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeaturesFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return [];\n    }\n    let features;\n    const localName = node.localName;\n    if (localName == 'Document' || localName == 'Folder') {\n      features = this.readDocumentOrFolder_(\n        node, [this.getReadOptions(node, opt_options)]);\n      if (features) {\n        return features;\n      } else {\n        return [];\n      }\n    } else if (localName == 'Placemark') {\n      const feature = this.readPlacemark_(\n        node, [this.getReadOptions(node, opt_options)]);\n      if (feature) {\n        return [feature];\n      } else {\n        return [];\n      }\n    } else if (localName == 'kml') {\n      features = [];\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        const fs = this.readFeaturesFromNode(n, opt_options);\n        if (fs) {\n          extend(features, fs);\n        }\n      }\n      return features;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Read the name of the KML.\n   *\n   * @param {Document|Node|string} source Source.\n   * @return {string|undefined} Name.\n   * @api\n   */\n  readName(source) {\n    if (isDocument(source)) {\n      return this.readNameFromDocument(/** @type {Document} */ (source));\n    } else if (isNode(source)) {\n      return this.readNameFromNode(/** @type {Node} */ (source));\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readNameFromDocument(doc);\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {string|undefined} Name.\n   */\n  readNameFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        const name = this.readNameFromNode(n);\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @return {string|undefined} Name.\n   */\n  readNameFromNode(node) {\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n          n.localName == 'name') {\n        return readString(n);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n          (localName == 'Document' ||\n           localName == 'Folder' ||\n           localName == 'Placemark' ||\n           localName == 'kml')) {\n        const name = this.readNameFromNode(n);\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Read the network links of the KML.\n   *\n   * @param {Document|Node|string} source Source.\n   * @return {Array.<Object>} Network links.\n   * @api\n   */\n  readNetworkLinks(source) {\n    const networkLinks = [];\n    if (isDocument(source)) {\n      extend(networkLinks, this.readNetworkLinksFromDocument(\n        /** @type {Document} */ (source)));\n    } else if (isNode(source)) {\n      extend(networkLinks, this.readNetworkLinksFromNode(\n        /** @type {Node} */ (source)));\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array.<Object>} Network links.\n   */\n  readNetworkLinksFromDocument(doc) {\n    const networkLinks = [];\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(networkLinks, this.readNetworkLinksFromNode(n));\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @return {Array.<Object>} Network links.\n   */\n  readNetworkLinksFromNode(node) {\n    const networkLinks = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n          n.localName == 'NetworkLink') {\n        const obj = pushParseAndPop({}, NETWORK_LINK_PARSERS,\n          n, []);\n        networkLinks.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n          (localName == 'Document' ||\n           localName == 'Folder' ||\n           localName == 'kml')) {\n        extend(networkLinks, this.readNetworkLinksFromNode(n));\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * Read the regions of the KML.\n   *\n   * @param {Document|Node|string} source Source.\n   * @return {Array.<Object>} Regions.\n   * @api\n   */\n  readRegion(source) {\n    const regions = [];\n    if (isDocument(source)) {\n      extend(regions, this.readRegionFromDocument(\n        /** @type {Document} */ (source)));\n    } else if (isNode(source)) {\n      extend(regions, this.readRegionFromNode(\n        /** @type {Node} */ (source)));\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(regions, this.readRegionFromDocument(doc));\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array.<Object>} Region.\n   */\n  readRegionFromDocument(doc) {\n    const regions = [];\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(regions, this.readRegionFromNode(n));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @return {Array.<Object>} Region.\n   * @api\n   */\n  readRegionFromNode(node) {\n    const regions = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n          n.localName == 'Region') {\n        const obj = pushParseAndPop({}, REGION_PARSERS,\n          n, []);\n        regions.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n          (localName == 'Document' ||\n           localName == 'Folder' ||\n           localName == 'kml')) {\n        extend(regions, this.readRegionFromNode(n));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n   *\n   * @param {Array.<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   * @override\n   * @api\n   */\n  writeFeaturesNode(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    kml.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n\n    const /** @type {module:ol/xml~NodeStackItem} */ context = {node: kml};\n    const properties = {};\n    if (features.length > 1) {\n      properties['Document'] = features;\n    } else if (features.length == 1) {\n      properties['Placemark'] = features[0];\n    }\n    const orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n    const values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, KML_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys,\n      this);\n    return kml;\n  }\n}\n\n\n/**\n * @param {module:ol/style/Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {module:ol/style/Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  let textStyle = null;\n  const textOffset = [0, 0];\n  let textAlign = 'start';\n  if (foundStyle.getImage()) {\n    let imageSize = foundStyle.getImage().getImageSize();\n    if (imageSize === null) {\n      imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n    if (imageSize.length == 2) {\n      const imageScale = foundStyle.getImage().getScale();\n      // Offset the label to be centered to the right of the icon, if there is\n      // one.\n      textOffset[0] = imageScale * imageSize[0] / 2;\n      textOffset[1] = -imageScale * imageSize[1] / 2;\n      textAlign = 'left';\n    }\n  }\n  if (foundStyle.getText() !== null) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    const foundText = foundStyle.getText();\n    textStyle = foundText.clone();\n    textStyle.setFont(foundText.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(foundText.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(foundText.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(foundText.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    text: textStyle\n  });\n  return nameStyle;\n}\n\n\n/**\n * @param {Array.<module:ol/style/Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array.<module:ol/style/Style>} defaultStyle Default style.\n * @param {!Object.<string, (Array.<module:ol/style/Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {module:ol/style/Style~StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(style, styleUrl, defaultStyle, sharedStyles, showPointNames) {\n\n  return (\n    /**\n     * @param {module:ol/Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array.<module:ol/style/Style>} Style.\n     */\n    function(feature, resolution) {\n      let drawName = showPointNames;\n      /** @type {module:ol/style/Style|undefined} */\n      let nameStyle;\n      let name = '';\n      if (drawName) {\n        const geometry = feature.getGeometry();\n        if (geometry) {\n          drawName = geometry.getType() === GeometryType.POINT;\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (feature.get('name'));\n        drawName = drawName && name;\n      }\n\n      if (style) {\n        if (drawName) {\n          nameStyle = createNameStyleFunction(style[0], name);\n          return style.concat(nameStyle);\n        }\n        return style;\n      }\n      if (styleUrl) {\n        const foundStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n        if (drawName) {\n          nameStyle = createNameStyleFunction(foundStyle[0], name);\n          return foundStyle.concat(nameStyle);\n        }\n        return foundStyle;\n      }\n      if (drawName) {\n        nameStyle = createNameStyleFunction(defaultStyle[0], name);\n        return defaultStyle.concat(nameStyle);\n      }\n      return defaultStyle;\n    }\n  );\n}\n\n\n/**\n * @param {Array.<module:ol/style/Style>|string|undefined} styleValue Style value.\n * @param {Array.<module:ol/style/Style>} defaultStyle Default style.\n * @param {!Object.<string, (Array.<module:ol/style/Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array.<module:ol/style/Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\n    // defined in the same document.  Add a leading `#` if it enables to find\n    // a style.\n    if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n      styleValue = '#' + styleValue;\n    }\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {module:ol/color~Color|undefined} Color.\n */\nfunction readColor(node) {\n  const s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255\n    ];\n\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  let s = getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  const re =\n      /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  const s = getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {module:ol/format/KML~Vec2} Vec2.\n */\nfunction readVec2(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin\n  };\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst STYLE_MAP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Pair': pairDataParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<module:ol/style/Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined,\n    STYLE_MAP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst ICON_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Icon': makeObjectPropertySetter(readIcon),\n    'heading': makeObjectPropertySetter(readDecimal),\n    'hotSpot': makeObjectPropertySetter(readVec2),\n    'scale': makeObjectPropertySetter(readScale)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = pushParseAndPop(\n    {}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n  let src;\n  const href = /** @type {string|undefined} */\n      (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  let anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  const hotSpot = /** @type {module:ol/format/KML~Vec2|undefined} */\n      (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === DEFAULT_IMAGE_STYLE_SRC) {\n    anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n    anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n    anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */\n      (IconObject['x']);\n  const y = /** @type {number|undefined} */\n      (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */\n      (IconObject['w']);\n  const h = /** @type {number|undefined} */\n      (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */\n      (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  let scale = /** @type {number|undefined} */\n      (object['scale']);\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n      if (scale === undefined) {\n        scale = DEFAULT_IMAGE_SCALE_MULTIPLIER;\n      }\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: 'anonymous', // FIXME should this be configurable?\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: src\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst LABEL_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'scale': makeObjectPropertySetter(readScale)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop(\n    {}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color: /** @type {module:ol/color~Color} */\n          ('color' in object ? object['color'] : DEFAULT_COLOR)\n    }),\n    scale: /** @type {number|undefined} */\n        (object['scale'])\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst LINE_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'width': makeObjectPropertySetter(readDecimal)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = pushParseAndPop(\n    {}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color: /** @type {module:ol/color~Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst POLY_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'fill': makeObjectPropertySetter(readBoolean),\n    'outline': makeObjectPropertySetter(readBoolean)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop(\n    {}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color: /** @type {module:ol/color~Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR)\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline = /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst FLAT_LINEAR_RING_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null,\n    FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  const gxTrackObject = /** @type {module:ol/format/KML~GxTrackObject} */\n      (objectStack[objectStack.length - 1]);\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const s = getAllTextContent(node, false);\n  const re =\n      /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(\n  GX_NAMESPACE_URIS, {\n    'Track': makeArrayPusher(readGxTrack)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  const lineStrings = pushParseAndPop([],\n    GX_MULTITRACK_GEOMETRY_PARSERS, node, objectStack);\n  if (!lineStrings) {\n    return undefined;\n  }\n  return new MultiLineString(lineStrings);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst GX_TRACK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'when': whenParser\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'coord': gxCoordParser\n    }));\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  const gxTrackObject = pushParseAndPop(\n    /** @type {module:ol/format/KML~GxTrackObject} */ ({\n      flatCoordinates: [],\n      whens: []\n    }), GX_TRACK_PARSERS, node, objectStack);\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const whens = gxTrackObject.whens;\n  for (let i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii; ++i) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  return new LineString(flatCoordinates, GeometryLayout.XYZM);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst ICON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI)\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'x': makeObjectPropertySetter(readDecimal),\n      'y': makeObjectPropertySetter(readDecimal),\n      'w': makeObjectPropertySetter(readDecimal),\n      'h': makeObjectPropertySetter(readDecimal)\n    }));\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  const iconObject = pushParseAndPop(\n    {}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(null,\n    GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'extrude': makeObjectPropertySetter(readBoolean),\n    'tessellate': makeObjectPropertySetter(readBoolean),\n    'altitudeMode': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  const properties = pushParseAndPop({},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  const flatCoordinates =\n      readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n    lineString.setProperties(properties);\n    return lineString;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  const properties = pushParseAndPop({},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  const flatCoordinates =\n      readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, [flatCoordinates.length]);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst MULTI_GEOMETRY_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LineString': makeArrayPusher(readLineString),\n    'LinearRing': makeArrayPusher(readLinearRing),\n    'MultiGeometry': makeArrayPusher(readMultiGeometry),\n    'Point': makeArrayPusher(readPoint),\n    'Polygon': makeArrayPusher(readPolygon)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/Geometry} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  const geometries = pushParseAndPop([],\n    MULTI_GEOMETRY_PARSERS, node, objectStack);\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  /** @type {module:ol/geom/Geometry} */\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry;\n  for (let i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == GeometryType.POINT) {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (let i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return (\n    /** @type {module:ol/geom/Geometry} */ (multiGeometry)\n  );\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  const properties = pushParseAndPop({},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  const flatCoordinates =\n      readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(flatCoordinates, GeometryLayout.XYZ);\n    point.setProperties(properties);\n    return point;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'innerBoundaryIs': innerBoundaryIsParser,\n    'outerBoundaryIs': outerBoundaryIsParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  const properties = pushParseAndPop(/** @type {Object<string,*>} */ ({}),\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  const flatLinearRings = pushParseAndPop([null],\n    FLAT_LINEAR_RINGS_PARSERS, node, objectStack);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    for (let i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    const polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'IconStyle': iconStyleParser,\n    'LabelStyle': labelStyleParser,\n    'LineStyle': lineStyleParser,\n    'PolyStyle': polyStyleParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<module:ol/style/Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  const styleObject = pushParseAndPop(\n    {}, STYLE_PARSERS, node, objectStack);\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle = /** @type {module:ol/style/Fill} */\n      ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : DEFAULT_FILL_STYLE);\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle = /** @type {module:ol/style/Image} */\n      ('imageStyle' in styleObject ?\n        styleObject['imageStyle'] : DEFAULT_IMAGE_STYLE);\n  if (imageStyle == DEFAULT_NO_IMAGE_STYLE) {\n    imageStyle = undefined;\n  }\n  const textStyle = /** @type {module:ol/style/Text} */\n      ('textStyle' in styleObject ?\n        styleObject['textStyle'] : DEFAULT_TEXT_STYLE);\n  let strokeStyle = /** @type {module:ol/style/Stroke} */\n      ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : DEFAULT_STROKE_STYLE);\n  const outline = /** @type {boolean|undefined} */\n      (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    strokeStyle = null;\n  }\n  return [new Style({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n  })];\n}\n\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {module:ol/geom/MultiPoint|module:ol/geom/MultiLineString|module:ol/geom/MultiPolygon}\n *     multiGeometry A multi-geometry.\n * @param {Array.<module:ol/geom/Geometry>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = hasTessellate = hasAltitudeMode = false;\n  for (let i = 0; i < ii; ++i) {\n    const geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst DATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'displayName': makeObjectPropertySetter(readString),\n    'value': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  const featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst EXTENDED_DATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Data': dataParser,\n    'SchemaData': schemaDataParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst PAIR_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Style': makeObjectPropertySetter(readStyle),\n    'key': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  const pairObject = pushParseAndPop(\n    {}, PAIR_PARSERS, node, objectStack);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */\n      (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */\n        (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const Style = /** @type {module:ol/style/Style} */\n        (pairObject['Style']);\n    if (Style) {\n      objectStack[objectStack.length - 1] = Style;\n    }\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  const styleMapValue = readStyleMapValue(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst SCHEMA_DATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'SimpleData': simpleDataParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = readString(node);\n    const featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    featureObject[name] = data;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst LAT_LON_ALT_BOX_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'altitudeMode': makeObjectPropertySetter(readString),\n    'minAltitude': makeObjectPropertySetter(readDecimal),\n    'maxAltitude': makeObjectPropertySetter(readDecimal),\n    'north': makeObjectPropertySetter(readDecimal),\n    'south': makeObjectPropertySetter(readDecimal),\n    'east': makeObjectPropertySetter(readDecimal),\n    'west': makeObjectPropertySetter(readDecimal)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  const object = pushParseAndPop({}, LAT_LON_ALT_BOX_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north'])\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst LOD_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'minLodPixels': makeObjectPropertySetter(readDecimal),\n    'maxLodPixels': makeObjectPropertySetter(readDecimal),\n    'minFadeExtent': makeObjectPropertySetter(readDecimal),\n    'maxFadeExtent': makeObjectPropertySetter(readDecimal)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  const object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst INNER_BOUNDARY_IS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(undefined,\n    INNER_BOUNDARY_IS_PARSERS, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(undefined,\n    OUTER_BOUNDARY_IS_PARSERS, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  const gxTrackObject = /** @type {module:ol/format/KML~GxTrackObject} */\n      (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {module:ol/color~Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  const rgba = asArray(color);\n  const opacity = (rgba.length == 4) ? rgba[3] : 1;\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (let i = 0; i < 4; ++i) {\n    const hex = parseInt(abgr[i], 10).toString(16);\n    abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array.<number>} coordinates Coordinates.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == GeometryLayout.XY ||\n      layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ ||\n      layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (let d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (let i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (let d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Data': makeChildAppender(writeDataNode),\n    'value': makeChildAppender(writeDataNodeValue),\n    'displayName': makeChildAppender(writeDataNodeName)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst DOCUMENT_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Placemark': makeChildAppender(writePlacemark)\n  });\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nconst DOCUMENT_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {Array.<*>} objectStack Object stack.\n * @this {module:ol/format/KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(context, DOCUMENT_SERIALIZERS,\n    DOCUMENT_NODE_FACTORY, features, objectStack, undefined,\n    this);\n}\n\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n */\nconst DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n      DATA_NODE_FACTORY, [{name: names[i], value: values[i]}], objectStack);\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst ICON_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'href'\n  ],\n  makeStructureNS(GX_NAMESPACE_URIS, [\n    'x', 'y', 'w', 'h'\n  ]));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst ICON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'href': makeChildAppender(writeStringTextNode)\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'x': makeChildAppender(writeDecimalTextNode),\n      'y': makeChildAppender(writeDecimalTextNode),\n      'w': makeChildAppender(writeDecimalTextNode),\n      'h': makeChildAppender(writeDecimalTextNode)\n    }));\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nconst GX_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0],\n    'gx:' + opt_nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  let values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(context,\n    ICON_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n  orderedKeys =\n      ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(context, ICON_SERIALIZERS,\n    GX_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst ICON_STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'scale', 'heading', 'Icon', 'hotSpot'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst ICON_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Icon': makeChildAppender(writeIcon),\n    'heading': makeChildAppender(writeDecimalTextNode),\n    'hotSpot': makeChildAppender(writeVec2),\n    'scale': makeChildAppender(writeScaleTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Icon} style Icon style.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {module:ol/format/KML~Vec2} */ hotSpot = {\n        x: anchor[0],\n        xunits: IconAnchorUnits.PIXELS,\n        y: size[1] - anchor[1],\n        yunits: IconAnchorUnits.PIXELS\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  const scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, ICON_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst LABEL_STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'color', 'scale'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst LABEL_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'scale': makeChildAppender(writeScaleTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Text} style style.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys =\n      LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, LABEL_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst LINE_STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'color', 'width'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst LINE_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'width': makeChildAppender(writeDecimalTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Stroke} style style.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': style.getWidth()\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, LINE_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nconst GEOMETRY_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(parentNode.namespaceURI,\n      GEOMETRY_TYPE_TO_NODENAME[/** @type {module:ol/geom/Geometry} */ (value).getType()]);\n  }\n};\n\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LineString': makeChildAppender(\n      writePrimitiveGeometry),\n    'Point': makeChildAppender(\n      writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'GeometryCollection': makeChildAppender(\n      writeMultiGeometry)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {module:ol/xml~NodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array.<module:ol/geom/Geometry>} */\n  let geometries;\n  /** @type {function(*, Array.<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\n    geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_POINT) {\n    geometries = /** @type {module:ol/geom/MultiPoint} */ (geometry).getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\n    geometries =\n        (/** @type {module:ol/geom/MultiLineString} */ (geometry)).getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_POLYGON) {\n    geometries =\n        (/** @type {module:ol/geom/MultiPolygon} */ (geometry)).getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  pushSerializeAndPop(context,\n    MULTI_GEOMETRY_SERIALIZERS, factory,\n    geometries, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst BOUNDARY_IS_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LinearRing': makeChildAppender(\n      writePrimitiveGeometry)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LinearRing} linearRing Linear ring.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(context,\n    BOUNDARY_IS_SERIALIZERS,\n    LINEAR_RING_NODE_FACTORY, [linearRing], objectStack);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst PLACEMARK_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ExtendedData': makeChildAppender(writeExtendedData),\n    'MultiGeometry': makeChildAppender(writeMultiGeometry),\n    'LineString': makeChildAppender(writePrimitiveGeometry),\n    'LinearRing': makeChildAppender(writePrimitiveGeometry),\n    'Point': makeChildAppender(writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'Style': makeChildAppender(writeStyle),\n    'address': makeChildAppender(writeStringTextNode),\n    'description': makeChildAppender(writeStringTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'open': makeChildAppender(writeBooleanTextNode),\n    'phoneNumber': makeChildAppender(writeStringTextNode),\n    'styleUrl': makeChildAppender(writeStringTextNode),\n    'visibility': makeChildAppender(writeBooleanTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst PLACEMARK_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n    'styleUrl', 'Style'\n  ]);\n\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n */\nconst EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n * @this {module:ol/format/KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', feature.getId());\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {'address': 1, 'description': 1, 'name': 1, 'open': 1,\n    'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1};\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {}).sort().filter(function(v) {\n    return !filter[v];\n  });\n\n  if (keys.length > 0) {\n    const sequence = makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\n      EXTENDEDDATA_NODE_FACTORY, [namesAndValues], objectStack);\n  }\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction(feature, 0);\n    if (styles) {\n      const style = Array.isArray(styles) ? styles[0] : styles;\n      if (this.writeStyles_) {\n        properties['Style'] = style;\n      }\n      const textStyle = style.getText();\n      if (textStyle) {\n        properties['name'] = textStyle.getText();\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n\n  // serialize geometry\n  const options = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[0]);\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformWithOptions(geometry, true, options);\n  }\n  pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\n    GEOMETRY_NODE_FACTORY, [geometry], objectStack);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'extrude': makeChildAppender(writeBooleanTextNode),\n    'tessellate': makeChildAppender(writeBooleanTextNode),\n    'altitudeMode': makeChildAppender(writeStringTextNode),\n    'coordinates': makeChildAppender(writeCoordinatesTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, PRIMITIVE_GEOMETRY_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst POLYGON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'outerBoundaryIs': makeChildAppender(\n      writeBoundaryIs),\n    'innerBoundaryIs': makeChildAppender(\n      writeBoundaryIs)\n  });\n\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Polygon} polygon Polygon.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  // inner rings\n  pushSerializeAndPop(context,\n    POLYGON_SERIALIZERS,\n    INNER_BOUNDARY_NODE_FACTORY,\n    linearRings, objectStack);\n  // outer ring\n  pushSerializeAndPop(context,\n    POLYGON_SERIALIZERS,\n    OUTER_BOUNDARY_NODE_FACTORY,\n    [outerRing], objectStack);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst POLY_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode)\n  });\n\n\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst COLOR_NODE_FACTORY = makeSimpleNodeFactory('color');\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Fill} style Style.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(context, POLY_STYLE_SERIALIZERS,\n    COLOR_NODE_FACTORY, [style.getColor()], objectStack);\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node,\n    Math.round(scale * 1e6) / 1e6);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'IconStyle': makeChildAppender(writeIconStyle),\n    'LabelStyle': makeChildAppender(writeLabelStyle),\n    'LineStyle': makeChildAppender(writeLineStyle),\n    'PolyStyle': makeChildAppender(writePolyStyle)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Style} style Style.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeStyle(node, style, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  if (imageStyle instanceof Icon) {\n    properties['IconStyle'] = imageStyle;\n  }\n  if (textStyle) {\n    properties['LabelStyle'] = textStyle;\n  }\n  if (strokeStyle) {\n    properties['LineStyle'] = strokeStyle;\n  }\n  if (fillStyle) {\n    properties['PolyStyle'] = fillStyle;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the Vec2 to.\n * @param {module:ol/format/KML~Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', vec2.x);\n  node.setAttribute('y', vec2.y);\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\n\nexport default KML;\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n","/**\n * @module ol/style/Icon\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport {get as getIconImage} from '../style/IconImage.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport ImageStyle from '../style/Image.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array.<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {module:ol/style/IconOrigin} [anchorOrigin] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {module:ol/style/IconAnchorUnits} [anchorXUnits] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels. Default is `'fraction'`.\n * @property {module:ol/style/IconAnchorUnits} [anchorYUnits] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels. Default is `'fraction'`.\n * @property {module:ol/color~Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you are using the WebGL renderer or if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array.<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {module:ol/style/IconOrigin} [offsetOrigin] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [scale=1] Scale.\n * @property {boolean} [snapToPixel=true] If `true` integral numbers of pixels are used as the X and Y pixel coordinate\n * when drawing the icon in the output canvas. If `false` fractional numbers may be used. Using `true` allows for\n * \"sharp\" rendering (no blur), while using `false` allows for \"accurate\" rendering. Note that accuracy is important if\n * the icon's position is animated. Without it, the icon may jitter noticeably.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {module:ol/size~Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {module:ol/size~Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n\nclass Icon extends ImageStyle {\n  /**\n   * @classdesc\n   * Set icon style for vector features.\n   *\n   * @param {module:ol/style/Icon~Options=} opt_options Options.\n   * @api\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    /**\n     * @type {boolean}\n     */\n    const snapToPixel = options.snapToPixel !== undefined ?\n      options.snapToPixel : true;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      snapToPixel: snapToPixel,\n      rotateWithView: rotateWithView\n    });\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/style/IconOrigin}\n     */\n    this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n      options.anchorOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {module:ol/style/IconAnchorUnits}\n     */\n    this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n      options.anchorXUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {module:ol/style/IconAnchorUnits}\n     */\n    this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n      options.anchorYUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {module:ol/size~Size}\n     */\n    const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image),\n      4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize),\n      5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = image.src || getUid(image).toString();\n    }\n    assert(src !== undefined && src.length > 0,\n      6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {module:ol/ImageState}\n     */\n    const imageState = options.src !== undefined ?\n      ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {module:ol/color~Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {module:ol/style/IconImage}\n     */\n    this.iconImage_ = getIconImage(\n      image, /** @type {string} */ (src), imgSize, this.crossOrigin_, imageState, this.color_);\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n\n    /**\n     * @private\n     * @type {module:ol/style/IconOrigin}\n     */\n    this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n      options.offsetOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {module:ol/style/Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: this.getScale(),\n      snapToPixel: this.getSnapToPixel(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView()\n    });\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getAnchor() {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    let anchor = this.anchor_;\n    const size = this.getSize();\n    if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n        this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array.<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {module:ol/color~Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @override\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * @override\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @override\n   */\n  getHitDetectionImageSize() {\n    return this.getImageSize();\n  }\n\n  /**\n   * @override\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @override\n   */\n  getHitDetectionImage(pixelRatio) {\n    return this.iconImage_.getHitDetectionImage(pixelRatio);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @override\n   */\n  listenImageChange(listener, thisArg) {\n    return listen(this.iconImage_, EventType.CHANGE,\n      listener, thisArg);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @override\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @override\n   */\n  unlistenImageChange(listener, thisArg) {\n    unlisten(this.iconImage_, EventType.CHANGE,\n      listener, thisArg);\n  }\n}\n\n\nexport default Icon;\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos,\n            str = readUtf8(this.buf, this.pos, end);\n        this.pos = end;\n        return str;\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.ceil(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","/**\n * @module ol/render/Feature\n */\nimport {UNDEFINED} from '../functions.js';\nimport {extend} from '../array.js';\nimport {createOrUpdateFromCoordinate, createOrUpdateFromFlatCoordinates, getCenter, getHeight} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {getInteriorPointOfArray, getInteriorPointsOfMultiArray} from '../geom/flat/interiorpoint.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {get as getProjection} from '../proj.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {module:ol/transform~Transform}\n */\nconst tmpTransform = createTransform();\n\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n *\n * @param {module:ol/geom/GeometryType} type Geometry type.\n * @param {Array.<number>} flatCoordinates Flat coordinates. These always need\n *     to be right-handed for polygons.\n * @param {Array.<number>|Array.<Array.<number>>} ends Ends or Endss.\n * @param {Object.<string, *>} properties Properties.\n * @param {number|string|undefined} id Feature id.\n */\nclass RenderFeature {\n  constructor(type, flatCoordinates, ends, properties, id) {\n    /**\n    * @private\n    * @type {module:ol/extent~Extent|undefined}\n    */\n    this.extent_;\n\n    /**\n    * @private\n    * @type {number|string|undefined}\n    */\n    this.id_ = id;\n\n    /**\n    * @private\n    * @type {module:ol/geom/GeometryType}\n    */\n    this.type_ = type;\n\n    /**\n    * @private\n    * @type {Array.<number>}\n    */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n    * @private\n    * @type {Array.<number>}\n    */\n    this.flatInteriorPoints_ = null;\n\n    /**\n    * @private\n    * @type {Array.<number>}\n    */\n    this.flatMidpoints_ = null;\n\n    /**\n    * @private\n    * @type {Array.<number>|Array.<Array.<number>>}\n    */\n    this.ends_ = ends;\n\n    /**\n    * @private\n    * @type {Object.<string, *>}\n    */\n    this.properties_ = properties;\n\n  }\n\n  /**\n  * Get a feature property by its key.\n  * @param {string} key Key\n  * @return {*} Value for the requested key.\n  * @api\n  */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n  * Get the extent of this feature's geometry.\n  * @return {module:ol/extent~Extent} Extent.\n  * @api\n  */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ = this.type_ === GeometryType.POINT ?\n        createOrUpdateFromCoordinate(this.flatCoordinates_) :\n        createOrUpdateFromFlatCoordinates(\n          this.flatCoordinates_, 0, this.flatCoordinates_.length, 2);\n\n    }\n    return this.extent_;\n  }\n\n  /**\n  * @return {Array.<number>} Flat interior points.\n  */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_, 0, this.ends_, 2, flatCenter, 0);\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n  * @return {Array.<number>} Flat interior points.\n  */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates_, 0, this.ends_, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_, 0, this.ends_, 2, flatCenters);\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n  * @return {Array.<number>} Flat midpoint.\n  */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_, 0, this.flatCoordinates_.length, 2, 0.5);\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n  * @return {Array.<number>} Flat midpoints.\n  */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = this.ends_;\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(\n          flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n  * Get the feature identifier.  This is a stable identifier for the feature and\n  * is set when reading data from a remote source.\n  * @return {number|string|undefined} Id.\n  * @api\n  */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n  * @return {Array.<number>} Flat coordinates.\n  */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n  * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n  * determining the geometry type in style function (see {@link #getType}).\n  * @return {module:ol/render/Feature} Feature.\n  * @api\n  */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n  * Get the feature properties.\n  * @return {Object.<string, *>} Feature properties.\n  * @api\n  */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n  * @return {number} Stride.\n  */\n  getStride() {\n    return 2;\n  }\n\n  /**\n  * Get the type of this feature's geometry.\n  * @return {module:ol/geom/GeometryType} Geometry type.\n  * @api\n  */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n  * Transform geometry coordinates from tile pixel space to projected.\n  * The SRS of the source and destination are expected to be the same.\n  *\n  * @param {module:ol/proj~ProjectionLike} source The current projection\n  * @param {module:ol/proj~ProjectionLike} destination The desired projection.\n  */\n  transform(source, destination) {\n    source = getProjection(source);\n    const pixelExtent = source.getExtent();\n    const projectedExtent = source.getWorldExtent();\n    const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n    composeTransform(tmpTransform,\n      projectedExtent[0], projectedExtent[3],\n      scale, -scale, 0,\n      0, 0);\n    transform2D(this.flatCoordinates_, 0, this.flatCoordinates_.length, 2,\n      tmpTransform, this.flatCoordinates_);\n  }\n}\n\n\n/**\n * @return {Array.<number>|Array.<Array.<number>>} Ends or endss.\n */\nRenderFeature.prototype.getEnds =\nRenderFeature.prototype.getEndss = function() {\n  return this.ends_;\n};\n\n\n/**\n * @return {Array.<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n    RenderFeature.prototype.getOrientedFlatCoordinates;\n\n\n/**\n * Get the feature for working with its geometry.\n * @return {module:ol/render/Feature} Feature.\n */\nRenderFeature.prototype.getSimplifiedGeometry =\n    RenderFeature.prototype.getGeometry;\n\n\n/**\n * @return {undefined}\n */\nRenderFeature.prototype.getStyleFunction = UNDEFINED;\n\n\nexport default RenderFeature;\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport {assert} from '../asserts.js';\nimport PBF from 'pbf';\nimport FeatureFormat, {transformWithOptions} from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {linearRingIsClockwise} from '../geom/flat/orient.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\nimport RenderFeature from '../render/Feature.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {function((module:ol/geom/Geometry|Object.<string,*>)=)|function(module:ol/geom/GeometryType,Array.<number>,(Array.<number>|Array.<Array.<number>>),Object.<string,*>,number)} [featureClass]\n * Class for features returned by {@link module:ol/format/MVT#readFeatures}. Set to\n * {@link module:ol/Feature~Feature} to get full editing and geometry support at the cost of\n * decreased rendering performance. The default is {@link module:ol/render/Feature~RenderFeature},\n * which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating\n * features.\n * @property {string} [layerName='layer'] Name of the feature attribute that\n * holds the layer name.\n * @property {Array.<string>} [layers] Layers to read features from. If not\n * provided, features will be read from all layers.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {module:ol/format/MVT~Options=} opt_options Options.\n * @api\n */\nclass MVT extends FeatureFormat {\n\n  /**\n   * @param {module:ol/format/MVT~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {module:ol/proj/Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: Units.TILE_PIXELS\n    });\n\n    /**\n     * @private\n     * @type {function((module:ol/geom/Geometry|Object.<string,*>)=)|\n     *     function(module:ol/geom/GeometryType,Array.<number>,\n     *         (Array.<number>|Array.<Array.<number>>),Object.<string,*>,number)}\n     */\n    this.featureClass_ = options.featureClass ?\n      options.featureClass : RenderFeature;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent_ = null;\n\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @suppress {missingProperties}\n   * @param {Object} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array.<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array.<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) { // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n\n      } else if (cmd === 7) {\n\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd], flatCoordinates[currentEnd + 1]);\n          coordsLen += 2;\n        }\n\n      } else {\n        assert(false, 59); // Invalid command found in the PBF\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n\n  }\n\n  /**\n   * @private\n   * @param {Object} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {module:ol/Feature|module:ol/render/Feature} Feature.\n   */\n  createFeature_(pbf, rawFeature, opt_options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const id = rawFeature.id;\n    const values = rawFeature.properties;\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = [];\n    const ends = [];\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(geometryType, flatCoordinates, ends, values, id);\n    } else {\n      let geom;\n      if (geometryType == GeometryType.POLYGON) {\n        const endss = [];\n        let offset = 0;\n        let prevEndIndex = 0;\n        for (let i = 0, ii = ends.length; i < ii; ++i) {\n          const end = ends[i];\n          if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n            endss.push(ends.slice(prevEndIndex, i));\n            prevEndIndex = i;\n          }\n          offset = end;\n        }\n        if (endss.length > 1) {\n          geom = new MultiPolygon(flatCoordinates, GeometryLayout.XY, endss);\n        } else {\n          geom = new Polygon(flatCoordinates, GeometryLayout.XY, ends);\n        }\n      } else {\n        geom = geometryType === GeometryType.POINT ? new Point(flatCoordinates, GeometryLayout.XY) :\n          geometryType === GeometryType.LINE_STRING ? new LineString(flatCoordinates, GeometryLayout.XY) :\n            geometryType === GeometryType.POLYGON ? new Polygon(flatCoordinates, GeometryLayout.XY, ends) :\n              geometryType === GeometryType.MULTI_POINT ? new MultiPoint(flatCoordinates, GeometryLayout.XY) :\n                geometryType === GeometryType.MULTI_LINE_STRING ? new MultiLineString(flatCoordinates, GeometryLayout.XY, ends) :\n                  null;\n      }\n      feature = new this.featureClass_();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformWithOptions(geom, false, this.adaptOptions(opt_options));\n      feature.setGeometry(geometry);\n      feature.setId(id);\n      feature.setProperties(values);\n    }\n\n    return feature;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getLastExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getType() {\n    return FormatType.ARRAY_BUFFER;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    const layers = this.layers_;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    /** @type {Array.<module:ol/Feature|module:ol/render/Feature>} */\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && layers.indexOf(name) == -1) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        features.push(this.createFeature_(pbf, rawFeature));\n      }\n      this.extent_ = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n    }\n\n    return features;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array.<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n\n  /**\n   * Not implemented.\n   * @override\n   */\n  readFeature() {}\n\n  /**\n   * Not implemented.\n   * @override\n   */\n  readGeometry() {}\n\n  /**\n   * Not implemented.\n   * @override\n   */\n  writeFeature() {}\n\n  /**\n   * Not implemented.\n   * @override\n   */\n  writeGeometry() {}\n\n  /**\n   * Not implemented.\n   * @override\n   */\n  writeFeatures() {}\n}\n\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {Object} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: []\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {Object} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value = tag === 1 ? pbf.readString() :\n        tag === 2 ? pbf.readFloat() :\n          tag === 3 ? pbf.readDouble() :\n            tag === 4 ? pbf.readVarint64() :\n              tag === 5 ? pbf.readVarint() :\n                tag === 6 ? pbf.readSVarint() :\n                  tag === 7 ? pbf.readBoolean() : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {Object} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @suppress {missingProperties}\n * @param {Object} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {}\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n\n/**\n * @suppress {missingProperties}\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {module:ol/geom/GeometryType} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {module:ol/geom/GeometryType} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ?\n      GeometryType.POINT : GeometryType.MULTI_POINT;\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ?\n      GeometryType.LINE_STRING :\n      GeometryType.MULTI_LINE_STRING;\n  } else if (type === 3) {\n    geometryType = GeometryType.POLYGON;\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/format/OSMXML\n */\n// FIXME add typedef for stack state objects\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {pushParseAndPop, makeStructureNS} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array.<null>}\n */\nconst NAMESPACE_URIS = [null];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst WAY_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'nd': readNd,\n    'tag': readTag\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'node': readNode,\n    'way': readWay\n  });\n\n\n/**\n * @classdesc\n * Feature format for reading data in the\n * [OSMXML format](http://wiki.openstreetmap.org/wiki/OSM_XML).\n *\n * @api\n */\nclass OSMXML extends XMLFeature {\n  constructor() {\n    super();\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeaturesFromNode(node, opt_options) {\n    const options = this.getReadOptions(node, opt_options);\n    if (node.localName == 'osm') {\n      const state = pushParseAndPop({\n        nodes: {},\n        ways: [],\n        features: []\n      }, PARSERS, node, [options]);\n      // parse nodes in ways\n      for (let j = 0; j < state.ways.length; j++) {\n        const values = /** @type {Object} */ (state.ways[j]);\n        /** @type {Array.<number>} */\n        const flatCoordinates = [];\n        for (let i = 0, ii = values.ndrefs.length; i < ii; i++) {\n          const point = state.nodes[values.ndrefs[i]];\n          extend(flatCoordinates, point);\n        }\n        let geometry;\n        if (values.ndrefs[0] == values.ndrefs[values.ndrefs.length - 1]) {\n          // closed way\n          geometry = new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n        } else {\n          geometry = new LineString(flatCoordinates, GeometryLayout.XY);\n        }\n        transformWithOptions(geometry, false, options);\n        const feature = new Feature(geometry);\n        feature.setId(values.id);\n        feature.setProperties(values.tags);\n        state.features.push(feature);\n      }\n      if (state.features) {\n        return state.features;\n      }\n    }\n    return [];\n  }\n\n  /**\n   * Not implemented.\n   * @inheritDoc\n   */\n  writeFeatureNode(feature, opt_options) {}\n\n  /**\n   * Not implemented.\n   * @inheritDoc\n   */\n  writeFeaturesNode(features, opt_options) {}\n\n  /**\n   * Not implemented.\n   * @inheritDoc\n   */\n  writeGeometryNode(geometry, opt_options) {}\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst NODE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'tag': readTag\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction readNode(node, objectStack) {\n  const options = /** @type {module:ol/format/Feature~ReadOptions} */ (objectStack[0]);\n  const state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const id = node.getAttribute('id');\n  /** @type {module:ol/coordinate~Coordinate} */\n  const coordinates = [\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat'))\n  ];\n  state.nodes[id] = coordinates;\n\n  const values = pushParseAndPop({\n    tags: {}\n  }, NODE_PARSERS, node, objectStack);\n  if (!isEmpty(values.tags)) {\n    const geometry = new Point(coordinates);\n    transformWithOptions(geometry, false, options);\n    const feature = new Feature(geometry);\n    feature.setId(id);\n    feature.setProperties(values.tags);\n    state.features.push(feature);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction readWay(node, objectStack) {\n  const id = node.getAttribute('id');\n  const values = pushParseAndPop({\n    id: id,\n    ndrefs: [],\n    tags: {}\n  }, WAY_PARSERS, node, objectStack);\n  const state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  state.ways.push(values);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction readNd(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values.ndrefs.push(node.getAttribute('ref'));\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction readTag(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values.tags[node.getAttribute('k')] = node.getAttribute('v');\n}\n\n\nexport default OSMXML;\n","/**\n * @module ol/geom/flat/flip\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array.<number>=} opt_dest Destination.\n * @param {number=} opt_destOffset Destination offset.\n * @return {Array.<number>} Flat coordinates.\n */\nexport function flipXY(flatCoordinates, offset, end, stride, opt_dest, opt_destOffset) {\n  let dest, destOffset;\n  if (opt_dest !== undefined) {\n    dest = opt_dest;\n    destOffset = opt_destOffset !== undefined ? opt_destOffset : 0;\n  } else {\n    dest = [];\n    destOffset = 0;\n  }\n  let j = offset;\n  while (j < end) {\n    const x = flatCoordinates[j++];\n    dest[destOffset++] = flatCoordinates[j++];\n    dest[destOffset++] = x;\n    for (let k = 2; k < stride; ++k) {\n      dest[destOffset++] = flatCoordinates[j++];\n    }\n  }\n  dest.length = destOffset;\n  return dest;\n}\n","/**\n * @module ol/format/Polyline\n */\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport TextFeature from '../format/TextFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\nimport {flipXY} from '../geom/flat/flip.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\n * @property {module:ol/geom/GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the format reader.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the Encoded\n * Polyline Algorithm Format.\n *\n * When reading features, the coordinates are assumed to be in two dimensions\n * and in [latitude, longitude] order.\n *\n * As Polyline sources contain a single feature,\n * {@link module:ol/format/Polyline~Polyline#readFeatures} will return the\n * feature in an array.\n *\n * @api\n */\nclass Polyline extends TextFeature {\n\n  /**\n   * @param {module:ol/format/Polyline~Options=} opt_options Optional configuration object.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.factor_ = options.factor ? options.factor : 1e5;\n\n    /**\n     * @private\n     * @type {module:ol/geom/GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout ?\n      options.geometryLayout : GeometryLayout.XY;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeatureFromText(text, opt_options) {\n    const geometry = this.readGeometryFromText(text, opt_options);\n    return new Feature(geometry);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeaturesFromText(text, opt_options) {\n    const feature = this.readFeatureFromText(text, opt_options);\n    return [feature];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readGeometryFromText(text, opt_options) {\n    const stride = getStrideForLayout(this.geometryLayout_);\n    const flatCoordinates = decodeDeltas(text, stride, this.factor_);\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    const coordinates = inflateCoordinates(flatCoordinates, 0, flatCoordinates.length, stride);\n\n    return (\n      /** @type {module:ol/geom/Geometry} */ (transformWithOptions(\n        new LineString(coordinates, this.geometryLayout_),\n        false,\n        this.adaptOptions(opt_options)\n      ))\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  writeFeatureText(feature, opt_options) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, opt_options);\n    } else {\n      assert(false, 40); // Expected `feature` to have a geometry\n      return '';\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  writeFeaturesText(features, opt_options) {\n    return this.writeFeatureText(features[0], opt_options);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  writeGeometryText(geometry, opt_options) {\n    geometry = /** @type {module:ol/geom/LineString} */\n      (transformWithOptions(geometry, true, this.adaptOptions(opt_options)));\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    return encodeDeltas(flatCoordinates, stride, this.factor_);\n  }\n}\n\n\n/**\n * Encode a list of n-dimensional points and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array.<number>} numbers A list of n-dimensional points.\n * @param {number} stride The number of dimension of the points in the list.\n * @param {number=} opt_factor The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeDeltas(numbers, stride, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  let d;\n\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  for (let i = 0, ii = numbers.length; i < ii;) {\n    for (d = 0; d < stride; ++d, ++i) {\n      const num = numbers[i];\n      const delta = num - lastNumbers[d];\n      lastNumbers[d] = num;\n\n      numbers[i] = delta;\n    }\n  }\n\n  return encodeFloats(numbers, factor);\n}\n\n\n/**\n * Decode a list of n-dimensional points from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} stride The number of dimension of the points in the\n *     encoded string.\n * @param {number=} opt_factor The factor by which the resulting numbers will\n *     be divided. Default is `1e5`.\n * @return {Array.<number>} A list of n-dimensional points.\n * @api\n */\nexport function decodeDeltas(encoded, stride, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  let d;\n\n  /** @type {Array.<number>} */\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  const numbers = decodeFloats(encoded, factor);\n\n  for (let i = 0, ii = numbers.length; i < ii;) {\n    for (d = 0; d < stride; ++d, ++i) {\n      lastNumbers[d] += numbers[i];\n\n      numbers[i] = lastNumbers[d];\n    }\n  }\n\n  return numbers;\n}\n\n\n/**\n * Encode a list of floating point numbers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array.<number>} numbers A list of floating point numbers.\n * @param {number=} opt_factor The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeFloats(numbers, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] = Math.round(numbers[i] * factor);\n  }\n\n  return encodeSignedIntegers(numbers);\n}\n\n\n/**\n * Decode a list of floating point numbers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number=} opt_factor The factor by which the result will be divided.\n *     Default is `1e5`.\n * @return {Array.<number>} A list of floating point numbers.\n * @api\n */\nexport function decodeFloats(encoded, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  const numbers = decodeSignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] /= factor;\n  }\n  return numbers;\n}\n\n\n/**\n * Encode a list of signed integers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array.<number>} numbers A list of signed integers.\n * @return {string} The encoded string.\n */\nexport function encodeSignedIntegers(numbers) {\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = (num < 0) ? ~(num << 1) : (num << 1);\n  }\n  return encodeUnsignedIntegers(numbers);\n}\n\n\n/**\n * Decode a list of signed integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array.<number>} A list of signed integers.\n */\nexport function decodeSignedIntegers(encoded) {\n  const numbers = decodeUnsignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = (num & 1) ? ~(num >> 1) : (num >> 1);\n  }\n  return numbers;\n}\n\n\n/**\n * Encode a list of unsigned integers and return an encoded string\n *\n * @param {Array.<number>} numbers A list of unsigned integers.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedIntegers(numbers) {\n  let encoded = '';\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    encoded += encodeUnsignedInteger(numbers[i]);\n  }\n  return encoded;\n}\n\n\n/**\n * Decode a list of unsigned integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array.<number>} A list of unsigned integers.\n */\nexport function decodeUnsignedIntegers(encoded) {\n  const numbers = [];\n  let current = 0;\n  let shift = 0;\n  for (let i = 0, ii = encoded.length; i < ii; ++i) {\n    const b = encoded.charCodeAt(i) - 63;\n    current |= (b & 0x1f) << shift;\n    if (b < 0x20) {\n      numbers.push(current);\n      current = 0;\n      shift = 0;\n    } else {\n      shift += 5;\n    }\n  }\n  return numbers;\n}\n\n\n/**\n * Encode one single unsigned integer and return an encoded string\n *\n * @param {number} num Unsigned integer that should be encoded.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedInteger(num) {\n  let value, encoded = '';\n  while (num >= 0x20) {\n    value = (0x20 | (num & 0x1f)) + 63;\n    encoded += String.fromCharCode(value);\n    num >>= 5;\n  }\n  value = num + 63;\n  encoded += String.fromCharCode(value);\n  return encoded;\n}\n\n\nexport default Polyline;\n","/**\n * @module ol/format/TopoJSON\n */\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport JSONFeature from '../format/JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/proj~ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {string} [layerName] Set the name of the TopoJSON topology\n * `objects`'s children as feature property with the specified name. This means\n * that when set to `'layer'`, a topology like\n * ```\n * {\n *   \"type\": \"Topology\",\n *   \"objects\": {\n *     \"example\": {\n *       \"type\": \"GeometryCollection\",\n *       \"geometries\": []\n *     }\n *   }\n * }\n * ```\n * will result in features that have a property `'layer'` set to `'example'`.\n * When not set, no property will be added to features.\n * @property {Array.<string>} [layers] Names of the TopoJSON topology's\n * `objects`'s children to read features from.  If not provided, features will\n * be read from all children.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading data in the TopoJSON format.\n *\n * @api\n */\nclass TopoJSON extends JSONFeature {\n\n  /**\n   * @param {module:ol/format/TopoJSON~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.layerName_ = options.layerName;\n\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ?\n        options.dataProjection : 'EPSG:4326');\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeaturesFromObject(object, opt_options) {\n    if (object.type == 'Topology') {\n      const topoJSONTopology = /** @type {TopoJSONTopology} */ (object);\n      let transform, scale = null, translate = null;\n      if (topoJSONTopology.transform) {\n        transform = topoJSONTopology.transform;\n        scale = transform.scale;\n        translate = transform.translate;\n      }\n      const arcs = topoJSONTopology.arcs;\n      if (transform) {\n        transformArcs(arcs, scale, translate);\n      }\n      /** @type {Array.<module:ol/Feature>} */\n      const features = [];\n      const topoJSONFeatures = topoJSONTopology.objects;\n      const property = this.layerName_;\n      let feature;\n      for (const objectName in topoJSONFeatures) {\n        if (this.layers_ && this.layers_.indexOf(objectName) == -1) {\n          continue;\n        }\n        if (topoJSONFeatures[objectName].type === 'GeometryCollection') {\n          feature = /** @type {TopoJSONGeometryCollection} */ (topoJSONFeatures[objectName]);\n          features.push.apply(features, readFeaturesFromGeometryCollection(\n            feature, arcs, scale, translate, property, objectName, opt_options));\n        } else {\n          feature = /** @type {TopoJSONGeometry} */ (topoJSONFeatures[objectName]);\n          features.push(readFeatureFromGeometry(\n            feature, arcs, scale, translate, property, objectName, opt_options));\n        }\n      }\n      return features;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readProjectionFromObject(object) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Not implemented.\n   * @inheritDoc\n   */\n  writeFeatureObject(feature, opt_options) {}\n\n  /**\n   * Not implemented.\n   * @inheritDoc\n   */\n  writeFeaturesObject(features, opt_options) {}\n\n  /**\n   * Not implemented.\n   * @inheritDoc\n   */\n  writeGeometryObject(geometry, opt_options) {}\n\n  /**\n   * Not implemented.\n   * @override\n   */\n  readGeometryFromObject() {}\n\n  /**\n   * Not implemented.\n   * @override\n   */\n  readFeatureFromObject() {}\n}\n\n\n/**\n * @const\n * @type {Object.<string, function(TopoJSONGeometry, Array, ...Array): module:ol/geom/Geometry>}\n */\nconst GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry\n};\n\n\n/**\n * Concatenate arcs into a coordinate array.\n * @param {Array.<number>} indices Indices of arcs to concatenate.  Negative\n *     values indicate arcs need to be reversed.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} arcs Array of arcs (already\n *     transformed).\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates array.\n */\nfunction concatenateArcs(indices, arcs) {\n  /** @type {Array.<module:ol/coordinate~Coordinate>} */\n  const coordinates = [];\n  let index, arc;\n  for (let i = 0, ii = indices.length; i < ii; ++i) {\n    index = indices[i];\n    if (i > 0) {\n      // splicing together arcs, discard last point\n      coordinates.pop();\n    }\n    if (index >= 0) {\n      // forward arc\n      arc = arcs[index];\n    } else {\n      // reverse arc\n      arc = arcs[~index].slice().reverse();\n    }\n    coordinates.push.apply(coordinates, arc);\n  }\n  // provide fresh copies of coordinate arrays\n  for (let j = 0, jj = coordinates.length; j < jj; ++j) {\n    coordinates[j] = coordinates[j].slice();\n  }\n  return coordinates;\n}\n\n\n/**\n * Create a point from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array.<number>} scale Scale for each dimension.\n * @param {Array.<number>} translate Translation for each dimension.\n * @return {module:ol/geom/Point} Geometry.\n */\nfunction readPointGeometry(object, scale, translate) {\n  const coordinates = object.coordinates;\n  if (scale && translate) {\n    transformVertex(coordinates, scale, translate);\n  }\n  return new Point(coordinates);\n}\n\n\n/**\n * Create a multi-point from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array.<number>} scale Scale for each dimension.\n * @param {Array.<number>} translate Translation for each dimension.\n * @return {module:ol/geom/MultiPoint} Geometry.\n */\nfunction readMultiPointGeometry(object, scale, translate) {\n  const coordinates = object.coordinates;\n  if (scale && translate) {\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      transformVertex(coordinates[i], scale, translate);\n    }\n  }\n  return new MultiPoint(coordinates);\n}\n\n\n/**\n * Create a linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @return {module:ol/geom/LineString} Geometry.\n */\nfunction readLineStringGeometry(object, arcs) {\n  const coordinates = concatenateArcs(object.arcs, arcs);\n  return new LineString(coordinates);\n}\n\n\n/**\n * Create a multi-linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @return {module:ol/geom/MultiLineString} Geometry.\n */\nfunction readMultiLineStringGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object.arcs.length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object.arcs[i], arcs);\n  }\n  return new MultiLineString(coordinates);\n}\n\n\n/**\n * Create a polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @return {module:ol/geom/Polygon} Geometry.\n */\nfunction readPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object.arcs.length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object.arcs[i], arcs);\n  }\n  return new Polygon(coordinates);\n}\n\n\n/**\n * Create a multi-polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @return {module:ol/geom/MultiPolygon} Geometry.\n */\nfunction readMultiPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object.arcs.length; i < ii; ++i) {\n    // for each polygon\n    const polyArray = object.arcs[i];\n    const ringCoords = [];\n    for (let j = 0, jj = polyArray.length; j < jj; ++j) {\n      // for each ring\n      ringCoords[j] = concatenateArcs(polyArray[j], arcs);\n    }\n    coordinates[i] = ringCoords;\n  }\n  return new MultiPolygon(coordinates);\n}\n\n\n/**\n * Create features from a TopoJSON GeometryCollection object.\n *\n * @param {TopoJSONGeometryCollection} collection TopoJSON Geometry\n *     object.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @param {Array.<number>} scale Scale for each dimension.\n * @param {Array.<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {Array.<module:ol/Feature>} Array of features.\n */\nfunction readFeaturesFromGeometryCollection(collection, arcs, scale, translate, property, name, opt_options) {\n  const geometries = collection.geometries;\n  const features = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    features[i] = readFeatureFromGeometry(\n      geometries[i], arcs, scale, translate, property, name, opt_options);\n  }\n  return features;\n}\n\n\n/**\n * Create a feature from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON geometry object.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @param {Array.<number>} scale Scale for each dimension.\n * @param {Array.<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/Feature} Feature.\n */\nfunction readFeatureFromGeometry(object, arcs, scale, translate, property, name, opt_options) {\n  let geometry;\n  const type = object.type;\n  const geometryReader = GEOMETRY_READERS[type];\n  if ((type === 'Point') || (type === 'MultiPoint')) {\n    geometry = geometryReader(object, scale, translate);\n  } else {\n    geometry = geometryReader(object, arcs);\n  }\n  const feature = new Feature();\n  feature.setGeometry(/** @type {module:ol/geom/Geometry} */ (\n    transformWithOptions(geometry, false, opt_options)));\n  if (object.id !== undefined) {\n    feature.setId(object.id);\n  }\n  let properties = object.properties;\n  if (property) {\n    if (!properties) {\n      properties = {};\n    }\n    properties[property] = name;\n  }\n  if (properties) {\n    feature.setProperties(properties);\n  }\n  return feature;\n}\n\n\n/**\n * Apply a linear transform to array of arcs.  The provided array of arcs is\n * modified in place.\n *\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @param {Array.<number>} scale Scale for each dimension.\n * @param {Array.<number>} translate Translation for each dimension.\n */\nfunction transformArcs(arcs, scale, translate) {\n  for (let i = 0, ii = arcs.length; i < ii; ++i) {\n    transformArc(arcs[i], scale, translate);\n  }\n}\n\n\n/**\n * Apply a linear transform to an arc.  The provided arc is modified in place.\n *\n * @param {Array.<module:ol/coordinate~Coordinate>} arc Arc.\n * @param {Array.<number>} scale Scale for each dimension.\n * @param {Array.<number>} translate Translation for each dimension.\n */\nfunction transformArc(arc, scale, translate) {\n  let x = 0;\n  let y = 0;\n  for (let i = 0, ii = arc.length; i < ii; ++i) {\n    const vertex = arc[i];\n    x += vertex[0];\n    y += vertex[1];\n    vertex[0] = x;\n    vertex[1] = y;\n    transformVertex(vertex, scale, translate);\n  }\n}\n\n\n/**\n * Apply a linear transform to a vertex.  The provided vertex is modified in\n * place.\n *\n * @param {module:ol/coordinate~Coordinate} vertex Vertex.\n * @param {Array.<number>} scale Scale for each dimension.\n * @param {Array.<number>} translate Translation for each dimension.\n */\nfunction transformVertex(vertex, scale, translate) {\n  vertex[0] = vertex[0] * scale[0] + translate[0];\n  vertex[1] = vertex[1] * scale[1] + translate[1];\n}\n\n\nexport default TopoJSON;\n","/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @abstract\n */\nclass Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   */\n  constructor(tagName) {\n\n    /**\n     * @private\n     * @type {!string}\n     */\n    this.tagName_ = tagName;\n  }\n\n  /**\n   * The XML tag name for a filter.\n   * @returns {!string} Name.\n   */\n  getTagName() {\n    return this.tagName_;\n  }\n}\n\nexport default Filter;\n","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @abstract\n */\nclass LogicalNary extends Filter {\n\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   * @param {...module:ol/format/filter/Filter} conditions Conditions.\n   */\n  constructor(tagName, conditions) {\n\n    super(tagName);\n\n    /**\n     * @type {Array.<module:ol/format/filter/Filter>}\n     */\n    this.conditions = Array.prototype.slice.call(arguments, 1);\n    assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n  }\n\n}\n\nexport default LogicalNary;\n","/**\n * @module ol/format/filter/And\n */\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @abstract\n */\nclass And extends LogicalNary {\n\n  /**\n   * @param {...module:ol/format/filter/Filter} conditions Conditions.\n   */\n  constructor(conditions) {\n    const params = ['And'].concat(Array.prototype.slice.call(arguments));\n    super(...params);\n  }\n\n}\n\nexport default And;\n","/**\n * @module ol/format/filter/Bbox\n */\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @api\n */\nclass Bbox extends Filter {\n\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!module:ol/extent~Extent} extent Extent.\n   * @param {string=} opt_srsName SRS name. No srsName attribute will be set\n   * on geometries when this is not provided.\n   */\n  constructor(geometryName, extent, opt_srsName) {\n\n    super('BBOX');\n\n    /**\n     * @type {!string}\n     */\n    this.geometryName = geometryName;\n\n    /**\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @type {string|undefined}\n     */\n    this.srsName = opt_srsName;\n  }\n\n}\n\nexport default Bbox;\n","/**\n * @module ol/format/filter/Spatial\n */\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @abstract\n */\nclass Spatial extends Filter {\n\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!module:ol/geom/Geometry} geometry Geometry.\n   * @param {string=} opt_srsName SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   */\n  constructor(tagName, geometryName, geometry, opt_srsName) {\n\n    super(tagName);\n\n    /**\n     * @type {!string}\n     */\n    this.geometryName = geometryName || 'the_geom';\n\n    /**\n     * @type {module:ol/geom/Geometry}\n     */\n    this.geometry = geometry;\n\n    /**\n     * @type {string|undefined}\n     */\n    this.srsName = opt_srsName;\n  }\n\n}\n\nexport default Spatial;\n","/**\n * @module ol/format/filter/Contains\n */\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n */\nclass Contains extends Spatial {\n\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!module:ol/geom/Geometry} geometry Geometry.\n   * @param {string=} opt_srsName SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   * @api\n   */\n  constructor(geometryName, geometry, opt_srsName) {\n\n    super('Contains', geometryName, geometry, opt_srsName);\n\n  }\n\n}\n\nexport default Contains;\n","/**\n * @module ol/format/filter/Comparison\n */\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @abstract\n */\nclass Comparison extends Filter {\n\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   * @param {!string} propertyName Name of the context property to compare.\n   */\n  constructor(tagName, propertyName) {\n\n    super(tagName);\n\n    /**\n     * @type {!string}\n     */\n    this.propertyName = propertyName;\n  }\n\n}\n\nexport default Comparison;\n","/**\n * @module ol/format/filter/During\n */\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n */\nclass During extends Comparison {\n\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!string} begin The begin date in ISO-8601 format.\n   * @param {!string} end The end date in ISO-8601 format.\n   * @api\n   */\n  constructor(propertyName, begin, end) {\n    super('During', propertyName);\n\n    /**\n     * @type {!string}\n     */\n    this.begin = begin;\n\n    /**\n     * @type {!string}\n     */\n    this.end = end;\n  }\n\n}\n\nexport default During;\n","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @abstract\n */\nclass ComparisonBinary extends Comparison {\n\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!(string|number)} expression The value to compare.\n   * @param {boolean=} opt_matchCase Case-sensitive?\n   */\n  constructor(tagName, propertyName, expression, opt_matchCase) {\n\n    super(tagName, propertyName);\n\n    /**\n     * @type {!(string|number)}\n     */\n    this.expression = expression;\n\n    /**\n     * @type {boolean|undefined}\n     */\n    this.matchCase = opt_matchCase;\n  }\n\n}\n\nexport default ComparisonBinary;\n","/**\n * @module ol/format/filter/EqualTo\n */\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n */\nclass EqualTo extends ComparisonBinary {\n\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!(string|number)} expression The value to compare.\n   * @param {boolean=} opt_matchCase Case-sensitive?\n   * @api\n   */\n  constructor(propertyName, expression, opt_matchCase) {\n    super('PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n  }\n\n}\n\nexport default EqualTo;\n","/**\n * @module ol/format/filter/GreaterThan\n */\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n */\nclass GreaterThan extends ComparisonBinary {\n\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!number} expression The value to compare.\n   * @api\n   */\n  constructor(propertyName, expression) {\n    super('PropertyIsGreaterThan', propertyName, expression);\n  }\n\n}\n\nexport default GreaterThan;\n","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n */\nclass GreaterThanOrEqualTo extends ComparisonBinary {\n\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!number} expression The value to compare.\n   * @api\n   */\n  constructor(propertyName, expression) {\n    super('PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n  }\n\n}\n\nexport default GreaterThanOrEqualTo;\n","/**\n * @module ol/format/filter/Intersects\n */\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n */\nclass Intersects extends Spatial {\n\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!module:ol/geom/Geometry} geometry Geometry.\n   * @param {string=} opt_srsName SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   */\n  constructor(geometryName, geometry, opt_srsName) {\n    super('Intersects', geometryName, geometry, opt_srsName);\n  }\n\n}\n\nexport default Intersects;\n","/**\n * @module ol/format/filter/IsBetween\n */\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n */\nclass IsBetween extends Comparison {\n\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!number} lowerBoundary The lower bound of the range.\n   * @param {!number} upperBoundary The upper bound of the range.\n   * @api\n   */\n  constructor(propertyName, lowerBoundary, upperBoundary) {\n    super('PropertyIsBetween', propertyName);\n\n    /**\n     * @type {!number}\n     */\n    this.lowerBoundary = lowerBoundary;\n\n    /**\n     * @type {!number}\n     */\n    this.upperBoundary = upperBoundary;\n\n  }\n}\n\nexport default IsBetween;\n","/**\n * @module ol/format/filter/IsLike\n */\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n */\nclass IsLike extends Comparison {\n\n  /**\n   * [constructor description]\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!string} pattern Text pattern.\n   * @param {string=} opt_wildCard Pattern character which matches any sequence of\n   *    zero or more string characters. Default is '*'.\n   * @param {string=} opt_singleChar pattern character which matches any single\n   *    string character. Default is '.'.\n   * @param {string=} opt_escapeChar Escape character which can be used to escape\n   *    the pattern characters. Default is '!'.\n   * @param {boolean=} opt_matchCase Case-sensitive?\n   * @api\n   */\n  constructor(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n    super('PropertyIsLike', propertyName);\n\n    /**\n     * @type {!string}\n     */\n    this.pattern = pattern;\n\n    /**\n     * @type {!string}\n     */\n    this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n    /**\n     * @type {!string}\n     */\n    this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n    /**\n     * @type {!string}\n     */\n    this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n    /**\n     * @type {boolean|undefined}\n     */\n    this.matchCase = opt_matchCase;\n\n  }\n}\n\nexport default IsLike;\n","/**\n * @module ol/format/filter/IsNull\n */\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n */\nclass IsNull extends Comparison {\n\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @api\n   */\n  constructor(propertyName) {\n    super('PropertyIsNull', propertyName);\n  }\n\n}\n\nexport default IsNull;\n","/**\n * @module ol/format/filter/LessThan\n */\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n */\nclass LessThan extends ComparisonBinary {\n\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!number} expression The value to compare.\n   * @api\n   */\n  constructor(propertyName, expression) {\n    super('PropertyIsLessThan', propertyName, expression);\n  }\n\n}\n\nexport default LessThan;\n","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n */\nclass LessThanOrEqualTo extends ComparisonBinary {\n\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!number} expression The value to compare.\n   * @api\n   */\n  constructor(propertyName, expression) {\n    super('PropertyIsLessThanOrEqualTo', propertyName, expression);\n  }\n\n}\n\nexport default LessThanOrEqualTo;\n","/**\n * @module ol/format/filter/Not\n */\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n */\nclass Not extends Filter {\n\n  /**\n   * @param {!module:ol/format/filter/Filter} condition Filter condition.\n   * @api\n   */\n  constructor(condition) {\n\n    super('Not');\n\n    /**\n     * @type {!module:ol/format/filter/Filter}\n     */\n    this.condition = condition;\n\n  }\n\n}\n\nexport default Not;\n","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n */\nclass NotEqualTo extends ComparisonBinary {\n\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!(string|number)} expression The value to compare.\n   * @param {boolean=} opt_matchCase Case-sensitive?\n   * @api\n   */\n  constructor(propertyName, expression, opt_matchCase) {\n    super('PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n  }\n\n}\n\nexport default NotEqualTo;\n","/**\n * @module ol/format/filter/Or\n */\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n */\nclass Or extends LogicalNary {\n\n  /**\n   * @param {...module:ol/format/filter/Filter} conditions Conditions.\n   * @api\n   */\n  constructor(conditions) {\n    const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n    super(...params);\n  }\n\n}\n\nexport default Or;\n","/**\n * @module ol/format/filter/Within\n */\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n */\nclass Within extends Spatial {\n\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!module:ol/geom/Geometry} geometry Geometry.\n   * @param {string=} opt_srsName SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   * @api\n   */\n  constructor(geometryName, geometry, opt_srsName) {\n    super('Within', geometryName, geometry, opt_srsName);\n  }\n\n}\n\nexport default Within;\n","/**\n * @module ol/format/filter\n */\nimport And from '../format/filter/And.js';\nimport Bbox from '../format/filter/Bbox.js';\nimport Contains from '../format/filter/Contains.js';\nimport During from '../format/filter/During.js';\nimport EqualTo from '../format/filter/EqualTo.js';\nimport GreaterThan from '../format/filter/GreaterThan.js';\nimport GreaterThanOrEqualTo from '../format/filter/GreaterThanOrEqualTo.js';\nimport Intersects from '../format/filter/Intersects.js';\nimport IsBetween from '../format/filter/IsBetween.js';\nimport IsLike from '../format/filter/IsLike.js';\nimport IsNull from '../format/filter/IsNull.js';\nimport LessThan from '../format/filter/LessThan.js';\nimport LessThanOrEqualTo from '../format/filter/LessThanOrEqualTo.js';\nimport Not from '../format/filter/Not.js';\nimport NotEqualTo from '../format/filter/NotEqualTo.js';\nimport Or from '../format/filter/Or.js';\nimport Within from '../format/filter/Within.js';\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...module:ol/format/filter/Filter} conditions Filter conditions.\n * @returns {!module:ol/format/filter/And} `<And>` operator.\n * @api\n */\nexport function and(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(And, params));\n}\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...module:ol/format/filter/Filter} conditions Filter conditions.\n * @returns {!module:ol/format/filter/Or} `<Or>` operator.\n * @api\n */\nexport function or(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(Or, params));\n}\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!module:ol/format/filter/Filter} condition Filter condition.\n * @returns {!module:ol/format/filter/Not} `<Not>` operator.\n * @api\n */\nexport function not(condition) {\n  return new Not(condition);\n}\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!module:ol/extent~Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!module:ol/format/filter/Bbox} `<BBOX>` operator.\n * @api\n */\nexport function bbox(geometryName, extent, opt_srsName) {\n  return new Bbox(geometryName, extent, opt_srsName);\n}\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!module:ol/geom/Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!module:ol/format/filter/Contains} `<Contains>` operator.\n * @api\n */\nexport function contains(geometryName, geometry, opt_srsName) {\n  return new Contains(geometryName, geometry, opt_srsName);\n}\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!module:ol/geom/Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!module:ol/format/filter/Intersects} `<Intersects>` operator.\n * @api\n */\nexport function intersects(geometryName, geometry, opt_srsName) {\n  return new Intersects(geometryName, geometry, opt_srsName);\n}\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!module:ol/geom/Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!module:ol/format/filter/Within} `<Within>` operator.\n * @api\n */\nexport function within(geometryName, geometry, opt_srsName) {\n  return new Within(geometryName, geometry, opt_srsName);\n}\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!module:ol/format/filter/EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\nexport function equalTo(propertyName, expression, opt_matchCase) {\n  return new EqualTo(propertyName, expression, opt_matchCase);\n}\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!module:ol/format/filter/NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\nexport function notEqualTo(propertyName, expression, opt_matchCase) {\n  return new NotEqualTo(propertyName, expression, opt_matchCase);\n}\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!module:ol/format/filter/LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\nexport function lessThan(propertyName, expression) {\n  return new LessThan(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!module:ol/format/filter/LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\nexport function lessThanOrEqualTo(propertyName, expression) {\n  return new LessThanOrEqualTo(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!module:ol/format/filter/GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\nexport function greaterThan(propertyName, expression) {\n  return new GreaterThan(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!module:ol/format/filter/GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\nexport function greaterThanOrEqualTo(propertyName, expression) {\n  return new GreaterThanOrEqualTo(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!module:ol/format/filter/IsNull} `<PropertyIsNull>` operator.\n * @api\n */\nexport function isNull(propertyName) {\n  return new IsNull(propertyName);\n}\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!module:ol/format/filter/IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\nexport function between(propertyName, lowerBoundary, upperBoundary) {\n  return new IsBetween(propertyName, lowerBoundary, upperBoundary);\n}\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!module:ol/format/filter/IsLike} `<PropertyIsLike>` operator.\n * @api\n */\nexport function like(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new IsLike(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n}\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!module:ol/format/filter/During} `<During>` operator.\n * @api\n */\nexport function during(propertyName, begin, end) {\n  return new During(propertyName, begin, end);\n}\n","/**\n * @module ol/format/WFS\n */\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase, {GMLNS} from '../format/GMLBase.js';\nimport {and as andFilter, bbox as bboxFilter} from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {readNonNegativeIntegerString, readNonNegativeInteger, writeStringTextNode} from '../format/xsd.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {createElementNS, isDocument, isNode, makeArrayPusher, makeChildAppender,\n  makeObjectPropertySetter, makeSimpleNodeFactory, parse, parseNode,\n  pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst FEATURE_COLLECTION_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst TRANSACTION_SUMMARY_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': makeObjectPropertySetter(readNonNegativeInteger),\n    'totalUpdated': makeObjectPropertySetter(readNonNegativeInteger),\n    'totalDeleted': makeObjectPropertySetter(readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst TRANSACTION_RESPONSE_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary, 'transactionSummary'),\n    'InsertResults': makeObjectPropertySetter(\n      readInsertResults, 'insertIds')\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst QUERY_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': makeChildAppender(writeStringTextNode)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst TRANSACTION_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative)\n  }\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {Object.<string, string>|string} [featureNS] The namespace URI used for features.\n * @property {Array.<string>|string} [featureType] The feature type to parse. Only used for read operations.\n * @property {module:ol/format/GMLBase} [gmlFormat] The GML format to use to parse the response. Default is `ol/format/GML3`.\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\n */\n\n\n/**\n * @typedef {Object} WriteGetFeatureOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {Array.<string>} featureTypes The feature type names.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {string} [outputFormat] Output format.\n * @property {number} [maxFeatures] Maximum number of features to fetch.\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\n * @property {Array.<string>} [propertyNames] Optional list of property names to serialize.\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\n * @property {number} [count] Number of features to retrieve when paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\n * Web Feature Services have repurposed `maxfeatures` instead.\n * @property {module:ol/extent~Extent} [bbox] Extent to use for the BBOX filter.\n * @property {module:ol/format/filter/Filter} [filter] Filter condition. See\n * {@link module:ol/format/Filter} for more information.\n * @property {string} [resultType] Indicates what response should be returned,\n * E.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\n */\n\n\n/**\n * @typedef {Object} WriteTransactionOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {string} featureType The feature type name.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\n * @property {Array.<Object>} nativeElements Native elements. Currently not supported.\n * @property {module:ol/format/GMLBase~Options} [gmlOptions] GML options for the WFS transaction writer.\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0` or `1.1.0`.\n */\n\n\n/**\n * Number of features; bounds/extent.\n * @typedef {Object} FeatureCollectionMetadata\n * @property {number} numberOfFeatures\n * @property {module:ol/extent~Extent} bounds\n */\n\n\n/**\n * Total deleted; total inserted; total updated; array of insert ids.\n * @typedef {Object} TransactionResponse\n * @property {number} totalDeleted\n * @property {number} totalInserted\n * @property {number} totalUpdated\n * @property {Array.<string>} insertIds\n */\n\n\n/**\n * @type {string}\n */\nconst FEATURE_PREFIX = 'feature';\n\n\n/**\n * @type {string}\n */\nconst XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @type {string}\n */\nconst OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @type {string}\n */\nconst WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @type {string}\n */\nconst FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @type {Object.<string, string>}\n */\nconst SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nconst DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\n *\n * @api\n */\nclass WFS extends XMLFeature {\n\n  /**\n   * @param {module:ol/format/WFS~Options=} opt_options Optional configuration object.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {Array.<string>|string|undefined}\n     */\n    this.featureType_ = options.featureType;\n\n    /**\n     * @private\n     * @type {Object.<string, string>|string|undefined}\n     */\n    this.featureNS_ = options.featureNS;\n\n    /**\n     * @private\n     * @type {module:ol/format/GMLBase}\n     */\n    this.gmlFormat_ = options.gmlFormat ?\n      options.gmlFormat : new GML3();\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.schemaLocation_ = options.schemaLocation ?\n      options.schemaLocation : SCHEMA_LOCATIONS[DEFAULT_VERSION];\n  }\n\n  /**\n   * @return {Array.<string>|string|undefined} featureType\n   */\n  getFeatureType() {\n    return this.featureType_;\n  }\n\n  /**\n   * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n   */\n  setFeatureType(featureType) {\n    this.featureType_ = featureType;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeaturesFromNode(node, opt_options) {\n    const context = /** @type {module:ol/xml~NodeStackItem} */ ({\n      'featureType': this.featureType_,\n      'featureNS': this.featureNS_\n    });\n    assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n    const objectStack = [context];\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLNS][\n      'featureMember'] =\n        makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n    let features = pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      objectStack, this.gmlFormat_);\n    if (!features) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * Read transaction response of the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @return {module:ol/format/WFS~TransactionResponse|undefined} Transaction response.\n   * @api\n   */\n  readTransactionResponse(source) {\n    if (isDocument(source)) {\n      return this.readTransactionResponseFromDocument(\n        /** @type {Document} */ (source));\n    } else if (isNode(source)) {\n      return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readTransactionResponseFromDocument(doc);\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * Read feature collection metadata of the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @return {module:ol/format/WFS~FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   * @api\n   */\n  readFeatureCollectionMetadata(source) {\n    if (isDocument(source)) {\n      return this.readFeatureCollectionMetadataFromDocument(\n        /** @type {Document} */ (source));\n    } else if (isNode(source)) {\n      return this.readFeatureCollectionMetadataFromNode(\n        /** @type {Node} */ (source));\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureCollectionMetadataFromDocument(doc);\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {module:ol/format/WFS~FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFeatureCollectionMetadataFromNode(n);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @return {module:ol/format/WFS~FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromNode(node) {\n    const result = {};\n    const value = readNonNegativeIntegerString(\n      node.getAttribute('numberOfFeatures'));\n    result['numberOfFeatures'] = value;\n    return pushParseAndPop(\n      /** @type {module:ol/format/WFS~FeatureCollectionMetadata} */ (result),\n      FEATURE_COLLECTION_PARSERS, node, [], this.gmlFormat_);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {module:ol/format/WFS~TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readTransactionResponseFromNode(n);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @return {module:ol/format/WFS~TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromNode(node) {\n    return pushParseAndPop(\n      /** @type {module:ol/format/WFS~TransactionResponse} */({}),\n      TRANSACTION_RESPONSE_PARSERS, node, []);\n  }\n\n  /**\n   * Encode format as WFS `GetFeature` and return the Node.\n   *\n   * @param {module:ol/format/WFS~WriteGetFeatureOptions} options Options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeGetFeature(options) {\n    const node = createElementNS(WFSNS, 'GetFeature');\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', '1.1.0');\n    let filter;\n    if (options) {\n      if (options.handle) {\n        node.setAttribute('handle', options.handle);\n      }\n      if (options.outputFormat) {\n        node.setAttribute('outputFormat', options.outputFormat);\n      }\n      if (options.maxFeatures !== undefined) {\n        node.setAttribute('maxFeatures', options.maxFeatures);\n      }\n      if (options.resultType) {\n        node.setAttribute('resultType', options.resultType);\n      }\n      if (options.startIndex !== undefined) {\n        node.setAttribute('startIndex', options.startIndex);\n      }\n      if (options.count !== undefined) {\n        node.setAttribute('count', options.count);\n      }\n      filter = options.filter;\n      if (options.bbox) {\n        assert(options.geometryName,\n          12); // `options.geometryName` must also be provided when `options.bbox` is set\n        const bbox = bboxFilter(\n          /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n        if (filter) {\n          // if bbox and filter are both set, combine the two into a single filter\n          filter = andFilter(filter, bbox);\n        } else {\n          filter = bbox;\n        }\n      }\n    }\n    node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation_);\n    /** @type {module:ol/xml~NodeStackItem} */\n    const context = {\n      node: node,\n      'srsName': options.srsName,\n      'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n      'featurePrefix': options.featurePrefix,\n      'geometryName': options.geometryName,\n      'filter': filter,\n      'propertyNames': options.propertyNames ? options.propertyNames : []\n    };\n    assert(Array.isArray(options.featureTypes),\n      11); // `options.featureTypes` should be an Array\n    writeGetFeature(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n    return node;\n  }\n\n  /**\n   * Encode format as WFS `Transaction` and return the Node.\n   *\n   * @param {Array.<module:ol/Feature>} inserts The features to insert.\n   * @param {Array.<module:ol/Feature>} updates The features to update.\n   * @param {Array.<module:ol/Feature>} deletes The features to delete.\n   * @param {module:ol/format/WFS~WriteTransactionOptions} options Write options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeTransaction(inserts, updates, deletes, options) {\n    const objectStack = [];\n    const node = createElementNS(WFSNS, 'Transaction');\n    const version = options.version ? options.version : DEFAULT_VERSION;\n    const gmlVersion = version === '1.0.0' ? 2 : 3;\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', version);\n    let baseObj;\n    /** @type {module:ol/xml~NodeStackItem} */\n    let obj;\n    if (options) {\n      baseObj = options.gmlOptions ? options.gmlOptions : {};\n      if (options.handle) {\n        node.setAttribute('handle', options.handle);\n      }\n    }\n    const schemaLocation = SCHEMA_LOCATIONS[version];\n    node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', schemaLocation);\n    const featurePrefix = options.featurePrefix ? options.featurePrefix : FEATURE_PREFIX;\n    if (inserts) {\n      obj = {node: node, 'featureNS': options.featureNS,\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\n        'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n      assign(obj, baseObj);\n      pushSerializeAndPop(obj,\n        TRANSACTION_SERIALIZERS,\n        makeSimpleNodeFactory('Insert'), inserts,\n        objectStack);\n    }\n    if (updates) {\n      obj = {node: node, 'featureNS': options.featureNS,\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\n        'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n      assign(obj, baseObj);\n      pushSerializeAndPop(obj,\n        TRANSACTION_SERIALIZERS,\n        makeSimpleNodeFactory('Update'), updates,\n        objectStack);\n    }\n    if (deletes) {\n      pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\n        'gmlVersion': gmlVersion, 'srsName': options.srsName},\n      TRANSACTION_SERIALIZERS,\n      makeSimpleNodeFactory('Delete'), deletes,\n      objectStack);\n    }\n    if (options.nativeElements) {\n      pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\n        'gmlVersion': gmlVersion, 'srsName': options.srsName},\n      TRANSACTION_SERIALIZERS,\n      makeSimpleNodeFactory('Native'), options.nativeElements,\n      objectStack);\n    }\n    return node;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readProjectionFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readProjectionFromNode(n);\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readProjectionFromNode(node) {\n    if (node.firstElementChild &&\n        node.firstElementChild.firstElementChild) {\n      node = node.firstElementChild.firstElementChild;\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        if (!(n.childNodes.length === 0 ||\n            (n.childNodes.length === 1 &&\n            n.firstChild.nodeType === 3))) {\n          const objectStack = [{}];\n          this.gmlFormat_.readGeometryElement(n, objectStack);\n          return getProjection(objectStack.pop().srsName);\n        }\n      }\n    }\n\n    return null;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n */\nfunction readTransactionSummary(node, objectStack) {\n  return pushParseAndPop(\n    {}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst OGC_FID_PARSERS = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction fidParser(node, objectStack) {\n  parseNode(OGC_FID_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst INSERT_RESULTS_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'Feature': fidParser\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n */\nfunction readInsertResults(node, objectStack) {\n  return pushParseAndPop(\n    [], INSERT_RESULTS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeFeature(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeOgcFidFilter(node, fid, objectStack) {\n  const filter = createElementNS(OGCNS, 'Filter');\n  const child = createElementNS(OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n}\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n */\nfunction getTypeName(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeDelete(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeUpdate(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    TRANSACTION_SERIALIZERS,\n    makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeProperty(node, pair, objectStack) {\n  const name = createElementNS(WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = createElementNS(WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      writeStringTextNode(value, pair.value);\n    }\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeNative(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    writeStringTextNode(node, nativeElement.value);\n  }\n}\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst GETFEATURE_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Query': makeChildAppender(writeQuery)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeContainsFilter),\n    'Intersects': makeChildAppender(writeIntersectsFilter),\n    'Within': makeChildAppender(writeWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeQuery(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = getTypeName(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  }\n  const item = /** @type {module:ol/xml~NodeStackItem} */ (assign({}, context));\n  item.node = node;\n  pushSerializeAndPop(item,\n    QUERY_SERIALIZERS,\n    makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = createElementNS(OGCNS, 'Filter');\n    node.appendChild(child);\n    writeFilterCondition(child, filter, objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeFilterCondition(node, filter, objectStack) {\n  /** @type {module:ol/xml~NodeStackItem} */\n  const item = {node: node};\n  pushSerializeAndPop(item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeBboxFilter(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeContainsFilter(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeIntersectsFilter(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeWithinFilter(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeDuringFilter(node, filter, objectStack) {\n\n  const valueReference = createElementNS(FESNS, 'ValueReference');\n  writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = createElementNS(GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = createElementNS(GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  writeTimeInstant(begin, filter.begin);\n\n  const end = createElementNS(GMLNS, 'end');\n  timePeriod.appendChild(end);\n  writeTimeInstant(end, filter.end);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeLogicalFilter(node, filter, objectStack) {\n  /** @type {module:ol/xml~NodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    pushSerializeAndPop(item,\n      GETFEATURE_SERIALIZERS,\n      makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeNotFilter(node, filter, objectStack) {\n  /** @type {module:ol/xml~NodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  pushSerializeAndPop(item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeComparisonFilter(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writeOgcPropertyName(node, filter.propertyName);\n  writeOgcLiteral(node, '' + filter.expression);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeIsNullFilter(node, filter, objectStack) {\n  writeOgcPropertyName(node, filter.propertyName);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeIsBetweenFilter(node, filter, objectStack) {\n  writeOgcPropertyName(node, filter.propertyName);\n\n  const lowerBoundary = createElementNS(OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  writeOgcLiteral(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = createElementNS(OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  writeOgcLiteral(upperBoundary, '' + filter.upperBoundary);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeIsLikeFilter(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writeOgcPropertyName(node, filter.propertyName);\n  writeOgcLiteral(node, '' + filter.pattern);\n}\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n */\nfunction writeOgcExpression(tagName, node, value) {\n  const property = createElementNS(OGCNS, tagName);\n  writeStringTextNode(property, value);\n  node.appendChild(property);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeOgcPropertyName(node, value) {\n  writeOgcExpression('PropertyName', node, value);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeOgcLiteral(node, value) {\n  writeOgcExpression('Literal', node, value);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n */\nfunction writeTimeInstant(node, time) {\n  const timeInstant = createElementNS(GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = createElementNS(GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  writeStringTextNode(timePosition, time);\n}\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {module:ol/format/filter/Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nexport function writeFilter(filter) {\n  const child = createElementNS(OGCNS, 'Filter');\n  writeFilterCondition(child, filter, []);\n  return child;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeGetFeature(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {module:ol/xml~NodeStackItem} */ (assign({}, context));\n  item.node = node;\n  pushSerializeAndPop(item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n}\n\n\nexport default WFS;\n","/**\n * @module ol/format/WKT\n */\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport TextFeature from '../format/TextFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\n\n\n/**\n * @enum {function (new:module:ol/geom/Geometry, Array, module:ol/geom/GeometryLayout)}\n */\nconst GeometryConstructor = {\n  'POINT': Point,\n  'LINESTRING': LineString,\n  'POLYGON': Polygon,\n  'MULTIPOINT': MultiPoint,\n  'MULTILINESTRING': MultiLineString,\n  'MULTIPOLYGON': MultiPolygon\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [splitCollection=false] Whether to split GeometryCollections into\n * multiple features on reading.\n */\n\n/**\n * @typedef {Object} Token\n * @property {number} type\n * @property {number|string} [value]\n * @property {number} position\n */\n\n/**\n * @const\n * @type {string}\n */\nconst EMPTY = 'EMPTY';\n\n\n/**\n * @const\n * @type {string}\n */\nconst Z = 'Z';\n\n\n/**\n * @const\n * @type {string}\n */\nconst M = 'M';\n\n\n/**\n * @const\n * @type {string}\n */\nconst ZM = 'ZM';\n\n\n/**\n * @const\n * @enum {number}\n */\nconst TokenType = {\n  TEXT: 1,\n  LEFT_PAREN: 2,\n  RIGHT_PAREN: 3,\n  NUMBER: 4,\n  COMMA: 5,\n  EOF: 6\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nconst WKTGeometryType = {};\nfor (const type in GeometryType) {\n  WKTGeometryType[type] = GeometryType[type].toUpperCase();\n}\n\n\n/**\n * Class to tokenize a WKT string.\n */\nclass Lexer {\n\n  /**\n   * @param {string} wkt WKT string.\n   */\n  constructor(wkt) {\n\n    /**\n     * @type {string}\n     */\n    this.wkt = wkt;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.index_ = -1;\n  }\n\n  /**\n   * @param {string} c Character.\n   * @return {boolean} Whether the character is alphabetic.\n   * @private\n   */\n  isAlpha_(c) {\n    return c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z';\n  }\n\n  /**\n   * @param {string} c Character.\n   * @param {boolean=} opt_decimal Whether the string number\n   *     contains a dot, i.e. is a decimal number.\n   * @return {boolean} Whether the character is numeric.\n   * @private\n   */\n  isNumeric_(c, opt_decimal) {\n    const decimal = opt_decimal !== undefined ? opt_decimal : false;\n    return c >= '0' && c <= '9' || c == '.' && !decimal;\n  }\n\n  /**\n   * @param {string} c Character.\n   * @return {boolean} Whether the character is whitespace.\n   * @private\n   */\n  isWhiteSpace_(c) {\n    return c == ' ' || c == '\\t' || c == '\\r' || c == '\\n';\n  }\n\n  /**\n   * @return {string} Next string character.\n   * @private\n   */\n  nextChar_() {\n    return this.wkt.charAt(++this.index_);\n  }\n\n  /**\n   * Fetch and return the next token.\n   * @return {!module:ol/format/WKT~Token} Next string token.\n   */\n  nextToken() {\n    const c = this.nextChar_();\n    const token = {position: this.index_, value: c};\n\n    if (c == '(') {\n      token.type = TokenType.LEFT_PAREN;\n    } else if (c == ',') {\n      token.type = TokenType.COMMA;\n    } else if (c == ')') {\n      token.type = TokenType.RIGHT_PAREN;\n    } else if (this.isNumeric_(c) || c == '-') {\n      token.type = TokenType.NUMBER;\n      token.value = this.readNumber_();\n    } else if (this.isAlpha_(c)) {\n      token.type = TokenType.TEXT;\n      token.value = this.readText_();\n    } else if (this.isWhiteSpace_(c)) {\n      return this.nextToken();\n    } else if (c === '') {\n      token.type = TokenType.EOF;\n    } else {\n      throw new Error('Unexpected character: ' + c);\n    }\n\n    return token;\n  }\n\n  /**\n   * @return {number} Numeric token value.\n   * @private\n   */\n  readNumber_() {\n    let c;\n    const index = this.index_;\n    let decimal = false;\n    let scientificNotation = false;\n    do {\n      if (c == '.') {\n        decimal = true;\n      } else if (c == 'e' || c == 'E') {\n        scientificNotation = true;\n      }\n      c = this.nextChar_();\n    } while (\n      this.isNumeric_(c, decimal) ||\n        // if we haven't detected a scientific number before, 'e' or 'E'\n        // hint that we should continue to read\n        !scientificNotation && (c == 'e' || c == 'E') ||\n        // once we know that we have a scientific number, both '-' and '+'\n        // are allowed\n        scientificNotation && (c == '-' || c == '+')\n    );\n    return parseFloat(this.wkt.substring(index, this.index_--));\n  }\n\n  /**\n   * @return {string} String token value.\n   * @private\n   */\n  readText_() {\n    let c;\n    const index = this.index_;\n    do {\n      c = this.nextChar_();\n    } while (this.isAlpha_(c));\n    return this.wkt.substring(index, this.index_--).toUpperCase();\n  }\n}\n\n/**\n * Class to parse the tokens from the WKT string.\n */\nclass Parser {\n\n  /**\n   * @param {module:ol/format/WKT~Lexer} lexer The lexer.\n   */\n  constructor(lexer) {\n\n    /**\n     * @type {module:ol/format/WKT~Lexer}\n     * @private\n     */\n    this.lexer_ = lexer;\n\n    /**\n     * @type {module:ol/format/WKT~Token}\n     * @private\n     */\n    this.token_;\n\n    /**\n     * @type {module:ol/geom/GeometryLayout}\n     * @private\n     */\n    this.layout_ = GeometryLayout.XY;\n  }\n\n  /**\n   * Fetch the next token form the lexer and replace the active token.\n   * @private\n   */\n  consume_() {\n    this.token_ = this.lexer_.nextToken();\n  }\n\n  /**\n   * Tests if the given type matches the type of the current token.\n   * @param {module:ol/format/WKT~TokenType} type Token type.\n   * @return {boolean} Whether the token matches the given type.\n   */\n  isTokenType(type) {\n    const isMatch = this.token_.type == type;\n    return isMatch;\n  }\n\n  /**\n   * If the given type matches the current token, consume it.\n   * @param {module:ol/format/WKT~TokenType} type Token type.\n   * @return {boolean} Whether the token matches the given type.\n   */\n  match(type) {\n    const isMatch = this.isTokenType(type);\n    if (isMatch) {\n      this.consume_();\n    }\n    return isMatch;\n  }\n\n  /**\n   * Try to parse the tokens provided by the lexer.\n   * @return {module:ol/geom/Geometry} The geometry.\n   */\n  parse() {\n    this.consume_();\n    const geometry = this.parseGeometry_();\n    return geometry;\n  }\n\n  /**\n   * Try to parse the dimensional info.\n   * @return {module:ol/geom/GeometryLayout} The layout.\n   * @private\n   */\n  parseGeometryLayout_() {\n    let layout = GeometryLayout.XY;\n    const dimToken = this.token_;\n    if (this.isTokenType(TokenType.TEXT)) {\n      const dimInfo = dimToken.value;\n      if (dimInfo === Z) {\n        layout = GeometryLayout.XYZ;\n      } else if (dimInfo === M) {\n        layout = GeometryLayout.XYM;\n      } else if (dimInfo === ZM) {\n        layout = GeometryLayout.XYZM;\n      }\n      if (layout !== GeometryLayout.XY) {\n        this.consume_();\n      }\n    }\n    return layout;\n  }\n\n  /**\n   * @return {!Array.<module:ol/geom/Geometry>} A collection of geometries.\n   * @private\n   */\n  parseGeometryCollectionText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const geometries = [];\n      do {\n        geometries.push(this.parseGeometry_());\n      } while (this.match(TokenType.COMMA));\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return geometries;\n      }\n    } else if (this.isEmptyGeometry_()) {\n      return [];\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array.<number>} All values in a point.\n   * @private\n   */\n  parsePointText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePoint_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    } else if (this.isEmptyGeometry_()) {\n      return null;\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {!Array.<!Array.<number>>} All points in a linestring.\n   * @private\n   */\n  parseLineStringText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePointList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    } else if (this.isEmptyGeometry_()) {\n      return [];\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {!Array.<!Array.<number>>} All points in a polygon.\n   * @private\n   */\n  parsePolygonText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parseLineStringTextList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    } else if (this.isEmptyGeometry_()) {\n      return [];\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {!Array.<!Array.<number>>} All points in a multipoint.\n   * @private\n   */\n  parseMultiPointText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      let coordinates;\n      if (this.token_.type == TokenType.LEFT_PAREN) {\n        coordinates = this.parsePointTextList_();\n      } else {\n        coordinates = this.parsePointList_();\n      }\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    } else if (this.isEmptyGeometry_()) {\n      return [];\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {!Array.<!Array.<number>>} All linestring points\n   *                                        in a multilinestring.\n   * @private\n   */\n  parseMultiLineStringText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parseLineStringTextList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    } else if (this.isEmptyGeometry_()) {\n      return [];\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {!Array.<!Array.<number>>} All polygon points in a multipolygon.\n   * @private\n   */\n  parseMultiPolygonText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePolygonTextList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    } else if (this.isEmptyGeometry_()) {\n      return [];\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {!Array.<number>} A point.\n   * @private\n   */\n  parsePoint_() {\n    const coordinates = [];\n    const dimensions = this.layout_.length;\n    for (let i = 0; i < dimensions; ++i) {\n      const token = this.token_;\n      if (this.match(TokenType.NUMBER)) {\n        coordinates.push(token.value);\n      } else {\n        break;\n      }\n    }\n    if (coordinates.length == dimensions) {\n      return coordinates;\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {!Array.<!Array.<number>>} An array of points.\n   * @private\n   */\n  parsePointList_() {\n    const coordinates = [this.parsePoint_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parsePoint_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {!Array.<!Array.<number>>} An array of points.\n   * @private\n   */\n  parsePointTextList_() {\n    const coordinates = [this.parsePointText_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parsePointText_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {!Array.<!Array.<number>>} An array of points.\n   * @private\n   */\n  parseLineStringTextList_() {\n    const coordinates = [this.parseLineStringText_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parseLineStringText_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {!Array.<!Array.<number>>} An array of points.\n   * @private\n   */\n  parsePolygonTextList_() {\n    const coordinates = [this.parsePolygonText_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parsePolygonText_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {boolean} Whether the token implies an empty geometry.\n   * @private\n   */\n  isEmptyGeometry_() {\n    const isEmpty = this.isTokenType(TokenType.TEXT) &&\n        this.token_.value == EMPTY;\n    if (isEmpty) {\n      this.consume_();\n    }\n    return isEmpty;\n  }\n\n  /**\n   * Create an error message for an unexpected token error.\n   * @return {string} Error message.\n   * @private\n   */\n  formatErrorMessage_() {\n    return 'Unexpected `' + this.token_.value + '` at position ' +\n        this.token_.position + ' in `' + this.lexer_.wkt + '`';\n  }\n\n  /**\n   * @return {!module:ol/geom/Geometry} The geometry.\n   * @private\n   */\n  parseGeometry_() {\n    const token = this.token_;\n    if (this.match(TokenType.TEXT)) {\n      const geomType = token.value;\n      this.layout_ = this.parseGeometryLayout_();\n      if (geomType == 'GEOMETRYCOLLECTION') {\n        const geometries = this.parseGeometryCollectionText_();\n        return new GeometryCollection(geometries);\n      } else {\n        const ctor = GeometryConstructor[geomType];\n        if (!ctor) {\n          throw new Error('Invalid geometry type: ' + geomType);\n        }\n\n        let coordinates;\n        switch (geomType) {\n          case 'POINT': {\n            coordinates = this.parsePointText_();\n            break;\n          }\n          case 'LINESTRING': {\n            coordinates = this.parseLineStringText_();\n            break;\n          }\n          case 'POLYGON': {\n            coordinates = this.parsePolygonText_();\n            break;\n          }\n          case 'MULTIPOINT': {\n            coordinates = this.parseMultiPointText_();\n            break;\n          }\n          case 'MULTILINESTRING': {\n            coordinates = this.parseMultiLineStringText_();\n            break;\n          }\n          case 'MULTIPOLYGON': {\n            coordinates = this.parseMultiPolygonText_();\n            break;\n          }\n          default: {\n            throw new Error('Invalid geometry type: ' + geomType);\n          }\n        }\n\n        if (!coordinates) {\n          if (ctor === GeometryConstructor['POINT']) {\n            coordinates = [NaN, NaN];\n          } else {\n            coordinates = [];\n          }\n        }\n        return new ctor(coordinates, this.layout_);\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n}\n\n\n/**\n * @classdesc\n * Geometry format for reading and writing data in the `WellKnownText` (WKT)\n * format.\n *\n * @api\n */\nclass WKT extends TextFeature {\n\n  /**\n   * @param {module:ol/format/WKT~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n\n    /**\n     * Split GeometryCollection into multiple features.\n     * @type {boolean}\n     * @private\n     */\n    this.splitCollection_ = options.splitCollection !== undefined ?\n      options.splitCollection : false;\n\n  }\n\n  /**\n   * Parse a WKT string.\n   * @param {string} wkt WKT string.\n   * @return {module:ol/geom/Geometry|undefined}\n   *     The geometry created.\n   * @private\n   */\n  parse_(wkt) {\n    const lexer = new Lexer(wkt);\n    const parser = new Parser(lexer);\n    return parser.parse();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeatureFromText(text, opt_options) {\n    const geom = this.readGeometryFromText(text, opt_options);\n    if (geom) {\n      const feature = new Feature();\n      feature.setGeometry(geom);\n      return feature;\n    }\n    return null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeaturesFromText(text, opt_options) {\n    let geometries = [];\n    const geometry = this.readGeometryFromText(text, opt_options);\n    if (this.splitCollection_ &&\n        geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n      geometries = (/** @type {module:ol/geom/GeometryCollection} */ (geometry))\n        .getGeometriesArray();\n    } else {\n      geometries = [geometry];\n    }\n    const features = [];\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const feature = new Feature();\n      feature.setGeometry(geometries[i]);\n      features.push(feature);\n    }\n    return features;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readGeometryFromText(text, opt_options) {\n    const geometry = this.parse_(text);\n    if (geometry) {\n      return (\n        /** @type {module:ol/geom/Geometry} */ (transformWithOptions(geometry, false, opt_options))\n      );\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  writeFeatureText(feature, opt_options) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, opt_options);\n    }\n    return '';\n  }\n\n  /**\n   * @inheritDoc\n   */\n  writeFeaturesText(features, opt_options) {\n    if (features.length == 1) {\n      return this.writeFeatureText(features[0], opt_options);\n    }\n    const geometries = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      geometries.push(features[i].getGeometry());\n    }\n    const collection = new GeometryCollection(geometries);\n    return this.writeGeometryText(collection, opt_options);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  writeGeometryText(geometry, opt_options) {\n    return encode(/** @type {module:ol/geom/Geometry} */ (\n      transformWithOptions(geometry, true, opt_options)));\n  }\n}\n\n\n/**\n * @param {module:ol/geom/Point} geom Point geometry.\n * @return {string} Coordinates part of Point as WKT.\n */\nfunction encodePointGeometry(geom) {\n  const coordinates = geom.getCoordinates();\n  if (coordinates.length === 0) {\n    return '';\n  }\n  return coordinates.join(' ');\n}\n\n\n/**\n * @param {module:ol/geom/MultiPoint} geom MultiPoint geometry.\n * @return {string} Coordinates part of MultiPoint as WKT.\n */\nfunction encodeMultiPointGeometry(geom) {\n  const array = [];\n  const components = geom.getPoints();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePointGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {module:ol/geom/GeometryCollection} geom GeometryCollection geometry.\n * @return {string} Coordinates part of GeometryCollection as WKT.\n */\nfunction encodeGeometryCollectionGeometry(geom) {\n  const array = [];\n  const geoms = geom.getGeometries();\n  for (let i = 0, ii = geoms.length; i < ii; ++i) {\n    array.push(encode(geoms[i]));\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {module:ol/geom/LineString|module:ol/geom/LinearRing} geom LineString geometry.\n * @return {string} Coordinates part of LineString as WKT.\n */\nfunction encodeLineStringGeometry(geom) {\n  const coordinates = geom.getCoordinates();\n  const array = [];\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    array.push(coordinates[i].join(' '));\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {module:ol/geom/MultiLineString} geom MultiLineString geometry.\n * @return {string} Coordinates part of MultiLineString as WKT.\n */\nfunction encodeMultiLineStringGeometry(geom) {\n  const array = [];\n  const components = geom.getLineStrings();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {module:ol/geom/Polygon} geom Polygon geometry.\n * @return {string} Coordinates part of Polygon as WKT.\n */\nfunction encodePolygonGeometry(geom) {\n  const array = [];\n  const rings = geom.getLinearRings();\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(rings[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {module:ol/geom/MultiPolygon} geom MultiPolygon geometry.\n * @return {string} Coordinates part of MultiPolygon as WKT.\n */\nfunction encodeMultiPolygonGeometry(geom) {\n  const array = [];\n  const components = geom.getPolygons();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePolygonGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {module:ol/geom/SimpleGeometry} geom SimpleGeometry geometry.\n * @return {string} Potential dimensional information for WKT type.\n */\nfunction encodeGeometryLayout(geom) {\n  const layout = geom.getLayout();\n  let dimInfo = '';\n  if (layout === GeometryLayout.XYZ || layout === GeometryLayout.XYZM) {\n    dimInfo += Z;\n  }\n  if (layout === GeometryLayout.XYM || layout === GeometryLayout.XYZM) {\n    dimInfo += M;\n  }\n  return dimInfo;\n}\n\n\n/**\n * @const\n * @type {Object.<string, function(module:ol/geom/Geometry): string>}\n */\nconst GeometryEncoder = {\n  'Point': encodePointGeometry,\n  'LineString': encodeLineStringGeometry,\n  'Polygon': encodePolygonGeometry,\n  'MultiPoint': encodeMultiPointGeometry,\n  'MultiLineString': encodeMultiLineStringGeometry,\n  'MultiPolygon': encodeMultiPolygonGeometry,\n  'GeometryCollection': encodeGeometryCollectionGeometry\n};\n\n\n/**\n * Encode a geometry as WKT.\n * @param {module:ol/geom/Geometry} geom The geometry to encode.\n * @return {string} WKT string for the geometry.\n */\nfunction encode(geom) {\n  let type = geom.getType();\n  const geometryEncoder = GeometryEncoder[type];\n  const enc = geometryEncoder(geom);\n  type = type.toUpperCase();\n  if (geom instanceof SimpleGeometry) {\n    const dimInfo = encodeGeometryLayout(geom);\n    if (dimInfo.length > 0) {\n      type += ' ' + dimInfo;\n    }\n  }\n  if (enc.length === 0) {\n    return type + ' ' + EMPTY;\n  }\n  return type + '(' + enc + ')';\n}\n\n\nexport default WKT;\n","/**\n * @module ol/format/XLink\n */\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} href.\n */\nexport function readHref(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n","/**\n * @module ol/format/XML\n */\nimport {isDocument, isNode, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nclass XML {\n  /**\n   * Read the source document.\n   *\n   * @param {Document|Node|string} source The XML source.\n   * @return {Object} An object representing the source.\n   * @api\n   */\n  read(source) {\n    if (isDocument(source)) {\n      return this.readFromDocument(/** @type {Document} */ (source));\n    } else if (isNode(source)) {\n      return this.readFromNode(/** @type {Node} */ (source));\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFromDocument(doc);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @abstract\n   * @param {Document} doc Document.\n   * @return {Object} Object\n   */\n  readFromDocument(doc) {}\n\n  /**\n   * @abstract\n   * @param {Node} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {}\n}\n\nexport default XML;\n","/**\n * @module ol/format/WMSCapabilities\n */\nimport {readHref} from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport {readDecimalString, readString, readNonNegativeInteger, readDecimal, readBooleanString, readNonNegativeIntegerString} from '../format/xsd.js';\nimport {makeArrayPusher, makeObjectPropertyPusher, makeObjectPropertySetter,\n  makeStructureNS, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array.<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/wms'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Service': makeObjectPropertySetter(readService),\n    'Capability': makeObjectPropertySetter(readCapability)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst CAPABILITY_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Request': makeObjectPropertySetter(readRequest),\n    'Exception': makeObjectPropertySetter(readException),\n    'Layer': makeObjectPropertySetter(readCapabilityLayer)\n  });\n\n\n/**\n * @classdesc\n * Format for reading WMS capabilities data\n *\n * @api\n */\nclass WMSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {string|undefined}\n     */\n    this.version = undefined;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(n);\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFromNode(node) {\n    this.version = node.getAttribute('version').trim();\n    const wmsCapabilityObject = pushParseAndPop({\n      'version': this.version\n    }, PARSERS, node, []);\n    return wmsCapabilityObject ? wmsCapabilityObject : null;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst SERVICE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\n    'OnlineResource': makeObjectPropertySetter(readHref),\n    'ContactInformation': makeObjectPropertySetter(readContactInformation),\n    'Fees': makeObjectPropertySetter(readString),\n    'AccessConstraints': makeObjectPropertySetter(readString),\n    'LayerLimit': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxHeight': makeObjectPropertySetter(readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst CONTACT_INFORMATION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ContactPersonPrimary': makeObjectPropertySetter(readContactPersonPrimary),\n    'ContactPosition': makeObjectPropertySetter(readString),\n    'ContactAddress': makeObjectPropertySetter(readContactAddress),\n    'ContactVoiceTelephone': makeObjectPropertySetter(readString),\n    'ContactFacsimileTelephone': makeObjectPropertySetter(readString),\n    'ContactElectronicMailAddress': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst CONTACT_PERSON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ContactPerson': makeObjectPropertySetter(readString),\n    'ContactOrganization': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst CONTACT_ADDRESS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'AddressType': makeObjectPropertySetter(readString),\n    'Address': makeObjectPropertySetter(readString),\n    'City': makeObjectPropertySetter(readString),\n    'StateOrProvince': makeObjectPropertySetter(readString),\n    'PostCode': makeObjectPropertySetter(readString),\n    'Country': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst EXCEPTION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Format': makeArrayPusher(readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\n    'CRS': makeObjectPropertyPusher(readString),\n    'EX_GeographicBoundingBox': makeObjectPropertySetter(readEXGeographicBoundingBox),\n    'BoundingBox': makeObjectPropertyPusher(readBoundingBox),\n    'Dimension': makeObjectPropertyPusher(readDimension),\n    'Attribution': makeObjectPropertySetter(readAttribution),\n    'AuthorityURL': makeObjectPropertyPusher(readAuthorityURL),\n    'Identifier': makeObjectPropertyPusher(readString),\n    'MetadataURL': makeObjectPropertyPusher(readMetadataURL),\n    'DataURL': makeObjectPropertyPusher(readFormatOnlineresource),\n    'FeatureListURL': makeObjectPropertyPusher(readFormatOnlineresource),\n    'Style': makeObjectPropertyPusher(readStyle),\n    'MinScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'MaxScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'Layer': makeObjectPropertyPusher(readLayer)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst ATTRIBUTION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'OnlineResource': makeObjectPropertySetter(readHref),\n    'LogoURL': makeObjectPropertySetter(readSizedFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS =\n    makeStructureNS(NAMESPACE_URIS, {\n      'westBoundLongitude': makeObjectPropertySetter(readDecimal),\n      'eastBoundLongitude': makeObjectPropertySetter(readDecimal),\n      'southBoundLatitude': makeObjectPropertySetter(readDecimal),\n      'northBoundLatitude': makeObjectPropertySetter(readDecimal)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst REQUEST_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'GetCapabilities': makeObjectPropertySetter(readOperationType),\n    'GetMap': makeObjectPropertySetter(readOperationType),\n    'GetFeatureInfo': makeObjectPropertySetter(readOperationType)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst OPERATIONTYPE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Format': makeObjectPropertyPusher(readString),\n    'DCPType': makeObjectPropertyPusher(readDCPType)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst DCPTYPE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'HTTP': makeObjectPropertySetter(readHTTP)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst HTTP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Get': makeObjectPropertySetter(readFormatOnlineresource),\n    'Post': makeObjectPropertySetter(readFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'LegendURL': makeObjectPropertyPusher(readSizedFormatOnlineresource),\n    'StyleSheetURL': makeObjectPropertySetter(readFormatOnlineresource),\n    'StyleURL': makeObjectPropertySetter(readFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst FORMAT_ONLINERESOURCE_PARSERS =\n    makeStructureNS(NAMESPACE_URIS, {\n      'Format': makeObjectPropertySetter(readString),\n      'OnlineResource': makeObjectPropertySetter(readHref)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst KEYWORDLIST_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Keyword': makeArrayPusher(readString)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readAttribution(node, objectStack) {\n  return pushParseAndPop({}, ATTRIBUTION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object} Bounding box object.\n */\nfunction readBoundingBox(node, objectStack) {\n  const extent = [\n    readDecimalString(node.getAttribute('minx')),\n    readDecimalString(node.getAttribute('miny')),\n    readDecimalString(node.getAttribute('maxx')),\n    readDecimalString(node.getAttribute('maxy'))\n  ];\n\n  const resolutions = [\n    readDecimalString(node.getAttribute('resx')),\n    readDecimalString(node.getAttribute('resy'))\n  ];\n\n  return {\n    'crs': node.getAttribute('CRS'),\n    'extent': extent,\n    'res': resolutions\n  };\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/extent~Extent|undefined} Bounding box object.\n */\nfunction readEXGeographicBoundingBox(node, objectStack) {\n  const geographicBoundingBox = pushParseAndPop(\n    {},\n    EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS,\n    node, objectStack);\n  if (!geographicBoundingBox) {\n    return undefined;\n  }\n  const westBoundLongitude = /** @type {number|undefined} */\n        (geographicBoundingBox['westBoundLongitude']);\n  const southBoundLatitude = /** @type {number|undefined} */\n        (geographicBoundingBox['southBoundLatitude']);\n  const eastBoundLongitude = /** @type {number|undefined} */\n        (geographicBoundingBox['eastBoundLongitude']);\n  const northBoundLatitude = /** @type {number|undefined} */\n        (geographicBoundingBox['northBoundLatitude']);\n  if (westBoundLongitude === undefined || southBoundLatitude === undefined ||\n        eastBoundLongitude === undefined || northBoundLatitude === undefined) {\n    return undefined;\n  }\n  return [\n    westBoundLongitude, southBoundLatitude,\n    eastBoundLongitude, northBoundLatitude\n  ];\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Capability object.\n */\nfunction readCapability(node, objectStack) {\n  return pushParseAndPop({}, CAPABILITY_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Service object.\n */\nfunction readService(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Contact information object.\n */\nfunction readContactInformation(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFORMATION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Contact person object.\n */\nfunction readContactPersonPrimary(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_PERSON_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Contact address object.\n */\nfunction readContactAddress(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_ADDRESS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Format array.\n */\nfunction readException(node, objectStack) {\n  return pushParseAndPop([], EXCEPTION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readCapabilityLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readLayer(node, objectStack) {\n  const parentLayerObject = /**  @type {!Object.<string,*>} */ (objectStack[objectStack.length - 1]);\n\n  const layerObject = pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n\n  if (!layerObject) {\n    return undefined;\n  }\n  let queryable = readBooleanString(node.getAttribute('queryable'));\n  if (queryable === undefined) {\n    queryable = parentLayerObject['queryable'];\n  }\n  layerObject['queryable'] = queryable !== undefined ? queryable : false;\n\n  let cascaded = readNonNegativeIntegerString(\n    node.getAttribute('cascaded'));\n  if (cascaded === undefined) {\n    cascaded = parentLayerObject['cascaded'];\n  }\n  layerObject['cascaded'] = cascaded;\n\n  let opaque = readBooleanString(node.getAttribute('opaque'));\n  if (opaque === undefined) {\n    opaque = parentLayerObject['opaque'];\n  }\n  layerObject['opaque'] = opaque !== undefined ? opaque : false;\n\n  let noSubsets = readBooleanString(node.getAttribute('noSubsets'));\n  if (noSubsets === undefined) {\n    noSubsets = parentLayerObject['noSubsets'];\n  }\n  layerObject['noSubsets'] = noSubsets !== undefined ? noSubsets : false;\n\n  let fixedWidth = readDecimalString(node.getAttribute('fixedWidth'));\n  if (!fixedWidth) {\n    fixedWidth = parentLayerObject['fixedWidth'];\n  }\n  layerObject['fixedWidth'] = fixedWidth;\n\n  let fixedHeight = readDecimalString(node.getAttribute('fixedHeight'));\n  if (!fixedHeight) {\n    fixedHeight = parentLayerObject['fixedHeight'];\n  }\n  layerObject['fixedHeight'] = fixedHeight;\n\n  // See 7.2.4.8\n  const addKeys = ['Style', 'CRS', 'AuthorityURL'];\n  addKeys.forEach(function(key) {\n    if (key in parentLayerObject) {\n      const childValue = layerObject[key] || [];\n      layerObject[key] = childValue.concat(parentLayerObject[key]);\n    }\n  });\n\n  const replaceKeys = ['EX_GeographicBoundingBox', 'BoundingBox', 'Dimension',\n    'Attribution', 'MinScaleDenominator', 'MaxScaleDenominator'];\n  replaceKeys.forEach(function(key) {\n    if (!(key in layerObject)) {\n      const parentValue = parentLayerObject[key];\n      layerObject[key] = parentValue;\n    }\n  });\n\n  return layerObject;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object} Dimension object.\n */\nfunction readDimension(node, objectStack) {\n  const dimensionObject = {\n    'name': node.getAttribute('name'),\n    'units': node.getAttribute('units'),\n    'unitSymbol': node.getAttribute('unitSymbol'),\n    'default': node.getAttribute('default'),\n    'multipleValues': readBooleanString(node.getAttribute('multipleValues')),\n    'nearestValue': readBooleanString(node.getAttribute('nearestValue')),\n    'current': readBooleanString(node.getAttribute('current')),\n    'values': readString(node)\n  };\n  return dimensionObject;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readFormatOnlineresource(node, objectStack) {\n  return pushParseAndPop({}, FORMAT_ONLINERESOURCE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Request object.\n */\nfunction readRequest(node, objectStack) {\n  return pushParseAndPop({}, REQUEST_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} DCP type object.\n */\nfunction readDCPType(node, objectStack) {\n  return pushParseAndPop({}, DCPTYPE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} HTTP object.\n */\nfunction readHTTP(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Operation type object.\n */\nfunction readOperationType(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONTYPE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readSizedFormatOnlineresource(node, objectStack) {\n  const formatOnlineresource = readFormatOnlineresource(node, objectStack);\n  if (formatOnlineresource) {\n    const size = [\n      readNonNegativeIntegerString(node.getAttribute('width')),\n      readNonNegativeIntegerString(node.getAttribute('height'))\n    ];\n    formatOnlineresource['size'] = size;\n    return formatOnlineresource;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Authority URL object.\n */\nfunction readAuthorityURL(node, objectStack) {\n  const authorityObject = readFormatOnlineresource(node, objectStack);\n  if (authorityObject) {\n    authorityObject['name'] = node.getAttribute('name');\n    return authorityObject;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Metadata URL object.\n */\nfunction readMetadataURL(node, objectStack) {\n  const metadataObject = readFormatOnlineresource(node, objectStack);\n  if (metadataObject) {\n    metadataObject['type'] = node.getAttribute('type');\n    return metadataObject;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  return pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Keyword list.\n */\nfunction readKeywordList(node, objectStack) {\n  return pushParseAndPop([], KEYWORDLIST_PARSERS, node, objectStack);\n}\n\n\nexport default WMSCapabilities;\n","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport {makeArrayPusher, makeStructureNS, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array.<string>} [layers] If set, only features of the given layers will be returned by the format when read.\n */\n\n\n/**\n * @const\n * @type {string}\n */\nconst featureIdentifier = '_feature';\n\n\n/**\n * @const\n * @type {string}\n */\nconst layerIdentifier = '_layer';\n\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link module:ol/format/GML2~GML2} to read features.\n *\n * @api\n */\nclass WMSGetFeatureInfo extends XMLFeature {\n\n  /**\n   * @param {module:ol/format/WMSGetFeatureInfo~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n    /**\n     * @private\n     * @type {module:ol/format/GML2}\n     */\n    this.gmlFormat_ = new GML2();\n\n\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n  }\n\n  /**\n   * @return {Array.<string>} layers\n   */\n  getLayers() {\n    return this.layers_;\n  }\n\n  /**\n   * @param {Array.<string>} layers Layers to parse.\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array.<*>} objectStack Object stack.\n   * @return {Array.<module:ol/Feature>} Features.\n   * @private\n   */\n  readFeatures_(node, objectStack) {\n    node.setAttribute('namespaceURI', this.featureNS_);\n    const localName = node.localName;\n    /** @type {Array.<module:ol/Feature>} */\n    let features = [];\n    if (node.childNodes.length === 0) {\n      return features;\n    }\n    if (localName == 'msGMLOutput') {\n      for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n        const layer = node.childNodes[i];\n        if (layer.nodeType !== Node.ELEMENT_NODE) {\n          continue;\n        }\n        const context = objectStack[0];\n\n        const toRemove = layerIdentifier;\n        const layerName = layer.localName.replace(toRemove, '');\n\n        if (this.layers_ && !includes(this.layers_, layerName)) {\n          continue;\n        }\n\n        const featureType = layerName +\n            featureIdentifier;\n\n        context['featureType'] = featureType;\n        context['featureNS'] = this.featureNS_;\n\n        const parsers = {};\n        parsers[featureType] = makeArrayPusher(\n          this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n        const parsersNS = makeStructureNS(\n          [context['featureNS'], null], parsers);\n        layer.setAttribute('namespaceURI', this.featureNS_);\n        const layerFeatures = pushParseAndPop(\n          [], parsersNS, layer, objectStack, this.gmlFormat_);\n        if (layerFeatures) {\n          extend(features, layerFeatures);\n        }\n      }\n    }\n    if (localName == 'FeatureCollection') {\n      const gmlFeatures = pushParseAndPop([],\n        this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n        [{}], this.gmlFormat_);\n      if (gmlFeatures) {\n        features = gmlFeatures;\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeaturesFromNode(node, opt_options) {\n    const options = {};\n    if (opt_options) {\n      assign(options, this.getReadOptions(node, opt_options));\n    }\n    return this.readFeatures_(node, [options]);\n  }\n\n  /**\n   * Not implemented.\n   * @inheritDoc\n   */\n  writeFeatureNode(feature, opt_options) {}\n\n  /**\n   * Not implemented.\n   * @inheritDoc\n   */\n  writeFeaturesNode(features, opt_options) {}\n\n  /**\n   * Not implemented.\n   * @inheritDoc\n   */\n  writeGeometryNode(geometry, opt_options) {}\n}\n\n\nexport default WMSGetFeatureInfo;\n","/**\n * @module ol/format/OWS\n */\nimport {readHref} from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport {readString} from '../format/xsd.js';\nimport {makeObjectPropertyPusher, makeObjectPropertySetter, makeStructureNS, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array.<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n    'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n    'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata)\n  });\n\n\nclass OWS extends XML {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(n);\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFromNode(node) {\n    const owsObject = pushParseAndPop({},\n      PARSERS, node, []);\n    return owsObject ? owsObject : null;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst ADDRESS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'DeliveryPoint': makeObjectPropertySetter(readString),\n    'City': makeObjectPropertySetter(readString),\n    'AdministrativeArea': makeObjectPropertySetter(readString),\n    'PostalCode': makeObjectPropertySetter(readString),\n    'Country': makeObjectPropertySetter(readString),\n    'ElectronicMailAddress': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst ALLOWED_VALUES_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Value': makeObjectPropertyPusher(readValue)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst CONSTRAINT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'AllowedValues': makeObjectPropertySetter(readAllowedValues)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst CONTACT_INFO_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Phone': makeObjectPropertySetter(readPhone),\n    'Address': makeObjectPropertySetter(readAddress)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst DCP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'HTTP': makeObjectPropertySetter(readHttp)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst HTTP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Get': makeObjectPropertyPusher(readGet),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst OPERATION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'DCP': makeObjectPropertySetter(readDcp)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst OPERATIONS_METADATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Operation': readOperation\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst PHONE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Voice': makeObjectPropertySetter(readString),\n    'Facsimile': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst REQUEST_METHOD_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Constraint': makeObjectPropertyPusher(readConstraint)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst SERVICE_CONTACT_PARSERS =\n    makeStructureNS(\n      NAMESPACE_URIS, {\n        'IndividualName': makeObjectPropertySetter(readString),\n        'PositionName': makeObjectPropertySetter(readString),\n        'ContactInfo': makeObjectPropertySetter(readContactInfo)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst SERVICE_IDENTIFICATION_PARSERS =\n    makeStructureNS(\n      NAMESPACE_URIS, {\n        'Abstract': makeObjectPropertySetter(readString),\n        'AccessConstraints': makeObjectPropertySetter(readString),\n        'Fees': makeObjectPropertySetter(readString),\n        'Title': makeObjectPropertySetter(readString),\n        'ServiceTypeVersion': makeObjectPropertySetter(readString),\n        'ServiceType': makeObjectPropertySetter(readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst SERVICE_PROVIDER_PARSERS =\n    makeStructureNS(\n      NAMESPACE_URIS, {\n        'ProviderName': makeObjectPropertySetter(readString),\n        'ProviderSite': makeObjectPropertySetter(readHref),\n        'ServiceContact': makeObjectPropertySetter(readServiceContact)\n      });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({},\n    ADDRESS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({},\n    ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({'name': name},\n    CONSTRAINT_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({},\n    CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({},\n    DCP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  const href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop({'href': href},\n    REQUEST_METHOD_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = pushParseAndPop({},\n    OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({},\n    OPERATIONS_METADATA_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({},\n    PHONE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop(\n    {}, SERVICE_IDENTIFICATION_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop(\n    {}, SERVICE_CONTACT_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop(\n    {}, SERVICE_PROVIDER_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\n\n\nexport default OWS;\n","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport {readHref} from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport {readString, readNonNegativeInteger, readDecimal} from '../format/xsd.js';\nimport {pushParseAndPop, makeStructureNS,\n  makeObjectPropertySetter, makeObjectPropertyPusher, makeArrayPusher} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array.<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @type {Array.<null|string>}\n */\nconst OWS_NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Contents': makeObjectPropertySetter(readContents)\n  });\n\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n  * @api\n */\nclass WMTSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {module:ol/format/OWS}\n     * @private\n     */\n    this.owsParser_ = new OWS();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(n);\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFromNode(node) {\n    const version = node.getAttribute('version').trim();\n    let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n    if (!WMTSCapabilityObject) {\n      return null;\n    }\n    WMTSCapabilityObject['version'] = version;\n    WMTSCapabilityObject = pushParseAndPop(WMTSCapabilityObject, PARSERS, node, []);\n    return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst CONTENTS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Layer': makeObjectPropertyPusher(readLayer),\n    'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readWgs84BoundingBox),\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst TMS_LINKS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TileMatrixSet': makeObjectPropertySetter(readString),\n    'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst TMS_LIMITS_LIST_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst TMS_LIMITS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TileMatrix': makeObjectPropertySetter(readString),\n    'MinTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n    'MinTileCol': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxTileCol': makeObjectPropertySetter(readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst DIMENSION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst WGS84_BBOX_READERS = makeStructureNS(\n  OWS_NAMESPACE_URIS, {\n    'LowerCorner': makeArrayPusher(readCoordinates),\n    'UpperCorner': makeArrayPusher(readCoordinates)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst TMS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst TM_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'TileHeight': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixHeight': makeObjectPropertySetter(readNonNegativeInteger)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  const style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nfunction readWgs84BoundingBox(node, objectStack) {\n  const coordinates = pushParseAndPop([], WGS84_BBOX_READERS, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = readHref(node);\n  return legend;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n  const coordinates = readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\n\n\nexport default WMTSCapabilities;\n","/**\n * @module ol/layer/Heatmap\n */\nimport {listen} from '../events.js';\nimport {getChangeEventType} from '../Object.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport Icon from '../style/Icon.js';\nimport Style from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array.<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {number} [shadow=250] Shadow size in pixels.\n * @property {string|function(module:ol/Feature):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {module:ol/layer/VectorRenderType|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {module:ol/source/Vector} [source] Source.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius'\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n\nclass Heatmap extends VectorLayer {\n  /**\n   * @classdesc\n   * Layer for rendering vector data as a heatmap.\n   * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n   * property on the layer object; for example, setting `title: 'My Title'` in the\n   * options means that `title` is observable, and has get/set accessors.\n   *\n   * @fires module:ol/render/Event~RenderEvent\n   * @param {module:ol/layer/Heatmap~Options=} opt_options Options.\n   * @api\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.shadow;\n    delete baseOptions.weight;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {Uint8ClampedArray}\n     */\n    this.gradient_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.shadow_ = options.shadow !== undefined ? options.shadow : 250;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.circleImage_ = undefined;\n\n    /**\n     * @private\n     * @type {Array.<Array.<module:ol/style/Style>>}\n     */\n    this.styleCache_ = null;\n\n    listen(this,\n      getChangeEventType(Property.GRADIENT),\n      this.handleGradientChanged_, this);\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    listen(this,\n      getChangeEventType(Property.BLUR),\n      this.handleStyleChanged_, this);\n    listen(this,\n      getChangeEventType(Property.RADIUS),\n      this.handleStyleChanged_, this);\n\n    this.handleStyleChanged_();\n\n    const weight = options.weight ? options.weight : 'weight';\n    let weightFunction;\n    if (typeof weight === 'string') {\n      weightFunction = function(feature) {\n        return feature.get(weight);\n      };\n    } else {\n      weightFunction = weight;\n    }\n\n    this.setStyle(function(feature, resolution) {\n      const weight = weightFunction(feature);\n      const opacity = weight !== undefined ? clamp(weight, 0, 1) : 1;\n      // cast to 8 bits\n      const index = (255 * opacity) | 0;\n      let style = this.styleCache_[index];\n      if (!style) {\n        style = [\n          new Style({\n            image: new Icon({\n              opacity: opacity,\n              src: this.circleImage_\n            })\n          })\n        ];\n        this.styleCache_[index] = style;\n      }\n      return style;\n    }.bind(this));\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n\n    listen(this, RenderEventType.RENDER, this.handleRender_, this);\n  }\n\n  /**\n   * @return {string} Data URL for a circle.\n   * @private\n   */\n  createCircle_() {\n    const radius = this.getRadius();\n    const blur = this.getBlur();\n    const halfSize = radius + blur + 1;\n    const size = 2 * halfSize;\n    const context = createCanvasContext2D(size, size);\n    context.shadowOffsetX = context.shadowOffsetY = this.shadow_;\n    context.shadowBlur = blur;\n    context.shadowColor = '#000';\n    context.beginPath();\n    const center = halfSize - this.shadow_;\n    context.arc(center, center, radius, 0, Math.PI * 2, true);\n    context.fill();\n    return context.canvas.toDataURL();\n  }\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  getBlur() {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  }\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array.<string>} Colors.\n   * @api\n   * @observable\n   */\n  getGradient() {\n    return /** @type {Array.<string>} */ (this.get(Property.GRADIENT));\n  }\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  getRadius() {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  }\n\n  /**\n   * @private\n   */\n  handleGradientChanged_() {\n    this.gradient_ = createGradient(this.getGradient());\n  }\n\n  /**\n   * @private\n   */\n  handleStyleChanged_() {\n    this.circleImage_ = this.createCircle_();\n    this.styleCache_ = new Array(256);\n    this.changed();\n  }\n\n  /**\n   * @param {module:ol/render/Event} event Post compose event\n   * @private\n   */\n  handleRender_(event) {\n    const context = event.context;\n    const canvas = context.canvas;\n    const image = context.getImageData(0, 0, canvas.width, canvas.height);\n    const view8 = image.data;\n    for (let i = 0, ii = view8.length; i < ii; i += 4) {\n      const alpha = view8[i + 3] * 4;\n      if (alpha) {\n        view8[i] = this.gradient_[alpha];\n        view8[i + 1] = this.gradient_[alpha + 1];\n        view8[i + 2] = this.gradient_[alpha + 2];\n      }\n    }\n    context.putImageData(image, 0, 0);\n  }\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  setBlur(blur) {\n    this.set(Property.BLUR, blur);\n  }\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array.<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  setGradient(colors) {\n    this.set(Property.GRADIENT, colors);\n  }\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  setRadius(radius) {\n    this.set(Property.RADIUS, radius);\n  }\n}\n\n\n/**\n * @param {Array.<string>} colors A list of colored.\n * @return {Uint8ClampedArray} An array.\n */\nfunction createGradient(colors) {\n  const width = 1;\n  const height = 256;\n  const context = createCanvasContext2D(width, height);\n\n  const gradient = context.createLinearGradient(0, 0, width, height);\n  const step = 1 / (colors.length - 1);\n  for (let i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.getImageData(0, 0, width, height).data;\n}\n\n\nexport default Heatmap;\n","/**\n * @module ol/layer/Image\n */\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {module:ol/source/Image} [source] Source for this layer.\n */\n\n\nclass ImageLayer extends Layer {\n\n  /**\n   * @classdesc\n   * Server-rendered images that are available for arbitrary extents and\n   * resolutions.\n   * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n   * property on the layer object; for example, setting `title: 'My Title'` in the\n   * options means that `title` is observable, and has get/set accessors.\n   *\n   * @fires module:ol/render/Event~RenderEvent\n   * @param {module:ol/layer/Image~Options=} opt_options Layer options.\n   * @api\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n    super(options);\n\n    /**\n     * The layer type.\n     * @protected\n     * @type {module:ol/LayerType}\n     */\n    this.type = LayerType.IMAGE;\n\n  }\n\n}\n\n\n/**\n * Return the associated {@link module:ol/source/Image source} of the image layer.\n * @function\n * @return {module:ol/source/Image} Source.\n * @api\n */\nImageLayer.prototype.getSource;\nexport default ImageLayer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n","/**\n * @module ol/layer/Tile\n */\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport TileProperty from '../layer/TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {module:ol/source/Tile} [source] Source for this layer.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n\nclass TileLayer extends Layer {\n  /**\n   * @classdesc\n   * For layer sources that provide pre-rendered, tiled images in grids that are\n   * organized by zoom levels for specific resolutions.\n   * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n   * property on the layer object; for example, setting `title: 'My Title'` in the\n   * options means that `title` is observable, and has get/set accessors.\n   *\n   * @param {module:ol/layer/Tile~Options=} opt_options Tile layer options.\n   * @api\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {module:ol/LayerType}\n    */\n    this.type = LayerType.TILE;\n\n  }\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  }\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\n\n/**\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\n * @function\n * @return {module:ol/source/Tile} Source.\n * @api\n */\nTileLayer.prototype.getSource;\n\n\nexport default TileLayer;\n","/**\n * @module ol/layer/VectorTile\n */\nimport LayerType from '../LayerType.js';\nimport {assert} from '../asserts.js';\nimport TileProperty from '../layer/TileProperty.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorTileRenderType from '../layer/VectorTileRenderType.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport const RenderType = {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {module:ol/layer/VectorTileRenderType|string} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but point symbols and texts\n *    are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance than the other options.\n *\n * When `declutter` is set to `true`, `'hybrid'` will be used instead of `'image'`.\n * @property {module:ol/source/VectorTile} [source] Source.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority. When set to `true`, a `renderMode` of `'image'` will be overridden with\n * `'hybrid'`.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created.\n * @property {(module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction)} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n\nclass VectorTileLayer extends VectorLayer {\n  /**\n   * @classdesc\n   * Layer for vector tile data that is rendered client-side.\n   * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n   * property on the layer object; for example, setting `title: 'My Title'` in the\n   * options means that `title` is observable, and has get/set accessors.\n   *\n   * @param {module:ol/layer/VectorTile~Options=} opt_options Options.\n   * @api\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    let renderMode = options.renderMode || VectorTileRenderType.HYBRID;\n    assert(renderMode == undefined ||\n       renderMode == VectorTileRenderType.IMAGE ||\n       renderMode == VectorTileRenderType.HYBRID ||\n       renderMode == VectorTileRenderType.VECTOR,\n    28); // `renderMode` must be `'image'`, `'hybrid'` or `'vector'`\n    if (options.declutter && renderMode == VectorTileRenderType.IMAGE) {\n      renderMode = VectorTileRenderType.HYBRID;\n    }\n    options.renderMode = renderMode;\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {module:ol/LayerType}\n    */\n    this.type = LayerType.VECTOR_TILE;\n\n  }\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  }\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\n\n/**\n * Return the associated {@link module:ol/source/VectorTile vectortilesource} of the layer.\n * @function\n * @return {module:ol/source/VectorTile} Source.\n * @api\n */\nVectorTileLayer.prototype.getSource;\nexport default VectorTileLayer;\n","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z`, `x`, and `y`. `z` is the zoom level.\n * @typedef {Array.<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Tile coordinate.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {module:ol/tilecoord~TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {module:ol/tilecoord~TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  const z = tileCoord[0];\n  const digits = new Array(z);\n  let mask = 1 << (z - 1);\n  let i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {!module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const extent = tileGrid.getExtent();\n  let tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, function() {\n            const y = -tileCoord[2] - 1;\n            return y.toString();\n          })\n          .replace(dashYRegEx, function() {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() + tileCoord[2];\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array.<string>} templates Templates.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array.<module:ol/Tile~UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array.<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {function()=} opt_errback Callback on error.\n * @param {string=} opt_callbackParam Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src = url + (url.indexOf('?') == -1 ? '?' : '&') +\n      (opt_callbackParam || 'callback') + '=' + key;\n  const timer = setTimeout(function() {\n    cleanup();\n    if (opt_errback) {\n      opt_errback();\n    }\n  }, 10000);\n  window[key] = function(data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.getElementsByTagName('head')[0].appendChild(script);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n\n  /**\n   * @param {number=} opt_highWaterMark High water mark.\n   */\n  constructor(opt_highWaterMark) {\n\n    super(opt_highWaterMark);\n\n  }\n\n  /**\n   * @param {!Object.<string, module:ol/TileRange>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      const zKey = tile.tileCoord[0].toString();\n      if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n        break;\n      } else {\n        this.pop().dispose();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(function(tile) {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.dispose();\n      }\n    }, this);\n  }\n}\n\n\nexport default TileCache;\n","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {module:ol/proj/Projection} sourceProj Source projection.\n * @param {module:ol/proj/Projection} targetProj Target projection.\n * @param {module:ol/coordinate~Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {module:ol/coordinate~Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  const dX = x - centroidX;\n  const dY = y - centroidY;\n  const distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {module:ol/extent~Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {module:ol/extent~Extent} targetExtent Target extent.\n * @param {module:ol/reproj/Triangulation} triangulation\n * Calculated triangulation.\n * @param {Array.<{extent: module:ol/extent~Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  const context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0], y0 = source[0][1];\n    let x1 = source[1][0], y1 = source[1][1];\n    let x2 = source[2][0], y2 = source[2][1];\n    const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    const centroidX = (u0 + u1 + u2) / 3;\n    const centroidY = (v0 + v1 + v2) / 3;\n    const p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    const p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    const p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array.<module:ol/coordinate~Coordinate>} source\n * @property {Array.<module:ol/coordinate~Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n\n  /**\n   * @param {module:ol/proj/Projection} sourceProj Source projection.\n   * @param {module:ol/proj/Projection} targetProj Target projection.\n   * @param {module:ol/extent~Extent} targetExtent Target extent to triangulate.\n   * @param {module:ol/extent~Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   */\n  constructor(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n\n    /**\n     * @type {module:ol/proj/Projection}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {module:ol/proj/Projection}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object.<string, module:ol/coordinate~Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {module:ol/coordinate~Coordinate} c A coordinate.\n     * @return {module:ol/coordinate~Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function(c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {module:ol/extent~Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array.<module:ol/reproj/Triangulation~Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n        !!maxSourceExtent &&\n        !!this.sourceProj_.getExtent() &&\n        (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n      getWidth(this.sourceProj_.getExtent()) : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n      getWidth(this.targetProj_.getExtent()) : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    this.addQuad_(\n      destinationTopLeft, destinationTopRight,\n      destinationBottomRight, destinationBottomLeft,\n      sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n      MAX_SUBDIVISION);\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function(triangle, i, arr) {\n        leftBound = Math.min(leftBound,\n          triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(function(triangle) {\n        if (Math.max(triangle.source[0][0], triangle.source[1][0],\n          triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n          const newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]]];\n          if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n          const maxX = Math.max(\n            newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n          if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      }.bind(this));\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {module:ol/coordinate~Coordinate} a The target a coordinate.\n   * @param {module:ol/coordinate~Coordinate} b The target b coordinate.\n   * @param {module:ol/coordinate~Coordinate} c The target c coordinate.\n   * @param {module:ol/coordinate~Coordinate} aSrc The source a coordinate.\n   * @param {module:ol/coordinate~Coordinate} bSrc The source b coordinate.\n   * @param {module:ol/coordinate~Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c]\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {module:ol/coordinate~Coordinate} a The target a coordinate.\n   * @param {module:ol/coordinate~Coordinate} b The target b coordinate.\n   * @param {module:ol/coordinate~Coordinate} c The target c coordinate.\n   * @param {module:ol/coordinate~Coordinate} d The target d coordinate.\n   * @param {module:ol/coordinate~Coordinate} aSrc The source a coordinate.\n   * @param {module:ol/coordinate~Coordinate} bSrc The source b coordinate.\n   * @param {module:ol/coordinate~Coordinate} cSrc The source c coordinate.\n   * @param {module:ol/coordinate~Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_ ?\n      getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX = this.sourceProj_.canWrapX() &&\n                 sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision |=\n            targetCoverageX > MAX_TRIANGLE_WIDTH;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision |=\n            sourceCoverageX > MAX_TRIANGLE_WIDTH;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n        // whole quad outside source projection extent -> ignore\n        return;\n      }\n    }\n\n    if (!needsSubdivision) {\n      if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n          !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n          !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n          !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          return;\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n              (modulo(aSrc[0], sourceWorldWidth) +\n               modulo(cSrc[0], sourceWorldWidth)) / 2;\n          dx = centerSrcEstimX -\n              modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n          this.addQuad_(\n            da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n          this.addQuad_(\n            ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n  }\n\n  /**\n   * Calculates extent of the 'source' coordinates from all the triangles.\n   *\n   * @return {module:ol/extent~Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function(triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array.<module:ol/reproj/Triangulation~Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from '../reproj/Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : module:ol/Tile} FunctionType\n */\n\n\nclass ReprojTile extends Tile {\n  /**\n   * @classdesc\n   * Class encapsulating single reprojected tile.\n   * See {@link module:ol/source/TileImage~TileImage}.\n   *\n   * @param {module:ol/proj/Projection} sourceProj Source projection.\n   * @param {module:ol/tilegrid/TileGrid} sourceTileGrid Source tile grid.\n   * @param {module:ol/proj/Projection} targetProj Target projection.\n   * @param {module:ol/tilegrid/TileGrid} targetTileGrid Target tile grid.\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Coordinate of the tile.\n   * @param {module:ol/tilecoord~TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {module:ol/reproj/Tile~FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n   * @param {boolean=} opt_renderEdges Render reprojection edges.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges\n  ) {\n    super(tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/tilegrid/TileGrid}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {module:ol/tilegrid/TileGrid}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {module:ol/tilecoord~TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array.<module:ol/Tile>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]);\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels = opt_errorThreshold !== undefined ?\n      opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!module:ol/reproj/Triangulation}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n        sourceExtent[3] = clamp(\n          sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent, this.sourceZ_);\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    if (this.state == TileState.LOADING) {\n      this.unlistenSources_();\n    }\n    Tile.prototype.disposeInternal.call(this);\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage()\n        });\n      }\n    }.bind(this));\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_);\n      this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n        sourceResolution, this.sourceTileGrid_.getExtent(),\n        targetResolution, targetExtent, this.triangulation_, sources,\n        this.gutter_, this.renderEdges_);\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(tile, EventType.CHANGE,\n            function(e) {\n              const state = tile.getState();\n              if (state == TileState.LOADED ||\n                    state == TileState.ERROR ||\n                    state == TileState.EMPTY) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            }, this);\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      }.bind(this));\n\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\n\nexport default ReprojTile;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @private\n * @type {module:ol/tilecoord~TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {module:ol/coordinate~Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array.<module:ol/coordinate~Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array.<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array.<module:ol/size~Size>} [sizes] Sizes.\n * @property {number|module:ol/size~Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array.<module:ol/size~Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n */\nclass TileGrid {\n\n  /**\n   * @param {module:ol/tilegrid/TileGrid~Options} options Tile grid options.\n   * @api\n   */\n  constructor(options) {\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array.<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(isSorted(this.resolutions_, function(a, b) {\n      return b - a;\n    }, true), 17); // `resolutions` must be sorted in descending order\n\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array.<module:ol/coordinate~Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length,\n        20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined &&\n        !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array.<number|module:ol/size~Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length,\n        19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|module:ol/size~Size}\n     */\n    this.tileSize_ = options.tileSize !== undefined ?\n      options.tileSize :\n      !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n\n    /**\n     * @private\n     * @type {Array.<module:ol/TileRange>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function(size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(module:ol/tilecoord~TileCoord)} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @param {function(this: T, number, module:ol/TileRange): boolean} callback Callback.\n   * @param {T=} opt_this The object to use as `this` in `callback`.\n   * @param {module:ol/TileRange=} opt_tileRange Temporary module:ol/TileRange object.\n   * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n   * @return {boolean} Callback succeeded.\n   * @template T\n   */\n  forEachTileCoordParentTileRange(tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n      }\n      if (callback.call(opt_this, z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {module:ol/extent~Extent} Extent.\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {module:ol/coordinate~Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array.<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @param {module:ol/TileRange=} opt_tileRange Temporary module:ol/TileRange object.\n   * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n   * @return {module:ol/TileRange} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n      }\n      const tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n    }\n    return null;\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {module:ol/TileRange} tileRange Tile range.\n   * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n   * @return {module:ol/extent~Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {module:ol/TileRange=} opt_tileRange Temporary tile range object.\n   * @return {module:ol/TileRange} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n    return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n  }\n\n  /**\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @return {module:ol/coordinate~Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @param {module:ol/extent~Extent=} opt_extent Temporary extent object.\n   * @return {module:ol/extent~Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Destination module:ol/tilecoord~TileCoord object.\n   * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Temporary module:ol/tilecoord~TileCoord object.\n   * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n    let tileCoordX = scale * xFromOrigin / tileSize[0];\n    let tileCoordY = scale * yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Temporary module:ol/tilecoord~TileCoord object.\n   * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n    let tileCoordX = xFromOrigin / tileSize[0];\n    let tileCoordY = yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Destination module:ol/tilecoord~TileCoord object.\n   * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0], coordinate[1], z, false, opt_tileCoord);\n  }\n\n  /**\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `module:ol/size~Size`, run the result through `module:ol/size~Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|module:ol/size~Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {module:ol/TileRange} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number=} opt_direction If 0, the nearest resolution will be used.\n   *     If 1, the nearest lower resolution will be used. If -1, the nearest\n   *     higher resolution will be used. Default is 0.\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!module:ol/extent~Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {assign} from './obj.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/tilegrid/TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {module:ol/extent/Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!module:ol/tilegrid/TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|module:ol/size~Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {module:ol/tilegrid~XYZOptions=} opt_options Tile grid options.\n * @return {!module:ol/tilegrid/TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const options = /** @type {module:ol/tilegrid/TileGrid~Options} */ ({});\n  assign(options, opt_options !== undefined ?\n    opt_options : /** @type {module:ol/tilegrid~XYZOptions} */ ({}));\n  if (options.extent === undefined) {\n    options.extent = getProjection('EPSG:3857').getExtent();\n  }\n  options.resolutions = resolutionsFromExtent(\n    options.extent, options.maxZoom, options.tileSize);\n  delete options.maxZoom;\n\n  return new TileGrid(options);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array.<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  const maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  const maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {module:ol/extent/Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!module:ol/tilegrid/TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\n\nimport {UNDEFINED} from '../functions.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from '../source/Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {number} [cacheSize]\n * @property {module:ol/extent~Extent} [extent]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {module:ol/proj~ProjectionLike} [projection]\n * @property {module:ol/source/State} [state]\n * @property {module:ol/tilegrid/TileGrid} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n */\n\n\nclass TileSource extends Source {\n  /**\n   * @classdesc\n   * Abstract base class; normally only used for creating subclasses and not\n   * instantiated in apps.\n   * Base class for sources providing images divided into a tile grid.\n   *\n   * @param {module:ol/source/Tile~Options=} options SourceTile source options.\n   * @api\n   */\n  constructor(options) {\n\n    super({\n      attributions: options.attributions,\n      extent: options.extent,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n      options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {module:ol/tilegrid/TileGrid}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    /**\n     * @protected\n     * @type {module:ol/TileCache}\n     */\n    this.tileCache = new TileCache(options.cacheSize);\n\n    /**\n     * @protected\n     * @type {module:ol/size~Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = '';\n\n    /**\n     * @protected\n     * @type {module:ol/Tile~Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {!Object.<string, module:ol/TileRange>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {module:ol/TileRange} tileRange Tile range.\n   * @param {function(module:ol/Tile):(boolean|undefined)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!module:ol/Tile} */ (tileCache.get(tileCoordKey));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = (callback(tile) !== false);\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutter(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {!module:ol/Tile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {}\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {module:ol/tilegrid/TileGrid} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {!module:ol/tilegrid/TileGrid} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {module:ol/TileCache} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (thisProj && !equivalent(thisProj, projection)) {\n      return null;\n    } else {\n      return this.tileCache;\n    }\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {module:ol/size~Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @param {module:ol/proj/Projection=} opt_projection Projection.\n   * @return {module:ol/tilecoord~TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection = opt_projection !== undefined ?\n      opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  refresh() {\n    this.tileCache.clear();\n    this.changed();\n  }\n}\n\n\n/**\n * Marks a tile coord as being used, without triggering a load.\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {module:ol/proj/Projection} projection Projection.\n */\nTileSource.prototype.useTile = UNDEFINED;\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n *\n * @param {string} type Type.\n * @param {module:ol/Tile} tile The tile.\n */\nexport class TileSourceEvent extends Event {\n\n  constructor(type, tile) {\n\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {module:ol/Tile}\n     * @api\n     */\n    this.tile = tile;\n\n  }\n\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n","/**\n * @module ol/source/UrlTile\n */\nimport {getUid} from '../util.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from '../source/Tile.js';\nimport TileEventType from '../source/TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {number} [cacheSize]\n * @property {module:ol/extent~Extent} [extent]\n * @property {boolean} [opaque]\n * @property {module:ol/proj~ProjectionLike} [projection]\n * @property {module:ol/source/State} [state]\n * @property {module:ol/tilegrid/TileGrid} [tileGrid]\n * @property {module:ol/Tile~LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array.<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n */\n\n\nclass UrlTile extends TileSource {\n  /**\n   * @classdesc\n   * Base class for sources providing tiles divided into a tile grid over http.\n   *\n   * @fires module:ol/source/TileEvent\n   * @param {module:ol/source/UrlTile~Options=} options Image tile options.\n   */\n  constructor(options) {\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      extent: options.extent,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition\n    });\n\n    /**\n     * @protected\n     * @type {module:ol/Tile~LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    /**\n     * @protected\n     * @type {module:ol/Tile~UrlFunction}\n     */\n    this.tileUrlFunction = this.fixedTileUrlFunction ?\n      this.fixedTileUrlFunction.bind(this) : nullTileUrlFunction;\n\n    /**\n     * @protected\n     * @type {!Array.<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n    if (options.tileUrlFunction) {\n      this.setTileUrlFunction(options.tileUrlFunction);\n    }\n\n    /**\n     * @private\n     * @type {!Object.<number, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {module:ol/Tile~LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {module:ol/Tile~UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array.<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {module:ol/events/Event} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {module:ol/Tile} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n        (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n          TileEventType.TILELOADEND : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {module:ol/Tile~UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} opt_key Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, opt_key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof opt_key !== 'undefined') {\n      this.setKey(opt_key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = this.urls = expandUrl(url);\n    this.setTileUrlFunction(this.fixedTileUrlFunction ?\n      this.fixedTileUrlFunction.bind(this) :\n      createFromTemplates(urls, this.tileGrid), url);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array.<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    this.setTileUrlFunction(this.fixedTileUrlFunction ?\n      this.fixedTileUrlFunction.bind(this) :\n      createFromTemplates(urls, this.tileGrid), key);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\n\n/**\n * @type {module:ol/Tile~UrlFunction|undefined}\n * @protected\n */\nUrlTile.prototype.fixedTileUrlFunction;\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from '../source/UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/source/State} [state] Source state.\n * @property {module:ol/ImageTile~TileClass} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array.<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\nclass TileImage extends UrlTile {\n  /**\n   * @classdesc\n   * Base class for sources providing images divided into a tile grid.\n   *\n   * @fires module:ol/source/Tile~TileSourceEvent\n   * @param {module:ol/source/TileImage~Options=} options Image tile options.\n   * @api\n   */\n  constructor(options) {\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      extent: options.extent,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction ?\n        options.tileLoadFunction : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {function(new: module:ol/ImageTile, module:ol/tilecoord~TileCoord, module:ol/TileState, string,\n     *        ?string, module:ol/Tile~LoadFunction, module:ol/Tile~Options=)}\n     */\n    this.tileClass = options.tileClass !== undefined ?\n      options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object.<string, module:ol/TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object.<string, module:ol/tilegrid/TileGrid>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.canExpireCache.call(this);\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      UrlTile.prototype.expireCache.call(this, projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getGutter(projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return 0;\n    } else {\n      return this.getGutterInternal();\n    }\n  }\n\n  /**\n   * @protected\n   * @return {number} Gutter.\n   */\n  getGutterInternal() {\n    return 0;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getOpaque(projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return false;\n    } else {\n      return UrlTile.prototype.getOpaque.call(this, projection);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileGridForProjection.call(this, projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection).toString();\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n      }\n      return (\n        /** @type {!module:ol/tilegrid/TileGrid} */ (this.tileGridForProjection[projKey])\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\n    }\n    const thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection).toString();\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!module:ol/Tile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord, projection);\n    const tileUrl = urlTileCoord ?\n      this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions);\n    tile.key = key;\n    listen(tile, EventType.CHANGE,\n      this.handleTileChange, this);\n    return tile;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = /** @type {!module:ol/proj/Projection} */ (this.getProjection());\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n      return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = /** @type {!module:ol/Tile} */ (cache.get(tileCoordKey));\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord =\n            this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        const newTile = new ReprojTile(\n          sourceProjection, sourceTileGrid,\n          projection, targetTileGrid,\n          tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n          this.getGutterInternal(),\n          function(z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this), this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_);\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!module:ol/proj/Projection} projection Projection.\n   * @return {!module:ol/Tile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (!ENABLE_RASTER_REPROJECTION ||\n        this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {module:ol/proj~ProjectionLike} projection Projection.\n   * @param {module:ol/tilegrid/TileGrid} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj).toString();\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  imageTile.getImage().src = src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/BingMaps\n */\n\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from '../source/State.js';\nimport TileImage from '../source/TileImage.js';\nimport {createOrUpdate, quadKey} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nconst TOS_ATTRIBUTION = '<a class=\"ol-attribution-bing-tos\" ' +\n      'href=\"https://www.microsoft.com/maps/product/terms.html\">' +\n      'Terms of Use</a>';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=2048] Cache size.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at http://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\nclass BingMaps extends TileImage {\n  /**\n   * @classdesc\n   * Layer source for Bing Maps tile data.\n   *\n   * @param {module:ol/source/BingMaps~Options=} options Bing Maps options.\n   * @api\n   */\n  constructor(options) {\n\n    const hidpi = options.hidpi !== undefined ? options.hidpi : false;\n\n    super({\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      opaque: true,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: SourceState.LOADING,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: hidpi ? 2 : 1,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = hidpi;\n\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.apiKey_ = options.key;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.imagerySet_ = options.imagerySet;\n\n    const url = 'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n        this.imagerySet_ +\n        '?uriScheme=https&include=ImageryProviders&key=' + this.apiKey_ +\n        '&c=' + this.culture_;\n\n    requestJSONP(url, this.handleImageryMetadataResponse.bind(this), undefined,\n      'jsonp');\n\n  }\n\n  /**\n   * Get the api key used for this source.\n   *\n   * @return {string} The api key.\n   * @api\n   */\n  getApiKey() {\n    return this.apiKey_;\n  }\n\n  /**\n   * Get the imagery set associated with this source.\n   *\n   * @return {string} The imagery set.\n   * @api\n   */\n  getImagerySet() {\n    return this.imagerySet_;\n  }\n\n  /**\n   * @param {BingMapsImageryMetadataResponse} response Response.\n   */\n  handleImageryMetadataResponse(response) {\n    if (response.statusCode != 200 ||\n        response.statusDescription != 'OK' ||\n        response.authenticationResultCode != 'ValidCredentials' ||\n        response.resourceSets.length != 1 ||\n        response.resourceSets[0].resources.length != 1) {\n      this.setState(SourceState.ERROR);\n      return;\n    }\n\n    const resource = response.resourceSets[0].resources[0];\n    const maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n\n    const sourceProjection = this.getProjection();\n    const extent = extentFromProjection(sourceProjection);\n    const tileSize = resource.imageWidth == resource.imageHeight ?\n      resource.imageWidth : [resource.imageWidth, resource.imageHeight];\n    const tileGrid = createXYZ({\n      extent: extent,\n      minZoom: resource.zoomMin,\n      maxZoom: maxZoom,\n      tileSize: tileSize / (this.hidpi_ ? 2 : 1)\n    });\n    this.tileGrid = tileGrid;\n\n    const culture = this.culture_;\n    const hidpi = this.hidpi_;\n    this.tileUrlFunction = createFromTileUrlFunctions(\n      resource.imageUrlSubdomains.map(function(subdomain) {\n        const quadKeyTileCoord = [0, 0, 0];\n        const imageUrl = resource.imageUrl\n          .replace('{subdomain}', subdomain)\n          .replace('{culture}', culture);\n        return (\n          /**\n           * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n           * @param {number} pixelRatio Pixel ratio.\n           * @param {module:ol/proj/Projection} projection Projection.\n           * @return {string|undefined} Tile URL.\n           */\n          function(tileCoord, pixelRatio, projection) {\n            if (!tileCoord) {\n              return undefined;\n            } else {\n              createOrUpdate(tileCoord[0], tileCoord[1], -tileCoord[2] - 1, quadKeyTileCoord);\n              let url = imageUrl;\n              if (hidpi) {\n                url += '&dpi=d1&device=mobile';\n              }\n              return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\n            }\n          }\n        );\n      }));\n\n    if (resource.imageryProviders) {\n      const transform = getTransformFromProjections(\n        getProjection('EPSG:4326'), this.getProjection());\n\n      this.setAttributions(function(frameState) {\n        const attributions = [];\n        const zoom = frameState.viewState.zoom;\n        resource.imageryProviders.map(function(imageryProvider) {\n          let intersecting = false;\n          const coverageAreas = imageryProvider.coverageAreas;\n          for (let i = 0, ii = coverageAreas.length; i < ii; ++i) {\n            const coverageArea = coverageAreas[i];\n            if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\n              const bbox = coverageArea.bbox;\n              const epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n              const extent = applyTransform(epsg4326Extent, transform);\n              if (intersects(extent, frameState.extent)) {\n                intersecting = true;\n                break;\n              }\n            }\n          }\n          if (intersecting) {\n            attributions.push(imageryProvider.attribution);\n          }\n        });\n\n        attributions.push(TOS_ATTRIBUTION);\n        return attributions;\n      });\n    }\n\n    this.setState(SourceState.READY);\n  }\n}\n\nexport default BingMaps;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from '../source/TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|module:ol/size~Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array.<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\nclass XYZ extends TileImage {\n\n  /**\n   * @classdesc\n   * Layer source for tile data with URLs in a set XYZ format that are\n   * defined in a URL template. By default, this follows the widely-used\n   * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n   * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n   * using the `{-y}` placeholder in the URL template, so long as the\n   * source does not have a custom tile grid. In this case,\n   * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n   * such as:\n   *\n   *  tileUrlFunction: function(coordinate) {\n   *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n   *        coordinate[1] + '/' + coordinate[2] + '.png';\n   *    }\n   *\n   *\n   * @param {module:ol/source/XYZ~Options=} opt_options XYZ options.\n   * @api\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const projection = options.projection !== undefined ?\n      options.projection : 'EPSG:3857';\n\n    const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n      createXYZ({\n        extent: extentFromProjection(projection),\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize\n      });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n  }\n\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/CartoDB\n */\n\nimport {assign} from '../obj.js';\nimport SourceState from '../source/State.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [maxZoom=18] Max zoom.\n * @property {number} [minZoom] Minimum zoom.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {Object} [config] If using anonymous maps, the CartoDB config to use. See\n * http://docs.cartodb.com/cartodb-platform/maps-api/anonymous-maps/\n * for more detail.\n * If using named maps, a key-value lookup with the template parameters.\n * See http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/\n * for more detail.\n * @property {string} [map] If using named maps, this will be the name of the template to load.\n * See http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/\n * for more detail.\n * @property {string} account If using named maps, this will be the name of the template to load.\n */\n\n\nclass CartoDB extends XYZ {\n  /**\n   * @classdesc\n   * Layer source for the CartoDB Maps API.\n   *\n   * @param {module:ol/source/CartoDB~Options=} options CartoDB options.\n   * @api\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 18,\n      minZoom: options.minZoom,\n      projection: options.projection,\n      state: SourceState.LOADING,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.account_ = options.account;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.mapId_ = options.map || '';\n\n    /**\n     * @type {!Object}\n     * @private\n     */\n    this.config_ = options.config || {};\n\n    /**\n     * @type {!Object.<string, CartoDBLayerInfo>}\n     * @private\n     */\n    this.templateCache_ = {};\n\n    this.initializeMap_();\n  }\n\n  /**\n   * Returns the current config.\n   * @return {!Object} The current configuration.\n   * @api\n   */\n  getConfig() {\n    return this.config_;\n  }\n\n  /**\n   * Updates the carto db config.\n   * @param {Object} config a key-value lookup. Values will replace current values\n   *     in the config.\n   * @api\n   */\n  updateConfig(config) {\n    assign(this.config_, config);\n    this.initializeMap_();\n  }\n\n  /**\n   * Sets the CartoDB config\n   * @param {Object} config In the case of anonymous maps, a CartoDB configuration\n   *     object.\n   * If using named maps, a key-value lookup with the template parameters.\n   * @api\n   */\n  setConfig(config) {\n    this.config_ = config || {};\n    this.initializeMap_();\n  }\n\n  /**\n   * Issue a request to initialize the CartoDB map.\n   * @private\n   */\n  initializeMap_() {\n    const paramHash = JSON.stringify(this.config_);\n    if (this.templateCache_[paramHash]) {\n      this.applyTemplate_(this.templateCache_[paramHash]);\n      return;\n    }\n    let mapUrl = 'https://' + this.account_ + '.carto.com/api/v1/map';\n\n    if (this.mapId_) {\n      mapUrl += '/named/' + this.mapId_;\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener('load', this.handleInitResponse_.bind(this, paramHash));\n    client.addEventListener('error', this.handleInitError_.bind(this));\n    client.open('POST', mapUrl);\n    client.setRequestHeader('Content-type', 'application/json');\n    client.send(JSON.stringify(this.config_));\n  }\n\n  /**\n   * Handle map initialization response.\n   * @param {string} paramHash a hash representing the parameter set that was used\n   *     for the request\n   * @param {Event} event Event.\n   * @private\n   */\n  handleInitResponse_(paramHash, event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      let response;\n      try {\n        response = /** @type {CartoDBLayerInfo} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.setState(SourceState.ERROR);\n        return;\n      }\n      this.applyTemplate_(response);\n      this.templateCache_[paramHash] = response;\n      this.setState(SourceState.READY);\n    } else {\n      this.setState(SourceState.ERROR);\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event Event.\n   */\n  handleInitError_(event) {\n    this.setState(SourceState.ERROR);\n  }\n\n  /**\n   * Apply the new tile urls returned by carto db\n   * @param {CartoDBLayerInfo} data Result of carto db call.\n   * @private\n   */\n  applyTemplate_(data) {\n    const tilesUrl = 'https://' + data.cdn_url.https + '/' + this.account_ +\n        '/api/v1/map/' + data.layergroupid + '/{z}/{x}/{y}.png';\n    this.setUrl(tilesUrl);\n  }\n}\n\n\nexport default CartoDB;\n","/**\n * @module ol/source/Cluster\n */\n\nimport {getUid} from '../util.js';\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {scale as scaleCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {buffer, createEmpty, createOrUpdateFromCoordinate} from '../extent.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from '../source/Vector.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Minimum distance in pixels between clusters.\n * @property {module:ol/extent~Extent} [extent] Extent.\n * @property {function(module:ol/Feature):module:ol/geom/Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underyling source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {module:ol/source/Vector} source Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\nclass Cluster extends VectorSource {\n  /**\n   * @classdesc\n   * Layer source to cluster vector data. Works out of the box with point\n   * geometries. For other geometry types, or if not all geometries should be\n   * considered for clustering, a custom `geometryFunction` can be defined.\n   *\n   * @param {module:ol/source/Cluster~Options=} options Cluster options.\n   * @api\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      extent: options.extent,\n      projection: options.projection,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.resolution = undefined;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.distance = options.distance !== undefined ? options.distance : 20;\n\n    /**\n     * @type {Array.<module:ol/Feature>}\n     * @protected\n     */\n    this.features = [];\n\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     * @return {module:ol/geom/Point} Cluster calculation point.\n     * @protected\n     */\n    this.geometryFunction = options.geometryFunction || function(feature) {\n      const geometry = /** @type {module:ol/geom/Point} */ (feature.getGeometry());\n      assert(geometry instanceof Point,\n        10); // The default `geometryFunction` can only handle `module:ol/geom/Point~Point` geometries\n      return geometry;\n    };\n\n    /**\n     * @type {module:ol/source/Vector}\n     * @protected\n     */\n    this.source = options.source;\n\n    listen(this.source, EventType.CHANGE, this.refresh, this);\n  }\n\n  /**\n   * Get the distance in pixels between clusters.\n   * @return {number} Distance.\n   * @api\n   */\n  getDistance() {\n    return this.distance;\n  }\n\n  /**\n   * Get a reference to the wrapped source.\n   * @return {module:ol/source/Vector} Source.\n   * @api\n   */\n  getSource() {\n    return this.source;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  loadFeatures(extent, resolution, projection) {\n    this.source.loadFeatures(extent, resolution, projection);\n    if (resolution !== this.resolution) {\n      this.clear();\n      this.resolution = resolution;\n      this.cluster();\n      this.addFeatures(this.features);\n    }\n  }\n\n  /**\n   * Set the distance in pixels between clusters.\n   * @param {number} distance The distance in pixels.\n   * @api\n   */\n  setDistance(distance) {\n    this.distance = distance;\n    this.refresh();\n  }\n\n  /**\n   * handle the source changing\n   * @override\n   */\n  refresh() {\n    this.clear();\n    this.cluster();\n    this.addFeatures(this.features);\n    VectorSource.prototype.refresh.call(this);\n  }\n\n  /**\n   * @protected\n   */\n  cluster() {\n    if (this.resolution === undefined) {\n      return;\n    }\n    this.features.length = 0;\n    const extent = createEmpty();\n    const mapDistance = this.distance * this.resolution;\n    const features = this.source.getFeatures();\n\n    /**\n     * @type {!Object.<string, boolean>}\n     */\n    const clustered = {};\n\n    for (let i = 0, ii = features.length; i < ii; i++) {\n      const feature = features[i];\n      if (!(getUid(feature).toString() in clustered)) {\n        const geometry = this.geometryFunction(feature);\n        if (geometry) {\n          const coordinates = geometry.getCoordinates();\n          createOrUpdateFromCoordinate(coordinates, extent);\n          buffer(extent, mapDistance, extent);\n\n          let neighbors = this.source.getFeaturesInExtent(extent);\n          neighbors = neighbors.filter(function(neighbor) {\n            const uid = getUid(neighbor).toString();\n            if (!(uid in clustered)) {\n              clustered[uid] = true;\n              return true;\n            } else {\n              return false;\n            }\n          });\n          this.features.push(this.createCluster(neighbors));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array.<module:ol/Feature>} features Features\n   * @return {module:ol/Feature} The cluster feature.\n   * @protected\n   */\n  createCluster(features) {\n    const centroid = [0, 0];\n    for (let i = features.length - 1; i >= 0; --i) {\n      const geometry = this.geometryFunction(features[i]);\n      if (geometry) {\n        addCoordinate(centroid, geometry.getCoordinates());\n      } else {\n        features.splice(i, 1);\n      }\n    }\n    scaleCoordinate(centroid, 1 / features.length);\n\n    const cluster = new Feature(new Point(centroid));\n    cluster.set('features', features);\n    return cluster;\n  }\n}\n\n\nexport default Cluster;\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getCenter, getIntersection, getHeight, getWidth} from '../extent.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from '../reproj/Triangulation.js';\n\n\n/**\n * @typedef {function(module:ol/extent~Extent, number, number) : module:ol/ImageBase} FunctionType\n */\n\n\nclass ReprojImage extends ImageBase {\n  /**\n   * @classdesc\n   * Class encapsulating single reprojected image.\n   * See {@link module:ol/source/Image~ImageSource}.\n   *\n   * @param {module:ol/proj/Projection} sourceProj Source projection (of the data).\n   * @param {module:ol/proj/Projection} targetProj Target projection.\n   * @param {module:ol/extent~Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/reproj/Image~FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   */\n  constructor(sourceProj, targetProj, targetExtent, targetResolution, pixelRatio, getImageFunction) {\n    const maxSourceExtent = sourceProj.getExtent();\n    const maxTargetExtent = targetProj.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    let state = ImageState.LOADED;\n    if (sourceImage) {\n      state = ImageState.IDLE;\n    }\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {module:ol/proj/Projection}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!module:ol/reproj/Triangulation}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {module:ol/ImageBase}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    ImageBase.prototype.disposeInternal.call(this);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {module:ol/proj/Projection} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n\n      this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_,\n        this.sourceImage_.getResolution(), this.maxSourceExtent_,\n        this.targetResolution_, this.targetExtent_, this.triangulation_, [{\n          extent: this.sourceImage_.getExtent(),\n          image: this.sourceImage_.getImage()\n        }], 0);\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(this.sourceImage_,\n          EventType.CHANGE, function(e) {\n            const sourceState = this.sourceImage_.getState();\n            if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          }, this);\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(/** @type {!module:ol/events~EventsKey} */ (this.sourceListenerKey_));\n    this.sourceListenerKey_ = null;\n  }\n}\n\n\nexport default ReprojImage;\n","/**\n * @module ol/source/Image\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\n\nimport ImageState from '../ImageState.js';\nimport {linearFindNearest} from '../array.js';\nimport Event from '../events/Event.js';\nimport {equals} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from '../source/Source.js';\n\n\n/**\n * @enum {string}\n */\nconst ImageSourceEventType = {\n\n  /**\n   * Triggered when an image starts loading.\n   * @event ol/source/Image~ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event ol/source/Image~ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event ol/source/Image~ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror'\n\n};\n\n\nclass ImageSourceEvent extends Event {\n\n  /**\n   * @classdesc\n   * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n   * type.\n   *\n   * @param {string} type Type.\n   * @param {module:ol/Image} image The image.\n   */\n  constructor(type, image) {\n\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {module:ol/Image}\n     * @api\n     */\n    this.image = image;\n\n  }\n\n}\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {module:ol/extent~Extent} [extent]\n * @property {module:ol/proj~ProjectionLike} projection\n * @property {Array.<number>} [resolutions]\n * @property {module:ol/source/State} [state]\n */\n\n\nclass ImageSource extends Source {\n  /**\n   * @classdesc\n   * Abstract base class; normally only used for creating subclasses and not\n   * instantiated in apps.\n   * Base class for sources providing a single image.\n   *\n   * @param {module:ol/source/Image~Options} options Single image source options.\n   * @api\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      extent: options.extent,\n      projection: options.projection,\n      state: options.state\n    });\n\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this.resolutions_ = options.resolutions !== undefined ?\n      options.resolutions : null;\n\n\n    /**\n     * @private\n     * @type {module:ol/reproj/Image}\n     */\n    this.reprojectedImage_ = null;\n\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n  }\n\n  /**\n   * @return {Array.<number>} Resolutions.\n   * @override\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    if (this.resolutions_) {\n      const idx = linearFindNearest(this.resolutions_, resolution, 0);\n      resolution = this.resolutions_[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {module:ol/ImageBase} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection ||\n        !projection ||\n        equivalent(sourceProjection, projection)) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    } else {\n      if (this.reprojectedImage_) {\n        if (this.reprojectedRevision_ == this.getRevision() &&\n            equivalent(\n              this.reprojectedImage_.getProjection(), projection) &&\n            this.reprojectedImage_.getResolution() == resolution &&\n            equals(this.reprojectedImage_.getExtent(), extent)) {\n          return this.reprojectedImage_;\n        }\n        this.reprojectedImage_.dispose();\n        this.reprojectedImage_ = null;\n      }\n\n      this.reprojectedImage_ = new ReprojImage(\n        sourceProjection, projection, extent, resolution, pixelRatio,\n        function(extent, resolution, pixelRatio) {\n          return this.getImageInternal(extent, resolution,\n            pixelRatio, sourceProjection);\n        }.bind(this));\n      this.reprojectedRevision_ = this.getRevision();\n\n      return this.reprojectedImage_;\n    }\n  }\n\n  /**\n   * @abstract\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {module:ol/ImageBase} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {}\n\n  /**\n   * Handle image change events.\n   * @param {module:ol/events/Event} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {module:ol/Image} */ (event.target);\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART,\n            image));\n        break;\n      case ImageState.LOADED:\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND,\n            image));\n        break;\n      case ImageState.ERROR:\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR,\n            image));\n        break;\n      default:\n        // pass\n    }\n  }\n}\n\n\n/**\n * Default image load function for image sources that use module:ol/Image~Image image\n * instances.\n * @param {module:ol/Image} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  image.getImage().src = src;\n}\n\n\nexport default ImageSource;\n","/**\n * @module ol/uri\n */\n\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function(k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n}\n","/**\n * @module ol/source/ImageArcGISRest\n */\n\nimport ImageWrapper from '../Image.js';\nimport {assert} from '../asserts.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport ImageSource, {defaultImageLoadFunction} from '../source/Image.js';\nimport {appendParams} from '../uri.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {module:ol/Image~LoadFunction} [imageLoadFunction] Optional function to load an image given\n * a URL.\n * @property {Object.<string,*>} params ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/\n * for further reference.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {Array.<number>} [resolutions] Resolutions. If specified, requests will be made for\n * these resolutions only.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n */\n\n\nclass ImageArcGISRest extends ImageSource {\n  /**\n   * @classdesc\n   * Source for data from ArcGIS Rest services providing single, untiled images.\n   * Useful when underlying map service has labels.\n   *\n   * If underlying map service is not using labels,\n   * take advantage of ol image caching and use\n   * {@link module:ol/source/TileArcGISRest} data source.\n   *\n   * @fires ol/source/Image~ImageSourceEvent\n   * @param {module:ol/source/ImageArcGISRest~Options=} opt_options Image ArcGIS Rest Options.\n   * @api\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      resolutions: options.resolutions\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {module:ol/Image~LoadFunction}\n     */\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n      options.imageLoadFunction : defaultImageLoadFunction;\n\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {module:ol/Image}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.imageSize_ = [0, 0];\n\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n    pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n    const image = this.image_;\n    if (image &&\n        this.renderedRevision_ == this.getRevision() &&\n        image.getResolution() == resolution &&\n        image.getPixelRatio() == pixelRatio &&\n        containsExtent(image.getExtent(), extent)) {\n      return image;\n    }\n\n    const params = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true\n    };\n    assign(params, this.params_);\n\n    extent = extent.slice();\n    const centerX = (extent[0] + extent[2]) / 2;\n    const centerY = (extent[1] + extent[3]) / 2;\n    if (this.ratio_ != 1) {\n      const halfWidth = this.ratio_ * getWidth(extent) / 2;\n      const halfHeight = this.ratio_ * getHeight(extent) / 2;\n      extent[0] = centerX - halfWidth;\n      extent[1] = centerY - halfHeight;\n      extent[2] = centerX + halfWidth;\n      extent[3] = centerY + halfHeight;\n    }\n\n    const imageResolution = resolution / pixelRatio;\n\n    // Compute an integer width and height.\n    const width = Math.ceil(getWidth(extent) / imageResolution);\n    const height = Math.ceil(getHeight(extent) / imageResolution);\n\n    // Modify the extent to match the integer width and height.\n    extent[0] = centerX - imageResolution * width / 2;\n    extent[2] = centerX + imageResolution * width / 2;\n    extent[1] = centerY - imageResolution * height / 2;\n    extent[3] = centerY + imageResolution * height / 2;\n\n    this.imageSize_[0] = width;\n    this.imageSize_[1] = height;\n\n    const url = this.getRequestUrl_(extent, this.imageSize_, pixelRatio,\n      projection, params);\n\n    this.image_ = new ImageWrapper(extent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n    this.renderedRevision_ = this.getRevision();\n\n    listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n    return this.image_;\n\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {module:ol/Image~LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  getRequestUrl_(extent, size, pixelRatio, projection, params) {\n    // ArcGIS Server only wants the numeric portion of the projection ID.\n    const srid = projection.getCode().split(':').pop();\n\n    params['SIZE'] = size[0] + ',' + size[1];\n    params['BBOX'] = extent.join(',');\n    params['BBOXSR'] = srid;\n    params['IMAGESR'] = srid;\n    params['DPI'] = Math.round(90 * pixelRatio);\n\n    const url = this.url_;\n\n    const modifiedUrl = url\n      .replace(/MapServer\\/?$/, 'MapServer/export')\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n    if (modifiedUrl == url) {\n      assert(false, 50); // `options.featureTypes` should be an Array\n    }\n    return appendParams(modifiedUrl, params);\n  }\n\n  /**\n   * Return the URL used for this ArcGIS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {module:ol/Image~LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    assign(this.params_, params);\n    this.image_ = null;\n    this.changed();\n  }\n}\n\n\nexport default ImageArcGISRest;\n","/**\n * @module ol/source/ImageMapGuide\n */\n\nimport ImageWrapper from '../Image.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getHeight, getWidth, scaleFromCenter} from '../extent.js';\nimport {assign} from '../obj.js';\nimport ImageSource, {defaultImageLoadFunction} from '../source/Image.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [url] The mapagent url.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [displayDpi=96] The display resolution.\n * @property {number} [metersPerUnit=1] The meters-per-unit value.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {boolean} [useOverlay] If `true`, will use `GETDYNAMICMAPOVERLAYIMAGE`.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [ratio=1] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array.<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {module:ol/Image~LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object} [params] Additional parameters.\n */\n\n\nclass ImageMapGuide extends ImageSource {\n  /**\n   * @classdesc\n   * Source for images from Mapguide servers\n   *\n   * @fires ol/source/Image~ImageSourceEvent\n   * @param {module:ol/source/ImageMapGuide~Options=} options ImageMapGuide options.\n   * @api\n   */\n  constructor(options) {\n\n    super({\n      projection: options.projection,\n      resolutions: options.resolutions\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.displayDpi_ = options.displayDpi !== undefined ?\n      options.displayDpi : 96;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {module:ol/Image~LoadFunction}\n     */\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n      options.imageLoadFunction : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.metersPerUnit_ = options.metersPerUnit !== undefined ?\n      options.metersPerUnit : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useOverlay_ = options.useOverlay !== undefined ?\n      options.useOverlay : false;\n\n    /**\n     * @private\n     * @type {module:ol/Image}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n    pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n    let image = this.image_;\n    if (image &&\n        this.renderedRevision_ == this.getRevision() &&\n        image.getResolution() == resolution &&\n        image.getPixelRatio() == pixelRatio &&\n        containsExtent(image.getExtent(), extent)) {\n      return image;\n    }\n\n    if (this.ratio_ != 1) {\n      extent = extent.slice();\n      scaleFromCenter(extent, this.ratio_);\n    }\n    const width = getWidth(extent) / resolution;\n    const height = getHeight(extent) / resolution;\n    const size = [width * pixelRatio, height * pixelRatio];\n\n    if (this.url_ !== undefined) {\n      const imageUrl = this.getUrl(this.url_, this.params_, extent, size,\n        projection);\n      image = new ImageWrapper(extent, resolution, pixelRatio,\n        imageUrl, this.crossOrigin_,\n        this.imageLoadFunction_);\n      listen(image, EventType.CHANGE,\n        this.handleImageChange, this);\n    } else {\n      image = null;\n    }\n    this.image_ = image;\n    this.renderedRevision_ = this.getRevision();\n\n    return image;\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {module:ol/Image~LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    assign(this.params_, params);\n    this.changed();\n  }\n\n  /**\n   * @param {string} baseUrl The mapagent url.\n   * @param {Object.<string, string|number>} params Request parameters.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {module:ol/size~Size} size Size.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {string} The mapagent map image request URL.\n   */\n  getUrl(baseUrl, params, extent, size, projection) {\n    const scale = getScale(extent, size,\n      this.metersPerUnit_, this.displayDpi_);\n    const center = getCenter(extent);\n    const baseParams = {\n      'OPERATION': this.useOverlay_ ? 'GETDYNAMICMAPOVERLAYIMAGE' : 'GETMAPIMAGE',\n      'VERSION': '2.0.0',\n      'LOCALE': 'en',\n      'CLIENTAGENT': 'ol/source/ImageMapGuide source',\n      'CLIP': '1',\n      'SETDISPLAYDPI': this.displayDpi_,\n      'SETDISPLAYWIDTH': Math.round(size[0]),\n      'SETDISPLAYHEIGHT': Math.round(size[1]),\n      'SETVIEWSCALE': scale,\n      'SETVIEWCENTERX': center[0],\n      'SETVIEWCENTERY': center[1]\n    };\n    assign(baseParams, params);\n    return appendParams(baseUrl, baseParams);\n  }\n\n  /**\n   * Set the image load function of the MapGuide source.\n   * @param {module:ol/Image~LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent The map extents.\n * @param {module:ol/size~Size} size The viewport size.\n * @param {number} metersPerUnit The meters-per-unit value.\n * @param {number} dpi The display resolution.\n * @return {number} The computed map scale.\n */\nfunction getScale(extent, size, metersPerUnit, dpi) {\n  const mcsW = getWidth(extent);\n  const mcsH = getHeight(extent);\n  const devW = size[0];\n  const devH = size[1];\n  const mpp = 0.0254 / dpi;\n  if (devH * mcsW > devW * mcsH) {\n    return mcsW * metersPerUnit / (devW * mpp); // width limited\n  } else {\n    return mcsH * metersPerUnit / (devH * mpp); // height limited\n  }\n}\n\n\nexport default ImageMapGuide;\n","/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\n\nimport ImageWrapper from '../Image.js';\nimport {assert} from '../asserts.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport ImageSource, {defaultImageLoadFunction} from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport {compareVersions} from '../string.js';\nimport {appendParams} from '../uri.js';\n\n\n/**\n * @const\n * @type {module:ol/size~Size}\n */\nconst GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {module:ol/source/WMSServerType|string} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver` or `qgis`. Only needed if `hidpi` is `true`.\n * @property {module:ol/Image~LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object.<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array.<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} url WMS service URL.\n */\n\n\nclass ImageWMS extends ImageSource {\n  /**\n   * @classdesc\n   * Source for WMS servers providing single, untiled images.\n   *\n   * @fires ol/source/Image~ImageSourceEvent\n   * @param {module:ol/source/ImageWMS~Options=} [opt_options] ImageWMS options.\n   * @api\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      resolutions: options.resolutions\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {module:ol/Image~LoadFunction}\n     */\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n      options.imageLoadFunction : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n    this.updateV13_();\n\n    /**\n     * @private\n     * @type {module:ol/source/WMSServerType|undefined}\n     */\n    this.serverType_ = /** @type {module:ol/source/WMSServerType|undefined} */ (options.serverType);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {module:ol/Image}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {module:ol/proj~ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getGetFeatureInfoUrl(coordinate, resolution, projection, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      resolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const extent = getForViewAndSize(coordinate, resolution, 0,\n      GETFEATUREINFO_IMAGE_SIZE);\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS']\n    };\n    assign(baseParams, this.params_, params);\n\n    const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n    const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      extent, GETFEATUREINFO_IMAGE_SIZE,\n      1, sourceProjectionObj || projectionObj, baseParams);\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const imageResolution = resolution / pixelRatio;\n\n    const center = getCenter(extent);\n    const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n    const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n    const viewExtent = getForViewAndSize(center, imageResolution, 0,\n      [viewWidth, viewHeight]);\n    const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n    const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n    const requestExtent = getForViewAndSize(center, imageResolution, 0,\n      [requestWidth, requestHeight]);\n\n    const image = this.image_;\n    if (image &&\n        this.renderedRevision_ == this.getRevision() &&\n        image.getResolution() == resolution &&\n        image.getPixelRatio() == pixelRatio &&\n        containsExtent(image.getExtent(), viewExtent)) {\n      return image;\n    }\n\n    const params = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true\n    };\n    assign(params, this.params_);\n\n    this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n    this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n    const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n      projection, params);\n\n    this.image_ = new ImageWrapper(requestExtent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n    this.renderedRevision_ = this.getRevision();\n\n    listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n    return this.image_;\n\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {module:ol/Image~LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  getRequestUrl_(extent, size, pixelRatio, projection, params) {\n\n    assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case WMSServerType.GEOSERVER:\n          const dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case WMSServerType.MAPSERVER:\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case WMSServerType.CARMENTA_SERVER:\n        case WMSServerType.QGIS:\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default:\n          assert(false, 8); // Unknown `serverType` configured\n          break;\n      }\n    }\n\n    params['WIDTH'] = size[0];\n    params['HEIGHT'] = size[1];\n\n    const axisOrientation = projection.getAxisOrientation();\n    let bbox;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      bbox = [extent[1], extent[0], extent[3], extent[2]];\n    } else {\n      bbox = extent;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    return appendParams(/** @type {string} */ (this.url_), params);\n  }\n\n  /**\n   * Return the URL used for this WMS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {module:ol/Image~LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    assign(this.params_, params);\n    this.updateV13_();\n    this.image_ = null;\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n}\n\n\nexport default ImageWMS;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from '../source/XYZ.js';\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\nclass OSM extends XYZ {\n\n  /**\n   * @classdesc\n   * Layer source for the OpenStreetMap tile server.\n   *\n   * @param {module:ol/source/OSM~Options=} [opt_options] Open Street Map options.\n   * @api\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin = options.crossOrigin !== undefined ?\n      options.crossOrigin : 'anonymous';\n\n    const url = options.url !== undefined ?\n      options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX\n    });\n\n  }\n\n}\n\nexport default OSM;\n","var hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\nvar context = document.createElement('canvas').getContext('2d');\n\nfunction newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  } else {\n    var imageData = context.createImageData(width, height);\n    imageData.data.set(data);\n    return imageData;\n  }\n}\n\nexports.newImageData = newImageData;\n","var newImageData = require('./util').newImageData;\n\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(Object):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  var workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    } else {\n      return {data: data, width: width, height: height};\n    }\n  }\n\n  return function(data) {\n    // bracket notation for minification support\n    var buffers = data['buffers'];\n    var meta = data['meta'];\n    var imageOps = data['imageOps'];\n    var width = data['width'];\n    var height = data['height'];\n\n    var numBuffers = buffers.length;\n    var numBytes = buffers[0].byteLength;\n    var output, b;\n\n    if (imageOps) {\n      var images = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n            new Uint8ClampedArray(buffers[b]), width, height);\n      }\n      output = operation(images, meta).data;\n    } else {\n      output = new Uint8ClampedArray(numBytes);\n      var arrays = new Array(numBuffers);\n      var pixels = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        arrays[b] = new Uint8ClampedArray(buffers[b]);\n        pixels[b] = [0, 0, 0, 0];\n      }\n      for (var i = 0; i < numBytes; i += 4) {\n        for (var j = 0; j < numBuffers; ++j) {\n          var array = arrays[j];\n          pixels[j][0] = array[i];\n          pixels[j][1] = array[i + 1];\n          pixels[j][2] = array[i + 2];\n          pixels[j][3] = array[i + 3];\n        }\n        var pixel = operation(pixels, meta);\n        output[i] = pixel[0];\n        output[i + 1] = pixel[1];\n        output[i + 2] = pixel[2];\n        output[i + 3] = pixel[3];\n      }\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  var lib = Object.keys(config.lib || {}).map(function(name) {\n    return 'var ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  var lines = lib.concat([\n    'var __minion__ = (' + createMinion.toString() + ')(', config.operation.toString(), ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  var buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});'\n  ]);\n\n  var blob = new Blob(lines, {type: 'text/javascript'});\n  var source = URL.createObjectURL(blob);\n  var worker = new Worker(source);\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * Create a faux worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  var minion = createMinion(config.operation);\n  return {\n    postMessage: function(data) {\n      setTimeout(function() {\n        onMessage({'data': {'buffer': minion(data), 'meta': data['meta']}});\n      }, 0);\n    }\n  };\n}\n\n/**\n * A processor runs pixel or image operations in workers.\n * @param {Object} config Configuration.\n */\nfunction Processor(config) {\n  this._imageOps = !!config.imageOps;\n  var threads;\n  if (config.threads === 0) {\n    threads = 0;\n  } else if (this._imageOps) {\n    threads = 1;\n  } else {\n    threads = config.threads || 1;\n  }\n  var workers = [];\n  if (threads) {\n    for (var i = 0; i < threads; ++i) {\n      workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n    }\n  } else {\n    workers[0] = createFauxWorker(config, this._onWorkerMessage.bind(this, 0));\n  }\n  this._workers = workers;\n  this._queue = [];\n  this._maxQueueLength = config.queue || Infinity;\n  this._running = 0;\n  this._dataLookup = {};\n  this._job = null;\n}\n\n/**\n * Run operation on input data.\n * @param {Array.<Array|ImageData>} inputs Array of pixels or image data\n *     (depending on the operation type).\n * @param {Object} meta A user data object.  This is passed to all operations\n *     and must be serializable.\n * @param {function(Error, ImageData, Object)} callback Called when work\n *     completes.  The first argument is any error.  The second is the ImageData\n *     generated by operations.  The third is the user data object.\n */\nProcessor.prototype.process = function(inputs, meta, callback) {\n  this._enqueue({\n    inputs: inputs,\n    meta: meta,\n    callback: callback\n  });\n  this._dispatch();\n};\n\n/**\n * Stop responding to any completed work and destroy the processor.\n */\nProcessor.prototype.destroy = function() {\n  for (var key in this) {\n    this[key] = null;\n  }\n  this._destroyed = true;\n};\n\n/**\n * Add a job to the queue.\n * @param {Object} job The job.\n */\nProcessor.prototype._enqueue = function(job) {\n  this._queue.push(job);\n  while (this._queue.length > this._maxQueueLength) {\n    this._queue.shift().callback(null, null);\n  }\n};\n\n/**\n * Dispatch a job.\n */\nProcessor.prototype._dispatch = function() {\n  if (this._running === 0 && this._queue.length > 0) {\n    var job = this._job = this._queue.shift();\n    var width = job.inputs[0].width;\n    var height = job.inputs[0].height;\n    var buffers = job.inputs.map(function(input) {\n      return input.data.buffer;\n    });\n    var threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage({\n        'buffers': buffers,\n        'meta': job.meta,\n        'imageOps': this._imageOps,\n        'width': width,\n        'height': height\n      }, buffers);\n    } else {\n      var length = job.inputs[0].data.length;\n      var segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (var i = 0; i < threads; ++i) {\n        var offset = i * segmentLength;\n        var slices = [];\n        for (var j = 0, jj = buffers.length; j < jj; ++j) {\n          slices.push(buffers[i].slice(offset, offset + segmentLength));\n        }\n        this._workers[i].postMessage({\n          'buffers': slices,\n          'meta': job.meta,\n          'imageOps': this._imageOps,\n          'width': width,\n          'height': height\n        }, slices);\n      }\n    }\n  }\n};\n\n/**\n * Handle messages from the worker.\n * @param {number} index The worker index.\n * @param {MessageEvent} event The message event.\n */\nProcessor.prototype._onWorkerMessage = function(index, event) {\n  if (this._destroyed) {\n    return;\n  }\n  this._dataLookup[index] = event.data;\n  --this._running;\n  if (this._running === 0) {\n    this._resolveJob();\n  }\n};\n\n/**\n * Resolve a job.  If there are no more worker threads, the processor callback\n * will be called.\n */\nProcessor.prototype._resolveJob = function() {\n  var job = this._job;\n  var threads = this._workers.length;\n  var data, meta;\n  if (threads === 1) {\n    data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n    meta = this._dataLookup[0]['meta'];\n  } else {\n    var length = job.inputs[0].data.length;\n    data = new Uint8ClampedArray(length);\n    meta = new Array(length);\n    var segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (var i = 0; i < threads; ++i) {\n      var buffer = this._dataLookup[i]['buffer'];\n      var offset = i * segmentLength;\n      data.set(new Uint8ClampedArray(buffer), offset);\n      meta[i] = this._dataLookup[i]['meta'];\n    }\n  }\n  this._job = null;\n  this._dataLookup = {};\n  job.callback(null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height), meta);\n  this._dispatch();\n};\n\nmodule.exports = Processor;\n","/**\n * @module ol/source/Raster\n */\nimport {getUid} from '../util.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport TileQueue from '../TileQueue.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {Processor} from 'pixelworks/lib/index';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport ImageLayer from '../layer/Image.js';\nimport TileLayer from '../layer/Tile.js';\nimport {assign} from '../obj.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\nimport ImageSource from '../source/Image.js';\nimport SourceState from '../source/State.js';\nimport TileSource from '../source/Tile.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * {@link ImageData https://developer.mozilla.org/en-US/docs/Web/API/ImageData}\n * and should return a single {@link ImageData\n * https://developer.mozilla.org/en-US/docs/Web/API/ImageData}.  The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array.<Array.<number>>|Array.<ImageData>), Object):\n *     (Array.<number>|ImageData)} Operation\n */\n\n\n/**\n * @enum {string}\n */\nconst RasterEventType = {\n  /**\n   * Triggered before operations are run.\n   * @event ol/source/Raster~RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.\n   * @event ol/source/Raster~RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations'\n};\n\n\n/**\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n * @enum {string}\n */\nconst RasterOperationType = {\n  PIXEL: 'pixel',\n  IMAGE: 'image'\n};\n\n\nclass RasterSourceEvent extends Event {\n\n  /**\n   * @classdesc\n   * Events emitted by {@link module:ol/source/Raster} instances are instances of this\n   * type.\n   *\n   * @param {string} type Type.\n   * @param {module:ol/PluggableMap~FrameState} frameState The frame state.\n   * @param {Object} data An object made available to operations.\n   */\n  constructor(type, frameState, data) {\n    super(type);\n\n    /**\n     * The raster extent.\n     * @type {module:ol/extent~Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n\n  }\n\n}\n\n/**\n * @typedef {Object} Options\n * @property {Array.<module:ol/source/Source|module:ol/layer/Layer>} sources Input\n * sources or layers. Vector layers must be configured with `renderMode: 'image'`.\n * @property {module:ol/source/Raster~Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {module:ol/source/Raster~RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n */\n\n\nclass RasterSource extends ImageSource {\n  /**\n   * @classdesc\n   * A source that transforms data from any number of input sources using an\n   * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n   * output pixel values.\n   *\n   * @fires ol/source/Raster~RasterSourceEvent\n   * @param {module:ol/source/Raster~Options=} options Options.\n   * @api\n   */\n  constructor(options) {\n    super({});\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.worker_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/source/Raster~RasterOperationType}\n     */\n    this.operationType_ = options.operationType !== undefined ?\n      options.operationType : RasterOperationType.PIXEL;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array.<module:ol/renderer/canvas/Layer>}\n     */\n    this.renderers_ = createRenderers(options.sources);\n\n    for (let r = 0, rr = this.renderers_.length; r < rr; ++r) {\n      listen(this.renderers_[r], EventType.CHANGE,\n        this.changed, this);\n    }\n\n    /**\n     * @private\n     * @type {module:ol/TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      function() {\n        return 1;\n      },\n      this.changed.bind(this));\n\n    const layerStatesArray = getLayerStatesArray(this.renderers_);\n    const layerStates = {};\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n    }\n\n    /**\n     * The most recently requested frame state.\n     * @type {module:ol/PluggableMap~FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {module:ol/ImageCanvas}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {module:ol/PluggableMap~FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      extent: null,\n      focus: null,\n      index: 0,\n      layerStates: layerStates,\n      layerStatesArray: layerStatesArray,\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      skippedFeatureUids: {},\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {module:ol/View~State} */ ({\n        rotation: 0\n      }),\n      viewHints: [],\n      wantedTiles: {}\n    };\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n\n  }\n\n  /**\n   * Set the operation.\n   * @param {module:ol/source/Raster~Operation} operation New operation.\n   * @param {Object=} opt_lib Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  setOperation(operation, opt_lib) {\n    this.worker_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === RasterOperationType.IMAGE,\n      queue: 1,\n      lib: opt_lib,\n      threads: this.threads_\n    });\n    this.changed();\n  }\n\n  /**\n   * Update the stored frame state.\n   * @param {module:ol/extent~Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {module:ol/proj/Projection} projection The view projection.\n   * @return {module:ol/PluggableMap~FrameState} The updated frame state.\n   * @private\n   */\n  updateFrameState_(extent, resolution, projection) {\n\n    const frameState = /** @type {module:ol/PluggableMap~FrameState} */ (assign({}, this.frameState_));\n\n    frameState.viewState = /** @type {module:ol/View~State} */ (assign({}, frameState.viewState));\n\n    const center = getCenter(extent);\n\n    frameState.extent = extent.slice();\n    frameState.focus = center;\n    frameState.size[0] = Math.round(getWidth(extent) / resolution);\n    frameState.size[1] = Math.round(getHeight(extent) / resolution);\n    frameState.time = Date.now();\n    frameState.animate = false;\n\n    const viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  }\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  allSourcesReady_() {\n    let ready = true;\n    let source;\n    for (let i = 0, ii = this.renderers_.length; i < ii; ++i) {\n      source = this.renderers_[i].getLayer().getSource();\n      if (source.getState() !== SourceState.READY) {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    const frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      const renderedResolution = this.renderedImageCanvas_.getResolution();\n      const renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (resolution !== renderedResolution || !equals(extent, renderedExtent)) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (!this.renderedImageCanvas_ || this.getRevision() !== this.renderedRevision_) {\n      this.processSources_();\n    }\n\n    frameState.tileQueue.loadMoreTiles(16, 16);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  }\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  processSources_() {\n    const frameState = this.requestedFrameState_;\n    const len = this.renderers_.length;\n    const imageDatas = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      const imageData = getImageData(\n        this.renderers_[i], frameState, frameState.layerStatesArray[i]);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    const data = {};\n    this.dispatchEvent(new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data));\n    this.worker_.process(imageDatas, data, this.onWorkerComplete_.bind(this, frameState));\n  }\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {module:ol/PluggableMap~FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object} data The user data.\n   * @private\n   */\n  onWorkerComplete_(frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    if (resolution !== this.requestedFrameState_.viewState.resolution ||\n        !equals(extent, this.requestedFrameState_.extent)) {\n      return;\n    }\n\n    let context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      const width = Math.round(getWidth(extent) / resolution);\n      const height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(extent, resolution, 1, context.canvas);\n    }\n    context.putImageData(output, 0, 0);\n\n    this.changed();\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data));\n  }\n\n  /**\n   * @override\n   */\n  getImageInternal() {\n    return null; // not implemented\n  }\n}\n\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nlet sharedContext = null;\n\n\n/**\n * Get image data from a renderer.\n * @param {module:ol/renderer/canvas/Layer} renderer Layer renderer.\n * @param {module:ol/PluggableMap~FrameState} frameState The frame state.\n * @param {module:ol/layer/Layer~State} layerState The layer state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(renderer, frameState, layerState) {\n  if (!renderer.prepareFrame(frameState, layerState)) {\n    return null;\n  }\n  const width = frameState.size[0];\n  const height = frameState.size[1];\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height);\n  } else {\n    const canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height);\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  renderer.composeFrame(frameState, layerState, sharedContext);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n\n/**\n * Get a list of layer states from a list of renderers.\n * @param {Array.<module:ol/renderer/canvas/Layer>} renderers Layer renderers.\n * @return {Array.<module:ol/layer/Layer~State>} The layer states.\n */\nfunction getLayerStatesArray(renderers) {\n  return renderers.map(function(renderer) {\n    return renderer.getLayer().getLayerState();\n  });\n}\n\n\n/**\n * Create renderers for all sources.\n * @param {Array.<module:ol/source/Source>} sources The sources.\n * @return {Array.<module:ol/renderer/canvas/Layer>} Array of layer renderers.\n */\nfunction createRenderers(sources) {\n  const len = sources.length;\n  const renderers = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    renderers[i] = createRenderer(sources[i]);\n  }\n  return renderers;\n}\n\n\n/**\n * Create a renderer for the provided source.\n * @param {module:ol/source/Source} source The source.\n * @return {module:ol/renderer/canvas/Layer} The renderer.\n */\nfunction createRenderer(source) {\n  let renderer = null;\n  if (source instanceof TileSource) {\n    renderer = createTileRenderer(source);\n  } else if (source instanceof ImageSource) {\n    renderer = createImageRenderer(source);\n  } else if (source instanceof TileLayer) {\n    renderer = new CanvasTileLayerRenderer(source);\n  } else if (source instanceof Layer &&\n      (source.getType() == LayerType.IMAGE || source.getType() == LayerType.VECTOR)) {\n    renderer = new CanvasImageLayerRenderer(source);\n  }\n  return renderer;\n}\n\n\n/**\n * Create an image renderer for the provided source.\n * @param {module:ol/source/Image} source The source.\n * @return {module:ol/renderer/canvas/Layer} The renderer.\n */\nfunction createImageRenderer(source) {\n  const layer = new ImageLayer({source: source});\n  return new CanvasImageLayerRenderer(layer);\n}\n\n\n/**\n * Create a tile renderer for the provided source.\n * @param {module:ol/source/Tile} source The source.\n * @return {module:ol/renderer/canvas/Layer} The renderer.\n */\nfunction createTileRenderer(source) {\n  const layer = new TileLayer({source: source});\n  return new CanvasTileLayerRenderer(layer);\n}\n\n\nexport default RasterSource;\n","/**\n * @module ol/source/TileArcGISRest\n */\n\nimport {createEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {assign} from '../obj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.\n * Note that you must provide a `crossOrigin` value if you are using the WebGL renderer\n * or if you want to access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image\n * for more detail.\n * @property {Object.<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\n * default. `TRANSPARENT` is `true` by default.  `BBOX, `SIZE`, `BBOXSR`,\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\n * override the default service layer visibility. See\n * http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/\n * for further reference.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\n * The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\n * url should include /MapServer or /ImageServer.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\n * transition, pass `transition: 0`.\n * @property {Array.<string>} urls ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\n * Service supports multiple urls for export requests.\n */\n\n\nclass TileArcGISRest extends TileImage {\n  /**\n   * @classdesc\n   * Layer source for tile data from ArcGIS Rest services. Map and Image\n   * Services are supported.\n   *\n   * For cached ArcGIS services, better performance is available using the\n   * {@link module:ol/source/XYZ~XYZ} data source.\n   *\n   * @param {module:ol/source/TileArcGISRest~Options=} opt_options Tile ArcGIS Rest options.\n   * @api\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @param {module:ol/size~Size} tileSize Tile size.\n   * @param {module:ol/extent~Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    // ArcGIS Server only wants the numeric portion of the projection ID.\n    const srid = projection.getCode().split(':').pop();\n\n    params['SIZE'] = tileSize[0] + ',' + tileSize[1];\n    params['BBOX'] = tileExtent.join(',');\n    params['BBOXSR'] = srid;\n    params['IMAGESR'] = srid;\n    params['DPI'] = Math.round(\n      params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio\n    );\n\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n\n    const modifiedUrl = url\n      .replace(/MapServer\\/?$/, 'MapServer/export')\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n    return appendParams(modifiedUrl, params);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTilePixelRatio(pixelRatio) {\n    return /** @type {number} */ (pixelRatio);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  fixedTileUrlFunction(tileCoord, pixelRatio, projection) {\n\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    const tileExtent = tileGrid.getTileCoordExtent(\n      tileCoord, this.tmpExtent_);\n    let tileSize = toSize(\n      tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    // Apply default params and override with user specified values.\n    const baseParams = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true\n    };\n    assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      pixelRatio, projection, baseParams);\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    assign(this.params_, params);\n    this.setKey(this.getKeyForParams_());\n  }\n}\n\n\nexport default TileArcGISRest;\n","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See http://mapbox.com/developers/api/.\n */\n\n\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from '../source/State.js';\nimport TileImage from '../source/TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {tileJSON} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\nclass TileJSON extends TileImage {\n  /**\n   * @classdesc\n   * Layer source for tile data in TileJSON format.\n   *\n   * @param {module:ol/source/TileJSON~Options=} options TileJSON options.\n   * @api\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: SourceState.LOADING,\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @type {TileJSON}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(options.url, this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this));\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      let response;\n      try {\n        response = /** @type {TileJSON} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * @return {TileJSON} The tilejson object.\n   * @api\n   */\n  getTileJSON() {\n    return this.tileJSON_;\n  }\n\n  /**\n   * @protected\n   * @param {TileJSON} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON.bounds !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection, sourceProjection);\n      extent = applyTransform(tileJSON.bounds, transform);\n    }\n\n    const minZoom = tileJSON.minzoom || 0;\n    const maxZoom = tileJSON.maxzoom || 22;\n    const tileGrid = createXYZ({\n      extent: extentFromProjection(sourceProjection),\n      maxZoom: maxZoom,\n      minZoom: minZoom\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON.tiles, tileGrid);\n\n    if (tileJSON.attribution !== undefined && !this.getAttributions()) {\n      const attributionExtent = extent !== undefined ?\n        extent : epsg4326Projection.getExtent();\n\n      this.setAttributions(function(frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON.attribution];\n        }\n        return null;\n      });\n\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState(SourceState.READY);\n\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState(SourceState.ERROR);\n  }\n}\n\n\nexport default TileJSON;\n","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\n\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {toSize, buffer as bufferSize, scale as scaleSize} from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\nimport {compareVersions} from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Object.<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See http://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/ImageTile~TileClass} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~TileClass}.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used..\n * @property {module:ol/source/WMSServerType|string} [serverType]\n * The type of the remote WMS server. Currently only used when `hidpi` is\n * `true`.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array.<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\nclass TileWMS extends TileImage {\n  /**\n   * @classdesc\n   * Layer source for tile data from WMS servers.\n   *\n   * @param {module:ol/source/TileWMS~Options=} [opt_options] Tile WMS options.\n   * @api\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    const params = options.params || {};\n\n    const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: !transparent,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {module:ol/source/WMSServerType|undefined}\n     */\n    this.serverType_ = /** @type {module:ol/source/WMSServerType|undefined} */ (options.serverType);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {module:ol/proj~ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getGetFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projectionObj);\n    }\n\n    const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    let tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      tileResolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n      tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS']\n    };\n    assign(baseParams, this.params_, params);\n\n    const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n    const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      1, sourceProjectionObj || projectionObj, baseParams);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getGutterInternal() {\n    return this.gutter_;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @param {module:ol/size~Size} tileSize Tile size.\n   * @param {module:ol/extent~Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    params['WIDTH'] = tileSize[0];\n    params['HEIGHT'] = tileSize[1];\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case WMSServerType.GEOSERVER:\n          const dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case WMSServerType.MAPSERVER:\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case WMSServerType.CARMENTA_SERVER:\n        case WMSServerType.QGIS:\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default:\n          assert(false, 52); // Unknown `serverType` configured\n          break;\n      }\n    }\n\n    const axisOrientation = projection.getAxisOrientation();\n    const bbox = tileExtent;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      let tmp;\n      tmp = tileExtent[0];\n      bbox[0] = tileExtent[1];\n      bbox[1] = tmp;\n      tmp = tileExtent[2];\n      bbox[2] = tileExtent[3];\n      bbox[3] = tmp;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n    return appendParams(url, params);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTilePixelRatio(pixelRatio) {\n    return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n    /** @type {number} */ (pixelRatio);\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  fixedTileUrlFunction(tileCoord, pixelRatio, projection) {\n\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(\n      tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true\n    };\n    assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      pixelRatio, projection, baseParams);\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    assign(this.params_, params);\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n}\n\n\nexport default TileWMS;\n","/**\n * @module ol/source/UTFGrid\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {listenOnce} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from '../source/State.js';\nimport TileSource from '../source/Tile.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileState} state State.\n * @param {string} src Image source URI.\n * @param {module:ol/extent~Extent} extent Extent of the tile.\n * @param {boolean} preemptive Load the tile when visible (before it's needed).\n * @param {boolean} jsonp Load the tile as a script.\n */\nexport class CustomTile extends Tile {\n\n  constructor(tileCoord, state, src, extent, preemptive, jsonp) {\n\n    super(tileCoord, state);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = preemptive;\n\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n    this.grid_ = null;\n\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n    this.keys_ = null;\n\n    /**\n     * @private\n     * @type {Object.<string, Object>|undefined}\n     */\n    this.data_ = null;\n\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = jsonp;\n\n  }\n\n}\n\n\n/**\n * Get the image element for this tile.\n * @return {HTMLImageElement} Image.\n */\nCustomTile.prototype.getImage = function() {\n  return null;\n};\n\n\n/**\n * Synchronously returns data at given coordinate (if available).\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {*} The data.\n */\nCustomTile.prototype.getData = function(coordinate) {\n  if (!this.grid_ || !this.keys_) {\n    return null;\n  }\n  const xRelative = (coordinate[0] - this.extent_[0]) /\n      (this.extent_[2] - this.extent_[0]);\n  const yRelative = (coordinate[1] - this.extent_[1]) /\n      (this.extent_[3] - this.extent_[1]);\n\n  const row = this.grid_[Math.floor((1 - yRelative) * this.grid_.length)];\n\n  if (typeof row !== 'string') {\n    return null;\n  }\n\n  let code = row.charCodeAt(Math.floor(xRelative * row.length));\n  if (code >= 93) {\n    code--;\n  }\n  if (code >= 35) {\n    code--;\n  }\n  code -= 32;\n\n  let data = null;\n  if (code in this.keys_) {\n    const id = this.keys_[code];\n    if (this.data_ && id in this.data_) {\n      data = this.data_[id];\n    } else {\n      data = id;\n    }\n  }\n  return data;\n};\n\n\n/**\n * Calls the callback (synchronously by default) with the available data\n * for given coordinate (or `null` if not yet loaded).\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {function(this: T, *)} callback Callback.\n * @param {T=} opt_this The object to use as `this` in the callback.\n * @param {boolean=} opt_request If `true` the callback is always async.\n *                               The tile data is requested if not yet loaded.\n * @template T\n */\nCustomTile.prototype.forDataAtCoordinate = function(coordinate, callback, opt_this, opt_request) {\n  if (this.state == TileState.IDLE && opt_request === true) {\n    listenOnce(this, EventType.CHANGE, function(e) {\n      callback.call(opt_this, this.getData(coordinate));\n    }, this);\n    this.loadInternal_();\n  } else {\n    if (opt_request === true) {\n      setTimeout(function() {\n        callback.call(opt_this, this.getData(coordinate));\n      }.bind(this), 0);\n    } else {\n      callback.call(opt_this, this.getData(coordinate));\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCustomTile.prototype.getKey = function() {\n  return this.src_;\n};\n\n\n/**\n * @private\n */\nCustomTile.prototype.handleError_ = function() {\n  this.state = TileState.ERROR;\n  this.changed();\n};\n\n\n/**\n * @param {!UTFGridJSON} json UTFGrid data.\n * @private\n */\nCustomTile.prototype.handleLoad_ = function(json) {\n  this.grid_ = json.grid;\n  this.keys_ = json.keys;\n  this.data_ = json.data;\n\n  this.state = TileState.EMPTY;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nCustomTile.prototype.loadInternal_ = function() {\n  if (this.state == TileState.IDLE) {\n    this.state = TileState.LOADING;\n    if (this.jsonp_) {\n      requestJSONP(this.src_, this.handleLoad_.bind(this),\n        this.handleError_.bind(this));\n    } else {\n      const client = new XMLHttpRequest();\n      client.addEventListener('load', this.onXHRLoad_.bind(this));\n      client.addEventListener('error', this.onXHRError_.bind(this));\n      client.open('GET', this.src_);\n      client.send();\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {Event} event The load event.\n */\nCustomTile.prototype.onXHRLoad_ = function(event) {\n  const client = /** @type {XMLHttpRequest} */ (event.target);\n  // status will be 0 for file:// urls\n  if (!client.status || client.status >= 200 && client.status < 300) {\n    let response;\n    try {\n      response = /** @type {!UTFGridJSON} */(JSON.parse(client.responseText));\n    } catch (err) {\n      this.handleError_();\n      return;\n    }\n    this.handleLoad_(response);\n  } else {\n    this.handleError_();\n  }\n};\n\n\n/**\n * @private\n * @param {Event} event The error event.\n */\nCustomTile.prototype.onXHRError_ = function(event) {\n  this.handleError_();\n};\n\n\n/**\n * @override\n */\nCustomTile.prototype.load = function() {\n  if (this.preemptive_) {\n    this.loadInternal_();\n  }\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [preemptive=true]\n * If `true` the UTFGrid source loads the tiles based on their \"visibility\".\n * This improves the speed of response, but increases traffic.\n * Note that if set to `false`, you need to pass `true` as `opt_request`\n * to the `forDataAtCoordinateAndResolution` method otherwise no data\n * will ever be loaded.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {tileJSON} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {string} [url] TileJSON endpoint that provides the configuration for this source.\n * Request will be made through JSONP. If not provided, `tileJSON` must be configured.\n */\n\n\nclass UTFGrid extends TileSource {\n\n  /**\n   * @classdesc\n   * Layer source for UTFGrid interaction data loaded from TileJSON format.\n   *\n   * @param {module:ol/source/UTFGrid~Options=} options Source options.\n   * @api\n   */\n  constructor(options) {\n    super({\n      projection: getProjection('EPSG:3857'),\n      state: SourceState.LOADING\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = options.preemptive !== undefined ?\n      options.preemptive : true;\n\n    /**\n     * @private\n     * @type {!module:ol/Tile~UrlFunction}\n     */\n    this.tileUrlFunction_ = nullTileUrlFunction;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.template_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = options.jsonp || false;\n\n    if (options.url) {\n      if (this.jsonp_) {\n        requestJSONP(options.url, this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this));\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n\n  }\n\n}\n\n\n/**\n * @private\n * @param {Event} event The load event.\n */\nUTFGrid.prototype.onXHRLoad_ = function(event) {\n  const client = /** @type {XMLHttpRequest} */ (event.target);\n  // status will be 0 for file:// urls\n  if (!client.status || client.status >= 200 && client.status < 300) {\n    let response;\n    try {\n      response = /** @type {TileJSON} */(JSON.parse(client.responseText));\n    } catch (err) {\n      this.handleTileJSONError();\n      return;\n    }\n    this.handleTileJSONResponse(response);\n  } else {\n    this.handleTileJSONError();\n  }\n};\n\n\n/**\n * @private\n * @param {Event} event The error event.\n */\nUTFGrid.prototype.onXHRError_ = function(event) {\n  this.handleTileJSONError();\n};\n\n\n/**\n * Return the template from TileJSON.\n * @return {string|undefined} The template from TileJSON.\n * @api\n */\nUTFGrid.prototype.getTemplate = function() {\n  return this.template_;\n};\n\n\n/**\n * Calls the callback (synchronously by default) with the available data\n * for given coordinate and resolution (or `null` if not yet loaded or\n * in case of an error).\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {function(*)} callback Callback.\n * @param {boolean=} opt_request If `true` the callback is always async.\n *                               The tile data is requested if not yet loaded.\n * @api\n */\nUTFGrid.prototype.forDataAtCoordinateAndResolution = function(\n  coordinate, resolution, callback, opt_request) {\n  if (this.tileGrid) {\n    const tileCoord = this.tileGrid.getTileCoordForCoordAndResolution(\n      coordinate, resolution);\n    const tile = /** @type {!module:ol/source/UTFGrid~CustomTile} */(this.getTile(\n      tileCoord[0], tileCoord[1], tileCoord[2], 1, this.getProjection()));\n    tile.forDataAtCoordinate(coordinate, callback, null, opt_request);\n  } else {\n    if (opt_request === true) {\n      setTimeout(function() {\n        callback(null);\n      }, 0);\n    } else {\n      callback(null);\n    }\n  }\n};\n\n\n/**\n * @protected\n */\nUTFGrid.prototype.handleTileJSONError = function() {\n  this.setState(SourceState.ERROR);\n};\n\n\n/**\n * TODO: very similar to ol/source/TileJSON#handleTileJSONResponse\n * @protected\n * @param {TileJSON} tileJSON Tile JSON.\n */\nUTFGrid.prototype.handleTileJSONResponse = function(tileJSON) {\n\n  const epsg4326Projection = getProjection('EPSG:4326');\n\n  const sourceProjection = this.getProjection();\n  let extent;\n  if (tileJSON.bounds !== undefined) {\n    const transform = getTransformFromProjections(\n      epsg4326Projection, sourceProjection);\n    extent = applyTransform(tileJSON.bounds, transform);\n  }\n\n  const minZoom = tileJSON.minzoom || 0;\n  const maxZoom = tileJSON.maxzoom || 22;\n  const tileGrid = createXYZ({\n    extent: extentFromProjection(sourceProjection),\n    maxZoom: maxZoom,\n    minZoom: minZoom\n  });\n  this.tileGrid = tileGrid;\n\n  this.template_ = tileJSON.template;\n\n  const grids = tileJSON.grids;\n  if (!grids) {\n    this.setState(SourceState.ERROR);\n    return;\n  }\n\n  this.tileUrlFunction_ = createFromTemplates(grids, tileGrid);\n\n  if (tileJSON.attribution !== undefined) {\n    const attributionExtent = extent !== undefined ?\n      extent : epsg4326Projection.getExtent();\n\n    this.setAttributions(function(frameState) {\n      if (intersects(attributionExtent, frameState.extent)) {\n        return [tileJSON.attribution];\n      }\n      return null;\n    });\n  }\n\n  this.setState(SourceState.READY);\n\n};\n\n\n/**\n * @inheritDoc\n */\nUTFGrid.prototype.getTile = function(z, x, y, pixelRatio, projection) {\n  const tileCoordKey = getKeyZXY(z, x, y);\n  if (this.tileCache.containsKey(tileCoordKey)) {\n    return (\n      /** @type {!module:ol/Tile} */ (this.tileCache.get(tileCoordKey))\n    );\n  } else {\n    const tileCoord = [z, x, y];\n    const urlTileCoord =\n        this.getTileCoordForTileUrlFunction(tileCoord, projection);\n    const tileUrl = this.tileUrlFunction_(urlTileCoord, pixelRatio, projection);\n    const tile = new CustomTile(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.tileGrid.getTileCoordExtent(tileCoord),\n      this.preemptive_,\n      this.jsonp_);\n    this.tileCache.set(tileCoordKey, tile);\n    return tile;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nUTFGrid.prototype.useTile = function(z, x, y) {\n  const tileCoordKey = getKeyZXY(z, x, y);\n  if (this.tileCache.containsKey(tileCoordKey)) {\n    this.tileCache.get(tileCoordKey);\n  }\n};\n\n\nexport default UTFGrid;\n","/**\n * @module ol/VectorImageTile\n */\nimport {getUid} from './util.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {getHeight, getIntersection, getWidth} from './extent.js';\nimport EventType from './events/EventType.js';\nimport {loadFeaturesXhr} from './featureloader.js';\nimport {UNDEFINED} from './functions.js';\n\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty\n * @property {null|module:ol/render~OrderFunction} renderedRenderOrder\n * @property {number} renderedTileRevision\n * @property {number} renderedRevision\n */\n\n\nclass VectorImageTile extends Tile {\n\n  /**\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @param {module:ol/TileState} state State.\n   * @param {number} sourceRevision Source revision.\n   * @param {module:ol/format/Feature} format Feature format.\n   * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n   * @param {module:ol/tilecoord~TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {module:ol/Tile~UrlFunction} tileUrlFunction Tile url function.\n   * @param {module:ol/tilegrid/TileGrid} sourceTileGrid Tile grid of the source.\n   * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid of the renderer.\n   * @param {Object.<string, module:ol/VectorTile>} sourceTiles Source tiles.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {function(new: module:ol/VectorTile, module:ol/tilecoord~TileCoord, module:ol/TileState, string,\n   *     module:ol/format/Feature, module:ol/Tile~LoadFunction)} tileClass Class to\n   *     instantiate for source tiles.\n   * @param {function(this: module:ol/source/VectorTile, module:ol/events/Event)} handleTileChange\n   *     Function to call when a source tile's state changes.\n   * @param {number} zoom Integer zoom to render the tile for.\n   */\n  constructor(tileCoord, state, sourceRevision, format, tileLoadFunction,\n    urlTileCoord, tileUrlFunction, sourceTileGrid, tileGrid, sourceTiles,\n    pixelRatio, projection, tileClass, handleTileChange, zoom) {\n\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object.<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * @private\n     * @type {module:ol/featureloader~FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * @private\n     * @type {!Object.<string, module:ol/VectorImageTile~ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @private\n     * @type {Object.<string, module:ol/VectorTile>}\n     */\n    this.sourceTiles_ = sourceTiles;\n\n    /**\n     * Keys of source tiles used by this tile. Use with {@link #getTile}.\n     * @type {Array.<string>}\n     */\n    this.tileKeys = [];\n\n    /**\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @type {number}\n     */\n    this.sourceRevision_ = sourceRevision;\n\n    /**\n     * @type {module:ol/tilecoord~TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n\n    /**\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.loadListenerKeys_ = [];\n\n    /**\n     * @type {Array.<module:ol/events~EventsKey>}\n     */\n    this.sourceTileListenerKeys_ = [];\n\n    if (urlTileCoord) {\n      const extent = this.extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      const resolution = tileGrid.getResolution(zoom);\n      const sourceZ = sourceTileGrid.getZForResolution(resolution);\n      const useLoadedOnly = zoom != tileCoord[0];\n      let loadCount = 0;\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, function(sourceTileCoord) {\n        let sharedExtent = getIntersection(extent,\n          sourceTileGrid.getTileCoordExtent(sourceTileCoord));\n        const sourceExtent = sourceTileGrid.getExtent();\n        if (sourceExtent) {\n          sharedExtent = getIntersection(sharedExtent, sourceExtent, sharedExtent);\n        }\n        if (getWidth(sharedExtent) / resolution >= 0.5 &&\n            getHeight(sharedExtent) / resolution >= 0.5) {\n          // only include source tile if overlap is at least 1 pixel\n          ++loadCount;\n          const sourceTileKey = sourceTileCoord.toString();\n          let sourceTile = sourceTiles[sourceTileKey];\n          if (!sourceTile && !useLoadedOnly) {\n            const tileUrl = tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n            sourceTile = sourceTiles[sourceTileKey] = new tileClass(sourceTileCoord,\n              tileUrl == undefined ? TileState.EMPTY : TileState.IDLE,\n              tileUrl == undefined ? '' : tileUrl,\n              format, tileLoadFunction);\n            this.sourceTileListenerKeys_.push(\n              listen(sourceTile, EventType.CHANGE, handleTileChange));\n          }\n          if (sourceTile && (!useLoadedOnly || sourceTile.getState() == TileState.LOADED)) {\n            sourceTile.consumers++;\n            this.tileKeys.push(sourceTileKey);\n          }\n        }\n      }.bind(this));\n\n      if (useLoadedOnly && loadCount == this.tileKeys.length) {\n        this.finishLoading_();\n      }\n\n      if (zoom <= tileCoord[0] && this.state != TileState.LOADED) {\n        while (zoom > tileGrid.getMinZoom()) {\n          const tile = new VectorImageTile(tileCoord, state, sourceRevision,\n            format, tileLoadFunction, urlTileCoord, tileUrlFunction,\n            sourceTileGrid, tileGrid, sourceTiles, pixelRatio, projection,\n            tileClass, UNDEFINED, --zoom);\n          if (tile.state == TileState.LOADED) {\n            this.interimTile = tile;\n            break;\n          }\n        }\n      }\n    }\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    this.state = TileState.ABORT;\n    this.changed();\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n\n    for (let i = 0, ii = this.tileKeys.length; i < ii; ++i) {\n      const sourceTileKey = this.tileKeys[i];\n      const sourceTile = this.getTile(sourceTileKey);\n      sourceTile.consumers--;\n      if (sourceTile.consumers == 0) {\n        delete this.sourceTiles_[sourceTileKey];\n        sourceTile.dispose();\n      }\n    }\n    this.tileKeys.length = 0;\n    this.sourceTiles_ = null;\n    this.loadListenerKeys_.forEach(unlistenByKey);\n    this.loadListenerKeys_.length = 0;\n    this.sourceTileListenerKeys_.forEach(unlistenByKey);\n    this.sourceTileListenerKeys_.length = 0;\n    super.disposeInternal();\n  }\n\n  /**\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer).toString();\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D();\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.getReplayState(layer).renderedTileRevision == -1 ?\n      null : this.getContext(layer).canvas;\n  }\n\n  /**\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @return {module:ol/VectorImageTile~ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer).toString();\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedRevision: -1,\n        renderedTileRevision: -1\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getKey() {\n    return this.tileKeys.join('/') + '-' + this.sourceRevision_;\n  }\n\n  /**\n   * @param {string} tileKey Key (tileCoord) of the source tile.\n   * @return {module:ol/VectorTile} Source tile.\n   */\n  getTile(tileKey) {\n    return this.sourceTiles_[tileKey];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  load() {\n    // Source tiles with LOADED state - we just count them because once they are\n    // loaded, we're no longer listening to state changes.\n    let leftToLoad = 0;\n    // Source tiles with ERROR state - we track them because they can still have\n    // an ERROR state after another load attempt.\n    const errorSourceTiles = {};\n\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n    }\n    if (this.state == TileState.LOADING) {\n      this.tileKeys.forEach(function(sourceTileKey) {\n        const sourceTile = this.getTile(sourceTileKey);\n        if (sourceTile.state == TileState.IDLE) {\n          sourceTile.setLoader(this.loader_);\n          sourceTile.load();\n        }\n        if (sourceTile.state == TileState.LOADING) {\n          const key = listen(sourceTile, EventType.CHANGE, function(e) {\n            const state = sourceTile.getState();\n            if (state == TileState.LOADED ||\n                state == TileState.ERROR) {\n              const uid = getUid(sourceTile);\n              if (state == TileState.ERROR) {\n                errorSourceTiles[uid] = true;\n              } else {\n                --leftToLoad;\n                delete errorSourceTiles[uid];\n              }\n              if (leftToLoad - Object.keys(errorSourceTiles).length == 0) {\n                this.finishLoading_();\n              }\n            }\n          }.bind(this));\n          this.loadListenerKeys_.push(key);\n          ++leftToLoad;\n        }\n      }.bind(this));\n    }\n    if (leftToLoad - Object.keys(errorSourceTiles).length == 0) {\n      setTimeout(this.finishLoading_.bind(this), 0);\n    }\n  }\n\n  /**\n   * @private\n   */\n  finishLoading_() {\n    let loaded = this.tileKeys.length;\n    let empty = 0;\n    for (let i = loaded - 1; i >= 0; --i) {\n      const state = this.getTile(this.tileKeys[i]).getState();\n      if (state != TileState.LOADED) {\n        --loaded;\n      }\n      if (state == TileState.EMPTY) {\n        ++empty;\n      }\n    }\n    if (loaded == this.tileKeys.length) {\n      this.loadListenerKeys_.forEach(unlistenByKey);\n      this.loadListenerKeys_.length = 0;\n      this.setState(TileState.LOADED);\n    } else {\n      this.setState(empty == this.tileKeys.length ? TileState.EMPTY : TileState.ERROR);\n    }\n  }\n}\n\n\nexport default VectorImageTile;\n\n/**\n * Sets the loader for a tile.\n * @param {module:ol/VectorTile} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  const loader = loadFeaturesXhr(url, tile.getFormat(), tile.onLoad.bind(tile), tile.onError.bind(tile));\n  tile.setLoader(loader);\n}\n","/**\n * @module ol/source/VectorTile\n */\n\nimport TileState from '../TileState.js';\nimport VectorImageTile, {defaultLoadFunction} from '../VectorImageTile.js';\nimport Tile from '../VectorTile.js';\nimport {toSize} from '../size.js';\nimport UrlTile from '../source/UrlTile.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection, createForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=128] Cache size.\n * @property {module:ol/format/Feature} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {module:ol/source/State} [state] Source state.\n * @property {module:ol/VectorTile~TileClass} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level.\n * @property {number} [minZoom] Optional min zoom level.\n * @property {number|module:ol/size~Size} [tileSize=512] Optional tile size.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function() {\n *     var data = // ... fetch data\n *     var format = tile.getFormat();\n *     tile.setProjection(format.readProjection(data));\n *     tile.setFeatures(format.readFeatures(data, {\n *       // featureProjection is not required for ol/format/MVT\n *       featureProjection: map.getView().getProjection()\n *     }));\n *     // the line below is only required for ol/format/MVT\n *     tile.setExtent(format.getLastExtent());\n *   };\n * });\n * ```\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array.<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n */\n\n\nclass VectorTile extends UrlTile {\n\n  /**\n   * @classdesc\n   * Class for layer sources providing vector data divided into a tile grid, to be\n   * used with {@link module:ol/layer/VectorTile~VectorTile}. Although this source receives tiles\n   * with vector features from the server, it is not meant for feature editing.\n   * Features are optimized for rendering, their geometries are clipped at or near\n   * tile boundaries and simplified for a view resolution. See\n   * {@link module:ol/source/Vector} for vector sources that are suitable for feature\n   * editing.\n   *\n   * @fires module:ol/source/Tile~TileSourceEvent\n   * @param {module:ol/source/VectorTile~Options=} options Vector tile options.\n   * @api\n   */\n  constructor(options) {\n    const projection = options.projection || 'EPSG:3857';\n\n    const extent = options.extent || extentFromProjection(projection);\n\n    const tileGrid = options.tileGrid || createXYZ({\n      extent: extent,\n      maxZoom: options.maxZoom || 22,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize || 512\n    });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize !== undefined ? options.cacheSize : 128,\n      extent: extent,\n      opaque: false,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction ? options.tileLoadFunction : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {module:ol/format/Feature}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n       * @private\n       * @type {Object.<string, module:ol/VectorTile>}\n       */\n    this.sourceTiles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n       * @protected\n       * @type {function(new: module:ol/VectorTile, module:ol/tilecoord~TileCoord, module:ol/TileState, string,\n       *        module:ol/format/Feature, module:ol/Tile~LoadFunction)}\n       */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object.<string, module:ol/tilegrid/TileGrid>}\n     */\n    this.tileGrids_ = {};\n\n  }\n\n}\n\n\n/**\n * @return {boolean} The source can have overlapping geometries.\n */\nVectorTile.prototype.getOverlaps = function() {\n  return this.overlaps_;\n};\n\n/**\n * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n * @api\n */\nVectorTile.prototype.clear = function() {\n  this.tileCache.clear();\n  this.sourceTiles_ = {};\n};\n\n/**\n * @inheritDoc\n */\nVectorTile.prototype.getTile = function(z, x, y, pixelRatio, projection) {\n  const tileCoordKey = getKeyZXY(z, x, y);\n  if (this.tileCache.containsKey(tileCoordKey)) {\n    return (\n      /** @type {!module:ol/Tile} */ (this.tileCache.get(tileCoordKey))\n    );\n  } else {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord, projection);\n    const tile = new VectorImageTile(\n      tileCoord,\n      urlTileCoord !== null ? TileState.IDLE : TileState.EMPTY,\n      this.getRevision(),\n      this.format_, this.tileLoadFunction, urlTileCoord, this.tileUrlFunction,\n      this.tileGrid, this.getTileGridForProjection(projection),\n      this.sourceTiles_, pixelRatio, projection, this.tileClass,\n      this.handleTileChange.bind(this), tileCoord[0]);\n\n    this.tileCache.set(tileCoordKey, tile);\n    return tile;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nVectorTile.prototype.getTileGridForProjection = function(projection) {\n  const code = projection.getCode();\n  let tileGrid = this.tileGrids_[code];\n  if (!tileGrid) {\n    // A tile grid that matches the tile size of the source tile grid is more\n    // likely to have 1:1 relationships between source tiles and rendered tiles.\n    const sourceTileGrid = this.tileGrid;\n    tileGrid = this.tileGrids_[code] = createForProjection(projection, undefined,\n      sourceTileGrid ? sourceTileGrid.getTileSize(sourceTileGrid.getMinZoom()) : undefined);\n  }\n  return tileGrid;\n};\n\n\n/**\n * @inheritDoc\n */\nVectorTile.prototype.getTilePixelRatio = function(pixelRatio) {\n  return pixelRatio;\n};\n\n\n/**\n * @inheritDoc\n */\nVectorTile.prototype.getTilePixelSize = function(z, pixelRatio, projection) {\n  const tileGrid = this.getTileGridForProjection(projection);\n  const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n  return [Math.round(tileSize[0] * pixelRatio), Math.round(tileSize[1] * pixelRatio)];\n};\nexport default VectorTile;\n","/**\n * @module ol/source/WMTSRequestEncoding\n */\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nexport default {\n  KVP: 'KVP', // see spec §8\n  REST: 'REST' // see spec §10\n};\n","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport {find} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {module:ol/coordinate~Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and upwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array.<module:ol/coordinate~Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and upwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array.<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array.<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array.<module:ol/size~Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define the grid's extent together with the `origin`.\n * An `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. Note that when the top-left corner of\n * the `extent` is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates increase upwards.\n * @property {number|module:ol/size~Size} [tileSize] Tile size.\n * @property {Array.<module:ol/size~Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n * @property {Array.<number>} [widths] Number of tile columns that cover the grid's\n * extent for each zoom level. Only required when used with a source that has `wrapX`\n * set to `true`, and only when the grid's origin differs from the one of the\n * projection's extent. The array length has to match the length of the `resolutions`\n * array, i.e. each resolution will have a matching entry here.\n */\n\n\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @classdesc\n   * Set the grid pattern for sources accessing WMTS tiled-image servers.\n   *\n   * @param {module:ol/tilegrid/WMTS~Options} options WMTS options.\n   * @api\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes\n    });\n\n    /**\n     * @private\n     * @type {!Array.<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array.<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {module:ol/extent~Extent=} opt_extent An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array.<Object>=} opt_matrixLimits An optional object representing\n *     the available matrices for tileGrid.\n * @return {module:ol/tilegrid/WMTS} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(matrixSet, opt_extent, opt_matrixLimits) {\n\n  /** @type {!Array.<number>} */\n  const resolutions = [];\n  /** @type {!Array.<string>} */\n  const matrixIds = [];\n  /** @type {!Array.<module:ol/coordinate~Coordinate>} */\n  const origins = [];\n  /** @type {!Array.<module:ol/size~Size>} */\n  const tileSizes = [];\n  /** @type {!Array.<module:ol/size~Size>} */\n  const sizes = [];\n\n  const matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n      getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function(a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function(elt) {\n\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = find(matrixLimits, function(elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (elt[identifierPropName].indexOf(':') === -1) {\n          return matrixSet[identifierPropName] + ':' + elt[identifierPropName] === elt_ml[matrixIdsPropName];\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution = elt[scaleDenominatorPropName] * 0.28E-3 / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0]]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(tileWidth == tileHeight ?\n        tileWidth : [tileWidth, tileHeight]);\n      // top-left origin, so height is negative\n      sizes.push([elt['MatrixWidth'], -elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: opt_extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes\n  });\n}\n","/**\n * @module ol/source/WMTS\n */\n\nimport {expandUrl, createFromTileUrlFunctions, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {find, findIndex, includes} from '../array.js';\nimport {containsExtent} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, equivalent, transformExtent} from '../proj.js';\nimport TileImage from '../source/TileImage.js';\nimport WMTSRequestEncoding from '../source/WMTSRequestEncoding.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {module:ol/tilegrid/WMTS} tileGrid Tile grid.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/source/WMTSRequestEncoding|string} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {module:ol/ImageTile~TileClass} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [version='image/jpeg'] Image format.\n * @property {string} [format='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array.<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\nclass WMTS extends TileImage {\n\n  /**\n   * @classdesc\n   * Layer source for tile data from WMTS servers.\n   *\n   * @param {module:ol/source/WMTS~Options=} options WMTS options.\n   * @api\n   */\n  constructor(options) {\n\n    // TODO: add support for TileMatrixLimits\n\n    const requestEncoding = options.requestEncoding !== undefined ?\n      /** @type {module:ol/source/WMTSRequestEncoding} */ (options.requestEncoding) :\n      WMTSRequestEncoding.KVP;\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    const tileGrid = options.tileGrid;\n\n    let urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: nullTileUrlFunction,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ = options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {module:ol/source/WMTSRequestEncoding}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this)));\n    }\n\n  }\n\n}\n\n/**\n * Set the URLs to use for requests.\n * URLs may contain OCG conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n * @override\n */\nWMTS.prototype.setUrls = function(urls) {\n  this.urls = urls;\n  const key = urls.join('\\n');\n  this.setTileUrlFunction(this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) :\n    createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this))), key);\n};\n\n/**\n * Get the dimensions, i.e. those passed to the constructor through the\n * \"dimensions\" option, and possibly updated using the updateDimensions\n * method.\n * @return {!Object} Dimensions.\n * @api\n */\nWMTS.prototype.getDimensions = function() {\n  return this.dimensions_;\n};\n\n\n/**\n * Return the image format of the WMTS source.\n * @return {string} Format.\n * @api\n */\nWMTS.prototype.getFormat = function() {\n  return this.format_;\n};\n\n\n/**\n * Return the layer of the WMTS source.\n * @return {string} Layer.\n * @api\n */\nWMTS.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * Return the matrix set of the WMTS source.\n * @return {string} MatrixSet.\n * @api\n */\nWMTS.prototype.getMatrixSet = function() {\n  return this.matrixSet_;\n};\n\n\n/**\n * Return the request encoding, either \"KVP\" or \"REST\".\n * @return {module:ol/source/WMTSRequestEncoding} Request encoding.\n * @api\n */\nWMTS.prototype.getRequestEncoding = function() {\n  return this.requestEncoding_;\n};\n\n\n/**\n * Return the style of the WMTS source.\n * @return {string} Style.\n * @api\n */\nWMTS.prototype.getStyle = function() {\n  return this.style_;\n};\n\n\n/**\n * Return the version of the WMTS source.\n * @return {string} Version.\n * @api\n */\nWMTS.prototype.getVersion = function() {\n  return this.version_;\n};\n\n\n/**\n * @private\n * @return {string} The key for the current dimensions.\n */\nWMTS.prototype.getKeyForDimensions_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.dimensions_) {\n    res[i++] = key + '-' + this.dimensions_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * Update the dimensions.\n * @param {Object} dimensions Dimensions.\n * @api\n */\nWMTS.prototype.updateDimensions = function(dimensions) {\n  assign(this.dimensions_, dimensions);\n  this.setKey(this.getKeyForDimensions_());\n};\n\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {?module:ol/source/WMTS~Options} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = find(layers, function(elt, index, array) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (l === null) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          const tileMatrixSet = find(tileMatrixSets, function(el) {\n            return el['Identifier'] == elt['TileMatrixSet'];\n          });\n          const supportedCRS = tileMatrixSet['SupportedCRS'];\n          const proj1 = getProjection(supportedCRS.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n                getProjection(supportedCRS);\n          const proj2 = getProjection(config['projection']);\n          if (proj1 && proj2) {\n            return equivalent(proj1, proj2);\n          } else {\n            return supportedCRS == config['projection'];\n          }\n        });\n    } else {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          return elt['TileMatrixSet'] == config['matrixSet'];\n        });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet = /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits = /** @type {Array.<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = findIndex(l['Style'], function(elt, index, array) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    } else {\n      return elt['isDefault'];\n    }\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function(elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = find(matrixSets, function(elt, index, array) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n        getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  const wgs84BoundingBox = l['WGS84BoundingBox'];\n  let extent, wrapX;\n  if (wgs84BoundingBox !== undefined) {\n    const wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    wrapX = (wgs84BoundingBox[0] == wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] == wgs84ProjectionExtent[2]);\n    extent = transformExtent(\n      wgs84BoundingBox, 'EPSG:4326', projection);\n    const projectionExtent = projection.getExtent();\n    if (projectionExtent) {\n      // If possible, do a sanity check on the extent - it should never be\n      // bigger than the validity extent of the projection of a matrix set.\n      if (!containsExtent(projectionExtent, extent)) {\n        extent = undefined;\n      }\n    }\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(matrixSetObj, extent, matrixLimits);\n\n  /** @type {!Array.<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if ('OperationsMetadata' in wmtsCap && 'GetTile' in wmtsCap['OperationsMetadata']) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = find(gets[i]['Constraint'], function(element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === WMTSRequestEncoding.KVP) {\n          if (includes(encodings, WMTSRequestEncoding.KVP)) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = WMTSRequestEncoding.KVP;\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = WMTSRequestEncoding.REST;\n    l['ResourceURL'].forEach(function(element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin']\n  };\n}\n\n/**\n * @param {string} template Template.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n * @this {module:ol/source/WMTS}\n */\nfunction createFromWMTSTemplate(template) {\n  const requestEncoding = this.requestEncoding_;\n\n  // context property names are lower case to allow for a case insensitive\n  // replacement as some services use different naming conventions\n  const context = {\n    'layer': this.layer_,\n    'style': this.style_,\n    'tilematrixset': this.matrixSet_\n  };\n\n  if (requestEncoding == WMTSRequestEncoding.KVP) {\n    assign(context, {\n      'Service': 'WMTS',\n      'Request': 'GetTile',\n      'Version': this.version_,\n      'Format': this.format_\n    });\n  }\n\n  // TODO: we may want to create our own appendParams function so that params\n  // order conforms to wmts spec guidance, and so that we can avoid to escape\n  // special template params\n\n  template = (requestEncoding == WMTSRequestEncoding.KVP) ?\n    appendParams(template, context) :\n    template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n      return (p.toLowerCase() in context) ? context[p.toLowerCase()] : m;\n    });\n\n  const tileGrid = this.tileGrid;\n\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const localContext = {\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n          'TileCol': tileCoord[1],\n          'TileRow': -tileCoord[2] - 1\n        };\n        assign(localContext, this.dimensions_);\n        let url = template;\n        if (requestEncoding == WMTSRequestEncoding.KVP) {\n          url = appendParams(url, localContext);\n        } else {\n          url = url.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n            return localContext[p];\n          });\n        }\n        return url;\n      }\n    }\n  );\n}\n\n\nexport default WMTS;\n","import $ol$Collection from './ol/Collection';\nimport $ol$Feature from './ol/Feature';\nimport $ol$Geolocation from './ol/Geolocation';\nimport $ol$Graticule from './ol/Graticule';\nimport $ol$Image from './ol/Image';\nimport $ol$ImageTile from './ol/ImageTile';\nimport $ol$Kinetic from './ol/Kinetic';\nimport $ol$Map from './ol/Map';\nimport $ol$MapBrowserEvent from './ol/MapBrowserEvent';\nimport $ol$Object from './ol/Object';\nimport $ol$Observable from './ol/Observable';\nimport $ol$Overlay from './ol/Overlay';\nimport $ol$PluggableMap from './ol/PluggableMap';\nimport $ol$Tile from './ol/Tile';\nimport $ol$VectorTile from './ol/VectorTile';\nimport $ol$View from './ol/View';\nimport $ol$WebGLMap from './ol/WebGLMap';\nimport $ol$control$Attribution from './ol/control/Attribution';\nimport $ol$control$Control from './ol/control/Control';\nimport $ol$control$FullScreen from './ol/control/FullScreen';\nimport $ol$control$MousePosition from './ol/control/MousePosition';\nimport $ol$control$OverviewMap from './ol/control/OverviewMap';\nimport $ol$control$Rotate from './ol/control/Rotate';\nimport $ol$control$ScaleLine from './ol/control/ScaleLine';\nimport $ol$control$Zoom from './ol/control/Zoom';\nimport $ol$control$ZoomSlider from './ol/control/ZoomSlider';\nimport $ol$control$ZoomToExtent from './ol/control/ZoomToExtent';\nimport $ol$events$Event from './ol/events/Event';\nimport $ol$events$EventTarget from './ol/events/EventTarget';\nimport $ol$format$EsriJSON from './ol/format/EsriJSON';\nimport $ol$format$Feature from './ol/format/Feature';\nimport $ol$format$GML from './ol/format/GML';\nimport $ol$format$GML2 from './ol/format/GML2';\nimport $ol$format$GML3 from './ol/format/GML3';\nimport $ol$format$GPX from './ol/format/GPX';\nimport $ol$format$GeoJSON from './ol/format/GeoJSON';\nimport $ol$format$IGC from './ol/format/IGC';\nimport $ol$format$JSONFeature from './ol/format/JSONFeature';\nimport $ol$format$KML from './ol/format/KML';\nimport $ol$format$MVT from './ol/format/MVT';\nimport $ol$format$OSMXML from './ol/format/OSMXML';\nimport $ol$format$Polyline from './ol/format/Polyline';\nimport $ol$format$TextFeature from './ol/format/TextFeature';\nimport $ol$format$TopoJSON from './ol/format/TopoJSON';\nimport $ol$format$WFS from './ol/format/WFS';\nimport $ol$format$WKT from './ol/format/WKT';\nimport $ol$format$WMSCapabilities from './ol/format/WMSCapabilities';\nimport $ol$format$WMSGetFeatureInfo from './ol/format/WMSGetFeatureInfo';\nimport $ol$format$WMTSCapabilities from './ol/format/WMTSCapabilities';\nimport $ol$format$XML from './ol/format/XML';\nimport $ol$format$XMLFeature from './ol/format/XMLFeature';\nimport $ol$format$filter$Within from './ol/format/filter/Within';\nimport $ol$geom$Circle from './ol/geom/Circle';\nimport $ol$geom$Geometry from './ol/geom/Geometry';\nimport $ol$geom$GeometryCollection from './ol/geom/GeometryCollection';\nimport $ol$geom$LineString from './ol/geom/LineString';\nimport $ol$geom$LinearRing from './ol/geom/LinearRing';\nimport $ol$geom$MultiLineString from './ol/geom/MultiLineString';\nimport $ol$geom$MultiPoint from './ol/geom/MultiPoint';\nimport $ol$geom$MultiPolygon from './ol/geom/MultiPolygon';\nimport $ol$geom$Point from './ol/geom/Point';\nimport $ol$geom$Polygon from './ol/geom/Polygon';\nimport $ol$geom$SimpleGeometry from './ol/geom/SimpleGeometry';\nimport $ol$interaction$DoubleClickZoom from './ol/interaction/DoubleClickZoom';\nimport $ol$interaction$DragAndDrop from './ol/interaction/DragAndDrop';\nimport $ol$interaction$DragBox from './ol/interaction/DragBox';\nimport $ol$interaction$DragZoom from './ol/interaction/DragZoom';\nimport $ol$interaction$Draw from './ol/interaction/Draw';\nimport $ol$interaction$Extent from './ol/interaction/Extent';\nimport $ol$interaction$Interaction from './ol/interaction/Interaction';\nimport $ol$interaction$KeyboardZoom from './ol/interaction/KeyboardZoom';\nimport $ol$interaction$Modify from './ol/interaction/Modify';\nimport $ol$interaction$MouseWheelZoom from './ol/interaction/MouseWheelZoom';\nimport $ol$interaction$Pointer from './ol/interaction/Pointer';\nimport $ol$interaction$Select from './ol/interaction/Select';\nimport $ol$interaction$Snap from './ol/interaction/Snap';\nimport $ol$interaction$Translate from './ol/interaction/Translate';\nimport $ol$layer$Base from './ol/layer/Base';\nimport $ol$layer$Group from './ol/layer/Group';\nimport $ol$layer$Heatmap from './ol/layer/Heatmap';\nimport $ol$layer$Image from './ol/layer/Image';\nimport $ol$layer$Layer from './ol/layer/Layer';\nimport $ol$layer$Tile from './ol/layer/Tile';\nimport $ol$layer$Vector from './ol/layer/Vector';\nimport $ol$layer$VectorTile from './ol/layer/VectorTile';\nimport $ol$proj$Projection from './ol/proj/Projection';\nimport $ol$render$Feature from './ol/render/Feature';\nimport $ol$render$VectorContext from './ol/render/VectorContext';\nimport $ol$render$canvas$Immediate from './ol/render/canvas/Immediate';\nimport $ol$render$webgl$Immediate from './ol/render/webgl/Immediate';\nimport $ol$renderer$canvas$VectorTileLayer from './ol/renderer/canvas/VectorTileLayer';\nimport $ol$source$BingMaps from './ol/source/BingMaps';\nimport $ol$source$CartoDB from './ol/source/CartoDB';\nimport $ol$source$Cluster from './ol/source/Cluster';\nimport $ol$source$ImageArcGISRest from './ol/source/ImageArcGISRest';\nimport $ol$source$ImageMapGuide from './ol/source/ImageMapGuide';\nimport $ol$source$ImageWMS from './ol/source/ImageWMS';\nimport $ol$source$OSM from './ol/source/OSM';\nimport $ol$source$Raster from './ol/source/Raster';\nimport $ol$source$Source from './ol/source/Source';\nimport $ol$source$Tile from './ol/source/Tile';\nimport $ol$source$TileArcGISRest from './ol/source/TileArcGISRest';\nimport $ol$source$TileImage from './ol/source/TileImage';\nimport $ol$source$TileJSON from './ol/source/TileJSON';\nimport $ol$source$TileWMS from './ol/source/TileWMS';\nimport $ol$source$UTFGrid from './ol/source/UTFGrid';\nimport $ol$source$UrlTile from './ol/source/UrlTile';\nimport $ol$source$Vector from './ol/source/Vector';\nimport $ol$source$VectorTile from './ol/source/VectorTile';\nimport $ol$source$WMTS from './ol/source/WMTS';\nimport $ol$style$Circle from './ol/style/Circle';\nimport $ol$style$Fill from './ol/style/Fill';\nimport $ol$style$Icon from './ol/style/Icon';\nimport $ol$style$IconImageCache from './ol/style/IconImageCache';\nimport $ol$style$Image from './ol/style/Image';\nimport $ol$style$RegularShape from './ol/style/RegularShape';\nimport $ol$style$Stroke from './ol/style/Stroke';\nimport $ol$style$Style from './ol/style/Style';\nimport $ol$style$Text from './ol/style/Text';\nimport $ol$tilegrid$TileGrid from './ol/tilegrid/TileGrid';\nimport $ol$tilegrid$WMTS from './ol/tilegrid/WMTS';\nimport $ol$webgl$Context from './ol/webgl/Context';\nimport * as _ol from './ol';\nimport * as _ol_Observable from './ol/Observable';\nimport * as _ol_color from './ol/color';\nimport * as _ol_colorlike from './ol/colorlike';\nimport * as _ol_control from './ol/control';\nimport * as _ol_control_Attribution from './ol/control/Attribution';\nimport * as _ol_control_MousePosition from './ol/control/MousePosition';\nimport * as _ol_control_OverviewMap from './ol/control/OverviewMap';\nimport * as _ol_control_Rotate from './ol/control/Rotate';\nimport * as _ol_control_ScaleLine from './ol/control/ScaleLine';\nimport * as _ol_control_ZoomSlider from './ol/control/ZoomSlider';\nimport * as _ol_coordinate from './ol/coordinate';\nimport * as _ol_easing from './ol/easing';\nimport * as _ol_events_condition from './ol/events/condition';\nimport * as _ol_extent from './ol/extent';\nimport * as _ol_featureloader from './ol/featureloader';\nimport * as _ol_format_Polyline from './ol/format/Polyline';\nimport * as _ol_format_WFS from './ol/format/WFS';\nimport * as _ol_format_filter from './ol/format/filter';\nimport * as _ol_geom_Polygon from './ol/geom/Polygon';\nimport * as _ol_has from './ol/has';\nimport * as _ol_interaction from './ol/interaction';\nimport * as _ol_interaction_Draw from './ol/interaction/Draw';\nimport * as _ol_interaction_Pointer from './ol/interaction/Pointer';\nimport * as _ol_loadingstrategy from './ol/loadingstrategy';\nimport * as _ol_proj from './ol/proj';\nimport * as _ol_proj_Units from './ol/proj/Units';\nimport * as _ol_render from './ol/render';\nimport * as _ol_render_canvas from './ol/render/canvas';\nimport * as _ol_size from './ol/size';\nimport * as _ol_sphere from './ol/sphere';\nimport * as _ol_tilegrid from './ol/tilegrid';\nimport * as _ol_xml from './ol/xml';\n\nvar ol = window['ol'] = {};\n\nol.color = {};\nol.colorlike = {};\nol.control = {};\nol.coordinate = {};\nol.easing = {};\nol.events = {};\nol.events.condition = {};\nol.extent = {};\nol.featureloader = {};\nol.format = {};\nol.format.filter = {};\nol.geom = {};\nol.has = {};\nol.interaction = {};\nol.layer = {};\nol.loadingstrategy = {};\nol.proj = {};\nol.proj.Units = {};\nol.render = {};\nol.render.canvas = {};\nol.renderer = {};\nol.renderer.canvas = {};\nol.size = {};\nol.source = {};\nol.sphere = {};\nol.style = {};\nol.tilegrid = {};\nol.xml = {};\nol.Collection = $ol$Collection;\nol.Feature = $ol$Feature;\nol.Geolocation = $ol$Geolocation;\nol.Graticule = $ol$Graticule;\nol.Kinetic = $ol$Kinetic;\nol.Map = $ol$Map;\nol.Object = $ol$Object;\nol.Observable = $ol$Observable;\nol.Observable.unByKey = _ol_Observable.unByKey;\nol.Overlay = $ol$Overlay;\nol.PluggableMap = $ol$PluggableMap;\nol.View = $ol$View;\nol.WebGLMap = $ol$WebGLMap;\nol.color.asArray = _ol_color.asArray;\nol.color.asString = _ol_color.asString;\nol.colorlike.asColorLike = _ol_colorlike.asColorLike;\nol.control.Attribution = $ol$control$Attribution;\nol.control.Attribution.render = _ol_control_Attribution.render;\nol.control.Control = $ol$control$Control;\nol.control.FullScreen = $ol$control$FullScreen;\nol.control.MousePosition = $ol$control$MousePosition;\nol.control.MousePosition.render = _ol_control_MousePosition.render;\nol.control.OverviewMap = $ol$control$OverviewMap;\nol.control.OverviewMap.render = _ol_control_OverviewMap.render;\nol.control.Rotate = $ol$control$Rotate;\nol.control.Rotate.render = _ol_control_Rotate.render;\nol.control.ScaleLine = $ol$control$ScaleLine;\nol.control.ScaleLine.render = _ol_control_ScaleLine.render;\nol.control.Zoom = $ol$control$Zoom;\nol.control.ZoomSlider = $ol$control$ZoomSlider;\nol.control.ZoomSlider.render = _ol_control_ZoomSlider.render;\nol.control.ZoomToExtent = $ol$control$ZoomToExtent;\nol.control.defaults = _ol_control.defaults;\nol.coordinate.add = _ol_coordinate.add;\nol.coordinate.createStringXY = _ol_coordinate.createStringXY;\nol.coordinate.format = _ol_coordinate.format;\nol.coordinate.rotate = _ol_coordinate.rotate;\nol.coordinate.toStringHDMS = _ol_coordinate.toStringHDMS;\nol.coordinate.toStringXY = _ol_coordinate.toStringXY;\nol.easing.easeIn = _ol_easing.easeIn;\nol.easing.easeOut = _ol_easing.easeOut;\nol.easing.inAndOut = _ol_easing.inAndOut;\nol.easing.linear = _ol_easing.linear;\nol.easing.upAndDown = _ol_easing.upAndDown;\nol.events.condition.altKeyOnly = _ol_events_condition.altKeyOnly;\nol.events.condition.altShiftKeysOnly = _ol_events_condition.altShiftKeysOnly;\nol.events.condition.always = _ol_events_condition.always;\nol.events.condition.click = _ol_events_condition.click;\nol.events.condition.doubleClick = _ol_events_condition.doubleClick;\nol.events.condition.focus = _ol_events_condition.focus;\nol.events.condition.mouseOnly = _ol_events_condition.mouseOnly;\nol.events.condition.never = _ol_events_condition.never;\nol.events.condition.noModifierKeys = _ol_events_condition.noModifierKeys;\nol.events.condition.platformModifierKeyOnly = _ol_events_condition.platformModifierKeyOnly;\nol.events.condition.pointerMove = _ol_events_condition.pointerMove;\nol.events.condition.primaryAction = _ol_events_condition.primaryAction;\nol.events.condition.shiftKeyOnly = _ol_events_condition.shiftKeyOnly;\nol.events.condition.singleClick = _ol_events_condition.singleClick;\nol.events.condition.targetNotEditable = _ol_events_condition.targetNotEditable;\nol.extent.applyTransform = _ol_extent.applyTransform;\nol.extent.boundingExtent = _ol_extent.boundingExtent;\nol.extent.buffer = _ol_extent.buffer;\nol.extent.containsCoordinate = _ol_extent.containsCoordinate;\nol.extent.containsExtent = _ol_extent.containsExtent;\nol.extent.containsXY = _ol_extent.containsXY;\nol.extent.createEmpty = _ol_extent.createEmpty;\nol.extent.equals = _ol_extent.equals;\nol.extent.extend = _ol_extent.extend;\nol.extent.getArea = _ol_extent.getArea;\nol.extent.getBottomLeft = _ol_extent.getBottomLeft;\nol.extent.getBottomRight = _ol_extent.getBottomRight;\nol.extent.getCenter = _ol_extent.getCenter;\nol.extent.getHeight = _ol_extent.getHeight;\nol.extent.getIntersection = _ol_extent.getIntersection;\nol.extent.getSize = _ol_extent.getSize;\nol.extent.getTopLeft = _ol_extent.getTopLeft;\nol.extent.getTopRight = _ol_extent.getTopRight;\nol.extent.getWidth = _ol_extent.getWidth;\nol.extent.intersects = _ol_extent.intersects;\nol.extent.isEmpty = _ol_extent.isEmpty;\nol.featureloader.xhr = _ol_featureloader.xhr;\nol.format.EsriJSON = $ol$format$EsriJSON;\nol.format.Feature = $ol$format$Feature;\nol.format.GML = $ol$format$GML;\nol.format.GML2 = $ol$format$GML2;\nol.format.GML3 = $ol$format$GML3;\nol.format.GPX = $ol$format$GPX;\nol.format.GeoJSON = $ol$format$GeoJSON;\nol.format.IGC = $ol$format$IGC;\nol.format.KML = $ol$format$KML;\nol.format.MVT = $ol$format$MVT;\nol.format.OSMXML = $ol$format$OSMXML;\nol.format.Polyline = $ol$format$Polyline;\nol.format.Polyline.decodeDeltas = _ol_format_Polyline.decodeDeltas;\nol.format.Polyline.decodeFloats = _ol_format_Polyline.decodeFloats;\nol.format.Polyline.encodeDeltas = _ol_format_Polyline.encodeDeltas;\nol.format.Polyline.encodeFloats = _ol_format_Polyline.encodeFloats;\nol.format.TopoJSON = $ol$format$TopoJSON;\nol.format.WFS = $ol$format$WFS;\nol.format.WFS.writeFilter = _ol_format_WFS.writeFilter;\nol.format.WKT = $ol$format$WKT;\nol.format.WMSCapabilities = $ol$format$WMSCapabilities;\nol.format.WMSGetFeatureInfo = $ol$format$WMSGetFeatureInfo;\nol.format.WMTSCapabilities = $ol$format$WMTSCapabilities;\nol.format.filter.Within = $ol$format$filter$Within;\nol.format.filter.and = _ol_format_filter.and;\nol.format.filter.bbox = _ol_format_filter.bbox;\nol.format.filter.between = _ol_format_filter.between;\nol.format.filter.contains = _ol_format_filter.contains;\nol.format.filter.during = _ol_format_filter.during;\nol.format.filter.equalTo = _ol_format_filter.equalTo;\nol.format.filter.greaterThan = _ol_format_filter.greaterThan;\nol.format.filter.greaterThanOrEqualTo = _ol_format_filter.greaterThanOrEqualTo;\nol.format.filter.intersects = _ol_format_filter.intersects;\nol.format.filter.isNull = _ol_format_filter.isNull;\nol.format.filter.lessThan = _ol_format_filter.lessThan;\nol.format.filter.lessThanOrEqualTo = _ol_format_filter.lessThanOrEqualTo;\nol.format.filter.like = _ol_format_filter.like;\nol.format.filter.not = _ol_format_filter.not;\nol.format.filter.notEqualTo = _ol_format_filter.notEqualTo;\nol.format.filter.or = _ol_format_filter.or;\nol.format.filter.within = _ol_format_filter.within;\nol.geom.Circle = $ol$geom$Circle;\nol.geom.Geometry = $ol$geom$Geometry;\nol.geom.GeometryCollection = $ol$geom$GeometryCollection;\nol.geom.LineString = $ol$geom$LineString;\nol.geom.LinearRing = $ol$geom$LinearRing;\nol.geom.MultiLineString = $ol$geom$MultiLineString;\nol.geom.MultiPoint = $ol$geom$MultiPoint;\nol.geom.MultiPolygon = $ol$geom$MultiPolygon;\nol.geom.Point = $ol$geom$Point;\nol.geom.Polygon = $ol$geom$Polygon;\nol.geom.Polygon.circular = _ol_geom_Polygon.circular;\nol.geom.Polygon.fromCircle = _ol_geom_Polygon.fromCircle;\nol.geom.Polygon.fromExtent = _ol_geom_Polygon.fromExtent;\nol.geom.SimpleGeometry = $ol$geom$SimpleGeometry;\nol.has.DEVICE_PIXEL_RATIO = _ol_has.DEVICE_PIXEL_RATIO;\nol.has.GEOLOCATION = _ol_has.GEOLOCATION;\nol.has.TOUCH = _ol_has.TOUCH;\nol.inherits = _ol.inherits;\nol.interaction.DoubleClickZoom = $ol$interaction$DoubleClickZoom;\nol.interaction.DragAndDrop = $ol$interaction$DragAndDrop;\nol.interaction.DragBox = $ol$interaction$DragBox;\nol.interaction.DragZoom = $ol$interaction$DragZoom;\nol.interaction.Draw = $ol$interaction$Draw;\nol.interaction.Draw.createBox = _ol_interaction_Draw.createBox;\nol.interaction.Draw.createRegularPolygon = _ol_interaction_Draw.createRegularPolygon;\nol.interaction.Draw.handleEvent = _ol_interaction_Draw.handleEvent;\nol.interaction.Extent = $ol$interaction$Extent;\nol.interaction.Interaction = $ol$interaction$Interaction;\nol.interaction.KeyboardZoom = $ol$interaction$KeyboardZoom;\nol.interaction.Modify = $ol$interaction$Modify;\nol.interaction.MouseWheelZoom = $ol$interaction$MouseWheelZoom;\nol.interaction.Pointer = $ol$interaction$Pointer;\nol.interaction.Pointer.handleEvent = _ol_interaction_Pointer.handleEvent;\nol.interaction.Select = $ol$interaction$Select;\nol.interaction.Snap = $ol$interaction$Snap;\nol.interaction.Translate = $ol$interaction$Translate;\nol.interaction.defaults = _ol_interaction.defaults;\nol.layer.Base = $ol$layer$Base;\nol.layer.Group = $ol$layer$Group;\nol.layer.Heatmap = $ol$layer$Heatmap;\nol.layer.Image = $ol$layer$Image;\nol.layer.Layer = $ol$layer$Layer;\nol.layer.Tile = $ol$layer$Tile;\nol.layer.Vector = $ol$layer$Vector;\nol.layer.VectorTile = $ol$layer$VectorTile;\nol.loadingstrategy.all = _ol_loadingstrategy.all;\nol.loadingstrategy.bbox = _ol_loadingstrategy.bbox;\nol.loadingstrategy.tile = _ol_loadingstrategy.tile;\nol.proj.Projection = $ol$proj$Projection;\nol.proj.Units.METERS_PER_UNIT = _ol_proj_Units.METERS_PER_UNIT;\nol.proj.addCoordinateTransforms = _ol_proj.addCoordinateTransforms;\nol.proj.addEquivalentProjections = _ol_proj.addEquivalentProjections;\nol.proj.addProjection = _ol_proj.addProjection;\nol.proj.equivalent = _ol_proj.equivalent;\nol.proj.fromLonLat = _ol_proj.fromLonLat;\nol.proj.get = _ol_proj.get;\nol.proj.getPointResolution = _ol_proj.getPointResolution;\nol.proj.getTransform = _ol_proj.getTransform;\nol.proj.toLonLat = _ol_proj.toLonLat;\nol.proj.transform = _ol_proj.transform;\nol.proj.transformExtent = _ol_proj.transformExtent;\nol.render.VectorContext = $ol$render$VectorContext;\nol.render.canvas.labelCache = _ol_render_canvas.labelCache;\nol.render.toContext = _ol_render.toContext;\nol.renderer.canvas.VectorTileLayer = $ol$renderer$canvas$VectorTileLayer;\nol.size.toSize = _ol_size.toSize;\nol.source.BingMaps = $ol$source$BingMaps;\nol.source.CartoDB = $ol$source$CartoDB;\nol.source.Cluster = $ol$source$Cluster;\nol.source.ImageArcGISRest = $ol$source$ImageArcGISRest;\nol.source.ImageMapGuide = $ol$source$ImageMapGuide;\nol.source.ImageWMS = $ol$source$ImageWMS;\nol.source.OSM = $ol$source$OSM;\nol.source.Raster = $ol$source$Raster;\nol.source.Source = $ol$source$Source;\nol.source.Tile = $ol$source$Tile;\nol.source.TileArcGISRest = $ol$source$TileArcGISRest;\nol.source.TileImage = $ol$source$TileImage;\nol.source.TileJSON = $ol$source$TileJSON;\nol.source.TileWMS = $ol$source$TileWMS;\nol.source.UTFGrid = $ol$source$UTFGrid;\nol.source.Vector = $ol$source$Vector;\nol.source.VectorTile = $ol$source$VectorTile;\nol.source.WMTS = $ol$source$WMTS;\nol.sphere.getArea = _ol_sphere.getArea;\nol.sphere.getDistance = _ol_sphere.getDistance;\nol.sphere.getLength = _ol_sphere.getLength;\nol.style.Circle = $ol$style$Circle;\nol.style.Fill = $ol$style$Fill;\nol.style.Icon = $ol$style$Icon;\nol.style.Image = $ol$style$Image;\nol.style.RegularShape = $ol$style$RegularShape;\nol.style.Stroke = $ol$style$Stroke;\nol.style.Style = $ol$style$Style;\nol.style.Text = $ol$style$Text;\nol.tilegrid.TileGrid = $ol$tilegrid$TileGrid;\nol.tilegrid.WMTS = $ol$tilegrid$WMTS;\nol.tilegrid.createXYZ = _ol_tilegrid.createXYZ;\nol.xml.getAllTextContent = _ol_xml.getAllTextContent;\nol.xml.parse = _ol_xml.parse;\n","/**\n * @module ol/render\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {create as createTransform, scale as scaleTransform} from './transform.js';\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\n\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {module:ol/Feature|module:ol/render/Feature} feature\n * @property {module:ol/geom/SimpleGeometry} geometry\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and returns a `{number}`.\n *\n * @typedef {function((module:ol/Feature|module:ol/render/Feature),\n *           (module:ol/Feature|module:ol/render/Feature)):number} OrderFunction\n */\n\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {module:ol/size~Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render';\n * import Fill from 'ol/style/Fill';\n * import Polygon from 'ol/geom/Polygon';\n *\n * var canvas = document.createElement('canvas');\n * var render = toContext(canvas.getContext('2d'),\n *     { size: [100, 100] });\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]]));\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {module:ol/render~ToContextOptions=} opt_options Options.\n * @return {module:ol/render/canvas/Immediate} Canvas Immediate.\n * @api\n */\nexport function toContext(context, opt_options) {\n  const canvas = context.canvas;\n  const options = opt_options ? opt_options : {};\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  const size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  const extent = [0, 0, canvas.width, canvas.height];\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n"],"names":["let","uidCounter_","getUid","obj","ol_uid","const","AssertionError","code","message","split","super","this","name","Error","assign","Object","target","var_sources","TypeError","output","i","ii","arguments","length","source","key","hasOwnProperty","clear","object","property","getValues","values","push","isEmpty","findListener","listeners","listener","opt_this","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","type","listenerMap","ol_lm","undefined","getListenerMap","removeListeners","removeEventListener","boundListener","keys","listen","opt_once","callOnce","addEventListener","evt","unlistenByKey","call","listenOnce","unlisten","indexOf","splice","unlistenAll","TRUE","FALSE","UNDEFINED","Disposable","dispose","disposed_","disposeInternal","prototype","Event","propagationStopped","stopPropagation","preventDefault","EventTarget","pendingRemovals_","dispatching_","listeners_","dispatchEvent","event","propagate","pendingRemovals","hasListener","opt_type","index","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","Observable","revision_","changed","EventType","getRevision","on","Array","isArray","len","once","un","ObjectEvent","oldValue","BaseObject","opt_values","values_","setProperties","get","value","getKeys","getProperties","notify","eventType","getChangeEventType","ObjectEventType","set","opt_silent","unset","changeEventTypeCache","Property","CollectionEvent","opt_element","element","Collection","opt_array","opt_options","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","arr","forEach","f","array","getArray","item","insertAt","elem","CollectionEventType","removeAt","n","remove","prev","setAt","j","opt_except","assert","assertion","errorCode","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","buffer","opt_extent","clone","slice","closestSquaredDistanceXY","x","y","dx","dy","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","Relationship","Infinity","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","end","stride","extendFlatCoordinates","equals","extendXY","Math","min","max","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getForViewAndSize","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","getIntersection","intersection","intersects","scaleFromCenter","deltaX","deltaY","applyTransform","transformFn","xs","ys","apply","transform2D","transform","opt_dest","dest","translate","k","clamp","cosh","exp","squaredSegmentDistance","t","squaredDistance","toDegrees","angleInRadians","PI","toRadians","angleInDegrees","modulo","a","b","r","lerp","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","getLengthInternal","getAreaInternal","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","halfSize","log","tan","toEPSG4326","atan","EPSG4326Projection","opt_axisOrientation","cache","projections2","forwardTransform","inverseTransform","transforms","add","destination","sourceCode","destinationCode","cloneTransform","identityTransform","addProjection","projection","addTransformFunc","projectionLike","opt_units","pointResolution","getter","getTransformFromProjections","vertices","addEquivalentProjections","projections","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransform","transformExtent","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","tmp_","reset","multiply","transform1","transform2","a1","b1","d1","e1","f1","a2","b2","d2","e2","f2","c","d","e","setFromArray","rotate","angle","scale","compose","dx1","dy1","sx","sy","dx2","dy2","invert","mat","det","tmpTransform","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","closestPointXY","closestPoint","minSquaredDistance","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","anchor","opt_sy","opt_anchor","simplify","tolerance","getSimplifiedGeometry","squaredTolerance","getType","intersectsExtent","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","toString","cacheSize","fromString","s","g","exec","el","document","createElement","style","body","appendChild","rgb","getComputedStyle","removeChild","fromNamed","hasAlpha","parseInt","substr","normalize","map","Number","fromStringInternal_","asArray","asColorLike","CanvasPattern","CanvasGradient","createCanvasContext2D","opt_width","opt_height","canvas","width","height","getContext","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChildren","lastChild","MAX_TEXTURE_SIZE","EXTENSIONS","ARRAY_BUFFER","FLOAT","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_2D","CLAMP_TO_EDGE","FRAMEBUFFER","CONTEXT_IDS","opt_attributes","context","window","gl","failIfMajorPerformanceCaveat","getParameter","getSupportedExtensions","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","CANVAS_LINE_DASH","has","setLineDash","GEOLOCATION","TOUCH","POINTER","MSPOINTER","IDLE","LOADING","LOADED","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","font","family","fontFamily","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","getCount","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","replace","setSize","prune","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineJoin","defaultStrokeStyle","defaultTextAlign","defaultPadding","labelCache","checkedFonts","measureContext","textHeights","checkFont","interval","referenceWidth","retries","checked","referenceFonts","text","isAvailable","getMeasureContext","available","referenceFont","measureText","check","done","clearInterval","fontSpec","fontFamilies","setInterval","span","heights","measureTextHeight","textContent","margin","padding","position","left","offsetHeight","measureTextWidth","rotateAtOffset","offsetX","offsetY","resetTransform","drawImage","opacity","image","originX","originY","w","h","alpha","globalAlpha","setTransform","ImageStyle","opacity_","rotateWithView_","rotateWithView","rotation_","scale_","snapToPixel_","snapToPixel","getOpacity","getRotateWithView","getRotation","getScale","getSnapToPixel","getAnchor","getImage","pixelRatio","getHitDetectionImage","getImageState","getImageSize","getHitDetectionImageSize","getOrigin","getSize","setOpacity","setRotateWithView","setRotation","setScale","setSnapToPixel","listenImageChange","thisArg","load","unlistenImageChange","RegularShape","checksums_","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points_","points","radius_","radius1","radius2_","radius2","angle_","stroke_","stroke","anchor_","size_","imageSize_","hitDetectionImageSize_","atlasManager_","atlasManager","render_","getFill","getPoints","getRadius","getRadius2","getAngle","getStroke","ImageState","imageSize","strokeStyle","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","renderOptions","draw_","createHitDetectionCanvas_","round","renderHitDetectionCallback","hasCustomHitDetectionImage","drawHitDetectionCanvas_","bind","id","getChecksum","info","hitImage","angle0","radiusC","beginPath","arc","lineTo","fillStyle","lineWidth","closePath","strokeChecksum","fillChecksum","checksum","CircleStyle","setRadius","Fill","color_","checksum_","setColor","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometry_","geometryFunction_","defaultGeometryFunction","geometry","setGeometry","image_","renderer_","renderer","text_","zIndex_","zIndex","getGeometry","getText","getZIndex","getRenderer","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","feature","setZIndex","defaultStyles","createDefaultStyle","createEditingStyle","styles","white","blue","GeometryType","concat","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","properties","setGeometryName","getGeometryName","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","createStyleFunction","setId","numberSafeCompareFunction","includes","linearFindNearest","direction","reverseSubArray","begin","tmp","data","extension","arr1","arr2","len1","stableSort","compareFnc","sort","XY","XYZ","XYM","XYZM","SimpleGeometry","layout","GeometryLayout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","anchorX","anchorY","linearRing","twiceArea","linearRings","ends","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","tmpPoint","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","jj","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","snap","quantize","quantizeArray","simplifiedEnds","LinearRing","maxDelta_","maxDeltaRevision_","linearRingArea","Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","abs","isNaN","getInteriorPointsOfMultiArray","interiorPoints","ret","point1","point2","intersectsLineString","coordinatesExtent","forEachSegment","start","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRingArray","linearRingIsClockwise","edge","linearRingIsOriented","opt_right","right","isClockwise","orientLinearRings","reverseCoordinates","orientLinearRingsArray","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","getOrientedFlatCoordinates","linearRingsArea","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","circular","opt_n","opt_sphereRadius","distance","bearing","lon1","dByR","lat","asin","fromExtent","fromCircle","circle","opt_sides","opt_angle","sides","arrayLength","polygon","makeRegular","startAngle","Geolocation","position_","transform_","watchId_","GeolocationProperty","handleProjectionChanged_","handleTrackingChanged_","setProjection","trackingOptions","setTrackingOptions","setTracking","tracking","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","coords","accuracy","altitude","altitudeAccuracy","heading","longitude","latitude","projectedPosition","speed","circularPolygon","error","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getPosition","getSpeed","padNumber","number","opt_precision","numberString","toFixed","decimal","join","compareVersions","v1","v2","s1","s2","n1","n2","delta","closestOnSegment","segment","along","degreesToStringHDMS","hemispheres","degrees","opt_fractionDigits","normalizedDegrees","dflPrecision","precision","pow","deg","floor","sec","ceil","charAt","format","template","coordinate1","coordinate2","cosAngle","sinAngle","coord1","coord2","squaredDistanceToSegment","toStringXY","interpolatePoint","fraction","pointY","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","found","binarySearch","o","lineStringCoordinateAtM","m","extrapolate","lo","hi","m0","lineStringLength","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getFlatMidpoint","line","interpolate","geoM","fracA","fracB","fracM","geoA","geoB","geoStack","fractionStack","fractions","maxIterations","Text","font_","textAlign_","textAlign","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","TextPlacement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","getFont","getPlacement","getMaxAngle","getOverflow","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","DEFAULT_STROKE_STYLE","INTERVALS","Graticule","map_","postcomposeListenerKey_","projection_","maxLat_","maxLon_","minLat_","minLon_","maxLatP_","maxLonP_","minLatP_","minLonP_","targetSize_","targetSize","maxLines_","maxLines","meridians_","parallels_","strokeStyle_","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","meridiansLabels_","parallelsLabels_","showLabels","lonLabelFormatter_","lonLabelFormatter","latLabelFormatter_","latLabelFormatter","lonLabelPosition_","lonLabelPosition","latLabelPosition_","latLabelPosition","lonLabelStyle_","lonLabelStyle","latLabelStyle_","latLabelStyle","setMap","addMeridian_","lon","minLat","maxLat","lineString","getMeridian_","textPoint","getMeridianPoint_","geom","clampedBottom","clampedTop","addParallel_","minLon","maxLon","getParallel_","getParallelPoint_","clampedLeft","clampedRight","createGraticule_","getInterval_","cnt","idx","centerLonLat","centerLon","centerLat","validExtent","p1","p2","getMap","frac","getMeridians","lon2","getParallels","handlePostCompose_","l","labelData","vectorContext","frameState","viewState","equivalentProjection","updateProjectionInfo_","setFillStrokeStyle","drawGeometry","setTextStyle","epsg4326Projection","worldExtentP","render","RenderEventType","ImageBase","state","pixelRatio_","getPixelRatio","getResolution","getState","ImageWrapper","src","crossOrigin","imageLoadFunction","src_","Image","imageListenerKeys_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","easeIn","easeOut","inAndOut","linear","Tile","tileCoord","interimTile","transition_","transition","transitionStarts_","getKey","getInterimTile","tile","TileState","refreshInterimChain","getTileCoord","setState","getAlpha","time","inTransition","endTransition","ImageTile","tileLoadFunction","crossOrigin_","tileLoadFunction_","getBlankImage","naturalWidth","naturalHeight","ctx","fillRect","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","update","Date","now","lastIndex","firstIndex","duration","MapEvent","opt_frameState","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","pixel","getEventPixel","getCoordinateFromPixel","dragging","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserPointerEvent","pointerEvent","EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","POINTER_ID","POINTER_TYPE","mousedown","inEvent","isEventSimulatedFromTouch_","pointerMap","cancel","prepareEvent","down","mousemove","move","mouseup","p","button","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","MouseSource","lastTouches","lts","clientX","clientY","cloneEvent","pd","pointerId","isPrimary","pointerType","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","HAS_BUTTONS","PointerEvent","opt_eventDict","eventDict","buttons","getButtons_","pressure","getPressure_","bubbles","cancelable","view","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","tiltX","tiltY","hwTimestamp","which","ev","MouseEvent","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","setTimeout","resetClickCountHandler_","clearTimeout","touchToPointer_","webkitRadiusX","radiusX","webkitRadiusY","radiusY","webkitForce","force","inFunction","touches","pointer","findTouch_","touchList","searchId","out","outTarget","over","enter","outEvent","leave","cleanUpPointer_","lt","CLONE_PROPS","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","events","eventName","eventCopy","fireEvent","PointerEventType","contains_","container","contained","contains","inType","wrapMouseEvent","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","MapBrowserEventType","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","LAYERGROUP","SIZE","TARGET","VIEW","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue","tilePriorityFunction","tileChangeCallback","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","handleTileChange","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","none","disable","ANIMATING","INTERACTING","View","hints_","animations_","updateAnimationKey_","updateAnimations_","applyOptions_","ViewProperty","resolutionConstraintInfo","resolutionConstraint","maxResolution","minResolution","minZoom","maxZoom","zoomFactor","resolutions","z","power","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","opt_maxLevel","oldLevel","newLevel","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","centerNone","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","rotationNone","theta","createRotationConstraint","constraints_","zoom","constrainResolution","options_","getUpdatedOptions_","newOptions","getZoom","animate","var_args","animationCount","isDef","setCenter","setZoom","series","animation","complete","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","isNoopAnimation","setHint","ViewHint","getAnimating","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","progress","calculateCenterZoom","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","rotateCoordinate","addCoordinate","currentResolution","getSizeFromViewport_","selector","querySelector","metrics","constrainCenter","opt_delta","opt_direction","getConstraints","getHints","opt_hints","calculateExtent","opt_size","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","getResolutions","getResolutionForExtent","xResolution","yResolution","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","nearest","getResolutionForZoom","fit","geometryOrExtent","polygonFromExtent","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","constrainedResolution","centerRotX","centerRotY","setResolution","centerOn","centerX","centerY","hint","coordinatesEqual","BaseLayer","LayerProperty","visible","state_","layer","managed","getLayerState","sourceState","getSourceState","getVisible","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setVisible","zindex","LayerGroup","baseOptions","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","states","pos","ownLayerState","layerState","SourceState","num","ratio","toSize","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","MapProperty","createOptionsInternal","maxTilesLoading_","maxTilesLoading","loadTilesWhileAnimating_","loadTilesWhileAnimating","loadTilesWhileInteracting_","loadTilesWhileInteracting","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","className","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","overlayEvents","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","overlays_","overlayIdIndex_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","hitTolerance","layerFilter","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","top","getTarget","getTargetElement","pixelToCoordinateTransform","getOverlayById","getPixelFromCoordinate","coordinateToPixelTransform","getView","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","tileResolution","wantedTiles","focus","mapBrowserEvent","interactionsArray","getActive","handleEvent","handlePostRender","tileQueue","hints","viewHints","postRenderFunctions","targetElement","updateSize","removeLayerRenderers","handleViewPropertyChanged_","setAttribute","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","layerStatesArray","layerStates","pixelResolution","skippedFeatureUids","usedTiles","renderFrame","MapEventType","setLayerGroup","setView","skipFeature","featureUid","computedStyle","offsetWidth","parseFloat","unskipFeature","Control","target_","listenerKeys","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","handleSourcePropertyChange_","setSource","getSource","handleSourceChange_","visibleAtResolution","Attribution","ulElement_","collapsed_","collapsed","collapsible_","collapsible","tipLabel","collapseLabel","collapseLabel_","label","label_","activeLabel","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","getSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","updateElement_","display","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsible","setCollapsed","getCollapsed","mapEvent","Rotate","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","resetNorth_","msTransform","webkitTransform","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","newResolution","defaults","zoomOptions","rotateOptions","attribution","attributionOptions","Interaction","setActive","InteractionProperty","active","opt_duration","rotateWithoutConstraints","currentRotation","zoomWithoutConstraints","zoomByDelta","DoubleClickZoom","delta_","stopEvent","altKeyOnly","altShiftKeysOnly","always","mouseActionButton","never","singleClick","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","primaryAction","handleDragEvent","handleUpEvent","handleDownEvent","handleMoveEvent","PointerInteraction","handleDownEvent_","handleDragEvent_","handleMoveEvent_","handleUpEvent_","handlingDownUpSequence","stopDown","trackedPointers_","targetPointers","updateTrackedPointers_","centroid","pointerEvents","handledUp","handled","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","condition_","condition","noKinetic_","centroidFromPointers","scaleCoordinate","centerpx","DragRotate","lastAngle_","RenderBox","startPixel_","endPixel_","startPixel","endPixel","setPixels","createOrUpdateGeometry","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","DragZoom","out_","mapExtent","boxPixelExtent","UP","DOWN","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyCode","KeyCode","mapUnitsDelta","pan","KeyboardZoom","charCode","charCodeAt","Mode","TRACKPAD","MouseWheelZoom","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","decrementInteractingHint_","handleWheelZoom_","setMouseAnchor","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","rebound","timeLeft","PinchRotate","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","DragAndDropEventType","DragAndDropEvent","file","opt_features","opt_projection","DragAndDrop","formatConstructors_","formatConstructors","dropListenKeys_","source_","handleResult_","result","tryReadFeatures_","featureProjection","addFeatures","registerListeners_","dropArea","handleDrop","handleStop","unregisterListeners_","readFeatures","files","dataTransfer","reader","FileReader","readAsText","dropEffect","lastMagnitude_","magnitude","angleDelta","Circle","setCenterAndRadius","getRadiusSquared_","MultiLineString","appendLineString","opt_interpolate","lineStringsCoordinateAtM","getLineString","getLineStrings","lineStrings","getFlatMidpoints","midpoints","douglasPeuckerArray","intersectsLineStringArray","MultiPoint","appendPoint","getPoint","linearRingss","MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","appendPolygon","newEndss","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingssArea","getEndss","getFlatInteriorPoints","linearRingssCenter","getInteriorPoints","linearRingsAreOriented","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","polygons","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","IMAGE","TILE","VECTOR_TILE","VECTOR","VectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","renderMode_","renderMode","VectorRenderType","LayerType","getDeclutter","setDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","styleFunction","getRenderMode","JSON","TEXT","XML","loadFeaturesXhr","url","success","failure","xhr","XMLHttpRequest","open","FormatType","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readProjection","getLastExtent","onerror","send","dataProjection","all","Source","attributions_","adaptAttributions_","wrapX_","wrapX","attributionLike","getWrapX","refresh","setAttributions","module","swap","defaultCompare","compare","quickselectStep","sd","newLeft","newRight","factory","rbush","maxEntries","_maxEntries","_minEntries","_initFormat","findItem","items","equalsFn","calcBBox","toBBox","distBBox","children","destNode","createNode","child","leaf","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","multiSelect","quickselect","_all","search","bbox","childBBox","nodesToSearch","collides","insert","_build","_splitRoot","tmpNode","_insert","goingUp","path","indexes","_condense","compareMinX","compareMinY","toJSON","fromJSON","N","M","right2","right3","N2","N1","_chooseSubtree","level","targetNode","enlargement","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","bbox1","bbox2","overlap","minOverlap","_allDistMargin","leftBBox","rightBBox","siblings","compareArr","Function","RBush","opt_maxEntries","rbush_","items_","extents","uid","getAll","getInExtent","forEach_","forEachInExtent","VectorSourceEvent","opt_feature","VectorSource","loader_","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","allStrategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","newFeatures","geometryFeatures","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeatures","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removed","setLoader","DrawEventType","DrawEvent","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","features_","snapTolerance_","snapTolerance","type_","mode","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","opt_geometry","squaredLength","squaredCoordinateDistance","Constructor","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","geometryName","freehandCondition_","freehand","freehandCondition","updateState_","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","atFinish_","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","updateSketchFeatures_","startDrawing_","sketchLineGeom","ring","addToDrawing_","finishDrawing","removeLastPoint","sketchFeature","abortDrawing_","sketchFeatures","overlaySource","pass","handlePointerEvent","circleMode","ExtentEventType","ExtentInteractionEvent","ExtentInteraction","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","vertexOverlay_","pointerStyle","snapToVertex_","pixelCoordinate","segments","closestSegment","vertex","vertexPixel","coordinateDistance","pixel1","pixel2","squaredDist1","squaredDist2","dist","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","vertexFeature","getOpposingPoint","x_","y_","getPointHandler","getEdgeHandler","fixedPoint","fixedP1","fixedP2","CIRCLE_CENTER_INDEX","CIRCLE_CIRCUMFERENCE_INDEX","ModifyEventType","MODIFYSTART","MODIFYEND","ModifyEvent","mapBrowserPointerEvent","Modify","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","rBush_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","GeometryCollection","writeGeometryCollectionGeometry_","handleSourceAdd_","handleSourceRemove_","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","handlePointerAtPixel_","willModifyFeatures_","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","segmentData","depth","lines","rings","kk","centerSegmentData","circumferenceSegmentData","featureSegments","geometries","getGeometriesArray","createOrUpdateVertexFeature_","box","nodes","pointDistanceToSegmentDataSquared","closestOnSegmentData","vertexSegments","insertVertex_","setGeometryCoordinates_","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removePoint","removeVertex_","component","dragSegment","newIndex","dragSegments","segmentsByFeature","deleted","segmentDataMatch","compareIndexes","insertVertices","vertexExtent","segmentDataMatches","componentSegments","pointCoordinates","circleGeometry","distanceToCenterSquared","distanceToCircumference","SelectEventType","SELECT","SelectEvent","selected","deselected","Select","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","featureOverlay","featureOverlay_","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","getHitTolerance","getLayer","setHitTolerance","currentMap","selectedFeatures","removeFeatureLayerAssociation_","Snap","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","sortByDistance_","deltaA","deltaB","opt_listen","register","feature_uid","segmentWriter","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","updateFeature_","opt_unlisten","unregister","snapTo","snapped","isCircle","closestOnCircle","featuresToUpdate","TranslateEventType","TRANSLATESTART","TRANSLATING","TRANSLATEEND","TranslateEvent","Translate","lastCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","oldMap","newCoordinate","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","ImageCanvas","opt_loader","error_","getError","handleLoad_","err","RenderEvent","opt_vectorContext","opt_context","opt_glContext","glContext","VectorContext","drawCustom","drawCircle","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setImageStyle","imageStyle","opt_declutterGroup","textStyle","CanvasImmediateRenderer","viewRotation","context_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageSnapToPixel_","imageWidth_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","drawRings_","simpleGeometry","transformGeom2D","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","textState","contextTextState","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","imageAnchor","imageImage","imageOrigin","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textOffsetX","textOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","textTextBaseline","IconImageCache","cache_","cacheSize_","maxCacheSize_","expire","iconImage","maxCacheSize","shared","MapRenderer","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","registerLayerRenderers","constructors","getLayerRendererConstructors","calculateMatrices2D","invertTransform","transformSetFromArray","removeLayerRendererByKey_","thisArg2","viewResolution","translatedCoordinate","projectionExtent","worldWidth","layerRenderer","getLayerRenderer","layerKey","candidate","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","removeUnusedLayerRenderers_","scheduleExpireIconCache","scheduleRemoveUnusedLayerRenderers","expireIconCache","iconImageCache","sortByZIndex","state1","state2","layerRendererConstructors","CanvasMapRenderer","insertBefore","childNodes","dispatchComposeEvent_","composeEvent","clearRect","save","prepareFrame","composeFrame","restore","numLayers","forEachLayerAtCoordinate","ctor","LayerRenderer","layer_","createLoadedTileFinder","tiles","tileRange","forEachLoadedTile","handleImageChange_","renderIfReadyAndVisible","loadImage","imageState","scheduleExpireCache","tileSource","postRenderFunction","expireCache","updateUsedTiles","zKey","manageTilePyramid","currentZ","preload","opt_tileCallback","getTileRangeForExtentAndZ","getTile","getTileCoordCenter","useTile","CanvasLayerRenderer","renderedResolution","clip","topLeft","topRight","bottomRight","bottomLeft","opt_transform","postCompose","preCompose","dispatchRenderEvent","IntermediateCanvasRenderer","coordinateToCanvasPixelTransform","hitCanvasContext_","clipped","imageTransform","getImageTransform","dw","dh","imageData","getImageData","CanvasImageLayerRenderer","imageLayer","imageTransform_","skippedFeatures_","vectorRenderer_","viewCenter","imageSource","vectorRenderer","renderedExtent","skippedFeatures","imageFrameState","newSkippedFeatures","replayGroupChanged","imageExtent","imageResolution","imagePixelRatio","mapRenderer","TileRange","containsTileRange","CanvasTileLayerRenderer","tileLayer","opt_noContext","oversampling_","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","zDirection","isDrawableTile_","tileState","useInterimTilesOnError","getUseInterimTilesOnError","getPreload","sourceRevision","getTileGridForProjection","getZForResolution","oversampling","getTileRangeExtent","tilePixelRatio","getTilePixelRatio","tilesToDrawByZ","findLoadedTiles","animatingOrInteracting","tmpTileRange","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","tilePixelSize","getTilePixelSize","currentScale","currentTilePixelSize","tileExtent","tileGutter","tilesToDraw","zs","tileCoordKey","getGutter","getTileCoordExtent","drawTileImage","gutter","getOpaque","alphaChanged","ReplayGroup","getReplay","replayType","DEFAULT","drawTextOnPath","measure","startM","previousAngle","reverse","numChars","segmentM","chunk","chunkLength","char","charLength","charM","segmentPos","unshift","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","ORDER","ReplayType","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","CanvasReplay","maxExtent","declutterTree","maxLineWidth","alignFill_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinateCache_","renderedTransform_","hitDetectionInstructions","replayTextBackground_","p3","p4","setStrokeStyle_","replayImage_","declutterGroup","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastCoord","nextCoord","skipped","drawCustomCoordinates_","replayEnds","replayEnd","beginGeometry","replayEndss","replayBegin","myEnds","CanvasInstruction","endGeometry","origin","repeatSize","instruction","renderDeclutter_","groupCount","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","fn","baseline","fillKey","strokeKey","textKey","pathLength","textLength","textStates","parts","cc","chars","part","replay","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","finish","CanvasImageReplay","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","myBegin","hitDetectionImage","CanvasLineStringReplay","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","CanvasPolygonReplay","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","BATCH_CONSTRUCTORS","Default","labels_","fillStates","strokeStates","textKey_","fillKey_","strokeKey_","widths_","geometryType","flatEnd","flatOffset","oo","range","drawChars_","drawTextImage_","align","numLines","widths","currentWidth","measureTextWidths","lineHeight","renderWidth","leftRight","CanvasReplayGroup","opt_renderBuffer","declutterTree_","tolerance_","maxExtent_","resolution_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","addDeclutter","group","flatClipCoords","getClipCoords","hasReplays","replays","candidates","replayKey","declutterReplays","hitExtent","contextSize","declutteredFeatures","mask","circleArrayCache","arraySize","fillCircleArrayRowToMiddle","getCircleArray","zIndexKey","getReplays","opt_replayTypes","opt_declutterReplays","replayTypes","0","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","replayGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","loading","renderGeometry","getGeometries","renderFeatureInternal","CanvasVectorLayerRenderer","vectorLayer","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","handleFontsChanged_","vectorSource","clipExtent","replayContext","drawOffsetX","drawOffsetY","transparentLayer","hasRenderListeners","drawWidth","drawHeight","drawSize","world","mainContextAlpha","handleStyleImageChange_","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","getRenderTolerance","dirty","getSquaredRenderTolerance","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","vector","CanvasVectorTileLayerRenderer","renderedLayerRevision_","tmpTransform_","VectorTileRenderType","createReplayGroup_","renderTileImage_","layerRevision","revision","replayState","getReplayState","renderedRenderOrder","sourceTileGrid","getTileGrid","sourceTile","tileKeys","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","tileProjection","reproject","setReplayGroup","tt","getReplayGroup","getReplayTransform_","renderResolution","clips","worldOffset","currentClip","zz","replayData","replayDeclutter","renderedTileRevision","wrappedTileCoord","pixelScale","scaleTransform","translateTransform","changeType","Map","defaultControls","defaultInteractions","Overlay","insertFirst","autoPan","autoPanAnimation","autoPanMargin","rendered","bottom_","left_","right_","top_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","OverlayPositioning","setPosition","getElement","getOffset","getPositioning","updatePixelPosition","panIntoView","mapRect","getRect","overlayRect","marginLeft","marginRight","marginTop","marginBottom","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","getOptions","DEFAULT_EXTENT","VectorTile","consumers","replayGroups_","onLoad","setFeatures","onError","getChangeType","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","requestFullscreen","FullScreen","cssClassName_","labelNode_","labelActive","labelActiveNode_","isFullScreen","isFullScreenSupported","keys_","handleFullScreen_","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","mozRequestFullScreenWithKeys","Element","ALLOW_KEYBOARD_INPUT","requestFullScreen","handleFullScreenChange_","firstElementChild","mozFullScreenEnabled","msFullscreenEnabled","fullscreenEnabled","webkitIsFullScreen","mozFullScreen","msFullscreenElement","fullscreenElement","OverviewMap","ovmapDiv_","ovmap_","ovmap","boxSizing","boxOverlay_","scope","overlayBox","mousePosition","endMoving","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","newView","handleRotationChanged_","validateExtent_","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","steps","MAX_RATIO","LN2","updateBox_","ovresolution","rotateBottomLeft","calculateCoordinateRotate_","coordinateRotate","getOverviewMap","UNITS_PROP","LEADING_DIGITS","ScaleLine","innerElement_","viewState_","minWidth_","minWidth","renderedWidth_","renderedHTML_","handleUnitsChanged_","setUnits","pointResolutionUnits","ProjUnits","nominalCount","suffix","metersPerDegree","html","Direction","ZoomSlider","currentResolution_","direction_","heightLimit_","widthLimit_","previousX_","previousY_","thumbSize_","sliderInitialized_","thumbElement","containerElement","dragger_","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","initSlider_","containerSize","thumb","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","setThumbPosition_","res","getPositionForResolution_","ZoomToExtent","handleZoomToExtent","WebGLShader","isAnimated","WebGLFragment","WebGLVertex","fragment","Locations","program","u_projectionMatrix","getUniformLocation","u_offsetScaleMatrix","u_offsetRotateMatrix","u_lineWidth","u_pixelRatio","u_opacity","u_fillColor","u_strokeColor","u_size","a_position","getAttribLocation","a_instruction","a_radius","fromTransform","mat4","WebGLReplay","projectionMatrix_","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","indices","indicesBuffer","startIndices","startIndicesFeature","verticesBuffer","getDeleteResourcesFunction","setUpProgram","shutDownProgram","locations","drawReplay","hitDetection","drawHitDetectionReplayOneByOne","drawHitDetectionReplay","oneByOne","drawHitDetectionReplayAll","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","tmpStencil","tmpStencilFunc","tmpStencilMaskVal","tmpStencilRef","tmpStencilMask","tmpStencilOpFail","tmpStencilOpPass","tmpStencilOpZFail","getGL","isEnabled","STENCIL_TEST","STENCIL_FUNC","STENCIL_VALUE_MASK","STENCIL_REF","STENCIL_WRITEMASK","STENCIL_FAIL","STENCIL_PASS_DEPTH_PASS","STENCIL_PASS_DEPTH_FAIL","enable","STENCIL_BUFFER_BIT","stencilMask","stencilFunc","ALWAYS","stencilOp","KEEP","REPLACE","NOTEQUAL","bindBuffer","projectionMatrix","rotateTransform","offsetScaleMatrix","offsetRotateMatrix","uniformMatrix4fv","uniform1f","drawElements","elementType","hasOESElementIndexUint","numItems","offsetInBytes","DEFAULT_FILLSTYLE","DEFAULT_LINEDASH","DEFAULT_STROKESTYLE","EPSILON","triangleIsCounterClockwise","BufferUsage","WebGLBuffer","opt_arr","opt_usage","arr_","usage_","getUsage","WebGLCircleReplay","defaultLocations_","styles_","styleIndices_","fillColor","strokeColor","numVertices","numIndices","lastState","deleteBuffer","getProgram","useProgram","enableVertexAttribArray","vertexAttribPointer","uniform2fv","disableVertexAttribArray","nextStyle","setFillStyle_","drawReplaySkipping_","groupStart","featureIndex","featureStart","uniform4fv","u_image","a_texCoord","a_offsets","a_opacity","a_rotateWithView","WebGLContext","gl_","bufferCache_","shaderCache_","programCache_","currentProgram_","hitDetectionFramebuffer_","hitDetectionTexture_","hitDetectionRenderbuffer_","WEBGL_EXTENSIONS","getExtension","ContextEventType","handleWebGLContextLost","handleWebGLContextRestored","buf","bufferKey","String","bufferCacheEntry","arrayBuffer","createBuffer","Float32Array","Uint32Array","Uint16Array","bufferData","isContextLost","deleteProgram","deleteShader","deleteFramebuffer","deleteRenderbuffer","deleteTexture","getCanvas","getHitDetectionFramebuffer","initHitDetectionFramebuffer_","getShader","shaderObject","shaderKey","shader","createShader","shaderSource","compileShader","fragmentShaderObject","vertexShaderObject","programKey","createProgram","attachShader","linkProgram","framebuffer","createFramebuffer","bindFramebuffer","texture","createEmptyTexture","renderbuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferTexture2D","COLOR_ATTACHMENT0","framebufferRenderbuffer","DEPTH_ATTACHMENT","bindTexture","createTextureInternal","opt_wrapS","opt_wrapT","createTexture","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","texImage2D","RGBA","UNSIGNED_BYTE","WebGLTextureReplay","groupIndices","hitDetectionGroupIndices","imageHeight","imageWidth","defaultLocations","textures","getTextures","drawCoordinates","createTextures","images","texturePerImage","getHitDetectionTextures","drawReplaySkipping","groupEnd","hitDetectionTextures","opt_all","WebGLImageReplay","images_","hitDetectionImages_","textures_","hitDetectionTextures_","lineStringIsClosed","u_miterLimit","u_color","a_lastPos","a_nextPos","a_direction","WebGLLineStringReplay","startCoords","sign","p0","lastSign","addVertices_","product","isValid_","indexCount","drawPolygonCoordinates","holeFlatCoordinates","setPolygonStyle","opt_index","getCurrentIndex","tmpDepthFunc","DEPTH_FUNC","tmpDepthMask","DEPTH_WRITEMASK","DEPTH_TEST","depthMask","depthFunc","LinkedList","opt_circular","first_","last_","head_","circular_","length_","insertItem","next","head","removeItem","firstItem","lastItem","nextItem","getNextItem","prevItem","getPrevItem","getCurrItem","setFirstItem","list","WebGLPolygonReplay","outerRing","rtree","processFlatCoordinates_","maxCoords","getMaxCoords_","holeLists","holeList","classifyPoints_","currList","currItem","getIntersections_","bridgeHole_","triangulate_","clockwise","createPoint_","insertItem_","seg","ccw","s0","pointsReclassified","reflex","removeItem_","hole","holeMaxX","listMaxX","bestPoint","p5","minDist","intersectingSegments","currSeg","calculateIntersection_","pointsInTriangle","getPointsInTriangle_","currPoint","currTheta","p0Bridge","p1Bridge","simple","isSimple_","clipEars_","resolveSelfIntersections_","splitPolygon_","isClockwise_","s3","processedEars","variableCriterion","diagonalIsInside_","opt_touch","resolvedIntersections","breakCond","newPolygon","newRtree","opt_rtree","opt_reflex","segmentsInExtent","denom","ub","p1IsLeftOf","p1IsRightOf","p3IsLeftOf","p3IsRightOf","p1InCone","p3InCone","currIndex","currLineIndex","holes","holeFlatCoords","lineDeleter","nullStrokeStyle","Atlas","space","space_","emptyBlocks_","renderCallback","block","this$1","split_","newBlock1","newBlock2","deltaWidth","updateBlocks_","args","AtlasManager","currentSize_","initialSize","maxSize_","maxSize","WEBGL_MAX_TEXTURE_SIZE","atlases_","currentHitSize_","hitAtlases_","getInfo","getInfo_","hitInfo","mergeInfos_","atlases","opt_renderHitCallback","add_","renderHitCallback","isHitAtlas","atlas","WebGLTextReplay","measureCanvas_","currAtlas_","currX","currY","charArr","charInfo","glyphAtlas","textSize","getTextSize_","self","textHeight","str","sum","curr","addCharToAtlas_","reduce","mCtx","getAtlas_","params","hash","calculateHash_","HIT_DETECTION_SIZE","WebGLReplayGroup","functions","replayHitDetection_","Uint8Array","readPixels","WebGLImmediateRenderer","center_","imageStyle_","fillStyle_","textStyle_","u_texCoordMatrix","u_texture","WebGLLayerRenderer","arrayBuffer_","framebufferDimension","texCoordMatrix","uniform1i","getTexCoordMatrix","getProjectionMatrix","getTexture","drawArrays","WebGLImageLayerRenderer","hitTransformationMatrix_","createTexture_","imageElement","updateProjectionMatrix_","canvasWidth","canvasHeight","canvasExtentWidth","canvasExtentHeight","getHitTransformationMatrix_","pixelOnFrameBuffer","mapCoordTransform","projectionMatrixInv","multiplyTransform","WebGLMapRenderer","clipTileCanvasWidth_","clipTileCanvasHeight_","clipTileContext_","antialias","preserveDrawingBuffer","stencil","textureCache_","tileTextureQueue_","loadNextTileTexture_","tileSize","bindTileTexture","textureCacheFrameMarkerCount_","initializeGL_","magFilter","minFilter","textureCacheEntry","clipTileCanvas","clipTileContext","expireCache_","getTileTextureQueue","renderers","activeTexture","blendFuncSeparate","isTileTextureLoaded","layerStatesToDraw","clearColor","viewport","u_tileOffset","WebGLTileLayerRenderer","fragmentShader_","vertexShader_","locations_","renderArrayBuffer_","renderedTileRange_","renderedFramebufferExtent_","tmpSize_","loaded","framebufferExtent","getTileSize","tilePixelResolution","tileRangeSize","maxDimension","framebufferExtentDimension","allTilesLoaded","tileTextureQueue","pixelOnMapScaled","pixelOnFrameBufferScaled","WebGLVectorLayerRenderer","layerState_","SCISSOR_TEST","scissor","WebGLMap","PROJECTION","COORDINATE_FORMAT","MousePosition","coordinateFormat","setCoordinateFormat","undefinedHTML_","undefinedHTML","renderOnMouseOut_","mapProjection_","lastMouseMovePixel_","getCoordinateFormat","handleMouseMove","updateHTML_","handleMouseOut","FeatureFormat","defaultFeatureProjection","transformWithOptions","write","transformed","decimals","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","JSONFeature","readFeatureFromObject","getObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","parse","GEOMETRY_READERS","getGeometryLayout","paths","GEOMETRY_WRITERS","esriJSON","hasZM","getHasZM","hasZ","hasM","EsriJSON","esriJSONFeature","idField","attributes","esriJSONFeatures","objectIdFieldName","esriJSONObject","spatialReference","wkid","objects","flatRing","outerRings","shift","matched","containsHole","convertRings","geometryReader","geometryWriter","DOCUMENT","implementation","createDocument","XML_SCHEMA_INSTANCE_URI","createElementNS","namespaceURI","qualifiedName","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","firstChild","nextSibling","isDocument","Document","xml","makeArrayExtender","valueReader","objectStack","makeArrayPusher","makeReplacer","makeObjectPropertyPusher","opt_property","localName","makeObjectPropertySetter","makeChildAppender","nodeWriter","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","opt_nodeName","opt_namespaceURI","fixedNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","opt_structureNS","structureNS","parseNode","parsersNS","nextElementSibling","parsers","parser","pushParseAndPop","opt_keys","pushSerializeAndPop","XMLFeature","xmlSerializer_","XMLSerializer","readFeatureFromDocument","readFeatureFromNode","doc","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","GMLNS","ONLY_WHITESPACE_RE","GMLBase","featureType","featureNS","srsName","schemaLocation","FEATURE_COLLECTION_PARSERS","featureMember","readFeaturesInternal","featureMembers","ft","uri","ns","featureTypes","readFeatureElement","readGeometryElement","getAttribute","GEOMETRY_PARSERS_","fid","getAttributeNS","test","readPoint","readFlatCoordinatesFromNode_","readMultiPoint","MULTIPOINT_PARSERS_","readMultiLineString","MULTILINESTRING_PARSERS_","readMultiPolygon","MULTIPOLYGON_PARSERS_","pointMemberParser_","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","readFlatLinearRing_","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLinearRing","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","readBoolean","readBooleanString","string","readDateTime","dateTime","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeDecimalTextNode","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","MULTIGEOMETRY_TO_MEMBER_NODENAME","MultiCurve","MultiSurface","GML3","surface_","surface","curve_","curve","multiCurve_","multiCurve","multiSurface_","multiSurface","readMultiCurve_","MULTICURVE_PARSERS_","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","flatLinearRing","exteriorParser_","readSurface_","SURFACE_PARSERS_","readCurve_","CURVE_PARSERS_","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","containerSrs","readFlatPosList_","contextDimension","dim","writePos_","srsDimension","getCoords_","opt_srsName","opt_hasZ","writePosList_","writePoint_","writeEnvelope","ENVELOPE_SERIALIZERS_","writeLinearRing_","posList","RING_NODE_FACTORY_","exteriorWritten","writeSurfaceOrPolygon_","RING_SERIALIZERS_","patches","writeSurfacePatches_","writeCurveOrLineString_","writeCurveSegments_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writeMultiCurveOrLineString_","LINESTRINGORCURVEMEMBER_SERIALIZERS_","writeRing_","writeSurfaceOrPolygonMember_","GEOMETRY_NODE_FACTORY_","writePointMember_","writeLineStringOrCurveMember_","writeGeometryElement","GEOMETRY_SERIALIZERS_","writeFeatureElement","writeFeatureMembers_","setAttributeNS","interior","exterior","Surface","Curve","Envelope","curveMember","curveMembers","surfaceMember","surfaceMembers","lowerCorner","upperCorner","PolygonPatch","LineStringSegment","GML","GML2","readFlatCoordinates_","proj","coordsGroups","readBox_","BOX_PARSERS_","innerBoundaryIsParser_","outerBoundaryIsParser_","createCoordinatesNode_","writeCoordinates_","innerBoundaryIs","outerBoundaryIs","Box","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","GPX_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","TRK_SEQUENCE","TRK_SERIALIZERS","writeWptType","GPX","readExtensions_","readExtensions","handleReadExtensions_","extensionsNode","featureReader","gpx","GPX_NODE_FACTORY","RTE_PARSERS","cmt","desc","link","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","layoutOptions","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","writeLink","RTEPT_TYPE_SEQUENCE","geometryLayout","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","GEOMETRY_TYPE_TO_NODENAME","applyLayoutOptions","href","opt_geometries","geometries_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","cloneGeometries","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","clonedGeometries","GeoJSON","extractGeometryName_","extractGeometryName","geoJSONFeature","geometry_name","geoJSONFeatures","crs","rightHanded","TextFeature","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","IGCZ","B_RECORD_RE","H_RECORD_RE","HFDTE_RECORD_RE","NEWLINE_RE","IGC","altitudeMode_","altitudeMode","year","month","day","lastDateTime","hour","minute","second","UTC","FRACTION","IconImage","imageState_","tainting_","determineTainting_","dispatchChangeEvent_","replaceColor_","getSrc","imgData","putImageData","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_IMAGE_SCALE_MULTIPLIER","DEFAULT_NO_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","IconOrigin","anchorXUnits_","anchorXUnits","IconAnchorUnits","anchorYUnits_","anchorYUnits","img","imgSize","iconImage_","offset_","offsetOrigin_","offsetOrigin","setAnchor","iconImageSize","GX_NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","pixels","insetPixels","PLACEMARK_PARSERS","ExtendedData","extendedDataParser","Region","regionParser","MultiGeometry","readMultiGeometry","readStyle","StyleMap","styleMapValue","readStyleMapValue","placemarkObject","address","description","phoneNumber","styleUrl","readURI","visibility","MultiTrack","GX_MULTITRACK_GEOMETRY_PARSERS","Track","readGxTrack","NETWORK_LINK_PARSERS","Link","REGION_PARSERS","LatLonAltBox","LAT_LON_ALT_BOX_PARSERS","regionObject","Lod","LOD_PARSERS","lodObject","KML_SEQUENCE","KML_SERIALIZERS","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","Placemark","writePlacemark","DEFAULT_FILL_STYLE","DEFAULT_IMAGE_STYLE","DEFAULT_TEXT_STYLE","DEFAULT_STYLE","DEFAULT_STYLE_ARRAY","KML","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","readDocumentOrFolder_","Folder","readPlacemark_","readSharedStyle_","readSharedStyleMap_","sharedStyles","nameStyle","drawName","createNameStyleFunction","foundStyle","findStyle","styleValue","styleUri","baseURI","location","URL","fs","readName","readNameFromDocument","readNameFromNode","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","kml","xmlnsUri","textOffset","imageScale","foundText","readColor","hexColor","readFlatCoordinates","readScale","STYLE_MAP_PARSERS","Pair","pairObject","PAIR_PARSERS","ICON_STYLE_PARSERS","iconObject","ICON_PARSERS","hotSpot","xunits","yunits","LABEL_STYLE_PARSERS","LINE_STYLE_PARSERS","POLY_STYLE_PARSERS","outline","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","GX_TRACK_PARSERS","when","whens","coord","gxTrackObject","GEOMETRY_FLAT_COORDINATES_PARSERS","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","extrude","tessellate","MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","setCommonGeometryProperties","FLAT_LINEAR_RINGS_PARSERS","INNER_BOUNDARY_IS_PARSERS","OUTER_BOUNDARY_IS_PARSERS","STYLE_PARSERS","IconStyle","styleObject","IconObject","drawIcon","LabelStyle","LineStyle","PolyStyle","hasExtrude","hasTessellate","hasAltitudeMode","extrudes","tessellates","altitudeModes","DATA_PARSERS","displayName","EXTENDED_DATA_PARSERS","Data","featureObject","SchemaData","SCHEMA_DATA_PARSERS","SimpleData","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","writeColorTextNode","rgba","abgr","hex","EXTENDEDDATA_NODE_SERIALIZERS","pair","createCDATASection","DATA_NODE_FACTORY","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","icon","vec2","writeScaleTextNode","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","namesAndValues","names","STYLE_SEQUENCE","STYLE_SERIALIZERS","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","v","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","POLY_STYLE_SERIALIZERS","COLOR_NODE_FACTORY","iconProperties","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","Pbf","ArrayBuffer","isView","Varint","Fixed64","Bytes","Fixed32","SHIFT_LEFT_32","SHIFT_RIGHT_32","readPackedEnd","pbf","readVarint","toNum","isSigned","makeRoomForExtraLength","startPos","extraLen","realloc","writePackedVarint","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","readInt32","destroy","readFields","readField","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","ieee754","readDouble","readVarintRemainder","readVarint64","readSVarint","b3","b0","bytesPerSequence","fromCharCode","readUtf8","readBytes","subarray","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","writeUtf8","writeBytes","writeRawMessage","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","RenderFeature","flatCoordinates_","flatMidpoints_","properties_","midpoint","MVT","featureClass_","featureClass","layerName_","layerName","layers_","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","prevEndIndex","PBF","pbfLayers","layersPBFReader","pbfLayer","readRawFeature","layerPBFReader","version","featurePBFReader","WAY_PARSERS","nd","ndrefs","readTag","PARSERS","tags","NODE_PARSERS","way","ways","OSMXML","flipXY","opt_destOffset","destOffset","Polyline","factor_","factor","geometryLayout_","decodeDeltas","encodeDeltas","numbers","opt_factor","lastNumbers","encodeFloats","encoded","decodeFloats","encodeUnsignedInteger","encodeUnsignedIntegers","encodeSignedIntegers","current","decodeUnsignedIntegers","decodeSignedIntegers","TopoJSON","topoJSONTopology","arcs","transformArc","transformArcs","topoJSONFeatures","objectName","readFeaturesFromGeometryCollection","readFeatureFromGeometry","transformVertex","concatenateArcs","polyArray","ringCoords","Filter","tagName_","getTagName","LogicalNary","conditions","And","Bbox","Spatial","Contains","Comparison","propertyName","During","ComparisonBinary","expression","opt_matchCase","matchCase","EqualTo","GreaterThan","GreaterThanOrEqualTo","Intersects","IsBetween","lowerBoundary","upperBoundary","IsLike","pattern","opt_wildCard","opt_singleChar","opt_escapeChar","wildCard","singleChar","escapeChar","IsNull","LessThan","LessThanOrEqualTo","Not","NotEqualTo","Or","Within","and","boundedBy","TRANSACTION_SUMMARY_PARSERS","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","TRANSACTION_RESPONSE_PARSERS","TransactionSummary","InsertResults","INSERT_RESULTS_PARSERS","QUERY_SERIALIZERS","PropertyName","TRANSACTION_SERIALIZERS","Insert","gmlVersion","Update","featurePrefix","typeName","getTypeName","XMLNS","writeOgcFidFilter","Delete","WFSNS","Native","nativeElement","vendorId","safeToIgnore","FEATURE_PREFIX","OGCNS","SCHEMA_LOCATIONS","1.1.0","1.0.0","WFS","featureType_","featureNS_","gmlFormat_","gmlFormat","schemaLocation_","getFeatureType","setFeatureType","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","writeGetFeature","handle","outputFormat","maxFeatures","resultType","bboxFilter","andFilter","propertyNames","GETFEATURE_SERIALIZERS","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","OGC_FID_PARSERS","http://www.opengis.net/ogc","FeatureId","prefix","Query","writeFilterCondition","valueReference","timePeriod","writeTimeInstant","writeLogicalFilter","BBOX","writeOgcPropertyName","PropertyIsEqualTo","writeComparisonFilter","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","writeOgcLiteral","PropertyIsLike","writeOgcExpression","timeInstant","timePosition","GeometryConstructor","LINESTRING","MULTIPOINT","MULTILINESTRING","MULTIPOLYGON","EMPTY","Z","TokenType","WKTGeometryType","toUpperCase","Lexer","wkt","index_","isAlpha_","isNumeric_","opt_decimal","isWhiteSpace_","nextChar_","nextToken","token","readNumber_","readText_","scientificNotation","substring","Parser","lexer","lexer_","token_","layout_","consume_","isTokenType","match","isMatch","parseGeometry_","parseGeometryLayout_","dimToken","dimInfo","parseGeometryCollectionText_","isEmptyGeometry_","formatErrorMessage_","parsePointText_","parsePoint_","parseLineStringText_","parsePointList_","parsePolygonText_","parseLineStringTextList_","parseMultiPointText_","parsePointTextList_","parseMultiLineStringText_","parseMultiPolygonText_","parsePolygonTextList_","dimensions","geomType","WKT","splitCollection_","splitCollection","parse_","encode","encodePointGeometry","encodeLineStringGeometry","encodePolygonGeometry","GeometryEncoder","components","geoms","enc","geometryEncoder","NAMESPACE_URI","readHref","read","readFromDocument","readFromNode","Service","SERVICE_PARSERS","Capability","CAPABILITY_PARSERS","Request","REQUEST_PARSERS","Exception","EXCEPTION_PARSERS","LAYER_PARSERS","WMSCapabilities","wmsCapabilityObject","Name","Title","Abstract","KeywordList","readKeywordList","OnlineResource","ContactInformation","CONTACT_INFORMATION_PARSERS","Fees","AccessConstraints","LayerLimit","MaxWidth","MaxHeight","ContactPersonPrimary","CONTACT_PERSON_PARSERS","ContactPosition","ContactAddress","CONTACT_ADDRESS_PARSERS","ContactVoiceTelephone","ContactFacsimileTelephone","ContactElectronicMailAddress","ContactPerson","ContactOrganization","AddressType","Address","City","StateOrProvince","PostCode","Country","Format","CRS","EX_GeographicBoundingBox","geographicBoundingBox","EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","BoundingBox","Dimension","unitSymbol","default","multipleValues","nearestValue","ATTRIBUTION_PARSERS","AuthorityURL","authorityObject","readFormatOnlineresource","Identifier","MetadataURL","metadataObject","DataURL","FeatureListURL","MinScaleDenominator","MaxScaleDenominator","parentLayerObject","layerObject","queryable","cascaded","opaque","noSubsets","fixedWidth","fixedHeight","childValue","parentValue","LogoURL","readSizedFormatOnlineresource","GetCapabilities","readOperationType","GetMap","GetFeatureInfo","OPERATIONTYPE_PARSERS","DCPType","DCPTYPE_PARSERS","HTTP","HTTP_PARSERS","Get","Post","LegendURL","StyleSheetURL","StyleURL","FORMAT_ONLINERESOURCE_PARSERS","KEYWORDLIST_PARSERS","Keyword","formatOnlineresource","WMSGetFeatureInfo","readFeatures_","layerFeatures","gmlFeatures","ServiceIdentification","SERVICE_IDENTIFICATION_PARSERS","ServiceProvider","SERVICE_PROVIDER_PARSERS","OperationsMetadata","OPERATIONS_METADATA_PARSERS","OWS","owsObject","ADDRESS_PARSERS","DeliveryPoint","AdministrativeArea","PostalCode","ElectronicMailAddress","ALLOWED_VALUES_PARSERS","Value","CONSTRAINT_PARSERS","AllowedValues","CONTACT_INFO_PARSERS","Phone","PHONE_PARSERS","DCP_PARSERS","REQUEST_METHOD_PARSERS","OPERATION_PARSERS","DCP","Operation","Voice","Facsimile","Constraint","SERVICE_CONTACT_PARSERS","IndividualName","PositionName","ContactInfo","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","OWS_NAMESPACE_URIS","Contents","CONTENTS_PARSERS","WMTSCapabilities","owsParser_","WMTSCapabilityObject","TileMatrixSet","TMS_PARSERS","isDefault","TileMatrixSetLink","TMS_LINKS_PARSERS","DIMENSION_PARSERS","ResourceURL","resourceType","resource","WGS84BoundingBox","WGS84_BBOX_READERS","legend","TileMatrixSetLimits","TMS_LIMITS_LIST_PARSERS","TileMatrixLimits","TMS_LIMITS_PARSERS","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","LowerCorner","readCoordinates","UpperCorner","WellKnownScaleSet","TM_PARSERS","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","DEFAULT_GRADIENT","Heatmap","gradient","blur","shadow","weight","gradient_","shadow_","circleImage_","styleCache_","handleGradientChanged_","setGradient","setBlur","handleStyleChanged_","weightFunction","handleRender_","createCircle_","getBlur","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","toDataURL","getGradient","colors","createLinearGradient","step","addColorStop","createGradient","view8","ImageLayer","TileLayer","setPreload","setUseInterimTilesOnError","TileProperty","VectorTileLayer","opt_tileCoord","getKeyZXY","createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","getFullTileRange","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","nullTileUrlFunction","expandUrl","urls","startCharCode","stopCharCode","stop","jsonp","opt_errback","opt_callbackParam","script","async","timer","getElementsByTagName","TileCache","pruneExceptNewestZ","calculateSourceResolution","sourceProj","targetProj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","isFinite","enlargeClipPoint","centroidX","centroidY","dX","dY","targetExtent","triangulation","sources","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","u2","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","Triangulation","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","ReprojTile","targetTileGrid","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","renderReprojected","leftToLoad","sourceListenKey","tmpTileCoord","TileGrid","opt_strict","every","currentVal","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","sizes","calculateTileRanges_","getForProjection","createForProjection","createForExtent","opt_maxZoom","opt_tileSize","opt_corner","corner","Corner","resolutionsFromExtent","createXYZ","extentFromProjection","half","forEachTileCoord","opt_tileRange","tileCoordExtent","createOrUpdateTileRange","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","createOrUpdateTileCoord","getTileCoordForCoordAndZ","getTileCoordResolution","fullTileRanges","TileSource","opaque_","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","setKey","thisProj","scaleSize","getTileCoordForTileUrlFunction","worldsAway","withinExtentAndZ","TileSourceEvent","UrlTile","tileUrlFunction","fixedTileUrlFunction","setUrls","setUrl","setTileUrlFunction","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","TileEventType","setTileLoadFunction","opt_key","TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutterInternal","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","imageTile","BingMaps","hidpi","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","requestJSONP","handleImageryMetadataResponse","getApiKey","getImagerySet","response","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","zoomMax","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","digits","quadKey","imageryProviders","imageryProvider","intersecting","coverageAreas","coverageArea","CartoDB","account_","account","mapId_","config_","config","templateCache_","initializeMap_","getConfig","updateConfig","setConfig","paramHash","applyTemplate_","mapUrl","client","handleInitResponse_","handleInitError_","setRequestHeader","tilesUrl","cdn_url","https","layergroupid","Cluster","cluster","setDistance","mapDistance","clustered","neighbors","neighbor","createCluster","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","targetResolution_","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","ImageSourceEventType","ImageSourceEvent","ImageSource","reprojectedImage_","reprojectedRevision_","findNearestResolution","getImageInternal","handleImageChange","defaultImageLoadFunction","appendParams","keyParams","encodeURIComponent","qs","ImageArcGISRest","params_","ratio_","getParams","F","FORMAT","TRANSPARENT","halfWidth","halfHeight","getRequestUrl_","getImageLoadFunction","srid","modifiedUrl","setImageLoadFunction","updateParams","ImageMapGuide","displayDpi_","displayDpi","useOverlay_","useOverlay","baseUrl","dpi","mcsW","mcsH","devW","devH","mpp","baseParams","OPERATION","VERSION","LOCALE","CLIENTAGENT","CLIP","SETDISPLAYDPI","SETDISPLAYWIDTH","SETDISPLAYHEIGHT","SETVIEWSCALE","SETVIEWCENTERX","SETVIEWCENTERY","DEFAULT_WMS_VERSION","GETFEATUREINFO_IMAGE_SIZE","ImageWMS","v13_","updateV13_","serverType_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","SERVICE","REQUEST","QUERY_LAYERS","viewExtent","requestExtent","WMSServerType","OSM","hasImageData","ImageData","_","newImageData","createImageData","createMinion","operation","workerHasImageData","buffers","meta","imageOps","numBuffers","numBytes","byteLength","Uint8ClampedArray","arrays","createWorker","onMessage","lib","blob","Blob","createObjectURL","worker","Worker","Processor","threads","_imageOps","minion","workers","_onWorkerMessage","postMessage","_workers","_queue","_maxQueueLength","queue","_running","_dataLookup","_job","process","inputs","_enqueue","_dispatch","_destroyed","job","slices","_resolveJob","RasterEventType","RasterOperationType","RasterSourceEvent","RasterSource","worker_","operationType_","operationType","threads_","renderers_","createRenderers","requestedFrameState_","renderedImageCanvas_","setOperation","opt_lib","updateFrameState_","allSourcesReady_","ready","processSources_","imageDatas","onWorkerComplete_","sharedContext","TileArcGISRest","tmpExtent_","getKeyForParams_","TileJSON","tileJSON_","handleTileJSONResponse","handleTileJSONError","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","bounds","minzoom","maxzoom","attributionExtent","TileWMS","transparent","bufferSize","CustomTile","preemptive","preemptive_","grid_","data_","jsonp_","getData","xRelative","yRelative","row","forDataAtCoordinate","opt_request","loadInternal_","handleError_","json","grid","UTFGrid","tileUrlFunction_","template_","getTemplate","forDataAtCoordinateAndResolution","grids","VectorImageTile","sourceTiles","replayState_","sourceRevision_","loadListenerKeys_","sourceTileListenerKeys_","sourceZ","useLoadedOnly","loadCount","sourceTileKey","finishLoading_","errorSourceTiles","empty","defaultLoadFunction","tileGrids_","KVP","REST","WMTSTileGrid","matrixIds_","matrixIds","getMatrixId","getMatrixIds","WMTS","requestEncoding","WMTSRequestEncoding","version_","dimensions_","matrixSet_","matrixSet","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","tilematrixset","Version","localContext","TileCol","TileRow","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","ol","colorlike","featureloader","loadingstrategy","sphere","$ol$Collection","$ol$Feature","$ol$Geolocation","$ol$Graticule","$ol$Kinetic","$ol$Map","$ol$Object","$ol$Observable","unByKey","$ol$Overlay","$ol$PluggableMap","$ol$View","$ol$WebGLMap","_ol_color.asArray","_ol_color.asString","_ol_colorlike.asColorLike","$ol$control$Attribution","_ol_control_Attribution.render","$ol$control$Control","$ol$control$FullScreen","$ol$control$MousePosition","_ol_control_MousePosition.render","$ol$control$OverviewMap","_ol_control_OverviewMap.render","$ol$control$Rotate","_ol_control_Rotate.render","$ol$control$ScaleLine","_ol_control_ScaleLine.render","$ol$control$Zoom","$ol$control$ZoomSlider","_ol_control_ZoomSlider.render","$ol$control$ZoomToExtent","_ol_control.defaults","_ol_coordinate.add","createStringXY","_ol_coordinate.format","_ol_coordinate.rotate","toStringHDMS","_ol_coordinate.toStringXY","_ol_easing.easeIn","_ol_easing.easeOut","_ol_easing.inAndOut","_ol_easing.linear","upAndDown","_ol_events_condition.altKeyOnly","_ol_events_condition.altShiftKeysOnly","_ol_events_condition.always","click","doubleClick","activeElement","_ol_events_condition.mouseOnly","_ol_events_condition.never","_ol_events_condition.noModifierKeys","platformModifierKeyOnly","_ol_events_condition.pointerMove","_ol_events_condition.primaryAction","_ol_events_condition.shiftKeyOnly","_ol_events_condition.singleClick","_ol_events_condition.targetNotEditable","_ol_extent.applyTransform","_ol_extent.boundingExtent","_ol_extent.buffer","_ol_extent.containsCoordinate","_ol_extent.containsExtent","_ol_extent.containsXY","_ol_extent.createEmpty","_ol_extent.equals","_ol_extent.extend","_ol_extent.getArea","_ol_extent.getBottomLeft","_ol_extent.getBottomRight","_ol_extent.getCenter","_ol_extent.getHeight","_ol_extent.getIntersection","_ol_extent.getTopLeft","_ol_extent.getTopRight","_ol_extent.getWidth","_ol_extent.intersects","_ol_extent.isEmpty","_ol_featureloader.xhr","$ol$format$EsriJSON","$ol$format$Feature","$ol$format$GML","$ol$format$GML2","$ol$format$GML3","$ol$format$GPX","$ol$format$GeoJSON","$ol$format$IGC","$ol$format$KML","$ol$format$MVT","$ol$format$OSMXML","$ol$format$Polyline","_ol_format_Polyline.decodeDeltas","_ol_format_Polyline.decodeFloats","_ol_format_Polyline.encodeDeltas","_ol_format_Polyline.encodeFloats","$ol$format$TopoJSON","$ol$format$WFS","writeFilter","$ol$format$WKT","$ol$format$WMSCapabilities","$ol$format$WMSGetFeatureInfo","$ol$format$WMTSCapabilities","$ol$format$filter$Within","_ol_format_filter.and","_ol_format_filter.bbox","between","during","equalTo","greaterThan","greaterThanOrEqualTo","isNull","lessThan","lessThanOrEqualTo","like","not","notEqualTo","or","within","$ol$geom$Circle","$ol$geom$Geometry","$ol$geom$GeometryCollection","$ol$geom$LineString","$ol$geom$LinearRing","$ol$geom$MultiLineString","$ol$geom$MultiPoint","$ol$geom$MultiPolygon","$ol$geom$Point","$ol$geom$Polygon","_ol_geom_Polygon.circular","_ol_geom_Polygon.fromCircle","_ol_geom_Polygon.fromExtent","$ol$geom$SimpleGeometry","_ol_has.DEVICE_PIXEL_RATIO","_ol_has.GEOLOCATION","_ol_has.TOUCH","inherits","childCtor","parentCtor","create","constructor","$ol$interaction$DoubleClickZoom","$ol$interaction$DragAndDrop","$ol$interaction$DragBox","$ol$interaction$DragZoom","$ol$interaction$Draw","createBox","boxCoordinates","createRegularPolygon","_ol_interaction_Draw.handleEvent","Extent","$ol$interaction$Extent","$ol$interaction$Interaction","$ol$interaction$KeyboardZoom","$ol$interaction$Modify","$ol$interaction$MouseWheelZoom","Pointer","$ol$interaction$Pointer","_ol_interaction_Pointer.handleEvent","$ol$interaction$Select","$ol$interaction$Snap","$ol$interaction$Translate","_ol_interaction.defaults","Base","$ol$layer$Base","Group","$ol$layer$Group","$ol$layer$Heatmap","$ol$layer$Image","$ol$layer$Layer","$ol$layer$Tile","Vector","$ol$layer$Vector","$ol$layer$VectorTile","_ol_loadingstrategy.all","$ol$proj$Projection","_ol_proj_Units.METERS_PER_UNIT","addCoordinateTransforms","forward","inverse","destProj","_ol_proj.addEquivalentProjections","_ol_proj.addProjection","_ol_proj.equivalent","fromLonLat","_ol_proj.get","_ol_proj.getPointResolution","_ol_proj.getTransform","toLonLat","lonLat","_ol_proj.transform","_ol_proj.transformExtent","$ol$render$VectorContext","_ol_render_canvas.labelCache","toContext","$ol$renderer$canvas$VectorTileLayer","_ol_size.toSize","$ol$source$BingMaps","$ol$source$CartoDB","$ol$source$Cluster","$ol$source$ImageArcGISRest","$ol$source$ImageMapGuide","$ol$source$ImageWMS","$ol$source$OSM","Raster","$ol$source$Raster","$ol$source$Source","$ol$source$Tile","$ol$source$TileArcGISRest","$ol$source$TileImage","$ol$source$TileJSON","$ol$source$TileWMS","$ol$source$UTFGrid","$ol$source$Vector","$ol$source$VectorTile","$ol$source$WMTS","_ol_sphere.getDistance","$ol$style$Circle","$ol$style$Fill","$ol$style$Icon","$ol$style$Image","$ol$style$RegularShape","$ol$style$Stroke","$ol$style$Style","$ol$style$Text","$ol$tilegrid$TileGrid","$ol$tilegrid$WMTS","_ol_tilegrid.createXYZ","_ol_xml.getAllTextContent","_ol_xml.parse"],"mappings":"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"}