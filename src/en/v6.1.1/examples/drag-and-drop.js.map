{"version":3,"sources":["webpack:///./drag-and-drop.js"],"names":["dragAndDropInteraction","formatConstructors","map","interactions","extend","layers","source","imagerySet","key","target","view","center","zoom","on","event","const","vectorSource","features","addLayer","getView","fit","getExtent","displayFeatureInfo","pixel","forEachFeatureAtPixel","feature","push","length","i","ii","info","get","document","getElementById","innerHTML","join","evt","dragging","getEventPixel","originalEvent"],"mappings":"2FAAA,qHAOMA,EAAyB,IAAI,IAAY,CAC7CC,mBAAoB,CAClB,IACA,IACA,IACA,IACA,OAIEC,EAAM,IAAI,IAAI,CAClBC,aAAc,cAAsBC,OAAO,CAACJ,IAC5CK,OAAQ,CACN,IAAI,IAAU,CACZC,OAAQ,IAAI,IAAS,CACnBC,WAAY,SACZC,IAAK,wEAIXC,OAAQ,MACRC,KAAM,IAAI,IAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAIVZ,EAAuBa,GAAG,cAAe,SAASC,GAChDC,IAAMC,EAAe,IAAI,IAAa,CACpCC,SAAUH,EAAMG,WAElBf,EAAIgB,SAAS,IAAI,IAAY,CAC3BZ,OAAQU,KAEVd,EAAIiB,UAAUC,IAAIJ,EAAaK,eAGjCN,IAAMO,EAAqB,SAASC,GAClCR,IAAME,EAAW,GAIjB,GAHAf,EAAIsB,sBAAsBD,EAAO,SAASE,GACxCR,EAASS,KAAKD,KAEZR,EAASU,OAAS,EAAG,CACvBZ,IACIa,EAAGC,EADDC,EAAO,GAEb,IAAKF,EAAI,EAAGC,EAAKZ,EAASU,OAAQC,EAAIC,IAAMD,EAC1CE,EAAKJ,KAAKT,EAASW,GAAGG,IAAI,SAE5BC,SAASC,eAAe,QAAQC,UAAYJ,EAAKK,KAAK,OAAS,aAE/DH,SAASC,eAAe,QAAQC,UAAY,UAIhDhC,EAAIW,GAAG,cAAe,SAASuB,GAC7B,IAAIA,EAAIC,SAAR,CAGAtB,IAAMQ,EAAQrB,EAAIoC,cAAcF,EAAIG,eACpCjB,EAAmBC,MAGrBrB,EAAIW,GAAG,QAAS,SAASuB,GACvBd,EAAmBc,EAAIb,W","file":"drag-and-drop.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {GPX, GeoJSON, IGC, KML, TopoJSON} from '../src/ol/format.js';\nimport {defaults as defaultInteractions, DragAndDrop} from '../src/ol/interaction.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {BingMaps, Vector as VectorSource} from '../src/ol/source.js';\n\nconst dragAndDropInteraction = new DragAndDrop({\n  formatConstructors: [\n    GPX,\n    GeoJSON,\n    IGC,\n    KML,\n    TopoJSON\n  ]\n});\n\nconst map = new Map({\n  interactions: defaultInteractions().extend([dragAndDropInteraction]),\n  layers: [\n    new TileLayer({\n      source: new BingMaps({\n        imagerySet: 'Aerial',\n        key: 'As1HiMj1PvLPlqc_gtM7AqZfBL8ZL3VrjaS3zIb22Uvb9WKhuJObROC-qUpa81U5'\n      })\n    })\n  ],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n\ndragAndDropInteraction.on('addfeatures', function(event) {\n  const vectorSource = new VectorSource({\n    features: event.features\n  });\n  map.addLayer(new VectorLayer({\n    source: vectorSource\n  }));\n  map.getView().fit(vectorSource.getExtent());\n});\n\nconst displayFeatureInfo = function(pixel) {\n  const features = [];\n  map.forEachFeatureAtPixel(pixel, function(feature) {\n    features.push(feature);\n  });\n  if (features.length > 0) {\n    const info = [];\n    let i, ii;\n    for (i = 0, ii = features.length; i < ii; ++i) {\n      info.push(features[i].get('name'));\n    }\n    document.getElementById('info').innerHTML = info.join(', ') || '&nbsp';\n  } else {\n    document.getElementById('info').innerHTML = '&nbsp;';\n  }\n};\n\nmap.on('pointermove', function(evt) {\n  if (evt.dragging) {\n    return;\n  }\n  const pixel = map.getEventPixel(evt.originalEvent);\n  displayFeatureInfo(pixel);\n});\n\nmap.on('click', function(evt) {\n  displayFeatureInfo(evt.pixel);\n});\n"],"sourceRoot":""}