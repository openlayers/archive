{"version":3,"sources":["webpack:///./export-map.js"],"names":["map","layers","source","url","format","target","view","center","zoom","addOverlay","position","element","document","getElementById","const","exportOptions","filter","className","indexOf","addEventListener","once","getTargetElement","then","dataURL","link","href","click","renderSync"],"mappings":"2FAAA,gFASMA,EAAM,IAAI,IAAI,CAClBC,OAAQ,CACN,IAAI,IAAU,CACZC,OAAQ,IAAI,MAEd,IAAI,IAAY,CACdA,OAAQ,IAAI,IAAa,CACvBC,IAAK,iCACLC,OAAQ,IAAI,SAIlBC,OAAQ,MACRC,KAAM,IAAI,IAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAIVR,EAAIS,WAAW,IAAI,IAAQ,CACzBC,SAAU,CAAC,EAAG,GACdC,QAASC,SAASC,eAAe,WAMnCC,IAAMC,EAAgB,CACpBC,OAAQ,SAASL,GACf,OAAOA,EAAQM,YAAyD,IAA7CN,EAAQM,UAAUC,QAAQ,gBAIzDN,SAASC,eAAe,cAAcM,iBAAiB,QAAS,WAC9DnB,EAAIoB,KAAK,iBAAkB,WACzB,gBAAMpB,EAAIqB,mBAAoBN,GAC3BO,KAAK,SAASC,GACbT,IAAMU,EAAOZ,SAASC,eAAe,kBACrCW,EAAKC,KAAOF,EACZC,EAAKE,YAGX1B,EAAI2B,iB","file":"export-map.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport Overlay from '../src/ol/Overlay.js';\nimport GeoJSON from '../src/ol/format/GeoJSON.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\n\nimport {toPng} from 'html-to-image';\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM()\n    }),\n    new VectorLayer({\n      source: new VectorSource({\n        url: 'data/geojson/countries.geojson',\n        format: new GeoJSON()\n      })\n    })\n  ],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n\nmap.addOverlay(new Overlay({\n  position: [0, 0],\n  element: document.getElementById('null')\n}));\n\n\n// export options for html-to-image.\n// See: https://github.com/bubkoo/html-to-image#options\nconst exportOptions = {\n  filter: function(element) {\n    return element.className ? element.className.indexOf('ol-control') === -1 : true;\n  }\n};\n\ndocument.getElementById('export-png').addEventListener('click', function() {\n  map.once('rendercomplete', function() {\n    toPng(map.getTargetElement(), exportOptions)\n      .then(function(dataURL) {\n        const link = document.getElementById('image-download');\n        link.href = dataURL;\n        link.click();\n      });\n  });\n  map.renderSync();\n});\n"],"sourceRoot":""}