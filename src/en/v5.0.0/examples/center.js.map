{"version":3,"sources":["webpack:///./center.js"],"names":["source","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_5__","url","format","_src_ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_3__","style","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_6__","fill","color","stroke","width","image","radius","vectorLayer","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_4__","view","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","center","zoom","map","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","layers","target","controls","Object","_src_ol_control_js__WEBPACK_IMPORTED_MODULE_2__","attributionOptions","collapsible","document","getElementById","addEventListener","polygon","getFeatures","getGeometry","fit","padding","constrainResolution","nearest","point","minResolution","size","getSize","centerOn","getCoordinates"],"mappings":"4JAQA,MAAAA,EAAA,IAAAC,EAAA,GACAC,IAAA,mCACAC,OAAA,IAAAC,EAAA,IAEAC,EAAA,IAAAC,EAAA,GACAC,KAAA,IAAAD,EAAA,GACAE,MAAA,6BAEAC,OAAA,IAAAH,EAAA,GACAE,MAAA,UACAE,MAAA,IAEAC,MAAA,IAAAL,EAAA,GACAM,OAAA,EACAL,KAAA,IAAAD,EAAA,GACAE,MAAA,6BAEAC,OAAA,IAAAH,EAAA,GACAE,MAAA,UACAE,MAAA,QAIAG,EAAA,IAAAC,EAAA,GACAd,SACAK,UAEAU,EAAA,IAAAC,EAAA,GACAC,QAAA,KACAC,KAAA,IAEAC,EAAA,IAAAC,EAAA,GACAC,QACA,IAAAP,EAAA,GACAd,OAAA,IAAAC,EAAA,IAEAY,GAEAS,OAAA,MACAC,SAAAC,OAAAC,EAAA,EAAAD,EACAE,oBACAC,aAAA,KAGAZ,SAGAa,SAAAC,eAAA,yBACAC,iBAAA,mBACA,MACAC,EADA/B,EAAAgC,cAAA,GAC0EC,cAC1ElB,EAAAmB,IAAAH,GAAqBI,SAAA,eAAAC,qBAAA,MACpB,GAGDR,SAAAC,eAAA,gCACAC,iBAAA,mBACA,MACAC,EADA/B,EAAAgC,cAAA,GAC0EC,cAC1ElB,EAAAmB,IAAAH,GAAqBI,SAAA,mBACpB,GAGDP,SAAAC,eAAA,4BACAC,iBAAA,mBACA,MACAC,EADA/B,EAAAgC,cAAA,GAC0EC,cAC1ElB,EAAAmB,IAAAH,GAAqBI,SAAA,eAAAE,SAAA,MACpB,GAEDT,SAAAC,eAAA,kBACAC,iBAAA,mBACA,MACAQ,EADAtC,EAAAgC,cAAA,GACwEC,cACxElB,EAAAmB,IAAAI,GAAmBH,SAAA,eAAAI,cAAA,OAClB,GAEDX,SAAAC,eAAA,kBACAC,iBAAA,mBACA,MACAQ,EADAtC,EAAAgC,cAAA,GACsDC,cACtDO,EAA8CrB,EAAAsB,UAC9C1B,EAAA2B,SAAAJ,EAAAK,iBAAAH,GAAA,YACC","file":"center.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {defaults as defaultControls} from '../src/ol/control.js';\nimport GeoJSON from '../src/ol/format/GeoJSON.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\nimport {Circle as CircleStyle, Fill, Stroke, Style} from '../src/ol/style.js';\n\nconst source = new VectorSource({\n  url: 'data/geojson/switzerland.geojson',\n  format: new GeoJSON()\n});\nconst style = new Style({\n  fill: new Fill({\n    color: 'rgba(255, 255, 255, 0.6)'\n  }),\n  stroke: new Stroke({\n    color: '#319FD3',\n    width: 1\n  }),\n  image: new CircleStyle({\n    radius: 5,\n    fill: new Fill({\n      color: 'rgba(255, 255, 255, 0.6)'\n    }),\n    stroke: new Stroke({\n      color: '#319FD3',\n      width: 1\n    })\n  })\n});\nconst vectorLayer = new VectorLayer({\n  source: source,\n  style: style\n});\nconst view = new View({\n  center: [0, 0],\n  zoom: 1\n});\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM()\n    }),\n    vectorLayer\n  ],\n  target: 'map',\n  controls: defaultControls({\n    attributionOptions: {\n      collapsible: false\n    }\n  }),\n  view: view\n});\n\nconst zoomtoswitzerlandbest = document.getElementById('zoomtoswitzerlandbest');\nzoomtoswitzerlandbest.addEventListener('click', function() {\n  const feature = source.getFeatures()[0];\n  const polygon = /** @type {module:ol/geom/SimpleGeometry~SimpleGeometry} */ (feature.getGeometry());\n  view.fit(polygon, {padding: [170, 50, 30, 150], constrainResolution: false});\n}, false);\n\nconst zoomtoswitzerlandconstrained =\n    document.getElementById('zoomtoswitzerlandconstrained');\nzoomtoswitzerlandconstrained.addEventListener('click', function() {\n  const feature = source.getFeatures()[0];\n  const polygon = /** @type {module:ol/geom/SimpleGeometry~SimpleGeometry} */ (feature.getGeometry());\n  view.fit(polygon, {padding: [170, 50, 30, 150]});\n}, false);\n\nconst zoomtoswitzerlandnearest =\n    document.getElementById('zoomtoswitzerlandnearest');\nzoomtoswitzerlandnearest.addEventListener('click', function() {\n  const feature = source.getFeatures()[0];\n  const polygon = /** @type {module:ol/geom/SimpleGeometry~SimpleGeometry} */ (feature.getGeometry());\n  view.fit(polygon, {padding: [170, 50, 30, 150], nearest: true});\n}, false);\n\nconst zoomtolausanne = document.getElementById('zoomtolausanne');\nzoomtolausanne.addEventListener('click', function() {\n  const feature = source.getFeatures()[1];\n  const point = /** @type {module:ol/geom/SimpleGeometry~SimpleGeometry} */ (feature.getGeometry());\n  view.fit(point, {padding: [170, 50, 30, 150], minResolution: 50});\n}, false);\n\nconst centerlausanne = document.getElementById('centerlausanne');\ncenterlausanne.addEventListener('click', function() {\n  const feature = source.getFeatures()[1];\n  const point = /** @type {module:ol/geom/Point~Point} */ (feature.getGeometry());\n  const size = /** @type {module:ol/size~Size} */ (map.getSize());\n  view.centerOn(point.getCoordinates(), size, [570, 500]);\n}, false);\n"],"sourceRoot":""}