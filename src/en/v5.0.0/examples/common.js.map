{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../src/ol/xml.js","webpack:///../src/ol/util.js","webpack:///../src/ol/style.js","webpack:///../src/ol/extent.js","webpack:///../src/ol/centerconstraint.js","webpack:///../src/ol/View.js","webpack:///../src/ol/resolutionconstraint.js","webpack:///../src/ol/geom/flat/textpath.js","webpack:///../src/ol/render/canvas/Instruction.js","webpack:///../src/ol/render/canvas/Replay.js","webpack:///../src/ol/render/canvas/ImageReplay.js","webpack:///../src/ol/render/canvas/LineStringReplay.js","webpack:///../src/ol/render/canvas/PolygonReplay.js","webpack:///../src/ol/geom/flat/straightchunk.js","webpack:///../src/ol/render/canvas/TextReplay.js","webpack:///../src/ol/render/canvas/ReplayGroup.js","webpack:///../src/ol/renderer/canvas/VectorLayer.js","webpack:///../src/ol/renderer/canvas/VectorTileLayer.js","webpack:///../src/ol/Map.js","webpack:///../src/ol/format/xsd.js","webpack:///../src/ol/proj/epsg3857.js","webpack:///../src/ol/proj/epsg4326.js","webpack:///../src/ol/proj/projections.js","webpack:///../src/ol/proj.js","webpack:///../src/ol/events.js","webpack:///../src/ol/geom/GeometryType.js","webpack:///../src/ol/layer/Heatmap.js","webpack:///../src/ol/layer/Tile.js","webpack:///../src/ol/webgl.js","webpack:///../src/ol/events/EventType.js","webpack:///../src/ol/obj.js","webpack:///../src/ol/array.js","webpack:///../src/ol/source/CartoDB.js","webpack:///../src/ol/source/Cluster.js","webpack:///../src/ol/source/ImageArcGISRest.js","webpack:///../src/ol/source/ImageCanvas.js","webpack:///../src/ol/source/TileArcGISRest.js","webpack:///../src/ol/source/TileDebug.js","webpack:///../src/ol/source.js","webpack:///../src/ol/transform.js","webpack:///../src/ol/TileState.js","webpack:///../src/ol/source/OSM.js","webpack:///../src/ol/math.js","webpack:///../src/ol/geom/GeometryLayout.js","webpack:///../src/ol/source/Vector.js","webpack:///../src/ol/Feature.js","webpack:///../src/ol/control/FullScreen.js","webpack:///../src/ol/control/OverviewMap.js","webpack:///../src/ol/control/ScaleLine.js","webpack:///../src/ol/control/ZoomSlider.js","webpack:///../src/ol/control/ZoomToExtent.js","webpack:///../src/ol/control.js","webpack:///../src/ol/render/canvas.js","webpack:///../src/ol/asserts.js","webpack:///../src/ol/functions.js","webpack:///../src/ol/geom/Point.js","webpack:///../src/ol/Object.js","webpack:///../src/ol/dom.js","webpack:///../src/ol/interaction/DoubleClickZoom.js","webpack:///../src/ol/interaction/DragPan.js","webpack:///../src/ol/interaction/DragRotate.js","webpack:///../src/ol/render/Box.js","webpack:///../src/ol/interaction/DragBox.js","webpack:///../src/ol/interaction/DragZoom.js","webpack:///../src/ol/events/KeyCode.js","webpack:///../src/ol/interaction/KeyboardPan.js","webpack:///../src/ol/interaction/KeyboardZoom.js","webpack:///../src/ol/interaction/MouseWheelZoom.js","webpack:///../src/ol/interaction/PinchRotate.js","webpack:///../src/ol/interaction/PinchZoom.js","webpack:///../src/ol/interaction/DragAndDrop.js","webpack:///../src/ol/interaction/DragRotateAndZoom.js","webpack:///../src/ol/interaction/Modify.js","webpack:///../src/ol/interaction/Snap.js","webpack:///../src/ol/interaction/Translate.js","webpack:///../src/ol/interaction.js","webpack:///../src/ol/coordinate.js","webpack:///../src/ol/ImageState.js","webpack:///../src/ol/events/Event.js","webpack:///../src/ol/events/condition.js","webpack:///../src/ol/layer/Vector.js","webpack:///../src/ol/render/ReplayType.js","webpack:///../src/ol/geom/Polygon.js","webpack:///../src/ol/MapBrowserEventType.js","webpack:///../src/ol/geom/LineString.js","webpack:///../src/ol/format/Feature.js","webpack:///../src/ol/ViewHint.js","webpack:///../src/ol/interaction/Pointer.js","webpack:///../src/ol/format/GeoJSON.js","webpack:///../src/ol/interaction/Interaction.js","webpack:///../src/ol/source/BingMaps.js","webpack:///../src/ol/css.js","webpack:///../src/ol/has.js","webpack:///../src/ol/geom.js","webpack:///../src/ol/source/State.js","webpack:///../src/ol/Collection.js","webpack:///../src/ol/format/GMLBase.js","webpack:///../src/ol/control/Control.js","webpack:///../src/ol/source/XYZ.js","webpack:///../src/ol/geom/SimpleGeometry.js","webpack:///../src/ol/easing.js","webpack:///../src/ol/tilecoord.js","webpack:///../src/ol/size.js","webpack:///../src/ol/proj/Units.js","webpack:///../src/ol/LayerType.js","webpack:///../src/ol/geom/flat/transform.js","webpack:///../src/ol/CollectionEventType.js","webpack:///../src/ol/source/TileJSON.js","webpack:///../src/ol/reproj/Image.js","webpack:///../src/ol/source/Image.js","webpack:///../src/ol/reproj/Tile.js","webpack:///../src/ol/source/TileImage.js","webpack:///../src/ol/layer/Layer.js","webpack:///../src/ol/tilegrid.js","webpack:///../src/ol/proj/Projection.js","webpack:///../src/ol/Tile.js","webpack:///../node_modules/proj4/lib/global.js","webpack:///../node_modules/proj4/lib/constants/values.js","webpack:///../node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///../node_modules/proj4/lib/constants/units.js","webpack:///../node_modules/proj4/lib/match.js","webpack:///../node_modules/proj4/lib/projString.js","webpack:///../node_modules/wkt-parser/parser.js","webpack:///../node_modules/wkt-parser/process.js","webpack:///../node_modules/wkt-parser/index.js","webpack:///../node_modules/proj4/lib/defs.js","webpack:///../node_modules/proj4/lib/parseCode.js","webpack:///../node_modules/proj4/lib/extend.js","webpack:///../node_modules/proj4/lib/common/msfnz.js","webpack:///../node_modules/proj4/lib/common/sign.js","webpack:///../node_modules/proj4/lib/common/adjust_lon.js","webpack:///../node_modules/proj4/lib/common/tsfnz.js","webpack:///../node_modules/proj4/lib/common/phi2z.js","webpack:///../node_modules/proj4/lib/projections/longlat.js","webpack:///../node_modules/proj4/lib/projections.js","webpack:///../node_modules/proj4/lib/projections/merc.js","webpack:///../node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///../node_modules/proj4/lib/constants/Datum.js","webpack:///../node_modules/proj4/lib/datum.js","webpack:///../node_modules/proj4/lib/Proj.js","webpack:///../node_modules/proj4/lib/deriveConstants.js","webpack:///../node_modules/proj4/lib/datum_transform.js","webpack:///../node_modules/proj4/lib/datumUtils.js","webpack:///../node_modules/proj4/lib/adjust_axis.js","webpack:///../node_modules/proj4/lib/common/toPoint.js","webpack:///../node_modules/proj4/lib/checkSanity.js","webpack:///../node_modules/proj4/lib/transform.js","webpack:///../node_modules/proj4/lib/core.js","webpack:///../node_modules/mgrs/mgrs.js","webpack:///../node_modules/proj4/lib/Point.js","webpack:///../node_modules/proj4/lib/common/pj_enfn.js","webpack:///../node_modules/proj4/lib/common/pj_mlfn.js","webpack:///../node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///../node_modules/proj4/lib/projections/tmerc.js","webpack:///../node_modules/proj4/lib/common/sinh.js","webpack:///../node_modules/proj4/lib/common/hypot.js","webpack:///../node_modules/proj4/lib/common/asinhy.js","webpack:///../node_modules/proj4/lib/common/log1py.js","webpack:///../node_modules/proj4/lib/common/gatg.js","webpack:///../node_modules/proj4/lib/common/clens.js","webpack:///../node_modules/proj4/lib/common/clens_cmplx.js","webpack:///../node_modules/proj4/lib/common/cosh.js","webpack:///../node_modules/proj4/lib/projections/etmerc.js","webpack:///../node_modules/proj4/lib/common/adjust_zone.js","webpack:///../node_modules/proj4/lib/projections/utm.js","webpack:///../node_modules/proj4/lib/common/srat.js","webpack:///../node_modules/proj4/lib/projections/gauss.js","webpack:///../node_modules/proj4/lib/projections/sterea.js","webpack:///../node_modules/proj4/lib/projections/stere.js","webpack:///../node_modules/proj4/lib/projections/somerc.js","webpack:///../node_modules/proj4/lib/projections/omerc.js","webpack:///../node_modules/proj4/lib/projections/lcc.js","webpack:///../node_modules/proj4/lib/projections/krovak.js","webpack:///../node_modules/proj4/lib/common/mlfn.js","webpack:///../node_modules/proj4/lib/common/e0fn.js","webpack:///../node_modules/proj4/lib/common/e1fn.js","webpack:///../node_modules/proj4/lib/common/e2fn.js","webpack:///../node_modules/proj4/lib/common/e3fn.js","webpack:///../node_modules/proj4/lib/common/gN.js","webpack:///../node_modules/proj4/lib/common/adjust_lat.js","webpack:///../node_modules/proj4/lib/common/imlfn.js","webpack:///../node_modules/proj4/lib/projections/cass.js","webpack:///../node_modules/proj4/lib/common/qsfnz.js","webpack:///../node_modules/proj4/lib/projections/laea.js","webpack:///../node_modules/proj4/lib/common/asinz.js","webpack:///../node_modules/proj4/lib/projections/aea.js","webpack:///../node_modules/proj4/lib/projections/gnom.js","webpack:///../node_modules/proj4/lib/common/iqsfnz.js","webpack:///../node_modules/proj4/lib/projections/cea.js","webpack:///../node_modules/proj4/lib/projections/eqc.js","webpack:///../node_modules/proj4/lib/projections/poly.js","webpack:///../node_modules/proj4/lib/projections/nzmg.js","webpack:///../node_modules/proj4/lib/projections/mill.js","webpack:///../node_modules/proj4/lib/projections/sinu.js","webpack:///../node_modules/proj4/lib/projections/moll.js","webpack:///../node_modules/proj4/lib/projections/eqdc.js","webpack:///../node_modules/proj4/lib/projections/vandg.js","webpack:///../node_modules/proj4/lib/projections/aeqd.js","webpack:///../node_modules/proj4/lib/projections/ortho.js","webpack:///../node_modules/proj4/lib/projections/qsc.js","webpack:///../node_modules/proj4/lib/index.js","webpack:///../node_modules/proj4/projs.js","webpack:///../src/ol/geom/MultiLineString.js","webpack:///../src/ol/events/EventTarget.js","webpack:///../src/ol/geom/MultiPoint.js","webpack:///../src/ol/source/TileWMS.js","webpack:///../src/ol/style/Style.js","webpack:///../src/ol/layer/Property.js","webpack:///../src/ol/color.js","webpack:///../src/ol/render/EventType.js","webpack:///../src/ol/render/replay.js","webpack:///../src/ol/style/IconOrigin.js","webpack:///../src/ol/ViewProperty.js","webpack:///../src/ol/geom/MultiPolygon.js","webpack:///../src/ol/geom/Geometry.js","webpack:///../src/ol/tileurlfunction.js","webpack:///../src/ol/reproj/common.js","webpack:///../src/ol/extent/Relationship.js","webpack:///../src/ol/source/Stamen.js","webpack:///../src/ol/Overlay.js","webpack:///../src/ol/style/Stroke.js","webpack:///../src/ol/geom/flat/deflate.js","webpack:///../src/ol/geom/flat/inflate.js","webpack:///../src/ol/MapBrowserPointerEvent.js","webpack:///../src/ol/geom/flat/reverse.js","webpack:///../src/ol/geom/flat/orient.js","webpack:///../src/ol/format/XMLFeature.js","webpack:///../src/ol/renderer/vector.js","webpack:///../src/ol/MapProperty.js","webpack:///../src/ol/layer/Image.js","webpack:///../src/ol/source/WMTSRequestEncoding.js","webpack:///../src/ol/source/WMTS.js","webpack:///../src/ol/colorlike.js","webpack:///../src/ol/style/IconAnchorUnits.js","webpack:///../src/ol/interaction/Draw.js","webpack:///../src/ol/pointer/EventType.js","webpack:///../src/ol/OverlayPositioning.js","webpack:///../src/ol/style/Fill.js","webpack:///../src/ol/geom/flat/closest.js","webpack:///../src/ol/format/GML3.js","webpack:///../src/ol/format/GML.js","webpack:///../src/ol/format/WFS.js","webpack:///../src/ol/format.js","webpack:///../src/ol/format/KML.js","webpack:///../src/ol/Observable.js","webpack:///../src/ol/tilegrid/TileGrid.js","webpack:///../src/ol/source/Tile.js","webpack:///../src/ol/format/FormatType.js","webpack:///../src/ol/geom/flat/contains.js","webpack:///../src/ol/source/VectorEventType.js","webpack:///../src/ol/source/ImageWMS.js","webpack:///../src/ol/uri.js","webpack:///../src/ol/source/TileEventType.js","webpack:///../src/ol/source/UrlTile.js","webpack:///../src/ol/string.js","webpack:///../src/ol/layer/VectorTileRenderType.js","webpack:///../src/ol/layer/VectorTile.js","webpack:///../src/ol/proj/proj4.js","webpack:///../src/ol/source/VectorTile.js","webpack:///../src/ol/geom/flat/simplify.js","webpack:///../src/ol/Disposable.js","webpack:///../src/ol/ImageBase.js","webpack:///../src/ol/ObjectEventType.js","webpack:///../src/ol/render/VectorContext.js","webpack:///../src/ol/rotationconstraint.js","webpack:///../src/ol/pointer/EventSource.js","webpack:///../src/ol/renderer/canvas/TileLayer.js","webpack:///../src/ol/TileRange.js","webpack:///../src/ol/source/Source.js","webpack:///../src/ol/structs/RBush.js","webpack:///../src/ol/MapEvent.js","webpack:///../src/ol/proj/transforms.js","webpack:///../src/ol/render/Feature.js","webpack:///../src/ol/format/MVT.js","webpack:///../src/ol/webgl/Shader.js","webpack:///../src/ol/webgl/Fragment.js","webpack:///../src/ol/webgl/Vertex.js","webpack:///../src/ol/render/webgl/circlereplay/defaultshader.js","webpack:///../src/ol/render/webgl/circlereplay/defaultshader/Locations.js","webpack:///../src/ol/vec/mat4.js","webpack:///../src/ol/render/webgl/Replay.js","webpack:///../src/ol/render/webgl.js","webpack:///../src/ol/webgl/Buffer.js","webpack:///../src/ol/render/webgl/CircleReplay.js","webpack:///../src/ol/render/webgl/texturereplay/defaultshader.js","webpack:///../src/ol/render/webgl/texturereplay/defaultshader/Locations.js","webpack:///../src/ol/webgl/ContextEventType.js","webpack:///../src/ol/webgl/Context.js","webpack:///../src/ol/render/webgl/TextureReplay.js","webpack:///../src/ol/render/webgl/ImageReplay.js","webpack:///../src/ol/geom/flat/topology.js","webpack:///../src/ol/render/webgl/linestringreplay/defaultshader.js","webpack:///../src/ol/render/webgl/linestringreplay/defaultshader/Locations.js","webpack:///../src/ol/render/webgl/LineStringReplay.js","webpack:///../src/ol/render/webgl/polygonreplay/defaultshader.js","webpack:///../src/ol/render/webgl/polygonreplay/defaultshader/Locations.js","webpack:///../src/ol/structs/LinkedList.js","webpack:///../src/ol/render/webgl/PolygonReplay.js","webpack:///../src/ol/render/webgl/TextReplay.js","webpack:///../src/ol/render/webgl/ReplayGroup.js","webpack:///../src/ol/render/webgl/Immediate.js","webpack:///../src/ol/renderer/webgl/defaultmapshader.js","webpack:///../src/ol/renderer/webgl/defaultmapshader/Locations.js","webpack:///../src/ol/renderer/webgl/Layer.js","webpack:///../src/ol/renderer/webgl/ImageLayer.js","webpack:///../src/ol/renderer/webgl/Map.js","webpack:///../src/ol/renderer/webgl/tilelayershader.js","webpack:///../src/ol/renderer/webgl/tilelayershader/Locations.js","webpack:///../src/ol/renderer/webgl/TileLayer.js","webpack:///../src/ol/renderer/webgl/VectorLayer.js","webpack:///../src/ol/WebGLMap.js","webpack:///../src/ol/format/WMTSCapabilities.js","webpack:///../src/ol/Image.js","webpack:///../src/ol/loadingstrategy.js","webpack:///../src/ol/reproj.js","webpack:///../src/ol/geom/LinearRing.js","webpack:///../src/ol/MapEventType.js","webpack:///../src/ol/source/WMSServerType.js","webpack:///../src/ol/layer/TileProperty.js","webpack:///../src/ol/renderer/Map.js","webpack:///../src/ol/interaction/Select.js","webpack:///../src/ol/tilegrid/common.js","webpack:///../src/ol/format/XML.js","webpack:///../src/ol/format/XLink.js","webpack:///../src/ol/format/TextFeature.js","webpack:///../src/ol/geom/GeometryCollection.js","webpack:///../src/ol/format/JSONFeature.js","webpack:///../src/ol/geom/flat/interpolate.js","webpack:///../src/ol/structs/PriorityQueue.js","webpack:///../src/ol/GeolocationProperty.js","webpack:///../src/ol/Geolocation.js","webpack:///../src/ol/source/Raster.js","webpack:///../src/ol/ImageCanvas.js","webpack:///../src/ol/style/Text.js","webpack:///../src/ol/tilegrid/WMTS.js","webpack:///../src/ol/style/Icon.js","webpack:///../src/ol/ImageTile.js","webpack:///../src/ol/render/Event.js","webpack:///../src/ol/style/Image.js","webpack:///../src/ol/geom/flat/intersectsextent.js","webpack:///../src/ol/geom/flat/area.js","webpack:///../src/ol/PluggableMap.js","webpack:///../src/ol/sphere.js","webpack:///../src/ol/pointer/MouseSource.js","webpack:///../src/ol/source/common.js","webpack:///../src/ol/renderer/canvas/Layer.js","webpack:///../src/ol/renderer/canvas/IntermediateCanvas.js","webpack:///../src/ol/geom/Circle.js","webpack:///../src/ol/MapBrowserEvent.js","webpack:///../src/ol/net.js","webpack:///../src/ol/structs/LRUCache.js","webpack:///../src/ol/interaction/Property.js","webpack:///../src/ol/geom/flat/interiorpoint.js","webpack:///../src/ol/format/filter/Filter.js","webpack:///../src/ol/format/filter/LogicalNary.js","webpack:///../src/ol/format/filter/And.js","webpack:///../src/ol/format/filter/Bbox.js","webpack:///../src/ol/format/filter/Spatial.js","webpack:///../src/ol/format/filter/Contains.js","webpack:///../src/ol/format/filter/Comparison.js","webpack:///../src/ol/format/filter/During.js","webpack:///../src/ol/format/filter/ComparisonBinary.js","webpack:///../src/ol/format/filter/EqualTo.js","webpack:///../src/ol/format/filter/GreaterThan.js","webpack:///../src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///../src/ol/format/filter/Intersects.js","webpack:///../src/ol/format/filter/IsBetween.js","webpack:///../src/ol/format/filter/IsLike.js","webpack:///../src/ol/format/filter/IsNull.js","webpack:///../src/ol/format/filter/LessThan.js","webpack:///../src/ol/format/filter/LessThanOrEqualTo.js","webpack:///../src/ol/format/filter/Not.js","webpack:///../src/ol/format/filter/NotEqualTo.js","webpack:///../src/ol/format/filter/Or.js","webpack:///../src/ol/format/filter/Within.js","webpack:///../src/ol/format/filter.js","webpack:///../src/ol/extent/Corner.js","webpack:///../src/ol/geom/flat/geodesic.js","webpack:///../src/ol/Graticule.js","webpack:///../src/ol/format/WKT.js","webpack:///../src/ol/format/TopoJSON.js","webpack:///../src/ol/format/EsriJSON.js","webpack:///../src/ol/source/ImageStatic.js","webpack:///../src/ol/TileCache.js","webpack:///../src/ol/TileQueue.js","webpack:///../src/ol/AssertionError.js","webpack:///../src/ol/format/WMSGetFeatureInfo.js","webpack:///../src/ol/style/Atlas.js","webpack:///../src/ol/source/Zoomify.js","webpack:///../src/ol/render/canvas/Immediate.js","webpack:///../node_modules/rbush/index.js","webpack:///../src/ol/render/ReplayGroup.js","webpack:///../src/ol/renderer/Layer.js","webpack:///../src/ol/layer/Base.js","webpack:///../src/ol/VectorImageTile.js","webpack:///../src/ol/style/RegularShape.js","webpack:///../src/ol/style/Circle.js","webpack:///../src/ol/layer/Group.js","webpack:///../src/ol/pointer/MsSource.js","webpack:///../src/ol/pointer/NativeSource.js","webpack:///../src/ol/pointer/PointerEvent.js","webpack:///../src/ol/pointer/TouchSource.js","webpack:///../src/ol/pointer/PointerEventHandler.js","webpack:///../src/ol/format/GML2.js","webpack:///../src/ol/style/IconImageCache.js","webpack:///../src/ol/renderer/canvas/Map.js","webpack:///../src/ol/renderer/canvas/ImageLayer.js","webpack:///../src/ol/geom/flat/flip.js","webpack:///../src/ol/format/Polyline.js","webpack:///../src/ol/format/WMSCapabilities.js","webpack:///../src/ol/format/OWS.js","webpack:///../src/ol/format/IGC.js","webpack:///../src/ol/format/GPX.js","webpack:///../src/ol/VectorTile.js","webpack:///../src/ol/style/AtlasManager.js","webpack:///../src/ol/source/UTFGrid.js","webpack:///../src/ol/source/ImageMapGuide.js","webpack:///../src/ol/style/IconImage.js","webpack:///../src/ol/interaction/Extent.js","webpack:///../src/ol/Kinetic.js","webpack:///../src/ol/control/Zoom.js","webpack:///../src/ol/control/Rotate.js","webpack:///../src/ol/control/Attribution.js","webpack:///../src/ol/control/util.js","webpack:///../src/ol/MapBrowserEventHandler.js","webpack:///../src/ol/control/MousePosition.js","webpack:///../src/ol/render.js","webpack:///../src/ol/index.js","webpack:///../src/ol/reproj/Triangulation.js","webpack:///../src/ol/style/TextPlacement.js","webpack:///../src/ol/featureloader.js","webpack:///../src/ol/layer/VectorRenderType.js","webpack:///../src/ol/geom/flat/center.js","webpack:///../src/ol/geom/flat/length.js","webpack:///../src/ol/geom/flat/segments.js","webpack:///../node_modules/pbf/index.js","webpack:///../node_modules/pixelworks/lib/index.js","webpack:///../node_modules/ieee754/index.js","webpack:///../node_modules/pixelworks/lib/util.js","webpack:///../node_modules/pixelworks/lib/processor.js","webpack:///../node_modules/quickselect/quickselect.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_array_js__WEBPACK_IMPORTED_MODULE_0__","DOCUMENT","document","implementation","createDocument","XML_SCHEMA_INSTANCE_URI","createElementNS","namespaceURI","qualifiedName","getAllTextContent","node","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","String","nodeValue","replace","firstChild","nextSibling","join","isDocument","Document","isNode","getAttributeNS","parse","xml","DOMParser","parseFromString","makeArrayExtender","valueReader","opt_this","objectStack","undefined","this","array","makeArrayPusher","makeReplacer","makeObjectPropertyPusher","opt_property","localName","makeObjectPropertySetter","makeChildAppender","nodeWriter","appendChild","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","opt_nodeName","opt_namespaceURI","fixedNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","Array","makeStructureNS","namespaceURIs","structure","opt_structureNS","structureNS","ii","parseNode","parsersNS","firstElementChild","nextElementSibling","parsers","parser","pushParseAndPop","pop","values","opt_keys","pushSerializeAndPop","inherits","childCtor","parentCtor","constructor","__webpack_exports__","VERSION","uidCounter_","getUid","obj","ol_uid","_style_Text_js__WEBPACK_IMPORTED_MODULE_10__","_extent_Relationship_js__WEBPACK_IMPORTED_MODULE_2__","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","buffer","opt_extent","clone","closestSquaredDistanceXY","x","y","dx","dy","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","Infinity","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","end","stride","extendFlatCoordinates","equals","extend","extendXY","Math","min","max","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","isEmpty","getWidth","getHeight","getCenter","getCorner","corner","_extent_Corner_js__WEBPACK_IMPORTED_MODULE_1__","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","_asserts_js__WEBPACK_IMPORTED_MODULE_0__","getForViewAndSize","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","getIntersection","intersection","intersects","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","xs","ys","_boundingExtentXYs","none","DEFAULT_MIN_ZOOM","View","opt_options","ol_Object","options","hints_","animations_","updateAnimationKey_","updateAnimations_","projection_","proj","projection","applyOptions_","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","util","properties","ViewProperty","CENTER","resolutionConstraintInfo","resolutionConstraint","maxResolution","minResolution","minZoom","maxZoom","zoomFactor","resolutions","delta","direction","z","math","index","floor","power","pow","createSnapToResolutions","getExtent","ol_extent","Units","DEGREES","getMetersPerUnit","defaultMaxResolution","common","defaultMinResolution","log","opt_maxLevel","oldLevel","newLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","createExtent","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","rotationconstraint","createRotationConstraint","constraints_","RESOLUTION","zoom","constrainResolution","Number","getResolution","ROTATION","setProperties","options_","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","animationCount","arguments","isDef","state","setCenter","setZoom","setRotation","setTimeout","Date","now","series","complete","anchor","duration","easing","PI","setHint","ViewHint","ANIMATING","getAnimating","getInteracting","INTERACTING","cancelAnimations","cancelAnimationFrame","more","seriesComplete","jj","elapsed","fraction","progress","set","calculateCenterZoom","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","getSizeFromViewport_","selector","element","querySelector","metrics","getComputedStyle","parseInt","width","height","constrainCenter","opt_delta","opt_direction","getConstraints","getHints","opt_hints","calculateExtent","opt_size","asserts","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","getProjection","getResolutions","getResolutionForExtent","xResolution","yResolution","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","getState","nearest","getResolutionForZoom","fit","geometryOrExtent","geometry","SimpleGeometry","getType","GeometryType","CIRCLE","Polygon","rotate","isArray","padding","coords","getFlatCoordinates","cosAngle","sinAngle","minRotX","minRotY","maxRotX","maxRotY","getStride","rotX","rotY","isNaN","constrainedResolution","centerRotX","centerRotY","functions","setResolution","centerOn","position","centerX","centerY","opt_anchor","hint","changed","drawTextOnPath","text","measure","startM","maxAngle","reverse","numChars","previousAngle","segmentM","segmentLength","sqrt","chunk","chunkLength","char","charAt","charLength","charM","segmentPos","angle","atan2","abs","interpolate","unshift","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","CanvasReplay","tolerance","maxExtent","pixelRatio","overlaps","declutterTree","VectorContext","maxLineWidth","alignFill_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinateCache_","renderedTransform_","ol_transform","hitDetectionInstructions","pixelCoordinates_","viewRotation_","tmpExtent","tmpTransform","replayTextBackground_","context","p1","p2","p3","p4","fillInstruction","strokeInstruction","beginPath","moveTo","lineTo","fill_","setStrokeStyle_","stroke","replayImage_","image","anchorX","anchorY","declutterGroup","opacity","originX","originY","scale","snapToPixel","fillStroke","w","h","boxW","boxH","boxX","boxY","transform","canvas","strokePadding","round","declutterArgs","render_canvas","applyPixelRatio","dashArray","map","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastCoord","nextCoord","NaN","lastRel","nextRel","skipped","Relationship","drawCustomCoordinates_","ends","replayEnds","replayEnd","drawCustom","feature","renderer","beginGeometry","type","replayBegin","replayEndss","MULTI_POLYGON","getOrientedFlatCoordinates","endss","getEndss","myEnds","inflate","POLYGON","MULTI_LINE_STRING","getEnds","LINE_STRING","MULTI_POINT","POINT","endGeometry","origin","repeatSize","translate","fill","setTransform","instruction","strokeStyle","lineWidth","lineCap","lineJoin","miterLimit","has","lineDashOffset","setLineDash","renderDeclutter_","groupCount","box","collides","insert","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","pixelCoordinates","flat_transform","skipFeatures","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","batchSize","toString","getGeometry","arc","closePath","fn","rotateWithView","backgroundFill","backgroundStroke","begin","baseline","overflow","fillKey","offsetY","strokeKey","strokeWidth","textKey","textScale","pathLength","flat_length","textLength","textAlign","textStates","parts","render_replay","cc","chars","label","part","getImage","fillStyle","replay","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","setFillStrokeStyle","fillStyleColor","getColor","colorlike","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","lineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","finish","Replay","CanvasImageReplay","declutterGroup_","hitDetectionImage_","image_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","rotation_","scale_","snapToPixel_","width_","drawCoordinates_","drawPoint","pointGeometry","myBegin","drawMultiPoint","multiPointGeometry","setImageStyle","imageStyle","getAnchor","getSize","hitDetectionImage","getHitDetectionImage","getOrigin","getOpacity","getRotateWithView","getScale","getSnapToPixel","ImageReplay","CanvasLineStringReplay","drawFlatCoordinates_","moveToLineToInstruction","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","lastStroke","LineStringReplay","CanvasPolygonReplay","drawFlatCoordinatess_","numEnds","drawCircle","circleGeometry","setFillStrokeStyles_","color","circleInstruction","drawPolygon","polygonGeometry","drawMultiPolygon","multiPolygonGeometry","simplify","PolygonReplay","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","CanvasTextReplay","labels_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textKey_","fillKey_","strokeKey_","widths_","prune","drawText","fillState","strokeState","textState","geometryType","placement","TextPlacement","LINE","flatEnd","flatOffset","oo","range","drawChars_","getFlatMidpoint","getFlatMidpoints","getFlatInteriorPoint","interiorPoints","getFlatInteriorPoints","drawTextImage_","containsKey","align","lines","split","numLines","widths","font","currentWidth","measureTextWidths","lineHeight","renderWidth","dom","ceil","textBaseline","leftRight","strokeText","fillText","setTextStyle","textStyle","textFillStyle","getFill","textStrokeStyle","getStroke","getFont","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","getText","BATCH_CONSTRUCTORS","Circle","Default","Image","LineString","Text","CanvasReplayGroup","opt_renderBuffer","ReplayGroup","declutterTree_","tolerance_","maxExtent_","overlaps_","pixelRatio_","resolution_","renderBuffer_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","circleArrayCache","fillCircleArrayRowToMiddle","radius","addDeclutter","group","declutter","clip","flatClipCoords","getClipCoords","hasReplays","replays","zIndex","candidates","zKey","replayKey","forEachFeatureAtCoordinate","hitTolerance","declutterReplays","contextSize","hitExtent","clearRect","mask","arraySize","arr","error","getCircleArray","declutteredFeatures","replayType","imageData","getImageData","ReplayType","IMAGE","TEXT","indexOf","all","entry","zs","keys","sort","zIndexKey","getReplay","Constructor","getReplays","opt_replayTypes","opt_declutterReplays","save","replayTypes","restore","canvas_ReplayGroup","CanvasVectorLayerRenderer","vectorLayer","Layer","getDeclutter","rbush_default","dirty_","renderedRevision_","renderedResolution_","renderedExtent_","renderedRenderOrder_","replayGroup_","replayGroupChanged","events","EventType","CLEAR","handleFontsChanged_","layer","LayerType","VECTOR","mapRenderer","disposeInternal","compose","frameState","layerState","skippedFeatureUids","managed","viewState","projectionExtent","vectorSource","getLayer","getSource","getTransform","clipExtent","clipped","replayGroup","clear","replayContext","drawOffsetX","drawOffsetY","transparentLayer","hasRenderListeners","hasListener","render_EventType","RENDER","drawWidth","drawHeight","drawSize","alpha","globalAlpha","getWrapX","canWrapX","worldWidth","offsetX","world","dispatchRenderEvent","mainContextAlpha","drawImage","composeFrame","preCompose","postCompose","thisArg","features","event","getVisible","handleStyleImageChange_","renderIfReadyAndVisible","prepareFrame","animating","viewHints","interacting","updateWhileAnimating","getUpdateWhileAnimating","updateWhileInteracting","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","getRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","vector","gutter","getOverlaps","loadFeatures","render","styles","styleFunction","getStyleFunction","dirty","renderFeature","forEachFeatureInExtent","loading","VectorLayer","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","DEFAULT","CanvasVectorTileLayerRenderer","TileLayer","renderedLayerRevision_","tmpTransform_","zDirection","getRenderMode","VectorTileRenderType","VECTOR_TILE","getTile","tile","TileState","LOADED","createReplayGroup_","renderTileImage_","layerRevision","renderedTiles","renderMode","revision","renderOrder","replayState","getReplayState","renderedRevision","renderedRenderOrder","source","sourceTileGrid","getTileGrid","getTileGridForProjection","tileCoord","tileExtent","zIndexKeys","tt","tileKeys","sourceTile","sourceTileCoord","sourceTileExtent","getTileCoordExtent","sharedExtent","bufferedExtent","tileProjection","reproject","setProjection","squaredTolerance","getFeatures","getUnits","TILE_PIXELS","setWorldExtent","setExtent","setReplayGroup","found","getReplayGroup","getReplayTransform_","tileGrid","tileResolution","renderResolution","tiles","clips","ABORT","worldOffset","currentZ","currentClip","zz","replayData","replayDeclutter","renderedTileRevision","wrappedTileCoord","getContext","getTilePixelSize","pixelScale","VectorTileLayer","Map_Map","controls","control_util","interactions","interaction","PluggableMap","createRenderer","Map","registerLayerRenderers","ImageLayer","_string_js__WEBPACK_IMPORTED_MODULE_1__","readBoolean","readBooleanString","_xml_js__WEBPACK_IMPORTED_MODULE_0__","string","exec","readDateTime","dateTime","readDecimal","readDecimalString","parseFloat","readNonNegativeInteger","readNonNegativeIntegerString","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","writeDecimalTextNode","decimal","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","EPSG3857Projection","code","Projection","units","METERS","global","worldExtent","getPointResolution","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","output","halfSize","tan","epsg3857_toEPSG4326","atan","exp","epsg4326_EXTENT","METERS_PER_UNIT","EPSG4326Projection","opt_axisOrientation","axisOrientation","metersPerUnit","epsg4326_PROJECTIONS","cache","cloneTransform","identityTransform","addProjection","add","getCode","transforms","proj_get","projectionLike","opt_units","pointResolution","getPointResolutionFunc","toEPSG4326","getTransformFromProjections","vertices","sphere","addEquivalentProjections","projections","forEach","addProjections","destination","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","addCoordinateTransforms","forward","inverse","sourceProj","destProj","fromLonLat","opt_projection","toLonLat","lonLat","lon","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","sourceCode","destinationCode","transformFunc","transformExtent","projections1","projections2","forwardTransform","inverseTransform","addEquivalentTransforms","_obj_js__WEBPACK_IMPORTED_MODULE_0__","findListener","listeners","listener","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","target","listenerMap","ol_lm","getListenerMap","removeListeners","removeEventListener","boundListener","listen","opt_once","callOnce","addEventListener","evt","unlistenByKey","bindListener","listenOnce","unlisten","unlistenAll","LINEAR_RING","GEOMETRY_COLLECTION","Property","DEFAULT_GRADIENT","Heatmap","baseOptions","gradient","blur","shadow","weight","Vector","gradient_","shadow_","circleImage_","styleCache_","handleGradientChanged_","setGradient","setBlur","setRadius","handleStyleChanged_","weightFunction","setStyle","style","Style","Icon","src","setRenderOrder","handleRender_","createCircle_","getRadius","getBlur","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","toDataURL","getGradient","colors","createLinearGradient","step","addColorStop","fillRect","createGradient","view8","putImageData","layer_Heatmap","_obj_js__WEBPACK_IMPORTED_MODULE_4__","preload","useInterimTilesOnError","_layer_Layer_js__WEBPACK_IMPORTED_MODULE_2__","setPreload","setUseInterimTilesOnError","_LayerType_js__WEBPACK_IMPORTED_MODULE_1__","TILE","_util_js__WEBPACK_IMPORTED_MODULE_0__","getPreload","_layer_TileProperty_js__WEBPACK_IMPORTED_MODULE_3__","PRELOAD","getUseInterimTilesOnError","USE_INTERIM_TILES_ON_ERROR","EXTENSIONS","ONE","SRC_ALPHA","COLOR_ATTACHMENT0","COLOR_BUFFER_BIT","TRIANGLES","TRIANGLE_STRIP","ONE_MINUS_SRC_ALPHA","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","STREAM_DRAW","STATIC_DRAW","DYNAMIC_DRAW","CULL_FACE","BLEND","STENCIL_TEST","DEPTH_TEST","SCISSOR_TEST","UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT","FLOAT","RGBA","FRAGMENT_SHADER","VERTEX_SHADER","LINEAR","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_2D","TEXTURE0","CLAMP_TO_EDGE","FRAMEBUFFER","CONTEXT_IDS","opt_attributes","e","DEBUG","MAX_TEXTURE_SIZE","HAS","gl","createElement","failIfMajorPerformanceCaveat","getParameter","getSupportedExtensions","CHANGE","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","assign","var_sources","TypeError","getValues","binarySearch","haystack","needle","opt_comparator","mid","cmp","comparator","numberSafeCompareFunction","low","high","a","b","includes","linearFindNearest","reverseSubArray","tmp","extension","remove","find","func","arr1","arr2","len1","stableSort","compareFnc","findIndex","every","el","idx","isSorted","opt_func","opt_strict","compare","currentVal","res","CartoDB","account_","account","mapId_","config_","config","templateCache_","XYZ","attributions","cacheSize","crossOrigin","State","LOADING","wrapX","initializeMap_","getConfig","updateConfig","setConfig","paramHash","JSON","stringify","applyTemplate_","mapUrl","client","XMLHttpRequest","handleInitResponse_","handleInitError_","open","setRequestHeader","send","status","response","responseText","err","setState","READY","tilesUrl","cdn_url","https","layergroupid","setUrl","source_CartoDB","Cluster","distance","geometryFunction","Point","refresh","getDistance","cluster","addFeatures","setDistance","mapDistance","clustered","getCoordinates","neighbors","getFeaturesInExtent","neighbor","uid","createCluster","centroid","Feature","source_Cluster","ImageArcGISRest","crossOrigin_","hidpi_","hidpi","url_","url","imageLoadFunction_","imageLoadFunction","params_","params","imageSize_","ratio_","ratio","getParams","getImageInternal","findNearestResolution","getPixelRatio","F","FORMAT","TRANSPARENT","halfWidth","halfHeight","imageResolution","getRequestUrl_","ol_Image","handleImageChange","getImageLoadFunction","srid","modifiedUrl","uri","getUrl","setImageLoadFunction","updateParams","source_ImageArcGISRest","ImageCanvasSource","canvasFunction_","canvasFunction","canvas_","canvasElement","ImageCanvas","source_ImageCanvas","TileArcGISRest","TileImage","reprojectionErrorThreshold","tileLoadFunction","urls","transition","tmpExtent_","setKey","getKeyForParams_","tileSize","tilecoord","getTilePixelRatio","fixedTileUrlFunction","ol_size","getTileSize","tmpSize","baseParams","source_TileArcGISRest","LabeledTile","ol_Tile","tileSize_","strokeRect","load","TileDebug","Tile","opaque","tileCoordKey","tileCache","textTileCoord","getTileCoordForTileUrlFunction","source_TileDebug","Zoomify","tmp_","reset","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","f","setFromArray","dx1","dy1","sx","sy","dx2","dy2","invert","det","mat","determinant","IDLE","EMPTY","_source_XYZ_js__WEBPACK_IMPORTED_MODULE_1__","ATTRIBUTION","OSM","clamp","cosh","roundUpToPowerOfTwo","LN2","squaredSegmentDistance","squaredDistance","solveLinearSystem","maxRow","maxEl","absValue","coef","k","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","lerp","XY","XYM","XYZM","_structs_RBush_js__WEBPACK_IMPORTED_MODULE_17__","VectorSourceEvent","opt_feature","_events_Event_js__WEBPACK_IMPORTED_MODULE_7__","VectorSource","_source_Source_js__WEBPACK_IMPORTED_MODULE_14__","_source_State_js__WEBPACK_IMPORTED_MODULE_15__","loader_","_functions_js__WEBPACK_IMPORTED_MODULE_11__","format_","format","loader","_asserts_js__WEBPACK_IMPORTED_MODULE_5__","_featureloader_js__WEBPACK_IMPORTED_MODULE_10__","strategy_","strategy","_loadingstrategy_js__WEBPACK_IMPORTED_MODULE_12__","useSpatialIndex","collection","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","_Collection_js__WEBPACK_IMPORTED_MODULE_1__","getArray","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","dispatchEvent","_source_VectorEventType_js__WEBPACK_IMPORTED_MODULE_16__","ADDFEATURE","_events_js__WEBPACK_IMPORTED_MODULE_6__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_8__","handleFeatureChange_","_ObjectEventType_js__WEBPACK_IMPORTED_MODULE_3__","PROPERTYCHANGE","valid","id","getId","extents","newFeatures","geometryFeatures","modifyingCollection","REMOVEFEATURE","_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_2__","ADD","REMOVE","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","intersectsCoordinate","forEachInExtent","forEachFeatureIntersectingExtent","intersectsExtent","getFeaturesCollection","getAll","_obj_js__WEBPACK_IMPORTED_MODULE_13__","_array_js__WEBPACK_IMPORTED_MODULE_4__","getFeaturesAtCoordinate","getInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","closestPoint","minSquaredDistance","previousMinSquaredDistance","closestPointXY","minDistance","getFeatureById","getFormat","update","sid","removeFromIdIndex_","CHANGEFEATURE","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","_extent_js__WEBPACK_IMPORTED_MODULE_9__","removeLoadedExtent","removed","setLoader","_style_Style_js__WEBPACK_IMPORTED_MODULE_6__","opt_geometryOrProperties","_Object_js__WEBPACK_IMPORTED_MODULE_4__","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","_events_js__WEBPACK_IMPORTED_MODULE_1__","handleGeometryChanged_","_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_5__","setGeometry","_util_js__WEBPACK_IMPORTED_MODULE_3__","getProperties","setGeometryName","getGeometryName","getStyle","handleGeometryChange_","_events_EventType_js__WEBPACK_IMPORTED_MODULE_2__","createStyleFunction","setId","getChangeType","changeType","body","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","requestFullscreen","FullScreen","cssClassName_","className","labelNode_","labelActive","labelActiveNode_","tipLabel","button","isFullScreen","setAttribute","title","handleClick_","cssClasses","css","isFullScreenSupported","Control","keys_","source_","mozFullScreenEnabled","msFullscreenEnabled","fullscreenEnabled","webkitIsFullScreen","mozFullScreen","msFullscreenElement","fullscreenElement","requestFullScreen","preventDefault","handleFullScreen_","getMap","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","getElementById","getTargetElement","mozRequestFullScreenWithKeys","Element","ALLOW_KEYBOARD_INPUT","requestFullScreenWithKeys","handleFullScreenChange_","updateSize","setMap","listenerKeys","control_FullScreen","OverviewMap","collapsed_","collapsed","collapsible_","collapsible","collapseLabel","collapseLabel_","textContent","label_","activeLabel","ovmapDiv_","ovmap_","Collection","view","ovmap","layers","addLayer","boxSizing","boxOverlay_","Overlay","positioning","OverlayPositioning","addOverlay","scope","overlay","overlayBox","getElement","move","getEventCoordinate","mousePosition","clientX","offsetWidth","clientY","offsetHeight","computeDesiredMousePosition","setPosition","endMoving","getView","mapEvent","validateExtent_","updateBox_","oldMap","oldView","unbindView_","setTarget","ObjectEventType","handleMapPropertyChange_","getLayers","getLength","setLayerGroup","getLayerGroup","bindView_","resetExtent_","MapProperty","VIEW","newView","handleRotationChanged_","isRendered","mapSize","ovmapSize","ovextent","topLeftPixel","getPixelFromCoordinate","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","steps","MAX_RATIO","ovresolution","bottomLeft","topRight","rotateBottomLeft","calculateCoordinateRotate_","coordinateRotate","ol_coordinate","handleToggle_","classList","toggle","MapEventType","POSTRENDER","getCollapsible","setCollapsible","setCollapsed","getCollapsed","getOverviewMap","control_OverviewMap","ScaleLine_Units","LEADING_DIGITS","ScaleLine","innerElement_","element_","viewState_","minWidth_","minWidth","renderedVisible_","renderedWidth_","renderedHTML_","ScaleLine_render","handleUnitsChanged_","setUnits","updateElement_","display","pointResolutionUnits","nominalCount","suffix","metersPerDegree","count","html","innerHTML","control_ScaleLine","Direction","ZoomSlider","currentResolution_","direction_","dragging_","heightLimit_","widthLimit_","previousX_","previousY_","thumbSize_","sliderInitialized_","duration_","thumbElement","containerElement","dragger_","PointerEventHandler","pointer_EventType","POINTERDOWN","handleDraggerStart_","POINTERMOVE","handleDraggerDrag_","POINTERUP","handleDraggerEnd_","handleContainerClick_","Event","ZoomSlider_render","initSlider_","setThumbPosition_","dispose","container","containerSize","thumb","computedStyle","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","originalEvent","left","top","getPositionForResolution_","amount","control_ZoomSlider","ZoomToExtent","handleZoomToExtent","control_ZoomToExtent","_transform_js__WEBPACK_IMPORTED_MODULE_4__","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","labelCache","_structs_LRUCache_js__WEBPACK_IMPORTED_MODULE_3__","checkedFonts","measureContext","textHeights","checkFont","retries","checked","referenceFonts","len","interval","referenceWidth","isAvailable","getMeasureContext","available","referenceFont","measureText","check","done","_obj_js__WEBPACK_IMPORTED_MODULE_2__","clearInterval","fontSpec","fontFamilies","_css_js__WEBPACK_IMPORTED_MODULE_0__","fontFamily","setInterval","_dom_js__WEBPACK_IMPORTED_MODULE_1__","measureTextHeight","span","heights","margin","removeChild","measureTextWidth","rotateAtOffset","resetTransform","_AssertionError_js__WEBPACK_IMPORTED_MODULE_0__","assert","assertion","errorCode","TRUE","FALSE","UNDEFINED","_math_js__WEBPACK_IMPORTED_MODULE_6__","opt_layout","_geom_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_4__","setCoordinates","setFlatCoordinates","layout","computeExtent","_extent_js__WEBPACK_IMPORTED_MODULE_1__","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_3__","setLayout","_geom_flat_deflate_js__WEBPACK_IMPORTED_MODULE_5__","_geom_GeometryLayout_js__WEBPACK_IMPORTED_MODULE_2__","setFlatCoordinatesInternal","ObjectEvent","oldValue","_events_Event_js__WEBPACK_IMPORTED_MODULE_3__","BaseObject","opt_values","_Observable_js__WEBPACK_IMPORTED_MODULE_2__","values_","changeEventTypeCache","getChangeEventType","getKeys","notify","eventType","_ObjectEventType_js__WEBPACK_IMPORTED_MODULE_1__","opt_silent","unset","createCanvasContext2D","opt_width","opt_height","outerWidth","marginLeft","marginRight","outerHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","removeChildren","lastChild","DoubleClickZoom","delta_","Interaction","handleEvent","mapBrowserEvent","stopEvent","browserEvent","MapBrowserEventType","shiftKey","interaction_DoubleClickZoom","DragPan","Pointer","handleDownEvent","handleDragEvent","handleUpEvent","kinetic_","kinetic","lastCentroid","lastPointersCount_","condition_","condition","events_condition","noKinetic_","targetPointers","getAngle","centerpx","dest","getCoordinateFromPixel","handlingDownUpSequence","shouldStopEvent","interaction_DragPan","DragRotate","DragRotate_handleDownEvent","DragRotate_handleDragEvent","DragRotate_handleUpEvent","lastAngle_","pixel","theta","interaction_DragRotate","RenderBox","geometry_","map_","startPixel_","endPixel_","Disposable","render_","startPixel","endPixel","getOverlayContainer","setPixels","createOrUpdateGeometry","Box","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","DragBoxEvent","DragBox","DragBox_handleDownEvent","DragBox_handleDragEvent","DragBox_handleUpEvent","box_","minArea_","minArea","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","onBoxEnd","interaction_DragBox","DragZoom","out_","out","mapExtent","boxPixelExtent","factor","interaction_DragZoom","KeyCode","UP","DOWN","KeyboardPan","KeyboardPan_handleEvent","defaultCondition_","pixelDelta_","pixelDelta","keyCode","mapUnitsDelta","interaction_KeyboardPan","KeyboardZoom","KeyboardZoom_handleEvent","charCode","charCodeAt","interaction_KeyboardZoom","Mode","TRACKPAD","MouseWheelZoom","MouseWheelZoom_handleEvent","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","clearTimeout","decrementInteractingHint_","rebound","timeLeft","handleWheelZoom_","setMouseAnchor","interaction_MouseWheelZoom","PinchRotate","PinchRotate_handleDownEvent","PinchRotate_handleDragEvent","PinchRotate_handleUpEvent","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","viewportPosition","getViewport","getBoundingClientRect","interaction_PinchRotate","PinchZoom","PinchZoom_handleDownEvent","PinchZoom_handleDragEvent","PinchZoom_handleUpEvent","lastDistance_","lastScaleDelta_","scaleDelta","newResolution","interaction_PinchZoom","DragAndDropEventType","DragAndDropEvent","file","opt_features","DragAndDrop","formatConstructors_","formatConstructors","dropListenKeys_","handleDrop","files","dataTransfer","item","reader","FileReader","handleResult_","readAsText","handleStop","stopPropagation","dropEffect","formatConstructor","tryReadFeatures_","featureProjection","registerListeners_","dropArea","setActive","active","unregisterListeners_","getActive","readFeatures","interaction_DragAndDrop","DragRotateAndZoom","DragRotateAndZoom_handleDownEvent","DragRotateAndZoom_handleDragEvent","DragRotateAndZoom_handleUpEvent","lastMagnitude_","magnitude","angleDelta","interaction_DragRotateAndZoom","ModifyEventType","MODIFYSTART","MODIFYEND","ModifyEvent","mapBrowserPointerEvent","Modify","Modify_handleDownEvent","Modify_handleDragEvent","Modify_handleEvent","Modify_handleUpEvent","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexFeature_","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","rBush_","RBush","pixelTolerance_","pixelTolerance","snappedToVertex_","changingFeature_","dragSegments_","overlay_","source_Vector","getDefaultStyleFunction","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","LinearRing","writePolygonGeometry_","MultiPoint","writeMultiPointGeometry_","MultiLineString","writeMultiLineStringGeometry_","MultiPolygon","writeMultiPolygonGeometry_","writeCircleGeometry_","GeometryCollection","writeGeometryCollectionGeometry_","VectorEventType","handleSourceAdd_","handleSourceRemove_","Error","features_","addFeature_","CollectionEventType","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","CIRCLE_CENTER_INDEX","CIRCLE_CIRCUMFERENCE_INDEX","compareIndexes","handlePointerAtPixel_","pixelCoordinate","vertexFeature","insertVertices","vertex","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","segment","depth","closestVertex","closestOnSegmentData","willModifyFeatures_","insertVertex_","dragSegment","segmentData","setGeometryCoordinates_","createOrUpdateVertexFeature_","centerSegmentData","featureSegments","circumferenceSegmentData","MapBrowserPointerEvent","handled","handlePointerMove_","SINGLECLICK","removePoint","pointDistanceToSegmentDataSquared","pointCoordinates","distanceToCenterSquared","distanceToCircumference","getClosestPoint","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","points","rings","polygons","kk","geometries","getGeometriesArray","sortByDistance","nodes","closestSegment","vertexPixel","dist","vertexSegments","pixel1","pixel2","squaredDist1","squaredDist2","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","POINTERDRAG","removeVertex_","dragSegments","segmentsByFeature","component","newIndex","right","deleted","segments","interaction_Modify","Snap","Snap_handleEvent","Snap_handleUpEvent","vertex_","edge_","edge","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","sortByDistance_","deltaA","deltaB","snapTo","snapped","featuresToUpdate","updateFeature_","opt_listen","register","feature_uid","segmentWriter","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","opt_unlisten","unregister","currentMap","lowerLeft","upperRight","snappedToVertex","isCircle","interaction_Snap","TranslateEventType","TRANSLATESTART","TRANSLATING","TRANSLATEEND","TranslateEvent","Translate","Translate_handleDownEvent","Translate_handleDragEvent","handleMoveEvent","Translate_handleUpEvent","layerFilter","lastCoordinate_","layerFilter_","hitTolerance_","lastFeature_","ACTIVE","handleActiveChanged_","featuresAtPixel_","newCoordinate","geom","elem","forEachFeatureAtPixel","getHitTolerance","setHitTolerance","updateState_","interaction_Translate","defaults","Kinetic","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","closestOnCircle","circle","closestOnSegment","along","createStringXY","opt_fractionDigits","template","toFixed","toStringXY","degreesToStringHDMS","hemispheres","degrees","normalizedDegrees","_math_js__WEBPACK_IMPORTED_MODULE_0__","dflPrecision","precision","deg","sec","coordinate1","coordinate2","coord1","coord2","squaredDistanceToSegment","toStringHDMS","propagationStopped","_has_js__WEBPACK_IMPORTED_MODULE_3__","altKeyOnly","altKey","metaKey","ctrlKey","altShiftKeysOnly","focus","activeElement","always","_functions_js__WEBPACK_IMPORTED_MODULE_2__","click","_MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_0__","mouseActionButton","never","pointerMove","singleClick","noModifierKeys","platformModifierKeyOnly","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","_asserts_js__WEBPACK_IMPORTED_MODULE_1__","pointerEvent","pointerType","primaryAction","isPrimary","_style_Style_js__WEBPACK_IMPORTED_MODULE_5__","renderBuffer","declutter_","updateWhileAnimating_","updateWhileInteracting_","renderMode_","_layer_VectorRenderType_js__WEBPACK_IMPORTED_MODULE_3__","setDeclutter","_math_js__WEBPACK_IMPORTED_MODULE_18__","_geom_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_7__","ends_","flatInteriorPointRevision_","flatInteriorPoint_","maxDelta_","maxDeltaRevision_","orientedRevision_","orientedFlatCoordinates_","circular","opt_n","opt_sphereRadius","_array_js__WEBPACK_IMPORTED_MODULE_1__","_sphere_js__WEBPACK_IMPORTED_MODULE_8__","polygon","_geom_GeometryLayout_js__WEBPACK_IMPORTED_MODULE_3__","fromExtent","fromCircle","opt_sides","opt_angle","sides","getLayout","arrayLength","makeRegular","startAngle","appendLinearRing","linearRing","_extent_js__WEBPACK_IMPORTED_MODULE_2__","_geom_flat_closest_js__WEBPACK_IMPORTED_MODULE_10__","_geom_flat_contains_js__WEBPACK_IMPORTED_MODULE_11__","_geom_flat_area_js__WEBPACK_IMPORTED_MODULE_9__","opt_right","_geom_flat_orient_js__WEBPACK_IMPORTED_MODULE_16__","_geom_flat_inflate_js__WEBPACK_IMPORTED_MODULE_13__","flatCenter","_geom_flat_interiorpoint_js__WEBPACK_IMPORTED_MODULE_14__","getInteriorPoint","_geom_Point_js__WEBPACK_IMPORTED_MODULE_6__","getLinearRingCount","getLinearRing","_geom_LinearRing_js__WEBPACK_IMPORTED_MODULE_5__","getLinearRings","linearRings","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","simplifiedEnds","_geom_flat_simplify_js__WEBPACK_IMPORTED_MODULE_17__","simplifiedPolygon","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__","_geom_flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_15__","_geom_flat_deflate_js__WEBPACK_IMPORTED_MODULE_12__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_0__","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","_geom_flat_simplify_js__WEBPACK_IMPORTED_MODULE_13__","_geom_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_5__","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","_geom_flat_closest_js__WEBPACK_IMPORTED_MODULE_6__","forEachSegment","_geom_flat_segments_js__WEBPACK_IMPORTED_MODULE_12__","getCoordinateAtM","opt_extrapolate","extrapolate","_geom_flat_interpolate_js__WEBPACK_IMPORTED_MODULE_9__","_geom_flat_inflate_js__WEBPACK_IMPORTED_MODULE_8__","getCoordinateAt","opt_dest","_geom_flat_length_js__WEBPACK_IMPORTED_MODULE_11__","simplifiedLineString","_geom_flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_10__","_geom_flat_deflate_js__WEBPACK_IMPORTED_MODULE_7__","_proj_js__WEBPACK_IMPORTED_MODULE_2__","FeatureFormat","dataProjection","defaultFeatureProjection","transformWithOptions","write","transformed","_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_0__","decimals","getReadOptions","readProjection","adaptOptions","_obj_js__WEBPACK_IMPORTED_MODULE_1__","getLastExtent","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","_obj_js__WEBPACK_IMPORTED_MODULE_5__","_functions_js__WEBPACK_IMPORTED_MODULE_1__","PointerInteraction","_interaction_Interaction_js__WEBPACK_IMPORTED_MODULE_4__","handleDownEvent_","handleDragEvent_","handleMoveEvent_","handleUpEvent_","trackedPointers_","pointerEvents","_MapBrowserPointerEvent_js__WEBPACK_IMPORTED_MODULE_3__","updateTrackedPointers_","_MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_2__","handledUp","isPointerDraggingEvent","pointerId","_proj_js__WEBPACK_IMPORTED_MODULE_13__","GeoJSON","_format_JSONFeature_js__WEBPACK_IMPORTED_MODULE_4__","geometryName","extractGeometryName_","extractGeometryName","GEOMETRY_READERS","_geom_Point_js__WEBPACK_IMPORTED_MODULE_10__","_geom_LineString_js__WEBPACK_IMPORTED_MODULE_6__","_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_11__","_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_8__","_geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_7__","_geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_9__","_geom_GeometryCollection_js__WEBPACK_IMPORTED_MODULE_5__","GEOMETRY_WRITERS","rightHanded","_obj_js__WEBPACK_IMPORTED_MODULE_12__","geometryReader","_format_Feature_js__WEBPACK_IMPORTED_MODULE_3__","geometryWriter","readFeatureFromObject","geoJSONFeature","_Feature_js__WEBPACK_IMPORTED_MODULE_2__","geometry_name","readFeaturesFromObject","geoJSONFeatures","readGeometryFromObject","readProjectionFromObject","crs","writeFeatureObject","writeFeaturesObject","objects","writeGeometryObject","_math_js__WEBPACK_IMPORTED_MODULE_4__","_Object_js__WEBPACK_IMPORTED_MODULE_1__","pan","opt_duration","_easing_js__WEBPACK_IMPORTED_MODULE_2__","rotateWithoutConstraints","currentRotation","zoomWithoutConstraints","zoomByDelta","_interaction_Property_js__WEBPACK_IMPORTED_MODULE_3__","_tilegrid_js__WEBPACK_IMPORTED_MODULE_8__","BingMaps","_source_TileImage_js__WEBPACK_IMPORTED_MODULE_6__","_proj_js__WEBPACK_IMPORTED_MODULE_4__","_source_State_js__WEBPACK_IMPORTED_MODULE_5__","tilePixelRatio","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","_net_js__WEBPACK_IMPORTED_MODULE_3__","handleImageryMetadataResponse","getApiKey","getImagerySet","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","resource","zoomMax","imageWidth","imageHeight","zoomMin","tileUrlFunction","_tileurlfunction_js__WEBPACK_IMPORTED_MODULE_1__","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","_tilecoord_js__WEBPACK_IMPORTED_MODULE_7__","imageryProviders","setAttributions","imageryProvider","intersecting","coverageAreas","coverageArea","bbox","epsg4326Extent","attribution","getFontFamilies","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","family","_webgl_js__WEBPACK_IMPORTED_MODULE_0__","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","CANVAS_LINE_DASH","GEOLOCATION","TOUCH","POINTER","MSPOINTER","_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_7__","_events_Event_js__WEBPACK_IMPORTED_MODULE_4__","CollectionEvent","opt_element","opt_array","_Object_js__WEBPACK_IMPORTED_MODULE_3__","unique_","unique","array_","assertUnique_","updateLength_","insertAt","removeAt","prev","setAt","opt_except","_AssertionError_js__WEBPACK_IMPORTED_MODULE_1__","_xml_js__WEBPACK_IMPORTED_MODULE_15__","GMLNS","GMLBase","featureType","featureNS","srsName","schemaLocation","FEATURE_COLLECTION_PARSERS","featureMember","readFeaturesInternal","featureMembers","_format_XMLFeature_js__WEBPACK_IMPORTED_MODULE_4__","ONLY_WHITESPACE_RE","prefix","defaultPrefix","childNodes","child","ft","candidate","featureTypes","readFeatureElement","readGeometryElement","getAttribute","GEOMETRY_PARSERS_","fid","test","readPoint","readFlatCoordinatesFromNode_","_geom_Point_js__WEBPACK_IMPORTED_MODULE_11__","_geom_GeometryLayout_js__WEBPACK_IMPORTED_MODULE_5__","readMultiPoint","MULTIPOINT_PARSERS_","_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_9__","readMultiLineString","lineStrings","MULTILINESTRING_PARSERS_","multiLineString","_geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_8__","setLineStrings","readMultiPolygon","MULTIPOLYGON_PARSERS_","multiPolygon","_geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_10__","setPolygons","pointMemberParser_","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","readFlatLinearRing_","ring","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLinearRing","_geom_LinearRing_js__WEBPACK_IMPORTED_MODULE_7__","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_12__","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","readGeometryFromNode","readFeaturesFromNode","readProjectionFromNode","_proj_js__WEBPACK_IMPORTED_MODULE_14__","_events_js__WEBPACK_IMPORTED_MODULE_5__","target_","_dom_js__WEBPACK_IMPORTED_MODULE_4__","getOverlayContainerStopEvent","_MapEventType_js__WEBPACK_IMPORTED_MODULE_2__","_tilegrid_js__WEBPACK_IMPORTED_MODULE_2__","_source_TileImage_js__WEBPACK_IMPORTED_MODULE_1__","_obj_js__WEBPACK_IMPORTED_MODULE_6__","_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_3__","_geom_GeometryLayout_js__WEBPACK_IMPORTED_MODULE_4__","getStrideForLayout","transformGeom2D","simpleGeometry","_geom_flat_transform_js__WEBPACK_IMPORTED_MODULE_5__","getFirstCoordinate","getLastCoordinate","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometry","nesting","getLayoutForStride","opt_sy","easeIn","easeOut","inAndOut","linear","opt_tileCoord","getKeyZXY","getKey","fromKey","hash","quadKey","digits","fromCharCode","withinExtentAndZ","tileRange","getTileRangeForExtentAndZ","getFullTileRange","num","hasArea","toSize","FEET","PIXELS","USFEET","transform2D","TileJSON","tileJSON_","_source_TileImage_js__WEBPACK_IMPORTED_MODULE_7__","_proj_js__WEBPACK_IMPORTED_MODULE_5__","_source_State_js__WEBPACK_IMPORTED_MODULE_6__","jsonp","_net_js__WEBPACK_IMPORTED_MODULE_4__","handleTileJSONResponse","handleTileJSONError","onXHRLoad_","onXHRError_","tileJSON","_asserts_js__WEBPACK_IMPORTED_MODULE_2__","getTileJSON","epsg4326Projection","bounds","_extent_js__WEBPACK_IMPORTED_MODULE_3__","minzoom","maxzoom","getAttributions","attributionExtent","ReprojImage","targetProj","targetExtent","getImageFunction","targetProj_","maxSourceExtent_","maxTargetExtent","limitedTargetExtent","reproj","errorThresholdInPixels","triangulation_","Triangulation","targetResolution_","targetExtent_","sourceExtent","calculateSourceExtent","sourceImage_","sourcePixelRatio_","sourceListenerKey_","ImageState","ImageBase","unlistenSource_","reproject_","sourceState","defaultImageLoadFunction","ImageSourceEventType","ImageSourceEvent","ImageSource","Source","reprojectedImage_","reprojectedRevision_","ReprojTile","targetTileGrid","getTileFunction","opt_errorThreshold","opt_renderEdges","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxSourceExtent","sourceProjExtent","isFinite","getTriangles","getZForResolution","sourceRange","srcX","srcY","unlistenSources_","sources","leftToLoad","sourceListenKey","reproj_Tile","UrlTile","defaultTileLoadFunction","tileClass","ImageTile","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","renderReprojectionEdges_","imageTile","canExpireCache","expireCache","usedTiles","usedTileCache","getTileCacheForProjection","getGutter","ol_proj","getGutterInternal","getOpaque","thisProj","projKey","ol_tilegrid","TileCache","highWaterMark","createTile_","urlTileCoord","tileUrl","tileOptions","handleTileChange","newTile","getTileInternal","interimTile","refreshInterimChain","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","_source_State_js__WEBPACK_IMPORTED_MODULE_8__","_layer_Base_js__WEBPACK_IMPORTED_MODULE_4__","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","_events_js__WEBPACK_IMPORTED_MODULE_0__","_layer_Property_js__WEBPACK_IMPORTED_MODULE_5__","SOURCE","handleSourcePropertyChange_","setSource","visibleAtResolution","visible","_util_js__WEBPACK_IMPORTED_MODULE_2__","getLayersArray","getLayerStatesArray","opt_states","states","getLayerState","getSourceState","handleSourceChange_","_events_EventType_js__WEBPACK_IMPORTED_MODULE_1__","_render_EventType_js__WEBPACK_IMPORTED_MODULE_7__","PRECOMPOSE","layerStatesArray","layerStates","_tilegrid_TileGrid_js__WEBPACK_IMPORTED_MODULE_7__","getForProjection","getDefaultTileGrid","createForProjection","setDefaultTileGrid","getTileCoordCenter","extentFromProjection","worldsAway","getTileCoordForCoordAndZ","createXYZ","resolutionsFromExtent","opt_maxZoom","opt_tileSize","_tilegrid_common_js__WEBPACK_IMPORTED_MODULE_0__","_size_js__WEBPACK_IMPORTED_MODULE_1__","opt_corner","_extent_Corner_js__WEBPACK_IMPORTED_MODULE_3__","createForExtent","half","_proj_Units_js__WEBPACK_IMPORTED_MODULE_6__","_proj_Units_js__WEBPACK_IMPORTED_MODULE_0__","code_","units_","extent_","worldExtent_","axisOrientation_","global_","canWrapX_","getPointResolutionFunc_","defaultTileGrid_","metersPerUnit_","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","setGetPointResolution","_events_EventType_js__WEBPACK_IMPORTED_MODULE_4__","_events_EventTarget_js__WEBPACK_IMPORTED_MODULE_3__","transition_","transitionStarts_","getInterimTile","_TileState_js__WEBPACK_IMPORTED_MODULE_1__","getTileCoord","getAlpha","time","inTransition","endTransition","PJD_3PARAM","PJD_7PARAM","PJD_WGS84","PJD_NODATUM","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","PrimeMeridian_exports","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","to_meter","us-ft","ignoredChar","match","testkey","lkey","projString","defData","paramName","paramVal","paramOutname","self","paramObj","v","reduce","datum","rf","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","lonc","longc","x_0","y_0","k_0","k0","r_a","R_A","zone","south","utmSouth","towgs84","datum_params","unit","from_greenwich","pm","nadgrids","datumCode","axis","substr","txt","Parser","NEUTRAL","whitespace","latin","keyword","endThings","digets","level","place","root","stack","currentObject","mapit","thing","newObj","sExpr","convert","readCharicter","neutral","quoted","afterquote","number","word","afterItem","newObjects","wkt_parser_D2R","d2r","wkt_parser","wkt","lisp","projName","local","PROJECTION","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","ellps","outName","inName","rename","cleanWKT","defs","that","def","EPSG","ESRI","IAU2000","console","WGS84","GOOGLE","lib_defs","codeWords","parseCode","testObj","testDef","some","testWKT","testProj","msfnz","eccent","sinphi","cosphi","con","sign","adjust_lon","tsfnz","phi","com","phi2z","ts","dphi","eccnth","identity","pt","projs","init","es","lat","names","projections_names","projStore","Ellipsoid_exports","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","Datum_exports","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","lib_datum","ep2","datum_type","srsCode","json","ourProj","datumDef","sphere_","deriveConstants_sphere","ecc","eccentricity","datumObj","Proj","checkParams","compareDatums","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","geodeticToGeocentric","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","X","Y","Z","geocentricToGeodetic","adjust_axis","denorm","xin","yin","zin","toPoint","checkSanity","checkCoord","checkNotWGS","datum_transform","core_wgs84","transformer","from","to","transformedArray","checkProj","oProj","core","fromProj","toProj","coord","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","mgrs_A","I","O","mgrs_V","mgrs_Z","mgrs","mgrs_forward","UTMtoLL","decode","toUpperCase","bottom","mgrs_toPoint","ll","accuracy","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","row","parm","colOrigin","rowOrigin","colInt","rowInt","rollover","getLetter100kID","get100kID","encode","N","T","C","A","M","LongOriginRad","ZoneNumber","Lat","Long","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","LetterDesignator","getLetterDesignator","LLtoUTM","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","mgrsString","testChar","hunK","sb","substring","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","warn","fromMGRS","mgrsStr","toMGRS","lib_Point","C08","pj_enfn","en","pj_mlfn","sphi","cphi","pj_inv_mlfn","arg","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","cs","tq","ml","tan_phi","ds","g","temp","asin","sinh","hypot","asinhy","log1py","gatg","pp","B","cos_2B","h1","h2","clens","arg_r","hr","hr1","hr2","clens_cmplx","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","hi1","hi","etmerc","cgb","cbg","utg","gtu","np","Qn","Zb","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","adjust_zone","dependsOn","srat","esinp","gauss_MAX_ITER","gauss","rc","phic0","ratexp","K","sterea","sinc0","cosc0","R2","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phit","eccen","somerc","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","R","b0","k1","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","omerc","no_off","no_rot","bl","fl","t0","dl","t1","t2","hl","jl","pl","dlon12","dlon10","gamma0","uc","us","vs","ql","sl","tl","vl","ul","POSITIVE_INFINITY","qp","sp","tp","vp","up","lcc","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","f0","rh1","krovak","s45","s90","fi0","alfa","uq","u0","n0","s0","ro0","ad","gfi","u","deltav","eps","ro","czech","fi1","ok","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","asq","cl","ml1","phi1","nl1","rl1","tl1","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","S_POLE","N_POLE","EQUIT","OBLIQ","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","sinph0","cosph0","coslam","sinlam","q","sinb","cosb","phi0","cCe","sCe","ab","cosz","sinz","beta","authlat","asinz","aea","sin_po","cos_po","qs1","qs2","t3","qs0","ns0","qs","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","cea","eqc","dlat","poly_MAX_ITER","poly","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu_MAX_ITER","sinu","C_y","C_x","V","moll","delta_theta","eqdc","ml2","vandg","sinth","costh","gsq","msq","xx","yy","xys","c3","m1","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","H","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","ortho","FACE_ENUM","FRONT","BACK","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_fwd_equat_face_theta","qsc_shift_lon_origin","slon","qsc","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","defaultDatum","version","proj4_package","proj4","proj4_projs","_geom_flat_simplify_js__WEBPACK_IMPORTED_MODULE_12__","_geom_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_6__","appendLineString","_geom_flat_closest_js__WEBPACK_IMPORTED_MODULE_7__","opt_interpolate","_geom_flat_interpolate_js__WEBPACK_IMPORTED_MODULE_10__","_geom_flat_inflate_js__WEBPACK_IMPORTED_MODULE_9__","getLineString","_geom_LineString_js__WEBPACK_IMPORTED_MODULE_5__","getLineStrings","midpoints","midpoint","simplifiedMultiLineString","_geom_flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_11__","_geom_flat_deflate_js__WEBPACK_IMPORTED_MODULE_8__","EventTarget","_Disposable_js__WEBPACK_IMPORTED_MODULE_1__","pendingRemovals_","dispatching_","listeners_","propagate","pendingRemovals","_functions_js__WEBPACK_IMPORTED_MODULE_3__","_events_js__WEBPACK_IMPORTED_MODULE_2__","opt_type","_math_js__WEBPACK_IMPORTED_MODULE_9__","appendPoint","multiPoint","getPoint","_geom_Point_js__WEBPACK_IMPORTED_MODULE_5__","getPoints","_uri_js__WEBPACK_IMPORTED_MODULE_13__","TileWMS","transparent","_source_TileImage_js__WEBPACK_IMPORTED_MODULE_9__","v13_","serverType_","updateV13_","_util_js__WEBPACK_IMPORTED_MODULE_1__","getGetFeatureInfoUrl","projectionObj","_proj_js__WEBPACK_IMPORTED_MODULE_6__","sourceProjectionObj","getTileCoordForCoordAndResolution","_size_js__WEBPACK_IMPORTED_MODULE_8__","_reproj_js__WEBPACK_IMPORTED_MODULE_7__","SERVICE","_common_js__WEBPACK_IMPORTED_MODULE_0__","REQUEST","QUERY_LAYERS","_source_WMSServerType_js__WEBPACK_IMPORTED_MODULE_10__","GEOSERVER","dpi","MAPSERVER","CARMENTA_SERVER","QGIS","_math_js__WEBPACK_IMPORTED_MODULE_5__","_tilecoord_js__WEBPACK_IMPORTED_MODULE_11__","_string_js__WEBPACK_IMPORTED_MODULE_12__","_style_Stroke_js__WEBPACK_IMPORTED_MODULE_4__","geometryFunction_","defaultGeometryFunction","renderer_","stroke_","zIndex_","toFunction","getZIndex","getRenderer","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","setZIndex","defaultStyles","createDefaultStyle","_style_Fill_js__WEBPACK_IMPORTED_MODULE_3__","_style_Circle_js__WEBPACK_IMPORTED_MODULE_2__","createEditingStyle","white","blue","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__","concat","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","_math_js__WEBPACK_IMPORTED_MODULE_1__","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","fromString","rgb","fromNamed","hasAlpha","normalize","fromStringInternal_","asArray","POSTCOMPOSE","_render_ReplayType_js__WEBPACK_IMPORTED_MODULE_0__","ORDER","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","appendPolygon","newEndss","_geom_flat_area_js__WEBPACK_IMPORTED_MODULE_8__","flatCenters","_geom_flat_center_js__WEBPACK_IMPORTED_MODULE_9__","getInteriorPoints","_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_5__","simplifiedEndss","simplifiedMultiPolygon","getPolygon","prevEnds","_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_6__","getPolygons","lastEnds","_transform_js__WEBPACK_IMPORTED_MODULE_7__","Geometry","extentRevision_","opt_closestPoint","inCoordinates","outCoordinates","pixelExtent","projectedExtent","_geom_flat_transform_js__WEBPACK_IMPORTED_MODULE_4__","_tilecoord_js__WEBPACK_IMPORTED_MODULE_2__","createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","nullTileUrlFunction","expandUrl","startCharCode","stopCharCode","stop","ENABLE_RASTER_REPROJECTION","ERROR_THRESHOLD","_source_XYZ_js__WEBPACK_IMPORTED_MODULE_2__","ATTRIBUTIONS","_source_OSM_js__WEBPACK_IMPORTED_MODULE_1__","LayerConfig","terrain","terrain-background","terrain-labels","terrain-lines","toner-background","toner","toner-hybrid","toner-labels","toner-lines","toner-lite","watercolor","ProviderConfig","Stamen","provider","providerConfig","layerConfig","_extent_js__WEBPACK_IMPORTED_MODULE_7__","_Object_js__WEBPACK_IMPORTED_MODULE_2__","insertFirst","_css_js__WEBPACK_IMPORTED_MODULE_4__","autoPan","autoPanAnimation","autoPanMargin","rendered","bottom_","left_","right_","top_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","_OverlayPositioning_js__WEBPACK_IMPORTED_MODULE_3__","getOffset","getPosition","getPositioning","_dom_js__WEBPACK_IMPORTED_MODULE_5__","_MapEventType_js__WEBPACK_IMPORTED_MODULE_1__","updatePixelPosition","insertBefore","panIntoView","mapRect","getRect","overlayRect","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","pageXOffset","pageYOffset","setVisible","updateRenderedPosition","CENTER_RIGHT","BOTTOM_CENTER","CENTER_CENTER","TOP_CENTER","CENTER_LEFT","getOptions","Stroke","color_","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","checksum_","setColor","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","getChecksum","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","deflateMultiCoordinatesArray","coordinatesss","opt_endss","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","opt_coordinatesss","_MapBrowserEvent_js__WEBPACK_IMPORTED_MODULE_1__","opt_dragging","opt_frameState","linearRingIsClockwise","linearRingIsOriented","isClockwise","linearRingsAreOriented","orientLinearRings","orientLinearRingsArray","_xml_js__WEBPACK_IMPORTED_MODULE_4__","XMLFeature","xmlSerializer_","XMLSerializer","_format_Feature_js__WEBPACK_IMPORTED_MODULE_2__","_format_FormatType_js__WEBPACK_IMPORTED_MODULE_3__","XML","readFeatureFromDocument","readFeatureFromNode","doc","readFeaturesFromDocument","ELEMENT_NODE","readGeometryFromDocument","readProjectionFromDocument","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","_render_ReplayType_js__WEBPACK_IMPORTED_MODULE_3__","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","getImageState","_ImageState_js__WEBPACK_IMPORTED_MODULE_1__","imageReplay","textReplay","lineStringReplay","polygonReplay","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","imageState","unlistenImageChange","listenImageChange","renderGeometry","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_2__","getGeometries","renderFeatureInternal","LAYERGROUP","SIZE","TARGET","WMTSRequestEncoding","KVP","REST","optionsFromCapabilities","WMTS_WMTS","version_","dimensions_","dimensions","layer_","matrixSet_","matrixSet","tileurlfunction","requestEncoding_","requestEncoding","tilematrixset","Service","Request","Version","Format","createFromWMTSTemplate_","localContext","TileMatrix","getMatrixId","TileCol","TileRow","getKeyForDimensions_","wmtsCap","ol_array","elt","tileMatrixSets","supportedCRS","proj1","proj2","matrixLimits","matrixSets","matrixSetObj","projConfig","wgs84BoundingBox","wgs84ProjectionExtent","WMTS","gets","encodings","setUrls","setTileUrlFunction","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","_color_js__WEBPACK_IMPORTED_MODULE_0__","asColorLike","CanvasPattern","CanvasGradient","isColorLike","FRACTION","_style_Style_js__WEBPACK_IMPORTED_MODULE_25__","DrawEventType","DrawEvent","_events_Event_js__WEBPACK_IMPORTED_MODULE_8__","Draw","_interaction_Pointer_js__WEBPACK_IMPORTED_MODULE_21__","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","snapTolerance_","snapTolerance","type_","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_13__","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","opt_geometry","_geom_Circle_js__WEBPACK_IMPORTED_MODULE_12__","squaredLength","_coordinate_js__WEBPACK_IMPORTED_MODULE_6__","setCenterAndRadius","_geom_Point_js__WEBPACK_IMPORTED_MODULE_19__","_geom_LineString_js__WEBPACK_IMPORTED_MODULE_14__","_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_20__","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","_layer_Vector_js__WEBPACK_IMPORTED_MODULE_23__","_source_Vector_js__WEBPACK_IMPORTED_MODULE_24__","_events_condition_js__WEBPACK_IMPORTED_MODULE_9__","freehandCondition_","freehand","freehandCondition","_events_js__WEBPACK_IMPORTED_MODULE_7__","_Object_js__WEBPACK_IMPORTED_MODULE_5__","_interaction_Property_js__WEBPACK_IMPORTED_MODULE_22__","_MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_3__","pass","addToDrawing_","_pointer_MouseSource_js__WEBPACK_IMPORTED_MODULE_18__","startDrawing_","_MapBrowserPointerEvent_js__WEBPACK_IMPORTED_MODULE_4__","circleMode","finishDrawing","atFinish_","abortDrawing_","createRegularPolygon","createBox","_extent_js__WEBPACK_IMPORTED_MODULE_10__","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","updateSketchFeatures_","last","sketchLineGeom","removeLastPoint","sketchFeature","_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_16__","_geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_15__","_geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_17__","sketchFeatures","overlaySource","_color_js__WEBPACK_IMPORTED_MODULE_1__","Fill","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","GML3_schemaLocation","GML3","surface_","surface","curve_","curve","multiCurve_","multiCurve","multiSurface_","multiSurface","hasZ","readMultiCurve_","MULTICURVE_PARSERS_","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","flatLinearRing","exteriorParser_","readSurface_","SURFACE_PARSERS_","GeometryLayout","readCurve_","CURVE_PARSERS_","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","containerSrs","readFlatPosList_","contextDimension","dim","xsd","pos","posList","interior","exterior","Surface","MultiSurface","Curve","MultiCurve","Envelope","curveMember","curveMembers","surfaceMember","surfaceMembers","patches","lowerCorner","upperCorner","PolygonPatch","LineStringSegment","writePos_","srsDimension","getCoords_","opt_srsName","opt_hasZ","writePosList_","writePoint_","writeEnvelope","ENVELOPE_SERIALIZERS_","writeLinearRing_","RING_NODE_FACTORY_","exteriorWritten","writeSurfaceOrPolygon_","RING_SERIALIZERS_","writeSurfacePatches_","writeCurveOrLineString_","writeCurveSegments_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writeMultiCurveOrLineString_","LINESTRINGORCURVEMEMBER_SERIALIZERS_","writeRing_","writeSurfaceOrPolygonMember_","GEOMETRY_NODE_FACTORY_","writePointMember_","writeLineStringOrCurveMember_","line","writeGeometryElement","ol_obj","GEOMETRY_SERIALIZERS_","writeFeatureElement","writeFeatureMembers_","MULTIGEOMETRY_TO_MEMBER_NODENAME","setAttributeNS","format_GML3","GML","format_GML","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","SCHEMA_LOCATIONS","1.1.0","1.0.0","WFS","featureType_","featureNS_","gmlFormat_","gmlFormat","schemaLocation_","getFeatureType","setFeatureType","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","boundedBy","TRANSACTION_SUMMARY_PARSERS","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","OGC_FID_PARSERS","http://www.opengis.net/ogc","FeatureId","INSERT_RESULTS_PARSERS","TRANSACTION_RESPONSE_PARSERS","TransactionSummary","InsertResults","QUERY_SERIALIZERS","PropertyName","writeOgcFidFilter","getTypeName","featurePrefix","TRANSACTION_SERIALIZERS","Insert","gmlVersion","GML2","Update","typeName","Delete","pair","Native","nativeElement","vendorId","safeToIgnore","GETFEATURE_SERIALIZERS","Query","propertyNames","writeFilterCondition","During","valueReference","propertyName","timePeriod","writeTimeInstant","And","writeLogicalFilter","Or","Not","getTagName","BBOX","writeOgcPropertyName","Contains","Intersects","Within","PropertyIsEqualTo","writeComparisonFilter","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","lowerBoundary","writeOgcLiteral","upperBoundary","PropertyIsLike","wildCard","singleChar","escapeChar","matchCase","pattern","conditions","expression","writeOgcExpression","timeInstant","timePosition","writeGetFeature","handle","outputFormat","maxFeatures","resultType","startIndex","format_filter","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","format_WFS","WMTSCapabilities","_xml_js__WEBPACK_IMPORTED_MODULE_26__","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_IMAGE_SCALE_MULTIPLIER","DEFAULT_FILL_STYLE","DEFAULT_NO_IMAGE_STYLE","DEFAULT_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","DEFAULT_STROKE_STYLE","DEFAULT_TEXT_STYLE","DEFAULT_STYLE","DEFAULT_STYLE_ARRAY","KML","_format_XMLFeature_js__WEBPACK_IMPORTED_MODULE_6__","_style_Fill_js__WEBPACK_IMPORTED_MODULE_19__","_style_IconAnchorUnits_js__WEBPACK_IMPORTED_MODULE_21__","_style_Icon_js__WEBPACK_IMPORTED_MODULE_20__","anchorOrigin","_style_IconOrigin_js__WEBPACK_IMPORTED_MODULE_22__","anchorXUnits","anchorYUnits","_style_Stroke_js__WEBPACK_IMPORTED_MODULE_23__","_style_Text_js__WEBPACK_IMPORTED_MODULE_25__","_style_Style_js__WEBPACK_IMPORTED_MODULE_24__","_proj_js__WEBPACK_IMPORTED_MODULE_18__","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","GX_NAMESPACE_URIS","NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","pixels","insetPixels","createNameStyleFunction","foundStyle","textOffset","imageSize","getImageSize","imageScale","foundText","setFont","setScale","setOffsetX","setOffsetY","setTextAlign","createFeatureStyleFunction","styleUrl","sharedStyles","nameStyle","drawName","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_10__","findStyle","styleValue","readColor","hexColor","readFlatCoordinates","readURI","baseURI","location","href","URL","readScale","_format_xsd_js__WEBPACK_IMPORTED_MODULE_7__","STYLE_MAP_PARSERS","Pair","pairObject","PAIR_PARSERS","readStyleMapValue","ICON_STYLE_PARSERS","iconObject","ICON_PARSERS","heading","hotSpot","xunits","yunits","LABEL_STYLE_PARSERS","LINE_STYLE_PARSERS","POLY_STYLE_PARSERS","outline","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","GX_MULTITRACK_GEOMETRY_PARSERS","Track","readGxTrack","GX_TRACK_PARSERS","when","whens","gxTrackObject","_geom_LineString_js__WEBPACK_IMPORTED_MODULE_11__","_geom_GeometryLayout_js__WEBPACK_IMPORTED_MODULE_9__","GEOMETRY_FLAT_COORDINATES_PARSERS","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","extrude","tessellate","altitudeMode","_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_16__","MULTI_GEOMETRY_PARSERS","MultiGeometry","readMultiGeometry","_geom_GeometryCollection_js__WEBPACK_IMPORTED_MODULE_8__","multiGeometry","homogeneous","_array_js__WEBPACK_IMPORTED_MODULE_2__","_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_13__","setCommonGeometryProperties","_geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_12__","_geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_14__","_asserts_js__WEBPACK_IMPORTED_MODULE_3__","_geom_Point_js__WEBPACK_IMPORTED_MODULE_15__","FLAT_LINEAR_RINGS_PARSERS","innerBoundaryIs","INNER_BOUNDARY_IS_PARSERS","outerBoundaryIs","OUTER_BOUNDARY_IS_PARSERS","STYLE_PARSERS","IconStyle","styleObject","IconObject","drawIcon","_math_js__WEBPACK_IMPORTED_MODULE_17__","offsetOrigin","LabelStyle","LineStyle","PolyStyle","readStyle","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DATA_PARSERS","displayName","EXTENDED_DATA_PARSERS","Data","featureObject","SchemaData","SCHEMA_DATA_PARSERS","extendedDataParser","REGION_PARSERS","LatLonAltBox","LAT_LON_ALT_BOX_PARSERS","regionObject","Lod","LOD_PARSERS","lodObject","regionParser","SimpleData","minAltitude","maxAltitude","north","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","NETWORK_LINK_PARSERS","ExtendedData","Region","Link","LINK_PARSERS","address","description","phoneNumber","visibility","PLACEMARK_PARSERS","StyleMap","styleMapValue","placemarkObject","MultiTrack","writeColorTextNode","rgba","_color_js__WEBPACK_IMPORTED_MODULE_4__","abgr","hex","readDocumentOrFolder_","Folder","Placemark","readPlacemark_","readSharedStyle_","readSharedStyleMap_","_Feature_js__WEBPACK_IMPORTED_MODULE_1__","_format_Feature_js__WEBPACK_IMPORTED_MODULE_5__","styleUri","fs","readName","readNameFromDocument","readNameFromNode","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","EXTENDEDDATA_NODE_SERIALIZERS","DOCUMENT_SERIALIZERS","writePlacemark","DOCUMENT_NODE_FACTORY","DATA_NODE_FACTORY","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","icon","vec2","writeScaleTextNode","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","GEOMETRY_TYPE_TO_NODENAME","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","factory","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","namesAndValues","STYLE_SEQUENCE","STYLE_SERIALIZERS","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","outerRing","POLY_STYLE_SERIALIZERS","COLOR_NODE_FACTORY","getSrc","iconImageSize","iconProperties","KML_SEQUENCE","KML_SERIALIZERS","kml","xmlnsUri","_events_EventType_js__WEBPACK_IMPORTED_MODULE_3__","Observable","_events_EventTarget_js__WEBPACK_IMPORTED_MODULE_2__","revision_","unByKey","on","once","un","TileGrid","_array_js__WEBPACK_IMPORTED_MODULE_3__","origins","origin_","origins_","_extent_js__WEBPACK_IMPORTED_MODULE_4__","tileSizes_","tileSizes","fullTileRanges_","tmpSize_","sizes","_TileRange_js__WEBPACK_IMPORTED_MODULE_2__","calculateTileRanges_","tmpTileCoord","forEachTileCoord","forEachTileCoordParentTileRange","opt_tileRange","tileCoordExtent","getTileCoordChildTileRange","getTileRangeExtent","_size_js__WEBPACK_IMPORTED_MODULE_6__","getTileCoordForXYAndZ_","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordResolution","fullTileRanges","_tilegrid_js__WEBPACK_IMPORTED_MODULE_9__","TileSource","_source_Source_js__WEBPACK_IMPORTED_MODULE_7__","opaque_","tilePixelRatio_","_TileCache_js__WEBPACK_IMPORTED_MODULE_2__","key_","forEachLoadedTile","loaded","covered","_tilecoord_js__WEBPACK_IMPORTED_MODULE_8__","_TileState_js__WEBPACK_IMPORTED_MODULE_3__","useTile","TileSourceEvent","_extent_js__WEBPACK_IMPORTED_MODULE_0__","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","ImageWMS","_source_Image_js__WEBPACK_IMPORTED_MODULE_10__","GETFEATUREINFO_IMAGE_SIZE","_proj_js__WEBPACK_IMPORTED_MODULE_8__","_reproj_js__WEBPACK_IMPORTED_MODULE_9__","_extent_js__WEBPACK_IMPORTED_MODULE_6__","_obj_js__WEBPACK_IMPORTED_MODULE_7__","viewWidth","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","_Image_js__WEBPACK_IMPORTED_MODULE_2__","_events_js__WEBPACK_IMPORTED_MODULE_4__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_5__","_source_WMSServerType_js__WEBPACK_IMPORTED_MODULE_11__","appendParams","keyParams","encodeURIComponent","TileEventType","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","tileState","setTileLoadFunction","opt_key","pruneExceptNewestZ","padNumber","opt_precision","numberString","compareVersions","v1","v2","s1","n1","n2","HYBRID","_layer_VectorTileRenderType_js__WEBPACK_IMPORTED_MODULE_5__","_layer_Vector_js__WEBPACK_IMPORTED_MODULE_4__","_Projection_js__WEBPACK_IMPORTED_MODULE_2__","projCodes","_proj_js__WEBPACK_IMPORTED_MODULE_0__","code1","code2","_transforms_js__WEBPACK_IMPORTED_MODULE_1__","_tilegrid_js__WEBPACK_IMPORTED_MODULE_7__","VectorTile","_source_UrlTile_js__WEBPACK_IMPORTED_MODULE_5__","_VectorImageTile_js__WEBPACK_IMPORTED_MODULE_2__","_VectorTile_js__WEBPACK_IMPORTED_MODULE_3__","tileGrids_","_tilecoord_js__WEBPACK_IMPORTED_MODULE_6__","_size_js__WEBPACK_IMPORTED_MODULE_4__","douglasPeucker","simplifiedOffset","markers","first","maxSquaredDistance","douglasPeuckerArray","snap","quantize","quantizeArray","quantizeMultiArray","_functions_js__WEBPACK_IMPORTED_MODULE_0__","disposed_","_events_EventTarget_js__WEBPACK_IMPORTED_MODULE_1__","drawGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","opt_declutterGroup","disable","createSnapToN","createSnapToZero","opt_tolerance","EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","_transform_js__WEBPACK_IMPORTED_MODULE_8__","CanvasTileLayerRenderer","tileLayer","_canvas_IntermediateCanvas_js__WEBPACK_IMPORTED_MODULE_7__","oversampling_","newTiles_","tmpTileRange_","imageTransform_","isDrawableTile_","viewResolution","viewCenter","tileSource","sourceRevision","oversampling","imageExtent","tilesToDrawByZ","findLoadedTiles","createLoadedTileFinder","hints","animatingOrInteracting","_ViewHint_js__WEBPACK_IMPORTED_MODULE_4__","tmpTileRange","childTileRange","renderedResolution","tilePixelSize","currentScale","currentTilePixelSize","tileGutter","tilesToDraw","drawTileImage","coordinateToCanvasPixelTransform","updateUsedTiles","manageTilePyramid","scheduleExpireCache","alphaChanged","getImageTransform","TileRange","contains","containsTileRange","_source_State_js__WEBPACK_IMPORTED_MODULE_4__","_proj_js__WEBPACK_IMPORTED_MODULE_3__","attributions_","adaptAttributions_","state_","wrapX_","attributionLike","_obj_js__WEBPACK_IMPORTED_MODULE_3__","opt_maxEntries","rbush_","rbush__WEBPACK_IMPORTED_MODULE_1___default","items_","items","search","forEach_","rbush","_events_Event_js__WEBPACK_IMPORTED_MODULE_1__","MapEvent","RenderFeature","flatCoordinates_","flatMidpoints_","properties_","interiorpoint","render_Feature","MVT","featureClass_","featureClass","layerName_","layerName","layers_","layersPBFReader","tag","pbf","readVarint","readFields","layerPBFReader","readFloat","readDouble","readVarint64","readSVarint","featurePBFReader","readRawFeature","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","prevEndIndex","orient","FormatType","pbf_default","pbfLayers","pbfLayer","setLayers","WebGLShader","isAnimated","Shader","WebGLFragment","webgl","Fragment","WebGLVertex","Vertex","fragment","defaultshader_Locations","program","u_projectionMatrix","getUniformLocation","u_offsetScaleMatrix","u_offsetRotateMatrix","u_lineWidth","u_pixelRatio","u_opacity","u_fillColor","u_strokeColor","u_size","a_position","getAttribLocation","a_instruction","a_radius","fromTransform","mat4","WebGLReplay","projectionMatrix_","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","indices","indicesBuffer","startIndices","startIndicesFeature","verticesBuffer","getDeleteResourcesFunction","setUpProgram","shutDownProgram","locations","drawReplay","hitDetection","drawHitDetectionReplayOneByOne","drawHitDetectionReplay","oneByOne","drawHitDetectionReplayAll","DEPTH_BUFFER_BIT","getGL","tmpStencil","tmpStencilFunc","tmpStencilMaskVal","tmpStencilRef","tmpStencilMask","tmpStencilOpFail","tmpStencilOpPass","tmpStencilOpZFail","isEnabled","STENCIL_FUNC","STENCIL_VALUE_MASK","STENCIL_REF","STENCIL_WRITEMASK","STENCIL_FAIL","STENCIL_PASS_DEPTH_PASS","STENCIL_PASS_DEPTH_FAIL","enable","STENCIL_BUFFER_BIT","stencilMask","stencilFunc","ALWAYS","stencilOp","KEEP","REPLACE","NOTEQUAL","bindBuffer","projectionMatrix","offsetScaleMatrix","offsetRotateMatrix","uniformMatrix4fv","uniform1f","drawElements","elementType","hasOESElementIndexUint","numItems","offsetInBytes","DEFAULT_FILLSTYLE","DEFAULT_LINEDASH","DEFAULT_STROKESTYLE","EPSILON","triangleIsCounterClockwise","BufferUsage","WebGLBuffer","opt_arr","opt_usage","arr_","usage_","getUsage","Buffer","WebGLCircleReplay","defaultLocations_","styles_","styleIndices_","radius_","fillColor","strokeColor","numVertices","numIndices","lastState","deleteBuffer","getProgram","useProgram","enableVertexAttribArray","vertexAttribPointer","uniform2fv","disableVertexAttribArray","nextStyle","setFillStyle_","drawReplaySkipping_","groupStart","featureUid","featureIndex","featureStart","uniform4fv","CircleReplay","defaultshader_fragment","defaultshader_vertex","texturereplay_defaultshader_Locations","u_image","a_texCoord","a_offsets","a_opacity","a_rotateWithView","ContextEventType","WebGLContext","gl_","bufferCache_","shaderCache_","programCache_","currentProgram_","hitDetectionFramebuffer_","hitDetectionTexture_","hitDetectionRenderbuffer_","getExtension","handleWebGLContextLost","handleWebGLContextRestored","createTextureInternal","opt_wrapS","opt_wrapT","texture","createTexture","bindTexture","texParameteri","createEmptyTexture","texImage2D","buf","bufferKey","bufferCacheEntry","createBuffer","arrayBuffer","Float32Array","Uint32Array","Uint16Array","bufferData","isContextLost","deleteProgram","deleteShader","deleteFramebuffer","deleteRenderbuffer","deleteTexture","getCanvas","getHitDetectionFramebuffer","initHitDetectionFramebuffer_","getShader","shaderObject","shaderKey","shader","createShader","shaderSource","compileShader","fragmentShaderObject","vertexShaderObject","programKey","createProgram","attachShader","linkProgram","framebuffer","createFramebuffer","bindFramebuffer","renderbuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferTexture2D","framebufferRenderbuffer","DEPTH_ATTACHMENT","Context","WebGLTextureReplay","groupIndices","hitDetectionGroupIndices","defaultLocations","textures","getTextures","drawCoordinates","createTextures","images","texturePerImage","getHitDetectionTextures","drawReplaySkipping","groupEnd","hitDetectionTextures","opt_all","TextureReplay","WebGLImageReplay","images_","hitDetectionImages_","textures_","hitDetectionTextures_","currentImage","lineStringIsClosed","flat_area","linestringreplay_defaultshader_fragment","linestringreplay_defaultshader_vertex","linestringreplay_defaultshader_Locations","u_miterLimit","u_color","a_lastPos","a_nextPos","a_direction","WebGLLineStringReplay","startCoords","p0","lastIndex","lastSign","addVertices_","product","isValid_","firstP","lastP","indexCount","drawPolygonCoordinates","holeFlatCoordinates","setPolygonStyle","opt_index","getCurrentIndex","tmpDepthFunc","DEPTH_FUNC","tmpDepthMask","DEPTH_WRITEMASK","depthMask","depthFunc","polygonreplay_defaultshader_fragment","polygonreplay_defaultshader_vertex","polygonreplay_defaultshader_Locations","LinkedList","opt_circular","first_","last_","head_","circular_","length_","insertItem","next","head","removeItem","firstItem","lastItem","nextItem","getNextItem","prevItem","getPrevItem","getCurrItem","setFirstItem","list","structs_LinkedList","WebGLPolygonReplay","rtree","processFlatCoordinates_","maxCoords","getMaxCoords_","holeLists","holeList","classifyPoints_","currList","currItem","getIntersections_","bridgeHole_","triangulate_","clockwise","createPoint_","insertItem_","seg","ccw","pointsReclassified","reflex","removeItem_","hole","holeMaxX","listMaxX","bestPoint","p5","minDist","intersectingSegments","currSeg","calculateIntersection_","pointsInTriangle","getPointsInTriangle_","currPoint","currTheta","p0Bridge","p1Bridge","simple","isSimple_","clipEars_","resolveSelfIntersections_","splitPolygon_","isClockwise_","processedEars","variableCriterion","diagonalIsInside_","opt_touch","resolvedIntersections","breakCond","intersections","newPolygon","newRtree","opt_rtree","opt_reflex","segmentsInExtent","denom","ub","p1IsLeftOf","p1IsRightOf","p3IsLeftOf","p3IsRightOf","p1InCone","p3InCone","currIndex","currLineIndex","holes","holeFlatCoords","lineDeleter","nullStrokeStyle","WebGLTextReplay","measureCanvas_","textAlign_","textBaseline_","offsetX_","offsetY_","atlases_","currAtlas_","glyphAtlas","textSize","getTextSize_","currX","currY","charArr","charInfo","atlas","getInfo","drawText_","textHeight","str","sum","curr","addCharToAtlas_","mCtx","ctx","textFillStyleColor","textStrokeStyleColor","getAtlas_","calculateHash_","AtlasManager","space","HIT_DETECTION_SIZE","WebGLReplayGroup","replayHitDetection_","Uint8Array","readPixels","hasFeatureAtCoordinate","webgl_ReplayGroup","WebGLImmediateRenderer","context_","center_","size_","imageStyle_","fillStyle_","strokeStyle_","textStyle_","Immediate","defaultmapshader_fragment","defaultmapshader_vertex","defaultmapshader_Locations","u_texCoordMatrix","u_texture","WebGLLayerRenderer","arrayBuffer_","framebufferDimension","texCoordMatrix","postRenderFunction","postRenderFunctions","dispatchComposeEvent_","uniform1i","getTexCoordMatrix","getProjectionMatrix","getTexture","drawArrays","composeEvent","forEachLayerAtPixel","webgl_Layer","WebGLImageLayerRenderer","imageLayer","hitCanvasContext_","hitTransformationMatrix_","createTexture_","imageElement","imageSource","renderedExtent","loadImage","updateProjectionMatrix_","canvasWidth","canvasHeight","canvasExtentWidth","canvasExtentHeight","pixelToCoordinateTransform","getHitTransformationMatrix_","pixelOnFrameBuffer","mapCoordTransform","projectionMatrixInv","WebGLMapRenderer","clipTileCanvasWidth_","clipTileCanvasHeight_","clipTileContext_","antialias","preserveDrawingBuffer","stencil","textureCache_","LRUCache","focus_","tileTextureQueue_","PriorityQueue","tileCenter","loadNextTileTexture_","reprioritize","dequeue","bindTileTexture","textureCacheFrameMarkerCount_","initializeGL_","magFilter","minFilter","tileKey","textureCacheEntry","clipTileCanvas","clipTileContext","vectorContext","expireCache_","getCount","peekLast","peekLastKey","getTileTextureQueue","renderers","getLayerRenderers","activeTexture","blendFuncSeparate","isTileTextureLoaded","renderFrame","layerStatesToDraw","layerRenderer","layer_Layer","getLayerRenderer","clearColor","viewport","calculateMatrices2D","scheduleRemoveUnusedLayerRenderers","scheduleExpireIconCache","thisArg2","webgl_Map","tilelayershader_fragment","tilelayershader_vertex","tilelayershader_Locations","u_tileOffset","WebGLTileLayerRenderer","fragmentShader_","vertexShader_","locations_","renderArrayBuffer_","renderedTileRange_","renderedFramebufferExtent_","tilePixelResolution","framebufferExtent","tileRangeSize","maxDimension","framebufferExtentDimension","allTilesLoaded","drawable","fullyLoaded","tileTextureQueue","isKeyQueued","enqueue","pixelOnMapScaled","pixelOnFrameBufferScaled","WebGLVectorLayerRenderer","layerState_","scissor","WebGLMap","control","_xml_js__WEBPACK_IMPORTED_MODULE_6__","_format_XML_js__WEBPACK_IMPORTED_MODULE_4__","owsParser_","_format_OWS_js__WEBPACK_IMPORTED_MODULE_2__","OWS_NAMESPACE_URIS","PARSERS","Contents","CONTENTS_PARSERS","LAYER_PARSERS","TileMatrixSet","TMS_PARSERS","isDefault","_format_xsd_js__WEBPACK_IMPORTED_MODULE_5__","TileMatrixSetLink","TMS_LINKS_PARSERS","Dimension","DIMENSION_PARSERS","ResourceURL","resourceType","Title","Abstract","WGS84BoundingBox","WGS84_BBOX_READERS","Identifier","LegendURL","legend","_format_XLink_js__WEBPACK_IMPORTED_MODULE_3__","TileMatrixSetLimits","TMS_LIMITS_LIST_PARSERS","TileMatrixLimits","TMS_LIMITS_PARSERS","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Value","LowerCorner","readCoordinates","UpperCorner","WellKnownScaleSet","TM_PARSERS","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","read","readFromDocument","readFromNode","WMTSCapabilityObject","_extent_js__WEBPACK_IMPORTED_MODULE_5__","ImageWrapper","_ImageBase_js__WEBPACK_IMPORTED_MODULE_1__","_ImageState_js__WEBPACK_IMPORTED_MODULE_2__","src_","imageListenerKeys_","handleImageError_","unlistenImage_","handleImageLoad_","_events_js__WEBPACK_IMPORTED_MODULE_3__","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","enlargeClipPoint","centroidX","centroidY","dX","dY","triangulation","_dom_js__WEBPACK_IMPORTED_MODULE_0__","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","triangle","v0","u1","u2","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","_math_js__WEBPACK_IMPORTED_MODULE_2__","_geom_flat_simplify_js__WEBPACK_IMPORTED_MODULE_9__","_geom_flat_area_js__WEBPACK_IMPORTED_MODULE_5__","simplifiedLinearRing","MOVESTART","MOVEEND","MapRenderer","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","expireIconCache","_style_IconImageCache_js__WEBPACK_IMPORTED_MODULE_7__","expire","sortByZIndex","state1","state2","constructors","getLayerRendererConstructors","coordinateToPixelTransform","removeLayerRenderers","removeLayerRendererByKey_","translatedCoordinate","_layer_Layer_js__WEBPACK_IMPORTED_MODULE_6__","_functions_js__WEBPACK_IMPORTED_MODULE_5__","layerKey","handleLayerRendererChange_","getLayerRendererByKey","removeUnusedLayerRenderers_","_style_Style_js__WEBPACK_IMPORTED_MODULE_12__","SelectEventType","SELECT","SelectEvent","selected","deselected","Select","_interaction_Interaction_js__WEBPACK_IMPORTED_MODULE_8__","_events_condition_js__WEBPACK_IMPORTED_MODULE_5__","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","_functions_js__WEBPACK_IMPORTED_MODULE_6__","featureOverlay","_layer_Vector_js__WEBPACK_IMPORTED_MODULE_9__","_source_Vector_js__WEBPACK_IMPORTED_MODULE_11__","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_7__","featureOverlay_","featureLayerAssociation_","_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_1__","_obj_js__WEBPACK_IMPORTED_MODULE_10__","addFeatureLayerAssociation_","removeFeatureLayerAssociation_","selectedFeatures","unskipFeature","skipFeature","DEFAULT_TILE_SIZE","DEFAULT_MAX_ZOOM","readHref","NAMESPACE_URI","_format_FormatType_js__WEBPACK_IMPORTED_MODULE_2__","TextFeature","_format_Feature_js__WEBPACK_IMPORTED_MODULE_1__","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","opt_geometries","_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_4__","geometries_","listenGeometriesChange_","cloneGeometries","clonedGeometries","unlistenGeometriesChange_","geometryCollection","setGeometries","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_5__","JSONFeature","getObject","interpolatePoint","pointX","pointY","cumulativeLengths","lineStringCoordinateAtM","lo","m0","lineStringsCoordinateAtM","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","elements","priorities","siftUp_","elementKey","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isQueued","lIndex","rIndex","smallerChildIndex","parentIndex","GeolocationProperty","Geolocation","position_","transform_","watchId_","handleProjectionChanged_","handleTrackingChanged_","trackingOptions","setTrackingOptions","setTracking","tracking","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","altitude","altitudeAccuracy","longitude","latitude","projectedPosition","speed","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getSpeed","_transform_js__WEBPACK_IMPORTED_MODULE_19__","RasterEventType","RasterOperationType","RasterSourceEvent","_events_Event_js__WEBPACK_IMPORTED_MODULE_5__","RasterSource","worker_","operationType_","operationType","threads_","threads","renderers_","createRenderers","rr","_events_EventType_js__WEBPACK_IMPORTED_MODULE_6__","tileQueue_","_TileQueue_js__WEBPACK_IMPORTED_MODULE_2__","requestedFrameState_","renderedImageCanvas_","frameState_","tileQueue","wantedTiles","_source_Image_js__WEBPACK_IMPORTED_MODULE_16__","operation","setOperation","lib","opt_lib","pixelworks_lib_index__WEBPACK_IMPORTED_MODULE_7__","imageOps","queue","updateFrameState_","_extent_js__WEBPACK_IMPORTED_MODULE_8__","allSourcesReady_","ready","_source_State_js__WEBPACK_IMPORTED_MODULE_17__","processSources_","loadMoreTiles","imageDatas","process","onWorkerComplete_","_dom_js__WEBPACK_IMPORTED_MODULE_3__","_ImageCanvas_js__WEBPACK_IMPORTED_MODULE_1__","sharedContext","_source_Tile_js__WEBPACK_IMPORTED_MODULE_18__","_layer_Tile_js__WEBPACK_IMPORTED_MODULE_12__","_renderer_canvas_TileLayer_js__WEBPACK_IMPORTED_MODULE_15__","createTileRenderer","_layer_Image_js__WEBPACK_IMPORTED_MODULE_11__","_renderer_canvas_ImageLayer_js__WEBPACK_IMPORTED_MODULE_14__","createImageRenderer","_layer_Layer_js__WEBPACK_IMPORTED_MODULE_10__","_LayerType_js__WEBPACK_IMPORTED_MODULE_9__","opt_loader","error_","getError","handleLoad_","_style_TextPlacement_js__WEBPACK_IMPORTED_MODULE_1__","font_","_style_Fill_js__WEBPACK_IMPORTED_MODULE_0__","maxAngle_","placement_","overflow_","backgroundFill_","backgroundStroke_","padding_","setOverflow","setMaxAngle","setPlacement","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","_tilegrid_TileGrid_js__WEBPACK_IMPORTED_MODULE_3__","WMTSTileGrid","matrixIds_","matrixIds","createFromCapabilitiesMatrixSet","opt_matrixLimits","switchOriginXY","matrixAvailable","elt_ml","tileWidth","tileHeight","getMatrixIds","_style_Image_js__WEBPACK_IMPORTED_MODULE_9__","normalizedAnchor_","anchorOrigin_","_style_IconOrigin_js__WEBPACK_IMPORTED_MODULE_8__","anchorXUnits_","_style_IconAnchorUnits_js__WEBPACK_IMPORTED_MODULE_6__","anchorYUnits_","img","imgSize","_color_js__WEBPACK_IMPORTED_MODULE_3__","iconImage_","_style_IconImage_js__WEBPACK_IMPORTED_MODULE_7__","offset_","offsetOrigin_","getHitDetectionImageSize","_Tile_js__WEBPACK_IMPORTED_MODULE_1__","tileLoadFunction_","getBlankImage","_TileState_js__WEBPACK_IMPORTED_MODULE_2__","naturalWidth","naturalHeight","RenderEvent","opt_vectorContext","opt_context","opt_glContext","glContext","ImageStyle","setOpacity","setRotateWithView","setSnapToPixel","_flat_segments_js__WEBPACK_IMPORTED_MODULE_2__","intersectsLineString","coordinatesExtent","point1","point2","intersectsLineStringArray","intersectsLinearRingArray","_flat_contains_js__WEBPACK_IMPORTED_MODULE_1__","intersectsLinearRing","intersectsLinearRingMultiArray","twiceArea","linearRingss","_transform_js__WEBPACK_IMPORTED_MODULE_25__","_Object_js__WEBPACK_IMPORTED_MODULE_9__","optionsInternal","keyboardEventTarget","layerGroup","_layer_Group_js__WEBPACK_IMPORTED_MODULE_22__","overlays","_MapProperty_js__WEBPACK_IMPORTED_MODULE_8__","_View_js__WEBPACK_IMPORTED_MODULE_12__","_asserts_js__WEBPACK_IMPORTED_MODULE_14__","createOptionsInternal","maxTilesLoading_","maxTilesLoading","loadTilesWhileAnimating_","loadTilesWhileAnimating","loadTilesWhileInteracting_","loadTilesWhileInteracting","_has_js__WEBPACK_IMPORTED_MODULE_21__","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","overlayEvents","_events_EventType_js__WEBPACK_IMPORTED_MODULE_18__","_MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_5__","_events_js__WEBPACK_IMPORTED_MODULE_16__","_events_Event_js__WEBPACK_IMPORTED_MODULE_17__","mapBrowserEventHandler_","_MapBrowserEventHandler_js__WEBPACK_IMPORTED_MODULE_4__","moveTolerance","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","_TileQueue_js__WEBPACK_IMPORTED_MODULE_11__","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","addOverlayInternal_","addControl","getControls","addInteraction","getInteractions","getOverlays","_functions_js__WEBPACK_IMPORTED_MODULE_20__","getFeaturesAtPixel","hasFeatureAtPixel","getEventPixel","eventPosition","changedTouches","getTarget","getOverlayById","tileSourceKey","_structs_PriorityQueue_js__WEBPACK_IMPORTED_MODULE_24__","_MapBrowserEvent_js__WEBPACK_IMPORTED_MODULE_3__","interactionsArray","handlePostRender","maxTotalLoading","maxNewLoads","_ViewHint_js__WEBPACK_IMPORTED_MODULE_13__","getTilesLoading","targetElement","_dom_js__WEBPACK_IMPORTED_MODULE_15__","handleViewPropertyChanged_","_ObjectEventType_js__WEBPACK_IMPORTED_MODULE_10__","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","_extent_js__WEBPACK_IMPORTED_MODULE_19__","previousFrameState","_size_js__WEBPACK_IMPORTED_MODULE_23__","pixelResolution","_MapEvent_js__WEBPACK_IMPORTED_MODULE_6__","_MapEventType_js__WEBPACK_IMPORTED_MODULE_7__","setSize","setView","DEFAULT_RADIUS","opt_radius","deltaLatBy2","deltaLonBy2","getLengthInternal","getAreaInternal","bearing","lon1","dByR","_pointer_EventSource_js__WEBPACK_IMPORTED_MODULE_1__","MouseSource","mousedown","mousemove","mouseup","mouseover","mouseout","pointerMap","lastTouches","POINTER_ID","POINTER_TYPE","prepareEvent","inEvent","cloneEvent","pd","isEventSimulatedFromTouch_","lts","cancel","down","cleanupMouse","enterOver","leaveOut","DEFAULT_WMS_VERSION","CanvasLayerRenderer","_Layer_js__WEBPACK_IMPORTED_MODULE_7__","topLeft","bottomRight","_render_canvas_js__WEBPACK_IMPORTED_MODULE_5__","opt_transform","_render_canvas_Immediate_js__WEBPACK_IMPORTED_MODULE_6__","_render_Event_js__WEBPACK_IMPORTED_MODULE_3__","forEachLayerAtCoordinate","_render_EventType_js__WEBPACK_IMPORTED_MODULE_4__","_transform_js__WEBPACK_IMPORTED_MODULE_6__","IntermediateCanvasRenderer","_canvas_Layer_js__WEBPACK_IMPORTED_MODULE_5__","imageTransform","dw","dh","_functions_js__WEBPACK_IMPORTED_MODULE_4__","_coordinate_js__WEBPACK_IMPORTED_MODULE_1__","_dom_js__WEBPACK_IMPORTED_MODULE_2__","getRadiusSquared_","circleExtent","_MapEvent_js__WEBPACK_IMPORTED_MODULE_1__","MapBrowserEvent","dragging","opt_errback","opt_callbackParam","script","cleanup","async","timer","getElementsByTagName","opt_highWaterMark","count_","entries_","oldest_","newest_","value_","newer","older","peekFirstKey","getInteriorPointOfArray","flatCentersOffset","maxSegmentLength","getInteriorPointsOfMultiArray","Filter","tagName_","filter_Filter","LogicalNary","filter_LogicalNary","filter_And","Bbox","filter_Bbox","Spatial","filter_Spatial","Comparison","filter_Comparison","ComparisonBinary","opt_matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","GreaterThanOrEqualTo","IsBetween","IsLike","opt_wildCard","opt_singleChar","opt_escapeChar","filter_IsLike","IsNull","LessThan","LessThanOrEqualTo","NotEqualTo","and","Function","equalTo","like","geodesic_line","geoA","geoB","geoStack","fractionStack","fractions","geoM","fracA","fracB","fracM","maxIterations","INTERVALS","Graticule","postcomposeListenerKey_","maxLat_","maxLon_","minLat_","minLon_","maxLatP_","maxLonP_","minLatP_","minLonP_","targetSize_","targetSize","maxLines_","maxLines","meridians_","parallels_","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","meridiansLabels_","parallelsLabels_","showLabels","lonLabelFormatter_","lonLabelFormatter","latLabelFormatter_","latLabelFormatter","lonLabelPosition_","lonLabelPosition","latLabelPosition_","latLabelPosition","lonLabelStyle_","lonLabelStyle","latLabelStyle_","latLabelStyle","addMeridian_","minLat","maxLat","getMeridian_","textPoint","getMeridianPoint_","clampedBottom","clampedTop","addParallel_","minLon","maxLon","getParallel_","getParallelPoint_","clampedLeft","clampedRight","createGraticule_","getInterval_","centerLonLat","centerLon","centerLat","cnt","validExtent","frac","meridian","getMeridians","lon2","parallel","getParallels","handlePostCompose_","labelData","updateProjectionInfo_","worldExtentP","_geom_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_13__","TokenType","Lexer","index_","isAlpha_","isNumeric_","opt_decimal","isWhiteSpace_","nextChar_","nextToken","token","readNumber_","readText_","scientificNotation","lexer","lexer_","token_","layout_","_geom_GeometryLayout_js__WEBPACK_IMPORTED_MODULE_6__","consume_","isTokenType","isMatch","parseGeometry_","parseGeometryLayout_","dimToken","dimInfo","parseGeometryCollectionText_","isEmptyGeometry_","formatErrorMessage_","parsePointText_","parsePoint_","parseLineStringText_","parsePointList_","parsePolygonText_","parseLineStringTextList_","parseMultiPointText_","parsePointTextList_","parseMultiLineStringText_","parseMultiPolygonText_","parsePolygonTextList_","WKT","_format_TextFeature_js__WEBPACK_IMPORTED_MODULE_3__","splitCollection_","splitCollection","encodePointGeometry","encodeLineStringGeometry","encodePolygonGeometry","GeometryEncoder","components","geoms","enc","geometryEncoder","encodeGeometryLayout","parse_","GeometryConstructor","LINESTRING","_geom_LineString_js__WEBPACK_IMPORTED_MODULE_7__","MULTIPOINT","MULTILINESTRING","MULTIPOLYGON","GeometryParser","geomType","_geom_GeometryCollection_js__WEBPACK_IMPORTED_MODULE_4__","ctor","_proj_js__WEBPACK_IMPORTED_MODULE_10__","TopoJSON","_format_JSONFeature_js__WEBPACK_IMPORTED_MODULE_3__","transformVertex","_geom_Point_js__WEBPACK_IMPORTED_MODULE_8__","arcs","concatenateArcs","_geom_LineString_js__WEBPACK_IMPORTED_MODULE_4__","_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_9__","_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_6__","_geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_5__","polyArray","ringCoords","_geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_7__","readFeaturesFromGeometryCollection","readFeatureFromGeometry","transformArc","topoJSONTopology","transformArcs","topoJSONFeatures","objectName","_geom_Point_js__WEBPACK_IMPORTED_MODULE_13__","getGeometryLayout","_geom_LineString_js__WEBPACK_IMPORTED_MODULE_8__","paths","_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_14__","_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_11__","_geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_10__","_geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_12__","esriJSON","hasZM","getHasZM","hasM","EsriJSON","_format_JSONFeature_js__WEBPACK_IMPORTED_MODULE_5__","flatRing","outerRings","_geom_flat_deflate_js__WEBPACK_IMPORTED_MODULE_15__","matched","containsHole","_geom_LinearRing_js__WEBPACK_IMPORTED_MODULE_9__","convertRings","_obj_js__WEBPACK_IMPORTED_MODULE_17__","_format_Feature_js__WEBPACK_IMPORTED_MODULE_4__","esriJSONFeature","idField","attributes","esriJSONFeatures","objectIdFieldName","esriJSONObject","spatialReference","wkid","_source_Image_js__WEBPACK_IMPORTED_MODULE_8__","Static","_proj_js__WEBPACK_IMPORTED_MODULE_7__","_Image_js__WEBPACK_IMPORTED_MODULE_1__","targetWidth","_structs_LRUCache_js__WEBPACK_IMPORTED_MODULE_1__","_structs_PriorityQueue_js__WEBPACK_IMPORTED_MODULE_4__","TileQueue","tilePriorityFunction","tileChangeCallback","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","newLoads","abortedTiles","AssertionError","path","message","_xml_js__WEBPACK_IMPORTED_MODULE_5__","WMSGetFeatureInfo","_format_GML2_js__WEBPACK_IMPORTED_MODULE_2__","_format_XMLFeature_js__WEBPACK_IMPORTED_MODULE_3__","readFeatures_","toRemove","layerFeatures","gmlFeatures","Atlas","space_","emptyBlocks_","renderCallback","block","split_","newBlock1","newBlock2","updateBlocks_","args","_tilegrid_TileGrid_js__WEBPACK_IMPORTED_MODULE_10__","TierSizeCalculation","CustomTile","_ImageTile_js__WEBPACK_IMPORTED_MODULE_2__","zoomifyImage_","_dom_js__WEBPACK_IMPORTED_MODULE_6__","tierSizeCalculation","tierSizeInTiles","tileSizeForTierSizeCalculation","tileCountUpToTier","_tileurlfunction_js__WEBPACK_IMPORTED_MODULE_4__","tileCoordZ","tileIndex","TileGroup","ZoomifyTileClass","_transform_js__WEBPACK_IMPORTED_MODULE_10__","CanvasImmediateRenderer","_VectorContext_js__WEBPACK_IMPORTED_MODULE_8__","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageSnapToPixel_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","_geom_flat_transform_js__WEBPACK_IMPORTED_MODULE_6__","localTransform","setContextFillState_","setContextStrokeState_","setContextTextState_","moveToLineTo_","close","drawRings_","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","_has_js__WEBPACK_IMPORTED_MODULE_7__","contextTextState","_canvas_js__WEBPACK_IMPORTED_MODULE_9__","_colorlike_js__WEBPACK_IMPORTED_MODULE_2__","imageAnchor","imageImage","imageOrigin","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","default","quickselect","maxEntries","_maxEntries","_minEntries","_initFormat","findItem","equalsFn","calcBBox","toBBox","distBBox","children","destNode","createNode","leaf","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","enlargedArea","intersectionArea","multiSelect","_all","childBBox","nodesToSearch","_build","_splitRoot","tmpNode","_insert","goingUp","indexes","_condense","compareMinX","compareMinY","toJSON","fromJSON","right2","right3","N2","_chooseSubtree","targetNode","enlargement","minEnlargement","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","bbox1","bbox2","overlap","minOverlap","_allDistMargin","leftBBox","rightBBox","siblings","compareArr","_source_State_js__WEBPACK_IMPORTED_MODULE_7__","LayerRenderer","handleImageChange_","opt_tileCallback","BaseLayer","_layer_Property_js__WEBPACK_IMPORTED_MODULE_2__","_math_js__WEBPACK_IMPORTED_MODULE_3__","setMaxResolution","setMinResolution","zindex","_functions_js__WEBPACK_IMPORTED_MODULE_8__","VectorImageTile","sourceTiles","replayState_","sourceRevision_","loadListenerKeys_","sourceTileListenerKeys_","sourceZ","useLoadedOnly","loadCount","sourceTileKey","consumers","finishLoading_","defaultLoadFunction","_featureloader_js__WEBPACK_IMPORTED_MODULE_7__","onLoad","onError","errorSourceTiles","empty","_style_Image_js__WEBPACK_IMPORTED_MODULE_6__","RegularShape","checksums_","hitDetectionCanvas_","points_","radius1","radius2_","radius2","angle_","hitDetectionImageSize_","atlasManager_","atlasManager","getRadius2","_ImageState_js__WEBPACK_IMPORTED_MODULE_4__","_colorlike_js__WEBPACK_IMPORTED_MODULE_1__","renderOptions","draw_","createHitDetectionCanvas_","hasCustomHitDetectionImage","renderHitDetectionCallback","drawHitDetectionCanvas_","info","hitImage","angle0","radiusC","strokeChecksum","fillChecksum","checksum","_style_RegularShape_js__WEBPACK_IMPORTED_MODULE_1__","CircleStyle","_source_State_js__WEBPACK_IMPORTED_MODULE_11__","LayerGroup","_layer_Base_js__WEBPACK_IMPORTED_MODULE_9__","layersListenerKeys_","listenerKeys_","handleLayersChanged_","handleLayerChange_","handleLayersAdd_","handleLayersRemove_","layersArray","_ObjectEventType_js__WEBPACK_IMPORTED_MODULE_4__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_7__","collectionEvent","ownLayerState","MsSource","MSPointerDown","msPointerDown","MSPointerMove","msPointerMove","MSPointerUp","msPointerUp","MSPointerOut","msPointerOut","MSPointerOver","msPointerOver","MSPointerCancel","msPointerCancel","MSGotPointerCapture","msGotPointerCapture","MSLostPointerCapture","msLostPointerCapture","POINTER_TYPES","prepareEvent_","makeEvent","pointer_MsSource","NativeSource","pointerdown","pointerDown","pointermove","pointerup","pointerUp","pointerout","pointerOut","pointerover","pointerOver","pointercancel","pointerCancel","gotpointercapture","gotPointerCapture","lostpointercapture","lostPointerCapture","fireNativeEvent","pointer_NativeSource","PointerEvent","opt_eventDict","eventDict","buttons","getButtons_","pressure","getPressure_","bubbles","cancelable","detail","screenX","screenY","relatedTarget","tiltX","tiltY","hwTimestamp","HAS_BUTTONS","which","ev","MouseEvent","pointer_PointerEvent","TouchSource","mouseSource","touchstart","touchmove","touchend","touchcancel","firstTouchId_","clickCount_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","setPrimaryTouch_","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","resetClickCountHandler_","touchToPointer_","webkitRadiusX","radiusX","webkitRadiusY","radiusY","webkitForce","force","processTouches_","inFunction","touches","pointer","findTouch_","touchList","searchId","vacuumTouches_","cancelOut_","dedupSynthMouse_","overDown_","outTarget","over","enter","moveOverOut_","outEvent","upOut_","leave","cleanUpPointer_","lt","pointer_TouchSource","eventMap_","eventSourceList_","registerSources","CLONE_PROPS","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","eventName","ol_events","eventCopy","fireEvent","contains_","contained","inType","wrapMouseEvent","_xml_js__WEBPACK_IMPORTED_MODULE_8__","_format_GMLBase_js__WEBPACK_IMPORTED_MODULE_3__","readFlatCoordinates_","coordsGroups","readBox_","BOX_PARSERS_","innerBoundaryIsParser_","outerBoundaryIsParser_","_format_xsd_js__WEBPACK_IMPORTED_MODULE_4__","createCoordinatesNode_","writeCoordinates_","IconImageCache","cache_","cacheSize_","maxCacheSize_","iconImage","maxCacheSize","shared","layerRendererConstructors","CanvasMapRenderer","_Map_js__WEBPACK_IMPORTED_MODULE_10__","_css_js__WEBPACK_IMPORTED_MODULE_3__","_transform_js__WEBPACK_IMPORTED_MODULE_0__","_render_canvas_Immediate_js__WEBPACK_IMPORTED_MODULE_9__","_render_Event_js__WEBPACK_IMPORTED_MODULE_6__","_render_canvas_js__WEBPACK_IMPORTED_MODULE_8__","_layer_Layer_js__WEBPACK_IMPORTED_MODULE_5__","numLayers","_transform_js__WEBPACK_IMPORTED_MODULE_11__","CanvasImageLayerRenderer","_canvas_IntermediateCanvas_js__WEBPACK_IMPORTED_MODULE_10__","skippedFeatures_","vectorRenderer_","_LayerType_js__WEBPACK_IMPORTED_MODULE_3__","_Map_js__WEBPACK_IMPORTED_MODULE_9__","_layer_VectorRenderType_js__WEBPACK_IMPORTED_MODULE_7__","vectorRenderer","_reproj_common_js__WEBPACK_IMPORTED_MODULE_0__","skippedFeatures","imageFrameState","_obj_js__WEBPACK_IMPORTED_MODULE_8__","newSkippedFeatures","_ImageCanvas_js__WEBPACK_IMPORTED_MODULE_2__","_array_js__WEBPACK_IMPORTED_MODULE_5__","imagePixelRatio","flipXY","opt_destOffset","destOffset","Polyline","factor_","geometryLayout_","geometryLayout","encodeDeltas","numbers","opt_factor","lastNumbers","encoded","encodeUnsignedInteger","encodeUnsignedIntegers","encodeSignedIntegers","encodeFloats","decodeDeltas","current","decodeUnsignedIntegers","decodeSignedIntegers","decodeFloats","format_Feature","WMSCapabilities","_format_XML_js__WEBPACK_IMPORTED_MODULE_2__","SERVICE_PARSERS","Capability","CAPABILITY_PARSERS","REQUEST_PARSERS","Exception","EXCEPTION_PARSERS","Name","_format_xsd_js__WEBPACK_IMPORTED_MODULE_3__","KeywordList","readKeywordList","OnlineResource","_format_XLink_js__WEBPACK_IMPORTED_MODULE_1__","ContactInformation","CONTACT_INFORMATION_PARSERS","Fees","AccessConstraints","LayerLimit","MaxWidth","MaxHeight","ContactPersonPrimary","CONTACT_PERSON_PARSERS","ContactPosition","ContactAddress","CONTACT_ADDRESS_PARSERS","ContactVoiceTelephone","ContactFacsimileTelephone","ContactElectronicMailAddress","ContactPerson","ContactOrganization","AddressType","Address","City","StateOrProvince","PostCode","Country","CRS","EX_GeographicBoundingBox","geographicBoundingBox","EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","BoundingBox","unitSymbol","multipleValues","nearestValue","Attribution","ATTRIBUTION_PARSERS","AuthorityURL","authorityObject","readFormatOnlineresource","MetadataURL","metadataObject","DataURL","FeatureListURL","MinScaleDenominator","MaxScaleDenominator","parentLayerObject","layerObject","queryable","cascaded","noSubsets","fixedWidth","fixedHeight","childValue","parentValue","LogoURL","readSizedFormatOnlineresource","GetCapabilities","readOperationType","GetMap","GetFeatureInfo","OPERATIONTYPE_PARSERS","DCPType","DCPTYPE_PARSERS","HTTP","HTTP_PARSERS","Get","Post","StyleSheetURL","StyleURL","FORMAT_ONLINERESOURCE_PARSERS","KEYWORDLIST_PARSERS","Keyword","formatOnlineresource","wmsCapabilityObject","OWS","ServiceIdentification","SERVICE_IDENTIFICATION_PARSERS","ServiceProvider","SERVICE_PROVIDER_PARSERS","OperationsMetadata","OPERATIONS_METADATA_PARSERS","ADDRESS_PARSERS","DeliveryPoint","AdministrativeArea","PostalCode","ElectronicMailAddress","ALLOWED_VALUES_PARSERS","CONSTRAINT_PARSERS","AllowedValues","CONTACT_INFO_PARSERS","Phone","PHONE_PARSERS","DCP_PARSERS","REQUEST_METHOD_PARSERS","OPERATION_PARSERS","DCP","Operation","Voice","Facsimile","Constraint","SERVICE_CONTACT_PARSERS","IndividualName","PositionName","ContactInfo","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","owsObject","IGCZ","IGC","altitudeMode_","B_RECORD_RE","H_RECORD_RE","HFDTE_RECORD_RE","NEWLINE_RE","year","month","day","lastDateTime","hour","minute","second","UTC","_xml_js__WEBPACK_IMPORTED_MODULE_11__","GPX","readExtensions_","readExtensions","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","RTE_PARSERS","cmt","desc","link","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","layoutOptions","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","writeLink","writeWptType","RTEPT_TYPE_SEQUENCE","TRK_SEQUENCE","TRK_SERIALIZERS","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","GPX_NODE_FACTORY","GPX_SERIALIZERS","applyLayoutOptions","_geom_Point_js__WEBPACK_IMPORTED_MODULE_9__","handleReadExtensions_","extensionsNode","featureReader","gpx","replayGroups_","DEFAULT_EXTENT","setFeatures","_style_Atlas_js__WEBPACK_IMPORTED_MODULE_2__","currentSize_","initialSize","maxSize_","maxSize","currentHitSize_","hitAtlases_","getInfo_","hitInfo","mergeInfos_","atlases","opt_renderHitCallback","add_","renderHitCallback","isHitAtlas","_tilegrid_js__WEBPACK_IMPORTED_MODULE_13__","preemptive","preemptive_","grid_","data_","jsonp_","getData","xRelative","yRelative","forDataAtCoordinate","opt_request","loadInternal_","handleError_","grid","_net_js__WEBPACK_IMPORTED_MODULE_8__","UTFGrid","_source_Tile_js__WEBPACK_IMPORTED_MODULE_11__","_proj_js__WEBPACK_IMPORTED_MODULE_9__","_source_State_js__WEBPACK_IMPORTED_MODULE_10__","tileUrlFunction_","_tileurlfunction_js__WEBPACK_IMPORTED_MODULE_3__","template_","_asserts_js__WEBPACK_IMPORTED_MODULE_4__","getTemplate","forDataAtCoordinateAndResolution","grids","_tilecoord_js__WEBPACK_IMPORTED_MODULE_12__","_uri_js__WEBPACK_IMPORTED_MODULE_7__","ImageMapGuide","_source_Image_js__WEBPACK_IMPORTED_MODULE_6__","displayDpi_","displayDpi","useOverlay_","useOverlay","baseUrl","mcsW","mcsH","devW","devH","mpp","OPERATION","LOCALE","CLIENTAGENT","CLIP","SETDISPLAYDPI","SETDISPLAYWIDTH","SETDISPLAYHEIGHT","SETVIEWSCALE","SETVIEWCENTERX","SETVIEWCENTERY","_style_IconImageCache_js__WEBPACK_IMPORTED_MODULE_6__","IconImage","imageState_","tainting_","_ImageState_js__WEBPACK_IMPORTED_MODULE_5__","determineTainting_","dispatchChangeEvent_","replaceColor_","imgData","_style_Style_js__WEBPACK_IMPORTED_MODULE_13__","ExtentEventType","ExtentInteractionEvent","ExtentInteraction","pointerHandler_","extentFeature_","_interaction_Pointer_js__WEBPACK_IMPORTED_MODULE_10__","extentOverlay_","_layer_Vector_js__WEBPACK_IMPORTED_MODULE_11__","_source_Vector_js__WEBPACK_IMPORTED_MODULE_12__","boxStyle","getDefaultExtentStyleFunction","vertexOverlay_","pointerStyle","getDefaultPointerStyleFunction","snapToVertex_","getOpposingPoint","x_","y_","getPointHandler","getEdgeHandler","createOrUpdatePointerFeature_","fixedPoint","fixedP1","fixedP2","_coordinate_js__WEBPACK_IMPORTED_MODULE_4__","getSegments","createOrUpdateExtentFeature_","extentFeature","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","firstIndex","_easing_js__WEBPACK_IMPORTED_MODULE_5__","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","_control_Control_js__WEBPACK_IMPORTED_MODULE_3__","zoomByDelta_","_util_js__WEBPACK_IMPORTED_MODULE_5__","Rotate","_css_js__WEBPACK_IMPORTED_MODULE_1__","callResetNorth_","resetNorth","_control_Control_js__WEBPACK_IMPORTED_MODULE_0__","autoHide_","autoHide","msTransform","webkitTransform","resetNorth_","_layer_Layer_js__WEBPACK_IMPORTED_MODULE_7__","ulElement_","_control_Control_js__WEBPACK_IMPORTED_MODULE_2__","renderedAttributions_","getSourceAttributions_","lookup","visibleAttributions","attributionGetter","_Zoom_js__WEBPACK_IMPORTED_MODULE_3__","_Collection_js__WEBPACK_IMPORTED_MODULE_0__","zoomOptions","_Rotate_js__WEBPACK_IMPORTED_MODULE_2__","rotateOptions","_Attribution_js__WEBPACK_IMPORTED_MODULE_1__","attributionOptions","_pointer_PointerEventHandler_js__WEBPACK_IMPORTED_MODULE_7__","MapBrowserEventHandler","_events_EventTarget_js__WEBPACK_IMPORTED_MODULE_5__","clickTimeoutId_","dragListenerKeys_","moveTolerance_","_has_js__WEBPACK_IMPORTED_MODULE_1__","down_","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","_pointer_EventType_js__WEBPACK_IMPORTED_MODULE_6__","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","isMoving_","MousePosition","_control_Control_js__WEBPACK_IMPORTED_MODULE_4__","coordinateFormat","setCoordinateFormat","undefinedHTML_","undefinedHTML","renderOnMouseOut_","mapProjection_","lastMouseMovePixel_","updateHTML_","getCoordinateFormat","handleMouseMove","handleMouseOut","_render_canvas_Immediate_js__WEBPACK_IMPORTED_MODULE_2__","toContext","_has_js__WEBPACK_IMPORTED_MODULE_0__","_transform_js__WEBPACK_IMPORTED_MODULE_1__","_util_js__WEBPACK_IMPORTED_MODULE_28__","errorThreshold","sourceProj_","transformInvCache","transformInv","transformInv_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","centerSrc","bc","bcSrc","da","daSrc","abSrc","cd","cdSrc","_format_FormatType_js__WEBPACK_IMPORTED_MODULE_1__","loadFeaturesXhr","success","failure","xhr","responseType","onload","responseXML","onerror","lineStringLength","ret","Pbf","ieee754","ArrayBuffer","isView","Varint","Fixed64","Bytes","Fixed32","readPackedEnd","toNum","isSigned","makeRoomForExtraLength","startPos","extraLen","realloc","writePackedVarint","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","readInt32","destroy","readField","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readVarintRemainder","b3","bytesPerSequence","readUtf8","readBytes","subarray","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","writeUtf8","writeBytes","writeRawMessage","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","Processor","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","hasImageData","ImageData","_","newImageData","createImageData","createMinion","workerHasImageData","newWorkerImageData","buffers","meta","numBuffers","numBytes","byteLength","Uint8ClampedArray","arrays","createWorker","onMessage","blob","Blob","createObjectURL","worker","Worker","_imageOps","workers","_onWorkerMessage","minion","postMessage","createFauxWorker","_workers","_queue","_maxQueueLength","_running","_dataLookup","_job","inputs","_enqueue","_dispatch","_destroyed","job","slices","_resolveJob","swap","defaultCompare","quickselectStep","sd","newLeft","newRight"],"mappings":"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","file":"common.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// run deferred modules from other chunks\n \tcheckDeferredModules();\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n\n/**\n * When using {@link module:ol/xml~makeChildAppender} or\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node\n */\n\n\n/**\n * @typedef {function(Node, Array.<*>)} Parser\n */\n\n\n/**\n * @typedef {function(Node, *, Array.<*>)} Serializer\n */\n\n\n/**\n * This document should be used when creating nodes for XML serializations. This\n * document is also used by {@link module:ol/xml~createElementNS}\n * @const\n * @type {Document}\n */\nexport const DOCUMENT = document.implementation.createDocument('', '', null);\n\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI = 'http://www.w3.org/2001/XMLSchema-instance';\n\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Node} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return DOCUMENT.createElementNS(namespaceURI, qualifiedName);\n}\n\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array.<string>} accumulator Accumulator.\n * @private\n * @return {Array.<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (node.nodeType == Node.CDATA_SECTION_NODE ||\n      node.nodeType == Node.TEXT_NODE) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n\n/**\n * @param {?} value Value.\n * @return {boolean} Is document.\n */\nexport function isDocument(value) {\n  return value instanceof Document;\n}\n\n\n/**\n * @param {?} value Value.\n * @return {boolean} Is node.\n */\nexport function isNode(value) {\n  return value instanceof Node;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array.<*>): (Array.<*>|undefined)}\n *     valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        const array = /** @type {Array.<*>} */ (objectStack[objectStack.length - 1]);\n        extend(array, value);\n      }\n    }\n  );\n}\n\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array.<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        const array = /** @type {Array.<*>} */ (objectStack[objectStack.length - 1]);\n        array.push(value);\n      }\n    });\n}\n\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array.<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    });\n}\n\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Node, Array.<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        const property = opt_property !== undefined ? opt_property : node.localName;\n        let array;\n        if (property in object) {\n          array = object[property];\n        } else {\n          array = object[property] = [];\n        }\n        array.push(value);\n      }\n    });\n}\n\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Node, Array.<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        const property = opt_property !== undefined ? opt_property : node.localName;\n        object[property] = value;\n      }\n    });\n}\n\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array.<*>)}\n *     nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {module:ol/xml~Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n  return function(node, value, objectStack) {\n    nodeWriter.call(opt_this !== undefined ? opt_this : this, node, value, objectStack);\n    const parent = /** @type {module:ol/xml~NodeStackItem} */ (objectStack[objectStack.length - 1]);\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Node, V, Array.<*>)}\n *     nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {module:ol/xml~Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n  let serializersNS, nodeFactory;\n  return function(node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string=} opt_nodeName Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string=} opt_namespaceURI Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array.<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n  const fixedNodeName = opt_nodeName;\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array.<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node} Node.\n     */\n    function(value, objectStack, opt_nodeName) {\n      const context = /** @type {module:ol/xml~NodeStackItem} */ (objectStack[objectStack.length - 1]);\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = opt_nodeName;\n      }\n\n      const namespaceURI = opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object.<string, V>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array.<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array.<V>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n * @template V\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array.<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object.<string, T>=} opt_structureNS Namespaced structure to add to.\n * @return {Object.<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n  /**\n   * @type {Object.<string, T>}\n   */\n  const structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object.<string, Object.<string, module:ol/xml~Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(opt_this, n, objectStack);\n      }\n    }\n  }\n}\n\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object.<string, Object.<string, module:ol/xml~Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, opt_this) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, opt_this);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object.<string, Object.<string, module:ol/xml~Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array.<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array.<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array.<*>} objectStack Node stack.\n * @param {Array.<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n  const length = (opt_keys !== undefined ? opt_keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(opt_this !== undefined ? opt_this : this, value, objectStack,\n        opt_keys !== undefined ? opt_keys[i] : undefined);\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName]\n          .call(opt_this, node, value, objectStack);\n      }\n    }\n  }\n}\n\n\n/**\n * @param {O} object Object.\n * @param {Object.<string, Object.<string, module:ol/xml~Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array.<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array.<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array.<*>} objectStack Node stack.\n * @param {Array.<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(object, serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n","/**\n * @module ol/util\n */\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function module:ol.inherits\n * @api\n */\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {number} The unique ID for the object.\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = ++uidCounter_);\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '5.0.0';\n","/**\n * @module ol/style\n */\n\n\nexport {default as Atlas} from './style/Atlas.js';\nexport {default as AtlasManager} from './style/AtlasManager.js';\nexport {default as Circle} from './style/Circle.js';\nexport {default as Fill} from './style/Fill.js';\nexport {default as Icon} from './style/Icon.js';\nexport {default as IconImage} from './style/IconImage.js';\nexport {default as Image} from './style/Image.js';\nexport {default as RegularShape} from './style/RegularShape.js';\nexport {default as Stroke} from './style/Stroke.js';\nexport {default as Style} from './style/Style.js';\nexport {default as Text} from './style/Text.js';\n","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array.<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @return {module:ol/extent~Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array.<number>} xs Xs.\n * @param {Array.<number>} ys Ys.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @private\n * @return {module:ol/extent~Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {module:ol/extent~Extent} extent Extent to clone.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @return {module:ol/extent/Relationship} The relationship (bitwise compare with\n *     module:ol/extent/Relationship~Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {module:ol/extent~Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} rings Rings.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {module:ol/extent~Extent} extent1 The extent to be modified.\n * @param {module:ol/extent~Extent} extent2 The extent that will be included in the first.\n * @return {module:ol/extent~Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} rings Rings.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(this:T, module:ol/coordinate~Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  let val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/extent/Corner} corner Corner.\n * @return {module:ol/coordinate~Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return (\n    /** @type {!module:ol/coordinate~Coordinate} */ (coordinate)\n  );\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  const dx = resolution * size[0] / 2;\n  const dy = resolution * size[1] / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @param {module:ol/extent~Extent=} opt_extent Optional extent to populate with intersection.\n * @return {module:ol/extent~Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @return {module:ol/size~Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @param {module:ol/coordinate~Coordinate} start Segment start coordinate.\n * @param {module:ol/coordinate~Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/proj~TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  const coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  const xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  const ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((module:ol/coordinate~Coordinate|undefined)): (module:ol/coordinate~Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/centerconstraint~Type} The constraint.\n */\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {module:ol/coordinate~Coordinate=} center Center.\n     * @return {module:ol/coordinate~Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          clamp(center[0], extent[0], extent[2]),\n          clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate=} center Center.\n * @return {module:ol/coordinate~Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/View\n */\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {getUid, inherits} from './util.js';\nimport {UNDEFINED} from './functions.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\nimport {inAndOut} from './easing.js';\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport SimpleGeometry from './geom/SimpleGeometry.js';\nimport {clamp, modulo} from './math.js';\nimport {assign} from './obj.js';\nimport {createProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\n\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {module:ol/coordinate~Coordinate} [sourceCenter]\n * @property {module:ol/coordinate~Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [sourceRotation]\n * @property {module:ol/coordinate~Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n\n/**\n * @typedef {Object} Constraints\n * @property {module:ol/centerconstraint~Type} center\n * @property {module:ol/resolutionconstraint~Type} resolution\n * @property {module:ol/rotationconstraint~Type} rotation\n */\n\n\n/**\n * @typedef {Object} FitOptions\n * @property {module:ol/size~Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array.<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\n * the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n\n/**\n * @typedef {Object} ViewOptions\n * @property {module:ol/coordinate~Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {module:ol/extent~Extent} [extent] The extent that constrains the\n * center, in other words, center cannot be set outside this extent.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array.<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view. The initial\n * resolution is determined using the {@link #constrainResolution} method.\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\n * resolution constraint.\n */\n\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {module:ol/coordinate~Coordinate|undefined} center The center of the view at the end of\n * the animation.\n * @property {number|undefined} zoom The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number|undefined} resolution The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number|undefined} rotation The rotation of the view at the end of\n * the animation.\n * @property {module:ol/coordinate~Coordinate|undefined} anchor Optional anchor to remained fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {module:ol/coordinate~Coordinate} center\n * @property {module:ol/proj/Projection} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But a View object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/View~ViewOptions=} opt_options View options.\n * @api\n */\nconst View = function(opt_options) {\n  BaseObject.call(this);\n\n  const options = assign({}, opt_options);\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.hints_ = [0, 0];\n\n  /**\n   * @private\n   * @type {Array.<Array.<module:ol/View~Animation>>}\n   */\n  this.animations_ = [];\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.updateAnimationKey_;\n\n  this.updateAnimations_ = this.updateAnimations_.bind(this);\n\n  /**\n   * @private\n   * @const\n   * @type {module:ol/proj/Projection}\n   */\n  this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n  this.applyOptions_(options);\n};\n\ninherits(View, BaseObject);\n\n\n/**\n * Set up the view with the given options.\n * @param {module:ol/View~ViewOptions} options View options.\n */\nView.prototype.applyOptions_ = function(options) {\n\n  /**\n   * @type {Object.<string, *>}\n   */\n  const properties = {};\n  properties[ViewProperty.CENTER] = options.center !== undefined ?\n    options.center : null;\n\n  const resolutionConstraintInfo = createResolutionConstraint(options);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n  /**\n   * @private\n   * @type {Array.<number>|undefined}\n   */\n  this.resolutions_ = options.resolutions;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n  const centerConstraint = createCenterConstraint(options);\n  const resolutionConstraint = resolutionConstraintInfo.constraint;\n  const rotationConstraint = createRotationConstraint(options);\n\n  /**\n   * @private\n   * @type {module:ol/View~Constraints}\n   */\n  this.constraints_ = {\n    center: centerConstraint,\n    resolution: resolutionConstraint,\n    rotation: rotationConstraint\n  };\n\n  if (options.resolution !== undefined) {\n    properties[ViewProperty.RESOLUTION] = options.resolution;\n  } else if (options.zoom !== undefined) {\n    properties[ViewProperty.RESOLUTION] = this.constrainResolution(\n      this.maxResolution_, options.zoom - this.minZoom_);\n\n    if (this.resolutions_) { // in case map zoom is out of min/max zoom range\n      properties[ViewProperty.RESOLUTION] = clamp(\n        Number(this.getResolution() || properties[ViewProperty.RESOLUTION]),\n        this.minResolution_, this.maxResolution_);\n    }\n  }\n  properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\n  this.setProperties(properties);\n\n  /**\n   * @private\n   * @type {module:ol/View~ViewOptions}\n   */\n  this.options_ = options;\n\n};\n\n/**\n * Get an updated version of the view options used to construct the view.  The\n * current resolution (or zoom), center, and rotation are applied to any stored\n * options.  The provided options can be used to apply new min/max zoom or\n * resolution limits.\n * @param {module:ol/View~ViewOptions} newOptions New options to be applied.\n * @return {module:ol/View~ViewOptions} New options updated with the current view state.\n */\nView.prototype.getUpdatedOptions_ = function(newOptions) {\n  const options = assign({}, this.options_);\n\n  // preserve resolution (or zoom)\n  if (options.resolution !== undefined) {\n    options.resolution = this.getResolution();\n  } else {\n    options.zoom = this.getZoom();\n  }\n\n  // preserve center\n  options.center = this.getCenter();\n\n  // preserve rotation\n  options.rotation = this.getRotation();\n\n  return assign({}, options, newOptions);\n};\n\n\n/**\n * Animate the view.  The view's center, zoom (or resolution), and rotation\n * can be animated for smooth transitions between view states.  For example,\n * to animate the view to a new zoom level:\n *\n *     view.animate({zoom: view.getZoom() + 1});\n *\n * By default, the animation lasts one second and uses in-and-out easing.  You\n * can customize this behavior by including `duration` (in milliseconds) and\n * `easing` options (see {@link module:ol/easing}).\n *\n * To chain together multiple animations, call the method with multiple\n * animation objects.  For example, to first zoom and then pan:\n *\n *     view.animate({zoom: 10}, {center: [0, 0]});\n *\n * If you provide a function as the last argument to the animate method, it\n * will get called at the end of an animation series.  The callback will be\n * called with `true` if the animation series completed on its own or `false`\n * if it was cancelled.\n *\n * Animations are cancelled by user interactions (e.g. dragging the map) or by\n * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n * (or another method that calls one of these).\n *\n * @param {...(module:ol/View~AnimationOptions|function(boolean))} var_args Animation\n *     options.  Multiple animations can be run in series by passing multiple\n *     options objects.  To run multiple animations in parallel, call the method\n *     multiple times.  An optional callback can be provided as a final\n *     argument.  The callback will be called with a boolean indicating whether\n *     the animation completed without being cancelled.\n * @api\n */\nView.prototype.animate = function(var_args) {\n  let animationCount = arguments.length;\n  let callback;\n  if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n    callback = arguments[animationCount - 1];\n    --animationCount;\n  }\n  if (!this.isDef()) {\n    // if view properties are not yet set, shortcut to the final state\n    const state = arguments[animationCount - 1];\n    if (state.center) {\n      this.setCenter(state.center);\n    }\n    if (state.zoom !== undefined) {\n      this.setZoom(state.zoom);\n    }\n    if (state.rotation !== undefined) {\n      this.setRotation(state.rotation);\n    }\n    if (callback) {\n      setTimeout(function() {\n        callback(true);\n      }, 0);\n    }\n    return;\n  }\n  let start = Date.now();\n  let center = this.getCenter().slice();\n  let resolution = this.getResolution();\n  let rotation = this.getRotation();\n  const series = [];\n  for (let i = 0; i < animationCount; ++i) {\n    const options = /** @type {module:ol/View~AnimationOptions} */ (arguments[i]);\n\n    const animation = /** @type {module:ol/View~Animation} */ ({\n      start: start,\n      complete: false,\n      anchor: options.anchor,\n      duration: options.duration !== undefined ? options.duration : 1000,\n      easing: options.easing || inAndOut\n    });\n\n    if (options.center) {\n      animation.sourceCenter = center;\n      animation.targetCenter = options.center;\n      center = animation.targetCenter;\n    }\n\n    if (options.zoom !== undefined) {\n      animation.sourceResolution = resolution;\n      animation.targetResolution = this.constrainResolution(\n        this.maxResolution_, options.zoom - this.minZoom_, 0);\n      resolution = animation.targetResolution;\n    } else if (options.resolution) {\n      animation.sourceResolution = resolution;\n      animation.targetResolution = options.resolution;\n      resolution = animation.targetResolution;\n    }\n\n    if (options.rotation !== undefined) {\n      animation.sourceRotation = rotation;\n      const delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n      animation.targetRotation = rotation + delta;\n      rotation = animation.targetRotation;\n    }\n\n    animation.callback = callback;\n\n    // check if animation is a no-op\n    if (isNoopAnimation(animation)) {\n      animation.complete = true;\n      // we still push it onto the series for callback handling\n    } else {\n      start += animation.duration;\n    }\n    series.push(animation);\n  }\n  this.animations_.push(series);\n  this.setHint(ViewHint.ANIMATING, 1);\n  this.updateAnimations_();\n};\n\n\n/**\n * Determine if the view is being animated.\n * @return {boolean} The view is being animated.\n * @api\n */\nView.prototype.getAnimating = function() {\n  return this.hints_[ViewHint.ANIMATING] > 0;\n};\n\n\n/**\n * Determine if the user is interacting with the view, such as panning or zooming.\n * @return {boolean} The view is being interacted with.\n * @api\n */\nView.prototype.getInteracting = function() {\n  return this.hints_[ViewHint.INTERACTING] > 0;\n};\n\n\n/**\n * Cancel any ongoing animations.\n * @api\n */\nView.prototype.cancelAnimations = function() {\n  this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n  for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n    const series = this.animations_[i];\n    if (series[0].callback) {\n      series[0].callback(false);\n    }\n  }\n  this.animations_.length = 0;\n};\n\n/**\n * Update all animations.\n */\nView.prototype.updateAnimations_ = function() {\n  if (this.updateAnimationKey_ !== undefined) {\n    cancelAnimationFrame(this.updateAnimationKey_);\n    this.updateAnimationKey_ = undefined;\n  }\n  if (!this.getAnimating()) {\n    return;\n  }\n  const now = Date.now();\n  let more = false;\n  for (let i = this.animations_.length - 1; i >= 0; --i) {\n    const series = this.animations_[i];\n    let seriesComplete = true;\n    for (let j = 0, jj = series.length; j < jj; ++j) {\n      const animation = series[j];\n      if (animation.complete) {\n        continue;\n      }\n      const elapsed = now - animation.start;\n      let fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n      if (fraction >= 1) {\n        animation.complete = true;\n        fraction = 1;\n      } else {\n        seriesComplete = false;\n      }\n      const progress = animation.easing(fraction);\n      if (animation.sourceCenter) {\n        const x0 = animation.sourceCenter[0];\n        const y0 = animation.sourceCenter[1];\n        const x1 = animation.targetCenter[0];\n        const y1 = animation.targetCenter[1];\n        const x = x0 + progress * (x1 - x0);\n        const y = y0 + progress * (y1 - y0);\n        this.set(ViewProperty.CENTER, [x, y]);\n      }\n      if (animation.sourceResolution && animation.targetResolution) {\n        const resolution = progress === 1 ?\n          animation.targetResolution :\n          animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n        if (animation.anchor) {\n          this.set(ViewProperty.CENTER,\n            this.calculateCenterZoom(resolution, animation.anchor));\n        }\n        this.set(ViewProperty.RESOLUTION, resolution);\n      }\n      if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n        const rotation = progress === 1 ?\n          modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n          animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n        if (animation.anchor) {\n          this.set(ViewProperty.CENTER,\n            this.calculateCenterRotate(rotation, animation.anchor));\n        }\n        this.set(ViewProperty.ROTATION, rotation);\n      }\n      more = true;\n      if (!animation.complete) {\n        break;\n      }\n    }\n    if (seriesComplete) {\n      this.animations_[i] = null;\n      this.setHint(ViewHint.ANIMATING, -1);\n      const callback = series[0].callback;\n      if (callback) {\n        setTimeout(function() {\n          callback(true);\n        }, 0);\n      }\n    }\n  }\n  // prune completed series\n  this.animations_ = this.animations_.filter(Boolean);\n  if (more && this.updateAnimationKey_ === undefined) {\n    this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n  }\n};\n\n/**\n * @param {number} rotation Target rotation.\n * @param {module:ol/coordinate~Coordinate} anchor Rotation anchor.\n * @return {module:ol/coordinate~Coordinate|undefined} Center for rotation and anchor.\n */\nView.prototype.calculateCenterRotate = function(rotation, anchor) {\n  let center;\n  const currentCenter = this.getCenter();\n  if (currentCenter !== undefined) {\n    center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n    rotateCoordinate(center, rotation - this.getRotation());\n    addCoordinate(center, anchor);\n  }\n  return center;\n};\n\n\n/**\n * @param {number} resolution Target resolution.\n * @param {module:ol/coordinate~Coordinate} anchor Zoom anchor.\n * @return {module:ol/coordinate~Coordinate|undefined} Center for resolution and anchor.\n */\nView.prototype.calculateCenterZoom = function(resolution, anchor) {\n  let center;\n  const currentCenter = this.getCenter();\n  const currentResolution = this.getResolution();\n  if (currentCenter !== undefined && currentResolution !== undefined) {\n    const x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n    const y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n    center = [x, y];\n  }\n  return center;\n};\n\n\n/**\n * @private\n * @return {module:ol/size~Size} Viewport size or `[100, 100]` when no viewport is found.\n */\nView.prototype.getSizeFromViewport_ = function() {\n  const size = [100, 100];\n  const selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n  const element = document.querySelector(selector);\n  if (element) {\n    const metrics = getComputedStyle(element);\n    size[0] = parseInt(metrics.width, 10);\n    size[1] = parseInt(metrics.height, 10);\n  }\n  return size;\n};\n\n\n/**\n * Get the constrained center of this view.\n * @param {module:ol/coordinate~Coordinate|undefined} center Center.\n * @return {module:ol/coordinate~Coordinate|undefined} Constrained center.\n * @api\n */\nView.prototype.constrainCenter = function(center) {\n  return this.constraints_.center(center);\n};\n\n\n/**\n * Get the constrained resolution of this view.\n * @param {number|undefined} resolution Resolution.\n * @param {number=} opt_delta Delta. Default is `0`.\n * @param {number=} opt_direction Direction. Default is `0`.\n * @return {number|undefined} Constrained resolution.\n * @api\n */\nView.prototype.constrainResolution = function(resolution, opt_delta, opt_direction) {\n  const delta = opt_delta || 0;\n  const direction = opt_direction || 0;\n  return this.constraints_.resolution(resolution, delta, direction);\n};\n\n\n/**\n * Get the constrained rotation of this view.\n * @param {number|undefined} rotation Rotation.\n * @param {number=} opt_delta Delta. Default is `0`.\n * @return {number|undefined} Constrained rotation.\n * @api\n */\nView.prototype.constrainRotation = function(rotation, opt_delta) {\n  const delta = opt_delta || 0;\n  return this.constraints_.rotation(rotation, delta);\n};\n\n\n/**\n * Get the view center.\n * @return {module:ol/coordinate~Coordinate|undefined} The center of the view.\n * @observable\n * @api\n */\nView.prototype.getCenter = function() {\n  return (\n    /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(ViewProperty.CENTER))\n  );\n};\n\n\n/**\n * @return {module:ol/View~Constraints} Constraints.\n */\nView.prototype.getConstraints = function() {\n  return this.constraints_;\n};\n\n\n/**\n * @param {Array.<number>=} opt_hints Destination array.\n * @return {Array.<number>} Hint.\n */\nView.prototype.getHints = function(opt_hints) {\n  if (opt_hints !== undefined) {\n    opt_hints[0] = this.hints_[0];\n    opt_hints[1] = this.hints_[1];\n    return opt_hints;\n  } else {\n    return this.hints_.slice();\n  }\n};\n\n\n/**\n * Calculate the extent for the current view state and the passed size.\n * The size is the pixel dimensions of the box into which the calculated extent\n * should fit. In most cases you want to get the extent of the entire map,\n * that is `map.getSize()`.\n * @param {module:ol/size~Size=} opt_size Box pixel size. If not provided, the size of the\n * first map that uses this view will be used.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nView.prototype.calculateExtent = function(opt_size) {\n  const size = opt_size || this.getSizeFromViewport_();\n  const center = /** @type {!module:ol/coordinate~Coordinate} */ (this.getCenter());\n  assert(center, 1); // The view center is not defined\n  const resolution = /** @type {!number} */ (this.getResolution());\n  assert(resolution !== undefined, 2); // The view resolution is not defined\n  const rotation = /** @type {!number} */ (this.getRotation());\n  assert(rotation !== undefined, 3); // The view rotation is not defined\n\n  return getForViewAndSize(center, resolution, rotation, size);\n};\n\n\n/**\n * Get the maximum resolution of the view.\n * @return {number} The maximum resolution of the view.\n * @api\n */\nView.prototype.getMaxResolution = function() {\n  return this.maxResolution_;\n};\n\n\n/**\n * Get the minimum resolution of the view.\n * @return {number} The minimum resolution of the view.\n * @api\n */\nView.prototype.getMinResolution = function() {\n  return this.minResolution_;\n};\n\n\n/**\n * Get the maximum zoom level for the view.\n * @return {number} The maximum zoom level.\n * @api\n */\nView.prototype.getMaxZoom = function() {\n  return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n};\n\n\n/**\n * Set a new maximum zoom level for the view.\n * @param {number} zoom The maximum zoom level.\n * @api\n */\nView.prototype.setMaxZoom = function(zoom) {\n  this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n};\n\n\n/**\n * Get the minimum zoom level for the view.\n * @return {number} The minimum zoom level.\n * @api\n */\nView.prototype.getMinZoom = function() {\n  return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n};\n\n\n/**\n * Set a new minimum zoom level for the view.\n * @param {number} zoom The minimum zoom level.\n * @api\n */\nView.prototype.setMinZoom = function(zoom) {\n  this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n};\n\n\n/**\n * Get the view projection.\n * @return {module:ol/proj/Projection} The projection of the view.\n * @api\n */\nView.prototype.getProjection = function() {\n  return this.projection_;\n};\n\n\n/**\n * Get the view resolution.\n * @return {number|undefined} The resolution of the view.\n * @observable\n * @api\n */\nView.prototype.getResolution = function() {\n  return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n};\n\n\n/**\n * Get the resolutions for the view. This returns the array of resolutions\n * passed to the constructor of the View, or undefined if none were given.\n * @return {Array.<number>|undefined} The resolutions of the view.\n * @api\n */\nView.prototype.getResolutions = function() {\n  return this.resolutions_;\n};\n\n\n/**\n * Get the resolution for a provided extent (in map units) and size (in pixels).\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/size~Size=} opt_size Box pixel size.\n * @return {number} The resolution at which the provided extent will render at\n *     the given size.\n * @api\n */\nView.prototype.getResolutionForExtent = function(extent, opt_size) {\n  const size = opt_size || this.getSizeFromViewport_();\n  const xResolution = getWidth(extent) / size[0];\n  const yResolution = getHeight(extent) / size[1];\n  return Math.max(xResolution, yResolution);\n};\n\n\n/**\n * Return a function that returns a value between 0 and 1 for a\n * resolution. Exponential scaling is assumed.\n * @param {number=} opt_power Power.\n * @return {function(number): number} Resolution for value function.\n */\nView.prototype.getResolutionForValueFunction = function(opt_power) {\n  const power = opt_power || 2;\n  const maxResolution = this.maxResolution_;\n  const minResolution = this.minResolution_;\n  const max = Math.log(maxResolution / minResolution) / Math.log(power);\n  return (\n    /**\n     * @param {number} value Value.\n     * @return {number} Resolution.\n     */\n    function(value) {\n      const resolution = maxResolution / Math.pow(power, value * max);\n      return resolution;\n    });\n};\n\n\n/**\n * Get the view rotation.\n * @return {number} The rotation of the view in radians.\n * @observable\n * @api\n */\nView.prototype.getRotation = function() {\n  return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n};\n\n\n/**\n * Return a function that returns a resolution for a value between\n * 0 and 1. Exponential scaling is assumed.\n * @param {number=} opt_power Power.\n * @return {function(number): number} Value for resolution function.\n */\nView.prototype.getValueForResolutionFunction = function(opt_power) {\n  const power = opt_power || 2;\n  const maxResolution = this.maxResolution_;\n  const minResolution = this.minResolution_;\n  const max = Math.log(maxResolution / minResolution) / Math.log(power);\n  return (\n    /**\n     * @param {number} resolution Resolution.\n     * @return {number} Value.\n     */\n    function(resolution) {\n      const value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n      return value;\n    });\n};\n\n\n/**\n * @return {module:ol/View~State} View state.\n */\nView.prototype.getState = function() {\n  const center = /** @type {module:ol/coordinate~Coordinate} */ (this.getCenter());\n  const projection = this.getProjection();\n  const resolution = /** @type {number} */ (this.getResolution());\n  const rotation = this.getRotation();\n  return (\n    /** @type {module:ol/View~State} */ ({\n      center: center.slice(),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      rotation: rotation,\n      zoom: this.getZoom()\n    })\n  );\n};\n\n\n/**\n * Get the current zoom level.  If you configured your view with a resolutions\n * array (this is rare), this method may return non-integer zoom levels (so\n * the zoom level is not safe to use as an index into a resolutions array).\n * @return {number|undefined} Zoom.\n * @api\n */\nView.prototype.getZoom = function() {\n  let zoom;\n  const resolution = this.getResolution();\n  if (resolution !== undefined) {\n    zoom = this.getZoomForResolution(resolution);\n  }\n  return zoom;\n};\n\n\n/**\n * Get the zoom level for a resolution.\n * @param {number} resolution The resolution.\n * @return {number|undefined} The zoom level for the provided resolution.\n * @api\n */\nView.prototype.getZoomForResolution = function(resolution) {\n  let offset = this.minZoom_ || 0;\n  let max, zoomFactor;\n  if (this.resolutions_) {\n    const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n    offset = nearest;\n    max = this.resolutions_[nearest];\n    if (nearest == this.resolutions_.length - 1) {\n      zoomFactor = 2;\n    } else {\n      zoomFactor = max / this.resolutions_[nearest + 1];\n    }\n  } else {\n    max = this.maxResolution_;\n    zoomFactor = this.zoomFactor_;\n  }\n  return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n};\n\n\n/**\n * Get the resolution for a zoom level.\n * @param {number} zoom Zoom level.\n * @return {number} The view resolution for the provided zoom level.\n * @api\n */\nView.prototype.getResolutionForZoom = function(zoom) {\n  return /** @type {number} */ (this.constrainResolution(\n    this.maxResolution_, zoom - this.minZoom_, 0));\n};\n\n\n/**\n * Fit the given geometry or extent based on the given map size and border.\n * The size is pixel dimensions of the box to fit the extent into.\n * In most cases you will want to use the map size, that is `map.getSize()`.\n * Takes care of the map angle.\n * @param {module:ol/geom/SimpleGeometry|module:ol/extent~Extent} geometryOrExtent The geometry or\n *     extent to fit the view to.\n * @param {module:ol/View~FitOptions=} opt_options Options.\n * @api\n */\nView.prototype.fit = function(geometryOrExtent, opt_options) {\n  const options = opt_options || {};\n  let size = options.size;\n  if (!size) {\n    size = this.getSizeFromViewport_();\n  }\n  /** @type {module:ol/geom/SimpleGeometry} */\n  let geometry;\n  if (!(geometryOrExtent instanceof SimpleGeometry)) {\n    assert(Array.isArray(geometryOrExtent),\n      24); // Invalid extent or geometry provided as `geometry`\n    assert(!isEmpty(geometryOrExtent),\n      25); // Cannot fit empty extent provided as `geometry`\n    geometry = polygonFromExtent(geometryOrExtent);\n  } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n    geometryOrExtent = geometryOrExtent.getExtent();\n    geometry = polygonFromExtent(geometryOrExtent);\n    geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n  } else {\n    geometry = geometryOrExtent;\n  }\n\n  const padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n  const constrainResolution = options.constrainResolution !== undefined ?\n    options.constrainResolution : true;\n  const nearest = options.nearest !== undefined ? options.nearest : false;\n  let minResolution;\n  if (options.minResolution !== undefined) {\n    minResolution = options.minResolution;\n  } else if (options.maxZoom !== undefined) {\n    minResolution = this.constrainResolution(\n      this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n  } else {\n    minResolution = 0;\n  }\n  const coords = geometry.getFlatCoordinates();\n\n  // calculate rotated extent\n  const rotation = this.getRotation();\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let minRotX = +Infinity;\n  let minRotY = +Infinity;\n  let maxRotX = -Infinity;\n  let maxRotY = -Infinity;\n  const stride = geometry.getStride();\n  for (let i = 0, ii = coords.length; i < ii; i += stride) {\n    const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n    const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n    minRotX = Math.min(minRotX, rotX);\n    minRotY = Math.min(minRotY, rotY);\n    maxRotX = Math.max(maxRotX, rotX);\n    maxRotY = Math.max(maxRotY, rotY);\n  }\n\n  // calculate resolution\n  let resolution = this.getResolutionForExtent(\n    [minRotX, minRotY, maxRotX, maxRotY],\n    [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n  resolution = isNaN(resolution) ? minResolution :\n    Math.max(resolution, minResolution);\n  if (constrainResolution) {\n    let constrainedResolution = this.constrainResolution(resolution, 0, 0);\n    if (!nearest && constrainedResolution < resolution) {\n      constrainedResolution = this.constrainResolution(\n        constrainedResolution, -1, 0);\n    }\n    resolution = constrainedResolution;\n  }\n\n  // calculate center\n  sinAngle = -sinAngle; // go back to original rotation\n  let centerRotX = (minRotX + maxRotX) / 2;\n  let centerRotY = (minRotY + maxRotY) / 2;\n  centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n  centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n  const centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n  const centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n  const center = [centerX, centerY];\n  const callback = options.callback ? options.callback : UNDEFINED;\n\n  if (options.duration !== undefined) {\n    this.animate({\n      resolution: resolution,\n      center: center,\n      duration: options.duration,\n      easing: options.easing\n    }, callback);\n  } else {\n    this.setResolution(resolution);\n    this.setCenter(center);\n    setTimeout(callback.bind(undefined, true), 0);\n  }\n};\n\n\n/**\n * Center on coordinate and view position.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/size~Size} size Box pixel size.\n * @param {module:ol~Pixel} position Position on the view to center on.\n * @api\n */\nView.prototype.centerOn = function(coordinate, size, position) {\n  // calculate rotated position\n  const rotation = this.getRotation();\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  const resolution = this.getResolution();\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  this.setCenter([centerX, centerY]);\n};\n\n\n/**\n * @return {boolean} Is defined.\n */\nView.prototype.isDef = function() {\n  return !!this.getCenter() && this.getResolution() !== undefined;\n};\n\n\n/**\n * Rotate the view around a given coordinate.\n * @param {number} rotation New rotation value for the view.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor The rotation center.\n * @api\n */\nView.prototype.rotate = function(rotation, opt_anchor) {\n  if (opt_anchor !== undefined) {\n    const center = this.calculateCenterRotate(rotation, opt_anchor);\n    this.setCenter(center);\n  }\n  this.setRotation(rotation);\n};\n\n\n/**\n * Set the center of the current view.\n * @param {module:ol/coordinate~Coordinate|undefined} center The center of the view.\n * @observable\n * @api\n */\nView.prototype.setCenter = function(center) {\n  this.set(ViewProperty.CENTER, center);\n  if (this.getAnimating()) {\n    this.cancelAnimations();\n  }\n};\n\n\n/**\n * @param {module:ol/ViewHint} hint Hint.\n * @param {number} delta Delta.\n * @return {number} New value.\n */\nView.prototype.setHint = function(hint, delta) {\n  this.hints_[hint] += delta;\n  this.changed();\n  return this.hints_[hint];\n};\n\n\n/**\n * Set the resolution for this view.\n * @param {number|undefined} resolution The resolution of the view.\n * @observable\n * @api\n */\nView.prototype.setResolution = function(resolution) {\n  this.set(ViewProperty.RESOLUTION, resolution);\n  if (this.getAnimating()) {\n    this.cancelAnimations();\n  }\n};\n\n\n/**\n * Set the rotation for this view.\n * @param {number} rotation The rotation of the view in radians.\n * @observable\n * @api\n */\nView.prototype.setRotation = function(rotation) {\n  this.set(ViewProperty.ROTATION, rotation);\n  if (this.getAnimating()) {\n    this.cancelAnimations();\n  }\n};\n\n\n/**\n * Zoom to a specific zoom level.\n * @param {number} zoom Zoom level.\n * @api\n */\nView.prototype.setZoom = function(zoom) {\n  this.setResolution(this.getResolutionForZoom(zoom));\n};\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {module:ol/centerconstraint~Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    return createExtent(options.extent);\n  } else {\n    return centerNone;\n  }\n}\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {{constraint: module:ol/resolutionconstraint~Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom = options.minZoom !== undefined ?\n    options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = createSnapToResolutions(\n      resolutions);\n  } else {\n    // calculate the default min and max resolution\n    const projection = createProjection(options.projection, 'EPSG:3857');\n    const extent = projection.getExtent();\n    const size = !extent ?\n      // use an extent that can fit the whole world if need be\n      360 * METERS_PER_UNIT[Units.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(getWidth(extent), getHeight(extent));\n\n    const defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution = defaultMaxResolution / Math.pow(\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    resolutionConstraint = createSnapToPower(\n      zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n}\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {module:ol/View~Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\n */\n\n\n/**\n * @param {Array.<number>} resolutions Resolutions.\n * @return {module:ol/resolutionconstraint~Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        let z = linearFindNearest(resolutions, resolution, direction);\n        z = clamp(z + delta, 0, resolutions.length - 1);\n        const index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          const power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {module:ol/resolutionconstraint~Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        const offset = -direction / 2 + 0.5;\n        const oldLevel = Math.floor(\n          Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        let newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n}\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array.<Array.<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  const result = [];\n\n  // Keep text upright\n  const reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  const numChars = text.length;\n\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let segmentM = 0;\n  let segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  let chunk = '';\n  let chunkLength = 0;\n  let data, index, previousAngle;\n  for (let i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    const char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    const charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    const charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    const segmentPos = charM - segmentM;\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    const interpolate = segmentPos / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n","/**\n * @module ol/render/canvas/Replay\n */\nimport {getUid, inherits} from '../../util.js';\nimport {UNDEFINED} from '../../functions.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship, createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, extendCoordinate, intersects} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {isEmpty} from '../../obj.js';\nimport VectorContext from '../VectorContext.js';\nimport {drawImage, resetTransform, defaultPadding, defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/VectorContext}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasReplay = function(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  VectorContext.call(this);\n\n  /**\n   * @type {?}\n   */\n  this.declutterTree = declutterTree;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.tolerance = tolerance;\n\n  /**\n   * @protected\n   * @const\n   * @type {module:ol/extent~Extent}\n   */\n  this.maxExtent = maxExtent;\n\n  /**\n   * @protected\n   * @type {boolean}\n   */\n  this.overlaps = overlaps;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.pixelRatio = pixelRatio;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxLineWidth = 0;\n\n  /**\n   * @protected\n   * @const\n   * @type {number}\n   */\n  this.resolution = resolution;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.alignFill_;\n\n  /**\n   * @private\n   * @type {Array.<*>}\n   */\n  this.beginGeometryInstruction1_ = null;\n\n  /**\n   * @private\n   * @type {Array.<*>}\n   */\n  this.beginGeometryInstruction2_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.bufferedMaxExtent_ = null;\n\n  /**\n   * @protected\n   * @type {Array.<*>}\n   */\n  this.instructions = [];\n\n  /**\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.coordinates = [];\n\n  /**\n   * @private\n   * @type {!Object.<number,module:ol/coordinate~Coordinate|Array.<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>>}\n   */\n  this.coordinateCache_ = {};\n\n  /**\n   * @private\n   * @type {!module:ol/transform~Transform}\n   */\n  this.renderedTransform_ = createTransform();\n\n  /**\n   * @protected\n   * @type {Array.<*>}\n   */\n  this.hitDetectionInstructions = [];\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.pixelCoordinates_ = null;\n\n  /**\n   * @protected\n   * @type {module:ol/render/canvas~FillStrokeState}\n   */\n  this.state = /** @type {module:ol/render/canvas~FillStrokeState} */ ({});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.viewRotation_ = 0;\n\n};\n\ninherits(CanvasReplay, VectorContext);\n\n\n/**\n * @type {module:ol/extent~Extent}\n */\nconst tmpExtent = createEmpty();\n\n\n/**\n * @type {!module:ol/transform~Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/coordinate~Coordinate} p1 1st point of the background box.\n * @param {module:ol/coordinate~Coordinate} p2 2nd point of the background box.\n * @param {module:ol/coordinate~Coordinate} p3 3rd point of the background box.\n * @param {module:ol/coordinate~Coordinate} p4 4th point of the background box.\n * @param {Array.<*>} fillInstruction Fill instruction.\n * @param {Array.<*>} strokeInstruction Stroke instruction.\n */\nCanvasReplay.prototype.replayTextBackground_ = function(context, p1, p2, p3, p4,\n  fillInstruction, strokeInstruction) {\n  context.beginPath();\n  context.moveTo.apply(context, p1);\n  context.lineTo.apply(context, p2);\n  context.lineTo.apply(context, p3);\n  context.lineTo.apply(context, p4);\n  context.lineTo.apply(context, p1);\n  if (fillInstruction) {\n    this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n    this.fill_(context);\n  }\n  if (strokeInstruction) {\n    this.setStrokeStyle_(context, /** @type {Array.<*>} */ (strokeInstruction));\n    context.stroke();\n  }\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} anchorX Anchor X.\n * @param {number} anchorY Anchor Y.\n * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n * @param {number} height Height.\n * @param {number} opacity Opacity.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} rotation Rotation.\n * @param {number} scale Scale.\n * @param {boolean} snapToPixel Snap to pixel.\n * @param {number} width Width.\n * @param {Array.<number>} padding Padding.\n * @param {Array.<*>} fillInstruction Fill instruction.\n * @param {Array.<*>} strokeInstruction Stroke instruction.\n */\nCanvasReplay.prototype.replayImage_ = function(context, x, y, image,\n  anchorX, anchorY, declutterGroup, height, opacity, originX, originY,\n  rotation, scale, snapToPixel, width, padding, fillInstruction, strokeInstruction) {\n  const fillStroke = fillInstruction || strokeInstruction;\n  anchorX *= scale;\n  anchorY *= scale;\n  x -= anchorX;\n  y -= anchorY;\n\n  const w = (width + originX > image.width) ? image.width - originX : width;\n  const h = (height + originY > image.height) ? image.height - originY : height;\n  const boxW = padding[3] + w * scale + padding[1];\n  const boxH = padding[0] + h * scale + padding[2];\n  const boxX = x - padding[3];\n  const boxY = y - padding[0];\n\n  /** @type {module:ol/coordinate~Coordinate} */\n  let p1;\n  /** @type {module:ol/coordinate~Coordinate} */\n  let p2;\n  /** @type {module:ol/coordinate~Coordinate} */\n  let p3;\n  /** @type {module:ol/coordinate~Coordinate} */\n  let p4;\n  if (fillStroke || rotation !== 0) {\n    p1 = [boxX, boxY];\n    p2 = [boxX + boxW, boxY];\n    p3 = [boxX + boxW, boxY + boxH];\n    p4 = [boxX, boxY + boxH];\n  }\n\n  let transform = null;\n  if (rotation !== 0) {\n    const centerX = x + anchorX;\n    const centerY = y + anchorY;\n    transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n    createOrUpdateEmpty(tmpExtent);\n    extendCoordinate(tmpExtent, applyTransform(tmpTransform, p1));\n    extendCoordinate(tmpExtent, applyTransform(tmpTransform, p2));\n    extendCoordinate(tmpExtent, applyTransform(tmpTransform, p3));\n    extendCoordinate(tmpExtent, applyTransform(tmpTransform, p4));\n  } else {\n    createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n  }\n  const canvas = context.canvas;\n  const strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n  const intersects =\n      tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n      tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n  if (snapToPixel) {\n    x = Math.round(x);\n    y = Math.round(y);\n  }\n\n  if (declutterGroup) {\n    if (!intersects && declutterGroup[4] == 1) {\n      return;\n    }\n    extend(declutterGroup, tmpExtent);\n    const declutterArgs = intersects ?\n      [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n      null;\n    if (declutterArgs && fillStroke) {\n      declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n    }\n    declutterGroup.push(declutterArgs);\n  } else if (intersects) {\n    if (fillStroke) {\n      this.replayTextBackground_(context, p1, p2, p3, p4,\n        /** @type {Array.<*>} */ (fillInstruction),\n        /** @type {Array.<*>} */ (strokeInstruction));\n    }\n    drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n  }\n};\n\n\n/**\n * @protected\n * @param {Array.<number>} dashArray Dash array.\n * @return {Array.<number>} Dash array with pixel ratio applied\n */\nCanvasReplay.prototype.applyPixelRatio = function(dashArray) {\n  const pixelRatio = this.pixelRatio;\n  return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n    return dash * pixelRatio;\n  });\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {boolean} closed Last input coordinate equals first.\n * @param {boolean} skipFirst Skip first coordinate.\n * @protected\n * @return {number} My end.\n */\nCanvasReplay.prototype.appendFlatCoordinates = function(flatCoordinates, offset, end, stride, closed, skipFirst) {\n\n  let myEnd = this.coordinates.length;\n  const extent = this.getBufferedMaxExtent();\n  if (skipFirst) {\n    offset += stride;\n  }\n  const lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const nextCoord = [NaN, NaN];\n  let skipped = true;\n\n  let i, lastRel, nextRel;\n  for (i = offset + stride; i < end; i += stride) {\n    nextCoord[0] = flatCoordinates[i];\n    nextCoord[1] = flatCoordinates[i + 1];\n    nextRel = coordinateRelationship(extent, nextCoord);\n    if (nextRel !== lastRel) {\n      if (skipped) {\n        this.coordinates[myEnd++] = lastCoord[0];\n        this.coordinates[myEnd++] = lastCoord[1];\n      }\n      this.coordinates[myEnd++] = nextCoord[0];\n      this.coordinates[myEnd++] = nextCoord[1];\n      skipped = false;\n    } else if (nextRel === Relationship.INTERSECTING) {\n      this.coordinates[myEnd++] = nextCoord[0];\n      this.coordinates[myEnd++] = nextCoord[1];\n      skipped = false;\n    } else {\n      skipped = true;\n    }\n    lastCoord[0] = nextCoord[0];\n    lastCoord[1] = nextCoord[1];\n    lastRel = nextRel;\n  }\n\n  // Last coordinate equals first or only one point to append:\n  if ((closed && skipped) || i === offset + stride) {\n    this.coordinates[myEnd++] = lastCoord[0];\n    this.coordinates[myEnd++] = lastCoord[1];\n  }\n  return myEnd;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<number>} replayEnds Replay ends.\n * @return {number} Offset.\n */\nCanvasReplay.prototype.drawCustomCoordinates_ = function(flatCoordinates, offset, ends, stride, replayEnds) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const replayEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n    replayEnds.push(replayEnd);\n    offset = end;\n  }\n  return offset;\n};\n\n\n/**\n * @inheritDoc.\n */\nCanvasReplay.prototype.drawCustom = function(geometry, feature, renderer) {\n  this.beginGeometry(geometry, feature);\n  const type = geometry.getType();\n  const stride = geometry.getStride();\n  const replayBegin = this.coordinates.length;\n  let flatCoordinates, replayEnd, replayEnds, replayEndss;\n  let offset;\n  if (type == GeometryType.MULTI_POLYGON) {\n    geometry = /** @type {module:ol/geom/MultiPolygon} */ (geometry);\n    flatCoordinates = geometry.getOrientedFlatCoordinates();\n    replayEndss = [];\n    const endss = geometry.getEndss();\n    offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const myEnds = [];\n      offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n      replayEndss.push(myEnds);\n    }\n    this.instructions.push([CanvasInstruction.CUSTOM,\n      replayBegin, replayEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n  } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n    replayEnds = [];\n    flatCoordinates = (type == GeometryType.POLYGON) ?\n      /** @type {module:ol/geom/Polygon} */ (geometry).getOrientedFlatCoordinates() :\n      geometry.getFlatCoordinates();\n    offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n      /** @type {module:ol/geom/Polygon|module:ol/geom/MultiLineString} */ (geometry).getEnds(),\n      stride, replayEnds);\n    this.instructions.push([CanvasInstruction.CUSTOM,\n      replayBegin, replayEnds, geometry, renderer, inflateCoordinatesArray]);\n  } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n    flatCoordinates = geometry.getFlatCoordinates();\n    replayEnd = this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    this.instructions.push([CanvasInstruction.CUSTOM,\n      replayBegin, replayEnd, geometry, renderer, inflateCoordinates]);\n  } else if (type == GeometryType.POINT) {\n    flatCoordinates = geometry.getFlatCoordinates();\n    this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    replayEnd = this.coordinates.length;\n    this.instructions.push([CanvasInstruction.CUSTOM,\n      replayBegin, replayEnd, geometry, renderer]);\n  }\n  this.endGeometry(geometry, feature);\n};\n\n\n/**\n * @protected\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nCanvasReplay.prototype.beginGeometry = function(geometry, feature) {\n  this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n  this.instructions.push(this.beginGeometryInstruction1_);\n  this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n  this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n};\n\n\n/**\n * @private\n * @param {CanvasRenderingContext2D} context Context.\n */\nCanvasReplay.prototype.fill_ = function(context) {\n  if (this.alignFill_) {\n    const origin = applyTransform(this.renderedTransform_, [0, 0]);\n    const repeatSize = 512 * this.pixelRatio;\n    context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n    context.rotate(this.viewRotation_);\n  }\n  context.fill();\n  if (this.alignFill_) {\n    context.setTransform.apply(context, resetTransform);\n  }\n};\n\n\n/**\n * @private\n * @param {CanvasRenderingContext2D} context Context.\n * @param {Array.<*>} instruction Instruction.\n */\nCanvasReplay.prototype.setStrokeStyle_ = function(context, instruction) {\n  context.strokeStyle = /** @type {module:ol/colorlike~ColorLike} */ (instruction[1]);\n  context.lineWidth = /** @type {number} */ (instruction[2]);\n  context.lineCap = /** @type {string} */ (instruction[3]);\n  context.lineJoin = /** @type {string} */ (instruction[4]);\n  context.miterLimit = /** @type {number} */ (instruction[5]);\n  if (CANVAS_LINE_DASH) {\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array.<number>} */ (instruction[6]));\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nCanvasReplay.prototype.renderDeclutter_ = function(declutterGroup, feature) {\n  if (declutterGroup && declutterGroup.length > 5) {\n    const groupCount = declutterGroup[4];\n    if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n      /** @type {module:ol/structs/RBush~Entry} */\n      const box = {\n        minX: /** @type {number} */ (declutterGroup[0]),\n        minY: /** @type {number} */ (declutterGroup[1]),\n        maxX: /** @type {number} */ (declutterGroup[2]),\n        maxY: /** @type {number} */ (declutterGroup[3]),\n        value: feature\n      };\n      if (!this.declutterTree.collides(box)) {\n        this.declutterTree.insert(box);\n        for (let j = 5, jj = declutterGroup.length; j < jj; ++j) {\n          const declutterData = /** @type {Array} */ (declutterGroup[j]);\n          if (declutterData) {\n            if (declutterData.length > 11) {\n              this.replayTextBackground_(declutterData[0],\n                declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                declutterData[11], declutterData[12]);\n            }\n            drawImage.apply(undefined, declutterData);\n          }\n        }\n      }\n      declutterGroup.length = 5;\n      createOrUpdateEmpty(declutterGroup);\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *     to skip.\n * @param {Array.<*>} instructions Instructions array.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined}\n *     featureCallback Feature callback.\n * @param {module:ol/extent~Extent=} opt_hitExtent Only check features that intersect this\n *     extent.\n * @return {T|undefined} Callback result.\n * @template T\n */\nCanvasReplay.prototype.replay_ = function(\n  context, transform, skippedFeaturesHash,\n  instructions, featureCallback, opt_hitExtent) {\n  /** @type {Array.<number>} */\n  let pixelCoordinates;\n  if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n    pixelCoordinates = this.pixelCoordinates_;\n  } else {\n    if (!this.pixelCoordinates_) {\n      this.pixelCoordinates_ = [];\n    }\n    pixelCoordinates = transform2D(\n      this.coordinates, 0, this.coordinates.length, 2,\n      transform, this.pixelCoordinates_);\n    transformSetFromArray(this.renderedTransform_, transform);\n  }\n  const skipFeatures = !isEmpty(skippedFeaturesHash);\n  let i = 0; // instruction index\n  const ii = instructions.length; // end of instructions\n  let d = 0; // data index\n  let dd; // end of per-instruction data\n  let anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\n  let pendingFill = 0;\n  let pendingStroke = 0;\n  let lastFillInstruction = null;\n  let lastStrokeInstruction = null;\n  const coordinateCache = this.coordinateCache_;\n  const viewRotation = this.viewRotation_;\n\n  const state = /** @type {module:ol/render~State} */ ({\n    context: context,\n    pixelRatio: this.pixelRatio,\n    resolution: this.resolution,\n    rotation: viewRotation\n  });\n\n  // When the batch size gets too big, performance decreases. 200 is a good\n  // balance between batch size and number of fill/stroke instructions.\n  const batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n  let /** @type {module:ol/Feature|module:ol/render/Feature} */ feature;\n  let x, y;\n  while (i < ii) {\n    const instruction = instructions[i];\n    const type = /** @type {module:ol/render/canvas/Instruction} */ (instruction[0]);\n    switch (type) {\n      case CanvasInstruction.BEGIN_GEOMETRY:\n        feature = /** @type {module:ol/Feature|module:ol/render/Feature} */ (instruction[1]);\n        if ((skipFeatures &&\n            skippedFeaturesHash[getUid(feature).toString()]) ||\n            !feature.getGeometry()) {\n          i = /** @type {number} */ (instruction[2]);\n        } else if (opt_hitExtent !== undefined && !intersects(\n          opt_hitExtent, feature.getGeometry().getExtent())) {\n          i = /** @type {number} */ (instruction[2]) + 1;\n        } else {\n          ++i;\n        }\n        break;\n      case CanvasInstruction.BEGIN_PATH:\n        if (pendingFill > batchSize) {\n          this.fill_(context);\n          pendingFill = 0;\n        }\n        if (pendingStroke > batchSize) {\n          context.stroke();\n          pendingStroke = 0;\n        }\n        if (!pendingFill && !pendingStroke) {\n          context.beginPath();\n          prevX = prevY = NaN;\n        }\n        ++i;\n        break;\n      case CanvasInstruction.CIRCLE:\n        d = /** @type {number} */ (instruction[1]);\n        const x1 = pixelCoordinates[d];\n        const y1 = pixelCoordinates[d + 1];\n        const x2 = pixelCoordinates[d + 2];\n        const y2 = pixelCoordinates[d + 3];\n        const dx = x2 - x1;\n        const dy = y2 - y1;\n        const r = Math.sqrt(dx * dx + dy * dy);\n        context.moveTo(x1 + r, y1);\n        context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n        ++i;\n        break;\n      case CanvasInstruction.CLOSE_PATH:\n        context.closePath();\n        ++i;\n        break;\n      case CanvasInstruction.CUSTOM:\n        d = /** @type {number} */ (instruction[1]);\n        dd = instruction[2];\n        const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (instruction[3]);\n        const renderer = instruction[4];\n        const fn = instruction.length == 6 ? instruction[5] : undefined;\n        state.geometry = geometry;\n        state.feature = feature;\n        if (!(i in coordinateCache)) {\n          coordinateCache[i] = [];\n        }\n        const coords = coordinateCache[i];\n        if (fn) {\n          fn(pixelCoordinates, d, dd, 2, coords);\n        } else {\n          coords[0] = pixelCoordinates[d];\n          coords[1] = pixelCoordinates[d + 1];\n          coords.length = 2;\n        }\n        renderer(coords, state);\n        ++i;\n        break;\n      case CanvasInstruction.DRAW_IMAGE:\n        d = /** @type {number} */ (instruction[1]);\n        dd = /** @type {number} */ (instruction[2]);\n        image =  /** @type {HTMLCanvasElement|HTMLVideoElement|Image} */\n            (instruction[3]);\n        // Remaining arguments in DRAW_IMAGE are in alphabetical order\n        anchorX = /** @type {number} */ (instruction[4]);\n        anchorY = /** @type {number} */ (instruction[5]);\n        declutterGroup = featureCallback ? null : /** @type {module:ol/render/canvas~DeclutterGroup} */ (instruction[6]);\n        const height = /** @type {number} */ (instruction[7]);\n        const opacity = /** @type {number} */ (instruction[8]);\n        const originX = /** @type {number} */ (instruction[9]);\n        const originY = /** @type {number} */ (instruction[10]);\n        const rotateWithView = /** @type {boolean} */ (instruction[11]);\n        let rotation = /** @type {number} */ (instruction[12]);\n        const scale = /** @type {number} */ (instruction[13]);\n        const snapToPixel = /** @type {boolean} */ (instruction[14]);\n        const width = /** @type {number} */ (instruction[15]);\n\n        let padding, backgroundFill, backgroundStroke;\n        if (instruction.length > 16) {\n          padding = /** @type {Array.<number>} */ (instruction[16]);\n          backgroundFill = /** @type {boolean} */ (instruction[17]);\n          backgroundStroke = /** @type {boolean} */ (instruction[18]);\n        } else {\n          padding = defaultPadding;\n          backgroundFill = backgroundStroke = false;\n        }\n\n        if (rotateWithView) {\n          rotation += viewRotation;\n        }\n        for (; d < dd; d += 2) {\n          this.replayImage_(context,\n            pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n            declutterGroup, height, opacity, originX, originY, rotation, scale,\n            snapToPixel, width, padding,\n            backgroundFill ? /** @type {Array.<*>} */ (lastFillInstruction) : null,\n            backgroundStroke ? /** @type {Array.<*>} */ (lastStrokeInstruction) : null);\n        }\n        this.renderDeclutter_(declutterGroup, feature);\n        ++i;\n        break;\n      case CanvasInstruction.DRAW_CHARS:\n        const begin = /** @type {number} */ (instruction[1]);\n        const end = /** @type {number} */ (instruction[2]);\n        const baseline = /** @type {number} */ (instruction[3]);\n        declutterGroup = featureCallback ? null : /** @type {module:ol/render/canvas~DeclutterGroup} */ (instruction[4]);\n        const overflow = /** @type {number} */ (instruction[5]);\n        const fillKey = /** @type {string} */ (instruction[6]);\n        const maxAngle = /** @type {number} */ (instruction[7]);\n        const measure = /** @type {function(string):number} */ (instruction[8]);\n        const offsetY = /** @type {number} */ (instruction[9]);\n        const strokeKey = /** @type {string} */ (instruction[10]);\n        const strokeWidth =  /** @type {number} */ (instruction[11]);\n        const text = /** @type {string} */ (instruction[12]);\n        const textKey = /** @type {string} */ (instruction[13]);\n        const textScale = /** @type {number} */ (instruction[14]);\n\n        const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n        const textLength = measure(text);\n        if (overflow || textLength <= pathLength) {\n          const textAlign = /** @type {module:ol~render} */ (this).textStates[textKey].textAlign;\n          const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n          const parts = drawTextOnPath(\n            pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\n          if (parts) {\n            let c, cc, chars, label, part;\n            if (strokeKey) {\n              for (c = 0, cc = parts.length; c < cc; ++c) {\n                part = parts[c]; // x, y, anchorX, rotation, chunk\n                chars = /** @type {string} */ (part[4]);\n                label = /** @type {module:ol~render} */ (this).getImage(chars, textKey, '', strokeKey);\n                anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                this.replayImage_(context,\n                  /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                  anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                  /** @type {number} */ (part[3]), textScale, false, label.width,\n                  defaultPadding, null, null);\n              }\n            }\n            if (fillKey) {\n              for (c = 0, cc = parts.length; c < cc; ++c) {\n                part = parts[c]; // x, y, anchorX, rotation, chunk\n                chars = /** @type {string} */ (part[4]);\n                label = /** @type {module:ol~render} */ (this).getImage(chars, textKey, fillKey, '');\n                anchorX = /** @type {number} */ (part[2]);\n                anchorY = baseline * label.height - offsetY;\n                this.replayImage_(context,\n                  /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                  anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                  /** @type {number} */ (part[3]), textScale, false, label.width,\n                  defaultPadding, null, null);\n              }\n            }\n          }\n        }\n        this.renderDeclutter_(declutterGroup, feature);\n        ++i;\n        break;\n      case CanvasInstruction.END_GEOMETRY:\n        if (featureCallback !== undefined) {\n          feature = /** @type {module:ol/Feature|module:ol/render/Feature} */ (instruction[1]);\n          const result = featureCallback(feature);\n          if (result) {\n            return result;\n          }\n        }\n        ++i;\n        break;\n      case CanvasInstruction.FILL:\n        if (batchSize) {\n          pendingFill++;\n        } else {\n          this.fill_(context);\n        }\n        ++i;\n        break;\n      case CanvasInstruction.MOVE_TO_LINE_TO:\n        d = /** @type {number} */ (instruction[1]);\n        dd = /** @type {number} */ (instruction[2]);\n        x = pixelCoordinates[d];\n        y = pixelCoordinates[d + 1];\n        roundX = (x + 0.5) | 0;\n        roundY = (y + 0.5) | 0;\n        if (roundX !== prevX || roundY !== prevY) {\n          context.moveTo(x, y);\n          prevX = roundX;\n          prevY = roundY;\n        }\n        for (d += 2; d < dd; d += 2) {\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n            context.lineTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n        }\n        ++i;\n        break;\n      case CanvasInstruction.SET_FILL_STYLE:\n        lastFillInstruction = instruction;\n        this.alignFill_ = instruction[2];\n\n        if (pendingFill) {\n          this.fill_(context);\n          pendingFill = 0;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n        }\n\n        context.fillStyle = /** @type {module:ol/colorlike~ColorLike} */ (instruction[1]);\n        ++i;\n        break;\n      case CanvasInstruction.SET_STROKE_STYLE:\n        lastStrokeInstruction = instruction;\n        if (pendingStroke) {\n          context.stroke();\n          pendingStroke = 0;\n        }\n        this.setStrokeStyle_(context, /** @type {Array.<*>} */ (instruction));\n        ++i;\n        break;\n      case CanvasInstruction.STROKE:\n        if (batchSize) {\n          pendingStroke++;\n        } else {\n          context.stroke();\n        }\n        ++i;\n        break;\n      default:\n        ++i; // consume the instruction anyway, to avoid an infinite loop\n        break;\n    }\n  }\n  if (pendingFill) {\n    this.fill_(context);\n  }\n  if (pendingStroke) {\n    context.stroke();\n  }\n  return undefined;\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *     to skip.\n */\nCanvasReplay.prototype.replay = function(\n  context, transform, viewRotation, skippedFeaturesHash) {\n  this.viewRotation_ = viewRotation;\n  this.replay_(context, transform,\n    skippedFeaturesHash, this.instructions, undefined, undefined);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *     to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T=} opt_featureCallback\n *     Feature callback.\n * @param {module:ol/extent~Extent=} opt_hitExtent Only check features that intersect this\n *     extent.\n * @return {T|undefined} Callback result.\n * @template T\n */\nCanvasReplay.prototype.replayHitDetection = function(\n  context, transform, viewRotation, skippedFeaturesHash,\n  opt_featureCallback, opt_hitExtent) {\n  this.viewRotation_ = viewRotation;\n  return this.replay_(context, transform, skippedFeaturesHash,\n    this.hitDetectionInstructions, opt_featureCallback, opt_hitExtent);\n};\n\n\n/**\n * Reverse the hit detection instructions.\n */\nCanvasReplay.prototype.reverseHitDetectionInstructions = function() {\n  const hitDetectionInstructions = this.hitDetectionInstructions;\n  // step 1 - reverse array\n  hitDetectionInstructions.reverse();\n  // step 2 - reverse instructions within geometry blocks\n  let i;\n  const n = hitDetectionInstructions.length;\n  let instruction;\n  let type;\n  let begin = -1;\n  for (i = 0; i < n; ++i) {\n    instruction = hitDetectionInstructions[i];\n    type = /** @type {module:ol/render/canvas/Instruction} */ (instruction[0]);\n    if (type == CanvasInstruction.END_GEOMETRY) {\n      begin = i;\n    } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n      instruction[2] = i;\n      reverseSubArray(this.hitDetectionInstructions, begin, i);\n      begin = -1;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasReplay.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  const state = this.state;\n  if (fillStyle) {\n    const fillStyleColor = fillStyle.getColor();\n    state.fillStyle = asColorLike(fillStyleColor ?\n      fillStyleColor : defaultFillStyle);\n  } else {\n    state.fillStyle = undefined;\n  }\n  if (strokeStyle) {\n    const strokeStyleColor = strokeStyle.getColor();\n    state.strokeStyle = asColorLike(strokeStyleColor ?\n      strokeStyleColor : defaultStrokeStyle);\n    const strokeStyleLineCap = strokeStyle.getLineCap();\n    state.lineCap = strokeStyleLineCap !== undefined ?\n      strokeStyleLineCap : defaultLineCap;\n    const strokeStyleLineDash = strokeStyle.getLineDash();\n    state.lineDash = strokeStyleLineDash ?\n      strokeStyleLineDash.slice() : defaultLineDash;\n    const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n    state.lineDashOffset = strokeStyleLineDashOffset ?\n      strokeStyleLineDashOffset : defaultLineDashOffset;\n    const strokeStyleLineJoin = strokeStyle.getLineJoin();\n    state.lineJoin = strokeStyleLineJoin !== undefined ?\n      strokeStyleLineJoin : defaultLineJoin;\n    const strokeStyleWidth = strokeStyle.getWidth();\n    state.lineWidth = strokeStyleWidth !== undefined ?\n      strokeStyleWidth : defaultLineWidth;\n    const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n    state.miterLimit = strokeStyleMiterLimit !== undefined ?\n      strokeStyleMiterLimit : defaultMiterLimit;\n\n    if (state.lineWidth > this.maxLineWidth) {\n      this.maxLineWidth = state.lineWidth;\n      // invalidate the buffered max extent cache\n      this.bufferedMaxExtent_ = null;\n    }\n  } else {\n    state.strokeStyle = undefined;\n    state.lineCap = undefined;\n    state.lineDash = null;\n    state.lineDashOffset = undefined;\n    state.lineJoin = undefined;\n    state.lineWidth = undefined;\n    state.miterLimit = undefined;\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @return {Array.<*>} Fill instruction.\n */\nCanvasReplay.prototype.createFill = function(state, geometry) {\n  const fillStyle = state.fillStyle;\n  const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n  if (typeof fillStyle !== 'string') {\n    // Fill is a pattern or gradient - align it!\n    fillInstruction.push(true);\n  }\n  return fillInstruction;\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n */\nCanvasReplay.prototype.applyStroke = function(state) {\n  this.instructions.push(this.createStroke(state));\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n * @return {Array.<*>} Stroke instruction.\n */\nCanvasReplay.prototype.createStroke = function(state) {\n  return [\n    CanvasInstruction.SET_STROKE_STYLE,\n    state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n    state.lineJoin, state.miterLimit,\n    this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n  ];\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n * @param {function(this:module:ol/render/canvas/Replay, module:ol/render/canvas~FillStrokeState, (module:ol/geom/Geometry|module:ol/render/Feature)):Array.<*>} createFill Create fill.\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n */\nCanvasReplay.prototype.updateFillStyle = function(state, createFill, geometry) {\n  const fillStyle = state.fillStyle;\n  if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n    if (fillStyle !== undefined) {\n      this.instructions.push(createFill.call(this, state, geometry));\n    }\n    state.currentFillStyle = fillStyle;\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n * @param {function(this:module:ol/render/canvas/Replay, module:ol/render/canvas~FillStrokeState)} applyStroke Apply stroke.\n */\nCanvasReplay.prototype.updateStrokeStyle = function(state, applyStroke) {\n  const strokeStyle = state.strokeStyle;\n  const lineCap = state.lineCap;\n  const lineDash = state.lineDash;\n  const lineDashOffset = state.lineDashOffset;\n  const lineJoin = state.lineJoin;\n  const lineWidth = state.lineWidth;\n  const miterLimit = state.miterLimit;\n  if (state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit) {\n    if (strokeStyle !== undefined) {\n      applyStroke.call(this, state);\n    }\n    state.currentStrokeStyle = strokeStyle;\n    state.currentLineCap = lineCap;\n    state.currentLineDash = lineDash;\n    state.currentLineDashOffset = lineDashOffset;\n    state.currentLineJoin = lineJoin;\n    state.currentLineWidth = lineWidth;\n    state.currentMiterLimit = miterLimit;\n  }\n};\n\n\n/**\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nCanvasReplay.prototype.endGeometry = function(geometry, feature) {\n  this.beginGeometryInstruction1_[2] = this.instructions.length;\n  this.beginGeometryInstruction1_ = null;\n  this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n  this.beginGeometryInstruction2_ = null;\n  const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n  this.instructions.push(endGeometryInstruction);\n  this.hitDetectionInstructions.push(endGeometryInstruction);\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nCanvasReplay.prototype.finish = UNDEFINED;\n\n\n/**\n * Get the buffered rendering extent.  Rendering will be clipped to the extent\n * provided to the constructor.  To account for symbolizers that may intersect\n * this extent, we calculate a buffered extent (e.g. based on stroke width).\n * @return {module:ol/extent~Extent} The buffered rendering extent.\n * @protected\n */\nCanvasReplay.prototype.getBufferedMaxExtent = function() {\n  if (!this.bufferedMaxExtent_) {\n    this.bufferedMaxExtent_ = clone(this.maxExtent);\n    if (this.maxLineWidth > 0) {\n      const width = this.resolution * (this.maxLineWidth + 1) / 2;\n      buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n    }\n  }\n  return this.bufferedMaxExtent_;\n};\nexport default CanvasReplay;\n","/**\n * @module ol/render/canvas/ImageReplay\n */\nimport {inherits} from '../../util.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/canvas/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasImageReplay = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  CanvasReplay.call(this,\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n  /**\n   * @private\n   * @type {module:ol/render/canvas~DeclutterGroup}\n   */\n  this.declutterGroup_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|HTMLVideoElement|Image}\n   */\n  this.hitDetectionImage_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|HTMLVideoElement|Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.anchorX_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.anchorY_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.height_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.opacity_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.originX_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.originY_ = undefined;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = undefined;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.snapToPixel_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = undefined;\n\n};\n\ninherits(CanvasImageReplay, CanvasReplay);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n * @return {number} My end.\n */\nCanvasImageReplay.prototype.drawCoordinates_ = function(flatCoordinates, offset, end, stride) {\n  return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageReplay.prototype.drawPoint = function(pointGeometry, feature) {\n  if (!this.image_) {\n    return;\n  }\n  this.beginGeometry(pointGeometry, feature);\n  const flatCoordinates = pointGeometry.getFlatCoordinates();\n  const stride = pointGeometry.getStride();\n  const myBegin = this.coordinates.length;\n  const myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n  this.instructions.push([\n    CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_ * this.pixelRatio, this.snapToPixel_, this.width_\n  ]);\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_, this.snapToPixel_, this.width_\n  ]);\n  this.endGeometry(pointGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageReplay.prototype.drawMultiPoint = function(multiPointGeometry, feature) {\n  if (!this.image_) {\n    return;\n  }\n  this.beginGeometry(multiPointGeometry, feature);\n  const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n  const stride = multiPointGeometry.getStride();\n  const myBegin = this.coordinates.length;\n  const myEnd = this.drawCoordinates_(\n    flatCoordinates, 0, flatCoordinates.length, stride);\n  this.instructions.push([\n    CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_ * this.pixelRatio, this.snapToPixel_, this.width_\n  ]);\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_, this.snapToPixel_, this.width_\n  ]);\n  this.endGeometry(multiPointGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageReplay.prototype.finish = function() {\n  this.reverseHitDetectionInstructions();\n  // FIXME this doesn't really protect us against further calls to draw*Geometry\n  this.anchorX_ = undefined;\n  this.anchorY_ = undefined;\n  this.hitDetectionImage_ = null;\n  this.image_ = null;\n  this.height_ = undefined;\n  this.scale_ = undefined;\n  this.opacity_ = undefined;\n  this.originX_ = undefined;\n  this.originY_ = undefined;\n  this.rotateWithView_ = undefined;\n  this.rotation_ = undefined;\n  this.snapToPixel_ = undefined;\n  this.width_ = undefined;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageReplay.prototype.setImageStyle = function(imageStyle, declutterGroup) {\n  const anchor = imageStyle.getAnchor();\n  const size = imageStyle.getSize();\n  const hitDetectionImage = imageStyle.getHitDetectionImage(1);\n  const image = imageStyle.getImage(1);\n  const origin = imageStyle.getOrigin();\n  this.anchorX_ = anchor[0];\n  this.anchorY_ = anchor[1];\n  this.declutterGroup_ = /** @type {module:ol/render/canvas~DeclutterGroup} */ (declutterGroup);\n  this.hitDetectionImage_ = hitDetectionImage;\n  this.image_ = image;\n  this.height_ = size[1];\n  this.opacity_ = imageStyle.getOpacity();\n  this.originX_ = origin[0];\n  this.originY_ = origin[1];\n  this.rotateWithView_ = imageStyle.getRotateWithView();\n  this.rotation_ = imageStyle.getRotation();\n  this.scale_ = imageStyle.getScale();\n  this.snapToPixel_ = imageStyle.getSnapToPixel();\n  this.width_ = size[0];\n};\nexport default CanvasImageReplay;\n","/**\n * @module ol/render/canvas/LineStringReplay\n */\nimport {inherits} from '../../util.js';\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/canvas/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasLineStringReplay = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  CanvasReplay.call(this,\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n};\n\ninherits(CanvasLineStringReplay, CanvasReplay);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n * @return {number} end.\n */\nCanvasLineStringReplay.prototype.drawFlatCoordinates_ = function(flatCoordinates, offset, end, stride) {\n  const myBegin = this.coordinates.length;\n  const myEnd = this.appendFlatCoordinates(\n    flatCoordinates, offset, end, stride, false, false);\n  const moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n  this.instructions.push(moveToLineToInstruction);\n  this.hitDetectionInstructions.push(moveToLineToInstruction);\n  return end;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasLineStringReplay.prototype.drawLineString = function(lineStringGeometry, feature) {\n  const state = this.state;\n  const strokeStyle = state.strokeStyle;\n  const lineWidth = state.lineWidth;\n  if (strokeStyle === undefined || lineWidth === undefined) {\n    return;\n  }\n  this.updateStrokeStyle(state, this.applyStroke);\n  this.beginGeometry(lineStringGeometry, feature);\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.SET_STROKE_STYLE,\n    state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n    state.miterLimit, state.lineDash, state.lineDashOffset\n  ], beginPathInstruction);\n  const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n  const stride = lineStringGeometry.getStride();\n  this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n  this.hitDetectionInstructions.push(strokeInstruction);\n  this.endGeometry(lineStringGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasLineStringReplay.prototype.drawMultiLineString = function(multiLineStringGeometry, feature) {\n  const state = this.state;\n  const strokeStyle = state.strokeStyle;\n  const lineWidth = state.lineWidth;\n  if (strokeStyle === undefined || lineWidth === undefined) {\n    return;\n  }\n  this.updateStrokeStyle(state, this.applyStroke);\n  this.beginGeometry(multiLineStringGeometry, feature);\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.SET_STROKE_STYLE,\n    state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n    state.miterLimit, state.lineDash, state.lineDashOffset\n  ], beginPathInstruction);\n  const ends = multiLineStringGeometry.getEnds();\n  const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n  const stride = multiLineStringGeometry.getStride();\n  let offset = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n  }\n  this.hitDetectionInstructions.push(strokeInstruction);\n  this.endGeometry(multiLineStringGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasLineStringReplay.prototype.finish = function() {\n  const state = this.state;\n  if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n    this.instructions.push(strokeInstruction);\n  }\n  this.reverseHitDetectionInstructions();\n  this.state = null;\n};\n\n\n/**\n * @inheritDoc.\n */\nCanvasLineStringReplay.prototype.applyStroke = function(state) {\n  if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n    this.instructions.push(strokeInstruction);\n    state.lastStroke = this.coordinates.length;\n  }\n  state.lastStroke = 0;\n  CanvasReplay.prototype.applyStroke.call(this, state);\n  this.instructions.push(beginPathInstruction);\n};\nexport default CanvasLineStringReplay;\n","/**\n * @module ol/render/canvas/PolygonReplay\n */\nimport {inherits} from '../../util.js';\nimport {asString} from '../../color.js';\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\n\n/**\n * @constructor\n * @extends {module:ol/render/canvas/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasPolygonReplay = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  CanvasReplay.call(this,\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n};\n\ninherits(CanvasPolygonReplay, CanvasReplay);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @private\n * @return {number} End.\n */\nCanvasPolygonReplay.prototype.drawFlatCoordinatess_ = function(flatCoordinates, offset, ends, stride) {\n  const state = this.state;\n  const fill = state.fillStyle !== undefined;\n  const stroke = state.strokeStyle != undefined;\n  const numEnds = ends.length;\n  this.instructions.push(beginPathInstruction);\n  this.hitDetectionInstructions.push(beginPathInstruction);\n  for (let i = 0; i < numEnds; ++i) {\n    const end = ends[i];\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n    const moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    if (stroke) {\n      // Performance optimization: only call closePath() when we have a stroke.\n      // Otherwise the ring is closed already (see appendFlatCoordinates above).\n      this.instructions.push(closePathInstruction);\n      this.hitDetectionInstructions.push(closePathInstruction);\n    }\n    offset = end;\n  }\n  if (fill) {\n    this.instructions.push(fillInstruction);\n    this.hitDetectionInstructions.push(fillInstruction);\n  }\n  if (stroke) {\n    this.instructions.push(strokeInstruction);\n    this.hitDetectionInstructions.push(strokeInstruction);\n  }\n  return offset;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasPolygonReplay.prototype.drawCircle = function(circleGeometry, feature) {\n  const state = this.state;\n  const fillStyle = state.fillStyle;\n  const strokeStyle = state.strokeStyle;\n  if (fillStyle === undefined && strokeStyle === undefined) {\n    return;\n  }\n  this.setFillStrokeStyles_(circleGeometry);\n  this.beginGeometry(circleGeometry, feature);\n  if (state.fillStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_FILL_STYLE,\n      asString(defaultFillStyle)\n    ]);\n  }\n  if (state.strokeStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ]);\n  }\n  const flatCoordinates = circleGeometry.getFlatCoordinates();\n  const stride = circleGeometry.getStride();\n  const myBegin = this.coordinates.length;\n  this.appendFlatCoordinates(\n    flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n  const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n  this.instructions.push(beginPathInstruction, circleInstruction);\n  this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n  this.hitDetectionInstructions.push(fillInstruction);\n  if (state.fillStyle !== undefined) {\n    this.instructions.push(fillInstruction);\n  }\n  if (state.strokeStyle !== undefined) {\n    this.instructions.push(strokeInstruction);\n    this.hitDetectionInstructions.push(strokeInstruction);\n  }\n  this.endGeometry(circleGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasPolygonReplay.prototype.drawPolygon = function(polygonGeometry, feature) {\n  const state = this.state;\n  const fillStyle = state.fillStyle;\n  const strokeStyle = state.strokeStyle;\n  if (fillStyle === undefined && strokeStyle === undefined) {\n    return;\n  }\n  this.setFillStrokeStyles_(polygonGeometry);\n  this.beginGeometry(polygonGeometry, feature);\n  if (state.fillStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_FILL_STYLE,\n      asString(defaultFillStyle)\n    ]);\n  }\n  if (state.strokeStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ]);\n  }\n  const ends = polygonGeometry.getEnds();\n  const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n  const stride = polygonGeometry.getStride();\n  this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n  this.endGeometry(polygonGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasPolygonReplay.prototype.drawMultiPolygon = function(multiPolygonGeometry, feature) {\n  const state = this.state;\n  const fillStyle = state.fillStyle;\n  const strokeStyle = state.strokeStyle;\n  if (fillStyle === undefined && strokeStyle === undefined) {\n    return;\n  }\n  this.setFillStrokeStyles_(multiPolygonGeometry);\n  this.beginGeometry(multiPolygonGeometry, feature);\n  if (state.fillStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_FILL_STYLE,\n      asString(defaultFillStyle)\n    ]);\n  }\n  if (state.strokeStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ]);\n  }\n  const endss = multiPolygonGeometry.getEndss();\n  const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n  const stride = multiPolygonGeometry.getStride();\n  let offset = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n  }\n  this.endGeometry(multiPolygonGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasPolygonReplay.prototype.finish = function() {\n  this.reverseHitDetectionInstructions();\n  this.state = null;\n  // We want to preserve topology when drawing polygons.  Polygons are\n  // simplified using quantization and point elimination. However, we might\n  // have received a mix of quantized and non-quantized geometries, so ensure\n  // that all are quantized by quantizing all coordinates in the batch.\n  const tolerance = this.tolerance;\n  if (tolerance !== 0) {\n    const coordinates = this.coordinates;\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      coordinates[i] = snap(coordinates[i], tolerance);\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n */\nCanvasPolygonReplay.prototype.setFillStrokeStyles_ = function(geometry) {\n  const state = this.state;\n  const fillStyle = state.fillStyle;\n  if (fillStyle !== undefined) {\n    this.updateFillStyle(state, this.createFill, geometry);\n  }\n  if (state.strokeStyle !== undefined) {\n    this.updateStrokeStyle(state, this.applyStroke);\n  }\n};\nexport default CanvasPolygonReplay;\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array.<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextReplay\n */\nimport {getUid, inherits} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {labelCache, measureTextWidth, defaultTextAlign, measureTextHeight, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/canvas/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasTextReplay = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  CanvasReplay.call(this,\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n  /**\n   * @private\n   * @type {module:ol/render/canvas~DeclutterGroup}\n   */\n  this.declutterGroup_;\n\n  /**\n   * @private\n   * @type {Array.<HTMLCanvasElement>}\n   */\n  this.labels_ = null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.text_ = '';\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetY_ = 0;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.textRotateWithView_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textRotation_ = 0;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~FillState}\n   */\n  this.textFillState_ = null;\n\n  /**\n   * @type {!Object.<string, module:ol/render/canvas~FillState>}\n   */\n  this.fillStates = {};\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~StrokeState}\n   */\n  this.textStrokeState_ = null;\n\n  /**\n   * @type {!Object.<string, module:ol/render/canvas~StrokeState>}\n   */\n  this.strokeStates = {};\n\n  /**\n   * @private\n   * @type {module:ol/render/canvas~TextState}\n   */\n  this.textState_ = /** @type {module:ol/render/canvas~TextState} */ ({});\n\n  /**\n   * @type {!Object.<string, module:ol/render/canvas~TextState>}\n   */\n  this.textStates = {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.textKey_ = '';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.fillKey_ = '';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.strokeKey_ = '';\n\n  /**\n   * @private\n   * @type {Object.<string, Object.<string, number>>}\n   */\n  this.widths_ = {};\n\n  labelCache.prune();\n\n};\n\ninherits(CanvasTextReplay, CanvasReplay);\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array.<string>} lines Lines to measure.\n * @param {Array.<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\n/**\n * @inheritDoc\n */\nCanvasTextReplay.prototype.drawText = function(geometry, feature) {\n  const fillState = this.textFillState_;\n  const strokeState = this.textStrokeState_;\n  const textState = this.textState_;\n  if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n    return;\n  }\n\n  let begin = this.coordinates.length;\n\n  const geometryType = geometry.getType();\n  let flatCoordinates = null;\n  let end = 2;\n  let stride = 2;\n  let i, ii;\n\n  if (textState.placement === TextPlacement.LINE) {\n    if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n      return;\n    }\n    let ends;\n    flatCoordinates = geometry.getFlatCoordinates();\n    stride = geometry.getStride();\n    if (geometryType == GeometryType.LINE_STRING) {\n      ends = [flatCoordinates.length];\n    } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n      ends = geometry.getEnds();\n    } else if (geometryType == GeometryType.POLYGON) {\n      ends = geometry.getEnds().slice(0, 1);\n    } else if (geometryType == GeometryType.MULTI_POLYGON) {\n      const endss = geometry.getEndss();\n      ends = [];\n      for (i = 0, ii = endss.length; i < ii; ++i) {\n        ends.push(endss[i][0]);\n      }\n    }\n    this.beginGeometry(geometry, feature);\n    const textAlign = textState.textAlign;\n    let flatOffset = 0;\n    let flatEnd;\n    for (let o = 0, oo = ends.length; o < oo; ++o) {\n      if (textAlign == undefined) {\n        const range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n        flatOffset = range[0];\n        flatEnd = range[1];\n      } else {\n        flatEnd = ends[o];\n      }\n      for (i = flatOffset; i < flatEnd; i += stride) {\n        this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n      }\n      end = this.coordinates.length;\n      flatOffset = ends[o];\n      this.drawChars_(begin, end, this.declutterGroup_);\n      begin = end;\n    }\n    this.endGeometry(geometry, feature);\n\n  } else {\n    const label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\n    const width = label.width / this.pixelRatio;\n    switch (geometryType) {\n      case GeometryType.POINT:\n      case GeometryType.MULTI_POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        end = flatCoordinates.length;\n        break;\n      case GeometryType.LINE_STRING:\n        flatCoordinates = /** @type {module:ol/geom/LineString} */ (geometry).getFlatMidpoint();\n        break;\n      case GeometryType.CIRCLE:\n        flatCoordinates = /** @type {module:ol/geom/Circle} */ (geometry).getCenter();\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        flatCoordinates = /** @type {module:ol/geom/MultiLineString} */ (geometry).getFlatMidpoints();\n        end = flatCoordinates.length;\n        break;\n      case GeometryType.POLYGON:\n        flatCoordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getFlatInteriorPoint();\n        if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\n          return;\n        }\n        stride = 3;\n        break;\n      case GeometryType.MULTI_POLYGON:\n        const interiorPoints = /** @type {module:ol/geom/MultiPolygon} */ (geometry).getFlatInteriorPoints();\n        flatCoordinates = [];\n        for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n          if (textState.overflow || interiorPoints[i + 2] / this.resolution >= width) {\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n        }\n        end = flatCoordinates.length;\n        if (end == 0) {\n          return;\n        }\n        break;\n      default:\n    }\n    end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n    if (textState.backgroundFill || textState.backgroundStroke) {\n      this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n      if (textState.backgroundFill) {\n        this.updateFillStyle(this.state, this.createFill, geometry);\n        this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\n      }\n      if (textState.backgroundStroke) {\n        this.updateStrokeStyle(this.state, this.applyStroke);\n        this.hitDetectionInstructions.push(this.createStroke(this.state));\n      }\n    }\n    this.beginGeometry(geometry, feature);\n    this.drawTextImage_(label, begin, end);\n    this.endGeometry(geometry, feature);\n  }\n};\n\n\n/**\n * @param {string} text Text.\n * @param {string} textKey Text style key.\n * @param {string} fillKey Fill style key.\n * @param {string} strokeKey Stroke style key.\n * @return {HTMLCanvasElement} Image.\n */\nCanvasTextReplay.prototype.getImage = function(text, textKey, fillKey, strokeKey) {\n  let label;\n  const key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n  if (!labelCache.containsKey(key)) {\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\n    const fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\n    const textState = this.textStates[textKey] || this.textState_;\n    const pixelRatio = this.pixelRatio;\n    const scale = textState.scale * pixelRatio;\n    const align =  TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    const strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = (width + strokeWidth);\n    const context = createCanvasContext2D(\n      Math.ceil(renderWidth * scale),\n      Math.ceil((height + strokeWidth) * scale));\n    label = context.canvas;\n    labelCache.set(key, label);\n    if (scale != 1) {\n      context.scale(scale, scale);\n    }\n    context.font = textState.font;\n    if (strokeKey) {\n      context.strokeStyle = strokeState.strokeStyle;\n      context.lineWidth = strokeWidth;\n      context.lineCap = strokeState.lineCap;\n      context.lineJoin = strokeState.lineJoin;\n      context.miterLimit = strokeState.miterLimit;\n      if (CANVAS_LINE_DASH && strokeState.lineDash.length) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n    }\n    if (fillKey) {\n      context.fillStyle = fillState.fillStyle;\n    }\n    context.textBaseline = 'middle';\n    context.textAlign = 'center';\n    const leftRight = (0.5 - align);\n    const x = align * label.width / scale + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n      }\n    }\n  }\n  return labelCache.get(key);\n};\n\n\n/**\n * @private\n * @param {HTMLCanvasElement} label Label.\n * @param {number} begin Begin.\n * @param {number} end End.\n */\nCanvasTextReplay.prototype.drawTextImage_ = function(label, begin, end) {\n  const textState = this.textState_;\n  const strokeState = this.textStrokeState_;\n  const pixelRatio = this.pixelRatio;\n  const align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n  const baseline = TEXT_ALIGN[textState.textBaseline];\n  const strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n  const anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n  const anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n  this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n    label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n    this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n    1, true, label.width,\n    textState.padding == defaultPadding ?\n      defaultPadding : textState.padding.map(function(p) {\n        return p * pixelRatio;\n      }),\n    !!textState.backgroundFill, !!textState.backgroundStroke\n  ]);\n  this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n    label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n    this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n    1 / pixelRatio, true, label.width, textState.padding,\n    !!textState.backgroundFill, !!textState.backgroundStroke\n  ]);\n};\n\n\n/**\n * @private\n * @param {number} begin Begin.\n * @param {number} end End.\n * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n */\nCanvasTextReplay.prototype.drawChars_ = function(begin, end, declutterGroup) {\n  const strokeState = this.textStrokeState_;\n  const textState = this.textState_;\n  const fillState = this.textFillState_;\n\n  const strokeKey = this.strokeKey_;\n  if (strokeState) {\n    if (!(strokeKey in this.strokeStates)) {\n      this.strokeStates[strokeKey] = /** @type {module:ol/render/canvas~StrokeState} */ ({\n        strokeStyle: strokeState.strokeStyle,\n        lineCap: strokeState.lineCap,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineWidth: strokeState.lineWidth,\n        lineJoin: strokeState.lineJoin,\n        miterLimit: strokeState.miterLimit,\n        lineDash: strokeState.lineDash\n      });\n    }\n  }\n  const textKey = this.textKey_;\n  if (!(this.textKey_ in this.textStates)) {\n    this.textStates[this.textKey_] = /** @type {module:ol/render/canvas~TextState} */ ({\n      font: textState.font,\n      textAlign: textState.textAlign || defaultTextAlign,\n      scale: textState.scale\n    });\n  }\n  const fillKey = this.fillKey_;\n  if (fillState) {\n    if (!(fillKey in this.fillStates)) {\n      this.fillStates[fillKey] = /** @type {module:ol/render/canvas~FillState} */ ({\n        fillStyle: fillState.fillStyle\n      });\n    }\n  }\n\n  const pixelRatio = this.pixelRatio;\n  const baseline = TEXT_ALIGN[textState.textBaseline];\n\n  const offsetY = this.textOffsetY_ * pixelRatio;\n  const text = this.text_;\n  const font = textState.font;\n  const textScale = textState.scale;\n  const strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n  let widths = this.widths_[font];\n  if (!widths) {\n    this.widths_[font] = widths = {};\n  }\n  this.instructions.push([CanvasInstruction.DRAW_CHARS,\n    begin, end, baseline, declutterGroup,\n    textState.overflow, fillKey, textState.maxAngle,\n    function(text) {\n      let width = widths[text];\n      if (!width) {\n        width = widths[text] = measureTextWidth(font, text);\n      }\n      return width * textScale * pixelRatio;\n    },\n    offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n  ]);\n  this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n    begin, end, baseline, declutterGroup,\n    textState.overflow, fillKey, textState.maxAngle,\n    function(text) {\n      let width = widths[text];\n      if (!width) {\n        width = widths[text] = measureTextWidth(font, text);\n      }\n      return width * textScale;\n    },\n    offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n  ]);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasTextReplay.prototype.setTextStyle = function(textStyle, declutterGroup) {\n  let textState, fillState, strokeState;\n  if (!textStyle) {\n    this.text_ = '';\n  } else {\n    this.declutterGroup_ = /** @type {module:ol/render/canvas~DeclutterGroup} */ (declutterGroup);\n\n    const textFillStyle = textStyle.getFill();\n    if (!textFillStyle) {\n      fillState = this.textFillState_ = null;\n    } else {\n      fillState = this.textFillState_;\n      if (!fillState) {\n        fillState = this.textFillState_ = /** @type {module:ol/render/canvas~FillState} */ ({});\n      }\n      fillState.fillStyle = asColorLike(\n        textFillStyle.getColor() || defaultFillStyle);\n    }\n\n    const textStrokeStyle = textStyle.getStroke();\n    if (!textStrokeStyle) {\n      strokeState = this.textStrokeState_ = null;\n    } else {\n      strokeState = this.textStrokeState_;\n      if (!strokeState) {\n        strokeState = this.textStrokeState_ = /** @type {module:ol/render/canvas~StrokeState} */ ({});\n      }\n      const lineDash = textStrokeStyle.getLineDash();\n      const lineDashOffset = textStrokeStyle.getLineDashOffset();\n      const lineWidth = textStrokeStyle.getWidth();\n      const miterLimit = textStrokeStyle.getMiterLimit();\n      strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n      strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n      strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n      strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n      strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n      strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n      strokeState.strokeStyle = asColorLike(\n        textStrokeStyle.getColor() || defaultStrokeStyle);\n    }\n\n    textState = this.textState_;\n    const font = textStyle.getFont() || defaultFont;\n    checkFont(font);\n    const textScale = textStyle.getScale();\n    textState.overflow = textStyle.getOverflow();\n    textState.font = font;\n    textState.maxAngle = textStyle.getMaxAngle();\n    textState.placement = textStyle.getPlacement();\n    textState.textAlign = textStyle.getTextAlign();\n    textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n    textState.backgroundFill = textStyle.getBackgroundFill();\n    textState.backgroundStroke = textStyle.getBackgroundStroke();\n    textState.padding = textStyle.getPadding() || defaultPadding;\n    textState.scale = textScale === undefined ? 1 : textScale;\n\n    const textOffsetX = textStyle.getOffsetX();\n    const textOffsetY = textStyle.getOffsetY();\n    const textRotateWithView = textStyle.getRotateWithView();\n    const textRotation = textStyle.getRotation();\n    this.text_ = textStyle.getText() || '';\n    this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n    this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n    this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n    this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n    this.strokeKey_ = strokeState ?\n      (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n      strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n      strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n      '';\n    this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n    this.fillKey_ = fillState ?\n      (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n      '';\n  }\n};\nexport default CanvasTextReplay;\n","/**\n * @module ol/render/canvas/ReplayGroup\n */\nimport {inherits} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport ReplayType from '../ReplayType.js';\nimport CanvasReplay from '../canvas/Replay.js';\nimport CanvasImageReplay from '../canvas/ImageReplay.js';\nimport CanvasLineStringReplay from '../canvas/LineStringReplay.js';\nimport CanvasPolygonReplay from '../canvas/PolygonReplay.js';\nimport CanvasTextReplay from '../canvas/TextReplay.js';\nimport {ORDER} from '../replay.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @type {Object.<module:ol/render/ReplayType,\n *                function(new: module:ol/render/canvas/Replay, number, module:ol/extent~Extent,\n *                number, number, boolean, Array.<module:ol/render/canvas~DeclutterGroup>)>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': CanvasPolygonReplay,\n  'Default': CanvasReplay,\n  'Image': CanvasImageReplay,\n  'LineString': CanvasLineStringReplay,\n  'Polygon': CanvasPolygonReplay,\n  'Text': CanvasTextReplay\n};\n\n\n/**\n * @constructor\n * @extends {module:ol/render/ReplayGroup}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay group can have overlapping geometries.\n * @param {?} declutterTree Declutter tree\n * for declutter processing in postrender.\n * @param {number=} opt_renderBuffer Optional rendering buffer.\n * @struct\n */\nconst CanvasReplayGroup = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree, opt_renderBuffer) {\n  ReplayGroup.call(this);\n\n  /**\n   * Declutter tree.\n   * @private\n   */\n  this.declutterTree_ = declutterTree;\n\n  /**\n   * @type {module:ol/render/canvas~DeclutterGroup}\n   * @private\n   */\n  this.declutterGroup_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.tolerance_ = tolerance;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.maxExtent_ = maxExtent;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overlaps_ = overlaps;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.resolution_ = resolution;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.renderBuffer_ = opt_renderBuffer;\n\n  /**\n   * @private\n   * @type {!Object.<string, !Object.<module:ol/render/ReplayType, module:ol/render/canvas/Replay>>}\n   */\n  this.replaysByZIndex_ = {};\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.hitDetectionTransform_ = createTransform();\n};\n\ninherits(CanvasReplayGroup, ReplayGroup);\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object.<number, Array.<Array.<(boolean|undefined)>>>}\n */\nconst circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array.<Array.<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  let i;\n  const radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array.<Array.<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  const arraySize = radius * 2 + 1;\n  const arr = new Array(arraySize);\n  for (let i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  let x = radius;\n  let y = 0;\n  let error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object.<string, Array.<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n */\nexport function replayDeclutter(declutterReplays, context, rotation) {\n  const zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  const skippedFeatureUids = {};\n  for (let z = 0, zz = zs.length; z < zz; ++z) {\n    const replayData = declutterReplays[zs[z].toString()];\n    for (let i = 0, ii = replayData.length; i < ii;) {\n      const replay = replayData[i++];\n      const transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids);\n    }\n  }\n}\n\n\n/**\n * @param {boolean} group Group with previous replay.\n * @return {module:ol/render/canvas~DeclutterGroup} Declutter instruction group.\n */\nCanvasReplayGroup.prototype.addDeclutter = function(group) {\n  let declutter = null;\n  if (this.declutterTree_) {\n    if (group) {\n      declutter = this.declutterGroup_;\n      /** @type {number} */ (declutter[4])++;\n    } else {\n      declutter = this.declutterGroup_ = createEmpty();\n      declutter.push(1);\n    }\n  }\n  return declutter;\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n */\nCanvasReplayGroup.prototype.clip = function(context, transform) {\n  const flatClipCoords = this.getClipCoords(transform);\n  context.beginPath();\n  context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n  context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n  context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n  context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n  context.clip();\n};\n\n\n/**\n * @param {Array.<module:ol/render/ReplayType>} replays Replays.\n * @return {boolean} Has replays of the provided types.\n */\nCanvasReplayGroup.prototype.hasReplays = function(replays) {\n  for (const zIndex in this.replaysByZIndex_) {\n    const candidates = this.replaysByZIndex_[zIndex];\n    for (let i = 0, ii = replays.length; i < ii; ++i) {\n      if (replays[i] in candidates) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nCanvasReplayGroup.prototype.finish = function() {\n  for (const zKey in this.replaysByZIndex_) {\n    const replays = this.replaysByZIndex_[zKey];\n    for (const replayKey in replays) {\n      replays[replayKey].finish();\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T} callback Feature callback.\n * @param {Object.<string, module:ol/render/canvas~DeclutterGroup>} declutterReplays Declutter replays.\n * @return {T|undefined} Callback result.\n * @template T\n */\nCanvasReplayGroup.prototype.forEachFeatureAtCoordinate = function(\n  coordinate, resolution, rotation, hitTolerance, skippedFeaturesHash, callback, declutterReplays) {\n\n  hitTolerance = Math.round(hitTolerance);\n  const contextSize = hitTolerance * 2 + 1;\n  const transform = composeTransform(this.hitDetectionTransform_,\n    hitTolerance + 0.5, hitTolerance + 0.5,\n    1 / resolution, -1 / resolution,\n    -rotation,\n    -coordinate[0], -coordinate[1]);\n  const context = this.hitDetectionContext_;\n\n  if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n    context.canvas.width = contextSize;\n    context.canvas.height = contextSize;\n  } else {\n    context.clearRect(0, 0, contextSize, contextSize);\n  }\n\n  /**\n   * @type {module:ol/extent~Extent}\n   */\n  let hitExtent;\n  if (this.renderBuffer_ !== undefined) {\n    hitExtent = createEmpty();\n    extendCoordinate(hitExtent, coordinate);\n    buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n  }\n\n  const mask = getCircleArray(hitTolerance);\n  let declutteredFeatures;\n  if (this.declutterTree_) {\n    declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n      return entry.value;\n    });\n  }\n\n  let replayType;\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @return {?} Callback result.\n   */\n  function featureCallback(feature) {\n    const imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n    for (let i = 0; i < contextSize; i++) {\n      for (let j = 0; j < contextSize; j++) {\n        if (mask[i][j]) {\n          if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n            let result;\n            if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\n                declutteredFeatures.indexOf(feature) !== -1) {\n              result = callback(feature);\n            }\n            if (result) {\n              return result;\n            } else {\n              context.clearRect(0, 0, contextSize, contextSize);\n              return undefined;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /** @type {Array.<number>} */\n  const zs = Object.keys(this.replaysByZIndex_).map(Number);\n  zs.sort(numberSafeCompareFunction);\n\n  let i, j, replays, replay, result;\n  for (i = zs.length - 1; i >= 0; --i) {\n    const zIndexKey = zs[i].toString();\n    replays = this.replaysByZIndex_[zIndexKey];\n    for (j = ORDER.length - 1; j >= 0; --j) {\n      replayType = ORDER[j];\n      replay = replays[replayType];\n      if (replay !== undefined) {\n        if (declutterReplays &&\n            (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n          const declutter = declutterReplays[zIndexKey];\n          if (!declutter) {\n            declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n          } else {\n            declutter.push(replay, transform.slice(0));\n          }\n        } else {\n          result = replay.replayHitDetection(context, transform, rotation,\n            skippedFeaturesHash, featureCallback, hitExtent);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {module:ol/transform~Transform} transform Transform.\n * @return {Array.<number>} Clip coordinates.\n */\nCanvasReplayGroup.prototype.getClipCoords = function(transform) {\n  const maxExtent = this.maxExtent_;\n  const minX = maxExtent[0];\n  const minY = maxExtent[1];\n  const maxX = maxExtent[2];\n  const maxY = maxExtent[3];\n  const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n  transform2D(\n    flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n  return flatClipCoords;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasReplayGroup.prototype.getReplay = function(zIndex, replayType) {\n  const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n  let replays = this.replaysByZIndex_[zIndexKey];\n  if (replays === undefined) {\n    replays = {};\n    this.replaysByZIndex_[zIndexKey] = replays;\n  }\n  let replay = replays[replayType];\n  if (replay === undefined) {\n    const Constructor = BATCH_CONSTRUCTORS[replayType];\n    replay = new Constructor(this.tolerance_, this.maxExtent_,\n      this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n    replays[replayType] = replay;\n  }\n  return replay;\n};\n\n\n/**\n * @return {Object.<string, Object.<module:ol/render/ReplayType, module:ol/render/canvas/Replay>>} Replays.\n */\nCanvasReplayGroup.prototype.getReplays = function() {\n  return this.replaysByZIndex_;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasReplayGroup.prototype.isEmpty = function() {\n  return isEmpty(this.replaysByZIndex_);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {Array.<module:ol/render/ReplayType>=} opt_replayTypes Ordered replay types to replay.\n *     Default is {@link module:ol/render/replay~ORDER}\n * @param {Object.<string, module:ol/render/canvas~DeclutterGroup>=} opt_declutterReplays Declutter replays.\n */\nCanvasReplayGroup.prototype.replay = function(context,\n  transform, viewRotation, skippedFeaturesHash, opt_replayTypes, opt_declutterReplays) {\n\n  /** @type {Array.<number>} */\n  const zs = Object.keys(this.replaysByZIndex_).map(Number);\n  zs.sort(numberSafeCompareFunction);\n\n  // setup clipping so that the parts of over-simplified geometries are not\n  // visible outside the current extent when panning\n  context.save();\n  this.clip(context, transform);\n\n  const replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\n  let i, ii, j, jj, replays, replay;\n  for (i = 0, ii = zs.length; i < ii; ++i) {\n    const zIndexKey = zs[i].toString();\n    replays = this.replaysByZIndex_[zIndexKey];\n    for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n      const replayType = replayTypes[j];\n      replay = replays[replayType];\n      if (replay !== undefined) {\n        if (opt_declutterReplays &&\n            (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n          const declutter = opt_declutterReplays[zIndexKey];\n          if (!declutter) {\n            opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n          } else {\n            declutter.push(replay, transform.slice(0));\n          }\n        } else {\n          replay.replay(context, transform, viewRotation, skippedFeaturesHash);\n        }\n      }\n    }\n  }\n\n  context.restore();\n};\n\nexport default CanvasReplayGroup;\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid, inherits} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup from '../../render/canvas/ReplayGroup.js';\nimport CanvasLayerRenderer from '../canvas/Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\n\n/**\n * @constructor\n * @extends {module:ol/renderer/canvas/Layer}\n * @param {module:ol/layer/Vector} vectorLayer Vector layer.\n * @api\n */\nconst CanvasVectorLayerRenderer = function(vectorLayer) {\n\n  CanvasLayerRenderer.call(this, vectorLayer);\n\n  /**\n   * Declutter tree.\n   * @private\n   */\n  this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.dirty_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedResolution_ = NaN;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.renderedExtent_ = createEmpty();\n\n  /**\n   * @private\n   * @type {function(module:ol/Feature, module:ol/Feature): number|null}\n   */\n  this.renderedRenderOrder_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/render/canvas/ReplayGroup}\n   */\n  this.replayGroup_ = null;\n\n  /**\n   * A new replay group had to be created by `prepareFrame()`\n   * @type {boolean}\n   */\n  this.replayGroupChanged = true;\n\n  /**\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context = createCanvasContext2D();\n\n  listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n};\n\ninherits(CanvasVectorLayerRenderer, CanvasLayerRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/VectorLayer} The layer renderer.\n */\nCanvasVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorLayerRenderer(/** @type {module:ol/layer/Vector} */ (layer));\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorLayerRenderer.prototype.disposeInternal = function() {\n  unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n  CanvasLayerRenderer.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n */\nCanvasVectorLayerRenderer.prototype.compose = function(context, frameState, layerState) {\n  const extent = frameState.extent;\n  const pixelRatio = frameState.pixelRatio;\n  const skippedFeatureUids = layerState.managed ?\n    frameState.skippedFeatureUids : {};\n  const viewState = frameState.viewState;\n  const projection = viewState.projection;\n  const rotation = viewState.rotation;\n  const projectionExtent = projection.getExtent();\n  const vectorSource = /** @type {module:ol/source/Vector} */ (this.getLayer().getSource());\n\n  let transform = this.getTransform(frameState, 0);\n\n  // clipped rendering if layer extent is set\n  const clipExtent = layerState.extent;\n  const clipped = clipExtent !== undefined;\n  if (clipped) {\n    this.clip(context, frameState,  /** @type {module:ol/extent~Extent} */ (clipExtent));\n  }\n  const replayGroup = this.replayGroup_;\n  if (replayGroup && !replayGroup.isEmpty()) {\n    if (this.declutterTree_) {\n      this.declutterTree_.clear();\n    }\n    const layer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n    let drawOffsetX = 0;\n    let drawOffsetY = 0;\n    let replayContext;\n    const transparentLayer = layerState.opacity !== 1;\n    const hasRenderListeners = layer.hasListener(RenderEventType.RENDER);\n    if (transparentLayer || hasRenderListeners) {\n      let drawWidth = context.canvas.width;\n      let drawHeight = context.canvas.height;\n      if (rotation) {\n        const drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n        drawOffsetX = (drawSize - drawWidth) / 2;\n        drawOffsetY = (drawSize - drawHeight) / 2;\n        drawWidth = drawHeight = drawSize;\n      }\n      // resize and clear\n      this.context.canvas.width = drawWidth;\n      this.context.canvas.height = drawHeight;\n      replayContext = this.context;\n    } else {\n      replayContext = context;\n    }\n\n    const alpha = replayContext.globalAlpha;\n    if (!transparentLayer) {\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      replayContext.globalAlpha = layerState.opacity;\n    }\n\n    if (replayContext != context) {\n      replayContext.translate(drawOffsetX, drawOffsetY);\n    }\n\n    const width = frameState.size[0] * pixelRatio;\n    const height = frameState.size[1] * pixelRatio;\n    rotateAtOffset(replayContext, -rotation,\n      width / 2, height / 2);\n    replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n    if (vectorSource.getWrapX() && projection.canWrapX() &&\n        !containsExtent(projectionExtent, extent)) {\n      let startX = extent[0];\n      const worldWidth = getWidth(projectionExtent);\n      let world = 0;\n      let offsetX;\n      while (startX < projectionExtent[0]) {\n        --world;\n        offsetX = worldWidth * world;\n        transform = this.getTransform(frameState, offsetX);\n        replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n        startX += worldWidth;\n      }\n      world = 0;\n      startX = extent[2];\n      while (startX > projectionExtent[2]) {\n        ++world;\n        offsetX = worldWidth * world;\n        transform = this.getTransform(frameState, offsetX);\n        replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n        startX -= worldWidth;\n      }\n    }\n    rotateAtOffset(replayContext, rotation,\n      width / 2, height / 2);\n\n    if (replayContext != context) {\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (transparentLayer) {\n        const mainContextAlpha = context.globalAlpha;\n        context.globalAlpha = layerState.opacity;\n        context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        context.globalAlpha = mainContextAlpha;\n      } else {\n        context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n      }\n      replayContext.translate(-drawOffsetX, -drawOffsetY);\n    }\n\n    if (!transparentLayer) {\n      replayContext.globalAlpha = alpha;\n    }\n  }\n\n  if (clipped) {\n    context.restore();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorLayerRenderer.prototype.composeFrame = function(frameState, layerState, context) {\n  const transform = this.getTransform(frameState, 0);\n  this.preCompose(context, frameState, transform);\n  this.compose(context, frameState, layerState);\n  this.postCompose(context, frameState, layerState, transform);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  if (!this.replayGroup_) {\n    return undefined;\n  } else {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n    /** @type {!Object.<string, boolean>} */\n    const features = {};\n    const result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        const key = getUid(feature).toString();\n        if (!(key in features)) {\n          features[key] = true;\n          return callback.call(thisArg, feature, layer);\n        }\n      }, null);\n    return result;\n  }\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n */\nCanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function(event) {\n  const layer = this.getLayer();\n  if (layer.getVisible() && this.replayGroup_) {\n    layer.changed();\n  }\n};\n\n\n/**\n * Handle changes in image style state.\n * @param {module:ol/events/Event} event Image style change event.\n * @private\n */\nCanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function(event) {\n  this.renderIfReadyAndVisible();\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {\n  const vectorLayer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n  const vectorSource = vectorLayer.getSource();\n\n  const animating = frameState.viewHints[ViewHint.ANIMATING];\n  const interacting = frameState.viewHints[ViewHint.INTERACTING];\n  const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n  const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n  if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)) {\n    return true;\n  }\n\n  const frameStateExtent = frameState.extent;\n  const viewState = frameState.viewState;\n  const projection = viewState.projection;\n  const resolution = viewState.resolution;\n  const pixelRatio = frameState.pixelRatio;\n  const vectorLayerRevision = vectorLayer.getRevision();\n  const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n  let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n  if (vectorLayerRenderOrder === undefined) {\n    vectorLayerRenderOrder = defaultRenderOrder;\n  }\n\n  const extent = buffer(frameStateExtent,\n    vectorLayerRenderBuffer * resolution);\n  const projectionExtent = viewState.projection.getExtent();\n\n  if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)) {\n    // For the replay group, we need an extent that intersects the real world\n    // (-180° to +180°). To support geometries in a coordinate range from -540°\n    // to +540°, we add at least 1 world width on each side of the projection\n    // extent. If the viewport is wider than the world, we need to add half of\n    // the viewport width to make sure we cover the whole viewport.\n    const worldWidth = getWidth(projectionExtent);\n    const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n    extent[0] = projectionExtent[0] - gutter;\n    extent[2] = projectionExtent[2] + gutter;\n  }\n\n  if (!this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.renderedExtent_, extent)) {\n    this.replayGroupChanged = false;\n    return true;\n  }\n\n  this.replayGroup_ = null;\n\n  this.dirty_ = false;\n\n  const replayGroup = new CanvasReplayGroup(\n    getRenderTolerance(resolution, pixelRatio), extent, resolution,\n    pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n  vectorSource.loadFeatures(extent, resolution, projection);\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @this {module:ol/renderer/canvas/VectorLayer}\n   */\n  const render = function(feature) {\n    let styles;\n    const styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n    if (styleFunction) {\n      styles = styleFunction(feature, resolution);\n    }\n    if (styles) {\n      const dirty = this.renderFeature(\n        feature, resolution, pixelRatio, styles, replayGroup);\n      this.dirty_ = this.dirty_ || dirty;\n    }\n  }.bind(this);\n  if (vectorLayerRenderOrder) {\n    /** @type {Array.<module:ol/Feature>} */\n    const features = [];\n    vectorSource.forEachFeatureInExtent(extent,\n      /**\n       * @param {module:ol/Feature} feature Feature.\n       */\n      function(feature) {\n        features.push(feature);\n      }, this);\n    features.sort(vectorLayerRenderOrder);\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n  } else {\n    vectorSource.forEachFeatureInExtent(extent, render, this);\n  }\n  replayGroup.finish();\n\n  this.renderedResolution_ = resolution;\n  this.renderedRevision_ = vectorLayerRevision;\n  this.renderedRenderOrder_ = vectorLayerRenderOrder;\n  this.renderedExtent_ = extent;\n  this.replayGroup_ = replayGroup;\n\n  this.replayGroupChanged = true;\n  return true;\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {(module:ol/style/Style|Array.<module:ol/style/Style>)} styles The style or array of styles.\n * @param {module:ol/render/canvas/ReplayGroup} replayGroup Replay group.\n * @return {boolean} `true` if an image is loading.\n */\nCanvasVectorLayerRenderer.prototype.renderFeature = function(feature, resolution, pixelRatio, styles, replayGroup) {\n  if (!styles) {\n    return false;\n  }\n  let loading = false;\n  if (Array.isArray(styles)) {\n    for (let i = 0, ii = styles.length; i < ii; ++i) {\n      loading = renderFeature(\n        replayGroup, feature, styles[i],\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this) || loading;\n    }\n  } else {\n    loading = renderFeature(\n      replayGroup, feature, styles,\n      getSquaredRenderTolerance(resolution, pixelRatio),\n      this.handleStyleImageChange_, this);\n  }\n  return loading;\n};\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport {getUid, inherits} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileState from '../../TileState.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport {equivalent as equivalentProjection} from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/ReplayType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\nimport {ORDER} from '../../render/replay.js';\nimport CanvasTileLayerRenderer from '../canvas/TileLayer.js';\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  reset as resetTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\n\n\n/**\n * @type {!Object.<string, Array.<module:ol/render/ReplayType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n\n\n/**\n * @type {!Object.<string, Array.<module:ol/render/ReplayType>>}\n */\nconst VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': ORDER\n};\n\n\n/**\n * @constructor\n * @extends {module:ol/renderer/canvas/TileLayer}\n * @param {module:ol/layer/VectorTile} layer VectorTile layer.\n * @api\n */\nconst CanvasVectorTileLayerRenderer = function(layer) {\n\n  /**\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context = null;\n\n  CanvasTileLayerRenderer.call(this, layer);\n\n  /**\n   * Declutter tree.\n   * @private\n   */\n  this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.dirty_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedLayerRevision_;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.tmpTransform_ = createTransform();\n\n  // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n  this.zDirection = layer.getRenderMode() == VectorTileRenderType.VECTOR ? 1 : 0;\n\n  listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n};\n\ninherits(CanvasVectorTileLayerRenderer, CanvasTileLayerRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/VectorTileLayer} The layer renderer.\n */\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorTileLayerRenderer(/** @type {module:ol/layer/VectorTile} */ (layer));\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.disposeInternal = function() {\n  unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n  CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.getTile = function(z, x, y, pixelRatio, projection) {\n  const tile = CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection);\n  if (tile.getState() === TileState.LOADED) {\n    this.createReplayGroup_(tile, pixelRatio, projection);\n    if (this.context) {\n      this.renderTileImage_(tile, pixelRatio, projection);\n    }\n  }\n  return tile;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {\n  const layer = this.getLayer();\n  const layerRevision = layer.getRevision();\n  if (this.renderedLayerRevision_ != layerRevision) {\n    this.renderedTiles.length = 0;\n    const renderMode = layer.getRenderMode();\n    if (!this.context && renderMode != VectorTileRenderType.VECTOR) {\n      this.context = createCanvasContext2D();\n    }\n    if (this.context && renderMode == VectorTileRenderType.VECTOR) {\n      this.context = null;\n    }\n  }\n  this.renderedLayerRevision_ = layerRevision;\n  return CanvasTileLayerRenderer.prototype.prepareFrame.apply(this, arguments);\n};\n\n\n/**\n * @param {module:ol/VectorImageTile} tile Tile.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @private\n */\nCanvasVectorTileLayerRenderer.prototype.createReplayGroup_ = function(tile, pixelRatio, projection) {\n  const layer = this.getLayer();\n  const revision = layer.getRevision();\n  const renderOrder = /** @type {module:ol/render~OrderFunction} */ (layer.getRenderOrder()) || null;\n\n  const replayState = tile.getReplayState(layer);\n  if (!replayState.dirty && replayState.renderedRevision == revision &&\n      replayState.renderedRenderOrder == renderOrder) {\n    return;\n  }\n\n  const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n  const sourceTileGrid = source.getTileGrid();\n  const tileGrid = source.getTileGridForProjection(projection);\n  const resolution = tileGrid.getResolution(tile.tileCoord[0]);\n  const tileExtent = tile.extent;\n\n  const zIndexKeys = {};\n  for (let t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n    const sourceTile = tile.getTile(tile.tileKeys[t]);\n    if (sourceTile.getState() != TileState.LOADED) {\n      continue;\n    }\n\n    const sourceTileCoord = sourceTile.tileCoord;\n    const sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n    const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n    const bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n      buffer(sharedExtent, layer.getRenderBuffer() * resolution, this.tmpExtent);\n    const tileProjection = sourceTile.getProjection();\n    let reproject = false;\n    if (!equivalentProjection(projection, tileProjection)) {\n      reproject = true;\n      sourceTile.setProjection(projection);\n    }\n    replayState.dirty = false;\n    const replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\n      pixelRatio, source.getOverlaps(), this.declutterTree_, layer.getRenderBuffer());\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @this {module:ol/renderer/canvas/VectorTileLayer}\n     */\n    const render = function(feature) {\n      let styles;\n      const styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        const dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n        replayState.dirty = replayState.dirty || dirty;\n      }\n    };\n\n    const features = sourceTile.getFeatures();\n    if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n      features.sort(renderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      if (reproject) {\n        if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n          // projected tile extent\n          tileProjection.setWorldExtent(sourceTileExtent);\n          // tile extent in tile pixel space\n          tileProjection.setExtent(sourceTile.getExtent());\n        }\n        feature.getGeometry().transform(tileProjection, projection);\n      }\n      if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n        render.call(this, feature);\n      }\n    }\n    replayGroup.finish();\n    for (const r in replayGroup.getReplays()) {\n      zIndexKeys[r] = true;\n    }\n    sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n  }\n  replayState.renderedRevision = revision;\n  replayState.renderedRenderOrder = renderOrder;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  const resolution = frameState.viewState.resolution;\n  const rotation = frameState.viewState.rotation;\n  hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n  const layer = this.getLayer();\n  /** @type {!Object.<string, boolean>} */\n  const features = {};\n\n  /** @type {Array.<module:ol/VectorImageTile>} */\n  const renderedTiles = this.renderedTiles;\n\n  let bufferedExtent, found;\n  let i, ii, replayGroup;\n  for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n    const tile = renderedTiles[i];\n    bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\n    if (!containsCoordinate(bufferedExtent, coordinate)) {\n      continue;\n    }\n    for (let t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n      const sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n      found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          const key = getUid(feature).toString();\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n    }\n  }\n  return found;\n};\n\n\n/**\n * @param {module:ol/VectorTile} tile Tile.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @return {module:ol/transform~Transform} transform Transform.\n * @private\n */\nCanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function(tile, frameState) {\n  const layer = this.getLayer();\n  const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n  const tileGrid = source.getTileGrid();\n  const tileCoord = tile.tileCoord;\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  const viewState = frameState.viewState;\n  const pixelRatio = frameState.pixelRatio;\n  const renderResolution = viewState.resolution / pixelRatio;\n  const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n  const center = viewState.center;\n  const origin = getTopLeft(tileExtent);\n  const size = frameState.size;\n  const offsetX = Math.round(pixelRatio * size[0] / 2);\n  const offsetY = Math.round(pixelRatio * size[1] / 2);\n  return composeTransform(this.tmpTransform_,\n    offsetX, offsetY,\n    tileResolution / renderResolution, tileResolution / renderResolution,\n    viewState.rotation,\n    (origin[0] - center[0]) / tileResolution,\n    (center[1] - origin[1]) / tileResolution);\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n */\nCanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function(event) {\n  const layer = this.getLayer();\n  if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n    layer.changed();\n  }\n};\n\n\n/**\n * Handle changes in image style state.\n * @param {module:ol/events/Event} event Image style change event.\n * @private\n */\nCanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function(event) {\n  this.renderIfReadyAndVisible();\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.postCompose = function(context, frameState, layerState) {\n  const layer = this.getLayer();\n  const renderMode = layer.getRenderMode();\n  if (renderMode != VectorTileRenderType.IMAGE) {\n    const declutterReplays = layer.getDeclutter() ? {} : null;\n    const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n    const replayTypes = VECTOR_REPLAYS[renderMode];\n    const pixelRatio = frameState.pixelRatio;\n    const rotation = frameState.viewState.rotation;\n    const size = frameState.size;\n    let offsetX, offsetY;\n    if (rotation) {\n      offsetX = Math.round(pixelRatio * size[0] / 2);\n      offsetY = Math.round(pixelRatio * size[1] / 2);\n      rotateAtOffset(context, -rotation, offsetX, offsetY);\n    }\n    if (declutterReplays) {\n      this.declutterTree_.clear();\n    }\n    const tiles = this.renderedTiles;\n    const tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n    const clips = [];\n    const zs = [];\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = /** @type {module:ol/VectorImageTile} */ (tiles[i]);\n      if (tile.getState() == TileState.ABORT) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n      const worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tile.extent[0];\n      let transform = undefined;\n      for (let t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n        const sourceTile = tile.getTile(tile.tileKeys[t]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        const replayGroup = sourceTile.getReplayGroup(layer, tileCoord.toString());\n        if (renderMode != VectorTileRenderType.VECTOR && !replayGroup.hasReplays(replayTypes)) {\n          continue;\n        }\n        if (!transform) {\n          transform = this.getTransform(frameState, worldOffset);\n        }\n        const currentZ = sourceTile.tileCoord[0];\n        const currentClip = replayGroup.getClipCoords(transform);\n        context.save();\n        context.globalAlpha = layerState.opacity;\n        // Create a clip mask for regions in this low resolution tile that are\n        // already filled by a higher resolution tile\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          const clip = clips[j];\n          if (currentZ < zs[j]) {\n            context.beginPath();\n            // counter-clockwise (outer ring) for current tile\n            context.moveTo(currentClip[0], currentClip[1]);\n            context.lineTo(currentClip[2], currentClip[3]);\n            context.lineTo(currentClip[4], currentClip[5]);\n            context.lineTo(currentClip[6], currentClip[7]);\n            // clockwise (inner ring) for higher resolution tile\n            context.moveTo(clip[6], clip[7]);\n            context.lineTo(clip[4], clip[5]);\n            context.lineTo(clip[2], clip[3]);\n            context.lineTo(clip[0], clip[1]);\n            context.clip();\n          }\n        }\n        replayGroup.replay(context, transform, rotation, {}, replayTypes, declutterReplays);\n        context.restore();\n        clips.push(currentClip);\n        zs.push(currentZ);\n      }\n    }\n    if (declutterReplays) {\n      replayDeclutter(declutterReplays, context, rotation);\n    }\n    if (rotation) {\n      rotateAtOffset(context, rotation,\n        /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n    }\n  }\n  CanvasTileLayerRenderer.prototype.postCompose.apply(this, arguments);\n};\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {(module:ol/style/Style|Array.<module:ol/style/Style>)} styles The style or array of styles.\n * @param {module:ol/render/canvas/ReplayGroup} replayGroup Replay group.\n * @return {boolean} `true` if an image is loading.\n */\nCanvasVectorTileLayerRenderer.prototype.renderFeature = function(feature, squaredTolerance, styles, replayGroup) {\n  if (!styles) {\n    return false;\n  }\n  let loading = false;\n  if (Array.isArray(styles)) {\n    for (let i = 0, ii = styles.length; i < ii; ++i) {\n      loading = renderFeature(\n        replayGroup, feature, styles[i], squaredTolerance,\n        this.handleStyleImageChange_, this) || loading;\n    }\n  } else {\n    loading = renderFeature(\n      replayGroup, feature, styles, squaredTolerance,\n      this.handleStyleImageChange_, this);\n  }\n  return loading;\n};\n\n\n/**\n * @param {module:ol/VectorImageTile} tile Tile.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @private\n */\nCanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function(\n  tile, pixelRatio, projection) {\n  const layer = this.getLayer();\n  const replayState = tile.getReplayState(layer);\n  const revision = layer.getRevision();\n  const replays = IMAGE_REPLAYS[layer.getRenderMode()];\n  if (replays && replayState.renderedTileRevision !== revision) {\n    replayState.renderedTileRevision = revision;\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n    const tileGrid = source.getTileGridForProjection(projection);\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext(layer);\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    for (let i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n      const sourceTile = tile.getTile(tile.tileKeys[i]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const pixelScale = pixelRatio / resolution;\n      const transform = resetTransform(this.tmpTransform_);\n      scaleTransform(transform, pixelScale, -pixelScale);\n      translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n      const replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n      replayGroup.replay(context, transform, 0, {}, replays);\n    }\n  }\n};\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/Map\n */\nimport {inherits} from './util.js';\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control/util.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport CanvasImageLayerRenderer from './renderer/canvas/ImageLayer.js';\nimport CanvasMapRenderer from './renderer/canvas/Map.js';\nimport CanvasTileLayerRenderer from './renderer/canvas/TileLayer.js';\nimport CanvasVectorLayerRenderer from './renderer/canvas/VectorLayer.js';\nimport CanvasVectorTileLayerRenderer from './renderer/canvas/VectorTileLayer.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @constructor\n * @extends {module:ol/PluggableMap}\n * @param {module:ol/PluggableMap~MapOptions} options Map options.\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nconst Map = function(options) {\n  options = assign({}, options);\n  if (!options.controls) {\n    options.controls = defaultControls();\n  }\n  if (!options.interactions) {\n    options.interactions = defaultInteractions();\n  }\n\n  PluggableMap.call(this, options);\n};\n\ninherits(Map, PluggableMap);\n\nMap.prototype.createRenderer = function() {\n  const renderer = new CanvasMapRenderer(this);\n  renderer.registerLayerRenderers([\n    CanvasImageLayerRenderer,\n    CanvasTileLayerRenderer,\n    CanvasVectorLayerRenderer,\n    CanvasVectorTileLayerRenderer\n  ]);\n  return renderer;\n};\n\nexport default Map;\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, DOCUMENT} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, (bool) ? '1' : '0');\n}\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(DOCUMENT.createCDATASection(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      padNumber(date.getUTCDate(), 2) + 'T' +\n      padNumber(date.getUTCHours(), 2) + ':' +\n      padNumber(date.getUTCMinutes(), 2) + ':' +\n      padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport {inherits} from '../util.js';\nimport {cosh} from '../math.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport const EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n *\n * @constructor\n * @extends {module:ol/proj/Projection}\n * @param {string} code Code.\n */\nfunction EPSG3857Projection(code) {\n  Projection.call(this, {\n    code: code,\n    units: Units.METERS,\n    extent: EXTENT,\n    global: true,\n    worldExtent: WORLD_EXTENT,\n    getPointResolution: function(resolution, point) {\n      return resolution / cosh(point[1] / RADIUS);\n    }\n  });\n}\ninherits(EPSG3857Projection, Projection);\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array.<module:ol/proj/Projection>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array.<number>} input Input array of coordinate values.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array.<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  const halfSize = HALF_SIZE;\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    let y = RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array.<number>} input Input array of coordinate values.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array.<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport {inherits} from '../util.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n *\n * @constructor\n * @extends {module:ol/proj/Projection}\n * @param {string} code Code.\n * @param {string=} opt_axisOrientation Axis orientation.\n */\nfunction EPSG4326Projection(code, opt_axisOrientation) {\n  Projection.call(this, {\n    code: code,\n    units: Units.DEGREES,\n    extent: EXTENT,\n    axisOrientation: opt_axisOrientation,\n    global: true,\n    metersPerUnit: METERS_PER_UNIT,\n    worldExtent: EXTENT\n  });\n}\ninherits(EPSG4326Projection, Projection);\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array.<module:ol/proj/Projection>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object.<string, module:ol/proj/Projection>}\n */\nlet cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {module:ol/proj/Projection} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {module:ol/proj/Projection} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the {@link http://proj4js.org/}\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * {@link https://epsg.io/}, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {module:ol/proj/Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array.<number>, Array.<number>=, number=): Array.<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\n\n/**\n * @param {Array.<number>} input Input coordinate array.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array.<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array.<number>} input Input coordinate array.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array.<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {module:ol/proj/Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array.<module:ol/proj/Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {module:ol/proj~ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {module:ol/proj/Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  let projection = null;\n  if (projectionLike instanceof Projection) {\n    projection = projectionLike;\n  } else if (typeof projectionLike === 'string') {\n    const code = projectionLike;\n    projection = projections.get(code);\n  }\n  return projection;\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {module:ol/proj~ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {module:ol/coordinate~Coordinate} point Point to find adjusted resolution at.\n * @param {module:ol/proj/Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    const units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      let vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      const metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array.<module:ol/proj/Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array.<module:ol/proj/Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array.<module:ol/proj/Projection>} projections2 Projections with equal\n *     meaning.\n * @param {module:ol/proj~TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {module:ol/proj~TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {module:ol/proj/Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {module:ol/proj/Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {module:ol/proj/Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} coordTransform Coordinate\n *     transform.\n * @return {module:ol/proj~TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array.<number>} input Input.\n     * @param {Array.<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array.<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {module:ol/proj~ProjectionLike} source Source projection.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {module:ol/proj~ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {module:ol/coordinate~Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {module:ol/coordinate~Coordinate} coordinate Projected coordinate.\n * @param {module:ol/proj~ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {module:ol/coordinate~Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {module:ol/proj/Projection} projection1 Projection 1.\n * @param {module:ol/proj/Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {module:ol/proj/Projection} sourceProjection Source Projection object.\n * @param {module:ol/proj/Projection} destinationProjection Destination Projection\n *     object.\n * @return {module:ol/proj~TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {module:ol/proj~ProjectionLike} source Source.\n * @param {module:ol/proj~ProjectionLike} destination Destination.\n * @return {module:ol/proj~TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/proj~ProjectionLike} source Source projection-like.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection-like.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {module:ol/extent~Extent} extent The extent to transform.\n * @param {module:ol/proj~ProjectionLike} source Source projection-like.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection-like.\n * @return {module:ol/extent~Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {module:ol/coordinate~Coordinate} point Point.\n * @param {module:ol/proj/Projection} sourceProjection Source projection.\n * @param {module:ol/proj/Projection} destinationProjection Destination projection.\n * @return {module:ol/coordinate~Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  const transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {module:ol/events~ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {module:ol/events~ListenerFunction} listener\n * @property {EventTarget|module:ol/events/EventTarget} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function(module:ol/events/Event)|function(module:ol/events/Event): boolean} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {module:ol/events~EventsKey} listenerObj Listener object.\n * @return {module:ol/events~ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  const boundListener = function(evt) {\n    const listener = listenerObj.listener;\n    const bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!module:ol/events~EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {module:ol/events~EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  let listenerObj;\n  for (let i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array.<module:ol/events~EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  const listenerMap = target.ol_lm;\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.  If one does not exist on the target, it is\n * created.\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @return {!Object.<string, Array.<module:ol/events~EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target) {\n  let listenerMap = target.ol_lm;\n  if (!listenerMap) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  const listeners = getListeners(target, type);\n  if (listeners) {\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      target.removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    const listenerMap = target.ol_lm;\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        delete target.ol_lm;\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {module:ol/events~EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  const listenerMap = getListenerMap(target);\n  let listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  let listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {module:ol/events~EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    target.addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {module:ol/events~EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  const listeners = getListeners(target, type);\n  if (listeners) {\n    const listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {module:ol/events~EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.boundListener);\n    const listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      const i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  const listenerMap = getListenerMap(target);\n  for (const type in listenerMap) {\n    removeListeners(target, type);\n  }\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n","/**\n * @module ol/layer/Heatmap\n */\nimport {listen} from '../events.js';\nimport {inherits} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport Icon from '../style/Icon.js';\nimport Style from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array.<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {number} [shadow=250] Shadow size in pixels.\n * @property {string|function(module:ol/Feature):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {module:ol/source/Vector} [source] Source.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius'\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @constructor\n * @extends {module:ol/layer/Vector}\n * @fires module:ol/render/Event~RenderEvent\n * @param {module:ol/layer/Heatmap~Options=} opt_options Options.\n * @api\n */\nconst Heatmap = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const baseOptions = assign({}, options);\n\n  delete baseOptions.gradient;\n  delete baseOptions.radius;\n  delete baseOptions.blur;\n  delete baseOptions.shadow;\n  delete baseOptions.weight;\n  VectorLayer.call(this, /** @type {module:ol/layer/Vector~Options} */ (baseOptions));\n\n  /**\n   * @private\n   * @type {Uint8ClampedArray}\n   */\n  this.gradient_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.shadow_ = options.shadow !== undefined ? options.shadow : 250;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.circleImage_ = undefined;\n\n  /**\n   * @private\n   * @type {Array.<Array.<module:ol/style/Style>>}\n   */\n  this.styleCache_ = null;\n\n  listen(this,\n    getChangeEventType(Property.GRADIENT),\n    this.handleGradientChanged_, this);\n\n  this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n  this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n  this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n  listen(this,\n    getChangeEventType(Property.BLUR),\n    this.handleStyleChanged_, this);\n  listen(this,\n    getChangeEventType(Property.RADIUS),\n    this.handleStyleChanged_, this);\n\n  this.handleStyleChanged_();\n\n  const weight = options.weight ? options.weight : 'weight';\n  let weightFunction;\n  if (typeof weight === 'string') {\n    weightFunction = function(feature) {\n      return feature.get(weight);\n    };\n  } else {\n    weightFunction = weight;\n  }\n\n  this.setStyle(function(feature, resolution) {\n    const weight = weightFunction(feature);\n    const opacity = weight !== undefined ? clamp(weight, 0, 1) : 1;\n    // cast to 8 bits\n    const index = (255 * opacity) | 0;\n    let style = this.styleCache_[index];\n    if (!style) {\n      style = [\n        new Style({\n          image: new Icon({\n            opacity: opacity,\n            src: this.circleImage_\n          })\n        })\n      ];\n      this.styleCache_[index] = style;\n    }\n    return style;\n  }.bind(this));\n\n  // For performance reasons, don't sort the features before rendering.\n  // The render order is not relevant for a heatmap representation.\n  this.setRenderOrder(null);\n\n  listen(this, RenderEventType.RENDER, this.handleRender_, this);\n};\n\ninherits(Heatmap, VectorLayer);\n\n\n/**\n * @param {Array.<string>} colors A list of colored.\n * @return {Uint8ClampedArray} An array.\n * @private\n */\nconst createGradient = function(colors) {\n  const width = 1;\n  const height = 256;\n  const context = createCanvasContext2D(width, height);\n\n  const gradient = context.createLinearGradient(0, 0, width, height);\n  const step = 1 / (colors.length - 1);\n  for (let i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.getImageData(0, 0, width, height).data;\n};\n\n\n/**\n * @return {string} Data URL for a circle.\n * @private\n */\nHeatmap.prototype.createCircle_ = function() {\n  const radius = this.getRadius();\n  const blur = this.getBlur();\n  const halfSize = radius + blur + 1;\n  const size = 2 * halfSize;\n  const context = createCanvasContext2D(size, size);\n  context.shadowOffsetX = context.shadowOffsetY = this.shadow_;\n  context.shadowBlur = blur;\n  context.shadowColor = '#000';\n  context.beginPath();\n  const center = halfSize - this.shadow_;\n  context.arc(center, center, radius, 0, Math.PI * 2, true);\n  context.fill();\n  return context.canvas.toDataURL();\n};\n\n\n/**\n * Return the blur size in pixels.\n * @return {number} Blur size in pixels.\n * @api\n * @observable\n */\nHeatmap.prototype.getBlur = function() {\n  return /** @type {number} */ (this.get(Property.BLUR));\n};\n\n\n/**\n * Return the gradient colors as array of strings.\n * @return {Array.<string>} Colors.\n * @api\n * @observable\n */\nHeatmap.prototype.getGradient = function() {\n  return /** @type {Array.<string>} */ (this.get(Property.GRADIENT));\n};\n\n\n/**\n * Return the size of the radius in pixels.\n * @return {number} Radius size in pixel.\n * @api\n * @observable\n */\nHeatmap.prototype.getRadius = function() {\n  return /** @type {number} */ (this.get(Property.RADIUS));\n};\n\n\n/**\n * @private\n */\nHeatmap.prototype.handleGradientChanged_ = function() {\n  this.gradient_ = createGradient(this.getGradient());\n};\n\n\n/**\n * @private\n */\nHeatmap.prototype.handleStyleChanged_ = function() {\n  this.circleImage_ = this.createCircle_();\n  this.styleCache_ = new Array(256);\n  this.changed();\n};\n\n\n/**\n * @param {module:ol/render/Event} event Post compose event\n * @private\n */\nHeatmap.prototype.handleRender_ = function(event) {\n  const context = event.context;\n  const canvas = context.canvas;\n  const image = context.getImageData(0, 0, canvas.width, canvas.height);\n  const view8 = image.data;\n  for (let i = 0, ii = view8.length; i < ii; i += 4) {\n    const alpha = view8[i + 3] * 4;\n    if (alpha) {\n      view8[i] = this.gradient_[alpha];\n      view8[i + 1] = this.gradient_[alpha + 1];\n      view8[i + 2] = this.gradient_[alpha + 2];\n    }\n  }\n  context.putImageData(image, 0, 0);\n};\n\n\n/**\n * Set the blur size in pixels.\n * @param {number} blur Blur size in pixels.\n * @api\n * @observable\n */\nHeatmap.prototype.setBlur = function(blur) {\n  this.set(Property.BLUR, blur);\n};\n\n\n/**\n * Set the gradient colors as array of strings.\n * @param {Array.<string>} colors Gradient.\n * @api\n * @observable\n */\nHeatmap.prototype.setGradient = function(colors) {\n  this.set(Property.GRADIENT, colors);\n};\n\n\n/**\n * Set the size of the radius in pixels.\n * @param {number} radius Radius size in pixel.\n * @api\n * @observable\n */\nHeatmap.prototype.setRadius = function(radius) {\n  this.set(Property.RADIUS, radius);\n};\n\nexport default Heatmap;\n","/**\n * @module ol/layer/Tile\n */\nimport {inherits} from '../util.js';\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport TileProperty from '../layer/TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {module:ol/source/Tile} [source] Source for this layer.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @constructor\n * @extends {module:ol/layer/Layer}\n * @fires module:ol/render/Event~RenderEvent\n * @param {module:ol/layer/Tile~Options=} opt_options Tile layer options.\n * @api\n */\nconst TileLayer = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const baseOptions = assign({}, options);\n\n  delete baseOptions.preload;\n  delete baseOptions.useInterimTilesOnError;\n  Layer.call(this,  /** @type {module:ol/layer/Layer~Options} */ (baseOptions));\n\n  this.setPreload(options.preload !== undefined ? options.preload : 0);\n  this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n    options.useInterimTilesOnError : true);\n\n  /**\n   * The layer type.\n   * @protected\n   * @type {module:ol/LayerType}\n   */\n  this.type = LayerType.TILE;\n\n};\n\ninherits(TileLayer, Layer);\n\n\n/**\n * Return the level as number to which we will preload tiles up to.\n * @return {number} The level to preload tiles up to.\n * @observable\n * @api\n */\nTileLayer.prototype.getPreload = function() {\n  return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n};\n\n\n/**\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\n * @function\n * @return {module:ol/source/Tile} Source.\n * @api\n */\nTileLayer.prototype.getSource;\n\n\n/**\n * Set the level as number to which we will preload tiles up to.\n * @param {number} preload The level to preload tiles up to.\n * @observable\n * @api\n */\nTileLayer.prototype.setPreload = function(preload) {\n  this.set(TileProperty.PRELOAD, preload);\n};\n\n\n/**\n * Whether we use interim tiles on error.\n * @return {boolean} Use interim tiles on error.\n * @observable\n * @api\n */\nTileLayer.prototype.getUseInterimTilesOnError = function() {\n  return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n};\n\n\n/**\n * Set whether we use interim tiles on error.\n * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n * @observable\n * @api\n */\nTileLayer.prototype.setUseInterimTilesOnError = function(useInterimTilesOnError) {\n  this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n};\nexport default TileLayer;\n","/**\n * @module ol/webgl\n */\n\n\n/**\n * Constants taken from goog.webgl\n */\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ONE = 1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const SRC_ALPHA = 0x0302;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const COLOR_ATTACHMENT0 = 0x8CE0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const COLOR_BUFFER_BIT = 0x00004000;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TRIANGLES = 0x0004;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TRIANGLE_STRIP = 0x0005;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ONE_MINUS_SRC_ALPHA = 0x0303;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const STREAM_DRAW = 0x88E0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const STATIC_DRAW = 0x88E4;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DYNAMIC_DRAW = 0x88E8;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const CULL_FACE = 0x0B44;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const BLEND = 0x0BE2;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const STENCIL_TEST = 0x0B90;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEPTH_TEST = 0x0B71;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const SCISSOR_TEST = 0x0C11;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const RGBA = 0x1908;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const FRAGMENT_SHADER = 0x8B30;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const VERTEX_SHADER = 0x8B31;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const LINK_STATUS = 0x8B82;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const LINEAR = 0x2601;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_MAG_FILTER = 0x2800;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_MIN_FILTER = 0x2801;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_WRAP_S = 0x2802;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_WRAP_T = 0x2803;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_2D = 0x0DE1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE0 = 0x84C0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const CLAMP_TO_EDGE = 0x812F;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const COMPILE_STATUS = 0x8B81;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const FRAMEBUFFER = 0x8D40;\n\n\n/** end of goog.webgl constants\n */\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst CONTEXT_IDS = [\n  'experimental-webgl',\n  'webgl',\n  'webkit-3d',\n  'moz-webgl'\n];\n\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n\n/**\n * Include debuggable shader sources.  Default is `true`. This should be set to\n * `false` for production builds.\n * @type {boolean}\n */\nexport const DEBUG = true;\n\n\n/**\n * The maximum supported WebGL texture size in pixels. If WebGL is not\n * supported, the value is set to `undefined`.\n * @type {number|undefined}\n */\nlet MAX_TEXTURE_SIZE; // value is set below\n\n\n/**\n * List of supported WebGL extensions.\n * @type {Array.<string>}\n */\nlet EXTENSIONS; // value is set below\n\n\n/**\n * True if both OpenLayers and browser support WebGL.\n * @const ol/has.WEBGL\n * @type {boolean}\n * @api\n */\nlet HAS = false;\n\n//TODO Remove side effects\nif (typeof window !== 'undefined' && 'WebGLRenderingContext' in window) {\n  try {\n    const canvas = /** @type {HTMLCanvasElement} */ (document.createElement('CANVAS'));\n    const gl = getContext(canvas, {failIfMajorPerformanceCaveat: true});\n    if (gl) {\n      HAS = true;\n      MAX_TEXTURE_SIZE = /** @type {number} */ (gl.getParameter(gl.MAX_TEXTURE_SIZE));\n      EXTENSIONS = gl.getSupportedExtensions();\n    }\n  } catch (e) {\n    // pass\n  }\n}\n\nexport {HAS, MAX_TEXTURE_SIZE, EXTENSIONS};\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n *\n * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  const output = Object(target);\n  for (let i = 1, ii = arguments.length; i < ii; ++i) {\n    const source = arguments[i];\n    if (source !== undefined && source !== null) {\n      for (const key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  const values = [];\n  for (const property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array.<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low  = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array.<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array.<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array.<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to modify.\n * @param {!Array.<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<*>} arr The array to sort (modifies original).\n * @param {Function} compareFnc Comparison function.\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array.<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array.<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n","/**\n * @module ol/source/CartoDB\n */\nimport {inherits} from '../util.js';\nimport {assign} from '../obj.js';\nimport SourceState from '../source/State.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [maxZoom=18] Max zoom.\n * @property {number} [minZoom] Minimum zoom.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {Object} [config] If using anonymous maps, the CartoDB config to use. See\n * {@link http://docs.cartodb.com/cartodb-platform/maps-api/anonymous-maps/}\n * for more detail.\n * If using named maps, a key-value lookup with the template parameters.\n * See {@link http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/}\n * for more detail.\n * @property {string} [map] If using named maps, this will be the name of the template to load.\n * See {@link http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/}\n * for more detail.\n * @property {string} account If using named maps, this will be the name of the template to load.\n */\n\n\n/**\n * @classdesc\n * Layer source for the CartoDB Maps API.\n *\n * @constructor\n * @extends {module:ol/source/XYZ}\n * @param {module:ol/source/CartoDB~Options=} options CartoDB options.\n * @api\n */\nconst CartoDB = function(options) {\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.account_ = options.account;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.mapId_ = options.map || '';\n\n  /**\n   * @type {!Object}\n   * @private\n   */\n  this.config_ = options.config || {};\n\n  /**\n   * @type {!Object.<string, CartoDBLayerInfo>}\n   * @private\n   */\n  this.templateCache_ = {};\n\n  XYZ.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 18,\n    minZoom: options.minZoom,\n    projection: options.projection,\n    state: SourceState.LOADING,\n    wrapX: options.wrapX\n  });\n  this.initializeMap_();\n};\n\ninherits(CartoDB, XYZ);\n\n\n/**\n * Returns the current config.\n * @return {!Object} The current configuration.\n * @api\n */\nCartoDB.prototype.getConfig = function() {\n  return this.config_;\n};\n\n\n/**\n * Updates the carto db config.\n * @param {Object} config a key-value lookup. Values will replace current values\n *     in the config.\n * @api\n */\nCartoDB.prototype.updateConfig = function(config) {\n  assign(this.config_, config);\n  this.initializeMap_();\n};\n\n\n/**\n * Sets the CartoDB config\n * @param {Object} config In the case of anonymous maps, a CartoDB configuration\n *     object.\n * If using named maps, a key-value lookup with the template parameters.\n * @api\n */\nCartoDB.prototype.setConfig = function(config) {\n  this.config_ = config || {};\n  this.initializeMap_();\n};\n\n\n/**\n * Issue a request to initialize the CartoDB map.\n * @private\n */\nCartoDB.prototype.initializeMap_ = function() {\n  const paramHash = JSON.stringify(this.config_);\n  if (this.templateCache_[paramHash]) {\n    this.applyTemplate_(this.templateCache_[paramHash]);\n    return;\n  }\n  let mapUrl = 'https://' + this.account_ + '.carto.com/api/v1/map';\n\n  if (this.mapId_) {\n    mapUrl += '/named/' + this.mapId_;\n  }\n\n  const client = new XMLHttpRequest();\n  client.addEventListener('load', this.handleInitResponse_.bind(this, paramHash));\n  client.addEventListener('error', this.handleInitError_.bind(this));\n  client.open('POST', mapUrl);\n  client.setRequestHeader('Content-type', 'application/json');\n  client.send(JSON.stringify(this.config_));\n};\n\n\n/**\n * Handle map initialization response.\n * @param {string} paramHash a hash representing the parameter set that was used\n *     for the request\n * @param {Event} event Event.\n * @private\n */\nCartoDB.prototype.handleInitResponse_ = function(paramHash, event) {\n  const client = /** @type {XMLHttpRequest} */ (event.target);\n  // status will be 0 for file:// urls\n  if (!client.status || client.status >= 200 && client.status < 300) {\n    let response;\n    try {\n      response = /** @type {CartoDBLayerInfo} */(JSON.parse(client.responseText));\n    } catch (err) {\n      this.setState(SourceState.ERROR);\n      return;\n    }\n    this.applyTemplate_(response);\n    this.templateCache_[paramHash] = response;\n    this.setState(SourceState.READY);\n  } else {\n    this.setState(SourceState.ERROR);\n  }\n};\n\n\n/**\n * @private\n * @param {Event} event Event.\n */\nCartoDB.prototype.handleInitError_ = function(event) {\n  this.setState(SourceState.ERROR);\n};\n\n\n/**\n * Apply the new tile urls returned by carto db\n * @param {CartoDBLayerInfo} data Result of carto db call.\n * @private\n */\nCartoDB.prototype.applyTemplate_ = function(data) {\n  const tilesUrl = 'https://' + data.cdn_url.https + '/' + this.account_ +\n      '/api/v1/map/' + data.layergroupid + '/{z}/{x}/{y}.png';\n  this.setUrl(tilesUrl);\n};\nexport default CartoDB;\n","/**\n * @module ol/source/Cluster\n */\n\nimport {getUid, inherits} from '../util.js';\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {scale as scaleCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {buffer, createEmpty, createOrUpdateFromCoordinate} from '../extent.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from '../source/Vector.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Minimum distance in pixels between clusters.\n * @property {module:ol/extent~Extent} [extent] Extent.\n * @property {function(module:ol/Feature):module:ol/geom/Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underyling source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {module:ol/source/Vector} source Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n *\n * @constructor\n * @param {module:ol/source/Cluster~Options=} options Cluster options.\n * @extends {module:ol/source/Vector}\n * @api\n */\nconst Cluster = function(options) {\n  VectorSource.call(this, {\n    attributions: options.attributions,\n    extent: options.extent,\n    projection: options.projection,\n    wrapX: options.wrapX\n  });\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.resolution = undefined;\n\n  /**\n   * @type {number}\n   * @protected\n   */\n  this.distance = options.distance !== undefined ? options.distance : 20;\n\n  /**\n   * @type {Array.<module:ol/Feature>}\n   * @protected\n   */\n  this.features = [];\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @return {module:ol/geom/Point} Cluster calculation point.\n   * @protected\n   */\n  this.geometryFunction = options.geometryFunction || function(feature) {\n    const geometry = /** @type {module:ol/geom/Point} */ (feature.getGeometry());\n    assert(geometry instanceof Point,\n      10); // The default `geometryFunction` can only handle `module:ol/geom/Point~Point` geometries\n    return geometry;\n  };\n\n  /**\n   * @type {module:ol/source/Vector}\n   * @protected\n   */\n  this.source = options.source;\n\n  listen(this.source, EventType.CHANGE, this.refresh, this);\n};\n\ninherits(Cluster, VectorSource);\n\n\n/**\n * Get the distance in pixels between clusters.\n * @return {number} Distance.\n * @api\n */\nCluster.prototype.getDistance = function() {\n  return this.distance;\n};\n\n\n/**\n * Get a reference to the wrapped source.\n * @return {module:ol/source/Vector} Source.\n * @api\n */\nCluster.prototype.getSource = function() {\n  return this.source;\n};\n\n\n/**\n * @inheritDoc\n */\nCluster.prototype.loadFeatures = function(extent, resolution, projection) {\n  this.source.loadFeatures(extent, resolution, projection);\n  if (resolution !== this.resolution) {\n    this.clear();\n    this.resolution = resolution;\n    this.cluster();\n    this.addFeatures(this.features);\n  }\n};\n\n\n/**\n * Set the distance in pixels between clusters.\n * @param {number} distance The distance in pixels.\n * @api\n */\nCluster.prototype.setDistance = function(distance) {\n  this.distance = distance;\n  this.refresh();\n};\n\n\n/**\n * handle the source changing\n * @override\n */\nCluster.prototype.refresh = function() {\n  this.clear();\n  this.cluster();\n  this.addFeatures(this.features);\n  VectorSource.prototype.refresh.call(this);\n};\n\n\n/**\n * @protected\n */\nCluster.prototype.cluster = function() {\n  if (this.resolution === undefined) {\n    return;\n  }\n  this.features.length = 0;\n  const extent = createEmpty();\n  const mapDistance = this.distance * this.resolution;\n  const features = this.source.getFeatures();\n\n  /**\n   * @type {!Object.<string, boolean>}\n   */\n  const clustered = {};\n\n  for (let i = 0, ii = features.length; i < ii; i++) {\n    const feature = features[i];\n    if (!(getUid(feature).toString() in clustered)) {\n      const geometry = this.geometryFunction(feature);\n      if (geometry) {\n        const coordinates = geometry.getCoordinates();\n        createOrUpdateFromCoordinate(coordinates, extent);\n        buffer(extent, mapDistance, extent);\n\n        let neighbors = this.source.getFeaturesInExtent(extent);\n        neighbors = neighbors.filter(function(neighbor) {\n          const uid = getUid(neighbor).toString();\n          if (!(uid in clustered)) {\n            clustered[uid] = true;\n            return true;\n          } else {\n            return false;\n          }\n        });\n        this.features.push(this.createCluster(neighbors));\n      }\n    }\n  }\n};\n\n\n/**\n * @param {Array.<module:ol/Feature>} features Features\n * @return {module:ol/Feature} The cluster feature.\n * @protected\n */\nCluster.prototype.createCluster = function(features) {\n  const centroid = [0, 0];\n  for (let i = features.length - 1; i >= 0; --i) {\n    const geometry = this.geometryFunction(features[i]);\n    if (geometry) {\n      addCoordinate(centroid, geometry.getCoordinates());\n    } else {\n      features.splice(i, 1);\n    }\n  }\n  scaleCoordinate(centroid, 1 / features.length);\n\n  const cluster = new Feature(new Point(centroid));\n  cluster.set('features', features);\n  return cluster;\n};\nexport default Cluster;\n","/**\n * @module ol/source/ImageArcGISRest\n */\nimport {inherits} from '../util.js';\nimport ImageWrapper from '../Image.js';\nimport {assert} from '../asserts.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport ImageSource, {defaultImageLoadFunction} from '../source/Image.js';\nimport {appendParams} from '../uri.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {module:ol/Image~LoadFunction} [imageLoadFunction] Optional function to load an image given\n * a URL.\n * @property {Object.<string,*>} params ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * {@link http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/}\n * for further reference.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {Array.<number>} [resolutions] Resolutions. If specified, requests will be made for\n * these resolutions only.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n */\n\n\n/**\n * @classdesc\n * Source for data from ArcGIS Rest services providing single, untiled images.\n * Useful when underlying map service has labels.\n *\n * If underlying map service is not using labels,\n * take advantage of ol image caching and use\n * {@link module:ol/source/TileArcGISRest} data source.\n *\n * @constructor\n * @fires ol/source/Image~ImageSourceEvent\n * @extends {module:ol/source/Image}\n * @param {module:ol/source/ImageArcGISRest~Options=} opt_options Image ArcGIS Rest Options.\n * @api\n */\nconst ImageArcGISRest = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {module:ol/Image~LoadFunction}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : defaultImageLoadFunction;\n\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {module:ol/Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.imageSize_ = [0, 0];\n\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageArcGISRest, ImageSource);\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageArcGISRest.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageArcGISRest.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n  pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), extent)) {\n    return image;\n  }\n\n  const params = {\n    'F': 'image',\n    'FORMAT': 'PNG32',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  extent = extent.slice();\n  const centerX = (extent[0] + extent[2]) / 2;\n  const centerY = (extent[1] + extent[3]) / 2;\n  if (this.ratio_ != 1) {\n    const halfWidth = this.ratio_ * getWidth(extent) / 2;\n    const halfHeight = this.ratio_ * getHeight(extent) / 2;\n    extent[0] = centerX - halfWidth;\n    extent[1] = centerY - halfHeight;\n    extent[2] = centerX + halfWidth;\n    extent[3] = centerY + halfHeight;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  // Compute an integer width and height.\n  const width = Math.ceil(getWidth(extent) / imageResolution);\n  const height = Math.ceil(getHeight(extent) / imageResolution);\n\n  // Modify the extent to match the integer width and height.\n  extent[0] = centerX - imageResolution * width / 2;\n  extent[2] = centerX + imageResolution * width / 2;\n  extent[1] = centerY - imageResolution * height / 2;\n  extent[3] = centerY + imageResolution * height / 2;\n\n  this.imageSize_[0] = width;\n  this.imageSize_[1] = height;\n\n  const url = this.getRequestUrl_(extent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new ImageWrapper(extent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {module:ol/Image~LoadFunction} The image load function.\n * @api\n */\nImageArcGISRest.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/size~Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageArcGISRest.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n  // ArcGIS Server only wants the numeric portion of the projection ID.\n  const srid = projection.getCode().split(':').pop();\n\n  params['SIZE'] = size[0] + ',' + size[1];\n  params['BBOX'] = extent.join(',');\n  params['BBOXSR'] = srid;\n  params['IMAGESR'] = srid;\n  params['DPI'] = Math.round(90 * pixelRatio);\n\n  const url = this.url_;\n\n  const modifiedUrl = url\n    .replace(/MapServer\\/?$/, 'MapServer/export')\n    .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n  if (modifiedUrl == url) {\n    assert(false, 50); // `options.featureTypes` should be an Array\n  }\n  return appendParams(modifiedUrl, params);\n};\n\n\n/**\n * Return the URL used for this ArcGIS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageArcGISRest.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {module:ol/Image~LoadFunction} imageLoadFunction Image load function.\n * @api\n */\nImageArcGISRest.prototype.setImageLoadFunction = function(imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageArcGISRest.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageArcGISRest.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.image_ = null;\n  this.changed();\n};\nexport default ImageArcGISRest;\n","/**\n * @module ol/source/ImageCanvas\n */\nimport {inherits} from '../util.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport {containsExtent, getHeight, getWidth, scaleFromCenter} from '../extent.js';\nimport ImageSource from '../source/Image.js';\n\n\n/**\n * A function returning the canvas element (`{HTMLCanvasElement}`)\n * used by the source as an image. The arguments passed to the function are:\n * {@link module:ol/extent~Extent} the image extent, `{number}` the image resolution,\n * `{number}` the device pixel ratio, {@link module:ol/size~Size} the image size, and\n * {@link module:ol/proj/Projection} the image projection. The canvas returned by\n * this function is cached by the source. The this keyword inside the function\n * references the {@link module:ol/source/ImageCanvas}.\n *\n * @typedef {function(this:module:ol/ImageCanvas, module:ol/extent~Extent, number,\n *     number, module:ol/size~Size, module:ol/proj/Projection): HTMLCanvasElement} FunctionType\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {module:ol/source/ImageCanvas~FunctionType} [canvasFunction] Canvas function.\n * The function returning the canvas element used by the source\n * as an image. The arguments passed to the function are: `{module:ol/extent~Extent}` the\n * image extent, `{number}` the image resolution, `{number}` the device pixel\n * ratio, `{module:ol/size~Size}` the image size, and `{module:ol/proj/Projection~Projection}` the image\n * projection. The canvas returned by this function is cached by the source. If\n * the value returned by the function is later changed then\n * `changed` should be called on the source for the source to\n * invalidate the current cached image. See @link: {@link module:ol/Observable~Observable#changed}\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. 1 means canvases are the size of the map viewport, 2 means twice the\n * width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array.<number>} [resolutions] Resolutions.\n * If specified, new canvases will be created for these resolutions\n * @property {module:ol/source/State} [state] Source state.\n */\n\n\n/**\n * @classdesc\n * Base class for image sources where a canvas element is the image.\n *\n * @constructor\n * @extends {module:ol/source/Image}\n * @param {module:ol/source/ImageCanvas~Options=} options ImageCanvas options.\n * @api\n */\nconst ImageCanvasSource = function(options) {\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions,\n    state: options.state\n  });\n\n  /**\n   * @private\n   * @type {module:ol/source/ImageCanvas~FunctionType}\n   */\n  this.canvasFunction_ = options.canvasFunction;\n\n  /**\n   * @private\n   * @type {module:ol/ImageCanvas}\n   */\n  this.canvas_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ?\n    options.ratio : 1.5;\n\n};\n\ninherits(ImageCanvasSource, ImageSource);\n\n\n/**\n * @inheritDoc\n */\nImageCanvasSource.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n  resolution = this.findNearestResolution(resolution);\n\n  let canvas = this.canvas_;\n  if (canvas &&\n      this.renderedRevision_ == this.getRevision() &&\n      canvas.getResolution() == resolution &&\n      canvas.getPixelRatio() == pixelRatio &&\n      containsExtent(canvas.getExtent(), extent)) {\n    return canvas;\n  }\n\n  extent = extent.slice();\n  scaleFromCenter(extent, this.ratio_);\n  const width = getWidth(extent) / resolution;\n  const height = getHeight(extent) / resolution;\n  const size = [width * pixelRatio, height * pixelRatio];\n\n  const canvasElement = this.canvasFunction_(\n    extent, resolution, pixelRatio, size, projection);\n  if (canvasElement) {\n    canvas = new ImageCanvas(extent, resolution, pixelRatio, canvasElement);\n  }\n  this.canvas_ = canvas;\n  this.renderedRevision_ = this.getRevision();\n\n  return canvas;\n};\nexport default ImageCanvasSource;\n","/**\n * @module ol/source/TileArcGISRest\n */\nimport {inherits} from '../util.js';\nimport {createEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {assign} from '../obj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.\n * Note that you must provide a `crossOrigin` value if you are using the WebGL renderer\n * or if you want to access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image}\n * for more detail.\n * @property {Object.<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\n * default. `TRANSPARENT` is `true` by default.  `BBOX, `SIZE`, `BBOXSR`,\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\n * override the default service layer visibility. See\n * {@link http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/}\n * for further reference.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\n * The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\n * url should include /MapServer or /ImageServer.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\n * transition, pass `transition: 0`.\n * @property {Array.<string>} urls ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\n * Service supports multiple urls for export requests.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from ArcGIS Rest services. Map and Image\n * Services are supported.\n *\n * For cached ArcGIS services, better performance is available using the\n * {@link module:ol/source/XYZ~XYZ} data source.\n *\n * @constructor\n * @extends {module:ol/source/TileImage}\n * @param {module:ol/source/TileArcGISRest~Options=} opt_options Tile ArcGIS Rest options.\n * @api\n */\nconst TileArcGISRest = function(opt_options) {\n\n  const options = opt_options || {};\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.setKey(this.getKeyForParams_());\n};\n\ninherits(TileArcGISRest, TileImage);\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileArcGISRest.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileArcGISRest.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/size~Size} tileSize Tile size.\n * @param {module:ol/extent~Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileArcGISRest.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  // ArcGIS Server only wants the numeric portion of the projection ID.\n  const srid = projection.getCode().split(':').pop();\n\n  params['SIZE'] = tileSize[0] + ',' + tileSize[1];\n  params['BBOX'] = tileExtent.join(',');\n  params['BBOXSR'] = srid;\n  params['IMAGESR'] = srid;\n  params['DPI'] = Math.round(\n    params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio\n  );\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(tileCoordHash(tileCoord), urls.length);\n    url = urls[index];\n  }\n\n  const modifiedUrl = url\n    .replace(/MapServer\\/?$/, 'MapServer/export')\n    .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n  return appendParams(modifiedUrl, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileArcGISRest.prototype.getTilePixelRatio = function(pixelRatio) {\n  return /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @inheritDoc\n */\nTileArcGISRest.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  const tileExtent = tileGrid.getTileCoordExtent(\n    tileCoord, this.tmpExtent_);\n  let tileSize = toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  if (pixelRatio != 1) {\n    tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  // Apply default params and override with user specified values.\n  const baseParams = {\n    'F': 'image',\n    'FORMAT': 'PNG32',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileArcGISRest.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.setKey(this.getKeyForParams_());\n};\nexport default TileArcGISRest;\n","/**\n * @module ol/source/TileDebug\n */\nimport {inherits} from '../util.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {toSize} from '../size.js';\nimport TileSource from '../source/Tile.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n\n/**\n * @constructor\n * @extends {module:ol/Tile}\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/size~Size} tileSize Tile size.\n * @param {string} text Text.\n */\nconst LabeledTile = function(tileCoord, tileSize, text) {\n\n  Tile.call(this, tileCoord, TileState.LOADED);\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.tileSize_ = tileSize;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.text_ = text;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = null;\n\n};\ninherits(LabeledTile, Tile);\n\n\n/**\n * Get the image element for this tile.\n * @return {HTMLCanvasElement} Image.\n */\nLabeledTile.prototype.getImage = function() {\n  if (this.canvas_) {\n    return this.canvas_;\n  } else {\n    const tileSize = this.tileSize_;\n    const context = createCanvasContext2D(tileSize[0], tileSize[1]);\n\n    context.strokeStyle = 'black';\n    context.strokeRect(0.5, 0.5, tileSize[0] + 0.5, tileSize[1] + 0.5);\n\n    context.fillStyle = 'black';\n    context.textAlign = 'center';\n    context.textBaseline = 'middle';\n    context.font = '24px sans-serif';\n    context.fillText(this.text_, tileSize[0] / 2, tileSize[1] / 2);\n\n    this.canvas_ = context.canvas;\n    return context.canvas;\n  }\n};\n\n\n/**\n * @override\n */\nLabeledTile.prototype.load = function() {};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * A pseudo tile source, which does not fetch tiles from a server, but renders\n * a grid outline for the tile grid/projection along with the coordinates for\n * each tile. See examples/canvas-tiles for an example.\n *\n * Uses Canvas context2d, so requires Canvas support.\n *\n * @constructor\n * @extends {module:ol/source/Tile}\n * @param {module:ol/source/TileDebug~Options=} options Debug tile options.\n * @api\n */\nconst TileDebug = function(options) {\n\n  TileSource.call(this, {\n    opaque: false,\n    projection: options.projection,\n    tileGrid: options.tileGrid,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true\n  });\n\n};\n\ninherits(TileDebug, TileSource);\n\n\n/**\n * @inheritDoc\n */\nTileDebug.prototype.getTile = function(z, x, y) {\n  const tileCoordKey = getKeyZXY(z, x, y);\n  if (this.tileCache.containsKey(tileCoordKey)) {\n    return /** @type {!module:ol/source/TileDebug~LabeledTile} */ (this.tileCache.get(tileCoordKey));\n  } else {\n    const tileSize = toSize(this.tileGrid.getTileSize(z));\n    const tileCoord = [z, x, y];\n    const textTileCoord = this.getTileCoordForTileUrlFunction(tileCoord);\n    const text = !textTileCoord ? '' :\n      this.getTileCoordForTileUrlFunction(textTileCoord).toString();\n    const tile = new LabeledTile(tileCoord, tileSize, text);\n    this.tileCache.set(tileCoordKey, tile);\n    return tile;\n  }\n};\n\n\nexport default TileDebug;\n","/**\n * @module ol/source\n */\n\nexport {default as BingMaps} from './source/BingMaps.js';\nexport {default as CartoDB} from './source/CartoDB.js';\nexport {default as Cluster} from './source/Cluster.js';\nexport {default as Image} from './source/Image.js';\nexport {default as ImageArcGISRest} from './source/ImageArcGISRest.js';\nexport {default as ImageCanvas} from './source/ImageCanvas.js';\nexport {default as ImageMapGuide} from './source/ImageMapGuide.js';\nexport {default as ImageStatic} from './source/ImageStatic.js';\nexport {default as ImageWMS} from './source/ImageWMS.js';\nexport {default as OSM} from './source/OSM.js';\nexport {default as Raster} from './source/Raster.js';\nexport {default as Source} from './source/Source.js';\nexport {default as Stamen} from './source/Stamen.js';\nexport {default as Tile} from './source/Tile.js';\nexport {default as TileArcGISRest} from './source/TileArcGISRest.js';\nexport {default as TileDebug} from './source/TileDebug.js';\nexport {default as TileImage} from './source/TileImage.js';\nexport {default as TileJSON} from './source/TileJSON.js';\nexport {default as TileWMS} from './source/TileWMS.js';\nexport {default as UrlTile} from './source/UrlTile.js';\nexport {default as UTFGrid} from './source/UTFGrid.js';\nexport {default as Vector} from './source/Vector.js';\nexport {default as WMTS} from './source/WMTS.js';\nexport {default as XYZ} from './source/XYZ.js';\nexport {default as Zoomify} from './source/Zoomify.js';\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array.<number>} Transform\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {module:ol/transform~Transform}\n */\nconst tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!module:ol/transform~Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @return {!module:ol/transform~Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!module:ol/transform~Transform} transform1 Transform parameters of matrix 1.\n * @param {!module:ol/transform~Transform} transform2 Transform parameters of matrix 2.\n * @return {!module:ol/transform~Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!module:ol/transform~Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!module:ol/transform~Transform} transform1 Matrix to set transform to.\n * @param {!module:ol/transform~Transform} transform2 Matrix to set transform from.\n * @return {!module:ol/transform~Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {module:ol/transform~Transform} transform The transformation.\n * @param {module:ol/coordinate~Coordinate|module:ol~Pixel} coordinate The coordinate to transform.\n * @return {module:ol/coordinate~Coordinate|module:ol~Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!module:ol/transform~Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!module:ol/transform~Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n\n/**\n * Applies translation to the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!module:ol/transform~Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!module:ol/transform~Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!module:ol/transform~Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n\n/**\n * Invert the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @return {!module:ol/transform~Transform} Inverse of the transform.\n */\nexport function invert(transform) {\n  const det = determinant(transform);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = transform[0];\n  const b = transform[1];\n  const c = transform[2];\n  const d = transform[3];\n  const e = transform[4];\n  const f = transform[5];\n\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n\n  return transform;\n}\n\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!module:ol/transform~Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../util.js';\nimport XYZ from '../source/XYZ.js';\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {module:ol/source/XYZ}\n * @param {module:ol/source/OSM~Options=} [opt_options] Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\nexport default OSM;\n","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh  = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      const y = Math.exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array.<Array.<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array.<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n","/**\n * @module ol/source/Vector\n */\n\nimport {getUid, inherits} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, UNDEFINED} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty, getValues} from '../obj.js';\nimport Source from '../source/Source.js';\nimport SourceState from '../source/State.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(module:ol/extent~Extent, number): Array.<module:ol/extent~Extent>} LoadingStrategy\n * @api\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type Type.\n * @param {module:ol/Feature=} opt_feature Feature.\n */\nexport const VectorSourceEvent = function(type, opt_feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being added or removed.\n   * @type {module:ol/Feature|undefined}\n   * @api\n   */\n  this.feature = opt_feature;\n\n};\ninherits(VectorSourceEvent, Event);\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {Array.<module:ol/Feature>|module:ol/Collection.<module:ol/Feature>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {module:ol/format/Feature} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {module:ol/featureloader~FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {module:ol/source/Vector~LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|module:ol/featureloader~FeatureUrlfunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlfunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @constructor\n * @extends {module:ol/source/Source}\n * @fires ol/source/Vector~VectorSourceEvent\n * @param {module:ol/source/Vector~Options=} opt_options Vector source options.\n * @api\n */\nconst VectorSource = function(opt_options) {\n\n  const options = opt_options || {};\n\n  Source.call(this, {\n    attributions: options.attributions,\n    projection: undefined,\n    state: SourceState.READY,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true\n  });\n\n  /**\n   * @private\n   * @type {module:ol/featureloader~FeatureLoader}\n   */\n  this.loader_ = UNDEFINED;\n\n  /**\n   * @private\n   * @type {module:ol/format/Feature|undefined}\n   */\n  this.format_ = options.format;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n  /**\n   * @private\n   * @type {string|module:ol/featureloader~FeatureUrlFunction|undefined}\n   */\n  this.url_ = options.url;\n\n  if (options.loader !== undefined) {\n    this.loader_ = options.loader;\n  } else if (this.url_ !== undefined) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    // create a XHR feature loader for \"url\" and \"format\"\n    this.loader_ = xhr(this.url_, /** @type {module:ol/format/Feature} */ (this.format_));\n  }\n\n  /**\n   * @private\n   * @type {module:ol/source/Vector~LoadingStrategy}\n   */\n  this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n\n  const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n  /**\n   * @private\n   * @type {module:ol/structs/RBush.<module:ol/Feature>}\n   */\n  this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n  /**\n   * @private\n   * @type {module:ol/structs/RBush.<{extent: module:ol/extent~Extent}>}\n   */\n  this.loadedExtentsRtree_ = new RBush();\n\n  /**\n   * @private\n   * @type {!Object.<string, module:ol/Feature>}\n   */\n  this.nullGeometryFeatures_ = {};\n\n  /**\n   * A lookup of features by id (the return from feature.getId()).\n   * @private\n   * @type {!Object.<string, module:ol/Feature>}\n   */\n  this.idIndex_ = {};\n\n  /**\n   * A lookup of features without id (keyed by getUid(feature)).\n   * @private\n   * @type {!Object.<string, module:ol/Feature>}\n   */\n  this.undefIdIndex_ = {};\n\n  /**\n   * @private\n   * @type {Object.<string, Array.<module:ol/events~EventsKey>>}\n   */\n  this.featureChangeKeys_ = {};\n\n  /**\n   * @private\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   */\n  this.featuresCollection_ = null;\n\n  let collection, features;\n  if (options.features instanceof Collection) {\n    collection = options.features;\n    features = collection.getArray();\n  } else if (Array.isArray(options.features)) {\n    features = options.features;\n  }\n  if (!useSpatialIndex && collection === undefined) {\n    collection = new Collection(features);\n  }\n  if (features !== undefined) {\n    this.addFeaturesInternal(features);\n  }\n  if (collection !== undefined) {\n    this.bindFeaturesCollection_(collection);\n  }\n\n};\n\ninherits(VectorSource, Source);\n\n\n/**\n * Add a single feature to the source.  If you want to add a batch of features\n * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n * instead. A feature will not be added to the source if feature with\n * the same id is already there. The reason for this behavior is to avoid\n * feature duplication when using bbox or tile loading strategies.\n * @param {module:ol/Feature} feature Feature to add.\n * @api\n */\nVectorSource.prototype.addFeature = function(feature) {\n  this.addFeatureInternal(feature);\n  this.changed();\n};\n\n\n/**\n * Add a feature without firing a `change` event.\n * @param {module:ol/Feature} feature Feature.\n * @protected\n */\nVectorSource.prototype.addFeatureInternal = function(feature) {\n  const featureKey = getUid(feature).toString();\n\n  if (!this.addToIndex_(featureKey, feature)) {\n    return;\n  }\n\n  this.setupChangeEvents_(featureKey, feature);\n\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const extent = geometry.getExtent();\n    if (this.featuresRtree_) {\n      this.featuresRtree_.insert(extent, feature);\n    }\n  } else {\n    this.nullGeometryFeatures_[featureKey] = feature;\n  }\n\n  this.dispatchEvent(\n    new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n};\n\n\n/**\n * @param {string} featureKey Unique identifier for the feature.\n * @param {module:ol/Feature} feature The feature.\n * @private\n */\nVectorSource.prototype.setupChangeEvents_ = function(featureKey, feature) {\n  this.featureChangeKeys_[featureKey] = [\n    listen(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this),\n    listen(feature, ObjectEventType.PROPERTYCHANGE,\n      this.handleFeatureChange_, this)\n  ];\n};\n\n\n/**\n * @param {string} featureKey Unique identifier for the feature.\n * @param {module:ol/Feature} feature The feature.\n * @return {boolean} The feature is \"valid\", in the sense that it is also a\n *     candidate for insertion into the Rtree.\n * @private\n */\nVectorSource.prototype.addToIndex_ = function(featureKey, feature) {\n  let valid = true;\n  const id = feature.getId();\n  if (id !== undefined) {\n    if (!(id.toString() in this.idIndex_)) {\n      this.idIndex_[id.toString()] = feature;\n    } else {\n      valid = false;\n    }\n  } else {\n    assert(!(featureKey in this.undefIdIndex_),\n      30); // The passed `feature` was already added to the source\n    this.undefIdIndex_[featureKey] = feature;\n  }\n  return valid;\n};\n\n\n/**\n * Add a batch of features to the source.\n * @param {Array.<module:ol/Feature>} features Features to add.\n * @api\n */\nVectorSource.prototype.addFeatures = function(features) {\n  this.addFeaturesInternal(features);\n  this.changed();\n};\n\n\n/**\n * Add features without firing a `change` event.\n * @param {Array.<module:ol/Feature>} features Features.\n * @protected\n */\nVectorSource.prototype.addFeaturesInternal = function(features) {\n  const extents = [];\n  const newFeatures = [];\n  const geometryFeatures = [];\n\n  for (let i = 0, length = features.length; i < length; i++) {\n    const feature = features[i];\n    const featureKey = getUid(feature).toString();\n    if (this.addToIndex_(featureKey, feature)) {\n      newFeatures.push(feature);\n    }\n  }\n\n  for (let i = 0, length = newFeatures.length; i < length; i++) {\n    const feature = newFeatures[i];\n    const featureKey = getUid(feature).toString();\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      extents.push(extent);\n      geometryFeatures.push(feature);\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n  }\n  if (this.featuresRtree_) {\n    this.featuresRtree_.load(extents, geometryFeatures);\n  }\n\n  for (let i = 0, length = newFeatures.length; i < length; i++) {\n    this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n  }\n};\n\n\n/**\n * @param {!module:ol/Collection.<module:ol/Feature>} collection Collection.\n * @private\n */\nVectorSource.prototype.bindFeaturesCollection_ = function(collection) {\n  let modifyingCollection = false;\n  listen(this, VectorEventType.ADDFEATURE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        collection.push(evt.feature);\n        modifyingCollection = false;\n      }\n    });\n  listen(this, VectorEventType.REMOVEFEATURE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        collection.remove(evt.feature);\n        modifyingCollection = false;\n      }\n    });\n  listen(collection, CollectionEventType.ADD,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        this.addFeature(/** @type {module:ol/Feature} */ (evt.element));\n        modifyingCollection = false;\n      }\n    }, this);\n  listen(collection, CollectionEventType.REMOVE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        this.removeFeature(/** @type {module:ol/Feature} */ (evt.element));\n        modifyingCollection = false;\n      }\n    }, this);\n  this.featuresCollection_ = collection;\n};\n\n\n/**\n * Remove all features from the source.\n * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector~VectorSourceEvent#removefeature} events.\n * @api\n */\nVectorSource.prototype.clear = function(opt_fast) {\n  if (opt_fast) {\n    for (const featureId in this.featureChangeKeys_) {\n      const keys = this.featureChangeKeys_[featureId];\n      keys.forEach(unlistenByKey);\n    }\n    if (!this.featuresCollection_) {\n      this.featureChangeKeys_ = {};\n      this.idIndex_ = {};\n      this.undefIdIndex_ = {};\n    }\n  } else {\n    if (this.featuresRtree_) {\n      this.featuresRtree_.forEach(this.removeFeatureInternal, this);\n      for (const id in this.nullGeometryFeatures_) {\n        this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n      }\n    }\n  }\n  if (this.featuresCollection_) {\n    this.featuresCollection_.clear();\n  }\n\n  if (this.featuresRtree_) {\n    this.featuresRtree_.clear();\n  }\n  this.loadedExtentsRtree_.clear();\n  this.nullGeometryFeatures_ = {};\n\n  const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n  this.dispatchEvent(clearEvent);\n  this.changed();\n};\n\n\n/**\n * Iterate through all features on the source, calling the provided callback\n * with each one.  If the callback returns any \"truthy\" value, iteration will\n * stop and the function will return the same value.\n * Note: this function only iterate through the feature that have a defined geometry.\n *\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     on the source.  Return a truthy value to stop iteration.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeature = function(callback) {\n  if (this.featuresRtree_) {\n    return this.featuresRtree_.forEach(callback);\n  } else if (this.featuresCollection_) {\n    return this.featuresCollection_.forEach(callback);\n  }\n};\n\n\n/**\n * Iterate through all features whose geometries contain the provided\n * coordinate, calling the callback with each feature.  If the callback returns\n * a \"truthy\" value, iteration will stop and the function will return the same\n * value.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose goemetry contains the provided coordinate.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n */\nVectorSource.prototype.forEachFeatureAtCoordinateDirect = function(coordinate, callback) {\n  const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n  return this.forEachFeatureInExtent(extent, function(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry.intersectsCoordinate(coordinate)) {\n      return callback(feature);\n    } else {\n      return undefined;\n    }\n  });\n};\n\n\n/**\n * Iterate through all features whose bounding box intersects the provided\n * extent (note that the feature's geometry may not intersect the extent),\n * calling the callback with each feature.  If the callback returns a \"truthy\"\n * value, iteration will stop and the function will return the same value.\n *\n * If you are interested in features whose geometry intersects an extent, call\n * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n *\n * When `useSpatialIndex` is set to false, this method will loop through all\n * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose bounding box intersects the provided extent.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeatureInExtent = function(extent, callback) {\n  if (this.featuresRtree_) {\n    return this.featuresRtree_.forEachInExtent(extent, callback);\n  } else if (this.featuresCollection_) {\n    return this.featuresCollection_.forEach(callback);\n  }\n};\n\n\n/**\n * Iterate through all features whose geometry intersects the provided extent,\n * calling the callback with each feature.  If the callback returns a \"truthy\"\n * value, iteration will stop and the function will return the same value.\n *\n * If you only want to test for bounding box intersection, call the\n * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose geometry intersects the provided extent.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeatureIntersectingExtent = function(extent, callback) {\n  return this.forEachFeatureInExtent(extent,\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    function(feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsExtent(extent)) {\n        const result = callback(feature);\n        if (result) {\n          return result;\n        }\n      }\n    });\n};\n\n\n/**\n * Get the features collection associated with this source. Will be `null`\n * unless the source was configured with `useSpatialIndex` set to `false`, or\n * with an {@link module:ol/Collection} as `features`.\n * @return {module:ol/Collection.<module:ol/Feature>} The collection of features.\n * @api\n */\nVectorSource.prototype.getFeaturesCollection = function() {\n  return this.featuresCollection_;\n};\n\n\n/**\n * Get all features on the source in random order.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeatures = function() {\n  let features;\n  if (this.featuresCollection_) {\n    features = this.featuresCollection_.getArray();\n  } else if (this.featuresRtree_) {\n    features = this.featuresRtree_.getAll();\n    if (!isEmpty(this.nullGeometryFeatures_)) {\n      extend(features, getValues(this.nullGeometryFeatures_));\n    }\n  }\n  return (\n    /** @type {Array.<module:ol/Feature>} */ (features)\n  );\n};\n\n\n/**\n * Get all features whose geometry intersects the provided coordinate.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeaturesAtCoordinate = function(coordinate) {\n  const features = [];\n  this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n    features.push(feature);\n  });\n  return features;\n};\n\n\n/**\n * Get all features in the provided extent.  Note that this returns an array of\n * all features intersecting the given extent in random order (so it may include\n * features whose geometries do not intersect the extent).\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeaturesInExtent = function(extent) {\n  return this.featuresRtree_.getInExtent(extent);\n};\n\n\n/**\n * Get the closest feature to the provided coordinate.\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {function(module:ol/Feature):boolean=} opt_filter Feature filter function.\n *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n *     and it should return a boolean value. By default, no filtering is made.\n * @return {module:ol/Feature} Closest feature.\n * @api\n */\nVectorSource.prototype.getClosestFeatureToCoordinate = function(coordinate, opt_filter) {\n  // Find the closest feature using branch and bound.  We start searching an\n  // infinite extent, and find the distance from the first feature found.  This\n  // becomes the closest feature.  We then compute a smaller extent which any\n  // closer feature must intersect.  We continue searching with this smaller\n  // extent, trying to find a closer feature.  Every time we find a closer\n  // feature, we update the extent being searched so that any even closer\n  // feature must intersect it.  We continue until we run out of features.\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let closestFeature = null;\n  const closestPoint = [NaN, NaN];\n  let minSquaredDistance = Infinity;\n  const extent = [-Infinity, -Infinity, Infinity, Infinity];\n  const filter = opt_filter ? opt_filter : TRUE;\n  this.featuresRtree_.forEachInExtent(extent,\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     */\n    function(feature) {\n      if (filter(feature)) {\n        const geometry = feature.getGeometry();\n        const previousMinSquaredDistance = minSquaredDistance;\n        minSquaredDistance = geometry.closestPointXY(\n          x, y, closestPoint, minSquaredDistance);\n        if (minSquaredDistance < previousMinSquaredDistance) {\n          closestFeature = feature;\n          // This is sneaky.  Reduce the extent that it is currently being\n          // searched while the R-Tree traversal using this same extent object\n          // is still in progress.  This is safe because the new extent is\n          // strictly contained by the old extent.\n          const minDistance = Math.sqrt(minSquaredDistance);\n          extent[0] = x - minDistance;\n          extent[1] = y - minDistance;\n          extent[2] = x + minDistance;\n          extent[3] = y + minDistance;\n        }\n      }\n    });\n  return closestFeature;\n};\n\n\n/**\n * Get the extent of the features currently in the source.\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent. If provided, no new extent\n *     will be created. Instead, that extent's coordinates will be overwritten.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nVectorSource.prototype.getExtent = function(opt_extent) {\n  return this.featuresRtree_.getExtent(opt_extent);\n};\n\n\n/**\n * Get a feature by its identifier (the value returned by feature.getId()).\n * Note that the index treats string and numeric identifiers as the same.  So\n * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n *\n * @param {string|number} id Feature identifier.\n * @return {module:ol/Feature} The feature (or `null` if not found).\n * @api\n */\nVectorSource.prototype.getFeatureById = function(id) {\n  const feature = this.idIndex_[id.toString()];\n  return feature !== undefined ? feature : null;\n};\n\n\n/**\n * Get the format associated with this source.\n *\n * @return {module:ol/format/Feature|undefined} The feature format.\n * @api\n */\nVectorSource.prototype.getFormat = function() {\n  return this.format_;\n};\n\n\n/**\n * @return {boolean} The source can have overlapping geometries.\n */\nVectorSource.prototype.getOverlaps = function() {\n  return this.overlaps_;\n};\n\n\n/**\n * @override\n */\nVectorSource.prototype.getResolutions = function() {};\n\n\n/**\n * Get the url associated with this source.\n *\n * @return {string|module:ol/featureloader~FeatureUrlFunction|undefined} The url.\n * @api\n */\nVectorSource.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n * @private\n */\nVectorSource.prototype.handleFeatureChange_ = function(event) {\n  const feature = /** @type {module:ol/Feature} */ (event.target);\n  const featureKey = getUid(feature).toString();\n  const geometry = feature.getGeometry();\n  if (!geometry) {\n    if (!(featureKey in this.nullGeometryFeatures_)) {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n  } else {\n    const extent = geometry.getExtent();\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.update(extent, feature);\n      }\n    }\n  }\n  const id = feature.getId();\n  if (id !== undefined) {\n    const sid = id.toString();\n    if (featureKey in this.undefIdIndex_) {\n      delete this.undefIdIndex_[featureKey];\n      this.idIndex_[sid] = feature;\n    } else {\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    }\n  } else {\n    if (!(featureKey in this.undefIdIndex_)) {\n      this.removeFromIdIndex_(feature);\n      this.undefIdIndex_[featureKey] = feature;\n    }\n  }\n  this.changed();\n  this.dispatchEvent(new VectorSourceEvent(\n    VectorEventType.CHANGEFEATURE, feature));\n};\n\n/**\n * Returns true if the feature is contained within the source.\n * @param {module:ol/Feature} feature Feature.\n * @return {boolean} Has feature.\n * @api\n */\nVectorSource.prototype.hasFeature = function(feature) {\n  const id = feature.getId();\n  if (id !== undefined) {\n    return id in this.idIndex_;\n  } else {\n    const featureKey = getUid(feature).toString();\n    return featureKey in this.undefIdIndex_;\n  }\n};\n\n/**\n * @return {boolean} Is empty.\n */\nVectorSource.prototype.isEmpty = function() {\n  return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n};\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {module:ol/proj/Projection} projection Projection.\n */\nVectorSource.prototype.loadFeatures = function(extent, resolution, projection) {\n  const loadedExtentsRtree = this.loadedExtentsRtree_;\n  const extentsToLoad = this.strategy_(extent, resolution);\n  for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n    const extentToLoad = extentsToLoad[i];\n    const alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n      /**\n       * @param {{extent: module:ol/extent~Extent}} object Object.\n       * @return {boolean} Contains.\n       */\n      function(object) {\n        return containsExtent(object.extent, extentToLoad);\n      });\n    if (!alreadyLoaded) {\n      this.loader_.call(this, extentToLoad, resolution, projection);\n      loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n    }\n  }\n};\n\n\n/**\n * Remove an extent from the list of loaded extents.\n * @param {module:ol/extent~Extent} extent Extent.\n * @api\n */\nVectorSource.prototype.removeLoadedExtent = function(extent) {\n  const loadedExtentsRtree = this.loadedExtentsRtree_;\n  let obj;\n  loadedExtentsRtree.forEachInExtent(extent, function(object) {\n    if (equals(object.extent, extent)) {\n      obj = object;\n      return true;\n    }\n  });\n  if (obj) {\n    loadedExtentsRtree.remove(obj);\n  }\n};\n\n\n/**\n * Remove a single feature from the source.  If you want to remove all features\n * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n * instead.\n * @param {module:ol/Feature} feature Feature to remove.\n * @api\n */\nVectorSource.prototype.removeFeature = function(feature) {\n  const featureKey = getUid(feature).toString();\n  if (featureKey in this.nullGeometryFeatures_) {\n    delete this.nullGeometryFeatures_[featureKey];\n  } else {\n    if (this.featuresRtree_) {\n      this.featuresRtree_.remove(feature);\n    }\n  }\n  this.removeFeatureInternal(feature);\n  this.changed();\n};\n\n\n/**\n * Remove feature without firing a `change` event.\n * @param {module:ol/Feature} feature Feature.\n * @protected\n */\nVectorSource.prototype.removeFeatureInternal = function(feature) {\n  const featureKey = getUid(feature).toString();\n  this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n  delete this.featureChangeKeys_[featureKey];\n  const id = feature.getId();\n  if (id !== undefined) {\n    delete this.idIndex_[id.toString()];\n  } else {\n    delete this.undefIdIndex_[featureKey];\n  }\n  this.dispatchEvent(new VectorSourceEvent(\n    VectorEventType.REMOVEFEATURE, feature));\n};\n\n\n/**\n * Remove a feature from the id index.  Called internally when the feature id\n * may have changed.\n * @param {module:ol/Feature} feature The feature.\n * @return {boolean} Removed the feature from the index.\n * @private\n */\nVectorSource.prototype.removeFromIdIndex_ = function(feature) {\n  let removed = false;\n  for (const id in this.idIndex_) {\n    if (this.idIndex_[id] === feature) {\n      delete this.idIndex_[id];\n      removed = true;\n      break;\n    }\n  }\n  return removed;\n};\n\n\n/**\n * Set the new loader of the source. The next loadFeatures call will use the\n * new loader.\n * @param {module:ol/featureloader~FeatureLoader} loader The loader to set.\n * @api\n */\nVectorSource.prototype.setLoader = function(loader) {\n  this.loader_ = loader;\n};\n\nexport default VectorSource;\n","/**\n * @module ol/Feature\n */\nimport {assert} from './asserts.js';\nimport {listen, unlisten, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport {inherits} from './util.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport Geometry from './geom/Geometry.js';\nimport Style from './style/Style.js';\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/geom/Geometry|Object.<string, *>=} opt_geometryOrProperties\n * You may pass a Geometry object directly, or an object literal containing\n * properties. If you pass an object literal, you may include a Geometry\n * associated with a `geometry` key.\n * @api\n */\nconst Feature = function(opt_geometryOrProperties) {\n\n  BaseObject.call(this);\n\n  /**\n   * @private\n   * @type {number|string|undefined}\n   */\n  this.id_ = undefined;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.geometryName_ = 'geometry';\n\n  /**\n   * User provided style.\n   * @private\n   * @type {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n   */\n  this.style_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Style~StyleFunction|undefined}\n   */\n  this.styleFunction_ = undefined;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.geometryChangeKey_ = null;\n\n  listen(\n    this, getChangeEventType(this.geometryName_),\n    this.handleGeometryChanged_, this);\n\n  if (opt_geometryOrProperties !== undefined) {\n    if (opt_geometryOrProperties instanceof Geometry ||\n        !opt_geometryOrProperties) {\n      const geometry = opt_geometryOrProperties;\n      this.setGeometry(geometry);\n    } else {\n      /** @type {Object.<string, *>} */\n      const properties = opt_geometryOrProperties;\n      this.setProperties(properties);\n    }\n  }\n};\n\ninherits(Feature, BaseObject);\n\n\n/**\n * Clone this feature. If the original feature has a geometry it\n * is also cloned. The feature id is not set in the clone.\n * @return {module:ol/Feature} The clone.\n * @api\n */\nFeature.prototype.clone = function() {\n  const clone = new Feature(this.getProperties());\n  clone.setGeometryName(this.getGeometryName());\n  const geometry = this.getGeometry();\n  if (geometry) {\n    clone.setGeometry(geometry.clone());\n  }\n  const style = this.getStyle();\n  if (style) {\n    clone.setStyle(style);\n  }\n  return clone;\n};\n\n\n/**\n * Get the feature's default geometry.  A feature may have any number of named\n * geometries.  The \"default\" geometry (the one that is rendered by default) is\n * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n * @return {module:ol/geom/Geometry|undefined} The default geometry for the feature.\n * @api\n * @observable\n */\nFeature.prototype.getGeometry = function() {\n  return (\n    /** @type {module:ol/geom/Geometry|undefined} */ (this.get(this.geometryName_))\n  );\n};\n\n\n/**\n * Get the feature identifier.  This is a stable identifier for the feature and\n * is either set when reading data from a remote source or set explicitly by\n * calling {@link module:ol/Feature~Feature#setId}.\n * @return {number|string|undefined} Id.\n * @api\n */\nFeature.prototype.getId = function() {\n  return this.id_;\n};\n\n\n/**\n * Get the name of the feature's default geometry.  By default, the default\n * geometry is named `geometry`.\n * @return {string} Get the property name associated with the default geometry\n *     for this feature.\n * @api\n */\nFeature.prototype.getGeometryName = function() {\n  return this.geometryName_;\n};\n\n\n/**\n * Get the feature's style. Will return what was provided to the\n * {@link module:ol/Feature~Feature#setStyle} method.\n * @return {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} The feature style.\n * @api\n */\nFeature.prototype.getStyle = function() {\n  return this.style_;\n};\n\n\n/**\n * Get the feature's style function.\n * @return {module:ol/style/Style~StyleFunction|undefined} Return a function\n * representing the current style of this feature.\n * @api\n */\nFeature.prototype.getStyleFunction = function() {\n  return this.styleFunction_;\n};\n\n\n/**\n * @private\n */\nFeature.prototype.handleGeometryChange_ = function() {\n  this.changed();\n};\n\n\n/**\n * @private\n */\nFeature.prototype.handleGeometryChanged_ = function() {\n  if (this.geometryChangeKey_) {\n    unlistenByKey(this.geometryChangeKey_);\n    this.geometryChangeKey_ = null;\n  }\n  const geometry = this.getGeometry();\n  if (geometry) {\n    this.geometryChangeKey_ = listen(geometry,\n      EventType.CHANGE, this.handleGeometryChange_, this);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the default geometry for the feature.  This will update the property\n * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n * @param {module:ol/geom/Geometry|undefined} geometry The new geometry.\n * @api\n * @observable\n */\nFeature.prototype.setGeometry = function(geometry) {\n  this.set(this.geometryName_, geometry);\n};\n\n\n/**\n * Set the style for the feature.  This can be a single style object, an array\n * of styles, or a function that takes a resolution and returns an array of\n * styles. If it is `null` the feature has no style (a `null` style).\n * @param {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} style Style for this feature.\n * @api\n * @fires module:ol/events/Event~Event#event:change\n */\nFeature.prototype.setStyle = function(style) {\n  this.style_ = style;\n  this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n  this.changed();\n};\n\n\n/**\n * Set the feature id.  The feature id is considered stable and may be used when\n * requesting features or comparing identifiers returned from a remote source.\n * The feature id can be used with the\n * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n * @param {number|string|undefined} id The feature id.\n * @api\n * @fires module:ol/events/Event~Event#event:change\n */\nFeature.prototype.setId = function(id) {\n  this.id_ = id;\n  this.changed();\n};\n\n\n/**\n * Set the property name to be used when getting the feature's default geometry.\n * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n * this name will be returned.\n * @param {string} name The property name of the default geometry.\n * @api\n */\nFeature.prototype.setGeometryName = function(name) {\n  unlisten(\n    this, getChangeEventType(this.geometryName_),\n    this.handleGeometryChanged_, this);\n  this.geometryName_ = name;\n  listen(\n    this, getChangeEventType(this.geometryName_),\n    this.handleGeometryChanged_, this);\n  this.handleGeometryChanged_();\n};\n\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of module:ol/style/Style or single style objects wrapped\n * in a new feature style function.\n * @param {module:ol/style/Style~StyleFunction|!Array.<module:ol/style/Style>|!module:ol/style/Style} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {module:ol/style/Style~StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array.<module:ol/style/Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(obj instanceof Style,\n        41); // Expected an `module:ol/style/Style~Style` or an array of `module:ol/style/Style~Style`\n      styles = [obj];\n    }\n    return function() {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/control/FullScreen\n */\nimport {inherits} from '../util.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @return {string} Change type.\n */\nconst getChangeType = (function() {\n  let changeType;\n  return function() {\n    if (!changeType) {\n      const body = document.body;\n      if (body.webkitRequestFullscreen) {\n        changeType = 'webkitfullscreenchange';\n      } else if (body.mozRequestFullScreen) {\n        changeType = 'mozfullscreenchange';\n      } else if (body.msRequestFullscreen) {\n        changeType = 'MSFullscreenChange';\n      } else if (body.requestFullscreen) {\n        changeType = 'fullscreenchange';\n      }\n    }\n    return changeType;\n  };\n})();\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Element} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Element} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {Element|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {Element|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](http://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/FullScreen~Options=} opt_options Options.\n * @api\n */\nconst FullScreen = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.cssClassName_ = options.className !== undefined ? options.className :\n    'ol-full-screen';\n\n  const label = options.label !== undefined ? options.label : '\\u2922';\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.labelNode_ = typeof label === 'string' ?\n    document.createTextNode(label) : label;\n\n  const labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.labelActiveNode_ = typeof labelActive === 'string' ?\n    document.createTextNode(labelActive) : labelActive;\n\n  const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n  const button = document.createElement('button');\n  button.className = this.cssClassName_ + '-' + isFullScreen();\n  button.setAttribute('type', 'button');\n  button.title = tipLabel;\n  button.appendChild(this.labelNode_);\n\n  listen(button, EventType.CLICK,\n    this.handleClick_, this);\n\n  const cssClasses = this.cssClassName_ + ' ' + CLASS_UNSELECTABLE +\n      ' ' + CLASS_CONTROL + ' ' +\n      (!isFullScreenSupported() ? CLASS_UNSUPPORTED : '');\n  const element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(button);\n\n  Control.call(this, {\n    element: element,\n    target: options.target\n  });\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.keys_ = options.keys !== undefined ? options.keys : false;\n\n  /**\n   * @private\n   * @type {Element|string|undefined}\n   */\n  this.source_ = options.source;\n\n};\n\ninherits(FullScreen, Control);\n\n\n/**\n * @param {Event} event The event to handle\n * @private\n */\nFullScreen.prototype.handleClick_ = function(event) {\n  event.preventDefault();\n  this.handleFullScreen_();\n};\n\n\n/**\n * @private\n */\nFullScreen.prototype.handleFullScreen_ = function() {\n  if (!isFullScreenSupported()) {\n    return;\n  }\n  const map = this.getMap();\n  if (!map) {\n    return;\n  }\n  if (isFullScreen()) {\n    exitFullScreen();\n  } else {\n    let element;\n    if (this.source_) {\n      element = typeof this.source_ === 'string' ?\n        document.getElementById(this.source_) :\n        this.source_;\n    } else {\n      element = map.getTargetElement();\n    }\n    if (this.keys_) {\n      requestFullScreenWithKeys(element);\n\n    } else {\n      requestFullScreen(element);\n    }\n  }\n};\n\n\n/**\n * @private\n */\nFullScreen.prototype.handleFullScreenChange_ = function() {\n  const button = this.element.firstElementChild;\n  const map = this.getMap();\n  if (isFullScreen()) {\n    button.className = this.cssClassName_ + '-true';\n    replaceNode(this.labelActiveNode_, this.labelNode_);\n  } else {\n    button.className = this.cssClassName_ + '-false';\n    replaceNode(this.labelNode_, this.labelActiveNode_);\n  }\n  if (map) {\n    map.updateSize();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nFullScreen.prototype.setMap = function(map) {\n  Control.prototype.setMap.call(this, map);\n  if (map) {\n    this.listenerKeys.push(listen(document,\n      getChangeType(),\n      this.handleFullScreenChange_, this)\n    );\n  }\n};\n\n/**\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported() {\n  const body = document.body;\n  return !!(\n    body.webkitRequestFullscreen ||\n    (body.mozRequestFullScreen && document.mozFullScreenEnabled) ||\n    (body.msRequestFullscreen && document.msFullscreenEnabled) ||\n    (body.requestFullscreen && document.fullscreenEnabled)\n  );\n}\n\n/**\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen() {\n  return !!(\n    document.webkitIsFullScreen || document.mozFullScreen ||\n    document.msFullscreenElement || document.fullscreenElement\n  );\n}\n\n/**\n * Request to fullscreen an element.\n * @param {Element} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.msRequestFullscreen) {\n    element.msRequestFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {Element} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element.mozRequestFullScreenWithKeys) {\n    element.mozRequestFullScreenWithKeys();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n */\nfunction exitFullScreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.msExitFullscreen) {\n    document.msExitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n\nexport default FullScreen;\n","/**\n * @module ol/control/OverviewMap\n */\nimport {inherits} from '../util.js';\nimport Collection from '../Collection.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport OverlayPositioning from '../OverlayPositioning.js';\nimport ViewProperty from '../ViewProperty.js';\nimport Control from '../control/Control.js';\nimport {rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen, listenOnce, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight, scaleFromCenter} from '../extent.js';\n\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nconst MAX_RATIO = 0.75;\n\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nconst MIN_RATIO = 0.1;\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|Element} [collapseLabel='«'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|Element} [label='»'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array.<module:ol/layer/Layer>|module:ol/Collection.<module:ol/layer/Layer>} [layers]\n * Layers for the overview map. If not set, then all main map layers are used\n * instead.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {Element|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {module:ol/View} [view] Custom view for the overview map. If not provided,\n * a default view with an EPSG:3857 projection will be used.\n */\n\n\n/**\n * Create a new control with a map acting as an overview map for an other\n * defined map.\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/OverviewMap~Options=} opt_options OverviewMap options.\n * @api\n */\nconst OverviewMap = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.collapsible_ = options.collapsible !== undefined ?\n    options.collapsible : true;\n\n  if (!this.collapsible_) {\n    this.collapsed_ = false;\n  }\n\n  const className = options.className !== undefined ? options.className : 'ol-overviewmap';\n\n  const tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n  const collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00AB';\n\n  if (typeof collapseLabel === 'string') {\n    /**\n     * @private\n     * @type {Element}\n     */\n    this.collapseLabel_ = document.createElement('span');\n    this.collapseLabel_.textContent = collapseLabel;\n  } else {\n    this.collapseLabel_ = collapseLabel;\n  }\n\n  const label = options.label !== undefined ? options.label : '\\u00BB';\n\n\n  if (typeof label === 'string') {\n    /**\n     * @private\n     * @type {Element}\n     */\n    this.label_ = document.createElement('span');\n    this.label_.textContent = label;\n  } else {\n    this.label_ = label;\n  }\n\n  const activeLabel = (this.collapsible_ && !this.collapsed_) ?\n    this.collapseLabel_ : this.label_;\n  const button = document.createElement('button');\n  button.setAttribute('type', 'button');\n  button.title = tipLabel;\n  button.appendChild(activeLabel);\n\n  listen(button, EventType.CLICK,\n    this.handleClick_, this);\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  this.ovmapDiv_ = document.createElement('DIV');\n  this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n  /**\n   * @type {module:ol/Map}\n   * @private\n   */\n  this.ovmap_ = new Map({\n    controls: new Collection(),\n    interactions: new Collection(),\n    view: options.view\n  });\n  const ovmap = this.ovmap_;\n\n  if (options.layers) {\n    options.layers.forEach(\n      /**\n       * @param {module:ol/layer/Layer} layer Layer.\n       */\n      (function(layer) {\n        ovmap.addLayer(layer);\n      }).bind(this));\n  }\n\n  const box = document.createElement('DIV');\n  box.className = 'ol-overviewmap-box';\n  box.style.boxSizing = 'border-box';\n\n  /**\n   * @type {module:ol/Overlay}\n   * @private\n   */\n  this.boxOverlay_ = new Overlay({\n    position: [0, 0],\n    positioning: OverlayPositioning.BOTTOM_LEFT,\n    element: box\n  });\n  this.ovmap_.addOverlay(this.boxOverlay_);\n\n  const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n  const element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(this.ovmapDiv_);\n  element.appendChild(button);\n\n  Control.call(this, {\n    element: element,\n    render: options.render || render,\n    target: options.target\n  });\n\n  /* Interactive map */\n\n  const scope = this;\n\n  const overlay = this.boxOverlay_;\n  const overlayBox = this.boxOverlay_.getElement();\n\n  /* Functions definition */\n\n  const computeDesiredMousePosition = function(mousePosition) {\n    return {\n      clientX: mousePosition.clientX - (overlayBox.offsetWidth / 2),\n      clientY: mousePosition.clientY + (overlayBox.offsetHeight / 2)\n    };\n  };\n\n  const move = function(event) {\n    const coordinates = ovmap.getEventCoordinate(computeDesiredMousePosition(event));\n\n    overlay.setPosition(coordinates);\n  };\n\n  const endMoving = function(event) {\n    const coordinates = ovmap.getEventCoordinate(event);\n\n    scope.getMap().getView().setCenter(coordinates);\n\n    window.removeEventListener('mousemove', move);\n    window.removeEventListener('mouseup', endMoving);\n  };\n\n  /* Binding */\n\n  overlayBox.addEventListener('mousedown', function() {\n    window.addEventListener('mousemove', move);\n    window.addEventListener('mouseup', endMoving);\n  });\n};\n\ninherits(OverviewMap, Control);\n\n\n/**\n * @inheritDoc\n * @api\n */\nOverviewMap.prototype.setMap = function(map) {\n  const oldMap = this.getMap();\n  if (map === oldMap) {\n    return;\n  }\n  if (oldMap) {\n    const oldView = oldMap.getView();\n    if (oldView) {\n      this.unbindView_(oldView);\n    }\n    this.ovmap_.setTarget(null);\n  }\n  Control.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.ovmap_.setTarget(this.ovmapDiv_);\n    this.listenerKeys.push(listen(\n      map, ObjectEventType.PROPERTYCHANGE,\n      this.handleMapPropertyChange_, this));\n\n    // TODO: to really support map switching, this would need to be reworked\n    if (this.ovmap_.getLayers().getLength() === 0) {\n      this.ovmap_.setLayerGroup(map.getLayerGroup());\n    }\n\n    const view = map.getView();\n    if (view) {\n      this.bindView_(view);\n      if (view.isDef()) {\n        this.ovmap_.updateSize();\n        this.resetExtent_();\n      }\n    }\n  }\n};\n\n\n/**\n * Handle map property changes.  This only deals with changes to the map's view.\n * @param {module:ol/Object~ObjectEvent} event The propertychange event.\n * @private\n */\nOverviewMap.prototype.handleMapPropertyChange_ = function(event) {\n  if (event.key === MapProperty.VIEW) {\n    const oldView = /** @type {module:ol/View} */ (event.oldValue);\n    if (oldView) {\n      this.unbindView_(oldView);\n    }\n    const newView = this.getMap().getView();\n    this.bindView_(newView);\n  }\n};\n\n\n/**\n * Register listeners for view property changes.\n * @param {module:ol/View} view The view.\n * @private\n */\nOverviewMap.prototype.bindView_ = function(view) {\n  listen(view,\n    getChangeEventType(ViewProperty.ROTATION),\n    this.handleRotationChanged_, this);\n};\n\n\n/**\n * Unregister listeners for view property changes.\n * @param {module:ol/View} view The view.\n * @private\n */\nOverviewMap.prototype.unbindView_ = function(view) {\n  unlisten(view,\n    getChangeEventType(ViewProperty.ROTATION),\n    this.handleRotationChanged_, this);\n};\n\n\n/**\n * Handle rotation changes to the main map.\n * TODO: This should rotate the extent rectrangle instead of the\n * overview map's view.\n * @private\n */\nOverviewMap.prototype.handleRotationChanged_ = function() {\n  this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n};\n\n\n/**\n * Update the overview map element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/OverviewMap}\n * @api\n */\nexport function render(mapEvent) {\n  this.validateExtent_();\n  this.updateBox_();\n}\n\n\n/**\n * Reset the overview map extent if the box size (width or\n * height) is less than the size of the overview map size times minRatio\n * or is greater than the size of the overview size times maxRatio.\n *\n * If the map extent was not reset, the box size can fits in the defined\n * ratio sizes. This method then checks if is contained inside the overview\n * map current extent. If not, recenter the overview map to the current\n * main map center location.\n * @private\n */\nOverviewMap.prototype.validateExtent_ = function() {\n  const map = this.getMap();\n  const ovmap = this.ovmap_;\n\n  if (!map.isRendered() || !ovmap.isRendered()) {\n    return;\n  }\n\n  const mapSize = /** @type {module:ol/size~Size} */ (map.getSize());\n\n  const view = map.getView();\n  const extent = view.calculateExtent(mapSize);\n\n  const ovmapSize = /** @type {module:ol/size~Size} */ (ovmap.getSize());\n\n  const ovview = ovmap.getView();\n  const ovextent = ovview.calculateExtent(ovmapSize);\n\n  const topLeftPixel =\n      ovmap.getPixelFromCoordinate(getTopLeft(extent));\n  const bottomRightPixel =\n      ovmap.getPixelFromCoordinate(getBottomRight(extent));\n\n  const boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n  const boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n  const ovmapWidth = ovmapSize[0];\n  const ovmapHeight = ovmapSize[1];\n\n  if (boxWidth < ovmapWidth * MIN_RATIO ||\n      boxHeight < ovmapHeight * MIN_RATIO ||\n      boxWidth > ovmapWidth * MAX_RATIO ||\n      boxHeight > ovmapHeight * MAX_RATIO) {\n    this.resetExtent_();\n  } else if (!containsExtent(ovextent, extent)) {\n    this.recenter_();\n  }\n};\n\n\n/**\n * Reset the overview map extent to half calculated min and max ratio times\n * the extent of the main map.\n * @private\n */\nOverviewMap.prototype.resetExtent_ = function() {\n  if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n    return;\n  }\n\n  const map = this.getMap();\n  const ovmap = this.ovmap_;\n\n  const mapSize = /** @type {module:ol/size~Size} */ (map.getSize());\n\n  const view = map.getView();\n  const extent = view.calculateExtent(mapSize);\n\n  const ovview = ovmap.getView();\n\n  // get how many times the current map overview could hold different\n  // box sizes using the min and max ratio, pick the step in the middle used\n  // to calculate the extent from the main map to set it to the overview map,\n  const steps = Math.log(\n    MAX_RATIO / MIN_RATIO) / Math.LN2;\n  const ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n  scaleFromCenter(extent, ratio);\n  ovview.fit(extent);\n};\n\n\n/**\n * Set the center of the overview map to the map center without changing its\n * resolution.\n * @private\n */\nOverviewMap.prototype.recenter_ = function() {\n  const map = this.getMap();\n  const ovmap = this.ovmap_;\n\n  const view = map.getView();\n\n  const ovview = ovmap.getView();\n\n  ovview.setCenter(view.getCenter());\n};\n\n\n/**\n * Update the box using the main map extent\n * @private\n */\nOverviewMap.prototype.updateBox_ = function() {\n  const map = this.getMap();\n  const ovmap = this.ovmap_;\n\n  if (!map.isRendered() || !ovmap.isRendered()) {\n    return;\n  }\n\n  const mapSize = /** @type {module:ol/size~Size} */ (map.getSize());\n\n  const view = map.getView();\n\n  const ovview = ovmap.getView();\n\n  const rotation = view.getRotation();\n\n  const overlay = this.boxOverlay_;\n  const box = this.boxOverlay_.getElement();\n  const extent = view.calculateExtent(mapSize);\n  const ovresolution = ovview.getResolution();\n  const bottomLeft = getBottomLeft(extent);\n  const topRight = getTopRight(extent);\n\n  // set position using bottom left coordinates\n  const rotateBottomLeft = this.calculateCoordinateRotate_(rotation, bottomLeft);\n  overlay.setPosition(rotateBottomLeft);\n\n  // set box size calculated from map extent size and overview map resolution\n  if (box) {\n    box.style.width = Math.abs((bottomLeft[0] - topRight[0]) / ovresolution) + 'px';\n    box.style.height = Math.abs((topRight[1] - bottomLeft[1]) / ovresolution) + 'px';\n  }\n};\n\n\n/**\n * @param {number} rotation Target rotation.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {module:ol/coordinate~Coordinate|undefined} Coordinate for rotation and center anchor.\n * @private\n */\nOverviewMap.prototype.calculateCoordinateRotate_ = function(\n  rotation, coordinate) {\n  let coordinateRotate;\n\n  const map = this.getMap();\n  const view = map.getView();\n\n  const currentCenter = view.getCenter();\n\n  if (currentCenter) {\n    coordinateRotate = [\n      coordinate[0] - currentCenter[0],\n      coordinate[1] - currentCenter[1]\n    ];\n    rotateCoordinate(coordinateRotate, rotation);\n    addCoordinate(coordinateRotate, currentCenter);\n  }\n  return coordinateRotate;\n};\n\n\n/**\n * @param {Event} event The event to handle\n * @private\n */\nOverviewMap.prototype.handleClick_ = function(event) {\n  event.preventDefault();\n  this.handleToggle_();\n};\n\n\n/**\n * @private\n */\nOverviewMap.prototype.handleToggle_ = function() {\n  this.element.classList.toggle(CLASS_COLLAPSED);\n  if (this.collapsed_) {\n    replaceNode(this.collapseLabel_, this.label_);\n  } else {\n    replaceNode(this.label_, this.collapseLabel_);\n  }\n  this.collapsed_ = !this.collapsed_;\n\n  // manage overview map if it had not been rendered before and control\n  // is expanded\n  const ovmap = this.ovmap_;\n  if (!this.collapsed_ && !ovmap.isRendered()) {\n    ovmap.updateSize();\n    this.resetExtent_();\n    listenOnce(ovmap, MapEventType.POSTRENDER,\n      function(event) {\n        this.updateBox_();\n      },\n      this);\n  }\n};\n\n\n/**\n * Return `true` if the overview map is collapsible, `false` otherwise.\n * @return {boolean} True if the widget is collapsible.\n * @api\n */\nOverviewMap.prototype.getCollapsible = function() {\n  return this.collapsible_;\n};\n\n\n/**\n * Set whether the overview map should be collapsible.\n * @param {boolean} collapsible True if the widget is collapsible.\n * @api\n */\nOverviewMap.prototype.setCollapsible = function(collapsible) {\n  if (this.collapsible_ === collapsible) {\n    return;\n  }\n  this.collapsible_ = collapsible;\n  this.element.classList.toggle('ol-uncollapsible');\n  if (!collapsible && this.collapsed_) {\n    this.handleToggle_();\n  }\n};\n\n\n/**\n * Collapse or expand the overview map according to the passed parameter. Will\n * not do anything if the overview map isn't collapsible or if the current\n * collapsed state is already the one requested.\n * @param {boolean} collapsed True if the widget is collapsed.\n * @api\n */\nOverviewMap.prototype.setCollapsed = function(collapsed) {\n  if (!this.collapsible_ || this.collapsed_ === collapsed) {\n    return;\n  }\n  this.handleToggle_();\n};\n\n\n/**\n * Determine if the overview map is collapsed.\n * @return {boolean} The overview map is collapsed.\n * @api\n */\nOverviewMap.prototype.getCollapsed = function() {\n  return this.collapsed_;\n};\n\n\n/**\n * Return the overview map.\n * @return {module:ol/PluggableMap} Overview map.\n * @api\n */\nOverviewMap.prototype.getOverviewMap = function() {\n  return this.ovmap_;\n};\nexport default OverviewMap;\n","/**\n * @module ol/control/ScaleLine\n */\nimport {inherits} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport {assert} from '../asserts.js';\nimport Control from '../control/Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {listen} from '../events.js';\nimport {getPointResolution, METERS_PER_UNIT} from '../proj.js';\nimport ProjUnits from '../proj/Units.js';\n\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport const Units = {\n  DEGREES: 'degrees',\n  IMPERIAL: 'imperial',\n  NAUTICAL: 'nautical',\n  METRIC: 'metric',\n  US: 'us'\n};\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {Element|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {module:ol/control/ScaleLine~Units|string} [units='metric'] Units.\n */\n\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/ScaleLine~Options=} opt_options Scale line options.\n * @api\n */\nconst ScaleLine = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const className = options.className !== undefined ? options.className : 'ol-scale-line';\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.innerElement_ = document.createElement('DIV');\n  this.innerElement_.className = className + '-inner';\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.element_ = document.createElement('DIV');\n  this.element_.className = className + ' ' + CLASS_UNSELECTABLE;\n  this.element_.appendChild(this.innerElement_);\n\n  /**\n   * @private\n   * @type {?module:ol/View~State}\n   */\n  this.viewState_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderedVisible_ = false;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.renderedWidth_ = undefined;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.renderedHTML_ = '';\n\n  Control.call(this, {\n    element: this.element_,\n    render: options.render || render,\n    target: options.target\n  });\n\n  listen(\n    this, getChangeEventType(UNITS_PROP),\n    this.handleUnitsChanged_, this);\n\n  this.setUnits(/** @type {module:ol/control/ScaleLine~Units} */ (options.units) ||\n      Units.METRIC);\n\n};\n\ninherits(ScaleLine, Control);\n\n\n/**\n * Return the units to use in the scale line.\n * @return {module:ol/control/ScaleLine~Units|undefined} The units\n * to use in the scale line.\n * @observable\n * @api\n */\nScaleLine.prototype.getUnits = function() {\n  return (\n    /** @type {module:ol/control/ScaleLine~Units|undefined} */ (this.get(UNITS_PROP))\n  );\n};\n\n\n/**\n * Update the scale line element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/ScaleLine}\n * @api\n */\nexport function render(mapEvent) {\n  const frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.viewState_ = null;\n  } else {\n    this.viewState_ = frameState.viewState;\n  }\n  this.updateElement_();\n}\n\n\n/**\n * @private\n */\nScaleLine.prototype.handleUnitsChanged_ = function() {\n  this.updateElement_();\n};\n\n\n/**\n * Set the units to use in the scale line.\n * @param {module:ol/control/ScaleLine~Units} units The units to use in the scale line.\n * @observable\n * @api\n */\nScaleLine.prototype.setUnits = function(units) {\n  this.set(UNITS_PROP, units);\n};\n\n\n/**\n * @private\n */\nScaleLine.prototype.updateElement_ = function() {\n  const viewState = this.viewState_;\n\n  if (!viewState) {\n    if (this.renderedVisible_) {\n      this.element_.style.display = 'none';\n      this.renderedVisible_ = false;\n    }\n    return;\n  }\n\n  const center = viewState.center;\n  const projection = viewState.projection;\n  const units = this.getUnits();\n  const pointResolutionUnits = units == Units.DEGREES ?\n    ProjUnits.DEGREES :\n    ProjUnits.METERS;\n  let pointResolution =\n      getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n  if (projection.getUnits() != ProjUnits.DEGREES && projection.getMetersPerUnit()\n    && pointResolutionUnits == ProjUnits.METERS) {\n    pointResolution *= projection.getMetersPerUnit();\n  }\n\n  let nominalCount = this.minWidth_ * pointResolution;\n  let suffix = '';\n  if (units == Units.DEGREES) {\n    const metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n    if (projection.getUnits() == ProjUnits.DEGREES) {\n      nominalCount *= metersPerDegree;\n    } else {\n      pointResolution /= metersPerDegree;\n    }\n    if (nominalCount < metersPerDegree / 60) {\n      suffix = '\\u2033'; // seconds\n      pointResolution *= 3600;\n    } else if (nominalCount < metersPerDegree) {\n      suffix = '\\u2032'; // minutes\n      pointResolution *= 60;\n    } else {\n      suffix = '\\u00b0'; // degrees\n    }\n  } else if (units == Units.IMPERIAL) {\n    if (nominalCount < 0.9144) {\n      suffix = 'in';\n      pointResolution /= 0.0254;\n    } else if (nominalCount < 1609.344) {\n      suffix = 'ft';\n      pointResolution /= 0.3048;\n    } else {\n      suffix = 'mi';\n      pointResolution /= 1609.344;\n    }\n  } else if (units == Units.NAUTICAL) {\n    pointResolution /= 1852;\n    suffix = 'nm';\n  } else if (units == Units.METRIC) {\n    if (nominalCount < 0.001) {\n      suffix = 'μm';\n      pointResolution *= 1000000;\n    } else if (nominalCount < 1) {\n      suffix = 'mm';\n      pointResolution *= 1000;\n    } else if (nominalCount < 1000) {\n      suffix = 'm';\n    } else {\n      suffix = 'km';\n      pointResolution /= 1000;\n    }\n  } else if (units == Units.US) {\n    if (nominalCount < 0.9144) {\n      suffix = 'in';\n      pointResolution *= 39.37;\n    } else if (nominalCount < 1609.344) {\n      suffix = 'ft';\n      pointResolution /= 0.30480061;\n    } else {\n      suffix = 'mi';\n      pointResolution /= 1609.3472;\n    }\n  } else {\n    assert(false, 33); // Invalid units\n  }\n\n  let i = 3 * Math.floor(\n    Math.log(this.minWidth_ * pointResolution) / Math.log(10));\n  let count, width;\n  while (true) {\n    count = LEADING_DIGITS[((i % 3) + 3) % 3] *\n        Math.pow(10, Math.floor(i / 3));\n    width = Math.round(count / pointResolution);\n    if (isNaN(width)) {\n      this.element_.style.display = 'none';\n      this.renderedVisible_ = false;\n      return;\n    } else if (width >= this.minWidth_) {\n      break;\n    }\n    ++i;\n  }\n\n  const html = count + ' ' + suffix;\n  if (this.renderedHTML_ != html) {\n    this.innerElement_.innerHTML = html;\n    this.renderedHTML_ = html;\n  }\n\n  if (this.renderedWidth_ != width) {\n    this.innerElement_.style.width = width + 'px';\n    this.renderedWidth_ = width;\n  }\n\n  if (!this.renderedVisible_) {\n    this.element_.style.display = '';\n    this.renderedVisible_ = true;\n  }\n\n};\n\nexport default ScaleLine;\n","/**\n * @module ol/control/ZoomSlider\n */\nimport {inherits} from '../util.js';\nimport ViewHint from '../ViewHint.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {clamp} from '../math.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport PointerEventHandler from '../pointer/PointerEventHandler.js';\n\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nconst Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n */\n\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/ZoomSlider~Options=} opt_options Zoom slider options.\n * @api\n */\nconst ZoomSlider = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * Will hold the current resolution of the view.\n   *\n   * @type {number|undefined}\n   * @private\n   */\n  this.currentResolution_ = undefined;\n\n  /**\n   * The direction of the slider. Will be determined from actual display of the\n   * container and defaults to Direction.VERTICAL.\n   *\n   * @type {Direction}\n   * @private\n   */\n  this.direction_ = Direction.VERTICAL;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.dragging_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.heightLimit_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.widthLimit_ = 0;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.previousX_;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.previousY_;\n\n  /**\n   * The calculated thumb size (border box plus margins).  Set when initSlider_\n   * is called.\n   * @type {module:ol/size~Size}\n   * @private\n   */\n  this.thumbSize_ = null;\n\n  /**\n   * Whether the slider is initialized.\n   * @type {boolean}\n   * @private\n   */\n  this.sliderInitialized_ = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n  const className = options.className !== undefined ? options.className : 'ol-zoomslider';\n  const thumbElement = document.createElement('button');\n  thumbElement.setAttribute('type', 'button');\n  thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n  const containerElement = document.createElement('div');\n  containerElement.className = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n  containerElement.appendChild(thumbElement);\n  /**\n   * @type {module:ol/pointer/PointerEventHandler}\n   * @private\n   */\n  this.dragger_ = new PointerEventHandler(containerElement);\n\n  listen(this.dragger_, PointerEventType.POINTERDOWN,\n    this.handleDraggerStart_, this);\n  listen(this.dragger_, PointerEventType.POINTERMOVE,\n    this.handleDraggerDrag_, this);\n  listen(this.dragger_, PointerEventType.POINTERUP,\n    this.handleDraggerEnd_, this);\n\n  listen(containerElement, EventType.CLICK, this.handleContainerClick_, this);\n  listen(thumbElement, EventType.CLICK, stopPropagation);\n\n  Control.call(this, {\n    element: containerElement,\n    render: options.render || render\n  });\n};\n\ninherits(ZoomSlider, Control);\n\n\n/**\n * @inheritDoc\n */\nZoomSlider.prototype.disposeInternal = function() {\n  this.dragger_.dispose();\n  Control.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\nZoomSlider.prototype.setMap = function(map) {\n  Control.prototype.setMap.call(this, map);\n  if (map) {\n    map.render();\n  }\n};\n\n\n/**\n * Initializes the slider element. This will determine and set this controls\n * direction_ and also constrain the dragging of the thumb to always be within\n * the bounds of the container.\n *\n * @private\n */\nZoomSlider.prototype.initSlider_ = function() {\n  const container = this.element;\n  const containerSize = {\n    width: container.offsetWidth, height: container.offsetHeight\n  };\n\n  const thumb = container.firstElementChild;\n  const computedStyle = getComputedStyle(thumb);\n  const thumbWidth = thumb.offsetWidth +\n      parseFloat(computedStyle['marginRight']) +\n      parseFloat(computedStyle['marginLeft']);\n  const thumbHeight = thumb.offsetHeight +\n      parseFloat(computedStyle['marginTop']) +\n      parseFloat(computedStyle['marginBottom']);\n  this.thumbSize_ = [thumbWidth, thumbHeight];\n\n  if (containerSize.width > containerSize.height) {\n    this.direction_ = Direction.HORIZONTAL;\n    this.widthLimit_ = containerSize.width - thumbWidth;\n  } else {\n    this.direction_ = Direction.VERTICAL;\n    this.heightLimit_ = containerSize.height - thumbHeight;\n  }\n  this.sliderInitialized_ = true;\n};\n\n\n/**\n * Update the zoomslider element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/ZoomSlider}\n * @api\n */\nexport function render(mapEvent) {\n  if (!mapEvent.frameState) {\n    return;\n  }\n  if (!this.sliderInitialized_) {\n    this.initSlider_();\n  }\n  const res = mapEvent.frameState.viewState.resolution;\n  if (res !== this.currentResolution_) {\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\n\n/**\n * @param {Event} event The browser event to handle.\n * @private\n */\nZoomSlider.prototype.handleContainerClick_ = function(event) {\n  const view = this.getMap().getView();\n\n  const relativePosition = this.getRelativePosition_(\n    event.offsetX - this.thumbSize_[0] / 2,\n    event.offsetY - this.thumbSize_[1] / 2);\n\n  const resolution = this.getResolutionForPosition_(relativePosition);\n\n  view.animate({\n    resolution: view.constrainResolution(resolution),\n    duration: this.duration_,\n    easing: easeOut\n  });\n};\n\n\n/**\n * Handle dragger start events.\n * @param {module:ol/pointer/PointerEvent} event The drag event.\n * @private\n */\nZoomSlider.prototype.handleDraggerStart_ = function(event) {\n  if (!this.dragging_ && event.originalEvent.target === this.element.firstElementChild) {\n    this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n    this.previousX_ = event.clientX;\n    this.previousY_ = event.clientY;\n    this.dragging_ = true;\n  }\n};\n\n\n/**\n * Handle dragger drag events.\n *\n * @param {module:ol/pointer/PointerEvent|Event} event The drag event.\n * @private\n */\nZoomSlider.prototype.handleDraggerDrag_ = function(event) {\n  if (this.dragging_) {\n    const element = this.element.firstElementChild;\n    const deltaX = event.clientX - this.previousX_ + parseInt(element.style.left, 10);\n    const deltaY = event.clientY - this.previousY_ + parseInt(element.style.top, 10);\n    const relativePosition = this.getRelativePosition_(deltaX, deltaY);\n    this.currentResolution_ = this.getResolutionForPosition_(relativePosition);\n    this.getMap().getView().setResolution(this.currentResolution_);\n    this.setThumbPosition_(this.currentResolution_);\n    this.previousX_ = event.clientX;\n    this.previousY_ = event.clientY;\n  }\n};\n\n\n/**\n * Handle dragger end events.\n * @param {module:ol/pointer/PointerEvent|Event} event The drag event.\n * @private\n */\nZoomSlider.prototype.handleDraggerEnd_ = function(event) {\n  if (this.dragging_) {\n    const view = this.getMap().getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n\n    view.animate({\n      resolution: view.constrainResolution(this.currentResolution_),\n      duration: this.duration_,\n      easing: easeOut\n    });\n\n    this.dragging_ = false;\n    this.previousX_ = undefined;\n    this.previousY_ = undefined;\n  }\n};\n\n\n/**\n * Positions the thumb inside its container according to the given resolution.\n *\n * @param {number} res The res.\n * @private\n */\nZoomSlider.prototype.setThumbPosition_ = function(res) {\n  const position = this.getPositionForResolution_(res);\n  const thumb = this.element.firstElementChild;\n\n  if (this.direction_ == Direction.HORIZONTAL) {\n    thumb.style.left = this.widthLimit_ * position + 'px';\n  } else {\n    thumb.style.top = this.heightLimit_ * position + 'px';\n  }\n};\n\n\n/**\n * Calculates the relative position of the thumb given x and y offsets.  The\n * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n * in pixel units within the dragger limits.\n *\n * @param {number} x Pixel position relative to the left of the slider.\n * @param {number} y Pixel position relative to the top of the slider.\n * @return {number} The relative position of the thumb.\n * @private\n */\nZoomSlider.prototype.getRelativePosition_ = function(x, y) {\n  let amount;\n  if (this.direction_ === Direction.HORIZONTAL) {\n    amount = x / this.widthLimit_;\n  } else {\n    amount = y / this.heightLimit_;\n  }\n  return clamp(amount, 0, 1);\n};\n\n\n/**\n * Calculates the corresponding resolution of the thumb given its relative\n * position (where 0 is the minimum and 1 is the maximum).\n *\n * @param {number} position The relative position of the thumb.\n * @return {number} The corresponding resolution.\n * @private\n */\nZoomSlider.prototype.getResolutionForPosition_ = function(position) {\n  const fn = this.getMap().getView().getResolutionForValueFunction();\n  return fn(1 - position);\n};\n\n\n/**\n * Determines the relative position of the slider for the given resolution.  A\n * relative position of 0 corresponds to the minimum view resolution.  A\n * relative position of 1 corresponds to the maximum view resolution.\n *\n * @param {number} res The resolution.\n * @return {number} The relative position value (between 0 and 1).\n * @private\n */\nZoomSlider.prototype.getPositionForResolution_ = function(res) {\n  const fn = this.getMap().getView().getValueForResolutionFunction();\n  return 1 - fn(res);\n};\n\nexport default ZoomSlider;\n","/**\n * @module ol/control/ZoomToExtent\n */\nimport {inherits} from '../util.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {Element|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|Element} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {module:ol/extent~Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/ZoomToExtent~Options=} opt_options Options.\n * @api\n */\nconst ZoomToExtent = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {module:ol/extent~Extent}\n   * @protected\n   */\n  this.extent = options.extent ? options.extent : null;\n\n  const className = options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n  const label = options.label !== undefined ? options.label : 'E';\n  const tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n  const button = document.createElement('button');\n  button.setAttribute('type', 'button');\n  button.title = tipLabel;\n  button.appendChild(\n    typeof label === 'string' ? document.createTextNode(label) : label\n  );\n\n  listen(button, EventType.CLICK, this.handleClick_, this);\n\n  const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n  const element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(button);\n\n  Control.call(this, {\n    element: element,\n    target: options.target\n  });\n};\n\ninherits(ZoomToExtent, Control);\n\n\n/**\n * @param {Event} event The event to handle\n * @private\n */\nZoomToExtent.prototype.handleClick_ = function(event) {\n  event.preventDefault();\n  this.handleZoomToExtent();\n};\n\n\n/**\n * @protected\n */\nZoomToExtent.prototype.handleZoomToExtent = function() {\n  const map = this.getMap();\n  const view = map.getView();\n  const extent = !this.extent ? view.getProjection().getExtent() : this.extent;\n  view.fit(extent);\n};\nexport default ZoomToExtent;\n","/**\n * @module ol/control\n */\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\nexport {defaults} from './control/util.js';\n","/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {module:ol/colorlike~ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {module:ol/colorlike~ColorLike} [currentFillStyle]\n * @property {module:ol/colorlike~ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array.<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {module:ol/colorlike~ColorLike} [fillStyle]\n * @property {module:ol/colorlike~ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array.<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array.<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {module:ol/colorlike~ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array.<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport const defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nexport const defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport const defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {module:ol/structs/LRUCache.<HTMLCanvasElement>}\n * @api\n */\nexport const labelCache = new LRUCache();\n\n\n/**\n * @type {!Object.<string, number>}\n */\nexport const checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n\n/**\n * @type {!Object.<string, number>}\n */\nexport const textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const checkFont = (function() {\n  const retries = 60;\n  const checked = checkedFonts;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  function isAvailable(font) {\n    const context = getMeasureContext();\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      context.font = size + referenceFont;\n      referenceWidth = context.measureText(text).width;\n      if (font != referenceFont) {\n        context.font = size + font + ',' + referenceFont;\n        const width = context.measureText(text).width;\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    return available;\n  }\n\n  function check() {\n    let done = true;\n    for (const font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    const fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (let i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      const fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {module:ol/size~Size} Measurement.\n */\nexport const measureTextHeight = (function() {\n  let span;\n  const heights = textHeights;\n  return function(font) {\n    let height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  const measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport const resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  let alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {undefined} Nothing.\n */\nexport function UNDEFINED() {}\n","/**\n * @module ol/geom/Point\n */\nimport {inherits} from '../util.js';\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinate} from '../geom/flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {module:ol/coordinate~Coordinate} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Point = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(Point, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/Point} Clone.\n * @override\n * @api\n */\nPoint.prototype.clone = function() {\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return point;\n};\n\n\n/**\n * @inheritDoc\n */\nPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  const flatCoordinates = this.flatCoordinates;\n  const squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n  if (squaredDistance < minSquaredDistance) {\n    const stride = this.stride;\n    for (let i = 0; i < stride; ++i) {\n      closestPoint[i] = flatCoordinates[i];\n    }\n    closestPoint.length = stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * Return the coordinate of the point.\n * @return {module:ol/coordinate~Coordinate} Coordinates.\n * @override\n * @api\n */\nPoint.prototype.getCoordinates = function() {\n  return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n};\n\n\n/**\n * @inheritDoc\n */\nPoint.prototype.computeExtent = function(extent) {\n  return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPoint.prototype.getType = function() {\n  return GeometryType.POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPoint.prototype.intersectsExtent = function(extent) {\n  return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default Point;\n","/**\n * @module ol/Object\n */\nimport {getUid, inherits} from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of\n * this type.\n *\n * @param {string} type The event type.\n * @param {string} key The property name.\n * @param {*} oldValue The old value for `key`.\n * @extends {module:ol/events/Event}\n * @constructor\n */\nconst ObjectEvent = function(type, key, oldValue) {\n  Event.call(this, type);\n\n  /**\n   * The name of the property whose value is changing.\n   * @type {string}\n   * @api\n   */\n  this.key = key;\n\n  /**\n   * The old value. To get the new value use `e.target.get(e.key)` where\n   * `e` is the event object.\n   * @type {*}\n   * @api\n   */\n  this.oldValue = oldValue;\n\n};\ninherits(ObjectEvent, Event);\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @constructor\n * @extends {module:ol/Observable}\n * @param {Object.<string, *>=} opt_values An object with key-value pairs.\n * @fires module:ol/Object~ObjectEvent\n * @api\n */\nconst BaseObject = function(opt_values) {\n  Observable.call(this);\n\n  // Call {@link module:ol~getUid} to ensure that the order of objects' ids is\n  // the same as the order in which they were created.  This also helps to\n  // ensure that object properties are always added in the same order, which\n  // helps many JavaScript engines generate faster code.\n  getUid(this);\n\n  /**\n   * @private\n   * @type {!Object.<string, *>}\n   */\n  this.values_ = {};\n\n  if (opt_values !== undefined) {\n    this.setProperties(opt_values);\n  }\n};\n\ninherits(BaseObject, Observable);\n\n\n/**\n * @type {Object.<string, string>}\n */\nconst changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\n/**\n * Gets a value.\n * @param {string} key Key name.\n * @return {*} Value.\n * @api\n */\nBaseObject.prototype.get = function(key) {\n  let value;\n  if (this.values_.hasOwnProperty(key)) {\n    value = this.values_[key];\n  }\n  return value;\n};\n\n\n/**\n * Get a list of object property names.\n * @return {Array.<string>} List of property names.\n * @api\n */\nBaseObject.prototype.getKeys = function() {\n  return Object.keys(this.values_);\n};\n\n\n/**\n * Get an object of all property names and values.\n * @return {Object.<string, *>} Object.\n * @api\n */\nBaseObject.prototype.getProperties = function() {\n  return assign({}, this.values_);\n};\n\n\n/**\n * @param {string} key Key name.\n * @param {*} oldValue Old value.\n */\nBaseObject.prototype.notify = function(key, oldValue) {\n  let eventType;\n  eventType = getChangeEventType(key);\n  this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  eventType = ObjectEventType.PROPERTYCHANGE;\n  this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n};\n\n\n/**\n * Sets a value.\n * @param {string} key Key name.\n * @param {*} value Value.\n * @param {boolean=} opt_silent Update without triggering an event.\n * @api\n */\nBaseObject.prototype.set = function(key, value, opt_silent) {\n  if (opt_silent) {\n    this.values_[key] = value;\n  } else {\n    const oldValue = this.values_[key];\n    this.values_[key] = value;\n    if (oldValue !== value) {\n      this.notify(key, oldValue);\n    }\n  }\n};\n\n\n/**\n * Sets a collection of key-value pairs.  Note that this changes any existing\n * properties and adds new ones (it does not remove any existing properties).\n * @param {Object.<string, *>} values Values.\n * @param {boolean=} opt_silent Update without triggering an event.\n * @api\n */\nBaseObject.prototype.setProperties = function(values, opt_silent) {\n  for (const key in values) {\n    this.set(key, values[key], opt_silent);\n  }\n};\n\n\n/**\n * Unsets a property.\n * @param {string} key Key name.\n * @param {boolean=} opt_silent Unset without triggering an event.\n * @api\n */\nBaseObject.prototype.unset = function(key, opt_silent) {\n  if (key in this.values_) {\n    const oldValue = this.values_[key];\n    delete this.values_[key];\n    if (!opt_silent) {\n      this.notify(key, oldValue);\n    }\n  }\n};\n\n\nexport default BaseObject;\n","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  const canvas = /** @type {HTMLCanvasElement} */ (document.createElement('CANVAS'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!Element} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!Element} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport {inherits} from '../util.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @param {module:ol/interaction/DoubleClickZoom~Options=} opt_options Options.\n * @api\n */\nconst DoubleClickZoom = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delta_ = options.delta ? options.delta : 1;\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n};\n\ninherits(DoubleClickZoom, Interaction);\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  const browserEvent = mapBrowserEvent.originalEvent;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    const map = mapBrowserEvent.map;\n    const anchor = mapBrowserEvent.coordinate;\n    const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    const view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/DragPan\n */\nimport {inherits} from '../util.js';\nimport ViewHint from '../ViewHint.js';\nimport {scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {module:ol/Kinetic} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/DragPan~Options=} opt_options Options.\n * @api\n */\nconst DragPan = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {module:ol/Kinetic|undefined}\n   */\n  this.kinetic_ = options.kinetic;\n\n  /**\n   * @type {module:ol~Pixel}\n   */\n  this.lastCentroid = null;\n\n  /**\n   * @type {number}\n   */\n  this.lastPointersCount_;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.noKinetic_ = false;\n\n};\n\ninherits(DragPan, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  const targetPointers = this.targetPointers;\n  const centroid = centroidFromPointers(targetPointers);\n  if (targetPointers.length == this.lastPointersCount_) {\n    if (this.kinetic_) {\n      this.kinetic_.update(centroid[0], centroid[1]);\n    }\n    if (this.lastCentroid) {\n      const deltaX = this.lastCentroid[0] - centroid[0];\n      const deltaY = centroid[1] - this.lastCentroid[1];\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      let center = [deltaX, deltaY];\n      scaleCoordinate(center, view.getResolution());\n      rotateCoordinate(center, view.getRotation());\n      addCoordinate(center, view.getCenter());\n      center = view.constrainCenter(center);\n      view.setCenter(center);\n    }\n  } else if (this.kinetic_) {\n    // reset so we don't overestimate the kinetic energy after\n    // after one finger down, tiny drag, second finger down\n    this.kinetic_.begin();\n  }\n  this.lastCentroid = centroid;\n  this.lastPointersCount_ = targetPointers.length;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  if (this.targetPointers.length === 0) {\n    if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n      const distance = this.kinetic_.getDistance();\n      const angle = this.kinetic_.getAngle();\n      const center = /** @type {!module:ol/coordinate~Coordinate} */ (view.getCenter());\n      const centerpx = map.getPixelFromCoordinate(center);\n      const dest = map.getCoordinateFromPixel([\n        centerpx[0] - distance * Math.cos(angle),\n        centerpx[1] - distance * Math.sin(angle)\n      ]);\n      view.animate({\n        center: view.constrainCenter(dest),\n        duration: 500,\n        easing: easeOut\n      });\n    }\n    view.setHint(ViewHint.INTERACTING, -1);\n    return false;\n  } else {\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    this.lastCentroid = null;\n    if (!this.handlingDownUpSequence) {\n      view.setHint(ViewHint.INTERACTING, 1);\n    }\n    // stop any current animation\n    if (view.getAnimating()) {\n      view.setCenter(mapBrowserEvent.frameState.viewState.center);\n    }\n    if (this.kinetic_) {\n      this.kinetic_.begin();\n    }\n    // No kinetic as soon as more than one pointer on the screen is\n    // detected. This is to prevent nasty pans after pinch.\n    this.noKinetic_ = this.targetPointers.length > 1;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nDragPan.prototype.shouldStopEvent = FALSE;\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport {inherits} from '../util.js';\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/DragRotate~Options=} opt_options Options.\n * @api\n */\nconst DragRotate = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastAngle_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n};\n\ninherits(DragRotate, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  if (view.getConstraints().rotation === disable) {\n    return;\n  }\n  const size = map.getSize();\n  const offset = mapBrowserEvent.pixel;\n  const theta =\n      Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n  if (this.lastAngle_ !== undefined) {\n    const delta = theta - this.lastAngle_;\n    const rotation = view.getRotation();\n    rotateWithoutConstraints(view, rotation - delta);\n  }\n  this.lastAngle_ = theta;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n  const rotation = view.getRotation();\n  rotate(view, rotation, undefined, this.duration_);\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n    const map = mapBrowserEvent.map;\n    map.getView().setHint(ViewHint.INTERACTING, 1);\n    this.lastAngle_ = undefined;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nDragRotate.prototype.shouldStopEvent = FALSE;\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n// FIXME add rotation\n\nimport {inherits} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\n/**\n * @constructor\n * @extends {module:ol/Disposable}\n * @param {string} className CSS class name.\n */\nconst RenderBox = function(className) {\n\n  /**\n   * @type {module:ol/geom/Polygon}\n   * @private\n   */\n  this.geometry_ = null;\n\n  /**\n   * @type {HTMLDivElement}\n   * @private\n   */\n  this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\n  this.element_.style.position = 'absolute';\n  this.element_.className = 'ol-box ' + className;\n\n  /**\n   * @private\n   * @type {module:ol/PluggableMap}\n   */\n  this.map_ = null;\n\n  /**\n   * @private\n   * @type {module:ol~Pixel}\n   */\n  this.startPixel_ = null;\n\n  /**\n   * @private\n   * @type {module:ol~Pixel}\n   */\n  this.endPixel_ = null;\n\n};\n\ninherits(RenderBox, Disposable);\n\n\n/**\n * @inheritDoc\n */\nRenderBox.prototype.disposeInternal = function() {\n  this.setMap(null);\n};\n\n\n/**\n * @private\n */\nRenderBox.prototype.render_ = function() {\n  const startPixel = this.startPixel_;\n  const endPixel = this.endPixel_;\n  const px = 'px';\n  const style = this.element_.style;\n  style.left = Math.min(startPixel[0], endPixel[0]) + px;\n  style.top = Math.min(startPixel[1], endPixel[1]) + px;\n  style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n  style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n};\n\n\n/**\n * @param {module:ol/PluggableMap} map Map.\n */\nRenderBox.prototype.setMap = function(map) {\n  if (this.map_) {\n    this.map_.getOverlayContainer().removeChild(this.element_);\n    const style = this.element_.style;\n    style.left = style.top = style.width = style.height = 'inherit';\n  }\n  this.map_ = map;\n  if (this.map_) {\n    this.map_.getOverlayContainer().appendChild(this.element_);\n  }\n};\n\n\n/**\n * @param {module:ol~Pixel} startPixel Start pixel.\n * @param {module:ol~Pixel} endPixel End pixel.\n */\nRenderBox.prototype.setPixels = function(startPixel, endPixel) {\n  this.startPixel_ = startPixel;\n  this.endPixel_ = endPixel;\n  this.createOrUpdateGeometry();\n  this.render_();\n};\n\n\n/**\n * Creates or updates the cached geometry.\n */\nRenderBox.prototype.createOrUpdateGeometry = function() {\n  const startPixel = this.startPixel_;\n  const endPixel = this.endPixel_;\n  const pixels = [\n    startPixel,\n    [startPixel[0], endPixel[1]],\n    endPixel,\n    [endPixel[0], startPixel[1]]\n  ];\n  const coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n  // close the polygon\n  coordinates[4] = coordinates[0].slice();\n  if (!this.geometry_) {\n    this.geometry_ = new Polygon([coordinates]);\n  } else {\n    this.geometry_.setCoordinates([coordinates]);\n  }\n};\n\n\n/**\n * @return {module:ol/geom/Polygon} Geometry.\n */\nRenderBox.prototype.getGeometry = function() {\n  return this.geometry_;\n};\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {inherits} from '../util.js';\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {UNDEFINED} from '../functions.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, module:ol/MapBrowserEvent, module:ol~Pixel, module:ol~Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {module:ol/interaction/DragBox~EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n */\n\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n *\n * @param {string} type The event type.\n * @param {module:ol/coordinate~Coordinate} coordinate The event coordinate.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Originating event.\n * @extends {module:ol/events/Event}\n * @constructor\n */\nconst DragBoxEvent = function(type, coordinate, mapBrowserEvent) {\n  Event.call(this, type);\n\n  /**\n   * The coordinate of the drag event.\n   * @const\n   * @type {module:ol/coordinate~Coordinate}\n   * @api\n   */\n  this.coordinate = coordinate;\n\n  /**\n   * @const\n   * @type {module:ol/MapBrowserEvent}\n   * @api\n   */\n  this.mapBrowserEvent = mapBrowserEvent;\n\n};\n\ninherits(DragBoxEvent, Event);\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @fires module:ol/interaction/DragBox~DragBoxEvent\n * @param {module:ol/interaction/DragBox~Options=} opt_options Options.\n * @api\n */\nconst DragBox = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {module:ol/render/Box}\n   * @private\n   */\n  this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n  /**\n   * @type {module:ol~Pixel}\n   * @private\n   */\n  this.startPixel_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : always;\n\n  /**\n   * @private\n   * @type {module:ol/interaction/DragBox~EndCondition}\n   */\n  this.boxEndCondition_ = options.boxEndCondition ?\n    options.boxEndCondition : defaultBoxEndCondition;\n};\n\ninherits(DragBox, PointerInteraction);\n\n\n/**\n * The default condition for determining whether the boxend event\n * should fire.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent The originating MapBrowserEvent\n *     leading to the box end.\n * @param {module:ol~Pixel} startPixel The starting pixel of the box.\n * @param {module:ol~Pixel} endPixel The end pixel of the box.\n * @return {boolean} Whether or not the boxend condition should be fired.\n * @this {module:ol/interaction/DragBox}\n */\nfunction defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n  const width = endPixel[0] - startPixel[0];\n  const height = endPixel[1] - startPixel[1];\n  return width * width + height * height >= this.minArea_;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n  this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n    mapBrowserEvent.coordinate, mapBrowserEvent));\n}\n\n\n/**\n * Returns geometry of last drawn box.\n * @return {module:ol/geom/Polygon} Geometry.\n * @api\n */\nDragBox.prototype.getGeometry = function() {\n  return this.box_.getGeometry();\n};\n\n\n/**\n * To be overridden by child classes.\n * FIXME: use constructor option instead of relying on overriding.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @protected\n */\nDragBox.prototype.onBoxEnd = UNDEFINED;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  this.box_.setMap(null);\n\n  if (this.boxEndCondition_(mapBrowserEvent,\n    this.startPixel_, mapBrowserEvent.pixel)) {\n    this.onBoxEnd(mapBrowserEvent);\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)) {\n    this.startPixel_ = mapBrowserEvent.pixel;\n    this.box_.setMap(mapBrowserEvent.map);\n    this.box_.setPixels(this.startPixel_, this.startPixel_);\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport {inherits} from '../util.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from '../interaction/DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n *\n * @constructor\n * @extends {module:ol/interaction/DragBox}\n * @param {module:ol/interaction/DragZoom~Options=} opt_options Options.\n * @api\n */\nconst DragZoom = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const condition = options.condition ? options.condition : shiftKeyOnly;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.out_ = options.out !== undefined ? options.out : false;\n\n  DragBox.call(this, {\n    condition: condition,\n    className: options.className || 'ol-dragzoom'\n  });\n\n};\n\ninherits(DragZoom, DragBox);\n\n\n/**\n * @inheritDoc\n */\nDragZoom.prototype.onBoxEnd = function() {\n  const map = this.getMap();\n\n  const view = /** @type {!module:ol/View} */ (map.getView());\n\n  const size = /** @type {!module:ol/size~Size} */ (map.getSize());\n\n  let extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    const mapExtent = view.calculateExtent(size);\n    const boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    const factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  const resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  let center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n\n};\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {inherits} from '../util.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @param {module:ol/interaction/KeyboardPan~Options=} opt_options Options.\n * @api\n */\nconst KeyboardPan = function(opt_options) {\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @param {module:ol/MapBrowserEvent} mapBrowserEvent Browser event.\n   * @return {boolean} Combined condition result.\n   */\n  this.defaultCondition_ = function(mapBrowserEvent) {\n    return noModifierKeys(mapBrowserEvent) &&\n      targetNotEditable(mapBrowserEvent);\n  };\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition !== undefined ?\n    options.condition : this.defaultCondition_;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelDelta_ = options.pixelDelta !== undefined ?\n    options.pixelDelta : 128;\n\n};\n\ninherits(KeyboardPan, Interaction);\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    const keyEvent = mapBrowserEvent.originalEvent;\n    const keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      let deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      const delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport {inherits} from '../util.js';\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link moudle:ol/interaction/KeyboardPan~KeyboardPan}.\n *\n * @constructor\n * @param {module:ol/interaction/KeyboardZoom~Options=} opt_options Options.\n * @extends {module:ol/interaction/Interaction}\n * @api\n */\nconst KeyboardZoom = function(opt_options) {\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delta_ = options.delta ? options.delta : 1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n};\n\ninherits(KeyboardZoom, Interaction);\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    const keyEvent = mapBrowserEvent.originalEvent;\n    const charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      const map = mapBrowserEvent.map;\n      const delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport {inherits} from '../util.js';\nimport ViewHint from '../ViewHint.js';\nimport {always} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\nconst MAX_DELTA = 1;\n\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [constrainResolution=false] When using a trackpad or\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\n * ends.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @param {module:ol/interaction/MouseWheelZoom~Options=} opt_options Options.\n * @api\n */\nconst MouseWheelZoom = function(opt_options) {\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delta_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.constrainResolution_ = options.constrainResolution || false;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : always;\n\n  /**\n   * @private\n   * @type {?module:ol/coordinate~Coordinate}\n   */\n  this.lastAnchor_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.startTime_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.timeoutId_ = undefined;\n\n  /**\n   * @private\n   * @type {module:ol/interaction/MouseWheelZoom~Mode|undefined}\n   */\n  this.mode_ = undefined;\n\n  /**\n   * Trackpad events separated by this delay will be considered separate\n   * interactions.\n   * @type {number}\n   */\n  this.trackpadEventGap_ = 400;\n\n  /**\n   * @type {number|undefined}\n   */\n  this.trackpadTimeoutId_ = undefined;\n\n  /**\n   * The number of delta values per zoom level\n   * @private\n   * @type {number}\n   */\n  this.trackpadDeltaPerZoom_ = 300;\n\n  /**\n   * The zoom factor by which scroll zooming is allowed to exceed the limits.\n   * @private\n   * @type {number}\n   */\n  this.trackpadZoomBuffer_ = 1.5;\n\n};\n\ninherits(MouseWheelZoom, Interaction);\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * mousewheel-event) and eventually zooms the map.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} Allow event propagation.\n * @this {module:ol/interaction/MouseWheelZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  const type = mapBrowserEvent.type;\n  if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n    return true;\n  }\n\n  mapBrowserEvent.preventDefault();\n\n  const map = mapBrowserEvent.map;\n  const wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n  if (this.useAnchor_) {\n    this.lastAnchor_ = mapBrowserEvent.coordinate;\n  }\n\n  // Delta normalisation inspired by\n  // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n  let delta;\n  if (mapBrowserEvent.type == EventType.WHEEL) {\n    delta = wheelEvent.deltaY;\n    if (FIREFOX &&\n        wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      delta /= DEVICE_PIXEL_RATIO;\n    }\n    if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      delta *= 40;\n    }\n  } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n    delta = -wheelEvent.wheelDeltaY;\n    if (SAFARI) {\n      delta /= 3;\n    }\n  }\n\n  if (delta === 0) {\n    return false;\n  }\n\n  const now = Date.now();\n\n  if (this.startTime_ === undefined) {\n    this.startTime_ = now;\n  }\n\n  if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n    this.mode_ = Math.abs(delta) < 4 ?\n      Mode.TRACKPAD :\n      Mode.WHEEL;\n  }\n\n  if (this.mode_ === Mode.TRACKPAD) {\n    const view = map.getView();\n    if (this.trackpadTimeoutId_) {\n      clearTimeout(this.trackpadTimeoutId_);\n    } else {\n      view.setHint(ViewHint.INTERACTING, 1);\n    }\n    this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n    let resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n    const minResolution = view.getMinResolution();\n    const maxResolution = view.getMaxResolution();\n    let rebound = 0;\n    if (resolution < minResolution) {\n      resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n      rebound = 1;\n    } else if (resolution > maxResolution) {\n      resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n      rebound = -1;\n    }\n    if (this.lastAnchor_) {\n      const center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n      view.setCenter(view.constrainCenter(center));\n    }\n    view.setResolution(resolution);\n\n    if (rebound === 0 && this.constrainResolution_) {\n      view.animate({\n        resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: this.duration_\n      });\n    }\n\n    if (rebound > 0) {\n      view.animate({\n        resolution: minResolution,\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: 500\n      });\n    } else if (rebound < 0) {\n      view.animate({\n        resolution: maxResolution,\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: 500\n      });\n    }\n    this.startTime_ = now;\n    return false;\n  }\n\n  this.delta_ += delta;\n\n  const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n  clearTimeout(this.timeoutId_);\n  this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n  return false;\n}\n\n\n/**\n * @private\n */\nMouseWheelZoom.prototype.decrementInteractingHint_ = function() {\n  this.trackpadTimeoutId_ = undefined;\n  const view = this.getMap().getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n};\n\n\n/**\n * @private\n * @param {module:ol/PluggableMap} map Map.\n */\nMouseWheelZoom.prototype.handleWheelZoom_ = function(map) {\n  const view = map.getView();\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  const maxDelta = MAX_DELTA;\n  const delta = clamp(this.delta_, -maxDelta, maxDelta);\n  zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n  this.mode_ = undefined;\n  this.delta_ = 0;\n  this.lastAnchor_ = null;\n  this.startTime_ = undefined;\n  this.timeoutId_ = undefined;\n};\n\n\n/**\n * Enable or disable using the mouse's location as an anchor when zooming\n * @param {boolean} useAnchor true to zoom to the mouse's location, false\n * to zoom to the center of the map\n * @api\n */\nMouseWheelZoom.prototype.setMouseAnchor = function(useAnchor) {\n  this.useAnchor_ = useAnchor;\n  if (!useAnchor) {\n    this.lastAnchor_ = null;\n  }\n};\n\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport {inherits} from '../util.js';\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/PinchRotate~Options=} opt_options Options.\n * @api\n */\nconst PinchRotate = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.anchor_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastAngle_ = undefined;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotating_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotationDelta_ = 0.0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n};\n\ninherits(PinchRotate, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  let rotationDelta = 0.0;\n\n  const touch0 = this.targetPointers[0];\n  const touch1 = this.targetPointers[1];\n\n  // angle between touches\n  const angle = Math.atan2(\n    touch1.clientY - touch0.clientY,\n    touch1.clientX - touch0.clientX);\n\n  if (this.lastAngle_ !== undefined) {\n    const delta = angle - this.lastAngle_;\n    this.rotationDelta_ += delta;\n    if (!this.rotating_ &&\n        Math.abs(this.rotationDelta_) > this.threshold_) {\n      this.rotating_ = true;\n    }\n    rotationDelta = delta;\n  }\n  this.lastAngle_ = angle;\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  if (view.getConstraints().rotation === disable) {\n    return;\n  }\n\n  // rotate anchor point.\n  // FIXME: should be the intersection point between the lines:\n  //     touch0,touch1 and previousTouch0,previousTouch1\n  const viewportPosition = map.getViewport().getBoundingClientRect();\n  const centroid = centroidFromPointers(this.targetPointers);\n  centroid[0] -= viewportPosition.left;\n  centroid[1] -= viewportPosition.top;\n  this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n  // rotate\n  if (this.rotating_) {\n    const rotation = view.getRotation();\n    map.render();\n    rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (this.targetPointers.length < 2) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    if (this.rotating_) {\n      const rotation = view.getRotation();\n      rotate(view, rotation, this.anchor_, this.duration_);\n    }\n    return false;\n  } else {\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length >= 2) {\n    const map = mapBrowserEvent.map;\n    this.anchor_ = null;\n    this.lastAngle_ = undefined;\n    this.rotating_ = false;\n    this.rotationDelta_ = 0.0;\n    if (!this.handlingDownUpSequence) {\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nPinchRotate.prototype.shouldStopEvent = FALSE;\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport {inherits} from '../util.js';\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {zoom, zoomWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/PinchZoom~Options=} opt_options Options.\n * @api\n */\nconst PinchZoom = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.constrainResolution_ = options.constrainResolution || false;\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.anchor_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastDistance_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.lastScaleDelta_ = 1;\n\n};\n\ninherits(PinchZoom, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  let scaleDelta = 1.0;\n\n  const touch0 = this.targetPointers[0];\n  const touch1 = this.targetPointers[1];\n  const dx = touch0.clientX - touch1.clientX;\n  const dy = touch0.clientY - touch1.clientY;\n\n  // distance between touches\n  const distance = Math.sqrt(dx * dx + dy * dy);\n\n  if (this.lastDistance_ !== undefined) {\n    scaleDelta = this.lastDistance_ / distance;\n  }\n  this.lastDistance_ = distance;\n\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  const resolution = view.getResolution();\n  const maxResolution = view.getMaxResolution();\n  const minResolution = view.getMinResolution();\n  let newResolution = resolution * scaleDelta;\n  if (newResolution > maxResolution) {\n    scaleDelta = maxResolution / resolution;\n    newResolution = maxResolution;\n  } else if (newResolution < minResolution) {\n    scaleDelta = minResolution / resolution;\n    newResolution = minResolution;\n  }\n\n  if (scaleDelta != 1.0) {\n    this.lastScaleDelta_ = scaleDelta;\n  }\n\n  // scale anchor point.\n  const viewportPosition = map.getViewport().getBoundingClientRect();\n  const centroid = centroidFromPointers(this.targetPointers);\n  centroid[0] -= viewportPosition.left;\n  centroid[1] -= viewportPosition.top;\n  this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n  // scale, bypass the resolution constraint\n  map.render();\n  zoomWithoutConstraints(view, newResolution, this.anchor_);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (this.targetPointers.length < 2) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    const resolution = view.getResolution();\n    if (this.constrainResolution_ ||\n        resolution < view.getMinResolution() ||\n        resolution > view.getMaxResolution()) {\n      // Zoom to final resolution, with an animation, and provide a\n      // direction not to zoom out/in if user was pinching in/out.\n      // Direction is > 0 if pinching out, and < 0 if pinching in.\n      const direction = this.lastScaleDelta_ - 1;\n      zoom(view, resolution, this.anchor_, this.duration_, direction);\n    }\n    return false;\n  } else {\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length >= 2) {\n    const map = mapBrowserEvent.map;\n    this.anchor_ = null;\n    this.lastDistance_ = undefined;\n    this.lastScaleDelta_ = 1;\n    if (!this.handlingDownUpSequence) {\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nPinchZoom.prototype.shouldStopEvent = FALSE;\nexport default PinchZoom;\n","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport {inherits} from '../util.js';\nimport {TRUE} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from '../interaction/Interaction.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array.<function(new: module:ol/format/Feature)>} [formatConstructors] Format constructors.\n * @property {module:ol/source/Vector} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {module:ol/proj~ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {Element} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n\n/**\n * @enum {string}\n */\nconst DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event module:ol/interaction/DragAndDrop~DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/interaction/DragAndDrop~DragAndDropEventType} type Type.\n * @param {File} file File.\n * @param {Array.<module:ol/Feature>=} opt_features Features.\n * @param {module:ol/proj/Projection=} opt_projection Projection.\n */\nconst DragAndDropEvent = function(type, file, opt_features, opt_projection) {\n\n  Event.call(this, type);\n\n  /**\n   * The features parsed from dropped data.\n   * @type {Array.<module:ol/Feature>|undefined}\n   * @api\n   */\n  this.features = opt_features;\n\n  /**\n   * The dropped file.\n   * @type {File}\n   * @api\n   */\n  this.file = file;\n\n  /**\n   * The feature projection.\n   * @type {module:ol/proj/Projection|undefined}\n   * @api\n   */\n  this.projection = opt_projection;\n\n};\ninherits(DragAndDropEvent, Event);\n\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @fires module:ol/interaction/DragAndDrop~DragAndDropEvent\n * @param {module:ol/interaction/DragAndDrop~Options=} opt_options Options.\n * @api\n */\nconst DragAndDrop = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  Interaction.call(this, {\n    handleEvent: TRUE\n  });\n\n  /**\n   * @private\n   * @type {Array.<function(new: module:ol/format/Feature)>}\n   */\n  this.formatConstructors_ = options.formatConstructors ?\n    options.formatConstructors : [];\n\n  /**\n   * @private\n   * @type {module:ol/proj/Projection}\n   */\n  this.projection_ = options.projection ?\n    getProjection(options.projection) : null;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.dropListenKeys_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/source/Vector}\n   */\n  this.source_ = options.source || null;\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.target = options.target ? options.target : null;\n\n};\n\ninherits(DragAndDrop, Interaction);\n\n\n/**\n * @param {DragEvent} event Event.\n * @this {module:ol/interaction/DragAndDrop}\n */\nfunction handleDrop(event) {\n  const files = event.dataTransfer.files;\n  for (let i = 0, ii = files.length; i < ii; ++i) {\n    const file = files.item(i);\n    const reader = new FileReader();\n    reader.addEventListener(EventType.LOAD, this.handleResult_.bind(this, file));\n    reader.readAsText(file);\n  }\n}\n\n\n/**\n * @param {DragEvent} event Event.\n */\nfunction handleStop(event) {\n  event.stopPropagation();\n  event.preventDefault();\n  event.dataTransfer.dropEffect = 'copy';\n}\n\n\n/**\n * @param {File} file File.\n * @param {Event} event Load event.\n * @private\n */\nDragAndDrop.prototype.handleResult_ = function(file, event) {\n  const result = event.target.result;\n  const map = this.getMap();\n  let projection = this.projection_;\n  if (!projection) {\n    const view = map.getView();\n    projection = view.getProjection();\n  }\n\n  const formatConstructors = this.formatConstructors_;\n  let features = [];\n  for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\n    /**\n     * Avoid \"cannot instantiate abstract class\" error.\n     * @type {Function}\n     */\n    const formatConstructor = formatConstructors[i];\n    /**\n     * @type {module:ol/format/Feature}\n     */\n    const format = new formatConstructor();\n    features = this.tryReadFeatures_(format, result, {\n      featureProjection: projection\n    });\n    if (features && features.length > 0) {\n      break;\n    }\n  }\n  if (this.source_) {\n    this.source_.clear();\n    this.source_.addFeatures(features);\n  }\n  this.dispatchEvent(\n    new DragAndDropEvent(\n      DragAndDropEventType.ADD_FEATURES, file,\n      features, projection));\n};\n\n\n/**\n * @private\n */\nDragAndDrop.prototype.registerListeners_ = function() {\n  const map = this.getMap();\n  if (map) {\n    const dropArea = this.target ? this.target : map.getViewport();\n    this.dropListenKeys_ = [\n      listen(dropArea, EventType.DROP, handleDrop, this),\n      listen(dropArea, EventType.DRAGENTER, handleStop, this),\n      listen(dropArea, EventType.DRAGOVER, handleStop, this),\n      listen(dropArea, EventType.DROP, handleStop, this)\n    ];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nDragAndDrop.prototype.setActive = function(active) {\n  Interaction.prototype.setActive.call(this, active);\n  if (active) {\n    this.registerListeners_();\n  } else {\n    this.unregisterListeners_();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nDragAndDrop.prototype.setMap = function(map) {\n  this.unregisterListeners_();\n  Interaction.prototype.setMap.call(this, map);\n  if (this.getActive()) {\n    this.registerListeners_();\n  }\n};\n\n\n/**\n * @param {module:ol/format/Feature} format Format.\n * @param {string} text Text.\n * @param {module:ol/format/Feature~ReadOptions} options Read options.\n * @private\n * @return {Array.<module:ol/Feature>} Features.\n */\nDragAndDrop.prototype.tryReadFeatures_ = function(format, text, options) {\n  try {\n    return format.readFeatures(text, options);\n  } catch (e) {\n    return null;\n  }\n};\n\n\n/**\n * @private\n */\nDragAndDrop.prototype.unregisterListeners_ = function() {\n  if (this.dropListenKeys_) {\n    this.dropListenKeys_.forEach(unlistenByKey);\n    this.dropListenKeys_ = null;\n  }\n};\n\n\nexport default DragAndDrop;\n","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport {inherits} from '../util.js';\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {shiftKeyOnly, mouseOnly} from '../events/condition.js';\nimport {rotate, rotateWithoutConstraints, zoom, zoomWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/DragRotateAndZoom~Options=} opt_options Options.\n * @api\n */\nconst DragRotateAndZoom = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastAngle_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastMagnitude_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.lastScaleDelta_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n};\n\ninherits(DragRotateAndZoom, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  const map = mapBrowserEvent.map;\n  const size = map.getSize();\n  const offset = mapBrowserEvent.pixel;\n  const deltaX = offset[0] - size[0] / 2;\n  const deltaY = size[1] / 2 - offset[1];\n  const theta = Math.atan2(deltaY, deltaX);\n  const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n  const view = map.getView();\n  if (view.getConstraints().rotation !== disable && this.lastAngle_ !== undefined) {\n    const angleDelta = theta - this.lastAngle_;\n    rotateWithoutConstraints(view, view.getRotation() - angleDelta);\n  }\n  this.lastAngle_ = theta;\n  if (this.lastMagnitude_ !== undefined) {\n    const resolution = this.lastMagnitude_ * (view.getResolution() / magnitude);\n    zoomWithoutConstraints(view, resolution);\n  }\n  if (this.lastMagnitude_ !== undefined) {\n    this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n  }\n  this.lastMagnitude_ = magnitude;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n  const direction = this.lastScaleDelta_ - 1;\n  rotate(view, view.getRotation());\n  zoom(view, view.getResolution(), undefined, this.duration_, direction);\n  this.lastScaleDelta_ = 0;\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (this.condition_(mapBrowserEvent)) {\n    mapBrowserEvent.map.getView().setHint(ViewHint.INTERACTING, 1);\n    this.lastAngle_ = undefined;\n    this.lastMagnitude_ = undefined;\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default DragRotateAndZoom;\n","/**\n * @module ol/interaction/Modify\n */\nimport {getUid, inherits} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {equals} from '../array.js';\nimport {equals as coordinatesEqual, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, closestOnSegment} from '../coordinate.js';\nimport {listen, unlisten} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {always, primaryAction, altKeyOnly, singleClick} from '../events/condition.js';\nimport {boundingExtent, buffer, createOrUpdateFromCoordinate} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend'\n};\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array.<number>} [depth]\n * @property {module:ol/Feature} feature\n * @property {module:ol/geom/SimpleGeometry} geometry\n * @property {number} index\n * @property {Array.<module:ol/extent~Extent>} segment\n * @property {Array.<module:ol/interaction/Modify~SegmentData>} [featureSegments]\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {module:ol/events/condition~Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {module:ol/events/condition~Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex can be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style used for the features being modified. By default the default edit\n * style is used (see {@link module:ol/style}).\n * @property {module:ol/source/Vector} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the features option.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the source option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {ModifyEventType} type Type.\n * @param {module:ol/Collection.<module:ol/Feature>} features\n * The features modified.\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserPointerEvent\n * Associated {@link module:ol/MapBrowserPointerEvent}.\n */\nexport const ModifyEvent = function(type, features, mapBrowserPointerEvent) {\n\n  Event.call(this, type);\n\n  /**\n   * The features being modified.\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @api\n   */\n  this.features = features;\n\n  /**\n   * Associated {@link module:ol/MapBrowserEvent}.\n   * @type {module:ol/MapBrowserEvent}\n   * @api\n   */\n  this.mapBrowserEvent = mapBrowserPointerEvent;\n};\n\ninherits(ModifyEvent, Event);\n\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/Modify~Options} options Options.\n * @fires module:ol/interaction/Modify~ModifyEvent\n * @api\n */\nconst Modify = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleEvent: handleEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : primaryAction;\n\n\n  /**\n   * @private\n   * @param {module:ol/MapBrowserEvent} mapBrowserEvent Browser event.\n   * @return {boolean} Combined condition result.\n   */\n  this.defaultDeleteCondition_ = function(mapBrowserEvent) {\n    return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n  };\n\n  /**\n   * @type {module:ol/events/condition~Condition}\n   * @private\n   */\n  this.deleteCondition_ = options.deleteCondition ?\n    options.deleteCondition : this.defaultDeleteCondition_;\n\n  /**\n   * @type {module:ol/events/condition~Condition}\n   * @private\n   */\n  this.insertVertexCondition_ = options.insertVertexCondition ?\n    options.insertVertexCondition : always;\n\n  /**\n   * Editing vertex.\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * Segments intersecting {@link this.vertexFeature_} by segment uid.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.vertexSegments_ = null;\n\n  /**\n   * @type {module:ol~Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * Tracks if the next `singleclick` event should be ignored to prevent\n   * accidental deletion right after vertex creation.\n   * @type {boolean}\n   * @private\n   */\n  this.ignoreNextSingleClick_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {module:ol/structs/RBush.<module:ol/interaction/Modify~SegmentData>}\n   * @private\n   */\n  this.rBush_ = new RBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = [];\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {module:ol/layer/Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style ? options.style :\n      getDefaultStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @const\n   * @private\n   * @type {!Object.<string, function(module:ol/Feature, module:ol/geom/Geometry)>}\n   */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'Circle': this.writeCircleGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_\n  };\n\n\n  /**\n   * @type {module:ol/source/Vector}\n   * @private\n   */\n  this.source_ = null;\n\n  let features;\n  if (options.source) {\n    this.source_ = options.source;\n    features = new Collection(this.source_.getFeatures());\n    listen(this.source_, VectorEventType.ADDFEATURE,\n      this.handleSourceAdd_, this);\n    listen(this.source_, VectorEventType.REMOVEFEATURE,\n      this.handleSourceRemove_, this);\n  } else {\n    features = options.features;\n  }\n  if (!features) {\n    throw new Error('The modify interaction requires features or a source');\n  }\n\n  /**\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @private\n   */\n  this.features_ = features;\n\n  this.features_.forEach(this.addFeature_.bind(this));\n  listen(this.features_, CollectionEventType.ADD,\n    this.handleFeatureAdd_, this);\n  listen(this.features_, CollectionEventType.REMOVE,\n    this.handleFeatureRemove_, this);\n\n  /**\n   * @type {module:ol/MapBrowserPointerEvent}\n   * @private\n   */\n  this.lastPointerEvent_ = null;\n\n};\n\ninherits(Modify, PointerInteraction);\n\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nModify.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n    this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n  }\n  const map = this.getMap();\n  if (map && map.isRendered() && this.getActive()) {\n    this.handlePointerAtPixel_(this.lastPixel_, map);\n  }\n  listen(feature, EventType.CHANGE,\n    this.handleFeatureChange_, this);\n};\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nModify.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new ModifyEvent(\n      ModifyEventType.MODIFYSTART, this.features_, evt));\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nModify.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n  unlisten(feature, EventType.CHANGE,\n    this.handleFeatureChange_, this);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nModify.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<module:ol/interaction/Modify~SegmentData>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n     * @param {module:ol/interaction/Modify~SegmentData} node RTree node.\n     */\n    function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nModify.prototype.setActive = function(active) {\n  if (this.vertexFeature_ && !active) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n  PointerInteraction.prototype.setActive.call(this, active);\n};\n\n\n/**\n * @inheritDoc\n */\nModify.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  PointerInteraction.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {module:ol/source/Vector~VectorSourceEvent} event Event.\n * @private\n */\nModify.prototype.handleSourceAdd_ = function(event) {\n  if (event.feature) {\n    this.features_.push(event.feature);\n  }\n};\n\n\n/**\n * @param {module:ol/source/Vector~VectorSourceEvent} event Event.\n * @private\n */\nModify.prototype.handleSourceRemove_ = function(event) {\n  if (event.feature) {\n    this.features_.remove(event.feature);\n  }\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nModify.prototype.handleFeatureAdd_ = function(evt) {\n  this.addFeature_(/** @type {module:ol/Feature} */ (evt.element));\n};\n\n\n/**\n * @param {module:ol/events/Event} evt Event.\n * @private\n */\nModify.prototype.handleFeatureChange_ = function(evt) {\n  if (!this.changingFeature_) {\n    const feature = /** @type {module:ol/Feature} */ (evt.target);\n    this.removeFeature_(feature);\n    this.addFeature_(feature);\n  }\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nModify.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {module:ol/Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Point} geometry Geometry.\n * @private\n */\nModify.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    feature: feature,\n    geometry: geometry,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiPoint} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      depth: [i],\n      index: i,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/LineString} geometry Geometry.\n * @private\n */\nModify.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: i,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiLineString} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Polygon} geometry Geometry.\n * @private\n */\nModify.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j, k],\n          index: i,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * We convert a circle into two segments.  The segment at index\n * {@link CIRCLE_CENTER_INDEX} is the\n * circle's center (a point).  The segment at index\n * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n * the circumference, and is not a line segment.\n *\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/geom/Circle} geometry Geometry.\n * @private\n */\nModify.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCenter();\n  const centerSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    feature: feature,\n    geometry: geometry,\n    index: CIRCLE_CENTER_INDEX,\n    segment: [coordinates, coordinates]\n  });\n  const circumferenceSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    feature: feature,\n    geometry: geometry,\n    index: CIRCLE_CIRCUMFERENCE_INDEX,\n    segment: [coordinates, coordinates]\n  });\n  const featureSegments = [centerSegmentData, circumferenceSegmentData];\n  centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n  this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n  this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @private\n */\nModify.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    this.SEGMENT_WRITERS_[geometries[i].getType()].call(this, feature, geometries[i]);\n  }\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinates Coordinates.\n * @return {module:ol/Feature} Vertex feature.\n * @private\n */\nModify.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new Feature(new Point(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {module:ol/interaction/Modify~SegmentData} a The first segment data.\n * @param {module:ol/interaction/Modify~SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Modify}\n */\nfunction handleDownEvent(evt) {\n  if (!this.condition_(evt)) {\n    return false;\n  }\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  const pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n  this.dragSegments_.length = 0;\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const insertVertices = [];\n    const geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(compareIndexes);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += '-' + depth.join('-'); // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n      segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        const closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch);\n        if (coordinatesEqual(closestVertex, vertex) && !componentSegments[uid][0]) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n        }\n      } else if (coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n\n        // prevent dragging closed linestrings by the connecting node\n        if ((segmentDataMatch.geometry.getType() ===\n            GeometryType.LINE_STRING ||\n            segmentDataMatch.geometry.getType() ===\n            GeometryType.MULTI_LINE_STRING) &&\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0) {\n          continue;\n        }\n\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      } else if (this.insertVertexCondition_(evt) && getUid(segment) in this.vertexSegments_ &&\n          (!componentSegments[uid][0] && !componentSegments[uid][1])) {\n        insertVertices.push([segmentDataMatch, vertex]);\n      }\n    }\n    if (insertVertices.length) {\n      this.willModifyFeatures_(evt);\n    }\n    for (let j = insertVertices.length - 1; j >= 0; --j) {\n      this.insertVertex_.apply(this, insertVertices[j]);\n    }\n  }\n  return !!this.vertexFeature_;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @this {module:ol/interaction/Modify}\n */\nfunction handleDragEvent(evt) {\n  this.ignoreNextSingleClick_ = false;\n  this.willModifyFeatures_(evt);\n\n  const vertex = evt.coordinate;\n  for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n    const dragSegment = this.dragSegments_[i];\n    const segmentData = dragSegment[0];\n    const depth = segmentData.depth;\n    const geometry = segmentData.geometry;\n    let coordinates;\n    const segment = segmentData.segment;\n    const index = dragSegment[1];\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(segment[index][vertex.length]);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.POINT:\n        coordinates = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.MULTI_POINT:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index] = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.CIRCLE:\n        segment[0] = segment[1] = vertex;\n        if (segmentData.index === CIRCLE_CENTER_INDEX) {\n          this.changingFeature_ = true;\n          geometry.setCenter(vertex);\n          this.changingFeature_ = false;\n        } else { // We're dragging the circle's circumference:\n          this.changingFeature_ = true;\n          geometry.setRadius(coordinateDistance(geometry.getCenter(), vertex));\n          this.changingFeature_ = false;\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (coordinates) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n    }\n  }\n  this.createOrUpdateVertexFeature_(vertex);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Modify}\n */\nfunction handleUpEvent(evt) {\n  for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n    const segmentData = this.dragSegments_[i][0];\n    const geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE) {\n      // Update a circle object in the R* bush:\n      const coordinates = geometry.getCenter();\n      const centerSegmentData = segmentData.featureSegments[0];\n      const circumferenceSegmentData = segmentData.featureSegments[1];\n      centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n      circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n      this.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n      this.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n    } else {\n      this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n    }\n  }\n  if (this.modified_) {\n    this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n  }\n  return false;\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Modify}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  this.lastPointerEvent_ = mapBrowserEvent;\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n    if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK || !this.ignoreNextSingleClick_) {\n      handled = this.removePoint();\n    } else {\n      handled = true;\n    }\n  }\n\n  if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n    this.ignoreNextSingleClick_ = false;\n  }\n\n  return handlePointerEvent.call(this, mapBrowserEvent) && !handled;\n}\n\n\n/**\n * @param {module:ol/MapBrowserEvent} evt Event.\n * @private\n */\nModify.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {module:ol~Pixel} pixel Pixel\n * @param {module:ol/PluggableMap} map Map.\n * @private\n */\nModify.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return pointDistanceToSegmentDataSquared(pixelCoordinate, a) -\n        pointDistanceToSegmentDataSquared(pixelCoordinate, b);\n  };\n\n  const box = buffer(createOrUpdateFromCoordinate(pixelCoordinate),\n    map.getView().getResolution() * this.pixelTolerance_);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = closestOnSegmentData(pixelCoordinate, node);\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    let dist = coordinateDistance(pixel, vertexPixel);\n    if (dist <= this.pixelTolerance_) {\n      const vertexSegments = {};\n\n      if (node.geometry.getType() === GeometryType.CIRCLE &&\n      node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        this.snappedToVertex_ = true;\n        this.createOrUpdateVertexFeature_(vertex);\n      } else {\n        const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        }\n        this.createOrUpdateVertexFeature_(vertex);\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          const segment = nodes[i].segment;\n          if ((coordinatesEqual(closestSegment[0], segment[0]) &&\n              coordinatesEqual(closestSegment[1], segment[1]) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n              coordinatesEqual(closestSegment[1], segment[0])))) {\n            vertexSegments[getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n      }\n\n      vertexSegments[getUid(closestSegment)] = true;\n      this.vertexSegments_ = vertexSegments;\n      return;\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {module:ol/coordinate~Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {module:ol/interaction/Modify~SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction pointDistanceToSegmentDataSquared(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    const circleGeometry = /** @type {module:ol/geom/Circle} */ (geometry);\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const distanceToCenterSquared =\n            squaredCoordinateDistance(circleGeometry.getCenter(), pointCoordinates);\n      const distanceToCircumference =\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n  return squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {module:ol/coordinate~Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {module:ol/interaction/Modify~SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {module:ol/coordinate~Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE &&\n  segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n    return geometry.getClosestPoint(pointCoordinates);\n  }\n  return closestOnSegment(pointCoordinates, segmentData.segment);\n}\n\n\n/**\n * @param {module:ol/interaction/Modify~SegmentData} segmentData Segment data.\n * @param {module:ol/coordinate~Coordinate} vertex Vertex.\n * @private\n */\nModify.prototype.insertVertex_ = function(segmentData, vertex) {\n  const segment = segmentData.segment;\n  const feature = segmentData.feature;\n  const geometry = segmentData.geometry;\n  const depth = segmentData.depth;\n  const index = /** @type {number} */ (segmentData.index);\n  let coordinates;\n\n  while (vertex.length < geometry.getStride()) {\n    vertex.push(0);\n  }\n\n  switch (geometry.getType()) {\n    case GeometryType.MULTI_LINE_STRING:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.POLYGON:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.MULTI_POLYGON:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.LINE_STRING:\n      coordinates = geometry.getCoordinates();\n      coordinates.splice(index + 1, 0, vertex);\n      break;\n    default:\n      return;\n  }\n\n  this.setGeometryCoordinates_(geometry, coordinates);\n  const rTree = this.rBush_;\n  rTree.remove(segmentData);\n  this.updateSegmentIndices_(geometry, index, depth, 1);\n  const newSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    segment: [segment[0], vertex],\n    feature: feature,\n    geometry: geometry,\n    depth: depth,\n    index: index\n  });\n  rTree.insert(boundingExtent(newSegmentData.segment),\n    newSegmentData);\n  this.dragSegments_.push([newSegmentData, 1]);\n\n  const newSegmentData2 = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    segment: [vertex, segment[1]],\n    feature: feature,\n    geometry: geometry,\n    depth: depth,\n    index: index + 1\n  });\n  rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n  this.dragSegments_.push([newSegmentData2, 0]);\n  this.ignoreNextSingleClick_ = true;\n};\n\n/**\n * Removes the vertex currently being pointed.\n * @return {boolean} True when a vertex was removed.\n * @api\n */\nModify.prototype.removePoint = function() {\n  if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n    const evt = this.lastPointerEvent_;\n    this.willModifyFeatures_(evt);\n    this.removeVertex_();\n    this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Removes a vertex from all matching features.\n * @return {boolean} True when a vertex was removed.\n * @private\n */\nModify.prototype.removeVertex_ = function() {\n  const dragSegments = this.dragSegments_;\n  const segmentsByFeature = {};\n  let deleted = false;\n  let component, coordinates, dragSegment, geometry, i, index, left;\n  let newIndex, right, segmentData, uid;\n  for (i = dragSegments.length - 1; i >= 0; --i) {\n    dragSegment = dragSegments[i];\n    segmentData = dragSegment[0];\n    uid = getUid(segmentData.feature);\n    if (segmentData.depth) {\n      // separate feature components\n      uid += '-' + segmentData.depth.join('-');\n    }\n    if (!(uid in segmentsByFeature)) {\n      segmentsByFeature[uid] = {};\n    }\n    if (dragSegment[1] === 0) {\n      segmentsByFeature[uid].right = segmentData;\n      segmentsByFeature[uid].index = segmentData.index;\n    } else if (dragSegment[1] == 1) {\n      segmentsByFeature[uid].left = segmentData;\n      segmentsByFeature[uid].index = segmentData.index + 1;\n    }\n\n  }\n  for (uid in segmentsByFeature) {\n    right = segmentsByFeature[uid].right;\n    left = segmentsByFeature[uid].left;\n    index = segmentsByFeature[uid].index;\n    newIndex = index - 1;\n    if (left !== undefined) {\n      segmentData = left;\n    } else {\n      segmentData = right;\n    }\n    if (newIndex < 0) {\n      newIndex = 0;\n    }\n    geometry = segmentData.geometry;\n    coordinates = geometry.getCoordinates();\n    component = coordinates;\n    deleted = false;\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        if (coordinates[segmentData.depth[0]].length > 2) {\n          coordinates[segmentData.depth[0]].splice(index, 1);\n          deleted = true;\n        }\n        break;\n      case GeometryType.LINE_STRING:\n        if (coordinates.length > 2) {\n          coordinates.splice(index, 1);\n          deleted = true;\n        }\n        break;\n      case GeometryType.MULTI_POLYGON:\n        component = component[segmentData.depth[1]];\n        /* falls through */\n      case GeometryType.POLYGON:\n        component = component[segmentData.depth[0]];\n        if (component.length > 4) {\n          if (index == component.length - 1) {\n            index = 0;\n          }\n          component.splice(index, 1);\n          deleted = true;\n          if (index === 0) {\n            // close the ring again\n            component.pop();\n            component.push(component[0]);\n            newIndex = component.length - 1;\n          }\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (deleted) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n      const segments = [];\n      if (left !== undefined) {\n        this.rBush_.remove(left);\n        segments.push(left.segment[0]);\n      }\n      if (right !== undefined) {\n        this.rBush_.remove(right);\n        segments.push(right.segment[1]);\n      }\n      if (left !== undefined && right !== undefined) {\n        const newSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n          depth: segmentData.depth,\n          feature: segmentData.feature,\n          geometry: segmentData.geometry,\n          index: newIndex,\n          segment: segments\n        });\n        this.rBush_.insert(boundingExtent(newSegmentData.segment),\n          newSegmentData);\n      }\n      this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n      if (this.vertexFeature_) {\n        this.overlay_.getSource().removeFeature(this.vertexFeature_);\n        this.vertexFeature_ = null;\n      }\n      dragSegments.length = 0;\n    }\n\n  }\n  return deleted;\n};\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nModify.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @param {number} index Index.\n * @param {Array.<number>|undefined} depth Depth.\n * @param {number} delta Delta (1 or -1).\n * @private\n */\nModify.prototype.updateSegmentIndices_ = function(\n  geometry, index, depth, delta) {\n  this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\n    if (segmentDataMatch.geometry === geometry &&\n        (depth === undefined || segmentDataMatch.depth === undefined ||\n        equals(segmentDataMatch.depth, depth)) &&\n        segmentDataMatch.index > index) {\n      segmentDataMatch.index += delta;\n    }\n  });\n};\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n\nexport default Modify;\n","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../util.js';\nimport {CollectionEvent} from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, closestOnCircle, closestOnSegment, squaredDistanceToSegment} from '../coordinate.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport {VectorSourceEvent} from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped\n * @property {module:ol/coordinate~Coordinate|null} vertex\n * @property {module:ol~Pixel|null} vertexPixel\n */\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {module:ol/Feature} feature\n * @property {Array.<module:ol/coordinate~Coordinate>} segment\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/Collection.<module:ol/Feature>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {module:ol/source/Vector} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     var snap = new Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/Snap~Options=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: handleEvent,\n    handleDownEvent: TRUE,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {module:ol/source/Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<module:ol/events~EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, module:ol/events~EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, module:ol/extent~Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {!Object.<number, module:ol/Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {module:ol/coordinate~Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(module:ol/interaction/Snap~SegmentData, module:ol/interaction/Snap~SegmentData): number}\n   * @private\n   */\n  this.sortByDistance_ = sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {module:ol/structs/RBush.<module:ol/interaction/Snap~SegmentData>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(module:ol/Feature, module:ol/geom/Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {module:ol/Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const register = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (register) {\n    this.featureChangeListenerKeys_[feature_uid] = listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {module:ol/Collection.<module:ol/Feature>|Array.<module:ol/Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return (\n    /** @type {!Array.<module:ol/Feature>|!module:ol/Collection.<module:ol/Feature>} */ (features)\n  );\n};\n\n\n/**\n * @param {module:ol/source/Vector|module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSourceEvent) {\n    feature = evt.feature;\n  } else if (evt instanceof CollectionEvent) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {module:ol/Feature} */ (feature));\n};\n\n\n/**\n * @param {module:ol/source/Vector|module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSourceEvent) {\n    feature = evt.feature;\n  } else if (evt instanceof CollectionEvent) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {module:ol/Feature} */ (feature));\n};\n\n\n/**\n * @param {module:ol/events/Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {module:ol/Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {module:ol/Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unregister) {\n    unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {module:ol~Pixel} pixel Pixel\n * @param {module:ol/coordinate~Coordinate} pixelCoordinate Coordinate\n * @param {module:ol/PluggableMap} map Map.\n * @return {module:ol/interaction/Snap~Result} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n      squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = closestOnCircle(pixelCoordinate,\n          /** @type {module:ol/geom/Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = closestOnSegment(pixelCoordinate, closestSegment);\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return (\n    /** @type {module:ol/interaction/Snap~Result} */ ({\n      snapped: snapped,\n      vertex: vertex,\n      vertexPixel: vertexPixel\n    })\n  );\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {module:ol/MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {module:ol/interaction/Snap}\n */\nexport function handleEvent(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return handlePointerEvent.call(this, evt);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Snap}\n */\nfunction handleUpEvent(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n}\n\n\n/**\n * Sort segments by distance, helper function\n * @param {module:ol/interaction/Snap~SegmentData} a The first segment data.\n * @param {module:ol/interaction/Snap~SegmentData} b The second segment data.\n * @return {number} The difference in distance.\n * @this {module:ol/interaction/Snap}\n */\nfunction sortByDistance(a, b) {\n  const deltaA = squaredDistanceToSegment(this.pixelCoordinate_, a.segment);\n  const deltaB = squaredDistanceToSegment(this.pixelCoordinate_, b.segment);\n  return deltaA - deltaB;\n}\n\nexport default Snap;\n","/**\n * @module ol/interaction/Translate\n */\nimport {inherits} from '../util.js';\nimport Collection from '../Collection.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {TRUE} from '../functions.js';\nimport {includes} from '../array.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\n\n\n/**\n * @enum {string}\n */\nconst TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/Collection.<module:ol/Feature>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array.<module:ol/layer/Layer>|function(module:ol/layer/Layer): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/interaction/Translate~TranslateEventType} type Type.\n * @param {module:ol/Collection.<module:ol/Feature>} features The features translated.\n * @param {module:ol/coordinate~Coordinate} coordinate The event coordinate.\n */\nexport const TranslateEvent = function(type, features, coordinate) {\n\n  Event.call(this, type);\n\n  /**\n   * The features being translated.\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @api\n   */\n  this.features = features;\n\n  /**\n   * The coordinate of the drag event.\n   * @const\n   * @type {module:ol/coordinate~Coordinate}\n   * @api\n   */\n  this.coordinate = coordinate;\n};\n\ninherits(TranslateEvent, Event);\n\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @fires module:ol/interaction/Translate~TranslateEvent\n * @param {module:ol/interaction/Translate~Options=} opt_options Options.\n * @api\n */\nconst Translate = function(opt_options) {\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleMoveEvent: handleMoveEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * The last position we translated to.\n   * @type {module:ol/coordinate~Coordinate}\n   * @private\n   */\n  this.lastCoordinate_ = null;\n\n\n  /**\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @private\n   */\n  this.features_ = options.features !== undefined ? options.features : null;\n\n  /** @type {function(module:ol/layer/Layer): boolean} */\n  let layerFilter;\n  if (options.layers) {\n    if (typeof options.layers === 'function') {\n      layerFilter = options.layers;\n    } else {\n      const layers = options.layers;\n      layerFilter = function(layer) {\n        return includes(layers, layer);\n      };\n    }\n  } else {\n    layerFilter = TRUE;\n  }\n\n  /**\n   * @private\n   * @type {function(module:ol/layer/Layer): boolean}\n   */\n  this.layerFilter_ = layerFilter;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n  /**\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.lastFeature_ = null;\n\n  listen(this,\n    getChangeEventType(InteractionProperty.ACTIVE),\n    this.handleActiveChanged_, this);\n\n};\n\ninherits(Translate, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Translate}\n */\nfunction handleDownEvent(event) {\n  this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n  if (!this.lastCoordinate_ && this.lastFeature_) {\n    this.lastCoordinate_ = event.coordinate;\n    handleMoveEvent.call(this, event);\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATESTART, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Translate}\n */\nfunction handleUpEvent(event) {\n  if (this.lastCoordinate_) {\n    this.lastCoordinate_ = null;\n    handleMoveEvent.call(this, event);\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATEEND, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @this {module:ol/interaction/Translate}\n */\nfunction handleDragEvent(event) {\n  if (this.lastCoordinate_) {\n    const newCoordinate = event.coordinate;\n    const deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n    const deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    features.forEach(function(feature) {\n      const geom = feature.getGeometry();\n      geom.translate(deltaX, deltaY);\n      feature.setGeometry(geom);\n    });\n\n    this.lastCoordinate_ = newCoordinate;\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATING, features,\n        newCoordinate));\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserEvent} event Event.\n * @this {module:ol/interaction/Translate}\n */\nfunction handleMoveEvent(event) {\n  const elem = event.map.getViewport();\n\n  // Change the cursor to grab/grabbing if hovering any of the features managed\n  // by the interaction\n  if (this.featuresAtPixel_(event.pixel, event.map)) {\n    elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n    elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n  } else {\n    elem.classList.remove('ol-grab', 'ol-grabbing');\n  }\n}\n\n\n/**\n * Tests to see if the given coordinates intersects any of our selected\n * features.\n * @param {module:ol~Pixel} pixel Pixel coordinate to test for intersection.\n * @param {module:ol/PluggableMap} map Map to test the intersection on.\n * @return {module:ol/Feature} Returns the feature found at the specified pixel\n * coordinates.\n * @private\n */\nTranslate.prototype.featuresAtPixel_ = function(pixel, map) {\n  return map.forEachFeatureAtPixel(pixel,\n    function(feature) {\n      if (!this.features_ || includes(this.features_.getArray(), feature)) {\n        return feature;\n      }\n    }.bind(this), {\n      layerFilter: this.layerFilter_,\n      hitTolerance: this.hitTolerance_\n    });\n};\n\n\n/**\n * Returns the Hit-detection tolerance.\n * @returns {number} Hit tolerance in pixels.\n * @api\n */\nTranslate.prototype.getHitTolerance = function() {\n  return this.hitTolerance_;\n};\n\n\n/**\n * Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @api\n */\nTranslate.prototype.setHitTolerance = function(hitTolerance) {\n  this.hitTolerance_ = hitTolerance;\n};\n\n\n/**\n * @inheritDoc\n */\nTranslate.prototype.setMap = function(map) {\n  const oldMap = this.getMap();\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_(oldMap);\n};\n\n\n/**\n * @private\n */\nTranslate.prototype.handleActiveChanged_ = function() {\n  this.updateState_(null);\n};\n\n\n/**\n * @param {module:ol/PluggableMap} oldMap Old map.\n * @private\n */\nTranslate.prototype.updateState_ = function(oldMap) {\n  let map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    map = map || oldMap;\n    if (map) {\n      const elem = map.getViewport();\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n};\n\n\nexport default Translate;\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the wheel/trackpad or pinch gesture ends.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\n * mousewheel zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. The default set of\n * interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {module:ol/interaction/Interaction~DefaultsOptions=} opt_options\n * Defaults options.\n * @return {module:ol/Collection.<module:ol/interaction/Interaction>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      kinetic: kinetic\n    }));\n  }\n\n  const pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array.<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((module:ol/coordinate~Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/coordinate~Coordinate} delta Delta.\n * @return {module:ol/coordinate~Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @param {module:ol/geom/Circle} circle The circle.\n * @return {module:ol/coordinate~Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + r * dx / d;\n  const y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @param {Array.<module:ol/coordinate~Coordinate>} segment The two coordinates\n * of the segment.\n * @return {module:ol/coordinate~Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {module:ol/coordinate~Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {module:ol/coordinate~CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coord1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coord1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate of the point.\n * @param {Array.<module:ol/coordinate~Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3\n};\n","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * @see {@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface}\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/EventTarget~EventTarget}.\n *\n * @constructor\n * @param {string} type Type.\n */\nconst Event = function(type) {\n\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n  this.type = type;\n\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n  this.target = null;\n\n};\n\n\n/**\n * Stop event propagation.\n * @function\n * @api\n */\nEvent.prototype.preventDefault =\n\n  /**\n   * Stop event propagation.\n   * @function\n   * @api\n   */\n  Event.prototype.stopPropagation = function() {\n    this.propagationStopped = true;\n  };\n\n\n/**\n * @param {Event|module:ol/events/Event} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|module:ol/events/Event} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, module:ol/MapBrowserEvent): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {module:ol/MapBrowserEvent} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @function\n * @api\n */\nexport const always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @function\n * @api\n */\nexport const never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function(mapBrowserEvent) {\n  const target = mapBrowserEvent.originalEvent.target;\n  const tagName = target.tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function(mapBrowserEvent) {\n  assert(mapBrowserEvent.pointerEvent, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return (\n    /** @type {module:ol/MapBrowserEvent} */ (mapBrowserEvent).pointerEvent.pointerType == 'mouse'\n  );\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * @see http://www.w3.org/TR/pointerevents/#button-states\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function(mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.pointerEvent;\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/layer/Vector\n */\nimport {inherits} from '../util.js';\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport VectorRenderType from '../layer/VectorRenderType.js';\nimport {assign} from '../obj.js';\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {module:ol/layer/VectorRenderType|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {module:ol/source/Vector} [source] Source.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during animations. This means that no\n * vectors will be shown clipped, but the setting will have a performance impact for large\n * amounts of vector data. When set to `false`, batches will be recreated when no animation\n * is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during interactions. See also\n * `updateWhileAnimating`.\n */\n\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport const RenderType = {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @constructor\n * @extends {module:ol/layer/Layer}\n * @fires module:ol/render/Event~RenderEvent\n * @param {module:ol/layer/Vector~Options=} opt_options Options.\n * @api\n */\nconst VectorLayer = function(opt_options) {\n  const options = opt_options ?\n    opt_options : /** @type {module:ol/layer/Vector~Options} */ ({});\n\n  const baseOptions = assign({}, options);\n\n  delete baseOptions.style;\n  delete baseOptions.renderBuffer;\n  delete baseOptions.updateWhileAnimating;\n  delete baseOptions.updateWhileInteracting;\n  Layer.call(this, /** @type {module:ol/layer/Layer~Options} */ (baseOptions));\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.renderBuffer_ = options.renderBuffer !== undefined ?\n    options.renderBuffer : 100;\n\n  /**\n   * User provided style.\n   * @type {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n   * @private\n   */\n  this.style_ = null;\n\n  /**\n   * Style function for use within the library.\n   * @type {module:ol/style/Style~StyleFunction|undefined}\n   * @private\n   */\n  this.styleFunction_ = undefined;\n\n  this.setStyle(options.style);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n    options.updateWhileAnimating : false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n    options.updateWhileInteracting : false;\n\n  /**\n   * @private\n   * @type {module:ol/layer/VectorTileRenderType|string}\n   */\n  this.renderMode_ = options.renderMode || VectorRenderType.VECTOR;\n\n  /**\n   * The layer type.\n   * @protected\n   * @type {module:ol/LayerType}\n   */\n  this.type = LayerType.VECTOR;\n\n};\n\ninherits(VectorLayer, Layer);\n\n\n/**\n * @return {boolean} Declutter.\n */\nVectorLayer.prototype.getDeclutter = function() {\n  return this.declutter_;\n};\n\n\n/**\n * @param {boolean} declutter Declutter.\n */\nVectorLayer.prototype.setDeclutter = function(declutter) {\n  this.declutter_ = declutter;\n};\n\n\n/**\n * @return {number|undefined} Render buffer.\n */\nVectorLayer.prototype.getRenderBuffer = function() {\n  return this.renderBuffer_;\n};\n\n\n/**\n * @return {function(module:ol/Feature, module:ol/Feature): number|null|undefined} Render\n *     order.\n */\nVectorLayer.prototype.getRenderOrder = function() {\n  return (\n    /** @type {module:ol/render~OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\n  );\n};\n\n\n/**\n * Return the associated {@link module:ol/source/Vector vectorsource} of the layer.\n * @function\n * @return {module:ol/source/Vector} Source.\n * @api\n */\nVectorLayer.prototype.getSource;\n\n\n/**\n * Get the style for features.  This returns whatever was passed to the `style`\n * option at construction or to the `setStyle` method.\n * @return {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n *     Layer style.\n * @api\n */\nVectorLayer.prototype.getStyle = function() {\n  return this.style_;\n};\n\n\n/**\n * Get the style function.\n * @return {module:ol/style/Style~StyleFunction|undefined} Layer style function.\n * @api\n */\nVectorLayer.prototype.getStyleFunction = function() {\n  return this.styleFunction_;\n};\n\n\n/**\n * @return {boolean} Whether the rendered layer should be updated while\n *     animating.\n */\nVectorLayer.prototype.getUpdateWhileAnimating = function() {\n  return this.updateWhileAnimating_;\n};\n\n\n/**\n * @return {boolean} Whether the rendered layer should be updated while\n *     interacting.\n */\nVectorLayer.prototype.getUpdateWhileInteracting = function() {\n  return this.updateWhileInteracting_;\n};\n\n\n/**\n * @param {module:ol/render~OrderFunction|null|undefined} renderOrder\n *     Render order.\n */\nVectorLayer.prototype.setRenderOrder = function(renderOrder) {\n  this.set(Property.RENDER_ORDER, renderOrder);\n};\n\n\n/**\n * Set the style for features.  This can be a single style object, an array\n * of styles, or a function that takes a feature and resolution and returns\n * an array of styles. If it is `undefined` the default style is used. If\n * it is `null` the layer has no style (a `null` style), so only features\n * that have their own styles will be rendered in the layer. See\n * {@link module:ol/style} for information on the default style.\n * @param {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction|null|undefined}\n *     style Layer style.\n * @api\n */\nVectorLayer.prototype.setStyle = function(style) {\n  this.style_ = style !== undefined ? style : createDefaultStyle;\n  this.styleFunction_ = style === null ?\n    undefined : toStyleFunction(this.style_);\n  this.changed();\n};\n\n\n/**\n * @return {module:ol/layer/VectorRenderType|string} The render mode.\n */\nVectorLayer.prototype.getRenderMode = function() {\n  return this.renderMode_;\n};\n\n\nexport default VectorLayer;\n","/**\n * @module ol/render/ReplayType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n","/**\n * @module ol/geom/Polygon\n */\nimport {inherits} from '../util.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from '../geom/flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {linearRingsContainsXY} from '../geom/flat/contains.js';\nimport {deflateCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateCoordinatesArray} from '../geom/flat/inflate.js';\nimport {getInteriorPointOfArray} from '../geom/flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from '../geom/flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from '../geom/flat/orient.js';\nimport {quantizeArray} from '../geom/flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Array of linear\n *     rings that define the polygon. The first linear ring of the array\n *     defines the outer-boundary or surface of the polygon. Each subsequent\n *     linear ring defines a hole in the surface of the polygon. A linear ring\n *     is an array of vertices' coordinates where the first coordinate and the\n *     last are equivalent.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Polygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointRevision_ = -1;\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.flatInteriorPoint_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(Polygon, SimpleGeometry);\n\n\n/**\n * Append the passed linear ring to this polygon.\n * @param {module:ol/geom/LinearRing} linearRing Linear ring.\n * @api\n */\nPolygon.prototype.appendLinearRing = function(linearRing) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/Polygon} Clone.\n * @override\n * @api\n */\nPolygon.prototype.clone = function() {\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return polygon;\n};\n\n\n/**\n * @inheritDoc\n */\nPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestArrayPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nPolygon.prototype.containsXY = function(x, y) {\n  return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the polygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nPolygon.prototype.getArea = function() {\n  return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinates.\n * @override\n * @api\n */\nPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    orientLinearRings(\n      flatCoordinates, 0, this.ends_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return inflateCoordinatesArray(\n    flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nPolygon.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * @return {Array.<number>} Interior point.\n */\nPolygon.prototype.getFlatInteriorPoint = function() {\n  if (this.flatInteriorPointRevision_ != this.getRevision()) {\n    const flatCenter = getCenter(this.getExtent());\n    this.flatInteriorPoint_ = getInteriorPointOfArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n      flatCenter, 0);\n    this.flatInteriorPointRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoint_;\n};\n\n\n/**\n * Return an interior point of the polygon.\n * @return {module:ol/geom/Point} Interior point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n * @api\n */\nPolygon.prototype.getInteriorPoint = function() {\n  return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n};\n\n\n/**\n * Return the number of rings of the polygon,  this includes the exterior\n * ring and any interior rings.\n *\n * @return {number} Number of rings.\n * @api\n */\nPolygon.prototype.getLinearRingCount = function() {\n  return this.ends_.length;\n};\n\n\n/**\n * Return the Nth linear ring of the polygon geometry. Return `null` if the\n * given index is out of range.\n * The exterior linear ring is available at index `0` and the interior rings\n * at index `1` and beyond.\n *\n * @param {number} index Index.\n * @return {module:ol/geom/LinearRing} Linear ring.\n * @api\n */\nPolygon.prototype.getLinearRing = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const linearRing = new LinearRing(null);\n  linearRing.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return linearRing;\n};\n\n\n/**\n * Return the linear rings of the polygon.\n * @return {Array.<module:ol/geom/LinearRing>} Linear rings.\n * @api\n */\nPolygon.prototype.getLinearRings = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const linearRings = [];\n  let offset = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const linearRing = new LinearRing(null);\n    linearRing.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    linearRings.push(linearRing);\n    offset = end;\n  }\n  return linearRings;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (linearRingIsOriented(\n      flatCoordinates, 0, this.ends_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          orientLinearRings(\n            this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = quantizeArray(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedPolygon = new Polygon(null);\n  simplifiedPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedPolygon;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPolygon.prototype.getType = function() {\n  return GeometryType.POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPolygon.prototype.intersectsExtent = function(extent) {\n  return intersectsLinearRingArray(\n    this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the polygon.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {module:ol/coordinate~Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {module:ol/geom/Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(GeometryLayout.XY, flatCoordinates, [flatCoordinates.length]);\n  return polygon;\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {module:ol/extent~Extent} extent The extent.\n * @return {module:ol/geom/Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    GeometryLayout.XY, flatCoordinates, [flatCoordinates.length]);\n  return polygon;\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {module:ol/geom/Circle} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {module:ol/geom/Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const polygon = new Polygon(null, layout);\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i++) {\n    flatCoordinates[i] = 0;\n  }\n  const ends = [flatCoordinates.length];\n  polygon.setFlatCoordinates(layout, flatCoordinates, ends);\n  makeRegular(polygon, circle.getCenter(), circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n * @param {module:ol/coordinate~Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const layout = polygon.getLayout();\n  const stride = polygon.getStride();\n  const ends = polygon.getEnds();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.setFlatCoordinates(layout, flatCoordinates, ends);\n}\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n","/**\n * @module ol/geom/LineString\n */\nimport {inherits} from '../util.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from '../geom/flat/interpolate.js';\nimport {intersectsLineString} from '../geom/flat/intersectsextent.js';\nimport {lineStringLength} from '../geom/flat/length.js';\nimport {forEach as forEachSegment} from '../geom/flat/segments.js';\nimport {douglasPeucker} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst LineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.flatMidpoint_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatMidpointRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(LineString, SimpleGeometry);\n\n\n/**\n * Append the passed coordinate to the coordinates of the linestring.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @api\n */\nLineString.prototype.appendCoordinate = function(coordinate) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = coordinate.slice();\n  } else {\n    extend(this.flatCoordinates, coordinate);\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/LineString} Clone.\n * @override\n * @api\n */\nLineString.prototype.clone = function() {\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return lineString;\n};\n\n\n/**\n * @inheritDoc\n */\nLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestPoint(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Iterate over each segment, calling the provided callback.\n * If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n *\n * @param {function(this: S, module:ol/coordinate~Coordinate, module:ol/coordinate~Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T,S\n * @api\n */\nLineString.prototype.forEachSegment = function(callback) {\n  return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate) {\n  if (this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  return lineStringCoordinateAtM(this.flatCoordinates, 0,\n    this.flatCoordinates.length, this.stride, m, extrapolate);\n};\n\n\n/**\n * Return the coordinates of the linestring.\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n * @override\n * @api\n */\nLineString.prototype.getCoordinates = function() {\n  return inflateCoordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the coordinate at the provided fraction along the linestring.\n * The `fraction` is a number between 0 and 1, where 0 is the start of the\n * linestring and 1 is the end.\n * @param {number} fraction Fraction.\n * @param {module:ol/coordinate~Coordinate=} opt_dest Optional coordinate whose values will\n *     be modified. If not provided, a new coordinate will be returned.\n * @return {module:ol/coordinate~Coordinate} Coordinate of the interpolated point.\n * @api\n */\nLineString.prototype.getCoordinateAt = function(fraction, opt_dest) {\n  return interpolatePoint(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    fraction, opt_dest);\n};\n\n\n/**\n * Return the length of the linestring on projected plane.\n * @return {number} Length (on projected plane).\n * @api\n */\nLineString.prototype.getLength = function() {\n  return lineStringLength(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoint.\n */\nLineString.prototype.getFlatMidpoint = function() {\n  if (this.flatMidpointRevision_ != this.getRevision()) {\n    this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n    this.flatMidpointRevision_ = this.getRevision();\n  }\n  return this.flatMidpoint_;\n};\n\n\n/**\n * @inheritDoc\n */\nLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    squaredTolerance, simplifiedFlatCoordinates, 0);\n  const simplifiedLineString = new LineString(null);\n  simplifiedLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates);\n  return simplifiedLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nLineString.prototype.getType = function() {\n  return GeometryType.LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nLineString.prototype.intersectsExtent = function(extent) {\n  return intersectsLineString(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    extent);\n};\n\n\n/**\n * Set the coordinates of the linestring.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default LineString;\n","/**\n * @module ol/format/Feature\n */\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, equivalent as equivalentProjection, transformExtent} from '../proj.js';\n\n\n/**\n * @typedef {Object} ReadOptions\n * @property {module:ol/proj~ProjectionLike} dataProjection Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {module:ol/extent~Extent} extent Tile extent of the tile being read. This is only used and\n * required for {@link module:ol/format/MVT}.\n * @property {module:ol/proj~ProjectionLike} featureProjection Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n\n/**\n * @typedef {Object} WriteOptions\n * @property {module:ol/proj~ProjectionLike} dataProjection Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {module:ol/proj~ProjectionLike} featureProjection Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @constructor\n * @abstract\n * @api\n */\nconst FeatureFormat = function() {\n\n  /**\n   * @protected\n   * @type {module:ol/proj/Projection}\n   */\n  this.dataProjection = null;\n\n  /**\n   * @protected\n   * @type {module:ol/proj/Projection}\n   */\n  this.defaultFeatureProjection = null;\n\n};\n\n\n/**\n * Adds the data projection to the read options.\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n * @return {module:ol/format/Feature~ReadOptions|undefined} Options.\n * @protected\n */\nFeatureFormat.prototype.getReadOptions = function(source, opt_options) {\n  let options;\n  if (opt_options) {\n    options = {\n      dataProjection: opt_options.dataProjection ?\n        opt_options.dataProjection : this.readProjection(source),\n      featureProjection: opt_options.featureProjection\n    };\n  }\n  return this.adaptOptions(options);\n};\n\n\n/**\n * Sets the `dataProjection` on the options, if no `dataProjection`\n * is set.\n * @param {module:ol/format/Feature~WriteOptions|module:ol/format/Feature~ReadOptions|undefined} options\n *     Options.\n * @protected\n * @return {module:ol/format/Feature~WriteOptions|module:ol/format/Feature~ReadOptions|undefined}\n *     Updated options.\n */\nFeatureFormat.prototype.adaptOptions = function(options) {\n  return assign({\n    dataProjection: this.dataProjection,\n    featureProjection: this.defaultFeatureProjection\n  }, options);\n};\n\n\n/**\n * Get the extent from the source of the last {@link readFeatures} call.\n * @return {module:ol/extent~Extent} Tile extent.\n */\nFeatureFormat.prototype.getLastExtent = function() {\n  return null;\n};\n\n\n/**\n * @abstract\n * @return {module:ol/format/FormatType} Format.\n */\nFeatureFormat.prototype.getType = function() {};\n\n\n/**\n * Read a single feature from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/Feature} Feature.\n */\nFeatureFormat.prototype.readFeature = function(source, opt_options) {};\n\n\n/**\n * Read all features from a source.\n *\n * @abstract\n * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {Array.<module:ol/Feature>} Features.\n */\nFeatureFormat.prototype.readFeatures = function(source, opt_options) {};\n\n\n/**\n * Read a single geometry from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/Geometry} Geometry.\n */\nFeatureFormat.prototype.readGeometry = function(source, opt_options) {};\n\n\n/**\n * Read the projection from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @return {module:ol/proj/Projection} Projection.\n */\nFeatureFormat.prototype.readProjection = function(source) {};\n\n\n/**\n * Encode a feature in this format.\n *\n * @abstract\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeature = function(feature, opt_options) {};\n\n\n/**\n * Encode an array of features in this format.\n *\n * @abstract\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeatures = function(features, opt_options) {};\n\n\n/**\n * Write a single geometry in this format.\n *\n * @abstract\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeGeometry = function(geometry, opt_options) {};\n\nexport default FeatureFormat;\n\n/**\n * @param {module:ol/geom/Geometry|module:ol/extent~Extent} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(module:ol/format/Feature~WriteOptions|module:ol/format/Feature~ReadOptions)=} opt_options\n *     Options.\n * @return {module:ol/geom/Geometry|module:ol/extent~Extent} Transformed geometry.\n */\nexport function transformWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options ?\n    getProjection(opt_options.featureProjection) : null;\n  const dataProjection = opt_options ?\n    getProjection(opt_options.dataProjection) : null;\n  /**\n   * @type {module:ol/geom/Geometry|module:ol/extent~Extent}\n   */\n  let transformed;\n  if (featureProjection && dataProjection &&\n      !equivalentProjection(featureProjection, dataProjection)) {\n    if (geometry instanceof Geometry) {\n      transformed = (write ? geometry.clone() : geometry).transform(\n        write ? featureProjection : dataProjection,\n        write ? dataProjection : featureProjection);\n    } else {\n      // FIXME this is necessary because GML treats extents\n      // as geometries\n      transformed = transformExtent(\n        geometry,\n        dataProjection,\n        featureProjection);\n    }\n  } else {\n    transformed = geometry;\n  }\n  if (write && opt_options && opt_options.decimals !== undefined) {\n    const power = Math.pow(10, opt_options.decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array.<number>} coordinates Coordinates.\n     * @return {Array.<number>} Transformed coordinates.\n     */\n    const transform = function(coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = transformed.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n","/**\n * @module ol/interaction/Pointer\n */\nimport {inherits} from '../util.js';\nimport {FALSE, UNDEFINED} from '../functions.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport Interaction from '../interaction/Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleDragEvent = UNDEFINED;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Capture dragging.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleUpEvent = FALSE;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Capture dragging.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleDownEvent = FALSE;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleMoveEvent = UNDEFINED;\n\n\n/**\n * @typedef {Object} Options\n * @property {(function(module:ol/MapBrowserPointerEvent):boolean)} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {(function(module:ol/MapBrowserPointerEvent))} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {(function(module:ol/MapBrowserEvent):boolean)} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {(function(module:ol/MapBrowserPointerEvent))} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {(function(module:ol/MapBrowserPointerEvent):boolean)} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n *\n * @constructor\n * @param {module:ol/interaction/Pointer~Options=} opt_options Options.\n * @extends {module:ol/interaction/Interaction}\n * @api\n */\nconst PointerInteraction = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  Interaction.call(this, {\n    handleEvent: options.handleEvent || handleEvent\n  });\n\n  /**\n   * @type {function(module:ol/MapBrowserPointerEvent):boolean}\n   * @private\n   */\n  this.handleDownEvent_ = options.handleDownEvent ?\n    options.handleDownEvent : handleDownEvent;\n\n  /**\n   * @type {function(module:ol/MapBrowserPointerEvent)}\n   * @private\n   */\n  this.handleDragEvent_ = options.handleDragEvent ?\n    options.handleDragEvent : handleDragEvent;\n\n  /**\n   * @type {function(module:ol/MapBrowserPointerEvent)}\n   * @private\n   */\n  this.handleMoveEvent_ = options.handleMoveEvent ?\n    options.handleMoveEvent : handleMoveEvent;\n\n  /**\n   * @type {function(module:ol/MapBrowserPointerEvent):boolean}\n   * @private\n   */\n  this.handleUpEvent_ = options.handleUpEvent ?\n    options.handleUpEvent : handleUpEvent;\n\n  /**\n   * @type {boolean}\n   * @protected\n   */\n  this.handlingDownUpSequence = false;\n\n  /**\n   * @type {!Object.<string, module:ol/pointer/PointerEvent>}\n   * @private\n   */\n  this.trackedPointers_ = {};\n\n  /**\n   * @type {Array.<module:ol/pointer/PointerEvent>}\n   * @protected\n   */\n  this.targetPointers = [];\n\n};\n\ninherits(PointerInteraction, Interaction);\n\n\n/**\n * @param {Array.<module:ol/pointer/PointerEvent>} pointerEvents List of events.\n * @return {module:ol~Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @private\n */\nPointerInteraction.prototype.updateTrackedPointers_ = function(mapBrowserEvent) {\n  if (isPointerDraggingEvent(mapBrowserEvent)) {\n    const event = mapBrowserEvent.pointerEvent;\n\n    const id = event.pointerId.toString();\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n      delete this.trackedPointers_[id];\n    } else if (mapBrowserEvent.type ==\n        MapBrowserEventType.POINTERDOWN) {\n      this.trackedPointers_[id] = event;\n    } else if (id in this.trackedPointers_) {\n      // update only when there was a pointerdown event for this pointer\n      this.trackedPointers_[id] = event;\n    }\n    this.targetPointers = getValues(this.trackedPointers_);\n  }\n};\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n * detected.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Pointer}\n * @api\n */\nexport function handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n\n  let stopEvent = false;\n  this.updateTrackedPointers_(mapBrowserEvent);\n  if (this.handlingDownUpSequence) {\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n      this.handleDragEvent_(mapBrowserEvent);\n    } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n      const handledUp = this.handleUpEvent_(mapBrowserEvent);\n      this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n    }\n  } else {\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n      const handled = this.handleDownEvent_(mapBrowserEvent);\n      this.handlingDownUpSequence = handled;\n      stopEvent = this.shouldStopEvent(handled);\n    } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n      this.handleMoveEvent_(mapBrowserEvent);\n    }\n  }\n  return !stopEvent;\n}\n\n\n/**\n * This method is used to determine if \"down\" events should be propagated to\n * other interactions or should be stopped.\n *\n * The method receives the return code of the \"handleDownEvent\" function.\n *\n * By default this function is the \"identity\" function. It's overridden in\n * child classes.\n *\n * @param {boolean} handled Was the event handled by the interaction?\n * @return {boolean} Should the event be stopped?\n * @protected\n */\nPointerInteraction.prototype.shouldStopEvent = function(handled) {\n  return handled;\n};\n\nexport default PointerInteraction;\n","/**\n * @module ol/format/GeoJSON\n */\n// TODO: serialize dataProjection as crs member when writing\n// see https://github.com/openlayers/openlayers/issues/2078\n\nimport {inherits} from '../util.js';\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport JSONFeature from '../format/JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/proj~ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {module:ol/proj~ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @constructor\n * @extends {module:ol/format/JSONFeature}\n * @param {module:ol/format/GeoJSON~Options=} opt_options Options.\n * @api\n */\nconst GeoJSON = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  JSONFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.dataProjection = getProjection(\n    options.dataProjection ?\n      options.dataProjection : 'EPSG:4326');\n\n  if (options.featureProjection) {\n    this.defaultFeatureProjection = getProjection(options.featureProjection);\n  }\n\n  /**\n   * Name of the geometry attribute for features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * Look for the geometry name in the feature GeoJSON\n   * @type {boolean|undefined}\n   * @private\n   */\n  this.extractGeometryName_ = options.extractGeometryName;\n\n};\n\ninherits(GeoJSON, JSONFeature);\n\n\n/**\n * @const\n * @type {Object.<string, function(GeoJSONObject): module:ol/geom/Geometry>}\n */\nconst GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry,\n  'GeometryCollection': readGeometryCollectionGeometry\n};\n\n\n/**\n * @const\n * @type {Object.<string, function(module:ol/geom/Geometry, module:ol/format/Feature~WriteOptions=): (GeoJSONGeometry|GeoJSONGeometryCollection)>}\n */\nconst GEOMETRY_WRITERS = {\n  'Point': writePointGeometry,\n  'LineString': writeLineStringGeometry,\n  'Polygon': writePolygonGeometry,\n  'MultiPoint': writeMultiPointGeometry,\n  'MultiLineString': writeMultiLineStringGeometry,\n  'MultiPolygon': writeMultiPolygonGeometry,\n  'GeometryCollection': writeGeometryCollectionGeometry,\n  'Circle': writeEmptyGeometryCollectionGeometry\n};\n\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/Geometry} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n  const geometryReader = GEOMETRY_READERS[object.type];\n  return (\n    /** @type {module:ol/geom/Geometry} */ (transformWithOptions(geometryReader(object), false, opt_options))\n  );\n}\n\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  const geometries = object.geometries.map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {module:ol/geom/Geometry} geometry Geometry.\n     */\n    function(geometry) {\n      return readGeometry(geometry, opt_options);\n    });\n  return new GeometryCollection(geometries);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object.coordinates);\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry|GeoJSONGeometryCollection} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  const geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n  return geometryWriter(/** @type {module:ol/geom/Geometry} */ (\n    transformWithOptions(geometry, true, opt_options)), opt_options);\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @return {GeoJSONGeometryCollection} Empty GeoJSON geometry collection.\n */\nfunction writeEmptyGeometryCollectionGeometry(geometry) {\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: []\n  });\n}\n\n\n/**\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  const geometries = geometry.getGeometriesArray().map(function(geometry) {\n    const options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: geometries\n  });\n}\n\n\n/**\n * @param {module:ol/geom/LineString} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'LineString',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {module:ol/geom/MultiLineString} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {module:ol/geom/MultiPoint} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n}\n\n\n/**\n * @param {module:ol/geom/Point} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Point',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {module:ol/geom/Polygon} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n}\n\n\n/**\n * Read a feature from a GeoJSON Feature source.  Only works for Feature or\n * geometry types.  Use {@link module:ol/format/GeoJSON#readFeatures} to read\n * FeatureCollection source. If feature at source has an id, it will be used\n * as Feature id by calling {@link module:ol/Feature#setId} internally.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/Feature} Feature.\n * @api\n */\nGeoJSON.prototype.readFeature;\n\n\n/**\n * Read all features from a GeoJSON source.  Works for all GeoJSON types.\n * If the source includes only geometries, features will be created with those\n * geometries.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nGeoJSON.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readFeatureFromObject = function(object, opt_options) {\n  /**\n   * @type {GeoJSONFeature}\n   */\n  let geoJSONFeature = null;\n  if (object.type === 'Feature') {\n    geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n  } else {\n    geoJSONFeature = /** @type {GeoJSONFeature} */ ({\n      type: 'Feature',\n      geometry: /** @type {GeoJSONGeometry|GeoJSONGeometryCollection} */ (object)\n    });\n  }\n\n  const geometry = readGeometry(geoJSONFeature.geometry, opt_options);\n  const feature = new Feature();\n  if (this.geometryName_) {\n    feature.setGeometryName(this.geometryName_);\n  } else if (this.extractGeometryName_ && geoJSONFeature.geometry_name !== undefined) {\n    feature.setGeometryName(geoJSONFeature.geometry_name);\n  }\n  feature.setGeometry(geometry);\n  if (geoJSONFeature.id !== undefined) {\n    feature.setId(geoJSONFeature.id);\n  }\n  if (geoJSONFeature.properties) {\n    feature.setProperties(geoJSONFeature.properties);\n  }\n  return feature;\n};\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readFeaturesFromObject = function(object, opt_options) {\n  const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n  /** @type {Array.<module:ol/Feature>} */\n  let features = null;\n  if (geoJSONObject.type === 'FeatureCollection') {\n    const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n    features = [];\n    const geoJSONFeatures = geoJSONFeatureCollection.features;\n    for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n      features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n    }\n  } else {\n    features = [this.readFeatureFromObject(object, opt_options)];\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a GeoJSON source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/Geometry} Geometry.\n * @api\n */\nGeoJSON.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readGeometryFromObject = function(object, opt_options) {\n  return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n};\n\n\n/**\n * Read the projection from a GeoJSON source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {module:ol/proj/Projection} Projection.\n * @api\n */\nGeoJSON.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readProjectionFromObject = function(object) {\n  const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n  const crs = geoJSONObject.crs;\n  let projection;\n  if (crs) {\n    if (crs.type == 'name') {\n      projection = getProjection(crs.properties.name);\n    } else {\n      assert(false, 36); // Unknown SRS type\n    }\n  } else {\n    projection = this.dataProjection;\n  }\n  return (\n    /** @type {module:ol/proj/Projection} */ (projection)\n  );\n};\n\n\n/**\n * Encode a feature as a GeoJSON Feature string.\n *\n * @function\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeature;\n\n\n/**\n * Encode a feature as a GeoJSON Feature object.\n *\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONFeature} Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeatureObject = function(feature, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n\n  const object = /** @type {GeoJSONFeature} */ ({\n    'type': 'Feature'\n  });\n  const id = feature.getId();\n  if (id !== undefined) {\n    object.id = id;\n  }\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    object.geometry = writeGeometry(geometry, opt_options);\n  } else {\n    object.geometry = null;\n  }\n  const properties = feature.getProperties();\n  delete properties[feature.getGeometryName()];\n  if (!isEmpty(properties)) {\n    object.properties = properties;\n  } else {\n    object.properties = null;\n  }\n  return object;\n};\n\n\n/**\n * Encode an array of features as GeoJSON.\n *\n * @function\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @api\n */\nGeoJSON.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features as a GeoJSON object.\n *\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONFeatureCollection} GeoJSON Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeaturesObject = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const objects = [];\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    objects.push(this.writeFeatureObject(features[i], opt_options));\n  }\n  return /** @type {GeoJSONFeatureCollection} */ ({\n    type: 'FeatureCollection',\n    features: objects\n  });\n};\n\n\n/**\n * Encode a geometry as a GeoJSON string.\n *\n * @function\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @api\n */\nGeoJSON.prototype.writeGeometry;\n\n\n/**\n * Encode a geometry as a GeoJSON object.\n *\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeGeometryObject = function(geometry, opt_options) {\n  return writeGeometry(geometry, this.adaptOptions(opt_options));\n};\nexport default GeoJSON;\n","/**\n * @module ol/interaction/Interaction\n */\nimport {inherits} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(module:ol/MapBrowserEvent):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return).\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n *\n * @constructor\n * @param {module:ol/interaction/Interaction~InteractionOptions} options Options.\n * @extends {module:ol/Object}\n * @api\n */\nconst Interaction = function(options) {\n\n  BaseObject.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/PluggableMap}\n   */\n  this.map_ = null;\n\n  this.setActive(true);\n\n  /**\n   * @type {function(module:ol/MapBrowserEvent):boolean}\n   */\n  this.handleEvent = options.handleEvent;\n\n};\n\ninherits(Interaction, BaseObject);\n\n\n/**\n * Return whether the interaction is currently active.\n * @return {boolean} `true` if the interaction is active, `false` otherwise.\n * @observable\n * @api\n */\nInteraction.prototype.getActive = function() {\n  return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n};\n\n\n/**\n * Get the map associated with this interaction.\n * @return {module:ol/PluggableMap} Map.\n * @api\n */\nInteraction.prototype.getMap = function() {\n  return this.map_;\n};\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @observable\n * @api\n */\nInteraction.prototype.setActive = function(active) {\n  this.set(InteractionProperty.ACTIVE, active);\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {module:ol/PluggableMap} map Map.\n */\nInteraction.prototype.setMap = function(map) {\n  this.map_ = map;\n};\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {module:ol/coordinate~Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenter();\n  if (currentCenter) {\n    const center = view.constrainCenter(\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    const currentRotation = view.getRotation();\n    const currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentResolution = view.getResolution();\n  let resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    const resolutions = view.getResolutions();\n    resolution = clamp(\n      resolution,\n      view.getMinResolution() || resolutions[resolutions.length - 1],\n      view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    const currentCenter = view.getCenter();\n    let center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    const currentResolution = view.getResolution();\n    const currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        const center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n}\n\nexport default Interaction;\n","/**\n * @module ol/source/BingMaps\n */\nimport {inherits} from '../util.js';\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from '../source/State.js';\nimport TileImage from '../source/TileImage.js';\nimport {createOrUpdate, quadKey} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=2048] Cache size.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at http://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n *\n * @constructor\n * @extends {module:ol/source/TileImage}\n * @param {module:ol/source/BingMaps~Options=} options Bing Maps options.\n * @api\n */\nconst BingMaps = function(options) {\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : false;\n\n  TileImage.call(this, {\n    cacheSize: options.cacheSize,\n    crossOrigin: 'anonymous',\n    opaque: true,\n    projection: getProjection('EPSG:3857'),\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    state: SourceState.LOADING,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: this.hidpi_ ? 2 : 1,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.apiKey_ = options.key;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.imagerySet_ = options.imagerySet;\n\n  const url = 'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n      this.imagerySet_ +\n      '?uriScheme=https&include=ImageryProviders&key=' + this.apiKey_ +\n      '&c=' + this.culture_;\n\n  requestJSONP(url, this.handleImageryMetadataResponse.bind(this), undefined,\n    'jsonp');\n\n};\n\ninherits(BingMaps, TileImage);\n\n\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nconst TOS_ATTRIBUTION = '<a class=\"ol-attribution-bing-tos\" ' +\n      'href=\"https://www.microsoft.com/maps/product/terms.html\">' +\n      'Terms of Use</a>';\n\n\n/**\n * Get the api key used for this source.\n *\n * @return {string} The api key.\n * @api\n */\nBingMaps.prototype.getApiKey = function() {\n  return this.apiKey_;\n};\n\n\n/**\n * Get the imagery set associated with this source.\n *\n * @return {string} The imagery set.\n * @api\n */\nBingMaps.prototype.getImagerySet = function() {\n  return this.imagerySet_;\n};\n\n\n/**\n * @param {BingMapsImageryMetadataResponse} response Response.\n */\nBingMaps.prototype.handleImageryMetadataResponse = function(response) {\n  if (response.statusCode != 200 ||\n      response.statusDescription != 'OK' ||\n      response.authenticationResultCode != 'ValidCredentials' ||\n      response.resourceSets.length != 1 ||\n      response.resourceSets[0].resources.length != 1) {\n    this.setState(SourceState.ERROR);\n    return;\n  }\n\n  const resource = response.resourceSets[0].resources[0];\n  const maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n\n  const sourceProjection = this.getProjection();\n  const extent = extentFromProjection(sourceProjection);\n  const tileSize = resource.imageWidth == resource.imageHeight ?\n    resource.imageWidth : [resource.imageWidth, resource.imageHeight];\n  const tileGrid = createXYZ({\n    extent: extent,\n    minZoom: resource.zoomMin,\n    maxZoom: maxZoom,\n    tileSize: tileSize / (this.hidpi_ ? 2 : 1)\n  });\n  this.tileGrid = tileGrid;\n\n  const culture = this.culture_;\n  const hidpi = this.hidpi_;\n  this.tileUrlFunction = createFromTileUrlFunctions(\n    resource.imageUrlSubdomains.map(function(subdomain) {\n      const quadKeyTileCoord = [0, 0, 0];\n      const imageUrl = resource.imageUrl\n        .replace('{subdomain}', subdomain)\n        .replace('{culture}', culture);\n      return (\n        /**\n         * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n         * @param {number} pixelRatio Pixel ratio.\n         * @param {module:ol/proj/Projection} projection Projection.\n         * @return {string|undefined} Tile URL.\n         */\n        function(tileCoord, pixelRatio, projection) {\n          if (!tileCoord) {\n            return undefined;\n          } else {\n            createOrUpdate(tileCoord[0], tileCoord[1], -tileCoord[2] - 1, quadKeyTileCoord);\n            let url = imageUrl;\n            if (hidpi) {\n              url += '&dpi=d1&device=mobile';\n            }\n            return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\n          }\n        }\n      );\n    }));\n\n  if (resource.imageryProviders) {\n    const transform = getTransformFromProjections(\n      getProjection('EPSG:4326'), this.getProjection());\n\n    this.setAttributions(function(frameState) {\n      const attributions = [];\n      const zoom = frameState.viewState.zoom;\n      resource.imageryProviders.map(function(imageryProvider) {\n        let intersecting = false;\n        const coverageAreas = imageryProvider.coverageAreas;\n        for (let i = 0, ii = coverageAreas.length; i < ii; ++i) {\n          const coverageArea = coverageAreas[i];\n          if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\n            const bbox = coverageArea.bbox;\n            const epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n            const extent = applyTransform(epsg4326Extent, transform);\n            if (intersects(extent, frameState.extent)) {\n              intersecting = true;\n              break;\n            }\n          }\n        }\n        if (intersecting) {\n          attributions.push(imageryProvider.attribution);\n        }\n      });\n\n      attributions.push(TOS_ATTRIBUTION);\n      return attributions;\n    });\n  }\n\n  this.setState(SourceState.READY);\n};\nexport default BingMaps;\n","/**\n * @module ol/css\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object.<string>} The font families (or null if the input spec is invalid).\n */\nexport const getFontFamilies = (function() {\n  let style;\n  const cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      const family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\n","/**\n * @module ol/has\n */\n\nconst ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\nexport const CANVAS_LINE_DASH = function() {\n  let has = false;\n  try {\n    has = !!document.createElement('CANVAS').getContext('2d').setLineDash;\n  } catch (e) {\n    // pass\n  }\n  return has;\n}();\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport const GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport const TOUCH = 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport const POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport const MSPOINTER = !!(navigator.msPointerEnabled);\n\n\nexport {HAS as WEBGL} from './webgl.js';\n","/**\n * @module ol/geom\n */\n\nexport {default as Circle} from './geom/Circle.js';\nexport {default as Geometry} from './geom/Geometry.js';\nexport {default as LineString} from './geom/LineString.js';\nexport {default as MultiLineString} from './geom/MultiLineString.js';\nexport {default as MultiPoint} from './geom/MultiPoint.js';\nexport {default as MultiPolygon} from './geom/MultiPolygon.js';\nexport {default as Point} from './geom/Point.js';\nexport {default as Polygon} from './geom/Polygon.js';\n","/**\n * @module ol/source/State\n */\n\n/**\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n * @enum {string}\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n","/**\n * @module ol/Collection\n */\nimport {inherits} from './util.js';\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/CollectionEventType} type Type.\n * @param {*=} opt_element Element.\n */\nexport const CollectionEvent = function(type, opt_element) {\n\n  Event.call(this, type);\n\n  /**\n   * The element that is added to or removed from the collection.\n   * @type {*}\n   * @api\n   */\n  this.element = opt_element;\n\n};\n\ninherits(CollectionEvent, Event);\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @constructor\n * @extends {module:ol/Object}\n * @fires module:ol/Collection~CollectionEvent\n * @param {Array.<T>=} opt_array Array.\n * @param {module:ol/Collection~Options=} opt_options Collection options.\n * @template T\n * @api\n */\nconst Collection = function(opt_array, opt_options) {\n\n  BaseObject.call(this);\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.unique_ = !!options.unique;\n\n  /**\n   * @private\n   * @type {!Array.<T>}\n   */\n  this.array_ = opt_array ? opt_array : [];\n\n  if (this.unique_) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      this.assertUnique_(this.array_[i], i);\n    }\n  }\n\n  this.updateLength_();\n\n};\n\ninherits(Collection, BaseObject);\n\n\n/**\n * Remove all elements from the collection.\n * @api\n */\nCollection.prototype.clear = function() {\n  while (this.getLength() > 0) {\n    this.pop();\n  }\n};\n\n\n/**\n * Add elements to the collection.  This pushes each item in the provided array\n * to the end of the collection.\n * @param {!Array.<T>} arr Array.\n * @return {module:ol/Collection.<T>} This collection.\n * @api\n */\nCollection.prototype.extend = function(arr) {\n  for (let i = 0, ii = arr.length; i < ii; ++i) {\n    this.push(arr[i]);\n  }\n  return this;\n};\n\n\n/**\n * Iterate over each element, calling the provided callback.\n * @param {function(T, number, Array.<T>): *} f The function to call\n *     for every element. This function takes 3 arguments (the element, the\n *     index and the array). The return value is ignored.\n * @api\n */\nCollection.prototype.forEach = function(f) {\n  const array = this.array_;\n  for (let i = 0, ii = array.length; i < ii; ++i) {\n    f(array[i], i, array);\n  }\n};\n\n\n/**\n * Get a reference to the underlying Array object. Warning: if the array\n * is mutated, no events will be dispatched by the collection, and the\n * collection's \"length\" property won't be in sync with the actual length\n * of the array.\n * @return {!Array.<T>} Array.\n * @api\n */\nCollection.prototype.getArray = function() {\n  return this.array_;\n};\n\n\n/**\n * Get the element at the provided index.\n * @param {number} index Index.\n * @return {T} Element.\n * @api\n */\nCollection.prototype.item = function(index) {\n  return this.array_[index];\n};\n\n\n/**\n * Get the length of this collection.\n * @return {number} The length of the array.\n * @observable\n * @api\n */\nCollection.prototype.getLength = function() {\n  return /** @type {number} */ (this.get(Property.LENGTH));\n};\n\n\n/**\n * Insert an element at the provided index.\n * @param {number} index Index.\n * @param {T} elem Element.\n * @api\n */\nCollection.prototype.insertAt = function(index, elem) {\n  if (this.unique_) {\n    this.assertUnique_(elem);\n  }\n  this.array_.splice(index, 0, elem);\n  this.updateLength_();\n  this.dispatchEvent(\n    new CollectionEvent(CollectionEventType.ADD, elem));\n};\n\n\n/**\n * Remove the last element of the collection and return it.\n * Return `undefined` if the collection is empty.\n * @return {T|undefined} Element.\n * @api\n */\nCollection.prototype.pop = function() {\n  return this.removeAt(this.getLength() - 1);\n};\n\n\n/**\n * Insert the provided element at the end of the collection.\n * @param {T} elem Element.\n * @return {number} New length of the collection.\n * @api\n */\nCollection.prototype.push = function(elem) {\n  if (this.unique_) {\n    this.assertUnique_(elem);\n  }\n  const n = this.getLength();\n  this.insertAt(n, elem);\n  return this.getLength();\n};\n\n\n/**\n * Remove the first occurrence of an element from the collection.\n * @param {T} elem Element.\n * @return {T|undefined} The removed element or undefined if none found.\n * @api\n */\nCollection.prototype.remove = function(elem) {\n  const arr = this.array_;\n  for (let i = 0, ii = arr.length; i < ii; ++i) {\n    if (arr[i] === elem) {\n      return this.removeAt(i);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Remove the element at the provided index and return it.\n * Return `undefined` if the collection does not contain this index.\n * @param {number} index Index.\n * @return {T|undefined} Value.\n * @api\n */\nCollection.prototype.removeAt = function(index) {\n  const prev = this.array_[index];\n  this.array_.splice(index, 1);\n  this.updateLength_();\n  this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n  return prev;\n};\n\n\n/**\n * Set the element at the provided index.\n * @param {number} index Index.\n * @param {T} elem Element.\n * @api\n */\nCollection.prototype.setAt = function(index, elem) {\n  const n = this.getLength();\n  if (index < n) {\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev));\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem));\n  } else {\n    for (let j = n; j < index; ++j) {\n      this.insertAt(j, undefined);\n    }\n    this.insertAt(index, elem);\n  }\n};\n\n\n/**\n * @private\n */\nCollection.prototype.updateLength_ = function() {\n  this.set(Property.LENGTH, this.array_.length);\n};\n\n\n/**\n * @private\n * @param {T} elem Element.\n * @param {number=} opt_except Optional index to ignore.\n */\nCollection.prototype.assertUnique_ = function(elem, opt_except) {\n  for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n    if (this.array_[i] === elem && i !== opt_except) {\n      throw new AssertionError(58);\n    }\n  }\n};\n\nexport default Collection;\n","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../util.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {getAllTextContent, getAttributeNS, makeArrayPusher, makeReplacer, parseNode, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {string}\n */\nexport const GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * @typedef {Object} Options\n * @property {Object.<string, string>|string} [featureNS] Feature\n * namespace. If not defined will be derived from GML. If multiple\n * feature types have been configured which come from different feature\n * namespaces, this will be an object with the keys being the prefixes used\n * in the entries of featureType array. The values of the object will be the\n * feature namespaces themselves. So for instance there might be a featureType\n * item `topp:states` in the `featureType` array and then there will be a key\n * `topp` in the featureNS object with value `http://www.openplans.org/topp`.\n * @property {Array.<string>|string} [featureType] Feature type(s) to parse.\n * If multiple feature types need to be configured\n * which come from different feature namespaces, `featureNS` will be an object\n * with the keys being the prefixes used in the entries of featureType array.\n * The values of the object will be the feature namespaces themselves.\n * So for instance there might be a featureType item `topp:states` and then\n * there will be a key named `topp` in the featureNS object with value\n * `http://www.openplans.org/topp`.\n * @property {string} srsName srsName to use when writing geometries.\n * @property {boolean} [surface=false] Write gml:Surface instead of gml:Polygon\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [curve=false] Write gml:Curve instead of gml:LineString\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [multiCurve=true] Write gml:MultiCurve instead of gml:MultiLineString.\n * Since the latter is deprecated in GML 3.\n * @property {boolean} [multiSurface=true] Write gml:multiSurface instead of\n * gml:MultiPolygon. Since the latter is deprecated in GML 3.\n * @property {string} [schemaLocation] Optional schemaLocation to use when\n * writing out the GML, this will override the default provided.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes GML2 and GML3.\n *\n * @constructor\n * @abstract\n * @param {module:ol/format/GMLBase~Options=} opt_options\n *     Optional configuration object.\n * @extends {module:ol/format/XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {module:ol/format/GMLBase~Options} */ (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLNS] = {\n    'featureMember': makeReplacer(GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': makeReplacer(GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n */\nconst ONLY_WHITESPACE_RE = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<module:ol/Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (let i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (let i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                makeArrayPusher(this.readFeatureElement, this) :\n                makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {module:ol/geom/Geometry} */\n  const geometry = pushParseAndPop(null, this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {module:ol/geom/Geometry} */ (transformWithOptions(geometry, false, context))\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') || getAttributeNS(node, GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = getAllTextContent(n, false);\n      if (ONLY_WHITESPACE_RE.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<module:ol/geom/LineString>} */\n  const lineStrings = pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<module:ol/geom/Polygon>} */\n  const polygons = pushParseAndPop([], this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  parseNode(this.POINTMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  parseNode(this.LINESTRINGMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  parseNode(this.POLYGONMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return pushParseAndPop(null, this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser_),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName : node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n","/**\n * @module ol/control/Control\n */\nimport {inherits} from '../util.js';\nimport {UNDEFINED} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Element} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(module:ol/MapEvent)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {Element|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/control/Control~Options} options Control options.\n * @api\n */\nconst Control = function(options) {\n\n  BaseObject.call(this);\n\n  /**\n   * @protected\n   * @type {Element}\n   */\n  this.element = options.element ? options.element : null;\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.target_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/PluggableMap}\n   */\n  this.map_ = null;\n\n  /**\n   * @protected\n   * @type {!Array.<module:ol/events~EventsKey>}\n   */\n  this.listenerKeys = [];\n\n  /**\n   * @type {function(module:ol/MapEvent)}\n   */\n  this.render = options.render ? options.render : UNDEFINED;\n\n  if (options.target) {\n    this.setTarget(options.target);\n  }\n\n};\n\ninherits(Control, BaseObject);\n\n\n/**\n * @inheritDoc\n */\nControl.prototype.disposeInternal = function() {\n  removeNode(this.element);\n  BaseObject.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Get the map associated with this control.\n * @return {module:ol/PluggableMap} Map.\n * @api\n */\nControl.prototype.getMap = function() {\n  return this.map_;\n};\n\n\n/**\n * Remove the control from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {module:ol/PluggableMap} map Map.\n * @api\n */\nControl.prototype.setMap = function(map) {\n  if (this.map_) {\n    removeNode(this.element);\n  }\n  for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n    unlistenByKey(this.listenerKeys[i]);\n  }\n  this.listenerKeys.length = 0;\n  this.map_ = map;\n  if (this.map_) {\n    const target = this.target_ ?\n      this.target_ : map.getOverlayContainerStopEvent();\n    target.appendChild(this.element);\n    if (this.render !== UNDEFINED) {\n      this.listenerKeys.push(listen(map,\n        MapEventType.POSTRENDER, this.render, this));\n    }\n    map.render();\n  }\n};\n\n\n/**\n * This function is used to set a target element for the control. It has no\n * effect if it is called after the control has been added to the map (i.e.\n * after `setMap` is called on the control). If no `target` is set in the\n * options passed to the control constructor and if `setTarget` is not called\n * then the control is added to the map's overlay container.\n * @param {Element|string} target Target.\n * @api\n */\nControl.prototype.setTarget = function(target) {\n  this.target_ = typeof target === 'string' ?\n    document.getElementById(target) :\n    target;\n};\nexport default Control;\n","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../util.js';\nimport TileImage from '../source/TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {boolean} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|module:ol/size~Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array.<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {module:ol/source/TileImage}\n * @param {module:ol/source/XYZ~Options=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    createXYZ({\n      extent: extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {inherits} from '../util.js';\nimport {FALSE} from '../functions.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from '../geom/flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/geom/Geometry}\n * @api\n */\nconst SimpleGeometry = function() {\n\n  Geometry.call(this);\n\n  /**\n   * @protected\n   * @type {module:ol/geom/GeometryLayout}\n   */\n  this.layout = GeometryLayout.XY;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.stride = 2;\n\n  /**\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.flatCoordinates = null;\n\n};\n\ninherits(SimpleGeometry, Geometry);\n\n\n/**\n * @param {number} stride Stride.\n * @return {module:ol/geom/GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {module:ol/geom/GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @inheritDoc\n */\nSimpleGeometry.prototype.containsXY = FALSE;\n\n\n/**\n * @inheritDoc\n */\nSimpleGeometry.prototype.computeExtent = function(extent) {\n  return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n    0, this.flatCoordinates.length, this.stride, extent);\n};\n\n\n/**\n * @abstract\n * @return {Array} Coordinates.\n */\nSimpleGeometry.prototype.getCoordinates = function() {};\n\n\n/**\n * Return the first coordinate of the geometry.\n * @return {module:ol/coordinate~Coordinate} First coordinate.\n * @api\n */\nSimpleGeometry.prototype.getFirstCoordinate = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Flat coordinates.\n */\nSimpleGeometry.prototype.getFlatCoordinates = function() {\n  return this.flatCoordinates;\n};\n\n\n/**\n * Return the last coordinate of the geometry.\n * @return {module:ol/coordinate~Coordinate} Last point.\n * @api\n */\nSimpleGeometry.prototype.getLastCoordinate = function() {\n  return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n};\n\n\n/**\n * Return the {@link module:ol/geom/GeometryLayout~GeometryLayout layout} of the geometry.\n * @return {module:ol/geom/GeometryLayout} Layout.\n * @api\n */\nSimpleGeometry.prototype.getLayout = function() {\n  return this.layout;\n};\n\n\n/**\n * @inheritDoc\n */\nSimpleGeometry.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  // If squaredTolerance is negative or if we know that simplification will not\n  // have any effect then just return this.\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  const key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    const simplifiedGeometry =\n        this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      this.simplifiedGeometryCache[key] = simplifiedGeometry;\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @param {number} squaredTolerance Squared tolerance.\n * @return {module:ol/geom/SimpleGeometry} Simplified geometry.\n * @protected\n */\nSimpleGeometry.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  return this;\n};\n\n\n/**\n * @return {number} Stride.\n */\nSimpleGeometry.prototype.getStride = function() {\n  return this.stride;\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @protected\n */\nSimpleGeometry.prototype.setFlatCoordinatesInternal = function(layout, flatCoordinates) {\n  this.stride = getStrideForLayout(layout);\n  this.layout = layout;\n  this.flatCoordinates = flatCoordinates;\n};\n\n\n/**\n * @abstract\n * @param {Array} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n */\nSimpleGeometry.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout|undefined} layout Layout.\n * @param {Array} coordinates Coordinates.\n * @param {number} nesting Nesting.\n * @protected\n */\nSimpleGeometry.prototype.setLayout = function(layout, coordinates, nesting) {\n  /** @type {number} */\n  let stride;\n  if (layout) {\n    stride = getStrideForLayout(layout);\n  } else {\n    for (let i = 0; i < nesting; ++i) {\n      if (coordinates.length === 0) {\n        this.layout = GeometryLayout.XY;\n        this.stride = 2;\n        return;\n      } else {\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n    }\n    stride = coordinates.length;\n    layout = getLayoutForStride(stride);\n  }\n  this.layout = layout;\n  this.stride = stride;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nSimpleGeometry.prototype.applyTransform = function(transformFn) {\n  if (this.flatCoordinates) {\n    transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nSimpleGeometry.prototype.rotate = function(angle, anchor) {\n  const flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    const stride = this.getStride();\n    rotate(\n      flatCoordinates, 0, flatCoordinates.length,\n      stride, angle, anchor, flatCoordinates);\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nSimpleGeometry.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  let sy = opt_sy;\n  if (sy === undefined) {\n    sy = sx;\n  }\n  let anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  const flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    const stride = this.getStride();\n    scale(\n      flatCoordinates, 0, flatCoordinates.length,\n      stride, sx, sy, anchor, flatCoordinates);\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nSimpleGeometry.prototype.translate = function(deltaX, deltaY) {\n  const flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    const stride = this.getStride();\n    translate(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      deltaX, deltaY, flatCoordinates);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} simpleGeometry Simple geometry.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z`, `x`, and `y`. `z` is the zoom level.\n * @typedef {Array.<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Tile coordinate.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {module:ol/tilecoord~TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {module:ol/tilecoord~TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  const z = tileCoord[0];\n  const digits = new Array(z);\n  let mask = 1 << (z - 1);\n  let i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {!module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const extent = tileGrid.getExtent();\n  let tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array.<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {module:ol/size~Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {module:ol/size~Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {module:ol/size~Size} size Size.\n * @param {number} ratio Ratio.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `module:ol/size~Size` array for the passed in number (meaning: square) or\n * `module:ol/size~Size` array.\n * (meaning: non-square),\n * @param {number|module:ol/size~Size} size Width and height.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object.<module:ol/proj/Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/LayerType\n */\n\n/**\n * A layer type used when creating layer renderers.\n * @enum {string}\n */\nexport default {\n  IMAGE: 'IMAGE',\n  TILE: 'TILE',\n  VECTOR_TILE: 'VECTOR_TILE',\n  VECTOR: 'VECTOR'\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array.<number>} anchor Rotation anchor point.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array.<number>} anchor Scale anchor point.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection~CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection~CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * @see http://mapbox.com/developers/api/\n */\n\nimport {inherits} from '../util.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from '../source/State.js';\nimport TileImage from '../source/TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {boolean} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {tileJSON} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n *\n * @constructor\n * @extends {module:ol/source/TileImage}\n * @param {module:ol/source/TileJSON~Options=} options TileJSON options.\n * @api\n */\nconst TileJSON = function(options) {\n\n  /**\n   * @type {TileJSON}\n   * @private\n   */\n  this.tileJSON_ = null;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    projection: getProjection('EPSG:3857'),\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    state: SourceState.LOADING,\n    tileLoadFunction: options.tileLoadFunction,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  if (options.url) {\n    if (options.jsonp) {\n      requestJSONP(options.url, this.handleTileJSONResponse.bind(this),\n        this.handleTileJSONError.bind(this));\n    } else {\n      const client = new XMLHttpRequest();\n      client.addEventListener('load', this.onXHRLoad_.bind(this));\n      client.addEventListener('error', this.onXHRError_.bind(this));\n      client.open('GET', options.url);\n      client.send();\n    }\n  } else if (options.tileJSON) {\n    this.handleTileJSONResponse(options.tileJSON);\n  } else {\n    assert(false, 51); // Either `url` or `tileJSON` options must be provided\n  }\n\n};\n\ninherits(TileJSON, TileImage);\n\n\n/**\n * @private\n * @param {Event} event The load event.\n */\nTileJSON.prototype.onXHRLoad_ = function(event) {\n  const client = /** @type {XMLHttpRequest} */ (event.target);\n  // status will be 0 for file:// urls\n  if (!client.status || client.status >= 200 && client.status < 300) {\n    let response;\n    try {\n      response = /** @type {TileJSON} */(JSON.parse(client.responseText));\n    } catch (err) {\n      this.handleTileJSONError();\n      return;\n    }\n    this.handleTileJSONResponse(response);\n  } else {\n    this.handleTileJSONError();\n  }\n};\n\n\n/**\n * @private\n * @param {Event} event The error event.\n */\nTileJSON.prototype.onXHRError_ = function(event) {\n  this.handleTileJSONError();\n};\n\n\n/**\n * @return {TileJSON} The tilejson object.\n * @api\n */\nTileJSON.prototype.getTileJSON = function() {\n  return this.tileJSON_;\n};\n\n\n/**\n * @protected\n * @param {TileJSON} tileJSON Tile JSON.\n */\nTileJSON.prototype.handleTileJSONResponse = function(tileJSON) {\n\n  const epsg4326Projection = getProjection('EPSG:4326');\n\n  const sourceProjection = this.getProjection();\n  let extent;\n  if (tileJSON.bounds !== undefined) {\n    const transform = getTransformFromProjections(\n      epsg4326Projection, sourceProjection);\n    extent = applyTransform(tileJSON.bounds, transform);\n  }\n\n  const minZoom = tileJSON.minzoom || 0;\n  const maxZoom = tileJSON.maxzoom || 22;\n  const tileGrid = createXYZ({\n    extent: extentFromProjection(sourceProjection),\n    maxZoom: maxZoom,\n    minZoom: minZoom\n  });\n  this.tileGrid = tileGrid;\n\n  this.tileUrlFunction = createFromTemplates(tileJSON.tiles, tileGrid);\n\n  if (tileJSON.attribution !== undefined && !this.getAttributions()) {\n    const attributionExtent = extent !== undefined ?\n      extent : epsg4326Projection.getExtent();\n\n    this.setAttributions(function(frameState) {\n      if (intersects(attributionExtent, frameState.extent)) {\n        return [tileJSON.attribution];\n      }\n      return null;\n    });\n\n  }\n  this.tileJSON_ = tileJSON;\n  this.setState(SourceState.READY);\n\n};\n\n\n/**\n * @protected\n */\nTileJSON.prototype.handleTileJSONError = function() {\n  this.setState(SourceState.ERROR);\n};\nexport default TileJSON;\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\nimport {inherits} from '../util.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getCenter, getIntersection, getHeight, getWidth} from '../extent.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from '../reproj/Triangulation.js';\n\n\n/**\n * @typedef {function(module:ol/extent~Extent, number, number) : module:ol/ImageBase} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n *\n * @constructor\n * @extends {module:ol/ImageBase}\n * @param {module:ol/proj/Projection} sourceProj Source projection (of the data).\n * @param {module:ol/proj/Projection} targetProj Target projection.\n * @param {module:ol/extent~Extent} targetExtent Target extent.\n * @param {number} targetResolution Target resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/reproj/Image~FunctionType} getImageFunction\n *     Function returning source images (extent, resolution, pixelRatio).\n */\nconst ReprojImage = function(sourceProj, targetProj,\n  targetExtent, targetResolution, pixelRatio, getImageFunction) {\n\n  /**\n   * @private\n   * @type {module:ol/proj/Projection}\n   */\n  this.targetProj_ = targetProj;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.maxSourceExtent_ = sourceProj.getExtent();\n  const maxTargetExtent = targetProj.getExtent();\n\n  const limitedTargetExtent = maxTargetExtent ?\n    getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n  const targetCenter = getCenter(limitedTargetExtent);\n  const sourceResolution = calculateSourceResolution(\n    sourceProj, targetProj, targetCenter, targetResolution);\n\n  const errorThresholdInPixels = ERROR_THRESHOLD;\n\n  /**\n   * @private\n   * @type {!module:ol/reproj/Triangulation}\n   */\n  this.triangulation_ = new Triangulation(\n    sourceProj, targetProj, limitedTargetExtent, this.maxSourceExtent_,\n    sourceResolution * errorThresholdInPixels);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.targetResolution_ = targetResolution;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.targetExtent_ = targetExtent;\n\n  const sourceExtent = this.triangulation_.calculateSourceExtent();\n\n  /**\n   * @private\n   * @type {module:ol/ImageBase}\n   */\n  this.sourceImage_ =\n      getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.sourcePixelRatio_ =\n      this.sourceImage_ ? this.sourceImage_.getPixelRatio() : 1;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.sourceListenerKey_ = null;\n\n\n  let state = ImageState.LOADED;\n\n  if (this.sourceImage_) {\n    state = ImageState.IDLE;\n  }\n\n  ImageBase.call(this, targetExtent, targetResolution, this.sourcePixelRatio_, state);\n};\n\ninherits(ReprojImage, ImageBase);\n\n\n/**\n * @inheritDoc\n */\nReprojImage.prototype.disposeInternal = function() {\n  if (this.state == ImageState.LOADING) {\n    this.unlistenSource_();\n  }\n  ImageBase.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\nReprojImage.prototype.getImage = function() {\n  return this.canvas_;\n};\n\n\n/**\n * @return {module:ol/proj/Projection} Projection.\n */\nReprojImage.prototype.getProjection = function() {\n  return this.targetProj_;\n};\n\n\n/**\n * @private\n */\nReprojImage.prototype.reproject_ = function() {\n  const sourceState = this.sourceImage_.getState();\n  if (sourceState == ImageState.LOADED) {\n    const width = getWidth(this.targetExtent_) / this.targetResolution_;\n    const height = getHeight(this.targetExtent_) / this.targetResolution_;\n\n    this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_,\n      this.sourceImage_.getResolution(), this.maxSourceExtent_,\n      this.targetResolution_, this.targetExtent_, this.triangulation_, [{\n        extent: this.sourceImage_.getExtent(),\n        image: this.sourceImage_.getImage()\n      }], 0);\n  }\n  this.state = sourceState;\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nReprojImage.prototype.load = function() {\n  if (this.state == ImageState.IDLE) {\n    this.state = ImageState.LOADING;\n    this.changed();\n\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n      this.reproject_();\n    } else {\n      this.sourceListenerKey_ = listen(this.sourceImage_,\n        EventType.CHANGE, function(e) {\n          const sourceState = this.sourceImage_.getState();\n          if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n            this.unlistenSource_();\n            this.reproject_();\n          }\n        }, this);\n      this.sourceImage_.load();\n    }\n  }\n};\n\n\n/**\n * @private\n */\nReprojImage.prototype.unlistenSource_ = function() {\n  unlistenByKey(/** @type {!module:ol/events~EventsKey} */ (this.sourceListenerKey_));\n  this.sourceListenerKey_ = null;\n};\nexport default ReprojImage;\n","/**\n * @module ol/source/Image\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {inherits} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport {linearFindNearest} from '../array.js';\nimport Event from '../events/Event.js';\nimport {equals} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from '../source/Source.js';\n\n\n/**\n * @enum {string}\n */\nconst ImageSourceEventType = {\n\n  /**\n   * Triggered when an image starts loading.\n   * @event ol/source/Image~ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event ol/source/Image~ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event ol/source/Image~ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror'\n\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type Type.\n * @param {module:ol/Image} image The image.\n */\nconst ImageSourceEvent = function(type, image) {\n\n  Event.call(this, type);\n\n  /**\n   * The image related to the event.\n   * @type {module:ol/Image}\n   * @api\n   */\n  this.image = image;\n\n};\ninherits(ImageSourceEvent, Event);\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {module:ol/extent~Extent} [extent]\n * @property {module:ol/proj~ProjectionLike} projection\n * @property {Array.<number>} [resolutions]\n * @property {module:ol/source/State} [state]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/source/Source}\n * @param {module:ol/source/Image~Options} options Single image source options.\n * @api\n */\nconst ImageSource = function(options) {\n  Source.call(this, {\n    attributions: options.attributions,\n    extent: options.extent,\n    projection: options.projection,\n    state: options.state\n  });\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.resolutions_ = options.resolutions !== undefined ?\n    options.resolutions : null;\n\n\n  /**\n   * @private\n   * @type {module:ol/reproj/Image}\n   */\n  this.reprojectedImage_ = null;\n\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.reprojectedRevision_ = 0;\n};\n\ninherits(ImageSource, Source);\n\n\n/**\n * @return {Array.<number>} Resolutions.\n * @override\n */\nImageSource.prototype.getResolutions = function() {\n  return this.resolutions_;\n};\n\n\n/**\n * @protected\n * @param {number} resolution Resolution.\n * @return {number} Resolution.\n */\nImageSource.prototype.findNearestResolution = function(resolution) {\n  if (this.resolutions_) {\n    const idx = linearFindNearest(this.resolutions_, resolution, 0);\n    resolution = this.resolutions_[idx];\n  }\n  return resolution;\n};\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/ImageBase} Single image.\n */\nImageSource.prototype.getImage = function(extent, resolution, pixelRatio, projection) {\n  const sourceProjection = this.getProjection();\n  if (!ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)) {\n    if (sourceProjection) {\n      projection = sourceProjection;\n    }\n    return this.getImageInternal(extent, resolution, pixelRatio, projection);\n  } else {\n    if (this.reprojectedImage_) {\n      if (this.reprojectedRevision_ == this.getRevision() &&\n          equivalent(\n            this.reprojectedImage_.getProjection(), projection) &&\n          this.reprojectedImage_.getResolution() == resolution &&\n          equals(this.reprojectedImage_.getExtent(), extent)) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new ReprojImage(\n      sourceProjection, projection, extent, resolution, pixelRatio,\n      function(extent, resolution, pixelRatio) {\n        return this.getImageInternal(extent, resolution,\n          pixelRatio, sourceProjection);\n      }.bind(this));\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n};\n\n\n/**\n * @abstract\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/ImageBase} Single image.\n * @protected\n */\nImageSource.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {};\n\n\n/**\n * Handle image change events.\n * @param {module:ol/events/Event} event Event.\n * @protected\n */\nImageSource.prototype.handleImageChange = function(event) {\n  const image = /** @type {module:ol/Image} */ (event.target);\n  switch (image.getState()) {\n    case ImageState.LOADING:\n      this.dispatchEvent(\n        new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART,\n          image));\n      break;\n    case ImageState.LOADED:\n      this.dispatchEvent(\n        new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND,\n          image));\n      break;\n    case ImageState.ERROR:\n      this.dispatchEvent(\n        new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR,\n          image));\n      break;\n    default:\n      // pass\n  }\n};\n\n\n/**\n * Default image load function for image sources that use module:ol/Image~Image image\n * instances.\n * @param {module:ol/Image} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  image.getImage().src = src;\n}\n\n\nexport default ImageSource;\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\nimport {inherits} from '../util.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from '../reproj/Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : module:ol/Tile} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n * @constructor\n * @extends {module:ol/Tile}\n * @param {module:ol/proj/Projection} sourceProj Source projection.\n * @param {module:ol/tilegrid/TileGrid} sourceTileGrid Source tile grid.\n * @param {module:ol/proj/Projection} targetProj Target projection.\n * @param {module:ol/tilegrid/TileGrid} targetTileGrid Target tile grid.\n * @param {module:ol/tilecoord~TileCoord} tileCoord Coordinate of the tile.\n * @param {module:ol/tilecoord~TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} gutter Gutter of the source tiles.\n * @param {module:ol/reproj/Tile~FunctionType} getTileFunction\n *     Function returning source tiles (z, x, y, pixelRatio).\n * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n */\nconst ReprojTile = function(sourceProj, sourceTileGrid,\n  targetProj, targetTileGrid, tileCoord, wrappedTileCoord,\n  pixelRatio, gutter, getTileFunction,\n  opt_errorThreshold, opt_renderEdges) {\n  Tile.call(this, tileCoord, TileState.IDLE);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = gutter;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/tilegrid/TileGrid}\n   */\n  this.sourceTileGrid_ = sourceTileGrid;\n\n  /**\n   * @private\n   * @type {module:ol/tilegrid/TileGrid}\n   */\n  this.targetTileGrid_ = targetTileGrid;\n\n  /**\n   * @private\n   * @type {module:ol/tilecoord~TileCoord}\n   */\n  this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n  /**\n   * @private\n   * @type {!Array.<module:ol/Tile>}\n   */\n  this.sourceTiles_ = [];\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.sourcesListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.sourceZ_ = 0;\n\n  const targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n  const maxTargetExtent = this.targetTileGrid_.getExtent();\n  let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n  const limitedTargetExtent = maxTargetExtent ?\n    getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n  if (getArea(limitedTargetExtent) === 0) {\n    // Tile is completely outside range -> EMPTY\n    // TODO: is it actually correct that the source even creates the tile ?\n    this.state = TileState.EMPTY;\n    return;\n  }\n\n  const sourceProjExtent = sourceProj.getExtent();\n  if (sourceProjExtent) {\n    if (!maxSourceExtent) {\n      maxSourceExtent = sourceProjExtent;\n    } else {\n      maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n    }\n  }\n\n  const targetResolution = targetTileGrid.getResolution(\n    this.wrappedTileCoord_[0]);\n\n  const targetCenter = getCenter(limitedTargetExtent);\n  const sourceResolution = calculateSourceResolution(\n    sourceProj, targetProj, targetCenter, targetResolution);\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    // invalid sourceResolution -> EMPTY\n    // probably edges of the projections when no extent is defined\n    this.state = TileState.EMPTY;\n    return;\n  }\n\n  const errorThresholdInPixels = opt_errorThreshold !== undefined ?\n    opt_errorThreshold : ERROR_THRESHOLD;\n\n  /**\n   * @private\n   * @type {!module:ol/reproj/Triangulation}\n   */\n  this.triangulation_ = new Triangulation(\n    sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n    sourceResolution * errorThresholdInPixels);\n\n  if (this.triangulation_.getTriangles().length === 0) {\n    // no valid triangles -> EMPTY\n    this.state = TileState.EMPTY;\n    return;\n  }\n\n  this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n  let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n  if (maxSourceExtent) {\n    if (sourceProj.canWrapX()) {\n      sourceExtent[1] = clamp(\n        sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n      sourceExtent[3] = clamp(\n        sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n    } else {\n      sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n    }\n  }\n\n  if (!getArea(sourceExtent)) {\n    this.state = TileState.EMPTY;\n  } else {\n    const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n      sourceExtent, this.sourceZ_);\n\n    for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n      for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n        const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n        if (tile) {\n          this.sourceTiles_.push(tile);\n        }\n      }\n    }\n\n    if (this.sourceTiles_.length === 0) {\n      this.state = TileState.EMPTY;\n    }\n  }\n};\n\ninherits(ReprojTile, Tile);\n\n\n/**\n * @inheritDoc\n */\nReprojTile.prototype.disposeInternal = function() {\n  if (this.state == TileState.LOADING) {\n    this.unlistenSources_();\n  }\n  Tile.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Get the HTML Canvas element for this tile.\n * @return {HTMLCanvasElement} Canvas.\n */\nReprojTile.prototype.getImage = function() {\n  return this.canvas_;\n};\n\n\n/**\n * @private\n */\nReprojTile.prototype.reproject_ = function() {\n  const sources = [];\n  this.sourceTiles_.forEach(function(tile, i, arr) {\n    if (tile && tile.getState() == TileState.LOADED) {\n      sources.push({\n        extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n        image: tile.getImage()\n      });\n    }\n  }.bind(this));\n  this.sourceTiles_.length = 0;\n\n  if (sources.length === 0) {\n    this.state = TileState.ERROR;\n  } else {\n    const z = this.wrappedTileCoord_[0];\n    const size = this.targetTileGrid_.getTileSize(z);\n    const width = typeof size === 'number' ? size : size[0];\n    const height = typeof size === 'number' ? size : size[1];\n    const targetResolution = this.targetTileGrid_.getResolution(z);\n    const sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_);\n    this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n      sourceResolution, this.sourceTileGrid_.getExtent(),\n      targetResolution, targetExtent, this.triangulation_, sources,\n      this.gutter_, this.renderEdges_);\n\n    this.state = TileState.LOADED;\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nReprojTile.prototype.load = function() {\n  if (this.state == TileState.IDLE) {\n    this.state = TileState.LOADING;\n    this.changed();\n\n    let leftToLoad = 0;\n\n    this.sourcesListenerKeys_ = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      const state = tile.getState();\n      if (state == TileState.IDLE || state == TileState.LOADING) {\n        leftToLoad++;\n\n        const sourceListenKey = listen(tile, EventType.CHANGE,\n          function(e) {\n            const state = tile.getState();\n            if (state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY) {\n              unlistenByKey(sourceListenKey);\n              leftToLoad--;\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          }, this);\n        this.sourcesListenerKeys_.push(sourceListenKey);\n      }\n    }.bind(this));\n\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      const state = tile.getState();\n      if (state == TileState.IDLE) {\n        tile.load();\n      }\n    });\n\n    if (leftToLoad === 0) {\n      setTimeout(this.reproject_.bind(this), 0);\n    }\n  }\n};\n\n\n/**\n * @private\n */\nReprojTile.prototype.unlistenSources_ = function() {\n  this.sourcesListenerKeys_.forEach(unlistenByKey);\n  this.sourcesListenerKeys_ = null;\n};\nexport default ReprojTile;\n","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid, inherits} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from '../source/UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {boolean} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/source/State} [state] Source state.\n * @property {module:ol/ImageTile~TileClass} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array.<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @constructor\n * @fires module:ol/source/Tile~TileSourceEvent\n * @extends {module:ol/source/UrlTile}\n * @param {module:ol/source/TileImage~Options=} options Image tile options.\n * @api\n */\nconst TileImage = function(options) {\n\n  UrlTile.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    extent: options.extent,\n    opaque: options.opaque,\n    projection: options.projection,\n    state: options.state,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction ?\n      options.tileLoadFunction : defaultTileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX,\n    transition: options.transition\n  });\n\n  /**\n   * @protected\n   * @type {?string}\n   */\n  this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @protected\n   * @type {function(new: module:ol/ImageTile, module:ol/tilecoord~TileCoord, module:ol/TileState, string,\n   *        ?string, module:ol/Tile~LoadFunction, module:ol/Tile~Options=)}\n   */\n  this.tileClass = options.tileClass !== undefined ?\n    options.tileClass : ImageTile;\n\n  /**\n   * @protected\n   * @type {!Object.<string, module:ol/TileCache>}\n   */\n  this.tileCacheForProjection = {};\n\n  /**\n   * @protected\n   * @type {!Object.<string, module:ol/tilegrid/TileGrid>}\n   */\n  this.tileGridForProjection = {};\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderReprojectionEdges_ = false;\n};\n\ninherits(TileImage, UrlTile);\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.canExpireCache = function() {\n  if (!ENABLE_RASTER_REPROJECTION) {\n    return UrlTile.prototype.canExpireCache.call(this);\n  }\n  if (this.tileCache.canExpireCache()) {\n    return true;\n  } else {\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.expireCache = function(projection, usedTiles) {\n  if (!ENABLE_RASTER_REPROJECTION) {\n    UrlTile.prototype.expireCache.call(this, projection, usedTiles);\n    return;\n  }\n  const usedTileCache = this.getTileCacheForProjection(projection);\n\n  this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n  for (const id in this.tileCacheForProjection) {\n    const tileCache = this.tileCacheForProjection[id];\n    tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getGutter = function(projection) {\n  if (ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n    return 0;\n  } else {\n    return this.getGutterInternal();\n  }\n};\n\n\n/**\n * @protected\n * @return {number} Gutter.\n */\nTileImage.prototype.getGutterInternal = function() {\n  return 0;\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getOpaque = function(projection) {\n  if (ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n    return false;\n  } else {\n    return UrlTile.prototype.getOpaque.call(this, projection);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getTileGridForProjection = function(projection) {\n  if (!ENABLE_RASTER_REPROJECTION) {\n    return UrlTile.prototype.getTileGridForProjection.call(this, projection);\n  }\n  const thisProj = this.getProjection();\n  if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n    return this.tileGrid;\n  } else {\n    const projKey = getUid(projection).toString();\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n    }\n    return (\n      /** @type {!module:ol/tilegrid/TileGrid} */ (this.tileGridForProjection[projKey])\n    );\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getTileCacheForProjection = function(projection) {\n  if (!ENABLE_RASTER_REPROJECTION) {\n    return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\n  }\n  const thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n    return this.tileCache;\n  } else {\n    const projKey = getUid(projection).toString();\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n};\n\n\n/**\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {string} key The key set on the tile.\n * @return {!module:ol/Tile} Tile.\n * @private\n */\nTileImage.prototype.createTile_ = function(z, x, y, pixelRatio, projection, key) {\n  const tileCoord = [z, x, y];\n  const urlTileCoord = this.getTileCoordForTileUrlFunction(\n    tileCoord, projection);\n  const tileUrl = urlTileCoord ?\n    this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n  const tile = new this.tileClass(\n    tileCoord,\n    tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n    tileUrl !== undefined ? tileUrl : '',\n    this.crossOrigin,\n    this.tileLoadFunction,\n    this.tileOptions);\n  tile.key = key;\n  listen(tile, EventType.CHANGE,\n    this.handleTileChange, this);\n  return tile;\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getTile = function(z, x, y, pixelRatio, projection) {\n  const sourceProjection = /** @type {!module:ol/proj/Projection} */ (this.getProjection());\n  if (!ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n  } else {\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = /** @type {!module:ol/Tile} */ (cache.get(tileCoordKey));\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    } else {\n      const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n      const targetTileGrid = this.getTileGridForProjection(projection);\n      const wrappedTileCoord =\n          this.getTileCoordForTileUrlFunction(tileCoord, projection);\n      const newTile = new ReprojTile(\n        sourceProjection, sourceTileGrid,\n        projection, targetTileGrid,\n        tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n        this.getGutterInternal(),\n        function(z, x, y, pixelRatio) {\n          return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n        }.bind(this), this.reprojectionErrorThreshold_,\n        this.renderReprojectionEdges_);\n      newTile.key = key;\n\n      if (tile) {\n        newTile.interimTile = tile;\n        newTile.refreshInterimChain();\n        cache.replace(tileCoordKey, newTile);\n      } else {\n        cache.set(tileCoordKey, newTile);\n      }\n      return newTile;\n    }\n  }\n};\n\n\n/**\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {number} pixelRatio Pixel ratio.\n * @param {!module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/Tile} Tile.\n * @protected\n */\nTileImage.prototype.getTileInternal = function(z, x, y, pixelRatio, projection) {\n  let tile = null;\n  const tileCoordKey = getKeyZXY(z, x, y);\n  const key = this.getKey();\n  if (!this.tileCache.containsKey(tileCoordKey)) {\n    tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n    this.tileCache.set(tileCoordKey, tile);\n  } else {\n    tile = this.tileCache.get(tileCoordKey);\n    if (tile.key != key) {\n      // The source's params changed. If the tile has an interim tile and if we\n      // can use it then we use it. Otherwise we create a new tile.  In both\n      // cases we attempt to assign an interim tile to the new tile.\n      const interimTile = tile;\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n      //make the new tile the head of the list,\n      if (interimTile.getState() == TileState.IDLE) {\n        //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n        tile.interimTile = interimTile.interimTile;\n      } else {\n        tile.interimTile = interimTile;\n      }\n      tile.refreshInterimChain();\n      this.tileCache.replace(tileCoordKey, tile);\n    }\n  }\n  return tile;\n};\n\n\n/**\n * Sets whether to render reprojection edges or not (usually for debugging).\n * @param {boolean} render Render the edges.\n * @api\n */\nTileImage.prototype.setRenderReprojectionEdges = function(render) {\n  if (!ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render) {\n    return;\n  }\n  this.renderReprojectionEdges_ = render;\n  for (const id in this.tileCacheForProjection) {\n    this.tileCacheForProjection[id].clear();\n  }\n  this.changed();\n};\n\n\n/**\n * Sets the tile grid to use when reprojecting the tiles to the given\n * projection instead of the default tile grid for the projection.\n *\n * This can be useful when the default tile grid cannot be created\n * (e.g. projection has no extent defined) or\n * for optimization reasons (custom tile size, resolutions, ...).\n *\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @param {module:ol/tilegrid/TileGrid} tilegrid Tile grid to use for the projection.\n * @api\n */\nTileImage.prototype.setTileGridForProjection = function(projection, tilegrid) {\n  if (ENABLE_RASTER_REPROJECTION) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj).toString();\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  imageTile.getImage().src = src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getUid, inherits} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from '../layer/Base.js';\nimport LayerProperty from '../layer/Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/source/Source} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {module:ol/layer/Layer} layer\n * @property {number} opacity\n * @property {module:ol/source/Source~State} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {module:ol/extent~Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/layer/Base}\n * @fires module:ol/render/Event~RenderEvent\n * @param {module:ol/layer/Layer~Options} options Layer options.\n * @api\n */\nconst Layer = function(options) {\n\n  const baseOptions = assign({}, options);\n  delete baseOptions.source;\n\n  BaseLayer.call(this, /** @type {module:ol/layer/Base~Options} */ (baseOptions));\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.mapPrecomposeKey_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.mapRenderKey_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.sourceChangeKey_ = null;\n\n  if (options.map) {\n    this.setMap(options.map);\n  }\n\n  listen(this,\n    getChangeEventType(LayerProperty.SOURCE),\n    this.handleSourcePropertyChange_, this);\n\n  const source = options.source ? options.source : null;\n  this.setSource(source);\n};\n\ninherits(Layer, BaseLayer);\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n}\n\n\n/**\n * @inheritDoc\n */\nLayer.prototype.getLayersArray = function(opt_array) {\n  const array = opt_array ? opt_array : [];\n  array.push(this);\n  return array;\n};\n\n\n/**\n * @inheritDoc\n */\nLayer.prototype.getLayerStatesArray = function(opt_states) {\n  const states = opt_states ? opt_states : [];\n  states.push(this.getLayerState());\n  return states;\n};\n\n\n/**\n * Get the layer source.\n * @return {module:ol/source/Source} The layer source (or `null` if not yet set).\n * @observable\n * @api\n */\nLayer.prototype.getSource = function() {\n  const source = this.get(LayerProperty.SOURCE);\n  return (\n    /** @type {module:ol/source/Source} */ (source) || null\n  );\n};\n\n\n/**\n  * @inheritDoc\n  */\nLayer.prototype.getSourceState = function() {\n  const source = this.getSource();\n  return !source ? SourceState.UNDEFINED : source.getState();\n};\n\n\n/**\n * @private\n */\nLayer.prototype.handleSourceChange_ = function() {\n  this.changed();\n};\n\n\n/**\n * @private\n */\nLayer.prototype.handleSourcePropertyChange_ = function() {\n  if (this.sourceChangeKey_) {\n    unlistenByKey(this.sourceChangeKey_);\n    this.sourceChangeKey_ = null;\n  }\n  const source = this.getSource();\n  if (source) {\n    this.sourceChangeKey_ = listen(source,\n      EventType.CHANGE, this.handleSourceChange_, this);\n  }\n  this.changed();\n};\n\n\n/**\n * Sets the layer to be rendered on top of other layers on a map. The map will\n * not manage this layer in its layers collection, and the callback in\n * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n * is useful for temporary layers. To remove an unmanaged layer from the map,\n * use `#setMap(null)`.\n *\n * To add the layer to a map and have it managed by the map, use\n * {@link module:ol/Map#addLayer} instead.\n * @param {module:ol/PluggableMap} map Map.\n * @api\n */\nLayer.prototype.setMap = function(map) {\n  if (this.mapPrecomposeKey_) {\n    unlistenByKey(this.mapPrecomposeKey_);\n    this.mapPrecomposeKey_ = null;\n  }\n  if (!map) {\n    this.changed();\n  }\n  if (this.mapRenderKey_) {\n    unlistenByKey(this.mapRenderKey_);\n    this.mapRenderKey_ = null;\n  }\n  if (map) {\n    this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n      const layerState = this.getLayerState();\n      layerState.managed = false;\n      layerState.zIndex = Infinity;\n      evt.frameState.layerStatesArray.push(layerState);\n      evt.frameState.layerStates[getUid(this)] = layerState;\n    }, this);\n    this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n    this.changed();\n  }\n};\n\n\n/**\n * Set the layer source.\n * @param {module:ol/source/Source} source The layer source.\n * @observable\n * @api\n */\nLayer.prototype.setSource = function(source) {\n  this.set(LayerProperty.SOURCE, source);\n};\nexport default Layer;\n","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {assign} from './obj.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/tilegrid/TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {module:ol/extent/Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!module:ol/tilegrid/TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|module:ol/size~Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {module:ol/tilegrid~XYZOptions=} opt_options Tile grid options.\n * @return {!module:ol/tilegrid/TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const options = /** @type {module:ol/tilegrid/TileGrid~Options} */ ({});\n  assign(options, opt_options !== undefined ?\n    opt_options : /** @type {module:ol/tilegrid~XYZOptions} */ ({}));\n  if (options.extent === undefined) {\n    options.extent = getProjection('EPSG:3857').getExtent();\n  }\n  options.resolutions = resolutionsFromExtent(\n    options.extent, options.maxZoom, options.tileSize);\n  delete options.maxZoom;\n\n  return new TileGrid(options);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array.<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  const maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  const maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {module:ol/extent/Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!module:ol/tilegrid/TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from '../proj/Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {module:ol/proj/Units|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {module:ol/extent~Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {module:ol/extent~Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, module:ol/coordinate~Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{module:ol/coordinate~Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use proj4js, aliases can be added using `proj4.defs()`; see\n * [documentation](https://github.com/proj4js/proj4js). To set an alternative\n * namespace for proj4, use {@link module:ol/proj~setProj4}.\n *\n * @constructor\n * @param {module:ol/proj/Projection~Options} options Projection options.\n * @struct\n * @api\n */\nconst Projection = function(options) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this.code_ = options.code;\n\n  /**\n   * Units of projected coordinates. When set to `TILE_PIXELS`, a\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\n   * tile.\n   * @private\n   * @type {module:ol/proj/Units}\n   */\n  this.units_ = /** @type {module:ol/proj/Units} */ (options.units);\n\n  /**\n   * Validity extent of the projection in projected coordinates. For projections\n   * with `TILE_PIXELS` units, this is the extent of the tile in\n   * tile pixel space.\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = options.extent !== undefined ? options.extent : null;\n\n  /**\n   * Extent of the world in EPSG:4326. For projections with\n   * `TILE_PIXELS` units, this is the extent of the tile in\n   * projected coordinate space.\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.worldExtent_ = options.worldExtent !== undefined ?\n    options.worldExtent : null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.axisOrientation_ = options.axisOrientation !== undefined ?\n    options.axisOrientation : 'enu';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.global_ = options.global !== undefined ? options.global : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.canWrapX_ = !!(this.global_ && this.extent_);\n\n  /**\n   * @private\n   * @type {function(number, module:ol/coordinate~Coordinate):number|undefined}\n   */\n  this.getPointResolutionFunc_ = options.getPointResolution;\n\n  /**\n   * @private\n   * @type {module:ol/tilegrid/TileGrid}\n   */\n  this.defaultTileGrid_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.metersPerUnit_ = options.metersPerUnit;\n};\n\n\n/**\n * @return {boolean} The projection is suitable for wrapping the x-axis\n */\nProjection.prototype.canWrapX = function() {\n  return this.canWrapX_;\n};\n\n\n/**\n * Get the code for this projection, e.g. 'EPSG:4326'.\n * @return {string} Code.\n * @api\n */\nProjection.prototype.getCode = function() {\n  return this.code_;\n};\n\n\n/**\n * Get the validity extent for this projection.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nProjection.prototype.getExtent = function() {\n  return this.extent_;\n};\n\n\n/**\n * Get the units of this projection.\n * @return {module:ol/proj/Units} Units.\n * @api\n */\nProjection.prototype.getUnits = function() {\n  return this.units_;\n};\n\n\n/**\n * Get the amount of meters per unit of this projection.  If the projection is\n * not configured with `metersPerUnit` or a units identifier, the return is\n * `undefined`.\n * @return {number|undefined} Meters.\n * @api\n */\nProjection.prototype.getMetersPerUnit = function() {\n  return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n};\n\n\n/**\n * Get the world extent for this projection.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nProjection.prototype.getWorldExtent = function() {\n  return this.worldExtent_;\n};\n\n\n/**\n * Get the axis orientation of this projection.\n * Example values are:\n * enu - the default easting, northing, elevation.\n * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n *     or south orientated transverse mercator.\n * wnu - westing, northing, up - some planetary coordinate systems have\n *     \"west positive\" coordinate systems\n * @return {string} Axis orientation.\n * @api\n */\nProjection.prototype.getAxisOrientation = function() {\n  return this.axisOrientation_;\n};\n\n\n/**\n * Is this projection a global projection which spans the whole world?\n * @return {boolean} Whether the projection is global.\n * @api\n */\nProjection.prototype.isGlobal = function() {\n  return this.global_;\n};\n\n\n/**\n* Set if the projection is a global projection which spans the whole world\n* @param {boolean} global Whether the projection is global.\n* @api\n*/\nProjection.prototype.setGlobal = function(global) {\n  this.global_ = global;\n  this.canWrapX_ = !!(global && this.extent_);\n};\n\n\n/**\n * @return {module:ol/tilegrid/TileGrid} The default tile grid.\n */\nProjection.prototype.getDefaultTileGrid = function() {\n  return this.defaultTileGrid_;\n};\n\n\n/**\n * @param {module:ol/tilegrid/TileGrid} tileGrid The default tile grid.\n */\nProjection.prototype.setDefaultTileGrid = function(tileGrid) {\n  this.defaultTileGrid_ = tileGrid;\n};\n\n\n/**\n * Set the validity extent for this projection.\n * @param {module:ol/extent~Extent} extent Extent.\n * @api\n */\nProjection.prototype.setExtent = function(extent) {\n  this.extent_ = extent;\n  this.canWrapX_ = !!(this.global_ && extent);\n};\n\n\n/**\n * Set the world extent for this projection.\n * @param {module:ol/extent~Extent} worldExtent World extent\n *     [minlon, minlat, maxlon, maxlat].\n * @api\n */\nProjection.prototype.setWorldExtent = function(worldExtent) {\n  this.worldExtent_ = worldExtent;\n};\n\n\n/**\n * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n * for this projection.\n * @param {function(number, module:ol/coordinate~Coordinate):number} func Function\n * @api\n */\nProjection.prototype.setGetPointResolution = function(func) {\n  this.getPointResolutionFunc_ = func;\n};\n\n\n/**\n * Get the custom point resolution function for this projection (if set).\n * @return {function(number, module:ol/coordinate~Coordinate):number|undefined} The custom point\n * resolution function (if set).\n */\nProjection.prototype.getPointResolutionFunc = function() {\n  return this.getPointResolutionFunc_;\n};\nexport default Projection;\n","/**\n * @module ol/Tile\n */\nimport {inherits} from './util.js';\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments.\n *\n * @typedef {function(module:ol/Tile, string)} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(module:ol/tilecoord~TileCoord, number,\n *           module:ol/proj/Projection): (string|undefined)} UrlFunction\n * @api\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/events/EventTarget}\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileState} state State.\n * @param {module:ol/Tile~Options=} opt_options Tile options.\n */\nconst Tile = function(tileCoord, state, opt_options) {\n  EventTarget.call(this);\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {module:ol/tilecoord~TileCoord}\n   */\n  this.tileCoord = tileCoord;\n\n  /**\n   * @protected\n   * @type {module:ol/TileState}\n   */\n  this.state = state;\n\n  /**\n   * An \"interim\" tile for this tile. The interim tile may be used while this\n   * one is loading, for \"smooth\" transitions when changing params/dimensions\n   * on the source.\n   * @type {module:ol/Tile}\n   */\n  this.interimTile = null;\n\n  /**\n   * A key assigned to the tile. This is used by the tile source to determine\n   * if this tile can effectively be used, or if a new tile should be created\n   * and this one be used as an interim tile for this new tile.\n   * @type {string}\n   */\n  this.key = '';\n\n  /**\n   * The duration for the opacity transition.\n   * @type {number}\n   */\n  this.transition_ = options.transition === undefined ? 250 : options.transition;\n\n  /**\n   * Lookup of start times for rendering transitions.  If the start time is\n   * equal to -1, the transition is complete.\n   * @type {Object.<number, number>}\n   */\n  this.transitionStarts_ = {};\n\n};\n\ninherits(Tile, EventTarget);\n\n\n/**\n * @protected\n */\nTile.prototype.changed = function() {\n  this.dispatchEvent(EventType.CHANGE);\n};\n\n\n/**\n * @return {string} Key.\n */\nTile.prototype.getKey = function() {\n  return this.key + '/' + this.tileCoord;\n};\n\n/**\n * Get the interim tile most suitable for rendering using the chain of interim\n * tiles. This corresponds to the  most recent tile that has been loaded, if no\n * such tile exists, the original tile is returned.\n * @return {!module:ol/Tile} Best tile for rendering.\n */\nTile.prototype.getInterimTile = function() {\n  if (!this.interimTile) {\n    //empty chain\n    return this;\n  }\n  let tile = this.interimTile;\n\n  // find the first loaded tile and return it. Since the chain is sorted in\n  // decreasing order of creation time, there is no need to search the remainder\n  // of the list (all those tiles correspond to older requests and will be\n  // cleaned up by refreshInterimChain)\n  do {\n    if (tile.getState() == TileState.LOADED) {\n      return tile;\n    }\n    tile = tile.interimTile;\n  } while (tile);\n\n  // we can not find a better tile\n  return this;\n};\n\n/**\n * Goes through the chain of interim tiles and discards sections of the chain\n * that are no longer relevant.\n */\nTile.prototype.refreshInterimChain = function() {\n  if (!this.interimTile) {\n    return;\n  }\n\n  let tile = this.interimTile;\n  let prev = this;\n\n  do {\n    if (tile.getState() == TileState.LOADED) {\n      //we have a loaded tile, we can discard the rest of the list\n      //we would could abort any LOADING tile request\n      //older than this tile (i.e. any LOADING tile following this entry in the chain)\n      tile.interimTile = null;\n      break;\n    } else if (tile.getState() == TileState.LOADING) {\n      //keep this LOADING tile any loaded tiles later in the chain are\n      //older than this tile, so we're still interested in the request\n      prev = tile;\n    } else if (tile.getState() == TileState.IDLE) {\n      //the head of the list is the most current tile, we don't need\n      //to start any other requests for this chain\n      prev.interimTile = tile.interimTile;\n    } else {\n      prev = tile;\n    }\n    tile = prev.interimTile;\n  } while (tile);\n};\n\n/**\n * Get the tile coordinate for this tile.\n * @return {module:ol/tilecoord~TileCoord} The tile coordinate.\n * @api\n */\nTile.prototype.getTileCoord = function() {\n  return this.tileCoord;\n};\n\n\n/**\n * @return {module:ol/TileState} State.\n */\nTile.prototype.getState = function() {\n  return this.state;\n};\n\n/**\n * @param {module:ol/TileState} state State.\n */\nTile.prototype.setState = function(state) {\n  this.state = state;\n  this.changed();\n};\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @abstract\n * @api\n */\nTile.prototype.load = function() {};\n\n/**\n * Get the alpha value for rendering.\n * @param {number} id An id for the renderer.\n * @param {number} time The render frame time.\n * @return {number} A number between 0 and 1.\n */\nTile.prototype.getAlpha = function(id, time) {\n  if (!this.transition_) {\n    return 1;\n  }\n\n  let start = this.transitionStarts_[id];\n  if (!start) {\n    start = time;\n    this.transitionStarts_[id] = start;\n  } else if (start === -1) {\n    return 1;\n  }\n\n  const delta = time - start + (1000 / 60); // avoid rendering at 0\n  if (delta >= this.transition_) {\n    return 1;\n  }\n  return easeIn(delta / this.transition_);\n};\n\n/**\n * Determine if a tile is in an alpha transition.  A tile is considered in\n * transition if tile.getAlpha() has not yet been called or has been called\n * and returned 1.\n * @param {number} id An id for the renderer.\n * @return {boolean} The tile is in transition.\n */\nTile.prototype.inTransition = function(id) {\n  if (!this.transition_) {\n    return false;\n  }\n  return this.transitionStarts_[id] !== -1;\n};\n\n/**\n * Mark a transition as complete.\n * @param {number} id An id for the renderer.\n */\nTile.prototype.endTransition = function(id) {\n  if (this.transition_) {\n    this.transitionStarts_[id] = -1;\n  }\n};\nexport default Tile;\n","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert, 10;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\n var codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS']; \nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      return wkt(code);\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n","import {PJD_3PARAM, PJD_7PARAM, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","import {PJD_3PARAM, PJD_7PARAM, PJD_NODATUM} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n  // Do we need to go through geocentric coordinates?\n  if (source.es === dest.es && source.a === dest.a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source.es, source.a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  return geocentricToGeodetic(point, dest.es, dest.a, dest.b);\n\n}\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if ((Latitude < -HALF_PI) || (Latitude > HALF_PI)) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return null;\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      t = 'x';\n    }\n    else if (i === 1) {\n      v = yin;\n      t = 'y';\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R\n    };\n  }\n  else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords);\n    if (coords.length === 3) {\n      return [transformedArray.x, transformedArray.y, transformedArray.z];\n    }\n    else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  }\n  else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if (key === 'x' || key === 'y') {\n        return;\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  }\n  else {\n    obj = {\n      forward: function(coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function(coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;\n","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (this.es === undefined || this.es <= 0) {\n    throw new Error('incorrect elliptical usage');\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (0.5 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {EPSLN, HALF_PI, FORTPI} from '../constants/values';\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n}\n\nexport function inverse(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.phi0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.phi0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c / Math.sin(c);\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      lat = Math.atan((1 - this.es * F * this.sin_p12 / Math.sin(psi)) * Math.tan(psi) / (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport version from \"./version\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = version;\nincludedProjections(proj4);\nexport default proj4;\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n}","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../util.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateCoordinatesArray} from '../geom/flat/inflate.js';\nimport {interpolatePoint, lineStringsCoordinateAtM} from '../geom/flat/interpolate.js';\nimport {intersectsLineStringArray} from '../geom/flat/intersectsextent.js';\nimport {douglasPeuckerArray} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {module:ol/geom/LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestArrayPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return inflateCoordinatesArray(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {module:ol/geom/LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<module:ol/geom/LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<module:ol/geom/LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = interpolatePoint(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = douglasPeuckerArray(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return intersectsLineStringArray(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<module:ol/geom/LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n","/**\n * @module ol/events/EventTarget\n */\nimport {inherits} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {UNDEFINED} from '../functions.js';\nimport Event from '../events/Event.js';\n\n\n/**\n * @typedef {EventTarget|module:ol/events/EventTarget} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * @see {@link https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget}\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n *\n * @constructor\n * @extends {module:ol/Disposable}\n */\nconst EventTarget = function() {\n\n  Disposable.call(this);\n\n  /**\n   * @private\n   * @type {!Object.<string, number>}\n   */\n  this.pendingRemovals_ = {};\n\n  /**\n   * @private\n   * @type {!Object.<string, number>}\n   */\n  this.dispatching_ = {};\n\n  /**\n   * @private\n   * @type {!Object.<string, Array.<module:ol/events~ListenerFunction>>}\n   */\n  this.listeners_ = {};\n\n};\n\ninherits(EventTarget, Disposable);\n\n\n/**\n * @param {string} type Type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n */\nEventTarget.prototype.addEventListener = function(type, listener) {\n  let listeners = this.listeners_[type];\n  if (!listeners) {\n    listeners = this.listeners_[type] = [];\n  }\n  if (listeners.indexOf(listener) === -1) {\n    listeners.push(listener);\n  }\n};\n\n\n/**\n * @param {{type: string,\n *     target: (EventTarget|module:ol/events/EventTarget|undefined)}|module:ol/events/Event|\n *     string} event Event or event type.\n * @return {boolean|undefined} `false` if anyone called preventDefault on the\n *     event object or if any of the listeners returned false.\n */\nEventTarget.prototype.dispatchEvent = function(event) {\n  const evt = typeof event === 'string' ? new Event(event) : event;\n  const type = evt.type;\n  evt.target = this;\n  const listeners = this.listeners_[type];\n  let propagate;\n  if (listeners) {\n    if (!(type in this.dispatching_)) {\n      this.dispatching_[type] = 0;\n      this.pendingRemovals_[type] = 0;\n    }\n    ++this.dispatching_[type];\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    --this.dispatching_[type];\n    if (this.dispatching_[type] === 0) {\n      let pendingRemovals = this.pendingRemovals_[type];\n      delete this.pendingRemovals_[type];\n      while (pendingRemovals--) {\n        this.removeEventListener(type, UNDEFINED);\n      }\n      delete this.dispatching_[type];\n    }\n    return propagate;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nEventTarget.prototype.disposeInternal = function() {\n  unlistenAll(this);\n};\n\n\n/**\n * Get the listeners for a specified event type. Listeners are returned in the\n * order that they will be called in.\n *\n * @param {string} type Type.\n * @return {Array.<module:ol/events~ListenerFunction>} Listeners.\n */\nEventTarget.prototype.getListeners = function(type) {\n  return this.listeners_[type];\n};\n\n\n/**\n * @param {string=} opt_type Type. If not provided,\n *     `true` will be returned if this EventTarget has any listeners.\n * @return {boolean} Has listeners.\n */\nEventTarget.prototype.hasListener = function(opt_type) {\n  return opt_type ?\n    opt_type in this.listeners_ :\n    Object.keys(this.listeners_).length > 0;\n};\n\n\n/**\n * @param {string} type Type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n */\nEventTarget.prototype.removeEventListener = function(type, listener) {\n  const listeners = this.listeners_[type];\n  if (listeners) {\n    const index = listeners.indexOf(listener);\n    if (type in this.pendingRemovals_) {\n      // make listener a no-op, and remove later in #dispatchEvent()\n      listeners[index] = UNDEFINED;\n      ++this.pendingRemovals_[type];\n    } else {\n      listeners.splice(index, 1);\n      if (listeners.length === 0) {\n        delete this.listeners_[type];\n      }\n    }\n  }\n};\nexport default EventTarget;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../util.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {module:ol/geom/Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (let j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return inflateCoordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {module:ol/geom/Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<module:ol/geom/Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<module:ol/geom/Point>} */\n  const points = [];\n  for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const x = flatCoordinates[i];\n    const y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {toSize, buffer as bufferSize, scale as scaleSize} from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\nimport {compareVersions} from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {Object.<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See http://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {boolean} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/ImageTile~TileClass} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~TileClass}.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used..\n * @property {module:ol/source/WMSServerType|string} [serverType]\n * The type of the remote WMS server. Currently only used when `hidpi` is\n * `true`.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array.<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {module:ol/source/TileImage}\n * @param {module:ol/source/TileWMS~Options=} [opt_options] Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {module:ol/source/WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {module:ol/source/WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/size~Size} tileSize Tile size.\n * @param {module:ol/extent~Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(tileCoordHash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n","/**\n * @module ol/style/Style\n */\n\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport {assert} from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from '../style/Circle.js';\nimport Fill from '../style/Fill.js';\nimport Stroke from '../style/Stroke.js';\n\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function((module:ol/Feature|module:ol/render/Feature), number):\n *     (module:ol/style/Style|Array.<module:ol/style/Style>)} StyleFunction\n */\n\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function((module:ol/Feature|module:ol/render/Feature)):\n *     (module:ol/geom/Geometry|module:ol/render/Feature|undefined)} GeometryFunction\n */\n\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((module:ol/coordinate~Coordinate|Array<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>),module:ol/render~State)}\n * RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {module:ol/style/Image} [image] Image style.\n * @property {module:ol/style/Style~RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/Text} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * @constructor\n * @struct\n * @param {module:ol/style/Style~Options=} opt_options Style options.\n * @api\n */\nconst Style = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction}\n   */\n  this.geometry_ = null;\n\n  /**\n   * @private\n   * @type {!module:ol/style/Style~GeometryFunction}\n   */\n  this.geometryFunction_ = defaultGeometryFunction;\n\n  if (options.geometry !== undefined) {\n    this.setGeometry(options.geometry);\n  }\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n     * @private\n     * @type {module:ol/style/Image}\n     */\n  this.image_ = options.image !== undefined ? options.image : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Style~RenderFunction|null}\n   */\n  this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Text}\n   */\n  this.text_ = options.text !== undefined ? options.text : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zIndex_ = options.zIndex;\n\n};\n\n\n/**\n * Clones the style.\n * @return {module:ol/style/Style} The cloned style.\n * @api\n */\nStyle.prototype.clone = function() {\n  let geometry = this.getGeometry();\n  if (geometry && geometry.clone) {\n    geometry = geometry.clone();\n  }\n  return new Style({\n    geometry: geometry,\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    image: this.getImage() ? this.getImage().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    text: this.getText() ? this.getText().clone() : undefined,\n    zIndex: this.getZIndex()\n  });\n};\n\n\n/**\n * Get the custom renderer function that was configured with\n * {@link #setRenderer} or the `renderer` constructor option.\n * @return {module:ol/style/Style~RenderFunction|null} Custom renderer function.\n * @api\n */\nStyle.prototype.getRenderer = function() {\n  return this.renderer_;\n};\n\n\n/**\n * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n * and `image` options of the style will be ignored.\n * @param {module:ol/style/Style~RenderFunction|null} renderer Custom renderer function.\n * @api\n */\nStyle.prototype.setRenderer = function(renderer) {\n  this.renderer_ = renderer;\n};\n\n\n/**\n * Get the geometry to be rendered.\n * @return {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction}\n * Feature property or geometry or function that returns the geometry that will\n * be rendered with this style.\n * @api\n */\nStyle.prototype.getGeometry = function() {\n  return this.geometry_;\n};\n\n\n/**\n * Get the function used to generate a geometry for rendering.\n * @return {!module:ol/style/Style~GeometryFunction} Function that is called with a feature\n * and returns the geometry to render instead of the feature's geometry.\n * @api\n */\nStyle.prototype.getGeometryFunction = function() {\n  return this.geometryFunction_;\n};\n\n\n/**\n * Get the fill style.\n * @return {module:ol/style/Fill} Fill style.\n * @api\n */\nStyle.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Set the fill style.\n * @param {module:ol/style/Fill} fill Fill style.\n * @api\n */\nStyle.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Get the image style.\n * @return {module:ol/style/Image} Image style.\n * @api\n */\nStyle.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Set the image style.\n * @param {module:ol/style/Image} image Image style.\n * @api\n */\nStyle.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Get the stroke style.\n * @return {module:ol/style/Stroke} Stroke style.\n * @api\n */\nStyle.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Set the stroke style.\n * @param {module:ol/style/Stroke} stroke Stroke style.\n * @api\n */\nStyle.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Get the text style.\n * @return {module:ol/style/Text} Text style.\n * @api\n */\nStyle.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Set the text style.\n * @param {module:ol/style/Text} text Text style.\n * @api\n */\nStyle.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Get the z-index for the style.\n * @return {number|undefined} ZIndex.\n * @api\n */\nStyle.prototype.getZIndex = function() {\n  return this.zIndex_;\n};\n\n\n/**\n * Set a geometry that is rendered instead of the feature's geometry.\n *\n * @param {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction} geometry\n *     Feature property or geometry or function returning a geometry to render\n *     for this style.\n * @api\n */\nStyle.prototype.setGeometry = function(geometry) {\n  if (typeof geometry === 'function') {\n    this.geometryFunction_ = geometry;\n  } else if (typeof geometry === 'string') {\n    this.geometryFunction_ = function(feature) {\n      return (\n        /** @type {module:ol/geom/Geometry} */ (feature.get(geometry))\n      );\n    };\n  } else if (!geometry) {\n    this.geometryFunction_ = defaultGeometryFunction;\n  } else if (geometry !== undefined) {\n    this.geometryFunction_ = function() {\n      return (\n        /** @type {module:ol/geom/Geometry} */ (geometry)\n      );\n    };\n  }\n  this.geometry_ = geometry;\n};\n\n\n/**\n * Set the z-index.\n *\n * @param {number|undefined} zIndex ZIndex.\n * @api\n */\nStyle.prototype.setZIndex = function(zIndex) {\n  this.zIndex_ = zIndex;\n};\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of module:ol/style/Style or single style objects wrapped in a\n * new style function.\n * @param {module:ol/style/Style~StyleFunction|Array.<module:ol/style/Style>|module:ol/style/Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {module:ol/style/Style~StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array.<module:ol/style/Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(obj instanceof Style,\n        41); // Expected an `module:ol/style/Style~Style` or an array of `module:ol/style/Style~Style`\n      styles = [obj];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n\n/**\n * @type {Array.<module:ol/style/Style>}\n */\nlet defaultStyles = null;\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/style/Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (module:ol/style/Circle~CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return defaultStyles;\n}\n\n\n/**\n * Default styles for editing features.\n * @return {Object.<module:ol/geom/GeometryType, Array.<module:ol/style/Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object.<module:ol/geom/GeometryType, Array.<module:ol/style/Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_POLYGON] =\n      styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] =\n      styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING]\n      );\n\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[GeometryType.MULTI_POINT] =\n      styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING],\n        styles[GeometryType.POINT]\n      );\n\n  return styles;\n}\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature to get the geometry for.\n * @return {module:ol/geom/Geometry|module:ol/render/Feature|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array.<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {module:ol/color~Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {module:ol/color~Color} Color.\n */\nexport const fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    const MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object.<string, module:ol/color~Color>}\n     */\n    const cache = {};\n\n    /**\n     * @type {number}\n     */\n    let cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {module:ol/color~Color} Color.\n       */\n      function(s) {\n        let color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            let i = 0;\n            for (const key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {module:ol/color~Color|string} color Color.\n * @return {module:ol/color~Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(/** @type {string} */ (color));\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {module:ol/color~Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return (\n    /** @type {module:ol/color~Color} */ (color)\n  );\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {module:ol/color~Color} color Color.\n * @return {module:ol/color~Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {module:ol/color~Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#render\n   * @api\n   */\n  RENDER: 'render'\n};\n","/**\n * @module ol/render/replay\n */\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * @const\n * @type {Array.<module:ol/render/ReplayType>}\n */\nexport const ORDER = [\n  ReplayType.POLYGON,\n  ReplayType.CIRCLE,\n  ReplayType.LINE_STRING,\n  ReplayType.IMAGE,\n  ReplayType.TEXT,\n  ReplayType.DEFAULT\n];\n\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../util.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from '../geom/flat/area.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {linearRingssContainsXY} from '../geom/flat/contains.js';\nimport {deflateMultiCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from '../geom/flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from '../geom/flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from '../geom/flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRingsArray} from '../geom/flat/orient.js';\nimport {quantizeMultiArray} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {module:ol/geom/Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestMultiArrayPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    orientLinearRingsArray(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return inflateMultiCoordinatesArray(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = linearRingssCenter(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n * @return {module:ol/geom/MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (linearRingsAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          orientLinearRingsArray(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = quantizeMultiArray(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {module:ol/geom/Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<module:ol/geom/Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return intersectsLinearRingMultiArray(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<module:ol/geom/Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/Geometry\n */\nimport {inherits} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {FALSE} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/Object}\n * @api\n */\nconst Geometry = function() {\n\n  BaseObject.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = createEmpty();\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.extentRevision_ = -1;\n\n  /**\n   * @protected\n   * @type {Object.<string, module:ol/geom/Geometry>}\n   */\n  this.simplifiedGeometryCache = {};\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.simplifiedGeometryRevision = 0;\n\n};\n\ninherits(Geometry, BaseObject);\n\n\n/**\n * @type {module:ol/transform~Transform}\n */\nconst tmpTransform = createTransform();\n\n\n/**\n * Make a complete copy of the geometry.\n * @abstract\n * @return {!module:ol/geom/Geometry} Clone.\n */\nGeometry.prototype.clone = function() {};\n\n\n/**\n * @abstract\n * @param {number} x X.\n * @param {number} y Y.\n * @param {module:ol/coordinate~Coordinate} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @return {number} Minimum squared distance.\n */\nGeometry.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {};\n\n\n/**\n * Return the closest point of the geometry to the passed point as\n * {@link module:ol/coordinate~Coordinate coordinate}.\n * @param {module:ol/coordinate~Coordinate} point Point.\n * @param {module:ol/coordinate~Coordinate=} opt_closestPoint Closest point.\n * @return {module:ol/coordinate~Coordinate} Closest point.\n * @api\n */\nGeometry.prototype.getClosestPoint = function(point, opt_closestPoint) {\n  const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n  this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n  return closestPoint;\n};\n\n\n/**\n * Returns true if this geometry includes the specified coordinate. If the\n * coordinate is on the boundary of the geometry, returns false.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {boolean} Contains coordinate.\n * @api\n */\nGeometry.prototype.intersectsCoordinate = function(coordinate) {\n  return this.containsXY(coordinate[0], coordinate[1]);\n};\n\n\n/**\n * @abstract\n * @param {module:ol/extent~Extent} extent Extent.\n * @protected\n * @return {module:ol/extent~Extent} extent Extent.\n */\nGeometry.prototype.computeExtent = function(extent) {};\n\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nGeometry.prototype.containsXY = FALSE;\n\n\n/**\n * Get the extent of the geometry.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} extent Extent.\n * @api\n */\nGeometry.prototype.getExtent = function(opt_extent) {\n  if (this.extentRevision_ != this.getRevision()) {\n    this.extent_ = this.computeExtent(this.extent_);\n    this.extentRevision_ = this.getRevision();\n  }\n  return returnOrUpdate(this.extent_, opt_extent);\n};\n\n\n/**\n * Rotate the geometry around a given coordinate. This modifies the geometry\n * coordinates in place.\n * @abstract\n * @param {number} angle Rotation angle in radians.\n * @param {module:ol/coordinate~Coordinate} anchor The rotation center.\n * @api\n */\nGeometry.prototype.rotate = function(angle, anchor) {};\n\n\n/**\n * Scale the geometry (with an optional origin).  This modifies the geometry\n * coordinates in place.\n * @abstract\n * @param {number} sx The scaling factor in the x-direction.\n * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n *     sx).\n * @param {module:ol/coordinate~Coordinate=} opt_anchor The scale origin (defaults to the center\n *     of the geometry extent).\n * @api\n */\nGeometry.prototype.scale = function(sx, opt_sy, opt_anchor) {};\n\n\n/**\n * Create a simplified version of this geometry.  For linestrings, this uses\n * the the {@link\n * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n * Douglas Peucker} algorithm.  For polygons, a quantization-based\n * simplification is used to preserve topology.\n * @function\n * @param {number} tolerance The tolerance distance for simplification.\n * @return {module:ol/geom/Geometry} A new, simplified version of the original\n *     geometry.\n * @api\n */\nGeometry.prototype.simplify = function(tolerance) {\n  return this.getSimplifiedGeometry(tolerance * tolerance);\n};\n\n\n/**\n * Create a simplified version of this geometry using the Douglas Peucker\n * algorithm.\n * @see https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n * @abstract\n * @param {number} squaredTolerance Squared tolerance.\n * @return {module:ol/geom/Geometry} Simplified geometry.\n */\nGeometry.prototype.getSimplifiedGeometry = function(squaredTolerance) {};\n\n\n/**\n * Get the type of this geometry.\n * @abstract\n * @return {module:ol/geom/GeometryType} Geometry type.\n */\nGeometry.prototype.getType = function() {};\n\n\n/**\n * Apply a transform function to each coordinate of the geometry.\n * The geometry is modified in place.\n * If you do not want the geometry modified in place, first `clone()` it and\n * then use this function on the clone.\n * @abstract\n * @param {module:ol/proj~TransformFunction} transformFn Transform.\n */\nGeometry.prototype.applyTransform = function(transformFn) {};\n\n\n/**\n * Test if the geometry and the passed extent intersect.\n * @abstract\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} `true` if the geometry and the extent intersect.\n */\nGeometry.prototype.intersectsExtent = function(extent) {};\n\n\n/**\n * Translate the geometry.  This modifies the geometry coordinates in place.  If\n * instead you want a new geometry, first `clone()` this geometry.\n * @abstract\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n */\nGeometry.prototype.translate = function(deltaX, deltaY) {};\n\n\n/**\n * Transform each coordinate of the geometry from one coordinate reference\n * system to another. The geometry is modified in place.\n * For example, a line will be transformed to a line and a circle to a circle.\n * If you do not want the geometry modified in place, first `clone()` it and\n * then use this function on the clone.\n *\n * @param {module:ol/proj~ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {module:ol/proj~ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {module:ol/geom/Geometry} This geometry.  Note that original geometry is\n *     modified in place.\n * @api\n */\nGeometry.prototype.transform = function(source, destination) {\n  source = getProjection(source);\n  const transformFn = source.getUnits() == Units.TILE_PIXELS ?\n    function(inCoordinates, outCoordinates, stride) {\n      const pixelExtent = source.getExtent();\n      const projectedExtent = source.getWorldExtent();\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(tmpTransform,\n        projectedExtent[0], projectedExtent[3],\n        scale, -scale, 0,\n        0, 0);\n      transform2D(inCoordinates, 0, inCoordinates.length, stride,\n        tmpTransform, outCoordinates);\n      return getTransform(source, destination)(inCoordinates, outCoordinates, stride);\n    } :\n    getTransform(source, destination);\n  this.applyTransform(transformFn);\n  return this;\n};\nexport default Geometry;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, function() {\n            const y = -tileCoord[2] - 1;\n            return y.toString();\n          })\n          .replace(dashYRegEx, function() {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() + tileCoord[2];\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array.<string>} templates Templates.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array.<module:ol/Tile~UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array.<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n","/**\n * @module ol/source/Stamen\n */\nimport {inherits} from '../util.js';\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from '../source/OSM.js';\nimport XYZ from '../source/XYZ.js';\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst ATTRIBUTIONS = [\n  'Map tiles by <a href=\"https://stamen.com/\">Stamen Design</a>, ' +\n        'under <a href=\"https://creativecommons.org/licenses/by/3.0/\">CC BY' +\n        ' 3.0</a>.',\n  OSM_ATTRIBUTION\n];\n\n\n/**\n * @type {Object.<string, {extension: string, opaque: boolean}>}\n */\nconst LayerConfig = {\n  'terrain': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-background': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'terrain-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-background': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner-hybrid': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lite': {\n    extension: 'png',\n    opaque: true\n  },\n  'watercolor': {\n    extension: 'jpg',\n    opaque: true\n  }\n};\n\n\n/**\n * @type {Object.<string, {minZoom: number, maxZoom: number}>}\n */\nconst ProviderConfig = {\n  'terrain': {\n    minZoom: 4,\n    maxZoom: 18\n  },\n  'toner': {\n    minZoom: 0,\n    maxZoom: 20\n  },\n  'watercolor': {\n    minZoom: 1,\n    maxZoom: 16\n  }\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=2048] Cache size.\n * @property {string} [layer] Layer.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {boolean} [opaque] Whether the layer is opaque.\n * @property {boolean} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n *\n * @constructor\n * @extends {module:ol/source/XYZ}\n * @param {module:ol/source/Stamen~Options=} options Stamen options.\n * @api\n */\nconst Stamen = function(options) {\n  const i = options.layer.indexOf('-');\n  const provider = i == -1 ? options.layer : options.layer.slice(0, i);\n  const providerConfig = ProviderConfig[provider];\n\n  const layerConfig = LayerConfig[options.layer];\n\n  const url = options.url !== undefined ? options.url :\n    'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' + options.layer +\n      '/{z}/{x}/{y}.' + layerConfig.extension;\n\n  XYZ.call(this, {\n    attributions: ATTRIBUTIONS,\n    cacheSize: options.cacheSize,\n    crossOrigin: 'anonymous',\n    maxZoom: options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n    minZoom: options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n    opaque: layerConfig.opaque,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n};\n\ninherits(Stamen, XYZ);\n\nexport default Stamen;\n","/**\n * @module ol/Overlay\n */\nimport {inherits} from './util.js';\nimport MapEventType from './MapEventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {removeNode, removeChildren, outerWidth, outerHeight} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {containsExtent} from './extent.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {Element} [element] The overlay element.\n * @property {Array.<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {module:ol/coordinate~Coordinate} [position] The overlay position\n * in map projection.\n * @property {module:ol/OverlayPositioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\n * calling `setPosition`, so that the overlay is entirely visible in the current\n * viewport.\n * @property {module:ol/Overlay~PanOptions} [autoPanAnimation] The\n * animation options used to pan the overlay into view. This animation is only\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\n * customize the animation.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning'\n};\n\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/Overlay~Options} options Overlay options.\n * @api\n */\nconst Overlay = function(options) {\n\n  BaseObject.call(this);\n\n  /**\n   * @protected\n   * @type {module:ol/Overlay~Options}\n   */\n  this.options = options;\n\n  /**\n   * @protected\n   * @type {number|string|undefined}\n   */\n  this.id = options.id;\n\n  /**\n   * @protected\n   * @type {boolean}\n   */\n  this.insertFirst = options.insertFirst !== undefined ?\n    options.insertFirst : true;\n\n  /**\n   * @protected\n   * @type {boolean}\n   */\n  this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n  /**\n   * @protected\n   * @type {Element}\n   */\n  this.element = document.createElement('DIV');\n  this.element.className = options.className !== undefined ?\n    options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\n  this.element.style.position = 'absolute';\n\n  /**\n   * @protected\n   * @type {boolean}\n   */\n  this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\n\n  /**\n   * @protected\n   * @type {module:ol/Overlay~PanOptions}\n   */\n  this.autoPanAnimation = options.autoPanAnimation || /** @type {module:ol/Overlay~PanOptions} */ ({});\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.autoPanMargin = options.autoPanMargin !== undefined ?\n    options.autoPanMargin : 20;\n\n  /**\n   * @protected\n   * @type {{bottom_: string,\n   *         left_: string,\n   *         right_: string,\n   *         top_: string,\n   *         visible: boolean}}\n   */\n  this.rendered = {\n    bottom_: '',\n    left_: '',\n    right_: '',\n    top_: '',\n    visible: true\n  };\n\n  /**\n   * @protected\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.mapPostrenderListenerKey = null;\n\n  listen(\n    this, getChangeEventType(Property.ELEMENT),\n    this.handleElementChanged, this);\n\n  listen(\n    this, getChangeEventType(Property.MAP),\n    this.handleMapChanged, this);\n\n  listen(\n    this, getChangeEventType(Property.OFFSET),\n    this.handleOffsetChanged, this);\n\n  listen(\n    this, getChangeEventType(Property.POSITION),\n    this.handlePositionChanged, this);\n\n  listen(\n    this, getChangeEventType(Property.POSITIONING),\n    this.handlePositioningChanged, this);\n\n  if (options.element !== undefined) {\n    this.setElement(options.element);\n  }\n\n  this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n  this.setPositioning(options.positioning !== undefined ?\n    /** @type {module:ol/OverlayPositioning} */ (options.positioning) :\n    OverlayPositioning.TOP_LEFT);\n\n  if (options.position !== undefined) {\n    this.setPosition(options.position);\n  }\n\n};\n\ninherits(Overlay, BaseObject);\n\n\n/**\n * Get the DOM element of this overlay.\n * @return {Element|undefined} The Element containing the overlay.\n * @observable\n * @api\n */\nOverlay.prototype.getElement = function() {\n  return /** @type {Element|undefined} */ (this.get(Property.ELEMENT));\n};\n\n\n/**\n * Get the overlay identifier which is set on constructor.\n * @return {number|string|undefined} Id.\n * @api\n */\nOverlay.prototype.getId = function() {\n  return this.id;\n};\n\n\n/**\n * Get the map associated with this overlay.\n * @return {module:ol/PluggableMap|undefined} The map that the\n * overlay is part of.\n * @observable\n * @api\n */\nOverlay.prototype.getMap = function() {\n  return (\n    /** @type {module:ol/PluggableMap|undefined} */ (this.get(Property.MAP))\n  );\n};\n\n\n/**\n * Get the offset of this overlay.\n * @return {Array.<number>} The offset.\n * @observable\n * @api\n */\nOverlay.prototype.getOffset = function() {\n  return /** @type {Array.<number>} */ (this.get(Property.OFFSET));\n};\n\n\n/**\n * Get the current position of this overlay.\n * @return {module:ol/coordinate~Coordinate|undefined} The spatial point that the overlay is\n *     anchored at.\n * @observable\n * @api\n */\nOverlay.prototype.getPosition = function() {\n  return (\n    /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(Property.POSITION))\n  );\n};\n\n\n/**\n * Get the current positioning of this overlay.\n * @return {module:ol/OverlayPositioning} How the overlay is positioned\n *     relative to its point on the map.\n * @observable\n * @api\n */\nOverlay.prototype.getPositioning = function() {\n  return (\n    /** @type {module:ol/OverlayPositioning} */ (this.get(Property.POSITIONING))\n  );\n};\n\n\n/**\n * @protected\n */\nOverlay.prototype.handleElementChanged = function() {\n  removeChildren(this.element);\n  const element = this.getElement();\n  if (element) {\n    this.element.appendChild(element);\n  }\n};\n\n\n/**\n * @protected\n */\nOverlay.prototype.handleMapChanged = function() {\n  if (this.mapPostrenderListenerKey) {\n    removeNode(this.element);\n    unlistenByKey(this.mapPostrenderListenerKey);\n    this.mapPostrenderListenerKey = null;\n  }\n  const map = this.getMap();\n  if (map) {\n    this.mapPostrenderListenerKey = listen(map,\n      MapEventType.POSTRENDER, this.render, this);\n    this.updatePixelPosition();\n    const container = this.stopEvent ?\n      map.getOverlayContainerStopEvent() : map.getOverlayContainer();\n    if (this.insertFirst) {\n      container.insertBefore(this.element, container.childNodes[0] || null);\n    } else {\n      container.appendChild(this.element);\n    }\n  }\n};\n\n\n/**\n * @protected\n */\nOverlay.prototype.render = function() {\n  this.updatePixelPosition();\n};\n\n\n/**\n * @protected\n */\nOverlay.prototype.handleOffsetChanged = function() {\n  this.updatePixelPosition();\n};\n\n\n/**\n * @protected\n */\nOverlay.prototype.handlePositionChanged = function() {\n  this.updatePixelPosition();\n  if (this.get(Property.POSITION) && this.autoPan) {\n    this.panIntoView();\n  }\n};\n\n\n/**\n * @protected\n */\nOverlay.prototype.handlePositioningChanged = function() {\n  this.updatePixelPosition();\n};\n\n\n/**\n * Set the DOM element to be associated with this overlay.\n * @param {Element|undefined} element The Element containing the overlay.\n * @observable\n * @api\n */\nOverlay.prototype.setElement = function(element) {\n  this.set(Property.ELEMENT, element);\n};\n\n\n/**\n * Set the map to be associated with this overlay.\n * @param {module:ol/PluggableMap|undefined} map The map that the\n * overlay is part of.\n * @observable\n * @api\n */\nOverlay.prototype.setMap = function(map) {\n  this.set(Property.MAP, map);\n};\n\n\n/**\n * Set the offset for this overlay.\n * @param {Array.<number>} offset Offset.\n * @observable\n * @api\n */\nOverlay.prototype.setOffset = function(offset) {\n  this.set(Property.OFFSET, offset);\n};\n\n\n/**\n * Set the position for this overlay. If the position is `undefined` the\n * overlay is hidden.\n * @param {module:ol/coordinate~Coordinate|undefined} position The spatial point that the overlay\n *     is anchored at.\n * @observable\n * @api\n */\nOverlay.prototype.setPosition = function(position) {\n  this.set(Property.POSITION, position);\n};\n\n\n/**\n * Pan the map so that the overlay is entirely visible in the current viewport\n * (if necessary).\n * @protected\n */\nOverlay.prototype.panIntoView = function() {\n  const map = this.getMap();\n\n  if (!map || !map.getTargetElement()) {\n    return;\n  }\n\n  const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n  const element = /** @type {!Element} */ (this.getElement());\n  const overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\n\n  const margin = this.autoPanMargin;\n  if (!containsExtent(mapRect, overlayRect)) {\n    // the overlay is not completely inside the viewport, so pan the map\n    const offsetLeft = overlayRect[0] - mapRect[0];\n    const offsetRight = mapRect[2] - overlayRect[2];\n    const offsetTop = overlayRect[1] - mapRect[1];\n    const offsetBottom = mapRect[3] - overlayRect[3];\n\n    const delta = [0, 0];\n    if (offsetLeft < 0) {\n      // move map to the left\n      delta[0] = offsetLeft - margin;\n    } else if (offsetRight < 0) {\n      // move map to the right\n      delta[0] = Math.abs(offsetRight) + margin;\n    }\n    if (offsetTop < 0) {\n      // move map up\n      delta[1] = offsetTop - margin;\n    } else if (offsetBottom < 0) {\n      // move map down\n      delta[1] = Math.abs(offsetBottom) + margin;\n    }\n\n    if (delta[0] !== 0 || delta[1] !== 0) {\n      const center = /** @type {module:ol/coordinate~Coordinate} */ (map.getView().getCenter());\n      const centerPx = map.getPixelFromCoordinate(center);\n      const newCenterPx = [\n        centerPx[0] + delta[0],\n        centerPx[1] + delta[1]\n      ];\n\n      map.getView().animate({\n        center: map.getCoordinateFromPixel(newCenterPx),\n        duration: this.autoPanAnimation.duration,\n        easing: this.autoPanAnimation.easing\n      });\n    }\n  }\n};\n\n\n/**\n * Get the extent of an element relative to the document\n * @param {Element|undefined} element The element.\n * @param {module:ol/size~Size|undefined} size The size of the element.\n * @return {module:ol/extent~Extent} The extent.\n * @protected\n */\nOverlay.prototype.getRect = function(element, size) {\n  const box = element.getBoundingClientRect();\n  const offsetX = box.left + window.pageXOffset;\n  const offsetY = box.top + window.pageYOffset;\n  return [\n    offsetX,\n    offsetY,\n    offsetX + size[0],\n    offsetY + size[1]\n  ];\n};\n\n\n/**\n * Set the positioning for this overlay.\n * @param {module:ol/OverlayPositioning} positioning how the overlay is\n *     positioned relative to its point on the map.\n * @observable\n * @api\n */\nOverlay.prototype.setPositioning = function(positioning) {\n  this.set(Property.POSITIONING, positioning);\n};\n\n\n/**\n * Modify the visibility of the element.\n * @param {boolean} visible Element visibility.\n * @protected\n */\nOverlay.prototype.setVisible = function(visible) {\n  if (this.rendered.visible !== visible) {\n    this.element.style.display = visible ? '' : 'none';\n    this.rendered.visible = visible;\n  }\n};\n\n\n/**\n * Update pixel position.\n * @protected\n */\nOverlay.prototype.updatePixelPosition = function() {\n  const map = this.getMap();\n  const position = this.getPosition();\n  if (!map || !map.isRendered() || !position) {\n    this.setVisible(false);\n    return;\n  }\n\n  const pixel = map.getPixelFromCoordinate(position);\n  const mapSize = map.getSize();\n  this.updateRenderedPosition(pixel, mapSize);\n};\n\n\n/**\n * @param {module:ol~Pixel} pixel The pixel location.\n * @param {module:ol/size~Size|undefined} mapSize The map size.\n * @protected\n */\nOverlay.prototype.updateRenderedPosition = function(pixel, mapSize) {\n  const style = this.element.style;\n  const offset = this.getOffset();\n\n  const positioning = this.getPositioning();\n\n  this.setVisible(true);\n\n  let offsetX = offset[0];\n  let offsetY = offset[1];\n  if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n      positioning == OverlayPositioning.CENTER_RIGHT ||\n      positioning == OverlayPositioning.TOP_RIGHT) {\n    if (this.rendered.left_ !== '') {\n      this.rendered.left_ = style.left = '';\n    }\n    const right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\n    if (this.rendered.right_ != right) {\n      this.rendered.right_ = style.right = right;\n    }\n  } else {\n    if (this.rendered.right_ !== '') {\n      this.rendered.right_ = style.right = '';\n    }\n    if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n        positioning == OverlayPositioning.CENTER_CENTER ||\n        positioning == OverlayPositioning.TOP_CENTER) {\n      offsetX -= this.element.offsetWidth / 2;\n    }\n    const left = Math.round(pixel[0] + offsetX) + 'px';\n    if (this.rendered.left_ != left) {\n      this.rendered.left_ = style.left = left;\n    }\n  }\n  if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.BOTTOM_RIGHT) {\n    if (this.rendered.top_ !== '') {\n      this.rendered.top_ = style.top = '';\n    }\n    const bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\n    if (this.rendered.bottom_ != bottom) {\n      this.rendered.bottom_ = style.bottom = bottom;\n    }\n  } else {\n    if (this.rendered.bottom_ !== '') {\n      this.rendered.bottom_ = style.bottom = '';\n    }\n    if (positioning == OverlayPositioning.CENTER_LEFT ||\n        positioning == OverlayPositioning.CENTER_CENTER ||\n        positioning == OverlayPositioning.CENTER_RIGHT) {\n      offsetY -= this.element.offsetHeight / 2;\n    }\n    const top = Math.round(pixel[1] + offsetY) + 'px';\n    if (this.rendered.top_ != top) {\n      this.rendered.top_ = style.top = top;\n    }\n  }\n};\n\n\n/**\n * returns the options this Overlay has been created with\n * @return {module:ol/Overlay~Options} overlay options\n */\nOverlay.prototype.getOptions = function() {\n  return this.options;\n};\n\nexport default Overlay;\n","/**\n * @module ol/style/Stroke\n */\nimport {getUid} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/color~Color|module:ol/colorlike~ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array.<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n *\n * @constructor\n * @param {module:ol/style/Stroke~Options=} opt_options Options.\n * @api\n */\nconst Stroke = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {module:ol/color~Color|module:ol/colorlike~ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineCap_ = options.lineCap;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lineDashOffset_ = options.lineDashOffset;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineJoin_ = options.lineJoin;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.miterLimit_ = options.miterLimit;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = options.width;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Clones the style.\n * @return {module:ol/style/Stroke} The cloned style.\n * @api\n */\nStroke.prototype.clone = function() {\n  const color = this.getColor();\n  return new Stroke({\n    color: (color && color.slice) ? color.slice() : color || undefined,\n    lineCap: this.getLineCap(),\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n    lineDashOffset: this.getLineDashOffset(),\n    lineJoin: this.getLineJoin(),\n    miterLimit: this.getMiterLimit(),\n    width: this.getWidth()\n  });\n};\n\n\n/**\n * Get the stroke color.\n * @return {module:ol/color~Color|module:ol/colorlike~ColorLike} Color.\n * @api\n */\nStroke.prototype.getColor = function() {\n  return this.color_;\n};\n\n\n/**\n * Get the line cap type for the stroke.\n * @return {string|undefined} Line cap.\n * @api\n */\nStroke.prototype.getLineCap = function() {\n  return this.lineCap_;\n};\n\n\n/**\n * Get the line dash style for the stroke.\n * @return {Array.<number>} Line dash.\n * @api\n */\nStroke.prototype.getLineDash = function() {\n  return this.lineDash_;\n};\n\n\n/**\n * Get the line dash offset for the stroke.\n * @return {number|undefined} Line dash offset.\n * @api\n */\nStroke.prototype.getLineDashOffset = function() {\n  return this.lineDashOffset_;\n};\n\n\n/**\n * Get the line join type for the stroke.\n * @return {string|undefined} Line join.\n * @api\n */\nStroke.prototype.getLineJoin = function() {\n  return this.lineJoin_;\n};\n\n\n/**\n * Get the miter limit for the stroke.\n * @return {number|undefined} Miter limit.\n * @api\n */\nStroke.prototype.getMiterLimit = function() {\n  return this.miterLimit_;\n};\n\n\n/**\n * Get the stroke width.\n * @return {number|undefined} Width.\n * @api\n */\nStroke.prototype.getWidth = function() {\n  return this.width_;\n};\n\n\n/**\n * Set the color.\n *\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @api\n */\nStroke.prototype.setColor = function(color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line cap.\n *\n * @param {string|undefined} lineCap Line cap.\n * @api\n */\nStroke.prototype.setLineCap = function(lineCap) {\n  this.lineCap_ = lineCap;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line dash.\n *\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n * property will have no visual effect in these browsers.\n *\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n *\n * @param {Array.<number>} lineDash Line dash.\n * @api\n */\nStroke.prototype.setLineDash = function(lineDash) {\n  this.lineDash_ = lineDash;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line dash offset.\n *\n * @param {number|undefined} lineDashOffset Line dash offset.\n * @api\n */\nStroke.prototype.setLineDashOffset = function(lineDashOffset) {\n  this.lineDashOffset_ = lineDashOffset;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line join.\n *\n * @param {string|undefined} lineJoin Line join.\n * @api\n */\nStroke.prototype.setLineJoin = function(lineJoin) {\n  this.lineJoin_ = lineJoin;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the miter limit.\n *\n * @param {number|undefined} miterLimit Miter limit.\n * @api\n */\nStroke.prototype.setMiterLimit = function(miterLimit) {\n  this.miterLimit_ = miterLimit;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the width.\n *\n * @param {number|undefined} width Width.\n * @api\n */\nStroke.prototype.setWidth = function(width) {\n  this.width_ = width;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * @return {string} The checksum.\n */\nStroke.prototype.getChecksum = function() {\n  if (this.checksum_ === undefined) {\n    this.checksum_ = 's';\n    if (this.color_) {\n      if (typeof this.color_ === 'string') {\n        this.checksum_ += this.color_;\n      } else {\n        this.checksum_ += getUid(this.color_).toString();\n      }\n    } else {\n      this.checksum_ += '-';\n    }\n    this.checksum_ += ',' +\n        (this.lineCap_ !== undefined ?\n          this.lineCap_.toString() : '-') + ',' +\n        (this.lineDash_ ?\n          this.lineDash_.toString() : '-') + ',' +\n        (this.lineDashOffset_ !== undefined ?\n          this.lineDashOffset_ : '-') + ',' +\n        (this.lineJoin_ !== undefined ?\n          this.lineJoin_ : '-') + ',' +\n        (this.miterLimit_ !== undefined ?\n          this.miterLimit_.toString() : '-') + ',' +\n        (this.width_ !== undefined ?\n          this.width_.toString() : '-');\n  }\n\n  return this.checksum_;\n};\nexport default Stroke;\n","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array.<number>=} opt_ends Ends.\n * @return {Array.<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array.<Array.<number>>=} opt_endss Endss.\n * @return {Array.<Array.<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array.<module:ol/coordinate~Coordinate>=} opt_coordinates Coordinates.\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  const coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport {inherits} from './util.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\n/**\n * @constructor\n * @extends {module:ol/MapBrowserEvent}\n * @param {string} type Event type.\n * @param {module:ol/PluggableMap} map Map.\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @param {boolean=} opt_dragging Is the map currently being dragged?\n * @param {?module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n */\nconst MapBrowserPointerEvent = function(type, map, pointerEvent, opt_dragging,\n  opt_frameState) {\n\n  MapBrowserEvent.call(this, type, map, pointerEvent.originalEvent, opt_dragging,\n    opt_frameState);\n\n  /**\n   * @const\n   * @type {module:ol/pointer/PointerEvent}\n   */\n  this.pointerEvent = pointerEvent;\n\n};\n\ninherits(MapBrowserPointerEvent, MapBrowserEvent);\nexport default MapBrowserPointerEvent;\n","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from '../flat/reverse.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    const reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../util.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport {isDocument, isNode, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/format/Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (isDocument(source)) {\n    return this.readFeatureFromDocument(/** @type {Document} */ (source), opt_options);\n  } else if (isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n * @return {module:ol/Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n * @return {module:ol/Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<module:ol/Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(doc, opt_options) {\n  /** @type {Array.<module:ol/Feature>} */\n  const features = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<module:ol/Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n * @protected\n * @return {module:ol/geom/Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n * @protected\n * @return {module:ol/geom/Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {module:ol/proj/Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.dataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {module:ol/proj/Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.dataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object.<module:ol/geom/GeometryType,\n *                function(module:ol/render/ReplayGroup, module:ol/geom/Geometry,\n *                         module:ol/style/Style, Object)>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature1 Feature 1.\n * @param {module:ol/Feature|module:ol/render/Feature} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return getUid(feature1) - getUid(feature2);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Circle} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n\n  return loading;\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom(/** @type {module:ol/geom/SimpleGeometry} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/LineString|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Point|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n","/**\n * @module ol/layer/Image\n */\nimport {inherits} from '../util.js';\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {module:ol/source/Image} [source] Source for this layer.\n */\n\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @constructor\n * @extends {module:ol/layer/Layer}\n * @fires module:ol/render/Event~RenderEvent\n * @param {module:ol/layer/Image~Options=} opt_options Layer options.\n * @api\n */\nconst ImageLayer = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n  Layer.call(this,  /** @type {module:ol/layer/Layer~Options} */ (options));\n\n  /**\n   * The layer type.\n   * @protected\n   * @type {module:ol/LayerType}\n   */\n  this.type = LayerType.IMAGE;\n\n};\n\ninherits(ImageLayer, Layer);\n\n\n/**\n * Return the associated {@link module:ol/source/Image source} of the image layer.\n * @function\n * @return {module:ol/source/Image} Source.\n * @api\n */\nImageLayer.prototype.getSource;\nexport default ImageLayer;\n","/**\n * @module ol/source/WMTSRequestEncoding\n */\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nexport default {\n  KVP: 'KVP',  // see spec §8\n  REST: 'REST' // see spec §10\n};\n","/**\n * @module ol/source/WMTS\n */\nimport {inherits} from '../util.js';\nimport {expandUrl, createFromTileUrlFunctions, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {find, findIndex, includes} from '../array.js';\nimport {containsExtent} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, equivalent, transformExtent} from '../proj.js';\nimport TileImage from '../source/TileImage.js';\nimport WMTSRequestEncoding from '../source/WMTSRequestEncoding.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {module:ol/tilegrid/WMTS} tileGrid Tile grid.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {boolean} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/source/WMTSRequestEncoding|string} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {module:ol/ImageTile~TileClass} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [version='image/jpeg'] Image format.\n * @property {string} [format='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array.<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n *\n * @constructor\n * @extends {module:ol/source/TileImage}\n * @param {module:ol/source/WMTS~Options=} options WMTS options.\n * @api\n */\nconst WMTS = function(options) {\n\n  // TODO: add support for TileMatrixLimits\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.dimensions_ = options.dimensions !== undefined ? options.dimensions : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.layer_ = options.layer;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.matrixSet_ = options.matrixSet;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.style_ = options.style;\n\n  let urls = options.urls;\n  if (urls === undefined && options.url !== undefined) {\n    urls = expandUrl(options.url);\n  }\n\n  // FIXME: should we guess this requestEncoding from options.url(s)\n  //        structure? that would mean KVP only if a template is not provided.\n\n  /**\n   * @private\n   * @type {module:ol/source/WMTSRequestEncoding}\n   */\n  this.requestEncoding_ = options.requestEncoding !== undefined ?\n    /** @type {module:ol/source/WMTSRequestEncoding} */ (options.requestEncoding) :\n    WMTSRequestEncoding.KVP;\n\n  const requestEncoding = this.requestEncoding_;\n\n  // FIXME: should we create a default tileGrid?\n  // we could issue a getCapabilities xhr to retrieve missing configuration\n  const tileGrid = options.tileGrid;\n\n  // context property names are lower case to allow for a case insensitive\n  // replacement as some services use different naming conventions\n  const context = {\n    'layer': this.layer_,\n    'style': this.style_,\n    'tilematrixset': this.matrixSet_\n  };\n\n  if (requestEncoding == WMTSRequestEncoding.KVP) {\n    assign(context, {\n      'Service': 'WMTS',\n      'Request': 'GetTile',\n      'Version': this.version_,\n      'Format': this.format_\n    });\n  }\n\n  const dimensions = this.dimensions_;\n\n  /**\n   * @param {string} template Template.\n   * @return {module:ol/Tile~UrlFunction} Tile URL function.\n   * @private\n   */\n  this.createFromWMTSTemplate_ = function(template) {\n\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n\n    template = (requestEncoding == WMTSRequestEncoding.KVP) ?\n      appendParams(template, context) :\n      template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n        return (p.toLowerCase() in context) ? context[p.toLowerCase()] : m;\n      });\n\n    return (\n      /**\n       * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {module:ol/proj/Projection} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function(tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        } else {\n          const localContext = {\n            'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n            'TileCol': tileCoord[1],\n            'TileRow': -tileCoord[2] - 1\n          };\n          assign(localContext, dimensions);\n          let url = template;\n          if (requestEncoding == WMTSRequestEncoding.KVP) {\n            url = appendParams(url, localContext);\n          } else {\n            url = url.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n              return localContext[p];\n            });\n          }\n          return url;\n        }\n      }\n    );\n  };\n\n  const tileUrlFunction = (urls && urls.length > 0) ?\n    createFromTileUrlFunctions(urls.map(this.createFromWMTSTemplate_)) : nullTileUrlFunction;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: tileUrlFunction,\n    urls: urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : false,\n    transition: options.transition\n  });\n\n  this.setKey(this.getKeyForDimensions_());\n\n};\n\ninherits(WMTS, TileImage);\n\n/**\n * Set the URLs to use for requests.\n * URLs may contain OCG conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n * @override\n */\nWMTS.prototype.setUrls = function(urls) {\n  this.urls = urls;\n  const key = urls.join('\\n');\n  this.setTileUrlFunction(this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) :\n    createFromTileUrlFunctions(urls.map(this.createFromWMTSTemplate_.bind(this))), key);\n};\n\n/**\n * Get the dimensions, i.e. those passed to the constructor through the\n * \"dimensions\" option, and possibly updated using the updateDimensions\n * method.\n * @return {!Object} Dimensions.\n * @api\n */\nWMTS.prototype.getDimensions = function() {\n  return this.dimensions_;\n};\n\n\n/**\n * Return the image format of the WMTS source.\n * @return {string} Format.\n * @api\n */\nWMTS.prototype.getFormat = function() {\n  return this.format_;\n};\n\n\n/**\n * Return the layer of the WMTS source.\n * @return {string} Layer.\n * @api\n */\nWMTS.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * Return the matrix set of the WMTS source.\n * @return {string} MatrixSet.\n * @api\n */\nWMTS.prototype.getMatrixSet = function() {\n  return this.matrixSet_;\n};\n\n\n/**\n * Return the request encoding, either \"KVP\" or \"REST\".\n * @return {module:ol/source/WMTSRequestEncoding} Request encoding.\n * @api\n */\nWMTS.prototype.getRequestEncoding = function() {\n  return this.requestEncoding_;\n};\n\n\n/**\n * Return the style of the WMTS source.\n * @return {string} Style.\n * @api\n */\nWMTS.prototype.getStyle = function() {\n  return this.style_;\n};\n\n\n/**\n * Return the version of the WMTS source.\n * @return {string} Version.\n * @api\n */\nWMTS.prototype.getVersion = function() {\n  return this.version_;\n};\n\n\n/**\n * @private\n * @return {string} The key for the current dimensions.\n */\nWMTS.prototype.getKeyForDimensions_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.dimensions_) {\n    res[i++] = key + '-' + this.dimensions_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * Update the dimensions.\n * @param {Object} dimensions Dimensions.\n * @api\n */\nWMTS.prototype.updateDimensions = function(dimensions) {\n  assign(this.dimensions_, dimensions);\n  this.setKey(this.getKeyForDimensions_());\n};\n\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {?module:ol/source/WMTS~Options} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = find(layers, function(elt, index, array) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (l === null) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          const tileMatrixSet = find(tileMatrixSets, function(el) {\n            return el['Identifier'] == elt['TileMatrixSet'];\n          });\n          const supportedCRS = tileMatrixSet['SupportedCRS'];\n          const proj1 = getProjection(supportedCRS.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n                getProjection(supportedCRS);\n          const proj2 = getProjection(config['projection']);\n          if (proj1 && proj2) {\n            return equivalent(proj1, proj2);\n          } else {\n            return supportedCRS == config['projection'];\n          }\n        });\n    } else {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          return elt['TileMatrixSet'] == config['matrixSet'];\n        });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet = /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits = /** @type {Array.<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = findIndex(l['Style'], function(elt, index, array) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    } else {\n      return elt['isDefault'];\n    }\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function(elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = find(matrixSets, function(elt, index, array) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n        getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  const wgs84BoundingBox = l['WGS84BoundingBox'];\n  let extent, wrapX;\n  if (wgs84BoundingBox !== undefined) {\n    const wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    wrapX = (wgs84BoundingBox[0] == wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] == wgs84ProjectionExtent[2]);\n    extent = transformExtent(\n      wgs84BoundingBox, 'EPSG:4326', projection);\n    const projectionExtent = projection.getExtent();\n    if (projectionExtent) {\n      // If possible, do a sanity check on the extent - it should never be\n      // bigger than the validity extent of the projection of a matrix set.\n      if (!containsExtent(projectionExtent, extent)) {\n        extent = undefined;\n      }\n    }\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(matrixSetObj, extent, matrixLimits);\n\n  /** @type {!Array.<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if ('OperationsMetadata' in wmtsCap && 'GetTile' in wmtsCap['OperationsMetadata']) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = find(gets[i]['Constraint'], function(element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === WMTSRequestEncoding.KVP) {\n          if (includes(encodings, WMTSRequestEncoding.KVP)) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = WMTSRequestEncoding.KVP;\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = WMTSRequestEncoding.REST;\n    l['ResourceURL'].forEach(function(element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin']\n  };\n}\n\nexport default WMTS;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @return {module:ol/colorlike~ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (isColorLike(color)) {\n    return /** @type {string|CanvasPattern|CanvasGradient} */ (color);\n  } else {\n    return toString(/** @type {module:ol/color~Color} */ (color));\n  }\n}\n\n\n/**\n * @param {?} color The value that is potentially an {@link ol/colorlike~ColorLike}.\n * @return {boolean} The color is an {@link ol/colorlike~ColorLike}.\n */\nexport function isColorLike(color) {\n  return (\n    typeof color === 'string' ||\n    color instanceof CanvasPattern ||\n    color instanceof CanvasGradient\n  );\n}\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  FRACTION: 'fraction',\n  PIXELS: 'pixels'\n};\n","/**\n * @module ol/interaction/Draw\n */\nimport {inherits} from '../util.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {getChangeEventType} from '../Object.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {noModifierKeys, always, shiftKeyOnly} from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport {POINTER_TYPE} from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/geom/GeometryType} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * Destination collection for the drawn features.\n * @property {module:ol/source/Vector} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {module:ol/events/condition~Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style for sketch features.\n * @property {module:ol/interaction/Draw~GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {module:ol/events/condition~Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry as\n * arguments, and returns a geometry. The optional existing geometry is the\n * geometry that is returned when the function is called without a second\n * argument.\n * @typedef {function(!Array.<module:ol/coordinate~Coordinate>, module:ol/geom/SimpleGeometry=):\n *     module:ol/geom/SimpleGeometry} GeometryFunction\n */\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nconst Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event module:ol/interaction/Draw~DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event module:ol/interaction/Draw~DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/interaction/Draw~DrawEventType} type Type.\n * @param {module:ol/Feature} feature The feature drawn.\n */\nconst DrawEvent = function(type, feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being drawn.\n   * @type {module:ol/Feature}\n   * @api\n   */\n  this.feature = feature;\n\n};\n\ninherits(DrawEvent, Event);\n\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @fires module:ol/interaction/Draw~DrawEvent\n * @param {module:ol/interaction/Draw~Options} options Options.\n * @api\n */\nconst Draw = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleEvent: handleEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandle_ = false;\n\n  /**\n   * @type {module:ol~Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.downTimeout_;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.lastDragTime_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.freehand_ = false;\n\n  /**\n   * Target source for drawn features.\n   * @type {module:ol/source/Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * Target collection for drawn features.\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * Pixel distance for snapping.\n   * @type {number}\n   * @private\n   */\n  this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n  /**\n   * Geometry type.\n   * @type {module:ol/geom/GeometryType}\n   * @private\n   */\n  this.type_ = /** @type {module:ol/geom/GeometryType} */ (options.type);\n\n  /**\n   * Drawing mode (derived from geometry type.\n   * @type {module:ol/interaction/Draw~Mode}\n   * @private\n   */\n  this.mode_ = getMode(this.type_);\n\n  /**\n   * Stop click, singleclick, and doubleclick events from firing during drawing.\n   * Default is `false`.\n   * @type {boolean}\n   * @private\n   */\n  this.stopClick_ = !!options.stopClick;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.mode_ === Mode.POLYGON ? 3 : 2);\n\n  /**\n   * The number of points that can be drawn before a polygon ring or line string\n   * is finished. The default is no restriction.\n   * @type {number}\n   * @private\n   */\n  this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n  /**\n   * A function to decide if a potential finish coordinate is permissible\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n  let geometryFunction = options.geometryFunction;\n  if (!geometryFunction) {\n    if (this.type_ === GeometryType.CIRCLE) {\n      /**\n       * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates\n       *     The coordinates.\n       * @param {module:ol/geom/SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {module:ol/geom/SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        const circle = opt_geometry ? /** @type {module:ol/geom/Circle} */ (opt_geometry) :\n          new Circle([NaN, NaN]);\n        const squaredLength = squaredCoordinateDistance(\n          coordinates[0], coordinates[1]);\n        circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n        return circle;\n      };\n    } else {\n      let Constructor;\n      const mode = this.mode_;\n      if (mode === Mode.POINT) {\n        Constructor = Point;\n      } else if (mode === Mode.LINE_STRING) {\n        Constructor = LineString;\n      } else if (mode === Mode.POLYGON) {\n        Constructor = Polygon;\n      }\n      /**\n       * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates\n       *     The coordinates.\n       * @param {module:ol/geom/SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {module:ol/geom/SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        let geometry = opt_geometry;\n        if (geometry) {\n          if (mode === Mode.POLYGON) {\n            if (coordinates[0].length) {\n              // Add a closing coordinate to match the first\n              geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            } else {\n              geometry.setCoordinates([]);\n            }\n          } else {\n            geometry.setCoordinates(coordinates);\n          }\n        } else {\n          geometry = new Constructor(coordinates);\n        }\n        return geometry;\n      };\n    }\n  }\n\n  /**\n   * @type {module:ol/interaction/Draw~GeometryFunction}\n   * @private\n   */\n  this.geometryFunction_ = geometryFunction;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n  /**\n   * Finish coordinate for the feature (first point for polygons, last point for\n   * linestrings).\n   * @type {module:ol/coordinate~Coordinate}\n   * @private\n   */\n  this.finishCoordinate_ = null;\n\n  /**\n   * Sketch feature.\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Sketch coordinates. Used when drawing a line or polygon.\n   * @type {module:ol/coordinate~Coordinate|Array.<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>}\n   * @private\n   */\n  this.sketchCoords_ = null;\n\n  /**\n   * Sketch line. Used when drawing polygon.\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.sketchLine_ = null;\n\n  /**\n   * Sketch line coordinates. Used when drawing a polygon or circle.\n   * @type {Array.<module:ol/coordinate~Coordinate>}\n   * @private\n   */\n  this.sketchLineCoords_ = null;\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = options.clickTolerance ?\n    options.clickTolerance * options.clickTolerance : 36;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {module:ol/layer/Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      getDefaultStyleFunction(),\n    updateWhileInteracting: true\n  });\n\n  /**\n   * Name of the geometry attribute for newly created features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.freehandCondition_;\n  if (options.freehand) {\n    this.freehandCondition_ = always;\n  } else {\n    this.freehandCondition_ = options.freehandCondition ?\n      options.freehandCondition : shiftKeyOnly;\n  }\n\n  listen(this,\n    getChangeEventType(InteractionProperty.ACTIVE),\n    this.updateState_, this);\n\n};\n\ninherits(Draw, PointerInteraction);\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.setMap = function(map) {\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {module:ol/MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Draw}\n * @api\n */\nexport function handleEvent(event) {\n  if (event.originalEvent.type === EventType.CONTEXTMENU) {\n    // Avoid context menu for long taps when drawing on mobile\n    event.preventDefault();\n  }\n  this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n  let move = event.type === MapBrowserEventType.POINTERMOVE;\n  let pass = true;\n  if (this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n    const now = Date.now();\n    if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n      this.downPx_ = event.pixel;\n      this.shouldHandle_ = !this.freehand_;\n      move = true;\n    } else {\n      this.lastDragTime_ = undefined;\n    }\n    if (this.shouldHandle_ && this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n  }\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (move) {\n    pass = event.type === MapBrowserEventType.POINTERMOVE;\n    if (pass && this.freehand_) {\n      pass = this.handlePointerMove_(event);\n    } else if (event.pointerEvent.pointerType == POINTER_TYPE ||\n        (event.type === MapBrowserEventType.POINTERDRAG && !this.downTimeout_)) {\n      this.handlePointerMove_(event);\n    }\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n\n  return handlePointerEvent.call(this, event) && pass;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Draw}\n */\nfunction handleDownEvent(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(function() {\n      this.handlePointerMove_(new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, event.frameState));\n    }.bind(this), this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Draw}\n */\nfunction handleUpEvent(event) {\n  let pass = true;\n\n  if (this.downTimeout_) {\n    clearTimeout(this.downTimeout_);\n    this.downTimeout_ = undefined;\n  }\n\n  this.handlePointerMove_(event);\n\n  const circleMode = this.mode_ === Mode.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Mode.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n}\n\n\n/**\n * Handle move events.\n * @param {module:ol/MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nDraw.prototype.handlePointerMove_ = function(event) {\n  if (this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n      (this.freehand_ && !this.shouldHandle_))) {\n    const downPx = this.downPx_;\n    const clickPx = event.pixel;\n    const dx = downPx[0] - clickPx[0];\n    const dy = downPx[1] - clickPx[1];\n    const squaredDistance = dx * dx + dy * dy;\n    this.shouldHandle_ = this.freehand_ ?\n      squaredDistance > this.squaredClickTolerance_ :\n      squaredDistance <= this.squaredClickTolerance_;\n    if (!this.shouldHandle_) {\n      return true;\n    }\n  }\n\n  if (this.finishCoordinate_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * Determine if an event is within the snapping tolerance of the start coord.\n * @param {module:ol/MapBrowserEvent} event Event.\n * @return {boolean} The event is within the snapping tolerance of the start.\n * @private\n */\nDraw.prototype.atFinish_ = function(event) {\n  let at = false;\n  if (this.sketchFeature_) {\n    let potentiallyDone = false;\n    let potentiallyFinishCoordinates = [this.finishCoordinate_];\n    if (this.mode_ === Mode.LINE_STRING) {\n      potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      potentiallyDone = this.sketchCoords_[0].length >\n          this.minPoints_;\n      potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n        this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n    }\n    if (potentiallyDone) {\n      const map = event.map;\n      for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n        const finishCoordinate = potentiallyFinishCoordinates[i];\n        const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n        const pixel = event.pixel;\n        const dx = pixel[0] - finishPixel[0];\n        const dy = pixel[1] - finishPixel[1];\n        const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n        at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n        if (at) {\n          this.finishCoordinate_ = finishCoordinate;\n          break;\n        }\n      }\n    }\n  }\n  return at;\n};\n\n\n/**\n * @param {module:ol/MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (!this.sketchPoint_) {\n    this.sketchPoint_ = new Feature(new Point(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = /** @type {module:ol/geom/Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Start the drawing.\n * @param {module:ol/MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.finishCoordinate_ = start;\n  if (this.mode_ === Mode.POINT) {\n    this.sketchCoords_ = start.slice();\n  } else if (this.mode_ === Mode.POLYGON) {\n    this.sketchCoords_ = [[start.slice(), start.slice()]];\n    this.sketchLineCoords_ = this.sketchCoords_[0];\n  } else {\n    this.sketchCoords_ = [start.slice(), start.slice()];\n  }\n  if (this.sketchLineCoords_) {\n    this.sketchLine_ = new Feature(\n      new LineString(this.sketchLineCoords_));\n  }\n  const geometry = this.geometryFunction_(this.sketchCoords_);\n  this.sketchFeature_ = new Feature();\n  if (this.geometryName_) {\n    this.sketchFeature_.setGeometryName(this.geometryName_);\n  }\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {module:ol/MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.modifyDrawing_ = function(event) {\n  let coordinate = event.coordinate;\n  const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, last;\n  if (this.mode_ === Mode.POINT) {\n    last = this.sketchCoords_;\n  } else if (this.mode_ === Mode.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    last = coordinates[coordinates.length - 1];\n    if (this.atFinish_(event)) {\n      // snap to finish\n      coordinate = this.finishCoordinate_.slice();\n    }\n  } else {\n    coordinates = this.sketchCoords_;\n    last = coordinates[coordinates.length - 1];\n  }\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  this.geometryFunction_(/** @type {!Array.<module:ol/coordinate~Coordinate>} */ (this.sketchCoords_), geometry);\n  if (this.sketchPoint_) {\n    const sketchPointGeom = /** @type {module:ol/geom/Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinate);\n  }\n  let sketchLineGeom;\n  if (geometry instanceof Polygon &&\n      this.mode_ !== Mode.POLYGON) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature(new LineString(null));\n    }\n    const ring = geometry.getLinearRing(0);\n    sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setFlatCoordinates(\n      ring.getLayout(), ring.getFlatCoordinates());\n  } else if (this.sketchLineCoords_) {\n    sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n  }\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Add a new coordinate to the drawing.\n * @param {module:ol/MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.addToDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let done;\n  let coordinates;\n  if (this.mode_ === Mode.LINE_STRING) {\n    this.finishCoordinate_ = coordinate.slice();\n    coordinates = this.sketchCoords_;\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Mode.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    if (done) {\n      this.finishCoordinate_ = coordinates[0];\n    }\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n  this.updateSketchFeatures_();\n  if (done) {\n    this.finishDrawing();\n  }\n};\n\n\n/**\n * Remove last point of the feature currently being drawn.\n * @api\n */\nDraw.prototype.removeLastPoint = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n  const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, sketchLineGeom;\n  if (this.mode_ === Mode.LINE_STRING) {\n    coordinates = this.sketchCoords_;\n    coordinates.splice(-2, 1);\n    this.geometryFunction_(coordinates, geometry);\n    if (coordinates.length >= 2) {\n      this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n    }\n  } else if (this.mode_ === Mode.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    coordinates.splice(-2, 1);\n    sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(coordinates);\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n\n  if (coordinates.length === 0) {\n    this.finishCoordinate_ = null;\n  }\n\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n * dispatched before inserting the feature.\n * @api\n */\nDraw.prototype.finishDrawing = function() {\n  const sketchFeature = this.abortDrawing_();\n  if (!sketchFeature) {\n    return;\n  }\n  let coordinates = this.sketchCoords_;\n  const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (sketchFeature.getGeometry());\n  if (this.mode_ === Mode.LINE_STRING) {\n    // remove the redundant last point\n    coordinates.pop();\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Mode.POLYGON) {\n    // remove the redundant last point in ring\n    coordinates[0].pop();\n    this.geometryFunction_(coordinates, geometry);\n    coordinates = geometry.getCoordinates();\n  }\n\n  // cast multi-part geometries\n  if (this.type_ === GeometryType.MULTI_POINT) {\n    sketchFeature.setGeometry(new MultiPoint([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n    sketchFeature.setGeometry(new MultiLineString([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n    sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n  }\n\n  // First dispatch event to allow full set up of feature\n  this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n  // Then insert feature\n  if (this.features_) {\n    this.features_.push(sketchFeature);\n  }\n  if (this.source_) {\n    this.source_.addFeature(sketchFeature);\n  }\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {module:ol/Feature} The sketch feature (or null if none).\n * @private\n */\nDraw.prototype.abortDrawing_ = function() {\n  this.finishCoordinate_ = null;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * Extend an existing geometry by adding additional points. This only works\n * on features with `LineString` geometries, where the interaction will\n * extend lines by adding points to the end of the coordinates array.\n * @param {!module:ol/Feature} feature Feature to be extended.\n * @api\n */\nDraw.prototype.extend = function(feature) {\n  const geometry = feature.getGeometry();\n  const lineString = /** @type {module:ol/geom/LineString} */ (geometry);\n  this.sketchFeature_ = feature;\n  this.sketchCoords_ = lineString.getCoordinates();\n  const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n  this.finishCoordinate_ = last.slice();\n  this.sketchCoords_.push(last.slice());\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nDraw.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchLine_) {\n    sketchFeatures.push(this.sketchLine_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n};\n\n\n/**\n * @private\n */\nDraw.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `module:ol/geom/Circle~Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {module:ol/interaction/Draw~GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function(coordinates, opt_geometry) {\n    const center = coordinates[0];\n    const end = coordinates[1];\n    const radius = Math.sqrt(\n      squaredCoordinateDistance(center, end));\n    const geometry = opt_geometry ? /** @type {module:ol/geom/Polygon} */ (opt_geometry) :\n      fromCircle(new Circle(center), opt_sides);\n    const angle = opt_angle ? opt_angle :\n      Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n    makeRegular(geometry, center, radius, angle);\n    return geometry;\n  };\n}\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {module:ol/interaction/Draw~GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return (\n    function(coordinates, opt_geometry) {\n      const extent = boundingExtent(coordinates);\n      const geometry = opt_geometry || new Polygon(null);\n      geometry.setCoordinates([[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]]);\n      return geometry;\n    }\n  );\n}\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {module:ol/geom/GeometryType} type Geometry type.\n * @return {module:ol/interaction/Draw~Mode} Drawing mode.\n */\nfunction getMode(type) {\n  let mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Mode.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Mode.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Mode.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Mode.CIRCLE;\n  }\n  return (\n    /** @type {!module:ol/interaction/Draw~Mode} */ (mode)\n  );\n}\n\n\nexport default Draw;\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right'\n};\n","/**\n * @module ol/style/Fill\n */\nimport {getUid} from '../util.js';\nimport {asString} from '../color.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/color~Color|module:ol/colorlike~ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n\n/**\n * @classdesc\n * Set fill style for vector features.\n *\n * @constructor\n * @param {module:ol/style/Fill~Options=} opt_options Options.\n * @api\n */\nconst Fill = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {module:ol/color~Color|module:ol/colorlike~ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n * @return {module:ol/style/Fill} The cloned style.\n * @api\n */\nFill.prototype.clone = function() {\n  const color = this.getColor();\n  return new Fill({\n    color: (color && color.slice) ? color.slice() : color || undefined\n  });\n};\n\n\n/**\n * Get the fill color.\n * @return {module:ol/color~Color|module:ol/colorlike~ColorLike} Color.\n * @api\n */\nFill.prototype.getColor = function() {\n  return this.color_;\n};\n\n\n/**\n * Set the color.\n *\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @api\n */\nFill.prototype.setColor = function(color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * @return {string} The checksum.\n */\nFill.prototype.getChecksum = function() {\n  if (this.checksum_ === undefined) {\n    if (\n      this.color_ instanceof CanvasPattern ||\n        this.color_ instanceof CanvasGradient\n    ) {\n      this.checksum_ = getUid(this.color_).toString();\n    } else {\n      this.checksum_ = 'f' + (this.color_ ? asString(this.color_) : '-');\n    }\n  }\n\n  return this.checksum_;\n};\nexport default Fill;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../util.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase, {GMLNS} from '../format/GMLBase.js';\nimport {readNonNegativeIntegerString, writeStringTextNode} from '../format/xsd.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport {createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender,\n  makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, parseNode,\n  pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nconst schemaLocation = GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {module:ol/format/GMLBase~Options=} opt_options\n *     Optional configuration object.\n * @extends {module:ol/format/GMLBase}\n * @api\n */\nconst GML3 = function(opt_options) {\n  const options = /** @type {module:ol/format/GMLBase~Options} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : schemaLocation;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {module:ol/geom/MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<module:ol/geom/LineString>} */\n  const lineStrings = pushParseAndPop([],\n    this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {module:ol/geom/MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<module:ol/geom/Polygon>} */\n  const polygons = pushParseAndPop([],\n    this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  parseNode(this.SURFACEMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return pushParseAndPop([null],\n    this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return pushParseAndPop([null],\n    this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return pushParseAndPop([null],\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {module:ol/geom/Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = pushParseAndPop([null],\n    this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {module:ol/geom/LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = pushParseAndPop([null],\n    this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {module:ol/extent~Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = pushParseAndPop([null],\n    this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[2][0],\n    flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  let s = getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  let m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      const y = flatCoordinates[i];\n      const x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  const len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  const contextDimension = context['srsDimension'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  const coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  let dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = readNonNegativeIntegerString(\n      node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = readNonNegativeIntegerString(\n      node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = readNonNegativeIntegerString(\n      node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = readNonNegativeIntegerString(contextDimension);\n  }\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  let axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  const point = value.getCoordinates();\n  let coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LineString|module:ol/geom/LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const pos = createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n    ({node: node}), this.ENVELOPE_SERIALIZERS_,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const posList = createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      this.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const posList = createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    this.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  const hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    this.POINTMEMBER_SERIALIZERS_,\n    makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    this.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Geometry|module:ol/extent~Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {module:ol/geom/Geometry} */ (geometry), true, context);\n  }\n  pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n    (item), this.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n    (item), context.serializers,\n    makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = makeChildAppender(\n    this.writeFeatureElement, this);\n  const item = assign({}, context);\n  item.node = node;\n  pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n    (item),\n    serializers,\n    makeSimpleNodeFactory(featureType, featureNS), features,\n    objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS('http://www.opengis.net/gml',\n    MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const curve = context['curve'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {module:ol/geom/Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const geom = createElementNS('http://www.opengis.net/gml', 'geom');\n  const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const node = createElementNS('http://www.opengis.net/gml', 'featureMembers');\n  node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation);\n  const context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML3.prototype.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing_),\n    'interior': makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML3.prototype.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML3.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML3.prototype.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML3.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML3.prototype.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\n\nexport default GML3;\n","/**\n * @module ol/format/GML\n */\nimport GML3 from '../format/GML3.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {module:ol/format/GMLBase~Options=} opt_options\n *     Optional configuration object.\n * @extends {module:ol/format/GMLBase}\n * @api\n */\nconst GML = GML3;\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @function\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @api\n */\nGML.prototype.writeFeaturesNode;\n\nexport default GML;\n","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../util.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase, {GMLNS} from '../format/GMLBase.js';\nimport {and as andFilter, bbox as bboxFilter} from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {readNonNegativeIntegerString, readNonNegativeInteger, writeStringTextNode} from '../format/xsd.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {createElementNS, isDocument, isNode, makeArrayPusher, makeChildAppender,\n  makeObjectPropertySetter, makeSimpleNodeFactory, parse, parseNode,\n  pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Object.<string, string>|string} [featureNS] The namespace URI used for features.\n * @property {Array.<string>|string} [featureType] The feature type to parse. Only used for read operations.\n * @property {module:ol/format/GMLBase} [gmlFormat] The GML format to use to parse the response. Default is `ol/format/GML3`.\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\n */\n\n\n/**\n * @typedef {Object} WriteGetFeatureOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {Array.<string>} featureTypes The feature type names.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {string} [outputFormat] Output format.\n * @property {number} [maxFeatures] Maximum number of features to fetch.\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\n * @property {Array.<string>} [propertyNames] Optional list of property names to serialize.\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\n * @property {number} [count] Number of features to retrieve when paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\n * Web Feature Services have repurposed `maxfeatures` instead.\n * @property {module:ol/extent~Extent} [bbox] Extent to use for the BBOX filter.\n * @property {module:ol/format/filter/Filter} [filter] Filter condition. See\n * {@link module:ol/format/Filter} for more information.\n * @property {string} [resultType] Indicates what response should be returned,\n * E.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\n */\n\n\n/**\n * @typedef {Object} WriteTransactionOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {string} featureType The feature type name.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\n * @property {Array.<Object>} nativeElements Native elements. Currently not supported.\n * @property {module:ol/format/GMLBase~Options} [gmlOptions] GML options for the WFS transaction writer.\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0` or `1.1.0`.\n */\n\n\n/**\n * Number of features; bounds/extent.\n * @typedef {Object} FeatureCollectionMetadata\n * @property {number} numberOfFeatures\n * @property {module:ol/extent~Extent} bounds\n */\n\n\n/**\n * Total deleted; total inserted; total updated; array of insert ids.\n * @typedef {Object} TransactionResponse\n * @property {number} totalDeleted\n * @property {number} totalInserted\n * @property {number} totalUpdated\n * @property {Array.<string>} insertIds\n */\n\n\n/**\n * @type {string}\n */\nconst FEATURE_PREFIX = 'feature';\n\n\n/**\n * @type {string}\n */\nconst XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @type {string}\n */\nconst OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @type {string}\n */\nconst WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @type {string}\n */\nconst FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @type {Object.<string, string>}\n */\nconst SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nconst DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\n *\n * @constructor\n * @param {module:ol/format/WFS~Options=} opt_options Optional configuration object.\n * @extends {module:ol/format/XMLFeature}\n * @api\n */\nconst WFS = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {module:ol/format/GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation : SCHEMA_LOCATIONS[DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const context = /** @type {module:ol/xml~NodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n  const objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLNS][\n    'featureMember'] =\n      makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  let features = pushParseAndPop([],\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n    objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {module:ol/format/WFS~TransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n      /** @type {Document} */ (source));\n  } else if (isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {module:ol/format/WFS~FeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */ (source));\n  } else if (isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {module:ol/format/WFS~FeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst FEATURE_COLLECTION_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {module:ol/format/WFS~FeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  const result = {};\n  const value = readNonNegativeIntegerString(\n    node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return pushParseAndPop(\n    /** @type {module:ol/format/WFS~FeatureCollectionMetadata} */ (result),\n    FEATURE_COLLECTION_PARSERS, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst TRANSACTION_SUMMARY_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': makeObjectPropertySetter(readNonNegativeInteger),\n    'totalUpdated': makeObjectPropertySetter(readNonNegativeInteger),\n    'totalDeleted': makeObjectPropertySetter(readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n */\nfunction readTransactionSummary(node, objectStack) {\n  return pushParseAndPop(\n    {}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst OGC_FID_PARSERS = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction fidParser(node, objectStack) {\n  parseNode(OGC_FID_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst INSERT_RESULTS_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'Feature': fidParser\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n */\nfunction readInsertResults(node, objectStack) {\n  return pushParseAndPop(\n    [], INSERT_RESULTS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst TRANSACTION_RESPONSE_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary, 'transactionSummary'),\n    'InsertResults': makeObjectPropertySetter(\n      readInsertResults, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {module:ol/format/WFS~TransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {module:ol/format/WFS~TransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return pushParseAndPop(\n    /** @type {module:ol/format/WFS~TransactionResponse} */({}),\n    TRANSACTION_RESPONSE_PARSERS, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst QUERY_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': makeChildAppender(writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeFeature(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeOgcFidFilter(node, fid, objectStack) {\n  const filter = createElementNS(OGCNS, 'Filter');\n  const child = createElementNS(OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n}\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n */\nfunction getTypeName(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeDelete(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst TRANSACTION_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeUpdate(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    TRANSACTION_SERIALIZERS,\n    makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeProperty(node, pair, objectStack) {\n  const name = createElementNS(WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = createElementNS(WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      writeStringTextNode(value, pair.value);\n    }\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeNative(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    writeStringTextNode(node, nativeElement.value);\n  }\n}\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst GETFEATURE_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Query': makeChildAppender(writeQuery)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeContainsFilter),\n    'Intersects': makeChildAppender(writeIntersectsFilter),\n    'Within': makeChildAppender(writeWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeQuery(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = getTypeName(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  }\n  const item = /** @type {module:ol/xml~NodeStackItem} */ (assign({}, context));\n  item.node = node;\n  pushSerializeAndPop(item,\n    QUERY_SERIALIZERS,\n    makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = createElementNS(OGCNS, 'Filter');\n    node.appendChild(child);\n    writeFilterCondition(child, filter, objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeFilterCondition(node, filter, objectStack) {\n  /** @type {module:ol/xml~NodeStackItem} */\n  const item = {node: node};\n  pushSerializeAndPop(item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeBboxFilter(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeContainsFilter(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeIntersectsFilter(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeWithinFilter(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeDuringFilter(node, filter, objectStack) {\n\n  const valueReference = createElementNS(FESNS, 'ValueReference');\n  writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = createElementNS(GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = createElementNS(GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  writeTimeInstant(begin, filter.begin);\n\n  const end = createElementNS(GMLNS, 'end');\n  timePeriod.appendChild(end);\n  writeTimeInstant(end, filter.end);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeLogicalFilter(node, filter, objectStack) {\n  /** @type {module:ol/xml~NodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    pushSerializeAndPop(item,\n      GETFEATURE_SERIALIZERS,\n      makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeNotFilter(node, filter, objectStack) {\n  /** @type {module:ol/xml~NodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  pushSerializeAndPop(item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeComparisonFilter(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writeOgcPropertyName(node, filter.propertyName);\n  writeOgcLiteral(node, '' + filter.expression);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeIsNullFilter(node, filter, objectStack) {\n  writeOgcPropertyName(node, filter.propertyName);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeIsBetweenFilter(node, filter, objectStack) {\n  writeOgcPropertyName(node, filter.propertyName);\n\n  const lowerBoundary = createElementNS(OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  writeOgcLiteral(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = createElementNS(OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  writeOgcLiteral(upperBoundary, '' + filter.upperBoundary);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeIsLikeFilter(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writeOgcPropertyName(node, filter.propertyName);\n  writeOgcLiteral(node, '' + filter.pattern);\n}\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n */\nfunction writeOgcExpression(tagName, node, value) {\n  const property = createElementNS(OGCNS, tagName);\n  writeStringTextNode(property, value);\n  node.appendChild(property);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeOgcPropertyName(node, value) {\n  writeOgcExpression('PropertyName', node, value);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeOgcLiteral(node, value) {\n  writeOgcExpression('Literal', node, value);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n */\nfunction writeTimeInstant(node, time) {\n  const timeInstant = createElementNS(GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = createElementNS(GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  writeStringTextNode(timePosition, time);\n}\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {module:ol/format/filter/Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nexport function writeFilter(filter) {\n  const child = createElementNS(OGCNS, 'Filter');\n  writeFilterCondition(child, filter, []);\n  return child;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeGetFeature(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {module:ol/xml~NodeStackItem} */ (assign({}, context));\n  item.node = node;\n  pushSerializeAndPop(item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n}\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {module:ol/format/WFS~WriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  const node = createElementNS(WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  let filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n        12); // `options.geometryName` must also be provided when `options.bbox` is set\n      const bbox = bboxFilter(\n        /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = andFilter(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {module:ol/xml~NodeStackItem} */\n  const context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n    11); // `options.featureTypes` should be an Array\n  writeGetFeature(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<module:ol/Feature>} inserts The features to insert.\n * @param {Array.<module:ol/Feature>} updates The features to update.\n * @param {Array.<module:ol/Feature>} deletes The features to delete.\n * @param {module:ol/format/WFS~WriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes, options) {\n  const objectStack = [];\n  const node = createElementNS(WFSNS, 'Transaction');\n  const version = options.version ? options.version : DEFAULT_VERSION;\n  const gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  let baseObj;\n  /** @type {module:ol/xml~NodeStackItem} */\n  let obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  const schemaLocation = SCHEMA_LOCATIONS[version];\n  node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', schemaLocation);\n  const featurePrefix = options.featurePrefix ? options.featurePrefix : FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    pushSerializeAndPop(obj,\n      TRANSACTION_SERIALIZERS,\n      makeSimpleNodeFactory('Insert'), inserts,\n      objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    pushSerializeAndPop(obj,\n      TRANSACTION_SERIALIZERS,\n      makeSimpleNodeFactory('Update'), updates,\n      objectStack);\n  }\n  if (deletes) {\n    pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    TRANSACTION_SERIALIZERS,\n    makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    TRANSACTION_SERIALIZERS,\n    makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?module:ol/proj/Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        const objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n","/**\n * @module ol/format\n */\n\nexport {default as EsriJSON} from './format/EsriJSON.js';\nexport {default as GeoJSON} from './format/GeoJSON.js';\nexport {default as GML} from './format/GML.js';\nexport {default as GPX} from './format/GPX.js';\nexport {default as IGC} from './format/IGC.js';\nexport {default as KML} from './format/KML.js';\nexport {default as MVT} from './format/MVT.js';\nexport {default as OWS} from './format/OWS.js';\nexport {default as Polyline} from './format/Polyline.js';\nexport {default as TopoJSON} from './format/TopoJSON.js';\nexport {default as WFS} from './format/WFS.js';\nexport {default as WKT} from './format/WKT.js';\nexport {default as WMSCapabilities} from './format/WMSCapabilities.js';\nexport {default as WMSGetFeatureInfo} from './format/WMSGetFeatureInfo.js';\nexport {default as WMTSCapabilities} from './format/WMTSCapabilities.js';\n","/**\n * @module ol/format/KML\n */\nimport {inherits} from '../util.js';\nimport Feature from '../Feature.js';\nimport {extend, includes} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {readDecimal, readBoolean, readString, writeStringTextNode, writeCDATASection, writeDecimalTextNode, writeBooleanTextNode} from '../format/xsd.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {toRadians} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport {createElementNS, getAllTextContent, isDocument, isNode, makeArrayExtender,\n  makeArrayPusher, makeChildAppender, makeObjectPropertySetter,\n  makeReplacer, makeSequence, makeSimpleNodeFactory, makeStructureNS,\n  OBJECT_PROPERTY_NODE_FACTORY, parse, parseNode, pushParseAndPop,\n  pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x\n * @property {module:ol/style/IconAnchorUnits} xunits\n * @property {number} y\n * @property {module:ol/style/IconAnchorUnits} yunits\n * @property {module:ol/style/IconOrigin} origin\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array.<number>} flatCoordinates\n * @property {Array.<number>} whens\n */\n\n/**\n * @type {module:ol/color~Color}\n */\nlet DEFAULT_COLOR;\n\n/**\n * @type {module:ol/style/Fill}\n */\nlet DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {module:ol/style/Fill} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {module:ol/size~Size}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {module:ol/style/IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {module:ol/style/IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {module:ol/size~Size}\n */\nlet DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nlet DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {number}\n */\nlet DEFAULT_IMAGE_SCALE_MULTIPLIER;\n\n/**\n * @type {module:ol/style/Image}\n */\nlet DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {module:ol/style/Image} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nlet DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {module:ol/style/Stroke}\n */\nlet DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {module:ol/style/Stroke} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {module:ol/style/Stroke}\n */\nlet DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {module:ol/style/Text}\n */\nlet DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {module:ol/style/Text} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {module:ol/style/Style}\n */\nlet DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {module:ol/style/Style} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array.<module:ol/style/Style>}\n */\nlet DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array.<module:ol/style/Style>} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\n\nfunction createStyleDefaults() {\n\n  DEFAULT_COLOR = [255, 255, 255, 1];\n\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR\n  });\n\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2]; // FIXME maybe [8, 32] ?\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n\n  DEFAULT_IMAGE_STYLE_SRC =\n      'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  DEFAULT_IMAGE_SCALE_MULTIPLIER = 0.5;\n\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: DEFAULT_IMAGE_SCALE_MULTIPLIER,\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC\n  });\n\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1\n  });\n\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8\n  });\n\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0\n  });\n\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n\n}\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array.<module:ol/style/Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @constructor\n * @extends {module:ol/format/XMLFeature}\n * @param {module:ol/format/KML~Options=} opt_options Options.\n * @api\n */\nconst KML = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  if (!DEFAULT_STYLE_ARRAY) {\n    createStyleDefaults();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  this.dataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @private\n   * @type {Array.<module:ol/style/Style>}\n   */\n  this.defaultStyle_ = options.defaultStyle ?\n    options.defaultStyle : DEFAULT_STYLE_ARRAY;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.extractStyles_ = options.extractStyles !== undefined ?\n    options.extractStyles : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.writeStyles_ = options.writeStyles !== undefined ?\n    options.writeStyles : true;\n\n  /**\n   * @private\n   * @type {!Object.<string, (Array.<module:ol/style/Style>|string)>}\n   */\n  this.sharedStyles_ = {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.showPointNames_ = options.showPointNames !== undefined ?\n    options.showPointNames : true;\n\n};\n\ninherits(KML, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst GX_NAMESPACE_URIS = [\n  'http://www.google.com/kml/ext/2.2'\n];\n\n\n/**\n * @const\n * @type {Array.<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n\n/**\n * @type {Object.<string, module:ol/style/IconAnchorUnits>}\n */\nconst ICON_ANCHOR_UNITS_MAP = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS\n};\n\n\n/**\n * @param {module:ol/style/Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {module:ol/style/Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  let textStyle = null;\n  const textOffset = [0, 0];\n  let textAlign = 'start';\n  if (foundStyle.getImage()) {\n    let imageSize = foundStyle.getImage().getImageSize();\n    if (imageSize === null) {\n      imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n    if (imageSize.length == 2) {\n      const imageScale = foundStyle.getImage().getScale();\n      // Offset the label to be centered to the right of the icon, if there is\n      // one.\n      textOffset[0] = imageScale * imageSize[0] / 2;\n      textOffset[1] = -imageScale * imageSize[1] / 2;\n      textAlign = 'left';\n    }\n  }\n  if (foundStyle.getText() !== null) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    const foundText = foundStyle.getText();\n    textStyle = foundText.clone();\n    textStyle.setFont(foundText.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(foundText.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(foundText.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(foundText.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    text: textStyle\n  });\n  return nameStyle;\n}\n\n\n/**\n * @param {Array.<module:ol/style/Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array.<module:ol/style/Style>} defaultStyle Default style.\n * @param {!Object.<string, (Array.<module:ol/style/Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {module:ol/style/Style~StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(style, styleUrl, defaultStyle, sharedStyles, showPointNames) {\n\n  return (\n    /**\n     * @param {module:ol/Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array.<module:ol/style/Style>} Style.\n     */\n    function(feature, resolution) {\n      let drawName = showPointNames;\n      /** @type {module:ol/style/Style|undefined} */\n      let nameStyle;\n      let name = '';\n      if (drawName) {\n        const geometry = feature.getGeometry();\n        if (geometry) {\n          drawName = geometry.getType() === GeometryType.POINT;\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (feature.get('name'));\n        drawName = drawName && name;\n      }\n\n      if (style) {\n        if (drawName) {\n          nameStyle = createNameStyleFunction(style[0], name);\n          return style.concat(nameStyle);\n        }\n        return style;\n      }\n      if (styleUrl) {\n        const foundStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n        if (drawName) {\n          nameStyle = createNameStyleFunction(foundStyle[0], name);\n          return foundStyle.concat(nameStyle);\n        }\n        return foundStyle;\n      }\n      if (drawName) {\n        nameStyle = createNameStyleFunction(defaultStyle[0], name);\n        return defaultStyle.concat(nameStyle);\n      }\n      return defaultStyle;\n    }\n  );\n}\n\n\n/**\n * @param {Array.<module:ol/style/Style>|string|undefined} styleValue Style value.\n * @param {Array.<module:ol/style/Style>} defaultStyle Default style.\n * @param {!Object.<string, (Array.<module:ol/style/Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array.<module:ol/style/Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\n    // defined in the same document.  Add a leading `#` if it enables to find\n    // a style.\n    if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n      styleValue = '#' + styleValue;\n    }\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {module:ol/color~Color|undefined} Color.\n */\nfunction readColor(node) {\n  const s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255\n    ];\n\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  let s = getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  const re =\n      /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  const s = getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {module:ol/format/KML~Vec2} Vec2.\n */\nfunction readVec2(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin\n  };\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst STYLE_MAP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Pair': pairDataParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<module:ol/style/Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined,\n    STYLE_MAP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst ICON_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Icon': makeObjectPropertySetter(readIcon),\n    'heading': makeObjectPropertySetter(readDecimal),\n    'hotSpot': makeObjectPropertySetter(readVec2),\n    'scale': makeObjectPropertySetter(readScale)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = pushParseAndPop(\n    {}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n  let src;\n  const href = /** @type {string|undefined} */\n      (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  let anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  const hotSpot = /** @type {module:ol/format/KML~Vec2|undefined} */\n      (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === DEFAULT_IMAGE_STYLE_SRC) {\n    anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n    anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n    anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */\n      (IconObject['x']);\n  const y = /** @type {number|undefined} */\n      (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */\n      (IconObject['w']);\n  const h = /** @type {number|undefined} */\n      (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */\n      (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  let scale = /** @type {number|undefined} */\n      (object['scale']);\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n      if (scale === undefined) {\n        scale = DEFAULT_IMAGE_SCALE_MULTIPLIER;\n      }\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: 'anonymous', // FIXME should this be configurable?\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: src\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst LABEL_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'scale': makeObjectPropertySetter(readScale)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop(\n    {}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color: /** @type {module:ol/color~Color} */\n          ('color' in object ? object['color'] : DEFAULT_COLOR)\n    }),\n    scale: /** @type {number|undefined} */\n        (object['scale'])\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst LINE_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'width': makeObjectPropertySetter(readDecimal)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = pushParseAndPop(\n    {}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color: /** @type {module:ol/color~Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst POLY_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'fill': makeObjectPropertySetter(readBoolean),\n    'outline': makeObjectPropertySetter(readBoolean)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop(\n    {}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color: /** @type {module:ol/color~Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR)\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline = /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst FLAT_LINEAR_RING_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null,\n    FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  const gxTrackObject = /** @type {module:ol/format/KML~GxTrackObject} */\n      (objectStack[objectStack.length - 1]);\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const s = getAllTextContent(node, false);\n  const re =\n      /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(\n  GX_NAMESPACE_URIS, {\n    'Track': makeArrayPusher(readGxTrack)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  const lineStrings = pushParseAndPop([],\n    GX_MULTITRACK_GEOMETRY_PARSERS, node, objectStack);\n  if (!lineStrings) {\n    return undefined;\n  }\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setLineStrings(lineStrings);\n  return multiLineString;\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst GX_TRACK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'when': whenParser\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'coord': gxCoordParser\n    }));\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  const gxTrackObject = pushParseAndPop(\n    /** @type {module:ol/format/KML~GxTrackObject} */ ({\n      flatCoordinates: [],\n      whens: []\n    }), GX_TRACK_PARSERS, node, objectStack);\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const whens = gxTrackObject.whens;\n  for (let i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii; ++i) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(GeometryLayout.XYZM, flatCoordinates);\n  return lineString;\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst ICON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI)\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'x': makeObjectPropertySetter(readDecimal),\n      'y': makeObjectPropertySetter(readDecimal),\n      'w': makeObjectPropertySetter(readDecimal),\n      'h': makeObjectPropertySetter(readDecimal)\n    }));\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  const iconObject = pushParseAndPop(\n    {}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(null,\n    GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'extrude': makeObjectPropertySetter(readBoolean),\n    'tessellate': makeObjectPropertySetter(readBoolean),\n    'altitudeMode': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  const properties = pushParseAndPop({},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  const flatCoordinates =\n      readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    lineString.setProperties(properties);\n    return lineString;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  const properties = pushParseAndPop({},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  const flatCoordinates =\n      readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates,\n      [flatCoordinates.length]);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst MULTI_GEOMETRY_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LineString': makeArrayPusher(readLineString),\n    'LinearRing': makeArrayPusher(readLinearRing),\n    'MultiGeometry': makeArrayPusher(readMultiGeometry),\n    'Point': makeArrayPusher(readPoint),\n    'Polygon': makeArrayPusher(readPolygon)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/Geometry} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  const geometries = pushParseAndPop([],\n    MULTI_GEOMETRY_PARSERS, node, objectStack);\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  /** @type {module:ol/geom/Geometry} */\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry;\n  for (let i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == GeometryType.POINT) {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (let i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(null);\n      multiGeometry.setFlatCoordinates(layout, flatCoordinates);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(null);\n      multiGeometry.setLineStrings(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(null);\n      multiGeometry.setPolygons(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return (\n    /** @type {module:ol/geom/Geometry} */ (multiGeometry)\n  );\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  const properties = pushParseAndPop({},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  const flatCoordinates =\n      readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    point.setProperties(properties);\n    return point;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'innerBoundaryIs': innerBoundaryIsParser,\n    'outerBoundaryIs': outerBoundaryIsParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  const properties = pushParseAndPop(/** @type {Object<string,*>} */ ({}),\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  const flatLinearRings = pushParseAndPop([null],\n    FLAT_LINEAR_RINGS_PARSERS, node, objectStack);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    for (let i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates, ends);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'IconStyle': iconStyleParser,\n    'LabelStyle': labelStyleParser,\n    'LineStyle': lineStyleParser,\n    'PolyStyle': polyStyleParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<module:ol/style/Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  const styleObject = pushParseAndPop(\n    {}, STYLE_PARSERS, node, objectStack);\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle = /** @type {module:ol/style/Fill} */\n      ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : DEFAULT_FILL_STYLE);\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle = /** @type {module:ol/style/Image} */\n      ('imageStyle' in styleObject ?\n        styleObject['imageStyle'] : DEFAULT_IMAGE_STYLE);\n  if (imageStyle == DEFAULT_NO_IMAGE_STYLE) {\n    imageStyle = undefined;\n  }\n  const textStyle = /** @type {module:ol/style/Text} */\n      ('textStyle' in styleObject ?\n        styleObject['textStyle'] : DEFAULT_TEXT_STYLE);\n  let strokeStyle = /** @type {module:ol/style/Stroke} */\n      ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : DEFAULT_STROKE_STYLE);\n  const outline = /** @type {boolean|undefined} */\n      (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    strokeStyle = null;\n  }\n  return [new Style({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n  })];\n}\n\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {module:ol/geom/MultiPoint|module:ol/geom/MultiLineString|module:ol/geom/MultiPolygon}\n *     multiGeometry A multi-geometry.\n * @param {Array.<module:ol/geom/Geometry>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = hasTessellate = hasAltitudeMode = false;\n  for (let i = 0; i < ii; ++i) {\n    const geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst DATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'displayName': makeObjectPropertySetter(readString),\n    'value': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  const featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst EXTENDED_DATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Data': dataParser,\n    'SchemaData': schemaDataParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst REGION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LatLonAltBox': latLonAltBoxParser,\n    'Lod': lodParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst PAIR_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Style': makeObjectPropertySetter(readStyle),\n    'key': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  const pairObject = pushParseAndPop(\n    {}, PAIR_PARSERS, node, objectStack);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */\n      (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */\n        (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const Style = /** @type {module:ol/style/Style} */\n        (pairObject['Style']);\n    if (Style) {\n      objectStack[objectStack.length - 1] = Style;\n    }\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  const styleMapValue = readStyleMapValue(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst SCHEMA_DATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'SimpleData': simpleDataParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = readString(node);\n    const featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    featureObject[name] = data;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst LAT_LON_ALT_BOX_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'altitudeMode': makeObjectPropertySetter(readString),\n    'minAltitude': makeObjectPropertySetter(readDecimal),\n    'maxAltitude': makeObjectPropertySetter(readDecimal),\n    'north': makeObjectPropertySetter(readDecimal),\n    'south': makeObjectPropertySetter(readDecimal),\n    'east': makeObjectPropertySetter(readDecimal),\n    'west': makeObjectPropertySetter(readDecimal)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  const object = pushParseAndPop({}, LAT_LON_ALT_BOX_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north'])\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst LOD_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'minLodPixels': makeObjectPropertySetter(readDecimal),\n    'maxLodPixels': makeObjectPropertySetter(readDecimal),\n    'minFadeExtent': makeObjectPropertySetter(readDecimal),\n    'maxFadeExtent': makeObjectPropertySetter(readDecimal)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  const object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst INNER_BOUNDARY_IS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(undefined,\n    INNER_BOUNDARY_IS_PARSERS, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(undefined,\n    OUTER_BOUNDARY_IS_PARSERS, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst NETWORK_LINK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'Link': linkParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'visibility': makeObjectPropertySetter(readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst LINK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  const gxTrackObject = /** @type {module:ol/format/KML~GxTrackObject} */\n      (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst PLACEMARK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(\n      readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(\n      readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(\n      readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(\n      readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(\n      readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI),\n    'visibility': makeObjectPropertySetter(readBoolean)\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'MultiTrack': makeObjectPropertySetter(\n        readGxMultiTrack, 'geometry'),\n      'Track': makeObjectPropertySetter(\n        readGxTrack, 'geometry')\n    }\n  ));\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<module:ol/Feature>|undefined} Features.\n */\nKML.prototype.readDocumentOrFolder_ = function(node, objectStack) {\n  // FIXME use scope somehow\n  const parsersNS = makeStructureNS(\n    NAMESPACE_URIS, {\n      'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this)\n    });\n  /** @type {Array.<module:ol/Feature>} */\n  const features = pushParseAndPop([], parsersNS, node, objectStack, this);\n  if (features) {\n    return features;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {module:ol/Feature|undefined} Feature.\n */\nKML.prototype.readPlacemark_ = function(node, objectStack) {\n  const object = pushParseAndPop({'geometry': null},\n    PLACEMARK_PARSERS, node, objectStack);\n  if (!object) {\n    return undefined;\n  }\n  const feature = new Feature();\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    feature.setId(id);\n  }\n  const options = /** @type {module:ol/format/Feature~ReadOptions} */ (objectStack[0]);\n\n  const geometry = object['geometry'];\n  if (geometry) {\n    transformWithOptions(geometry, false, options);\n  }\n  feature.setGeometry(geometry);\n  delete object['geometry'];\n\n  if (this.extractStyles_) {\n    const style = object['Style'];\n    const styleUrl = object['styleUrl'];\n    const styleFunction = createFeatureStyleFunction(\n      style, styleUrl, this.defaultStyle_, this.sharedStyles_,\n      this.showPointNames_);\n    feature.setStyle(styleFunction);\n  }\n  delete object['Style'];\n  // we do not remove the styleUrl property from the object, so it\n  // gets stored on feature when setProperties is called\n\n  feature.setProperties(object);\n\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyle_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    const style = readStyle(node, objectStack);\n    if (style) {\n      let styleUri;\n      let baseURI = node.baseURI;\n      if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n      }\n      if (baseURI) {\n        const url = new URL('#' + id, baseURI);\n        styleUri = url.href;\n      } else {\n        styleUri = '#' + id;\n      }\n      this.sharedStyles_[styleUri] = style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyleMap_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id === null) {\n    return;\n  }\n  const styleMapValue = readStyleMapValue(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  let styleUri;\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL('#' + id, baseURI);\n    styleUri = url.href;\n  } else {\n    styleUri = '#' + id;\n  }\n  this.sharedStyles_[styleUri] = styleMapValue;\n};\n\n\n/**\n * Read the first feature from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/Feature} Feature.\n * @api\n */\nKML.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return null;\n  }\n  const feature = this.readPlacemark_(\n    node, [this.getReadOptions(node, opt_options)]);\n  if (feature) {\n    return feature;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Read all features from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nKML.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return [];\n  }\n  let features;\n  const localName = node.localName;\n  if (localName == 'Document' || localName == 'Folder') {\n    features = this.readDocumentOrFolder_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      return features;\n    } else {\n      return [];\n    }\n  } else if (localName == 'Placemark') {\n    const feature = this.readPlacemark_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (feature) {\n      return [feature];\n    } else {\n      return [];\n    }\n  } else if (localName == 'kml') {\n    features = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const fs = this.readFeaturesFromNode(n, opt_options);\n      if (fs) {\n        extend(features, fs);\n      }\n    }\n    return features;\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * Read the name of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {string|undefined} Name.\n * @api\n */\nKML.prototype.readName = function(source) {\n  if (isDocument(source)) {\n    return this.readNameFromDocument(/** @type {Document} */ (source));\n  } else if (isNode(source)) {\n    return this.readNameFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = parse(source);\n    return this.readNameFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromNode = function(node) {\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n        n.localName == 'name') {\n      return readString(n);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'Placemark' ||\n         localName == 'kml')) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Read the network links of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Network links.\n * @api\n */\nKML.prototype.readNetworkLinks = function(source) {\n  const networkLinks = [];\n  if (isDocument(source)) {\n    extend(networkLinks, this.readNetworkLinksFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (isNode(source)) {\n    extend(networkLinks, this.readNetworkLinksFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = parse(source);\n    extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromDocument = function(doc) {\n  const networkLinks = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromNode = function(node) {\n  const networkLinks = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n        n.localName == 'NetworkLink') {\n      const obj = pushParseAndPop({}, NETWORK_LINK_PARSERS,\n        n, []);\n      networkLinks.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * Read the regions of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Regions.\n * @api\n */\nKML.prototype.readRegion = function(source) {\n  const regions = [];\n  if (isDocument(source)) {\n    extend(regions, this.readRegionFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (isNode(source)) {\n    extend(regions, this.readRegionFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = parse(source);\n    extend(regions, this.readRegionFromDocument(doc));\n  }\n  return regions;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Region.\n */\nKML.prototype.readRegionFromDocument = function(doc) {\n  const regions = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Region.\n * @api\n */\nKML.prototype.readRegionFromNode = function(node) {\n  const regions = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n        n.localName == 'Region') {\n      const obj = pushParseAndPop({}, REGION_PARSERS,\n        n, []);\n      regions.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * Read the projection from a KML source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {module:ol/proj/Projection} Projection.\n * @api\n */\nKML.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {module:ol/color~Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  const rgba = asArray(color);\n  const opacity = (rgba.length == 4) ? rgba[3] : 1;\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (let i = 0; i < 4; ++i) {\n    const hex = parseInt(abgr[i], 10).toString(16);\n    abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array.<number>} coordinates Coordinates.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == GeometryLayout.XY ||\n      layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ ||\n      layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (let d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (let i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (let d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Data': makeChildAppender(writeDataNode),\n    'value': makeChildAppender(writeDataNodeValue),\n    'displayName': makeChildAppender(writeDataNodeName)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst DOCUMENT_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Placemark': makeChildAppender(writePlacemark)\n  });\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nconst DOCUMENT_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {Array.<*>} objectStack Object stack.\n * @this {module:ol/format/KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(context, DOCUMENT_SERIALIZERS,\n    DOCUMENT_NODE_FACTORY, features, objectStack, undefined,\n    this);\n}\n\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n */\nconst DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n      DATA_NODE_FACTORY, [{name: names[i], value: values[i]}], objectStack);\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst ICON_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'href'\n  ],\n  makeStructureNS(GX_NAMESPACE_URIS, [\n    'x', 'y', 'w', 'h'\n  ]));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst ICON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'href': makeChildAppender(writeStringTextNode)\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'x': makeChildAppender(writeDecimalTextNode),\n      'y': makeChildAppender(writeDecimalTextNode),\n      'w': makeChildAppender(writeDecimalTextNode),\n      'h': makeChildAppender(writeDecimalTextNode)\n    }));\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nconst GX_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0],\n    'gx:' + opt_nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  let values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(context,\n    ICON_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n  orderedKeys =\n      ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(context, ICON_SERIALIZERS,\n    GX_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst ICON_STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'scale', 'heading', 'Icon', 'hotSpot'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst ICON_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Icon': makeChildAppender(writeIcon),\n    'heading': makeChildAppender(writeDecimalTextNode),\n    'hotSpot': makeChildAppender(writeVec2),\n    'scale': makeChildAppender(writeScaleTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Icon} style Icon style.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {module:ol/format/KML~Vec2} */ hotSpot = {\n        x: anchor[0],\n        xunits: IconAnchorUnits.PIXELS,\n        y: size[1] - anchor[1],\n        yunits: IconAnchorUnits.PIXELS\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  const scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, ICON_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst LABEL_STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'color', 'scale'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst LABEL_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'scale': makeChildAppender(writeScaleTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Text} style style.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys =\n      LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, LABEL_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst LINE_STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'color', 'width'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst LINE_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'width': makeChildAppender(writeDecimalTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Stroke} style style.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': style.getWidth()\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, LINE_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nconst GEOMETRY_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(parentNode.namespaceURI,\n      GEOMETRY_TYPE_TO_NODENAME[/** @type {module:ol/geom/Geometry} */ (value).getType()]);\n  }\n};\n\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LineString': makeChildAppender(\n      writePrimitiveGeometry),\n    'Point': makeChildAppender(\n      writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'GeometryCollection': makeChildAppender(\n      writeMultiGeometry)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {module:ol/xml~NodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array.<module:ol/geom/Geometry>} */\n  let geometries;\n  /** @type {function(*, Array.<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\n    geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_POINT) {\n    geometries = /** @type {module:ol/geom/MultiPoint} */ (geometry).getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\n    geometries =\n        (/** @type {module:ol/geom/MultiLineString} */ (geometry)).getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_POLYGON) {\n    geometries =\n        (/** @type {module:ol/geom/MultiPolygon} */ (geometry)).getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  pushSerializeAndPop(context,\n    MULTI_GEOMETRY_SERIALIZERS, factory,\n    geometries, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst BOUNDARY_IS_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LinearRing': makeChildAppender(\n      writePrimitiveGeometry)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LinearRing} linearRing Linear ring.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(context,\n    BOUNDARY_IS_SERIALIZERS,\n    LINEAR_RING_NODE_FACTORY, [linearRing], objectStack);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst PLACEMARK_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ExtendedData': makeChildAppender(writeExtendedData),\n    'MultiGeometry': makeChildAppender(writeMultiGeometry),\n    'LineString': makeChildAppender(writePrimitiveGeometry),\n    'LinearRing': makeChildAppender(writePrimitiveGeometry),\n    'Point': makeChildAppender(writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'Style': makeChildAppender(writeStyle),\n    'address': makeChildAppender(writeStringTextNode),\n    'description': makeChildAppender(writeStringTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'open': makeChildAppender(writeBooleanTextNode),\n    'phoneNumber': makeChildAppender(writeStringTextNode),\n    'styleUrl': makeChildAppender(writeStringTextNode),\n    'visibility': makeChildAppender(writeBooleanTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst PLACEMARK_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n    'styleUrl', 'Style'\n  ]);\n\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n */\nconst EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n * @this {module:ol/format/KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', feature.getId());\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {'address': 1, 'description': 1, 'name': 1, 'open': 1,\n    'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1};\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {}).sort().filter(function(v) {\n    return !filter[v];\n  });\n\n  if (keys.length > 0) {\n    const sequence = makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\n      EXTENDEDDATA_NODE_FACTORY, [namesAndValues], objectStack);\n  }\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction(feature, 0);\n    if (styles) {\n      const style = Array.isArray(styles) ? styles[0] : styles;\n      if (this.writeStyles_) {\n        properties['Style'] = style;\n      }\n      const textStyle = style.getText();\n      if (textStyle) {\n        properties['name'] = textStyle.getText();\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n\n  // serialize geometry\n  const options = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[0]);\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformWithOptions(geometry, true, options);\n  }\n  pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\n    GEOMETRY_NODE_FACTORY, [geometry], objectStack);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'extrude': makeChildAppender(writeBooleanTextNode),\n    'tessellate': makeChildAppender(writeBooleanTextNode),\n    'altitudeMode': makeChildAppender(writeStringTextNode),\n    'coordinates': makeChildAppender(writeCoordinatesTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, PRIMITIVE_GEOMETRY_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst POLYGON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'outerBoundaryIs': makeChildAppender(\n      writeBoundaryIs),\n    'innerBoundaryIs': makeChildAppender(\n      writeBoundaryIs)\n  });\n\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Polygon} polygon Polygon.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  // inner rings\n  pushSerializeAndPop(context,\n    POLYGON_SERIALIZERS,\n    INNER_BOUNDARY_NODE_FACTORY,\n    linearRings, objectStack);\n  // outer ring\n  pushSerializeAndPop(context,\n    POLYGON_SERIALIZERS,\n    OUTER_BOUNDARY_NODE_FACTORY,\n    [outerRing], objectStack);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst POLY_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode)\n  });\n\n\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst COLOR_NODE_FACTORY = makeSimpleNodeFactory('color');\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Fill} style Style.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(context, POLY_STYLE_SERIALIZERS,\n    COLOR_NODE_FACTORY, [style.getColor()], objectStack);\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node,\n    Math.round(scale * 1e6) / 1e6);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'IconStyle': makeChildAppender(writeIconStyle),\n    'LabelStyle': makeChildAppender(writeLabelStyle),\n    'LineStyle': makeChildAppender(writeLineStyle),\n    'PolyStyle': makeChildAppender(writePolyStyle)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Style} style Style.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeStyle(node, style, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  if (imageStyle instanceof Icon) {\n    properties['IconStyle'] = imageStyle;\n  }\n  if (textStyle) {\n    properties['LabelStyle'] = textStyle;\n  }\n  if (strokeStyle) {\n    properties['LineStyle'] = strokeStyle;\n  }\n  if (fillStyle) {\n    properties['PolyStyle'] = fillStyle;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the Vec2 to.\n * @param {module:ol/format/KML~Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', vec2.x);\n  node.setAttribute('y', vec2.y);\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst KML_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'Document', 'Placemark'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst KML_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Document': makeChildAppender(writeDocument),\n    'Placemark': makeChildAppender(writePlacemark)\n  });\n\n\n/**\n * Encode an array of features in the KML format. GeometryCollections, MultiPoints,\n * MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @function\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nKML.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the KML format as an XML node. GeometryCollections,\n * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nKML.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n  kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n  kml.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: kml};\n  const properties = {};\n  if (features.length > 1) {\n    properties['Document'] = features;\n  } else if (features.length == 1) {\n    properties['Placemark'] = features[0];\n  }\n  const orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, KML_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys,\n    this);\n  return kml;\n};\n\nexport default KML;\n","/**\n * @module ol/Observable\n */\nimport {inherits} from './util.js';\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @constructor\n * @extends {module:ol/events/EventTarget}\n * @fires module:ol/events/Event~Event\n * @struct\n * @api\n */\nconst Observable = function() {\n\n  EventTarget.call(this);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.revision_ = 0;\n\n};\n\ninherits(Observable, EventTarget);\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {module:ol/events~EventsKey} */ (key));\n  }\n}\n\n\n/**\n * Increases the revision counter and dispatches a 'change' event.\n * @api\n */\nObservable.prototype.changed = function() {\n  ++this.revision_;\n  this.dispatchEvent(EventType.CHANGE);\n};\n\n\n/**\n * Dispatches an event and calls all listeners listening for events\n * of this type. The event parameter can either be a string or an\n * Object with a `type` property.\n *\n * @param {{type: string,\n *     target: (EventTarget|module:ol/events/EventTarget|undefined)}|\n *     module:ol/events/Event|string} event Event object.\n * @function\n * @api\n */\nObservable.prototype.dispatchEvent;\n\n\n/**\n * Get the version number for this object.  Each time the object is modified,\n * its version number will be incremented.\n * @return {number} Revision.\n * @api\n */\nObservable.prototype.getRevision = function() {\n  return this.revision_;\n};\n\n\n/**\n * Listen for a certain type of event.\n * @param {string|Array.<string>} type The event type or array of event types.\n * @param {function(?): ?} listener The listener function.\n * @return {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on = function(type, listener) {\n  if (Array.isArray(type)) {\n    const len = type.length;\n    const keys = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      keys[i] = listen(this, type[i], listener);\n    }\n    return keys;\n  } else {\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n};\n\n\n/**\n * Listen once for a certain type of event.\n * @param {string|Array.<string>} type The event type or array of event types.\n * @param {function(?): ?} listener The listener function.\n * @return {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once = function(type, listener) {\n  if (Array.isArray(type)) {\n    const len = type.length;\n    const keys = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      keys[i] = listenOnce(this, type[i], listener);\n    }\n    return keys;\n  } else {\n    return listenOnce(this, /** @type {string} */ (type), listener);\n  }\n};\n\n\n/**\n * Unlisten for a certain type of event.\n * @param {string|Array.<string>} type The event type or array of event types.\n * @param {function(?): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un = function(type, listener) {\n  if (Array.isArray(type)) {\n    for (let i = 0, ii = type.length; i < ii; ++i) {\n      unlisten(this, type[i], listener);\n    }\n    return;\n  } else {\n    unlisten(this, /** @type {string} */ (type), listener);\n  }\n};\nexport default Observable;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {module:ol/coordinate~Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array.<module:ol/coordinate~Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array.<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array.<module:ol/size~Size>} [sizes] Sizes.\n * @property {number|module:ol/size~Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array.<module:ol/size~Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n *\n * @constructor\n * @param {module:ol/tilegrid/TileGrid~Options} options Tile grid options.\n * @struct\n * @api\n */\nconst TileGrid = function(options) {\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n  /**\n   * @private\n   * @type {!Array.<number>}\n   */\n  this.resolutions_ = options.resolutions;\n  assert(isSorted(this.resolutions_, function(a, b) {\n    return b - a;\n  }, true), 17); // `resolutions` must be sorted in descending order\n\n\n  // check if we've got a consistent zoom factor and origin\n  let zoomFactor;\n  if (!options.origins) {\n    for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n      if (!zoomFactor) {\n        zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n      } else {\n        if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n          zoomFactor = undefined;\n          break;\n        }\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zoomFactor_ = zoomFactor;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxZoom = this.resolutions_.length - 1;\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.origin_ = options.origin !== undefined ? options.origin : null;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/coordinate~Coordinate>}\n   */\n  this.origins_ = null;\n  if (options.origins !== undefined) {\n    this.origins_ = options.origins;\n    assert(this.origins_.length == this.resolutions_.length,\n      20); // Number of `origins` and `resolutions` must be equal\n  }\n\n  const extent = options.extent;\n\n  if (extent !== undefined &&\n      !this.origin_ && !this.origins_) {\n    this.origin_ = getTopLeft(extent);\n  }\n\n  assert(\n    (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n    18); // Either `origin` or `origins` must be configured, never both\n\n  /**\n   * @private\n   * @type {Array.<number|module:ol/size~Size>}\n   */\n  this.tileSizes_ = null;\n  if (options.tileSizes !== undefined) {\n    this.tileSizes_ = options.tileSizes;\n    assert(this.tileSizes_.length == this.resolutions_.length,\n      19); // Number of `tileSizes` and `resolutions` must be equal\n  }\n\n  /**\n   * @private\n   * @type {number|module:ol/size~Size}\n   */\n  this.tileSize_ = options.tileSize !== undefined ?\n    options.tileSize :\n    !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n  assert(\n    (!this.tileSize_ && this.tileSizes_) ||\n      (this.tileSize_ && !this.tileSizes_),\n    22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = extent !== undefined ? extent : null;\n\n\n  /**\n   * @private\n   * @type {Array.<module:ol/TileRange>}\n   */\n  this.fullTileRanges_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n  if (options.sizes !== undefined) {\n    this.fullTileRanges_ = options.sizes.map(function(size, z) {\n      const tileRange = new TileRange(\n        Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n        Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n      return tileRange;\n    }, this);\n  } else if (extent) {\n    this.calculateTileRanges_(extent);\n  }\n\n};\n\n\n/**\n * @private\n * @type {module:ol/tilecoord~TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n\n/**\n * Call a function with each tile coordinate for a given extent and zoom level.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} zoom Integer zoom level.\n * @param {function(module:ol/tilecoord~TileCoord)} callback Function called with each tile coordinate.\n * @api\n */\nTileGrid.prototype.forEachTileCoord = function(extent, zoom, callback) {\n  const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n  for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n    for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n      callback([zoom, i, j]);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {function(this: T, number, module:ol/TileRange): boolean} callback Callback.\n * @param {T=} opt_this The object to use as `this` in `callback`.\n * @param {module:ol/TileRange=} opt_tileRange Temporary module:ol/TileRange object.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {boolean} Callback succeeded.\n * @template T\n */\nTileGrid.prototype.forEachTileCoordParentTileRange = function(tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n  let tileRange, x, y;\n  let tileCoordExtent = null;\n  let z = tileCoord[0] - 1;\n  if (this.zoomFactor_ === 2) {\n    x = tileCoord[1];\n    y = tileCoord[2];\n  } else {\n    tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n  }\n  while (z >= this.minZoom) {\n    if (this.zoomFactor_ === 2) {\n      x = Math.floor(x / 2);\n      y = Math.floor(y / 2);\n      tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n    } else {\n      tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    }\n    if (callback.call(opt_this, z, tileRange)) {\n      return true;\n    }\n    --z;\n  }\n  return false;\n};\n\n\n/**\n * Get the extent for this tile grid, if it was configured.\n * @return {module:ol/extent~Extent} Extent.\n */\nTileGrid.prototype.getExtent = function() {\n  return this.extent_;\n};\n\n\n/**\n * Get the maximum zoom level for the grid.\n * @return {number} Max zoom.\n * @api\n */\nTileGrid.prototype.getMaxZoom = function() {\n  return this.maxZoom;\n};\n\n\n/**\n * Get the minimum zoom level for the grid.\n * @return {number} Min zoom.\n * @api\n */\nTileGrid.prototype.getMinZoom = function() {\n  return this.minZoom;\n};\n\n\n/**\n * Get the origin for the grid at the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {module:ol/coordinate~Coordinate} Origin.\n * @api\n */\nTileGrid.prototype.getOrigin = function(z) {\n  if (this.origin_) {\n    return this.origin_;\n  } else {\n    return this.origins_[z];\n  }\n};\n\n\n/**\n * Get the resolution for the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {number} Resolution.\n * @api\n */\nTileGrid.prototype.getResolution = function(z) {\n  return this.resolutions_[z];\n};\n\n\n/**\n * Get the list of resolutions for the tile grid.\n * @return {Array.<number>} Resolutions.\n * @api\n */\nTileGrid.prototype.getResolutions = function() {\n  return this.resolutions_;\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileRange=} opt_tileRange Temporary module:ol/TileRange object.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {module:ol/TileRange} Tile range.\n */\nTileGrid.prototype.getTileCoordChildTileRange = function(tileCoord, opt_tileRange, opt_extent) {\n  if (tileCoord[0] < this.maxZoom) {\n    if (this.zoomFactor_ === 2) {\n      const minX = tileCoord[1] * 2;\n      const minY = tileCoord[2] * 2;\n      return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n    }\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    return this.getTileRangeForExtentAndZ(\n      tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n  }\n  return null;\n};\n\n\n/**\n * Get the extent for a tile range.\n * @param {number} z Integer zoom level.\n * @param {module:ol/TileRange} tileRange Tile range.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {module:ol/extent~Extent} Extent.\n */\nTileGrid.prototype.getTileRangeExtent = function(z, tileRange, opt_extent) {\n  const origin = this.getOrigin(z);\n  const resolution = this.getResolution(z);\n  const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n  const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n  const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n  const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n  const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n\n/**\n * Get a tile range for the given extent and integer zoom level.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} z Integer zoom level.\n * @param {module:ol/TileRange=} opt_tileRange Temporary tile range object.\n * @return {module:ol/TileRange} Tile range.\n */\nTileGrid.prototype.getTileRangeForExtentAndZ = function(extent, z, opt_tileRange) {\n  const tileCoord = tmpTileCoord;\n  this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n  const minX = tileCoord[1];\n  const minY = tileCoord[2];\n  this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n  return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {module:ol/coordinate~Coordinate} Tile center.\n */\nTileGrid.prototype.getTileCoordCenter = function(tileCoord) {\n  const origin = this.getOrigin(tileCoord[0]);\n  const resolution = this.getResolution(tileCoord[0]);\n  const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  return [\n    origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n    origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\n  ];\n};\n\n\n/**\n * Get the extent of a tile coordinate.\n *\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/extent~Extent=} opt_extent Temporary extent object.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nTileGrid.prototype.getTileCoordExtent = function(tileCoord, opt_extent) {\n  const origin = this.getOrigin(tileCoord[0]);\n  const resolution = this.getResolution(tileCoord[0]);\n  const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n  const minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n  const maxX = minX + tileSize[0] * resolution;\n  const maxY = minY + tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n\n/**\n * Get the tile coordinate for the given map coordinate and resolution.  This\n * method considers that coordinates that intersect tile boundaries should be\n * assigned the higher tile coordinate.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Destination module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndResolution = function(coordinate, resolution, opt_tileCoord) {\n  return this.getTileCoordForXYAndResolution_(\n    coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n};\n\n\n/**\n * Note that this method should not be called for resolutions that correspond\n * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} resolution Resolution (for a non-integer zoom level).\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *     intersections go to the higher tile coordinate, let edge intersections\n *     go to the lower tile coordinate.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Temporary module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndResolution_ = function(\n  x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n  const z = this.getZForResolution(resolution);\n  const scale = resolution / this.getResolution(z);\n  const origin = this.getOrigin(z);\n  const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  const adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  const yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  let tileCoordX = scale * xFromOrigin / tileSize[0];\n  let tileCoordY = scale * yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n\n/**\n * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n * they should have separate implementations.  This method is for integer zoom\n * levels.  The other method should only be called for resolutions corresponding\n * to non-integer zoom levels.\n * @param {number} x Map x coordinate.\n * @param {number} y Map y coordinate.\n * @param {number} z Integer zoom level.\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *     intersections go to the higher tile coordinate, let edge intersections\n *     go to the lower tile coordinate.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Temporary module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndZ_ = function(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n  const origin = this.getOrigin(z);\n  const resolution = this.getResolution(z);\n  const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  const adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  const yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  let tileCoordX = xFromOrigin / tileSize[0];\n  let tileCoordY = yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n\n/**\n * Get a tile coordinate given a map coordinate and zoom level.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} z Zoom level.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Destination module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndZ = function(coordinate, z, opt_tileCoord) {\n  return this.getTileCoordForXYAndZ_(\n    coordinate[0], coordinate[1], z, false, opt_tileCoord);\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {number} Tile resolution.\n */\nTileGrid.prototype.getTileCoordResolution = function(tileCoord) {\n  return this.resolutions_[tileCoord[0]];\n};\n\n\n/**\n * Get the tile size for a zoom level. The type of the return value matches the\n * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n * get an `module:ol/size~Size`, run the result through `module:ol/size~Size.toSize()`.\n * @param {number} z Z.\n * @return {number|module:ol/size~Size} Tile size.\n * @api\n */\nTileGrid.prototype.getTileSize = function(z) {\n  if (this.tileSize_) {\n    return this.tileSize_;\n  } else {\n    return this.tileSizes_[z];\n  }\n};\n\n\n/**\n * @param {number} z Zoom level.\n * @return {module:ol/TileRange} Extent tile range for the specified zoom level.\n */\nTileGrid.prototype.getFullTileRange = function(z) {\n  if (!this.fullTileRanges_) {\n    return null;\n  } else {\n    return this.fullTileRanges_[z];\n  }\n};\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number=} opt_direction If 0, the nearest resolution will be used.\n *     If 1, the nearest lower resolution will be used. If -1, the nearest\n *     higher resolution will be used. Default is 0.\n * @return {number} Z.\n * @api\n */\nTileGrid.prototype.getZForResolution = function(resolution, opt_direction) {\n  const z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n  return clamp(z, this.minZoom, this.maxZoom);\n};\n\n\n/**\n * @param {!module:ol/extent~Extent} extent Extent for this tile grid.\n * @private\n */\nTileGrid.prototype.calculateTileRanges_ = function(extent) {\n  const length = this.resolutions_.length;\n  const fullTileRanges = new Array(length);\n  for (let z = this.minZoom; z < length; ++z) {\n    fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n  }\n  this.fullTileRanges_ = fullTileRanges;\n};\nexport default TileGrid;\n","/**\n * @module ol/source/Tile\n */\nimport {inherits} from '../util.js';\nimport {UNDEFINED} from '../functions.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from '../source/Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {number} [cacheSize]\n * @property {module:ol/extent~Extent} [extent]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {module:ol/proj~ProjectionLike} [projection]\n * @property {module:ol/source/State} [state]\n * @property {module:ol/tilegrid/TileGrid} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/source/Source}\n * @param {module:ol/source/Tile~Options=} options SourceTile source options.\n * @api\n */\nconst TileSource = function(options) {\n\n  Source.call(this, {\n    attributions: options.attributions,\n    extent: options.extent,\n    projection: options.projection,\n    state: options.state,\n    wrapX: options.wrapX\n  });\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n    options.tilePixelRatio : 1;\n\n  /**\n   * @protected\n   * @type {module:ol/tilegrid/TileGrid}\n   */\n  this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n  /**\n   * @protected\n   * @type {module:ol/TileCache}\n   */\n  this.tileCache = new TileCache(options.cacheSize);\n\n  /**\n   * @protected\n   * @type {module:ol/size~Size}\n   */\n  this.tmpSize = [0, 0];\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.key_ = '';\n\n  /**\n   * @protected\n   * @type {module:ol/Tile~Options}\n   */\n  this.tileOptions = {transition: options.transition};\n\n};\n\ninherits(TileSource, Source);\n\n\n/**\n * @return {boolean} Can expire cache.\n */\nTileSource.prototype.canExpireCache = function() {\n  return this.tileCache.canExpireCache();\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {!Object.<string, module:ol/TileRange>} usedTiles Used tiles.\n */\nTileSource.prototype.expireCache = function(projection, usedTiles) {\n  const tileCache = this.getTileCacheForProjection(projection);\n  if (tileCache) {\n    tileCache.expireCache(usedTiles);\n  }\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {number} z Zoom level.\n * @param {module:ol/TileRange} tileRange Tile range.\n * @param {function(module:ol/Tile):(boolean|undefined)} callback Called with each\n *     loaded tile.  If the callback returns `false`, the tile will not be\n *     considered loaded.\n * @return {boolean} The tile range is fully covered with loaded tiles.\n */\nTileSource.prototype.forEachLoadedTile = function(projection, z, tileRange, callback) {\n  const tileCache = this.getTileCacheForProjection(projection);\n  if (!tileCache) {\n    return false;\n  }\n\n  let covered = true;\n  let tile, tileCoordKey, loaded;\n  for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n    for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n      tileCoordKey = getKeyZXY(z, x, y);\n      loaded = false;\n      if (tileCache.containsKey(tileCoordKey)) {\n        tile = /** @type {!module:ol/Tile} */ (tileCache.get(tileCoordKey));\n        loaded = tile.getState() === TileState.LOADED;\n        if (loaded) {\n          loaded = (callback(tile) !== false);\n        }\n      }\n      if (!loaded) {\n        covered = false;\n      }\n    }\n  }\n  return covered;\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {number} Gutter.\n */\nTileSource.prototype.getGutter = function(projection) {\n  return 0;\n};\n\n\n/**\n * Return the key to be used for all tiles in the source.\n * @return {string} The key for all tiles.\n * @protected\n */\nTileSource.prototype.getKey = function() {\n  return this.key_;\n};\n\n\n/**\n * Set the value to be used as the key for all tiles in the source.\n * @param {string} key The key for tiles.\n * @protected\n */\nTileSource.prototype.setKey = function(key) {\n  if (this.key_ !== key) {\n    this.key_ = key;\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {boolean} Opaque.\n */\nTileSource.prototype.getOpaque = function(projection) {\n  return this.opaque_;\n};\n\n\n/**\n * @inheritDoc\n */\nTileSource.prototype.getResolutions = function() {\n  return this.tileGrid.getResolutions();\n};\n\n\n/**\n * @abstract\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/Tile} Tile.\n */\nTileSource.prototype.getTile = function(z, x, y, pixelRatio, projection) {};\n\n\n/**\n * Return the tile grid of the tile source.\n * @return {module:ol/tilegrid/TileGrid} Tile grid.\n * @api\n */\nTileSource.prototype.getTileGrid = function() {\n  return this.tileGrid;\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/tilegrid/TileGrid} Tile grid.\n */\nTileSource.prototype.getTileGridForProjection = function(projection) {\n  if (!this.tileGrid) {\n    return getTileGridForProjection(projection);\n  } else {\n    return this.tileGrid;\n  }\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/TileCache} Tile cache.\n * @protected\n */\nTileSource.prototype.getTileCacheForProjection = function(projection) {\n  const thisProj = this.getProjection();\n  if (thisProj && !equivalent(thisProj, projection)) {\n    return null;\n  } else {\n    return this.tileCache;\n  }\n};\n\n\n/**\n * Get the tile pixel ratio for this source. Subclasses may override this\n * method, which is meant to return a supported pixel ratio that matches the\n * provided `pixelRatio` as close as possible.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Tile pixel ratio.\n */\nTileSource.prototype.getTilePixelRatio = function(pixelRatio) {\n  return this.tilePixelRatio_;\n};\n\n\n/**\n * @param {number} z Z.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/size~Size} Tile size.\n */\nTileSource.prototype.getTilePixelSize = function(z, pixelRatio, projection) {\n  const tileGrid = this.getTileGridForProjection(projection);\n  const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n  const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n  if (tilePixelRatio == 1) {\n    return tileSize;\n  } else {\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n};\n\n\n/**\n * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n * is outside the resolution and extent range of the tile grid, `null` will be\n * returned.\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/proj/Projection=} opt_projection Projection.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n *     null if no tile URL should be created for the passed `tileCoord`.\n */\nTileSource.prototype.getTileCoordForTileUrlFunction = function(tileCoord, opt_projection) {\n  const projection = opt_projection !== undefined ?\n    opt_projection : this.getProjection();\n  const tileGrid = this.getTileGridForProjection(projection);\n  if (this.getWrapX() && projection.isGlobal()) {\n    tileCoord = wrapX(tileGrid, tileCoord, projection);\n  }\n  return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n};\n\n\n/**\n * @inheritDoc\n */\nTileSource.prototype.refresh = function() {\n  this.tileCache.clear();\n  this.changed();\n};\n\n\n/**\n * Marks a tile coord as being used, without triggering a load.\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {module:ol/proj/Projection} projection Projection.\n */\nTileSource.prototype.useTile = UNDEFINED;\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type Type.\n * @param {module:ol/Tile} tile The tile.\n */\nexport const TileSourceEvent = function(type, tile) {\n\n  Event.call(this, type);\n\n  /**\n   * The tile related to the event.\n   * @type {module:ol/Tile}\n   * @api\n   */\n  this.tile = tile;\n\n};\ninherits(TileSourceEvent, Event);\n\nexport default TileSource;\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  const outside = forEachCorner(extent,\n    /**\n     * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event ol/source/Vector~VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event ol/source/Vector~VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event ol/source/Vector~VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event ol/source/Vector~VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../util.js';\nimport ImageWrapper from '../Image.js';\nimport {assert} from '../asserts.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport ImageSource, {defaultImageLoadFunction} from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport {compareVersions} from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {module:ol/source/WMSServerType|string} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver` or `qgis`. Only needed if `hidpi` is `true`.\n * @property {module:ol/Image~LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object.<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array.<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} url WMS service URL.\n */\n\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol/source/Image~ImageSourceEvent\n * @extends {module:ol/source/Image}\n * @param {module:ol/source/ImageWMS~Options=} [opt_options] ImageWMS options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {module:ol/Image~LoadFunction}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {module:ol/source/WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {module:ol/source/WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {module:ol/Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {module:ol/size~Size}\n */\nconst GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    GETFEATUREINFO_IMAGE_SIZE);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, GETFEATUREINFO_IMAGE_SIZE,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new ImageWrapper(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {module:ol/Image~LoadFunction} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/size~Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {module:ol/Image~LoadFunction} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n","/**\n * @module ol/uri\n */\n\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function(k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n}\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n","/**\n * @module ol/source/UrlTile\n */\nimport {getUid, inherits} from '../util.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from '../source/Tile.js';\nimport TileEventType from '../source/TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {number} [cacheSize]\n * @property {module:ol/extent~Extent} [extent]\n * @property {boolean} [opaque]\n * @property {module:ol/proj~ProjectionLike} [projection]\n * @property {module:ol/source/State} [state]\n * @property {module:ol/tilegrid/TileGrid} [tileGrid]\n * @property {module:ol/Tile~LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array.<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @constructor\n * @abstract\n * @fires module:ol/source/TileEvent\n * @extends {module:ol/source/Tile}\n * @param {module:ol/source/UrlTile~Options=} options Image tile options.\n */\nconst UrlTile = function(options) {\n\n  TileSource.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    extent: options.extent,\n    opaque: options.opaque,\n    projection: options.projection,\n    state: options.state,\n    tileGrid: options.tileGrid,\n    tilePixelRatio: options.tilePixelRatio,\n    wrapX: options.wrapX,\n    transition: options.transition\n  });\n\n  /**\n   * @protected\n   * @type {module:ol/Tile~LoadFunction}\n   */\n  this.tileLoadFunction = options.tileLoadFunction;\n\n  /**\n   * @protected\n   * @type {module:ol/Tile~UrlFunction}\n   */\n  this.tileUrlFunction = this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) : nullTileUrlFunction;\n\n  /**\n   * @protected\n   * @type {!Array.<string>|null}\n   */\n  this.urls = null;\n\n  if (options.urls) {\n    this.setUrls(options.urls);\n  } else if (options.url) {\n    this.setUrl(options.url);\n  }\n  if (options.tileUrlFunction) {\n    this.setTileUrlFunction(options.tileUrlFunction);\n  }\n\n  /**\n   * @private\n   * @type {!Object.<number, boolean>}\n   */\n  this.tileLoadingKeys_ = {};\n\n};\n\ninherits(UrlTile, TileSource);\n\n\n/**\n * @type {module:ol/Tile~UrlFunction|undefined}\n * @protected\n */\nUrlTile.prototype.fixedTileUrlFunction;\n\n/**\n * Return the tile load function of the source.\n * @return {module:ol/Tile~LoadFunction} TileLoadFunction\n * @api\n */\nUrlTile.prototype.getTileLoadFunction = function() {\n  return this.tileLoadFunction;\n};\n\n\n/**\n * Return the tile URL function of the source.\n * @return {module:ol/Tile~UrlFunction} TileUrlFunction\n * @api\n */\nUrlTile.prototype.getTileUrlFunction = function() {\n  return this.tileUrlFunction;\n};\n\n\n/**\n * Return the URLs used for this source.\n * When a tileUrlFunction is used instead of url or urls,\n * null will be returned.\n * @return {!Array.<string>|null} URLs.\n * @api\n */\nUrlTile.prototype.getUrls = function() {\n  return this.urls;\n};\n\n\n/**\n * Handle tile change events.\n * @param {module:ol/events/Event} event Event.\n * @protected\n */\nUrlTile.prototype.handleTileChange = function(event) {\n  const tile = /** @type {module:ol/Tile} */ (event.target);\n  const uid = getUid(tile);\n  const tileState = tile.getState();\n  let type;\n  if (tileState == TileState.LOADING) {\n    this.tileLoadingKeys_[uid] = true;\n    type = TileEventType.TILELOADSTART;\n  } else if (uid in this.tileLoadingKeys_) {\n    delete this.tileLoadingKeys_[uid];\n    type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n      (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n        TileEventType.TILELOADEND : undefined;\n  }\n  if (type != undefined) {\n    this.dispatchEvent(new TileSourceEvent(type, tile));\n  }\n};\n\n\n/**\n * Set the tile load function of the source.\n * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n * @api\n */\nUrlTile.prototype.setTileLoadFunction = function(tileLoadFunction) {\n  this.tileCache.clear();\n  this.tileLoadFunction = tileLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the tile URL function of the source.\n * @param {module:ol/Tile~UrlFunction} tileUrlFunction Tile URL function.\n * @param {string=} opt_key Optional new tile key for the source.\n * @api\n */\nUrlTile.prototype.setTileUrlFunction = function(tileUrlFunction, opt_key) {\n  this.tileUrlFunction = tileUrlFunction;\n  this.tileCache.pruneExceptNewestZ();\n  if (typeof opt_key !== 'undefined') {\n    this.setKey(opt_key);\n  } else {\n    this.changed();\n  }\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string} url URL.\n * @api\n */\nUrlTile.prototype.setUrl = function(url) {\n  const urls = this.urls = expandUrl(url);\n  this.setTileUrlFunction(this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) :\n    createFromTemplates(urls, this.tileGrid), url);\n};\n\n\n/**\n * Set the URLs to use for requests.\n * @param {Array.<string>} urls URLs.\n * @api\n */\nUrlTile.prototype.setUrls = function(urls) {\n  this.urls = urls;\n  const key = urls.join('\\n');\n  this.setTileUrlFunction(this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) :\n    createFromTemplates(urls, this.tileGrid), key);\n};\n\n\n/**\n * @inheritDoc\n */\nUrlTile.prototype.useTile = function(z, x, y) {\n  const tileCoordKey = getKeyZXY(z, x, y);\n  if (this.tileCache.containsKey(tileCoordKey)) {\n    this.tileCache.get(tileCoordKey);\n  }\n};\nexport default UrlTile;\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  const numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n","/**\n * @module ol/layer/VectorTile\n */\nimport {inherits} from '../util.js';\nimport LayerType from '../LayerType.js';\nimport {assert} from '../asserts.js';\nimport TileProperty from '../layer/TileProperty.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorTileRenderType from '../layer/VectorTileRenderType.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport const RenderType = {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {module:ol/layer/VectorTileRenderType|string} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but point symbols and texts\n *    are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance than the other options.\n *\n * When `declutter` is set to `true`, `'hybrid'` will be used instead of `'image'`.\n * @property {module:ol/source/VectorTile} [source] Source.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority. When set to `true`, a `renderMode` of `'image'` will be overridden with\n * `'hybrid'`.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created.\n * @property {(module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction)} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @constructor\n * @extends {module:ol/layer/Vector}\n * @param {module:ol/layer/VectorTile~Options=} opt_options Options.\n * @api\n */\nconst VectorTileLayer = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  let renderMode = options.renderMode || VectorTileRenderType.HYBRID;\n  assert(renderMode == undefined ||\n      renderMode == VectorTileRenderType.IMAGE ||\n      renderMode == VectorTileRenderType.HYBRID ||\n      renderMode == VectorTileRenderType.VECTOR,\n  28); // `renderMode` must be `'image'`, `'hybrid'` or `'vector'`\n  if (options.declutter && renderMode == VectorTileRenderType.IMAGE) {\n    renderMode = VectorTileRenderType.HYBRID;\n  }\n  options.renderMode = renderMode;\n\n  const baseOptions = assign({}, options);\n\n  delete baseOptions.preload;\n  delete baseOptions.useInterimTilesOnError;\n  VectorLayer.call(this,  /** @type {module:ol/layer/Vector~Options} */ (baseOptions));\n\n  this.setPreload(options.preload ? options.preload : 0);\n  this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n    options.useInterimTilesOnError : true);\n\n  /**\n   * The layer type.\n   * @protected\n   * @type {module:ol/LayerType}\n   */\n  this.type = LayerType.VECTOR_TILE;\n\n};\n\ninherits(VectorTileLayer, VectorLayer);\n\n\n/**\n * Return the level as number to which we will preload tiles up to.\n * @return {number} The level to preload tiles up to.\n * @observable\n * @api\n */\nVectorTileLayer.prototype.getPreload = function() {\n  return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n};\n\n\n/**\n * Whether we use interim tiles on error.\n * @return {boolean} Use interim tiles on error.\n * @observable\n * @api\n */\nVectorTileLayer.prototype.getUseInterimTilesOnError = function() {\n  return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n};\n\n\n/**\n * Set the level as number to which we will preload tiles up to.\n * @param {number} preload The level to preload tiles up to.\n * @observable\n * @api\n */\nVectorTileLayer.prototype.setPreload = function(preload) {\n  this.set(TileProperty.PRELOAD, preload);\n};\n\n\n/**\n * Set whether we use interim tiles on error.\n * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n * @observable\n * @api\n */\nVectorTileLayer.prototype.setUseInterimTilesOnError = function(useInterimTilesOnError) {\n  this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n};\n\n\n/**\n * Return the associated {@link module:ol/source/VectorTile vectortilesource} of the layer.\n * @function\n * @return {module:ol/source/VectorTile} Source.\n * @api\n */\nVectorTileLayer.prototype.getSource;\nexport default VectorTileLayer;\n","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n","/**\n * @module ol/source/VectorTile\n */\nimport {inherits} from '../util.js';\nimport TileState from '../TileState.js';\nimport VectorImageTile, {defaultLoadFunction} from '../VectorImageTile.js';\nimport Tile from '../VectorTile.js';\nimport {toSize} from '../size.js';\nimport UrlTile from '../source/UrlTile.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection, createForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=128] Cache size.\n * @property {module:ol/format/Feature} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {module:ol/source/State} [state] Source state.\n * @property {module:ol/VectorTile~TileClass} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level.\n * @property {number} [minZoom] Optional min zoom level.\n * @property {number|module:ol/size~Size} [tileSize=512] Optional tile size.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function() {\n *     var data = // ... fetch data\n *     var format = tile.getFormat();\n *     tile.setProjection(format.readProjection(data));\n *     tile.setFeatures(format.readFeatures(data, {\n *       // featureProjection is not required for ol/format/MVT\n *       featureProjection: map.getView().getProjection()\n *     }));\n *     // the line below is only required for ol/format/MVT\n *     tile.setExtent(format.getLastExtent());\n *   };\n * });\n * ```\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array.<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n */\n\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTile}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector} for vector sources that are suitable for feature\n * editing.\n *\n * @constructor\n * @fires module:ol/source/Tile~TileSourceEvent\n * @extends {module:ol/source/UrlTile}\n * @param {module:ol/source/VectorTile~Options=} options Vector tile options.\n * @api\n */\nconst VectorTile = function(options) {\n  const projection = options.projection || 'EPSG:3857';\n\n  const extent = options.extent || extentFromProjection(projection);\n\n  const tileGrid = options.tileGrid || createXYZ({\n    extent: extent,\n    maxZoom: options.maxZoom || 22,\n    minZoom: options.minZoom,\n    tileSize: options.tileSize || 512\n  });\n\n  UrlTile.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize !== undefined ? options.cacheSize : 128,\n    extent: extent,\n    opaque: false,\n    projection: projection,\n    state: options.state,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction ? options.tileLoadFunction : defaultLoadFunction,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX === undefined ? true : options.wrapX,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {module:ol/format/Feature}\n   */\n  this.format_ = options.format ? options.format : null;\n\n  /**\n     * @private\n     * @type {Object.<string, module:ol/VectorTile>}\n     */\n  this.sourceTiles_ = {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n  /**\n     * @protected\n     * @type {function(new: module:ol/VectorTile, module:ol/tilecoord~TileCoord, module:ol/TileState, string,\n     *        module:ol/format/Feature, module:ol/Tile~LoadFunction)}\n     */\n  this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n  /**\n   * @private\n   * @type {Object.<string, module:ol/tilegrid/TileGrid>}\n   */\n  this.tileGrids_ = {};\n\n};\n\ninherits(VectorTile, UrlTile);\n\n\n/**\n * @return {boolean} The source can have overlapping geometries.\n */\nVectorTile.prototype.getOverlaps = function() {\n  return this.overlaps_;\n};\n\n/**\n * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n * @api\n */\nVectorTile.prototype.clear = function() {\n  this.tileCache.clear();\n  this.sourceTiles_ = {};\n};\n\n/**\n * @inheritDoc\n */\nVectorTile.prototype.getTile = function(z, x, y, pixelRatio, projection) {\n  const tileCoordKey = getKeyZXY(z, x, y);\n  if (this.tileCache.containsKey(tileCoordKey)) {\n    return (\n      /** @type {!module:ol/Tile} */ (this.tileCache.get(tileCoordKey))\n    );\n  } else {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord, projection);\n    const tile = new VectorImageTile(\n      tileCoord,\n      urlTileCoord !== null ? TileState.IDLE : TileState.EMPTY,\n      this.getRevision(),\n      this.format_, this.tileLoadFunction, urlTileCoord, this.tileUrlFunction,\n      this.tileGrid, this.getTileGridForProjection(projection),\n      this.sourceTiles_, pixelRatio, projection, this.tileClass,\n      this.handleTileChange.bind(this), tileCoord[0]);\n\n    this.tileCache.set(tileCoordKey, tile);\n    return tile;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nVectorTile.prototype.getTileGridForProjection = function(projection) {\n  const code = projection.getCode();\n  let tileGrid = this.tileGrids_[code];\n  if (!tileGrid) {\n    // A tile grid that matches the tile size of the source tile grid is more\n    // likely to have 1:1 relationships between source tiles and rendered tiles.\n    const sourceTileGrid = this.tileGrid;\n    tileGrid = this.tileGrids_[code] = createForProjection(projection, undefined,\n      sourceTileGrid ? sourceTileGrid.getTileSize(sourceTileGrid.getMinZoom()) : undefined);\n  }\n  return tileGrid;\n};\n\n\n/**\n * @inheritDoc\n */\nVectorTile.prototype.getTilePixelRatio = function(pixelRatio) {\n  return pixelRatio;\n};\n\n\n/**\n * @inheritDoc\n */\nVectorTile.prototype.getTilePixelSize = function(z, pixelRatio, projection) {\n  const tileGrid = this.getTileGridForProjection(projection);\n  const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n  return [Math.round(tileSize[0] * pixelRatio), Math.round(tileSize[1] * pixelRatio)];\n};\nexport default VectorTile;\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array.<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array.<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  const simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array.<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array.<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<Array.<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<Array.<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/Disposable\n */\nimport {UNDEFINED} from './functions.js';\n\n/**\n * Objects that need to clean up after themselves.\n * @constructor\n */\nconst Disposable = function() {};\n\n/**\n * The object has already been disposed.\n * @type {boolean}\n * @private\n */\nDisposable.prototype.disposed_ = false;\n\n/**\n * Clean up.\n */\nDisposable.prototype.dispose = function() {\n  if (!this.disposed_) {\n    this.disposed_ = true;\n    this.disposeInternal();\n  }\n};\n\n/**\n * Extension point for disposable objects.\n * @protected\n */\nDisposable.prototype.disposeInternal = UNDEFINED;\nexport default Disposable;\n","/**\n * @module ol/ImageBase\n */\nimport {inherits} from './util.js';\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/events/EventTarget}\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/ImageState} state State.\n */\nconst ImageBase = function(extent, resolution, pixelRatio, state) {\n\n  EventTarget.call(this);\n\n  /**\n   * @protected\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @protected\n   * @type {number|undefined}\n   */\n  this.resolution = resolution;\n\n  /**\n   * @protected\n   * @type {module:ol/ImageState}\n   */\n  this.state = state;\n\n};\n\ninherits(ImageBase, EventTarget);\n\n\n/**\n * @protected\n */\nImageBase.prototype.changed = function() {\n  this.dispatchEvent(EventType.CHANGE);\n};\n\n\n/**\n * @return {module:ol/extent~Extent} Extent.\n */\nImageBase.prototype.getExtent = function() {\n  return this.extent;\n};\n\n\n/**\n * @abstract\n * @return {HTMLCanvasElement|Image|HTMLVideoElement} Image.\n */\nImageBase.prototype.getImage = function() {};\n\n\n/**\n * @return {number} PixelRatio.\n */\nImageBase.prototype.getPixelRatio = function() {\n  return this.pixelRatio_;\n};\n\n\n/**\n * @return {number} Resolution.\n */\nImageBase.prototype.getResolution = function() {\n  return /** @type {number} */ (this.resolution);\n};\n\n\n/**\n * @return {module:ol/ImageState} State.\n */\nImageBase.prototype.getState = function() {\n  return this.state;\n};\n\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\nImageBase.prototype.load = function() {};\n\nexport default ImageBase;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object~ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n","/**\n * @module ol/render/VectorContext\n */\n/**\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @constructor\n * @abstract\n * @struct\n * @api\n */\nconst VectorContext = function() {\n};\n\n\n/**\n * Render a geometry with a custom renderer.\n *\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {Function} renderer Renderer.\n */\nVectorContext.prototype.drawCustom = function(geometry, feature, renderer) {};\n\n\n/**\n * Render a geometry.\n *\n * @param {module:ol/geom/Geometry} geometry The geometry to render.\n */\nVectorContext.prototype.drawGeometry = function(geometry) {};\n\n\n/**\n * Set the rendering style.\n *\n * @param {module:ol/style/Style} style The rendering style.\n */\nVectorContext.prototype.setStyle = function(style) {};\n\n\n/**\n * @param {module:ol/geom/Circle} circleGeometry Circle geometry.\n * @param {module:ol/Feature} feature Feature.\n */\nVectorContext.prototype.drawCircle = function(circleGeometry, feature) {};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n */\nVectorContext.prototype.drawFeature = function(feature, style) {};\n\n\n/**\n * @param {module:ol/geom/GeometryCollection} geometryCollectionGeometry Geometry\n *     collection.\n * @param {module:ol/Feature} feature Feature.\n */\nVectorContext.prototype.drawGeometryCollection = function(geometryCollectionGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/LineString|module:ol/render/Feature} lineStringGeometry Line string geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawLineString = function(lineStringGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} multiLineStringGeometry MultiLineString geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiLineString = function(multiLineStringGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} multiPointGeometry MultiPoint geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiPoint = function(multiPointGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/MultiPolygon} multiPolygonGeometry MultiPolygon geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiPolygon = function(multiPolygonGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/Point|module:ol/render/Feature} pointGeometry Point geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawPoint = function(pointGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} polygonGeometry Polygon geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawPolygon = function(polygonGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawText = function(geometry, feature) {};\n\n\n/**\n * @param {module:ol/style/Fill} fillStyle Fill style.\n * @param {module:ol/style/Stroke} strokeStyle Stroke style.\n */\nVectorContext.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {};\n\n\n/**\n * @param {module:ol/style/Image} imageStyle Image style.\n * @param {module:ol/render/canvas~DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setImageStyle = function(imageStyle, opt_declutterGroup) {};\n\n\n/**\n * @param {module:ol/style/Text} textStyle Text style.\n * @param {module:ol/render/canvas~DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setTextStyle = function(textStyle, opt_declutterGroup) {};\nexport default VectorContext;\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n","/**\n * @module ol/pointer/EventSource\n */\n/**\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @param {!Object.<string, function(Event)>} mapping Event mapping.\n * @constructor\n */\nconst EventSource = function(dispatcher, mapping) {\n  /**\n   * @type {module:ol/pointer/PointerEventHandler}\n   */\n  this.dispatcher = dispatcher;\n\n  /**\n   * @private\n   * @const\n   * @type {!Object.<string, function(Event)>}\n   */\n  this.mapping_ = mapping;\n};\n\n\n/**\n * List of events supported by this source.\n * @return {Array.<string>} Event names\n */\nEventSource.prototype.getEvents = function() {\n  return Object.keys(this.mapping_);\n};\n\n\n/**\n * Returns the handler that should handle a given event type.\n * @param {string} eventType The event type.\n * @return {function(Event)} Handler\n */\nEventSource.prototype.getHandlerForEvent = function(eventType) {\n  return this.mapping_[eventType];\n};\nexport default EventSource;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid, inherits} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, createEmpty, equals, getIntersection, isEmpty} from '../../extent.js';\nimport IntermediateCanvasRenderer from '../canvas/IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @constructor\n * @extends {module:ol/renderer/canvas/IntermediateCanvas}\n * @param {module:ol/layer/Tile|module:ol/layer/VectorTile} tileLayer Tile layer.\n * @api\n */\nconst CanvasTileLayerRenderer = function(tileLayer) {\n\n  IntermediateCanvasRenderer.call(this, tileLayer);\n\n  /**\n   * @protected\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context = this.context === null ? null : createCanvasContext2D();\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.oversampling_;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.renderedExtent_ = null;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.renderedRevision;\n\n  /**\n   * @protected\n   * @type {!Array.<module:ol/Tile>}\n   */\n  this.renderedTiles = [];\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.newTiles_ = false;\n\n  /**\n   * @protected\n   * @type {module:ol/extent~Extent}\n   */\n  this.tmpExtent = createEmpty();\n\n  /**\n   * @private\n   * @type {module:ol/TileRange}\n   */\n  this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.imageTransform_ = createTransform();\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.zDirection = 0;\n\n};\n\ninherits(CanvasTileLayerRenderer, IntermediateCanvasRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/TileLayer} The layer renderer.\n */\nCanvasTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasTileLayerRenderer(/** @type {module:ol/layer/Tile} */ (layer));\n};\n\n\n/**\n * @private\n * @param {module:ol/Tile} tile Tile.\n * @return {boolean} Tile is drawable.\n */\nCanvasTileLayerRenderer.prototype.isDrawableTile_ = function(tile) {\n  const tileState = tile.getState();\n  const useInterimTilesOnError = this.getLayer().getUseInterimTilesOnError();\n  return tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      tileState == TileState.ERROR && !useInterimTilesOnError;\n};\n\n\n/**\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/Tile} Tile.\n */\nCanvasTileLayerRenderer.prototype.getTile = function(z, x, y, pixelRatio, projection) {\n  const layer = this.getLayer();\n  const source = /** @type {module:ol/source/Tile} */ (layer.getSource());\n  let tile = source.getTile(z, x, y, pixelRatio, projection);\n  if (tile.getState() == TileState.ERROR) {\n    if (!layer.getUseInterimTilesOnError()) {\n      // When useInterimTilesOnError is false, we consider the error tile as loaded.\n      tile.setState(TileState.LOADED);\n    } else if (layer.getPreload() > 0) {\n      // Preloaded tiles for lower resolutions might have finished loading.\n      this.newTiles_ = true;\n    }\n  }\n  if (!this.isDrawableTile_(tile)) {\n    tile = tile.getInterimTile();\n  }\n  return tile;\n};\n\n/**\n * @inheritDoc\n */\nCanvasTileLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {\n\n  const pixelRatio = frameState.pixelRatio;\n  const size = frameState.size;\n  const viewState = frameState.viewState;\n  const projection = viewState.projection;\n  const viewResolution = viewState.resolution;\n  const viewCenter = viewState.center;\n\n  const tileLayer = this.getLayer();\n  const tileSource = /** @type {module:ol/source/Tile} */ (tileLayer.getSource());\n  const sourceRevision = tileSource.getRevision();\n  const tileGrid = tileSource.getTileGridForProjection(projection);\n  const z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n  const tileResolution = tileGrid.getResolution(z);\n  let oversampling = Math.round(viewResolution / tileResolution) || 1;\n  let extent = frameState.extent;\n\n  if (layerState.extent !== undefined) {\n    extent = getIntersection(extent, layerState.extent);\n  }\n  if (isEmpty(extent)) {\n    // Return false to prevent the rendering of the layer.\n    return false;\n  }\n\n  const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  const imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n\n  const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n  /**\n   * @type {Object.<number, Object.<string, module:ol/Tile>>}\n   */\n  const tilesToDrawByZ = {};\n  tilesToDrawByZ[z] = {};\n\n  const findLoadedTiles = this.createLoadedTileFinder(\n    tileSource, projection, tilesToDrawByZ);\n\n  const hints = frameState.viewHints;\n  const animatingOrInteracting = hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING];\n\n  const tmpExtent = this.tmpExtent;\n  const tmpTileRange = this.tmpTileRange_;\n  this.newTiles_ = false;\n  let tile, x, y;\n  for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n    for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n      if (Date.now() - frameState.time > 16 && animatingOrInteracting) {\n        continue;\n      }\n      tile = this.getTile(z, x, y, pixelRatio, projection);\n      if (this.isDrawableTile_(tile)) {\n        const uid = getUid(this);\n        if (tile.getState() == TileState.LOADED) {\n          tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n          const inTransition = tile.inTransition(uid);\n          if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n            this.newTiles_ = true;\n          }\n        }\n        if (tile.getAlpha(uid, frameState.time) === 1) {\n          // don't look for alt tiles if alpha is 1\n          continue;\n        }\n      }\n\n      const childTileRange = tileGrid.getTileCoordChildTileRange(\n        tile.tileCoord, tmpTileRange, tmpExtent);\n      let covered = false;\n      if (childTileRange) {\n        covered = findLoadedTiles(z + 1, childTileRange);\n      }\n      if (!covered) {\n        tileGrid.forEachTileCoordParentTileRange(\n          tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n      }\n\n    }\n  }\n\n  const renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n  if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\n    this.newTiles_ ||\n        !(this.renderedExtent_ && containsExtent(this.renderedExtent_, extent)) ||\n        this.renderedRevision != sourceRevision ||\n        oversampling != this.oversampling_ ||\n        !animatingOrInteracting && renderedResolution != this.renderedResolution\n  )) {\n\n    const context = this.context;\n    if (context) {\n      const tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n      const width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n      const height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n      const canvas = context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        this.oversampling_ = oversampling;\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        if (this.renderedExtent_ && !equals(imageExtent, this.renderedExtent_)) {\n          context.clearRect(0, 0, width, height);\n        }\n        oversampling = this.oversampling_;\n      }\n    }\n\n    this.renderedTiles.length = 0;\n    /** @type {Array.<number>} */\n    const zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(function(a, b) {\n      if (a === z) {\n        return 1;\n      } else if (b === z) {\n        return -1;\n      } else {\n        return a > b ? 1 : a < b ? -1 : 0;\n      }\n    });\n    let currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n    let tileExtent, tileGutter, tilesToDraw, w, h;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      currentZ = zs[i];\n      currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n      currentResolution = tileGrid.getResolution(currentZ);\n      currentScale = currentResolution / tileResolution;\n      tileGutter = tilePixelRatio * tileSource.getGutter(projection);\n      tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        tile = tilesToDraw[tileCoordKey];\n        tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n        x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n        y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n        w = currentTilePixelSize[0] * currentScale / oversampling;\n        h = currentTilePixelSize[1] * currentScale / oversampling;\n        this.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n        this.renderedTiles.push(tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n    this.renderedExtent_ = imageExtent;\n  }\n\n  const scale = this.renderedResolution / viewResolution;\n  const transform = composeTransform(this.imageTransform_,\n    pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n    scale, scale,\n    0,\n    (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\n    (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n  composeTransform(this.coordinateToCanvasPixelTransform,\n    pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n    pixelRatio / viewResolution, -pixelRatio / viewResolution,\n    0,\n    -viewCenter[0], -viewCenter[1]);\n\n\n  this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n  this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n    projection, extent, z, tileLayer.getPreload());\n  this.scheduleExpireCache(frameState, tileSource);\n\n  return this.renderedTiles.length > 0;\n};\n\n\n/**\n * @param {module:ol/Tile} tile Tile.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {number} x Left of the tile.\n * @param {number} y Top of the tile.\n * @param {number} w Width of the tile.\n * @param {number} h Height of the tile.\n * @param {number} gutter Tile gutter.\n * @param {boolean} transition Apply an alpha transition.\n */\nCanvasTileLayerRenderer.prototype.drawTileImage = function(tile, frameState, layerState, x, y, w, h, gutter, transition) {\n  const image = tile.getImage(this.getLayer());\n  if (!image) {\n    return;\n  }\n  const uid = getUid(this);\n  const alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n  if (alpha === 1 && !this.getLayer().getSource().getOpaque(frameState.viewState.projection)) {\n    this.context.clearRect(x, y, w, h);\n  }\n  const alphaChanged = alpha !== this.context.globalAlpha;\n  if (alphaChanged) {\n    this.context.save();\n    this.context.globalAlpha = alpha;\n  }\n  this.context.drawImage(image, gutter, gutter,\n    image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n  if (alphaChanged) {\n    this.context.restore();\n  }\n  if (alpha !== 1) {\n    frameState.animate = true;\n  } else if (transition) {\n    tile.endTransition(uid);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasTileLayerRenderer.prototype.getImage = function() {\n  const context = this.context;\n  return context ? context.canvas : null;\n};\n\n\n/**\n * @function\n * @return {module:ol/layer/Tile|module:ol/layer/VectorTile}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\n/**\n * @inheritDoc\n */\nCanvasTileLayerRenderer.prototype.getImageTransform = function() {\n  return this.imageTransform_;\n};\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n *\n * @constructor\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @struct\n */\nconst TileRange = function(minX, maxX, minY, maxY) {\n\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n\n  /**\n   * @type {number}\n   */\n  this.maxX = maxX;\n\n  /**\n   * @type {number}\n   */\n  this.minY = minY;\n\n  /**\n   * @type {number}\n   */\n  this.maxY = maxY;\n\n};\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {module:ol/TileRange=} tileRange TileRange.\n * @return {module:ol/TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\nTileRange.prototype.contains = function(tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\nTileRange.prototype.containsTileRange = function(tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n\n\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\nTileRange.prototype.containsXY = function(x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\nTileRange.prototype.equals = function(tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n */\nTileRange.prototype.extend = function(tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n\n\n/**\n * @return {number} Height.\n */\nTileRange.prototype.getHeight = function() {\n  return this.maxY - this.minY + 1;\n};\n\n\n/**\n * @return {module:ol/size~Size} Size.\n */\nTileRange.prototype.getSize = function() {\n  return [this.getWidth(), this.getHeight()];\n};\n\n\n/**\n * @return {number} Width.\n */\nTileRange.prototype.getWidth = function() {\n  return this.maxX - this.minX + 1;\n};\n\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Intersects.\n */\nTileRange.prototype.intersects = function(tileRange) {\n  return this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY;\n};\nexport default TileRange;\n","/**\n * @module ol/source/Source\n */\nimport {inherits} from '../util.js';\nimport {UNDEFINED} from '../functions.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(module:ol/PluggableMap~FrameState): (string|Array.<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array.<string>|module:ol/source/Source~Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {module:ol/proj~ProjectionLike} projection\n * @property {module:ol/source/State} [state]\n * @property {boolean} [wrapX]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/Object}\n * @param {module:ol/source/Source~Options} options Source options.\n * @api\n */\nconst Source = function(options) {\n\n  BaseObject.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/proj/Projection}\n   */\n  this.projection_ = getProjection(options.projection);\n\n  /**\n   * @private\n   * @type {?module:ol/source/Source~Attribution}\n   */\n  this.attributions_ = this.adaptAttributions_(options.attributions);\n\n  /**\n   * @private\n   * @type {module:ol/source/State}\n   */\n  this.state_ = options.state !== undefined ?\n    options.state : SourceState.READY;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n};\n\ninherits(Source, BaseObject);\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {module:ol/source/Source~AttributionLike|undefined} attributionLike The attribution option.\n * @return {?module:ol/source/Source~Attribution} An attribution function (or null).\n */\nSource.prototype.adaptAttributions_ = function(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function(frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function(frameState) {\n    return [attributionLike];\n  };\n};\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {Object.<string, boolean>} skippedFeatureUids Skipped feature uids.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T} callback Feature callback.\n * @return {T|undefined} Callback result.\n * @template T\n */\nSource.prototype.forEachFeatureAtCoordinate = UNDEFINED;\n\n\n/**\n * Get the attribution function for the source.\n * @return {?module:ol/source/Source~Attribution} Attribution function.\n */\nSource.prototype.getAttributions = function() {\n  return this.attributions_;\n};\n\n\n/**\n * Get the projection of the source.\n * @return {module:ol/proj/Projection} Projection.\n * @api\n */\nSource.prototype.getProjection = function() {\n  return this.projection_;\n};\n\n\n/**\n * @abstract\n * @return {Array.<number>|undefined} Resolutions.\n */\nSource.prototype.getResolutions = function() {};\n\n\n/**\n * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n * @return {module:ol/source/State} State.\n * @api\n */\nSource.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * @return {boolean|undefined} Wrap X.\n */\nSource.prototype.getWrapX = function() {\n  return this.wrapX_;\n};\n\n\n/**\n * Refreshes the source and finally dispatches a 'change' event.\n * @api\n */\nSource.prototype.refresh = function() {\n  this.changed();\n};\n\n\n/**\n * Set the attributions of the source.\n * @param {module:ol/source/Source~AttributionLike|undefined} attributions Attributions.\n *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n *     or `undefined`.\n * @api\n */\nSource.prototype.setAttributions = function(attributions) {\n  this.attributions_ = this.adaptAttributions_(attributions);\n  this.changed();\n};\n\n\n/**\n * Set the state of the source.\n * @param {module:ol/source/State} state State.\n * @protected\n */\nSource.prototype.setState = function(state) {\n  this.state_ = state;\n  this.changed();\n};\nexport default Source;\n","/**\n * @module ol/structs/RBush\n */\nimport {getUid} from '../util.js';\nimport rbush from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * Wrapper around the RBush by Vladimir Agafonkin.\n *\n * @constructor\n * @param {number=} opt_maxEntries Max entries.\n * @see https://github.com/mourner/rbush\n * @struct\n * @template T\n */\nconst RBush = function(opt_maxEntries) {\n\n  /**\n   * @private\n   */\n  this.rbush_ = rbush(opt_maxEntries, undefined);\n\n  /**\n   * A mapping between the objects added to this rbush wrapper\n   * and the objects that are actually added to the internal rbush.\n   * @private\n   * @type {Object.<number, module:ol/structs/RBush~Entry>}\n   */\n  this.items_ = {};\n\n};\n\n\n/**\n * Insert a value into the RBush.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.insert = function(extent, value) {\n  /** @type {module:ol/structs/RBush~Entry} */\n  const item = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3],\n    value: value\n  };\n\n  this.rbush_.insert(item);\n  this.items_[getUid(value)] = item;\n};\n\n\n/**\n * Bulk-insert values into the RBush.\n * @param {Array.<module:ol/extent~Extent>} extents Extents.\n * @param {Array.<T>} values Values.\n */\nRBush.prototype.load = function(extents, values) {\n  const items = new Array(values.length);\n  for (let i = 0, l = values.length; i < l; i++) {\n    const extent = extents[i];\n    const value = values[i];\n\n    /** @type {module:ol/structs/RBush~Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n    items[i] = item;\n    this.items_[getUid(value)] = item;\n  }\n  this.rbush_.load(items);\n};\n\n\n/**\n * Remove a value from the RBush.\n * @param {T} value Value.\n * @return {boolean} Removed.\n */\nRBush.prototype.remove = function(value) {\n  const uid = getUid(value);\n\n  // get the object in which the value was wrapped when adding to the\n  // internal rbush. then use that object to do the removal.\n  const item = this.items_[uid];\n  delete this.items_[uid];\n  return this.rbush_.remove(item) !== null;\n};\n\n\n/**\n * Update the extent of a value in the RBush.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.update = function(extent, value) {\n  const item = this.items_[getUid(value)];\n  const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n  if (!equals(bbox, extent)) {\n    this.remove(value);\n    this.insert(extent, value);\n  }\n};\n\n\n/**\n * Return all values in the RBush.\n * @return {Array.<T>} All.\n */\nRBush.prototype.getAll = function() {\n  const items = this.rbush_.all();\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Return all values in the given extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {Array.<T>} All in extent.\n */\nRBush.prototype.getInExtent = function(extent) {\n  /** @type {module:ol/structs/RBush~Entry} */\n  const bbox = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3]\n  };\n  const items = this.rbush_.search(bbox);\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Calls a callback function with each value in the tree.\n * If the callback returns a truthy value, this value is returned without\n * checking the rest of the tree.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach = function(callback, opt_this) {\n  return this.forEach_(this.getAll(), callback, opt_this);\n};\n\n\n/**\n * Calls a callback function with each value in the provided extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEachInExtent = function(extent, callback, opt_this) {\n  return this.forEach_(this.getInExtent(extent), callback, opt_this);\n};\n\n\n/**\n * @param {Array.<T>} values Values.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @private\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach_ = function(values, callback, opt_this) {\n  let result;\n  for (let i = 0, l = values.length; i < l; i++) {\n    result = callback.call(opt_this, values[i]);\n    if (result) {\n      return result;\n    }\n  }\n  return result;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nRBush.prototype.isEmpty = function() {\n  return isEmpty(this.items_);\n};\n\n\n/**\n * Remove all values from the RBush.\n */\nRBush.prototype.clear = function() {\n  this.rbush_.clear();\n  this.items_ = {};\n};\n\n\n/**\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nRBush.prototype.getExtent = function(opt_extent) {\n  // FIXME add getExtent() to rbush\n  const data = this.rbush_.data;\n  return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n};\n\n\n/**\n * @param {module:ol/structs/RBush} rbush R-Tree.\n */\nRBush.prototype.concat = function(rbush) {\n  this.rbush_.load(rbush.rbush_.all());\n  for (const i in rbush.items_) {\n    this.items_[i | 0] = rbush.items_[i | 0];\n  }\n};\nexport default RBush;\n","/**\n * @module ol/MapEvent\n */\nimport {inherits} from './util.js';\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type Event type.\n * @param {module:ol/PluggableMap} map Map.\n * @param {?module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n */\nconst MapEvent = function(type, map, opt_frameState) {\n\n  Event.call(this, type);\n\n  /**\n   * The map where the event occurred.\n   * @type {module:ol/PluggableMap}\n   * @api\n   */\n  this.map = map;\n\n  /**\n   * The frame state at the time of the event.\n   * @type {?module:ol/PluggableMap~FrameState}\n   * @api\n   */\n  this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n};\n\ninherits(MapEvent, Event);\nexport default MapEvent;\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object.<string, Object.<string, module:ol/proj~TransformFunction>>}\n */\nlet transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {module:ol/proj/Projection} source Source.\n * @param {module:ol/proj/Projection} destination Destination.\n * @param {module:ol/proj~TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {module:ol/proj/Projection} source Source projection.\n * @param {module:ol/proj/Projection} destination Destination projection.\n * @return {module:ol/proj~TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {module:ol/proj~TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/render/Feature\n */\nimport {UNDEFINED} from '../functions.js';\nimport {extend} from '../array.js';\nimport {createOrUpdateFromCoordinate, createOrUpdateFromFlatCoordinates, getCenter, getHeight} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {getInteriorPointOfArray, getInteriorPointsOfMultiArray} from '../geom/flat/interiorpoint.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {get as getProjection} from '../proj.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n *\n * @constructor\n * @param {module:ol/geom/GeometryType} type Geometry type.\n * @param {Array.<number>} flatCoordinates Flat coordinates. These always need\n *     to be right-handed for polygons.\n * @param {Array.<number>|Array.<Array.<number>>} ends Ends or Endss.\n * @param {Object.<string, *>} properties Properties.\n * @param {number|string|undefined} id Feature id.\n */\nconst RenderFeature = function(type, flatCoordinates, ends, properties, id) {\n  /**\n   * @private\n   * @type {module:ol/extent~Extent|undefined}\n   */\n  this.extent_;\n\n  /**\n   * @private\n   * @type {number|string|undefined}\n   */\n  this.id_ = id;\n\n  /**\n   * @private\n   * @type {module:ol/geom/GeometryType}\n   */\n  this.type_ = type;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatCoordinates_ = flatCoordinates;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatMidpoints_ = null;\n\n  /**\n   * @private\n   * @type {Array.<number>|Array.<Array.<number>>}\n   */\n  this.ends_ = ends;\n\n  /**\n   * @private\n   * @type {Object.<string, *>}\n   */\n  this.properties_ = properties;\n\n};\n\n\n/**\n * @type {module:ol/transform~Transform}\n */\nconst tmpTransform = createTransform();\n\n\n/**\n * Get a feature property by its key.\n * @param {string} key Key\n * @return {*} Value for the requested key.\n * @api\n */\nRenderFeature.prototype.get = function(key) {\n  return this.properties_[key];\n};\n\n\n/**\n * @return {Array.<number>|Array.<Array.<number>>} Ends or endss.\n */\nRenderFeature.prototype.getEnds =\nRenderFeature.prototype.getEndss = function() {\n  return this.ends_;\n};\n\n\n/**\n * Get the extent of this feature's geometry.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nRenderFeature.prototype.getExtent = function() {\n  if (!this.extent_) {\n    this.extent_ = this.type_ === GeometryType.POINT ?\n      createOrUpdateFromCoordinate(this.flatCoordinates_) :\n      createOrUpdateFromFlatCoordinates(\n        this.flatCoordinates_, 0, this.flatCoordinates_.length, 2);\n\n  }\n  return this.extent_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nRenderFeature.prototype.getFlatInteriorPoint = function() {\n  if (!this.flatInteriorPoints_) {\n    const flatCenter = getCenter(this.getExtent());\n    this.flatInteriorPoints_ = getInteriorPointOfArray(\n      this.flatCoordinates_, 0, this.ends_, 2, flatCenter, 0);\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nRenderFeature.prototype.getFlatInteriorPoints = function() {\n  if (!this.flatInteriorPoints_) {\n    const flatCenters = linearRingssCenter(\n      this.flatCoordinates_, 0, this.ends_, 2);\n    this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n      this.flatCoordinates_, 0, this.ends_, 2, flatCenters);\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoint.\n */\nRenderFeature.prototype.getFlatMidpoint = function() {\n  if (!this.flatMidpoints_) {\n    this.flatMidpoints_ = interpolatePoint(\n      this.flatCoordinates_, 0, this.flatCoordinates_.length, 2, 0.5);\n  }\n  return this.flatMidpoints_;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nRenderFeature.prototype.getFlatMidpoints = function() {\n  if (!this.flatMidpoints_) {\n    this.flatMidpoints_ = [];\n    const flatCoordinates = this.flatCoordinates_;\n    let offset = 0;\n    const ends = this.ends_;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates, offset, end, 2, 0.5);\n      extend(this.flatMidpoints_, midpoint);\n      offset = end;\n    }\n  }\n  return this.flatMidpoints_;\n};\n\n/**\n * Get the feature identifier.  This is a stable identifier for the feature and\n * is set when reading data from a remote source.\n * @return {number|string|undefined} Id.\n * @api\n */\nRenderFeature.prototype.getId = function() {\n  return this.id_;\n};\n\n\n/**\n * @return {Array.<number>} Flat coordinates.\n */\nRenderFeature.prototype.getOrientedFlatCoordinates = function() {\n  return this.flatCoordinates_;\n};\n\n\n/**\n * @return {Array.<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n    RenderFeature.prototype.getOrientedFlatCoordinates;\n\n\n/**\n * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n * determining the geometry type in style function (see {@link #getType}).\n * @return {module:ol/render/Feature} Feature.\n * @api\n */\nRenderFeature.prototype.getGeometry = function() {\n  return this;\n};\n\n\n/**\n * Get the feature properties.\n * @return {Object.<string, *>} Feature properties.\n * @api\n */\nRenderFeature.prototype.getProperties = function() {\n  return this.properties_;\n};\n\n\n/**\n * Get the feature for working with its geometry.\n * @return {module:ol/render/Feature} Feature.\n */\nRenderFeature.prototype.getSimplifiedGeometry =\n    RenderFeature.prototype.getGeometry;\n\n\n/**\n * @return {number} Stride.\n */\nRenderFeature.prototype.getStride = function() {\n  return 2;\n};\n\n\n/**\n * @return {undefined}\n */\nRenderFeature.prototype.getStyleFunction = UNDEFINED;\n\n\n/**\n * Get the type of this feature's geometry.\n * @return {module:ol/geom/GeometryType} Geometry type.\n * @api\n */\nRenderFeature.prototype.getType = function() {\n  return this.type_;\n};\n\n/**\n * Transform geometry coordinates from tile pixel space to projected.\n * The SRS of the source and destination are expected to be the same.\n *\n * @param {module:ol/proj~ProjectionLike} source The current projection\n * @param {module:ol/proj~ProjectionLike} destination The desired projection.\n */\nRenderFeature.prototype.transform = function(source, destination) {\n  source = getProjection(source);\n  const pixelExtent = source.getExtent();\n  const projectedExtent = source.getWorldExtent();\n  const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n  composeTransform(tmpTransform,\n    projectedExtent[0], projectedExtent[3],\n    scale, -scale, 0,\n    0, 0);\n  transform2D(this.flatCoordinates_, 0, this.flatCoordinates_.length, 2,\n    tmpTransform, this.flatCoordinates_);\n};\nexport default RenderFeature;\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport {inherits} from '../util.js';\nimport {assert} from '../asserts.js';\nimport PBF from 'pbf';\nimport FeatureFormat, {transformWithOptions} from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {linearRingIsClockwise} from '../geom/flat/orient.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\nimport RenderFeature from '../render/Feature.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {function((module:ol/geom/Geometry|Object.<string,*>)=)|function(module:ol/geom/GeometryType,Array.<number>,(Array.<number>|Array.<Array.<number>>),Object.<string,*>,number)} [featureClass]\n * Class for features returned by {@link module:ol/format/MVT#readFeatures}. Set to\n * {@link module:ol/Feature~Feature} to get full editing and geometry support at the cost of\n * decreased rendering performance. The default is {@link module:ol/render/Feature~RenderFeature},\n * which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating\n * features.\n * @property {string} [layerName='layer'] Name of the feature attribute that\n * holds the layer name.\n * @property {Array.<string>} [layers] Layers to read features from. If not\n * provided, features will be read from all layers.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @constructor\n * @extends {module:ol/format/Feature}\n * @param {module:ol/format/MVT~Options=} opt_options Options.\n * @api\n */\nconst MVT = function(opt_options) {\n\n  FeatureFormat.call(this);\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {module:ol/proj/Projection}\n   */\n  this.dataProjection = new Projection({\n    code: '',\n    units: Units.TILE_PIXELS\n  });\n\n  /**\n   * @private\n   * @type {function((module:ol/geom/Geometry|Object.<string,*>)=)|\n   *     function(module:ol/geom/GeometryType,Array.<number>,\n   *         (Array.<number>|Array.<Array.<number>>),Object.<string,*>,number)}\n   */\n  this.featureClass_ = options.featureClass ?\n    options.featureClass : RenderFeature;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = null;\n\n};\n\ninherits(MVT, FeatureFormat);\n\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {Object} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: []\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {Object} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value = tag === 1 ? pbf.readString() :\n        tag === 2 ? pbf.readFloat() :\n          tag === 3 ? pbf.readDouble() :\n            tag === 4 ? pbf.readVarint64() :\n              tag === 5 ? pbf.readVarint() :\n                tag === 6 ? pbf.readSVarint() :\n                  tag === 7 ? pbf.readBoolean() : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {Object} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @suppress {missingProperties}\n * @param {Object} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {}\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n\n/**\n * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n * property.\n * @suppress {missingProperties}\n * @param {Object} pbf PBF.\n * @param {Object} feature Raw feature.\n * @param {Array.<number>} flatCoordinates Array to store flat coordinates in.\n * @param {Array.<number>} ends Array to store ends in.\n * @private\n */\nMVT.prototype.readRawGeometry_ = function(pbf, feature, flatCoordinates, ends) {\n  pbf.pos = feature.geometry;\n\n  const end = pbf.readVarint() + pbf.pos;\n  let cmd = 1;\n  let length = 0;\n  let x = 0;\n  let y = 0;\n  let coordsLen = 0;\n  let currentEnd = 0;\n\n  while (pbf.pos < end) {\n    if (!length) {\n      const cmdLen = pbf.readVarint();\n      cmd = cmdLen & 0x7;\n      length = cmdLen >> 3;\n    }\n\n    length--;\n\n    if (cmd === 1 || cmd === 2) {\n      x += pbf.readSVarint();\n      y += pbf.readSVarint();\n\n      if (cmd === 1) { // moveTo\n        if (coordsLen > currentEnd) {\n          ends.push(coordsLen);\n          currentEnd = coordsLen;\n        }\n      }\n\n      flatCoordinates.push(x, y);\n      coordsLen += 2;\n\n    } else if (cmd === 7) {\n\n      if (coordsLen > currentEnd) {\n        // close polygon\n        flatCoordinates.push(\n          flatCoordinates[currentEnd], flatCoordinates[currentEnd + 1]);\n        coordsLen += 2;\n      }\n\n    } else {\n      assert(false, 59); // Invalid command found in the PBF\n    }\n  }\n\n  if (coordsLen > currentEnd) {\n    ends.push(coordsLen);\n    currentEnd = coordsLen;\n  }\n\n};\n\n\n/**\n * @suppress {missingProperties}\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {module:ol/geom/GeometryType} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {module:ol/geom/GeometryType} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ?\n      GeometryType.POINT : GeometryType.MULTI_POINT;\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ?\n      GeometryType.LINE_STRING :\n      GeometryType.MULTI_LINE_STRING;\n  } else if (type === 3) {\n    geometryType = GeometryType.POLYGON;\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\n/**\n * @private\n * @param {Object} pbf PBF\n * @param {Object} rawFeature Raw Mapbox feature.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/Feature|module:ol/render/Feature} Feature.\n */\nMVT.prototype.createFeature_ = function(pbf, rawFeature, opt_options) {\n  const type = rawFeature.type;\n  if (type === 0) {\n    return null;\n  }\n\n  let feature;\n  const id = rawFeature.id;\n  const values = rawFeature.properties;\n  values[this.layerName_] = rawFeature.layer.name;\n\n  const flatCoordinates = [];\n  let ends = [];\n  this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n  const geometryType = getGeometryType(type, ends.length);\n\n  if (this.featureClass_ === RenderFeature) {\n    feature = new this.featureClass_(geometryType, flatCoordinates, ends, values, id);\n  } else {\n    let geom;\n    if (geometryType == GeometryType.POLYGON) {\n      const endss = [];\n      let offset = 0;\n      let prevEndIndex = 0;\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n          endss.push(ends.slice(prevEndIndex, i));\n          prevEndIndex = i;\n        }\n        offset = end;\n      }\n      if (endss.length > 1) {\n        ends = endss;\n        geom = new MultiPolygon(null);\n      } else {\n        geom = new Polygon(null);\n      }\n    } else {\n      geom = geometryType === GeometryType.POINT ? new Point(null) :\n        geometryType === GeometryType.LINE_STRING ? new LineString(null) :\n          geometryType === GeometryType.POLYGON ? new Polygon(null) :\n            geometryType === GeometryType.MULTI_POINT ? new MultiPoint (null) :\n              geometryType === GeometryType.MULTI_LINE_STRING ? new MultiLineString(null) :\n                null;\n    }\n    geom.setFlatCoordinates(GeometryLayout.XY, flatCoordinates, ends);\n    feature = new this.featureClass_();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    }\n    const geometry = transformWithOptions(geom, false, this.adaptOptions(opt_options));\n    feature.setGeometry(geometry);\n    feature.setId(id);\n    feature.setProperties(values);\n  }\n\n  return feature;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMVT.prototype.getLastExtent = function() {\n  return this.extent_;\n};\n\n\n/**\n * @inheritDoc\n */\nMVT.prototype.getType = function() {\n  return FormatType.ARRAY_BUFFER;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMVT.prototype.readFeatures = function(source, opt_options) {\n  const layers = this.layers_;\n\n  const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n  const pbfLayers = pbf.readFields(layersPBFReader, {});\n  /** @type {Array.<module:ol/Feature|module:ol/render/Feature>} */\n  const features = [];\n  for (const name in pbfLayers) {\n    if (layers && layers.indexOf(name) == -1) {\n      continue;\n    }\n    const pbfLayer = pbfLayers[name];\n\n    for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n      const rawFeature = readRawFeature(pbf, pbfLayer, i);\n      features.push(this.createFeature_(pbf, rawFeature));\n    }\n    this.extent_ = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n  }\n\n  return features;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMVT.prototype.readProjection = function(source) {\n  return this.dataProjection;\n};\n\n\n/**\n * Sets the layers that features will be read from.\n * @param {Array.<string>} layers Layers.\n * @api\n */\nMVT.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * Not implemented.\n * @override\n */\nMVT.prototype.readFeature = function() {};\n\n\n/**\n * Not implemented.\n * @override\n */\nMVT.prototype.readGeometry = function() {};\n\n\n/**\n * Not implemented.\n * @override\n */\nMVT.prototype.writeFeature = function() {};\n\n\n/**\n * Not implemented.\n * @override\n */\nMVT.prototype.writeGeometry = function() {};\n\n\n/**\n * Not implemented.\n * @override\n */\nMVT.prototype.writeFeatures = function() {};\nexport default MVT;\n","/**\n * @module ol/webgl/Shader\n */\nimport {FALSE} from '../functions.js';\n\n/**\n * @constructor\n * @abstract\n * @param {string} source Source.\n * @struct\n */\nconst WebGLShader = function(source) {\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.source_ = source;\n\n};\n\n\n/**\n * @abstract\n * @return {number} Type.\n */\nWebGLShader.prototype.getType = function() {};\n\n\n/**\n * @return {string} Source.\n */\nWebGLShader.prototype.getSource = function() {\n  return this.source_;\n};\n\n\n/**\n * @return {boolean} Is animated?\n */\nWebGLShader.prototype.isAnimated = FALSE;\nexport default WebGLShader;\n","/**\n * @module ol/webgl/Fragment\n */\nimport {inherits} from '../util.js';\nimport {FRAGMENT_SHADER} from '../webgl.js';\nimport WebGLShader from '../webgl/Shader.js';\n\n/**\n * @constructor\n * @extends {module:ol/webgl/Shader}\n * @param {string} source Source.\n * @struct\n */\nconst WebGLFragment = function(source) {\n  WebGLShader.call(this, source);\n};\n\ninherits(WebGLFragment, WebGLShader);\n\n\n/**\n * @inheritDoc\n */\nWebGLFragment.prototype.getType = function() {\n  return FRAGMENT_SHADER;\n};\nexport default WebGLFragment;\n","/**\n * @module ol/webgl/Vertex\n */\nimport {inherits} from '../util.js';\nimport {VERTEX_SHADER} from '../webgl.js';\nimport WebGLShader from '../webgl/Shader.js';\n\n/**\n * @constructor\n * @extends {module:ol/webgl/Shader}\n * @param {string} source Source.\n * @struct\n */\nconst WebGLVertex = function(source) {\n  WebGLShader.call(this, source);\n};\n\ninherits(WebGLVertex, WebGLShader);\n\n\n/**\n * @inheritDoc\n */\nWebGLVertex.prototype.getType = function() {\n  return VERTEX_SHADER;\n};\nexport default WebGLVertex;\n","/**\n * @module ol/render/webgl/circlereplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport const fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_center;\\nvarying vec2 v_offset;\\nvarying float v_halfWidth;\\nvarying float v_pixelRatio;\\n\\n\\n\\nuniform float u_opacity;\\nuniform vec4 u_fillColor;\\nuniform vec4 u_strokeColor;\\nuniform vec2 u_size;\\n\\nvoid main(void) {\\n  vec2 windowCenter = vec2((v_center.x + 1.0) / 2.0 * u_size.x * v_pixelRatio,\\n      (v_center.y + 1.0) / 2.0 * u_size.y * v_pixelRatio);\\n  vec2 windowOffset = vec2((v_offset.x + 1.0) / 2.0 * u_size.x * v_pixelRatio,\\n      (v_offset.y + 1.0) / 2.0 * u_size.y * v_pixelRatio);\\n  float radius = length(windowCenter - windowOffset);\\n  float dist = length(windowCenter - gl_FragCoord.xy);\\n  if (dist > radius + v_halfWidth) {\\n    if (u_strokeColor.a == 0.0) {\\n      gl_FragColor = u_fillColor;\\n    } else {\\n      gl_FragColor = u_strokeColor;\\n    }\\n    gl_FragColor.a = gl_FragColor.a - (dist - (radius + v_halfWidth));\\n  } else if (u_fillColor.a == 0.0) {\\n    // Hooray, no fill, just stroke. We can use real antialiasing.\\n    gl_FragColor = u_strokeColor;\\n    if (dist < radius - v_halfWidth) {\\n      gl_FragColor.a = gl_FragColor.a - (radius - v_halfWidth - dist);\\n    }\\n  } else {\\n    gl_FragColor = u_fillColor;\\n    float strokeDist = radius - v_halfWidth;\\n    float antialias = 2.0 * v_pixelRatio;\\n    if (dist > strokeDist) {\\n      gl_FragColor = u_strokeColor;\\n    } else if (dist >= strokeDist - antialias) {\\n      float step = smoothstep(strokeDist - antialias, strokeDist, dist);\\n      gl_FragColor = mix(u_fillColor, u_strokeColor, step);\\n    }\\n  }\\n  gl_FragColor.a = gl_FragColor.a * u_opacity;\\n  if (gl_FragColor.a <= 0.0) {\\n    discard;\\n  }\\n}\\n' :\n  'precision mediump float;varying vec2 a;varying vec2 b;varying float c;varying float d;uniform float m;uniform vec4 n;uniform vec4 o;uniform vec2 p;void main(void){vec2 windowCenter=vec2((a.x+1.0)/2.0*p.x*d,(a.y+1.0)/2.0*p.y*d);vec2 windowOffset=vec2((b.x+1.0)/2.0*p.x*d,(b.y+1.0)/2.0*p.y*d);float radius=length(windowCenter-windowOffset);float dist=length(windowCenter-gl_FragCoord.xy);if(dist>radius+c){if(o.a==0.0){gl_FragColor=n;}else{gl_FragColor=o;}gl_FragColor.a=gl_FragColor.a-(dist-(radius+c));}else if(n.a==0.0){gl_FragColor=o;if(dist<radius-c){gl_FragColor.a=gl_FragColor.a-(radius-c-dist);}} else{gl_FragColor=n;float strokeDist=radius-c;float antialias=2.0*d;if(dist>strokeDist){gl_FragColor=o;}else if(dist>=strokeDist-antialias){float step=smoothstep(strokeDist-antialias,strokeDist,dist);gl_FragColor=mix(n,o,step);}} gl_FragColor.a=gl_FragColor.a*m;if(gl_FragColor.a<=0.0){discard;}}');\n\nexport const vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_center;\\nvarying vec2 v_offset;\\nvarying float v_halfWidth;\\nvarying float v_pixelRatio;\\n\\n\\nattribute vec2 a_position;\\nattribute float a_instruction;\\nattribute float a_radius;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\nuniform float u_lineWidth;\\nuniform float u_pixelRatio;\\n\\nvoid main(void) {\\n  mat4 offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  v_center = vec4(u_projectionMatrix * vec4(a_position, 0.0, 1.0)).xy;\\n  v_pixelRatio = u_pixelRatio;\\n  float lineWidth = u_lineWidth * u_pixelRatio;\\n  v_halfWidth = lineWidth / 2.0;\\n  if (lineWidth == 0.0) {\\n    lineWidth = 2.0 * u_pixelRatio;\\n  }\\n  vec2 offset;\\n  // Radius with anitaliasing (roughly).\\n  float radius = a_radius + 3.0 * u_pixelRatio;\\n  // Until we get gl_VertexID in WebGL, we store an instruction.\\n  if (a_instruction == 0.0) {\\n    // Offsetting the edges of the triangle by lineWidth / 2 is necessary, however\\n    // we should also leave some space for the antialiasing, thus we offset by lineWidth.\\n    offset = vec2(-1.0, 1.0);\\n  } else if (a_instruction == 1.0) {\\n    offset = vec2(-1.0, -1.0);\\n  } else if (a_instruction == 2.0) {\\n    offset = vec2(1.0, -1.0);\\n  } else {\\n    offset = vec2(1.0, 1.0);\\n  }\\n\\n  gl_Position = u_projectionMatrix * vec4(a_position + offset * radius, 0.0, 1.0) +\\n      offsetMatrix * vec4(offset * lineWidth, 0.0, 0.0);\\n  v_offset = vec4(u_projectionMatrix * vec4(a_position.x + a_radius, a_position.y,\\n      0.0, 1.0)).xy;\\n\\n  if (distance(v_center, v_offset) > 20000.0) {\\n    gl_Position = vec4(v_center, 0.0, 1.0);\\n  }\\n}\\n\\n\\n' :\n  'varying vec2 a;varying vec2 b;varying float c;varying float d;attribute vec2 e;attribute float f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;uniform float k;uniform float l;void main(void){mat4 offsetMatrix=i*j;a=vec4(h*vec4(e,0.0,1.0)).xy;d=l;float lineWidth=k*l;c=lineWidth/2.0;if(lineWidth==0.0){lineWidth=2.0*l;}vec2 offset;float radius=g+3.0*l;if(f==0.0){offset=vec2(-1.0,1.0);}else if(f==1.0){offset=vec2(-1.0,-1.0);}else if(f==2.0){offset=vec2(1.0,-1.0);}else{offset=vec2(1.0,1.0);}gl_Position=h*vec4(e+offset*radius,0.0,1.0)+offsetMatrix*vec4(offset*lineWidth,0.0,0.0);b=vec4(h*vec4(e.x+g,e.y,0.0,1.0)).xy;if(distance(a,b)>20000.0){gl_Position=vec4(a,0.0,1.0);}}');\n","/**\n * @module ol/render/webgl/circlereplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\n/**\n * @constructor\n * @param {WebGLRenderingContext} gl GL.\n * @param {WebGLProgram} program Program.\n * @struct\n */\nconst Locations = function(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_lineWidth = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_lineWidth' : 'k');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_pixelRatio = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_pixelRatio' : 'l');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'm');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_fillColor = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_fillColor' : 'n');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_strokeColor = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_strokeColor' : 'o');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_size = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_size' : 'p');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_instruction = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_instruction' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_radius = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_radius' : 'g');\n};\n\nexport default Locations;\n","/**\n * @module ol/vec/mat4\n */\n\n\n/**\n * @return {Array.<number>} 4x4 matrix representing a 3D identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n\n/**\n * @param {Array.<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {module:ol/transform~Transform} transform Transformation matrix.\n * @return {Array.<number>} 2D transformation matrix as flattened 4x4 matrix.\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n","/**\n * @module ol/render/webgl/Replay\n */\nimport {inherits} from '../../util.js';\nimport {getCenter} from '../../extent.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\nimport {create, fromTransform} from '../../vec/mat4.js';\nimport {ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, TRIANGLES,\n  UNSIGNED_INT, UNSIGNED_SHORT} from '../../webgl.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/render/VectorContext}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @struct\n */\nconst WebGLReplay = function(tolerance, maxExtent) {\n  VectorContext.call(this);\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.tolerance = tolerance;\n\n  /**\n   * @protected\n   * @const\n   * @type {module:ol/extent~Extent}\n   */\n  this.maxExtent = maxExtent;\n\n  /**\n   * The origin of the coordinate system for the point coordinates sent to\n   * the GPU. To eliminate jitter caused by precision problems in the GPU\n   * we use the \"Rendering Relative to Eye\" technique described in the \"3D\n   * Engine Design for Virtual Globes\" book.\n   * @protected\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.origin = getCenter(maxExtent);\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.projectionMatrix_ = createTransform();\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.offsetRotateMatrix_ = createTransform();\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.offsetScaleMatrix_ = createTransform();\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.tmpMat4_ = create();\n\n  /**\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.indices = [];\n\n  /**\n   * @protected\n   * @type {?module:ol/webgl/Buffer}\n   */\n  this.indicesBuffer = null;\n\n  /**\n   * Start index per feature (the index).\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.startIndices = [];\n\n  /**\n   * Start index per feature (the feature).\n   * @protected\n   * @type {Array.<module:ol/Feature|module:ol/render/Feature>}\n   */\n  this.startIndicesFeature = [];\n\n  /**\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.vertices = [];\n\n  /**\n   * @protected\n   * @type {?module:ol/webgl/Buffer}\n   */\n  this.verticesBuffer = null;\n\n  /**\n   * Optional parameter for PolygonReplay instances.\n   * @protected\n   * @type {module:ol/render/webgl/LineStringReplay|undefined}\n   */\n  this.lineStringReplay = undefined;\n\n};\n\ninherits(WebGLReplay, VectorContext);\n\n\n/**\n * @abstract\n * @param {module:ol/webgl/Context} context WebGL context.\n * @return {function()} Delete resources function.\n */\nWebGLReplay.prototype.getDeleteResourcesFunction = function(context) {};\n\n\n/**\n * @abstract\n * @param {module:ol/webgl/Context} context Context.\n */\nWebGLReplay.prototype.finish = function(context) {};\n\n\n/**\n * @abstract\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {module:ol/size~Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @return {module:ol/render/webgl/circlereplay/defaultshader/Locations|\n            module:ol/render/webgl/linestringreplay/defaultshader/Locations|\n            module:ol/render/webgl/polygonreplay/defaultshader/Locations|\n            module:ol/render/webgl/texturereplay/defaultshader/Locations} Locations.\n */\nWebGLReplay.prototype.setUpProgram = function(gl, context, size, pixelRatio) {};\n\n\n/**\n * @abstract\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/render/webgl/circlereplay/defaultshader/Locations|\n           module:ol/render/webgl/linestringreplay/defaultshader/Locations|\n           module:ol/render/webgl/polygonreplay/defaultshader/Locations|\n           module:ol/render/webgl/texturereplay/defaultshader/Locations} locations Locations.\n */\nWebGLReplay.prototype.shutDownProgram = function(gl, locations) {};\n\n\n/**\n * @abstract\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {boolean} hitDetection Hit detection mode.\n */\nWebGLReplay.prototype.drawReplay = function(gl, context, skippedFeaturesHash, hitDetection) {};\n\n\n/**\n * @abstract\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n * @param {module:ol/extent~Extent=} opt_hitExtent Hit extent: Only features intersecting this extent are checked.\n * @return {T|undefined} Callback result.\n * @template T\n */\nWebGLReplay.prototype.drawHitDetectionReplayOneByOne = function(gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {};\n\n\n/**\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n * @param {module:ol/extent~Extent=} opt_hitExtent Hit extent: Only features intersecting\n *  this extent are checked.\n * @return {T|undefined} Callback result.\n * @template T\n */\nWebGLReplay.prototype.drawHitDetectionReplay = function(gl, context, skippedFeaturesHash,\n  featureCallback, oneByOne, opt_hitExtent) {\n  if (!oneByOne) {\n    // draw all hit-detection features in \"once\" (by texture group)\n    return this.drawHitDetectionReplayAll(gl, context,\n      skippedFeaturesHash, featureCallback);\n  } else {\n    // draw hit-detection features one by one\n    return this.drawHitDetectionReplayOneByOne(gl, context,\n      skippedFeaturesHash, featureCallback, opt_hitExtent);\n  }\n};\n\n\n/**\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n * @return {T|undefined} Callback result.\n * @template T\n */\nWebGLReplay.prototype.drawHitDetectionReplayAll = function(gl, context, skippedFeaturesHash,\n  featureCallback) {\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n  this.drawReplay(gl, context, skippedFeaturesHash, true);\n\n  const result = featureCallback(null);\n  if (result) {\n    return result;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {module:ol/webgl/Context} context Context.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} opacity Global opacity.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n * @param {module:ol/extent~Extent=} opt_hitExtent Hit extent: Only features intersecting\n *  this extent are checked.\n * @return {T|undefined} Callback result.\n * @template T\n */\nWebGLReplay.prototype.replay = function(context,\n  center, resolution, rotation, size, pixelRatio,\n  opacity, skippedFeaturesHash,\n  featureCallback, oneByOne, opt_hitExtent) {\n  const gl = context.getGL();\n  let tmpStencil, tmpStencilFunc, tmpStencilMaskVal, tmpStencilRef, tmpStencilMask,\n      tmpStencilOpFail, tmpStencilOpPass, tmpStencilOpZFail;\n\n  if (this.lineStringReplay) {\n    tmpStencil = gl.isEnabled(gl.STENCIL_TEST);\n    tmpStencilFunc = gl.getParameter(gl.STENCIL_FUNC);\n    tmpStencilMaskVal = gl.getParameter(gl.STENCIL_VALUE_MASK);\n    tmpStencilRef = gl.getParameter(gl.STENCIL_REF);\n    tmpStencilMask = gl.getParameter(gl.STENCIL_WRITEMASK);\n    tmpStencilOpFail = gl.getParameter(gl.STENCIL_FAIL);\n    tmpStencilOpPass = gl.getParameter(gl.STENCIL_PASS_DEPTH_PASS);\n    tmpStencilOpZFail = gl.getParameter(gl.STENCIL_PASS_DEPTH_FAIL);\n\n    gl.enable(gl.STENCIL_TEST);\n    gl.clear(gl.STENCIL_BUFFER_BIT);\n    gl.stencilMask(255);\n    gl.stencilFunc(gl.ALWAYS, 1, 255);\n    gl.stencilOp(gl.KEEP, gl.KEEP, gl.REPLACE);\n\n    this.lineStringReplay.replay(context,\n      center, resolution, rotation, size, pixelRatio,\n      opacity, skippedFeaturesHash,\n      featureCallback, oneByOne, opt_hitExtent);\n\n    gl.stencilMask(0);\n    gl.stencilFunc(gl.NOTEQUAL, 1, 255);\n  }\n\n  context.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n\n  context.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n\n  const locations = this.setUpProgram(gl, context, size, pixelRatio);\n\n  // set the \"uniform\" values\n  const projectionMatrix = resetTransform(this.projectionMatrix_);\n  scaleTransform(projectionMatrix, 2 / (resolution * size[0]), 2 / (resolution * size[1]));\n  rotateTransform(projectionMatrix, -rotation);\n  translateTransform(projectionMatrix, -(center[0] - this.origin[0]), -(center[1] - this.origin[1]));\n\n  const offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n  scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n\n  const offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n  if (rotation !== 0) {\n    rotateTransform(offsetRotateMatrix, -rotation);\n  }\n\n  gl.uniformMatrix4fv(locations.u_projectionMatrix, false,\n    fromTransform(this.tmpMat4_, projectionMatrix));\n  gl.uniformMatrix4fv(locations.u_offsetScaleMatrix, false,\n    fromTransform(this.tmpMat4_, offsetScaleMatrix));\n  gl.uniformMatrix4fv(locations.u_offsetRotateMatrix, false,\n    fromTransform(this.tmpMat4_, offsetRotateMatrix));\n  gl.uniform1f(locations.u_opacity, opacity);\n\n  // draw!\n  let result;\n  if (featureCallback === undefined) {\n    this.drawReplay(gl, context, skippedFeaturesHash, false);\n  } else {\n    // draw feature by feature for the hit-detection\n    result = this.drawHitDetectionReplay(gl, context, skippedFeaturesHash,\n      featureCallback, oneByOne, opt_hitExtent);\n  }\n\n  // disable the vertex attrib arrays\n  this.shutDownProgram(gl, locations);\n\n  if (this.lineStringReplay) {\n    if (!tmpStencil) {\n      gl.disable(gl.STENCIL_TEST);\n    }\n    gl.clear(gl.STENCIL_BUFFER_BIT);\n    gl.stencilFunc(/** @type {number} */ (tmpStencilFunc),\n      /** @type {number} */ (tmpStencilRef), /** @type {number} */ (tmpStencilMaskVal));\n    gl.stencilMask(/** @type {number} */ (tmpStencilMask));\n    gl.stencilOp(/** @type {number} */ (tmpStencilOpFail),\n      /** @type {number} */ (tmpStencilOpZFail), /** @type {number} */ (tmpStencilOpPass));\n  }\n\n  return result;\n};\n\n/**\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {number} start Start index.\n * @param {number} end End index.\n */\nWebGLReplay.prototype.drawElements = function(\n  gl, context, start, end) {\n  const elementType = context.hasOESElementIndexUint ?\n    UNSIGNED_INT : UNSIGNED_SHORT;\n  const elementSize = context.hasOESElementIndexUint ? 4 : 2;\n\n  const numItems = end - start;\n  const offsetInBytes = start * elementSize;\n  gl.drawElements(TRIANGLES, numItems, elementType, offsetInBytes);\n};\nexport default WebGLReplay;\n","/**\n * @module ol/render/webgl\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport const DEFAULT_FONT = '10px sans-serif';\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport const DEFAULT_FILLSTYLE = [0.0, 0.0, 0.0, 1.0];\n\n\n/**\n * @const\n * @type {string}\n */\nexport const DEFAULT_LINECAP = 'round';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nexport const DEFAULT_LINEDASH = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEFAULT_LINEDASHOFFSET = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport const DEFAULT_LINEJOIN = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEFAULT_MITERLIMIT = 10;\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport const DEFAULT_STROKESTYLE = [0.0, 0.0, 0.0, 1.0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEFAULT_TEXTALIGN = 0.5;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEFAULT_TEXTBASELINE = 0.5;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEFAULT_LINEWIDTH = 1;\n\n/**\n * @const\n * @type {number}\n */\nexport const EPSILON = Number.EPSILON || 2.220446049250313e-16;\n\n/**\n * Calculates the orientation of a triangle based on the determinant method.\n * @param {number} x1 First X coordinate.\n * @param {number} y1 First Y coordinate.\n * @param {number} x2 Second X coordinate.\n * @param {number} y2 Second Y coordinate.\n * @param {number} x3 Third X coordinate.\n * @param {number} y3 Third Y coordinate.\n * @return {boolean|undefined} Triangle is clockwise.\n */\nexport const triangleIsCounterClockwise = function(x1, y1, x2, y2, x3, y3) {\n  const area = (x2 - x1) * (y3 - y1) - (x3 - x1) * (y2 - y1);\n  return (area <= EPSILON && area >= -EPSILON) ?\n    undefined : area > 0;\n};\n\n","/**\n * @module ol/webgl/Buffer\n */\nimport {STATIC_DRAW, STREAM_DRAW, DYNAMIC_DRAW} from '../webgl.js';\n\n/**\n * @enum {number}\n */\nconst BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW\n};\n\n/**\n * @constructor\n * @param {Array.<number>=} opt_arr Array.\n * @param {number=} opt_usage Usage.\n * @struct\n */\nconst WebGLBuffer = function(opt_arr, opt_usage) {\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.arr_ = opt_arr !== undefined ? opt_arr : [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.usage_ = opt_usage !== undefined ? opt_usage : BufferUsage.STATIC_DRAW;\n\n};\n\n\n/**\n * @return {Array.<number>} Array.\n */\nWebGLBuffer.prototype.getArray = function() {\n  return this.arr_;\n};\n\n\n/**\n * @return {number} Usage.\n */\nWebGLBuffer.prototype.getUsage = function() {\n  return this.usage_;\n};\n\nexport default WebGLBuffer;\n","/**\n * @module ol/render/webgl/CircleReplay\n */\nimport {getUid, inherits} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {intersects} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {translate} from '../../geom/flat/transform.js';\nimport {fragment, vertex} from '../webgl/circlereplay/defaultshader.js';\nimport Locations from '../webgl/circlereplay/defaultshader/Locations.js';\nimport WebGLReplay from '../webgl/Replay.js';\nimport {DEFAULT_LINEDASH, DEFAULT_LINEDASHOFFSET, DEFAULT_STROKESTYLE,\n  DEFAULT_FILLSTYLE, DEFAULT_LINEWIDTH} from '../webgl.js';\nimport {FLOAT} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/webgl/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @struct\n */\nconst WebGLCircleReplay = function(tolerance, maxExtent) {\n  WebGLReplay.call(this, tolerance, maxExtent);\n\n  /**\n   * @private\n   * @type {module:ol/render/webgl/circlereplay/defaultshader/Locations}\n   */\n  this.defaultLocations_ = null;\n\n  /**\n   * @private\n   * @type {Array.<Array.<Array.<number>|number>>}\n   */\n  this.styles_ = [];\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.styleIndices_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.radius_ = 0;\n\n  /**\n   * @private\n   * @type {{fillColor: (Array.<number>|null),\n   *         strokeColor: (Array.<number>|null),\n   *         lineDash: Array.<number>,\n   *         lineDashOffset: (number|undefined),\n   *         lineWidth: (number|undefined),\n   *         changed: boolean}|null}\n   */\n  this.state_ = {\n    fillColor: null,\n    strokeColor: null,\n    lineDash: null,\n    lineDashOffset: undefined,\n    lineWidth: undefined,\n    changed: false\n  };\n\n};\n\ninherits(WebGLCircleReplay, WebGLReplay);\n\n\n/**\n * @private\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nWebGLCircleReplay.prototype.drawCoordinates_ = function(\n  flatCoordinates, offset, end, stride) {\n  let numVertices = this.vertices.length;\n  let numIndices = this.indices.length;\n  let n = numVertices / 4;\n  let i, ii;\n  for (i = offset, ii = end; i < ii; i += stride) {\n    this.vertices[numVertices++] = flatCoordinates[i];\n    this.vertices[numVertices++] = flatCoordinates[i + 1];\n    this.vertices[numVertices++] = 0;\n    this.vertices[numVertices++] = this.radius_;\n\n    this.vertices[numVertices++] = flatCoordinates[i];\n    this.vertices[numVertices++] = flatCoordinates[i + 1];\n    this.vertices[numVertices++] = 1;\n    this.vertices[numVertices++] = this.radius_;\n\n    this.vertices[numVertices++] = flatCoordinates[i];\n    this.vertices[numVertices++] = flatCoordinates[i + 1];\n    this.vertices[numVertices++] = 2;\n    this.vertices[numVertices++] = this.radius_;\n\n    this.vertices[numVertices++] = flatCoordinates[i];\n    this.vertices[numVertices++] = flatCoordinates[i + 1];\n    this.vertices[numVertices++] = 3;\n    this.vertices[numVertices++] = this.radius_;\n\n    this.indices[numIndices++] = n;\n    this.indices[numIndices++] = n + 1;\n    this.indices[numIndices++] = n + 2;\n\n    this.indices[numIndices++] = n + 2;\n    this.indices[numIndices++] = n + 3;\n    this.indices[numIndices++] = n;\n\n    n += 4;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLCircleReplay.prototype.drawCircle = function(circleGeometry, feature) {\n  const radius = circleGeometry.getRadius();\n  const stride = circleGeometry.getStride();\n  if (radius) {\n    this.startIndices.push(this.indices.length);\n    this.startIndicesFeature.push(feature);\n    if (this.state_.changed) {\n      this.styleIndices_.push(this.indices.length);\n      this.state_.changed = false;\n    }\n\n    this.radius_ = radius;\n    let flatCoordinates = circleGeometry.getFlatCoordinates();\n    flatCoordinates = translate(flatCoordinates, 0, 2,\n      stride, -this.origin[0], -this.origin[1]);\n    this.drawCoordinates_(flatCoordinates, 0, 2, stride);\n  } else {\n    if (this.state_.changed) {\n      this.styles_.pop();\n      if (this.styles_.length) {\n        const lastState = this.styles_[this.styles_.length - 1];\n        this.state_.fillColor =  /** @type {Array.<number>} */ (lastState[0]);\n        this.state_.strokeColor = /** @type {Array.<number>} */ (lastState[1]);\n        this.state_.lineWidth = /** @type {number} */ (lastState[2]);\n        this.state_.changed = false;\n      }\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n **/\nWebGLCircleReplay.prototype.finish = function(context) {\n  // create, bind, and populate the vertices buffer\n  this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n  // create, bind, and populate the indices buffer\n  this.indicesBuffer = new WebGLBuffer(this.indices);\n\n  this.startIndices.push(this.indices.length);\n\n  //Clean up, if there is nothing to draw\n  if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n    this.styles_ = [];\n  }\n\n  this.vertices = null;\n  this.indices = null;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLCircleReplay.prototype.getDeleteResourcesFunction = function(context) {\n  // We only delete our stuff here. The shaders and the program may\n  // be used by other CircleReplay instances (for other layers). And\n  // they will be deleted when disposing of the module:ol/webgl/Context~WebGLContext\n  // object.\n  const verticesBuffer = this.verticesBuffer;\n  const indicesBuffer = this.indicesBuffer;\n  return function() {\n    context.deleteBuffer(verticesBuffer);\n    context.deleteBuffer(indicesBuffer);\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLCircleReplay.prototype.setUpProgram = function(gl, context, size, pixelRatio) {\n  // get the program\n  const program = context.getProgram(fragment, vertex);\n\n  // get the locations\n  let locations;\n  if (!this.defaultLocations_) {\n    locations = new Locations(gl, program);\n    this.defaultLocations_ = locations;\n  } else {\n    locations = this.defaultLocations_;\n  }\n\n  context.useProgram(program);\n\n  // enable the vertex attrib arrays\n  gl.enableVertexAttribArray(locations.a_position);\n  gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n    false, 16, 0);\n\n  gl.enableVertexAttribArray(locations.a_instruction);\n  gl.vertexAttribPointer(locations.a_instruction, 1, FLOAT,\n    false, 16, 8);\n\n  gl.enableVertexAttribArray(locations.a_radius);\n  gl.vertexAttribPointer(locations.a_radius, 1, FLOAT,\n    false, 16, 12);\n\n  // Enable renderer specific uniforms.\n  gl.uniform2fv(locations.u_size, size);\n  gl.uniform1f(locations.u_pixelRatio, pixelRatio);\n\n  return locations;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLCircleReplay.prototype.shutDownProgram = function(gl, locations) {\n  gl.disableVertexAttribArray(locations.a_position);\n  gl.disableVertexAttribArray(locations.a_instruction);\n  gl.disableVertexAttribArray(locations.a_radius);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLCircleReplay.prototype.drawReplay = function(gl, context, skippedFeaturesHash, hitDetection) {\n  if (!isEmpty(skippedFeaturesHash)) {\n    this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n  } else {\n    //Draw by style groups to minimize drawElements() calls.\n    let i, start, end, nextStyle;\n    end = this.startIndices[this.startIndices.length - 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      start = this.styleIndices_[i];\n      nextStyle = this.styles_[i];\n      this.setFillStyle_(gl, /** @type {Array.<number>} */ (nextStyle[0]));\n      this.setStrokeStyle_(gl, /** @type {Array.<number>} */ (nextStyle[1]),\n        /** @type {number} */ (nextStyle[2]));\n      this.drawElements(gl, context, start, end);\n      end = start;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLCircleReplay.prototype.drawHitDetectionReplayOneByOne = function(gl, context, skippedFeaturesHash,\n  featureCallback, opt_hitExtent) {\n  let i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex;\n  featureIndex = this.startIndices.length - 2;\n  end = this.startIndices[featureIndex + 1];\n  for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n    nextStyle = this.styles_[i];\n    this.setFillStyle_(gl, /** @type {Array.<number>} */ (nextStyle[0]));\n    this.setStrokeStyle_(gl, /** @type {Array.<number>} */ (nextStyle[1]),\n      /** @type {number} */ (nextStyle[2]));\n    groupStart = this.styleIndices_[i];\n\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      start = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid] === undefined &&\n          feature.getGeometry() &&\n          (opt_hitExtent === undefined || intersects(\n            /** @type {Array<number>} */ (opt_hitExtent),\n            feature.getGeometry().getExtent()))) {\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        this.drawElements(gl, context, start, end);\n\n        const result = featureCallback(feature);\n\n        if (result) {\n          return result;\n        }\n\n      }\n      featureIndex--;\n      end = start;\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {Object} skippedFeaturesHash Ids of features to skip.\n */\nWebGLCircleReplay.prototype.drawReplaySkipping_ = function(gl, context, skippedFeaturesHash) {\n  let i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex, featureStart;\n  featureIndex = this.startIndices.length - 2;\n  end = start = this.startIndices[featureIndex + 1];\n  for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n    nextStyle = this.styles_[i];\n    this.setFillStyle_(gl, /** @type {Array.<number>} */ (nextStyle[0]));\n    this.setStrokeStyle_(gl, /** @type {Array.<number>} */ (nextStyle[1]),\n      /** @type {number} */ (nextStyle[2]));\n    groupStart = this.styleIndices_[i];\n\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      featureStart = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid]) {\n        if (start !== end) {\n          this.drawElements(gl, context, start, end);\n        }\n        end = featureStart;\n      }\n      featureIndex--;\n      start = featureStart;\n    }\n    if (start !== end) {\n      this.drawElements(gl, context, start, end);\n    }\n    start = end = groupStart;\n  }\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {Array.<number>} color Color.\n */\nWebGLCircleReplay.prototype.setFillStyle_ = function(gl, color) {\n  gl.uniform4fv(this.defaultLocations_.u_fillColor, color);\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {Array.<number>} color Color.\n * @param {number} lineWidth Line width.\n */\nWebGLCircleReplay.prototype.setStrokeStyle_ = function(gl, color, lineWidth) {\n  gl.uniform4fv(this.defaultLocations_.u_strokeColor, color);\n  gl.uniform1f(this.defaultLocations_.u_lineWidth, lineWidth);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLCircleReplay.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  let strokeStyleColor, strokeStyleWidth;\n  if (strokeStyle) {\n    const strokeStyleLineDash = strokeStyle.getLineDash();\n    this.state_.lineDash = strokeStyleLineDash ?\n      strokeStyleLineDash : DEFAULT_LINEDASH;\n    const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n    this.state_.lineDashOffset = strokeStyleLineDashOffset ?\n      strokeStyleLineDashOffset : DEFAULT_LINEDASHOFFSET;\n    strokeStyleColor = strokeStyle.getColor();\n    if (!(strokeStyleColor instanceof CanvasGradient) &&\n        !(strokeStyleColor instanceof CanvasPattern)) {\n      strokeStyleColor = asArray(strokeStyleColor).map(function(c, i) {\n        return i != 3 ? c / 255 : c;\n      }) || DEFAULT_STROKESTYLE;\n    } else {\n      strokeStyleColor = DEFAULT_STROKESTYLE;\n    }\n    strokeStyleWidth = strokeStyle.getWidth();\n    strokeStyleWidth = strokeStyleWidth !== undefined ?\n      strokeStyleWidth : DEFAULT_LINEWIDTH;\n  } else {\n    strokeStyleColor = [0, 0, 0, 0];\n    strokeStyleWidth = 0;\n  }\n  let fillStyleColor = fillStyle ? fillStyle.getColor() : [0, 0, 0, 0];\n  if (!(fillStyleColor instanceof CanvasGradient) &&\n      !(fillStyleColor instanceof CanvasPattern)) {\n    fillStyleColor = asArray(fillStyleColor).map(function(c, i) {\n      return i != 3 ? c / 255 : c;\n    }) || DEFAULT_FILLSTYLE;\n  } else {\n    fillStyleColor = DEFAULT_FILLSTYLE;\n  }\n  if (!this.state_.strokeColor || !equals(this.state_.strokeColor, strokeStyleColor) ||\n      !this.state_.fillColor || !equals(this.state_.fillColor, fillStyleColor) ||\n      this.state_.lineWidth !== strokeStyleWidth) {\n    this.state_.changed = true;\n    this.state_.fillColor = fillStyleColor;\n    this.state_.strokeColor = strokeStyleColor;\n    this.state_.lineWidth = strokeStyleWidth;\n    this.styles_.push([fillStyleColor, strokeStyleColor, strokeStyleWidth]);\n  }\n};\nexport default WebGLCircleReplay;\n","/**\n * @module ol/render/webgl/texturereplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport const fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\nvarying float v_opacity;\\n\\nuniform float u_opacity;\\nuniform sampler2D u_image;\\n\\nvoid main(void) {\\n  vec4 texColor = texture2D(u_image, v_texCoord);\\n  gl_FragColor.rgb = texColor.rgb;\\n  float alpha = texColor.a * v_opacity * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;varying vec2 a;varying float b;uniform float k;uniform sampler2D l;void main(void){vec4 texColor=texture2D(l,a);gl_FragColor.rgb=texColor.rgb;float alpha=texColor.a*b*k;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\nexport const vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\nvarying float v_opacity;\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\nattribute vec2 a_offsets;\\nattribute float a_opacity;\\nattribute float a_rotateWithView;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\n\\nvoid main(void) {\\n  mat4 offsetMatrix = u_offsetScaleMatrix;\\n  if (a_rotateWithView == 1.0) {\\n    offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  }\\n  vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\\n  v_texCoord = a_texCoord;\\n  v_opacity = a_opacity;\\n}\\n\\n\\n' :\n  'varying vec2 a;varying float b;attribute vec2 c;attribute vec2 d;attribute vec2 e;attribute float f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;void main(void){mat4 offsetMatrix=i;if(g==1.0){offsetMatrix=i*j;}vec4 offsets=offsetMatrix*vec4(e,0.0,0.0);gl_Position=h*vec4(c,0.0,1.0)+offsets;a=d;b=f;}');\n","/**\n * @module ol/render/webgl/texturereplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\n/**\n * @constructor\n * @param {WebGLRenderingContext} gl GL.\n * @param {WebGLProgram} program Program.\n * @struct\n */\nconst Locations = function(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'k');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_image = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_image' : 'l');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'c');\n\n  /**\n   * @type {number}\n   */\n  this.a_texCoord = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_texCoord' : 'd');\n\n  /**\n   * @type {number}\n   */\n  this.a_offsets = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_offsets' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_opacity = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_opacity' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_rotateWithView = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_rotateWithView' : 'g');\n};\n\nexport default Locations;\n","/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored'\n};\n","/**\n * @module ol/webgl/Context\n */\nimport {getUid, inherits} from '../util.js';\nimport {EXTENSIONS as WEBGL_EXTENSIONS} from '../webgl.js';\nimport Disposable from '../Disposable.js';\nimport {includes} from '../array.js';\nimport {listen, unlistenAll} from '../events.js';\nimport {clear} from '../obj.js';\nimport {ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, TEXTURE_2D, TEXTURE_WRAP_S, TEXTURE_WRAP_T} from '../webgl.js';\nimport ContextEventType from '../webgl/ContextEventType.js';\n\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {module:ol/webgl/Buffer} buf\n * @property {WebGLBuffer} buffer\n */\n\n\n/**\n * @classdesc\n * A WebGL context for accessing low-level WebGL capabilities.\n *\n * @constructor\n * @extends {module:ol/Disposable}\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {WebGLRenderingContext} gl GL.\n */\nconst WebGLContext = function(canvas, gl) {\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = canvas;\n\n  /**\n   * @private\n   * @type {WebGLRenderingContext}\n   */\n  this.gl_ = gl;\n\n  /**\n   * @private\n   * @type {!Object.<string, module:ol/webgl/Context~BufferCacheEntry>}\n   */\n  this.bufferCache_ = {};\n\n  /**\n   * @private\n   * @type {!Object.<string, WebGLShader>}\n   */\n  this.shaderCache_ = {};\n\n  /**\n   * @private\n   * @type {!Object.<string, WebGLProgram>}\n   */\n  this.programCache_ = {};\n\n  /**\n   * @private\n   * @type {WebGLProgram}\n   */\n  this.currentProgram_ = null;\n\n  /**\n   * @private\n   * @type {WebGLFramebuffer}\n   */\n  this.hitDetectionFramebuffer_ = null;\n\n  /**\n   * @private\n   * @type {WebGLTexture}\n   */\n  this.hitDetectionTexture_ = null;\n\n  /**\n   * @private\n   * @type {WebGLRenderbuffer}\n   */\n  this.hitDetectionRenderbuffer_ = null;\n\n  /**\n   * @type {boolean}\n   */\n  this.hasOESElementIndexUint = includes(WEBGL_EXTENSIONS, 'OES_element_index_uint');\n\n  // use the OES_element_index_uint extension if available\n  if (this.hasOESElementIndexUint) {\n    gl.getExtension('OES_element_index_uint');\n  }\n\n  listen(this.canvas_, ContextEventType.LOST,\n    this.handleWebGLContextLost, this);\n  listen(this.canvas_, ContextEventType.RESTORED,\n    this.handleWebGLContextRestored, this);\n\n};\n\ninherits(WebGLContext, Disposable);\n\n\n/**\n * Just bind the buffer if it's in the cache. Otherwise create\n * the WebGL buffer, bind it, populate it, and add an entry to\n * the cache.\n * @param {number} target Target.\n * @param {module:ol/webgl/Buffer} buf Buffer.\n */\nWebGLContext.prototype.bindBuffer = function(target, buf) {\n  const gl = this.getGL();\n  const arr = buf.getArray();\n  const bufferKey = String(getUid(buf));\n  if (bufferKey in this.bufferCache_) {\n    const bufferCacheEntry = this.bufferCache_[bufferKey];\n    gl.bindBuffer(target, bufferCacheEntry.buffer);\n  } else {\n    const buffer = gl.createBuffer();\n    gl.bindBuffer(target, buffer);\n    let /** @type {ArrayBufferView} */ arrayBuffer;\n    if (target == ARRAY_BUFFER) {\n      arrayBuffer = new Float32Array(arr);\n    } else if (target == ELEMENT_ARRAY_BUFFER) {\n      arrayBuffer = this.hasOESElementIndexUint ?\n        new Uint32Array(arr) : new Uint16Array(arr);\n    }\n    gl.bufferData(target, arrayBuffer, buf.getUsage());\n    this.bufferCache_[bufferKey] = {\n      buf: buf,\n      buffer: buffer\n    };\n  }\n};\n\n\n/**\n * @param {module:ol/webgl/Buffer} buf Buffer.\n */\nWebGLContext.prototype.deleteBuffer = function(buf) {\n  const gl = this.getGL();\n  const bufferKey = String(getUid(buf));\n  const bufferCacheEntry = this.bufferCache_[bufferKey];\n  if (!gl.isContextLost()) {\n    gl.deleteBuffer(bufferCacheEntry.buffer);\n  }\n  delete this.bufferCache_[bufferKey];\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLContext.prototype.disposeInternal = function() {\n  unlistenAll(this.canvas_);\n  const gl = this.getGL();\n  if (!gl.isContextLost()) {\n    for (const key in this.bufferCache_) {\n      gl.deleteBuffer(this.bufferCache_[key].buffer);\n    }\n    for (const key in this.programCache_) {\n      gl.deleteProgram(this.programCache_[key]);\n    }\n    for (const key in this.shaderCache_) {\n      gl.deleteShader(this.shaderCache_[key]);\n    }\n    // delete objects for hit-detection\n    gl.deleteFramebuffer(this.hitDetectionFramebuffer_);\n    gl.deleteRenderbuffer(this.hitDetectionRenderbuffer_);\n    gl.deleteTexture(this.hitDetectionTexture_);\n  }\n};\n\n\n/**\n * @return {HTMLCanvasElement} Canvas.\n */\nWebGLContext.prototype.getCanvas = function() {\n  return this.canvas_;\n};\n\n\n/**\n * Get the WebGL rendering context\n * @return {WebGLRenderingContext} The rendering context.\n * @api\n */\nWebGLContext.prototype.getGL = function() {\n  return this.gl_;\n};\n\n\n/**\n * Get the frame buffer for hit detection.\n * @return {WebGLFramebuffer} The hit detection frame buffer.\n */\nWebGLContext.prototype.getHitDetectionFramebuffer = function() {\n  if (!this.hitDetectionFramebuffer_) {\n    this.initHitDetectionFramebuffer_();\n  }\n  return this.hitDetectionFramebuffer_;\n};\n\n\n/**\n * Get shader from the cache if it's in the cache. Otherwise, create\n * the WebGL shader, compile it, and add entry to cache.\n * @param {module:ol/webgl/Shader} shaderObject Shader object.\n * @return {WebGLShader} Shader.\n */\nWebGLContext.prototype.getShader = function(shaderObject) {\n  const shaderKey = String(getUid(shaderObject));\n  if (shaderKey in this.shaderCache_) {\n    return this.shaderCache_[shaderKey];\n  } else {\n    const gl = this.getGL();\n    const shader = gl.createShader(shaderObject.getType());\n    gl.shaderSource(shader, shaderObject.getSource());\n    gl.compileShader(shader);\n    this.shaderCache_[shaderKey] = shader;\n    return shader;\n  }\n};\n\n\n/**\n * Get the program from the cache if it's in the cache. Otherwise create\n * the WebGL program, attach the shaders to it, and add an entry to the\n * cache.\n * @param {module:ol/webgl/Fragment} fragmentShaderObject Fragment shader.\n * @param {module:ol/webgl/Vertex} vertexShaderObject Vertex shader.\n * @return {WebGLProgram} Program.\n */\nWebGLContext.prototype.getProgram = function(fragmentShaderObject, vertexShaderObject) {\n  const programKey = getUid(fragmentShaderObject) + '/' + getUid(vertexShaderObject);\n  if (programKey in this.programCache_) {\n    return this.programCache_[programKey];\n  } else {\n    const gl = this.getGL();\n    const program = gl.createProgram();\n    gl.attachShader(program, this.getShader(fragmentShaderObject));\n    gl.attachShader(program, this.getShader(vertexShaderObject));\n    gl.linkProgram(program);\n    this.programCache_[programKey] = program;\n    return program;\n  }\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nWebGLContext.prototype.handleWebGLContextLost = function() {\n  clear(this.bufferCache_);\n  clear(this.shaderCache_);\n  clear(this.programCache_);\n  this.currentProgram_ = null;\n  this.hitDetectionFramebuffer_ = null;\n  this.hitDetectionTexture_ = null;\n  this.hitDetectionRenderbuffer_ = null;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nWebGLContext.prototype.handleWebGLContextRestored = function() {\n};\n\n\n/**\n * Creates a 1x1 pixel framebuffer for the hit-detection.\n * @private\n */\nWebGLContext.prototype.initHitDetectionFramebuffer_ = function() {\n  const gl = this.gl_;\n  const framebuffer = gl.createFramebuffer();\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\n  const texture = createEmptyTexture(gl, 1, 1);\n  const renderbuffer = gl.createRenderbuffer();\n  gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\n  gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, 1, 1);\n  gl.framebufferTexture2D(\n    gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n  gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT,\n    gl.RENDERBUFFER, renderbuffer);\n\n  gl.bindTexture(gl.TEXTURE_2D, null);\n  gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n  this.hitDetectionFramebuffer_ = framebuffer;\n  this.hitDetectionTexture_ = texture;\n  this.hitDetectionRenderbuffer_ = renderbuffer;\n};\n\n\n/**\n * Use a program.  If the program is already in use, this will return `false`.\n * @param {WebGLProgram} program Program.\n * @return {boolean} Changed.\n * @api\n */\nWebGLContext.prototype.useProgram = function(program) {\n  if (program == this.currentProgram_) {\n    return false;\n  } else {\n    const gl = this.getGL();\n    gl.useProgram(program);\n    this.currentProgram_ = program;\n    return true;\n  }\n};\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\nfunction createTextureInternal(gl, opt_wrapS, opt_wrapT) {\n  const texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\n  if (opt_wrapS !== undefined) {\n    gl.texParameteri(\n      TEXTURE_2D, TEXTURE_WRAP_S, opt_wrapS);\n  }\n  if (opt_wrapT !== undefined) {\n    gl.texParameteri(\n      TEXTURE_2D, TEXTURE_WRAP_T, opt_wrapT);\n  }\n\n  return texture;\n}\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {number} width Width.\n * @param {number} height Height.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\nexport function createEmptyTexture(gl, width, height, opt_wrapS, opt_wrapT) {\n  const texture = createTextureInternal(gl, opt_wrapS, opt_wrapT);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n  return texture;\n}\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\nexport function createTexture(gl, image, opt_wrapS, opt_wrapT) {\n  const texture = createTextureInternal(gl, opt_wrapS, opt_wrapT);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n  return texture;\n}\n\nexport default WebGLContext;\n","/**\n * @module ol/render/webgl/TextureReplay\n */\nimport {getUid, inherits} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {fragment, vertex} from '../webgl/texturereplay/defaultshader.js';\nimport Locations from '../webgl/texturereplay/defaultshader/Locations.js';\nimport WebGLReplay from '../webgl/Replay.js';\nimport {CLAMP_TO_EDGE, FLOAT, TEXTURE_2D} from '../../webgl.js';\nimport {createTexture} from '../../webgl/Context.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/render/webgl/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @struct\n */\nconst WebGLTextureReplay = function(tolerance, maxExtent) {\n  WebGLReplay.call(this, tolerance, maxExtent);\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.anchorX = undefined;\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.anchorY = undefined;\n\n  /**\n   * @type {Array.<number>}\n   * @protected\n   */\n  this.groupIndices = [];\n\n  /**\n   * @type {Array.<number>}\n   * @protected\n   */\n  this.hitDetectionGroupIndices = [];\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.height = undefined;\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.imageHeight = undefined;\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.imageWidth = undefined;\n\n  /**\n   * @protected\n   * @type {module:ol/render/webgl/texturereplay/defaultshader/Locations}\n   */\n  this.defaultLocations = null;\n\n  /**\n   * @protected\n   * @type {number|undefined}\n   */\n  this.opacity = undefined;\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.originX = undefined;\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.originY = undefined;\n\n  /**\n   * @protected\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView = undefined;\n\n  /**\n   * @protected\n   * @type {number|undefined}\n   */\n  this.rotation = undefined;\n\n  /**\n   * @protected\n   * @type {number|undefined}\n   */\n  this.scale = undefined;\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.width = undefined;\n};\n\ninherits(WebGLTextureReplay, WebGLReplay);\n\n\n/**\n * @inheritDoc\n */\nWebGLTextureReplay.prototype.getDeleteResourcesFunction = function(context) {\n  const verticesBuffer = this.verticesBuffer;\n  const indicesBuffer = this.indicesBuffer;\n  const textures = this.getTextures(true);\n  const gl = context.getGL();\n  return function() {\n    if (!gl.isContextLost()) {\n      let i, ii;\n      for (i = 0, ii = textures.length; i < ii; ++i) {\n        gl.deleteTexture(textures[i]);\n      }\n    }\n    context.deleteBuffer(verticesBuffer);\n    context.deleteBuffer(indicesBuffer);\n  };\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} My end.\n * @protected\n */\nWebGLTextureReplay.prototype.drawCoordinates = function(flatCoordinates, offset, end, stride) {\n  const anchorX = /** @type {number} */ (this.anchorX);\n  const anchorY = /** @type {number} */ (this.anchorY);\n  const height = /** @type {number} */ (this.height);\n  const imageHeight = /** @type {number} */ (this.imageHeight);\n  const imageWidth = /** @type {number} */ (this.imageWidth);\n  const opacity = /** @type {number} */ (this.opacity);\n  const originX = /** @type {number} */ (this.originX);\n  const originY = /** @type {number} */ (this.originY);\n  const rotateWithView = this.rotateWithView ? 1.0 : 0.0;\n  // this.rotation_ is anti-clockwise, but rotation is clockwise\n  const rotation = /** @type {number} */ (-this.rotation);\n  const scale = /** @type {number} */ (this.scale);\n  const width = /** @type {number} */ (this.width);\n  const cos = Math.cos(rotation);\n  const sin = Math.sin(rotation);\n  let numIndices = this.indices.length;\n  let numVertices = this.vertices.length;\n  let i, n, offsetX, offsetY, x, y;\n  for (i = offset; i < end; i += stride) {\n    x = flatCoordinates[i] - this.origin[0];\n    y = flatCoordinates[i + 1] - this.origin[1];\n\n    // There are 4 vertices per [x, y] point, one for each corner of the\n    // rectangle we're going to draw. We'd use 1 vertex per [x, y] point if\n    // WebGL supported Geometry Shaders (which can emit new vertices), but that\n    // is not currently the case.\n    //\n    // And each vertex includes 8 values: the x and y coordinates, the x and\n    // y offsets used to calculate the position of the corner, the u and\n    // v texture coordinates for the corner, the opacity, and whether the\n    // the image should be rotated with the view (rotateWithView).\n\n    n = numVertices / 8;\n\n    // bottom-left corner\n    offsetX = -scale * anchorX;\n    offsetY = -scale * (height - anchorY);\n    this.vertices[numVertices++] = x;\n    this.vertices[numVertices++] = y;\n    this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n    this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n    this.vertices[numVertices++] = originX / imageWidth;\n    this.vertices[numVertices++] = (originY + height) / imageHeight;\n    this.vertices[numVertices++] = opacity;\n    this.vertices[numVertices++] = rotateWithView;\n\n    // bottom-right corner\n    offsetX = scale * (width - anchorX);\n    offsetY = -scale * (height - anchorY);\n    this.vertices[numVertices++] = x;\n    this.vertices[numVertices++] = y;\n    this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n    this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n    this.vertices[numVertices++] = (originX + width) / imageWidth;\n    this.vertices[numVertices++] = (originY + height) / imageHeight;\n    this.vertices[numVertices++] = opacity;\n    this.vertices[numVertices++] = rotateWithView;\n\n    // top-right corner\n    offsetX = scale * (width - anchorX);\n    offsetY = scale * anchorY;\n    this.vertices[numVertices++] = x;\n    this.vertices[numVertices++] = y;\n    this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n    this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n    this.vertices[numVertices++] = (originX + width) / imageWidth;\n    this.vertices[numVertices++] = originY / imageHeight;\n    this.vertices[numVertices++] = opacity;\n    this.vertices[numVertices++] = rotateWithView;\n\n    // top-left corner\n    offsetX = -scale * anchorX;\n    offsetY = scale * anchorY;\n    this.vertices[numVertices++] = x;\n    this.vertices[numVertices++] = y;\n    this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n    this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n    this.vertices[numVertices++] = originX / imageWidth;\n    this.vertices[numVertices++] = originY / imageHeight;\n    this.vertices[numVertices++] = opacity;\n    this.vertices[numVertices++] = rotateWithView;\n\n    this.indices[numIndices++] = n;\n    this.indices[numIndices++] = n + 1;\n    this.indices[numIndices++] = n + 2;\n    this.indices[numIndices++] = n;\n    this.indices[numIndices++] = n + 2;\n    this.indices[numIndices++] = n + 3;\n  }\n\n  return numVertices;\n};\n\n\n/**\n * @protected\n * @param {Array.<WebGLTexture>} textures Textures.\n * @param {Array.<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>} images Images.\n * @param {!Object.<string, WebGLTexture>} texturePerImage Texture cache.\n * @param {WebGLRenderingContext} gl Gl.\n */\nWebGLTextureReplay.prototype.createTextures = function(textures, images, texturePerImage, gl) {\n  let texture, image, uid, i;\n  const ii = images.length;\n  for (i = 0; i < ii; ++i) {\n    image = images[i];\n\n    uid = getUid(image).toString();\n    if (uid in texturePerImage) {\n      texture = texturePerImage[uid];\n    } else {\n      texture = createTexture(\n        gl, image, CLAMP_TO_EDGE, CLAMP_TO_EDGE);\n      texturePerImage[uid] = texture;\n    }\n    textures[i] = texture;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTextureReplay.prototype.setUpProgram = function(gl, context, size, pixelRatio) {\n  // get the program\n  const program = context.getProgram(fragment, vertex);\n\n  // get the locations\n  let locations;\n  if (!this.defaultLocations) {\n    locations = new Locations(gl, program);\n    this.defaultLocations = locations;\n  } else {\n    locations = this.defaultLocations;\n  }\n\n  // use the program (FIXME: use the return value)\n  context.useProgram(program);\n\n  // enable the vertex attrib arrays\n  gl.enableVertexAttribArray(locations.a_position);\n  gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n    false, 32, 0);\n\n  gl.enableVertexAttribArray(locations.a_offsets);\n  gl.vertexAttribPointer(locations.a_offsets, 2, FLOAT,\n    false, 32, 8);\n\n  gl.enableVertexAttribArray(locations.a_texCoord);\n  gl.vertexAttribPointer(locations.a_texCoord, 2, FLOAT,\n    false, 32, 16);\n\n  gl.enableVertexAttribArray(locations.a_opacity);\n  gl.vertexAttribPointer(locations.a_opacity, 1, FLOAT,\n    false, 32, 24);\n\n  gl.enableVertexAttribArray(locations.a_rotateWithView);\n  gl.vertexAttribPointer(locations.a_rotateWithView, 1, FLOAT,\n    false, 32, 28);\n\n  return locations;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTextureReplay.prototype.shutDownProgram = function(gl, locations) {\n  gl.disableVertexAttribArray(locations.a_position);\n  gl.disableVertexAttribArray(locations.a_offsets);\n  gl.disableVertexAttribArray(locations.a_texCoord);\n  gl.disableVertexAttribArray(locations.a_opacity);\n  gl.disableVertexAttribArray(locations.a_rotateWithView);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTextureReplay.prototype.drawReplay = function(gl, context, skippedFeaturesHash, hitDetection) {\n  const textures = hitDetection ? this.getHitDetectionTextures() : this.getTextures();\n  const groupIndices = hitDetection ? this.hitDetectionGroupIndices : this.groupIndices;\n\n  if (!isEmpty(skippedFeaturesHash)) {\n    this.drawReplaySkipping(gl, context, skippedFeaturesHash, textures, groupIndices);\n  } else {\n    let i, ii, start;\n    for (i = 0, ii = textures.length, start = 0; i < ii; ++i) {\n      gl.bindTexture(TEXTURE_2D, textures[i]);\n      const end = groupIndices[i];\n      this.drawElements(gl, context, start, end);\n      start = end;\n    }\n  }\n};\n\n\n/**\n * Draw the replay while paying attention to skipped features.\n *\n * This functions creates groups of features that can be drawn to together,\n * so that the number of `drawElements` calls is minimized.\n *\n * For example given the following texture groups:\n *\n *    Group 1: A B C\n *    Group 2: D [E] F G\n *\n * If feature E should be skipped, the following `drawElements` calls will be\n * made:\n *\n *    drawElements with feature A, B and C\n *    drawElements with feature D\n *    drawElements with feature F and G\n *\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *  to skip.\n * @param {Array.<WebGLTexture>} textures Textures.\n * @param {Array.<number>} groupIndices Texture group indices.\n */\nWebGLTextureReplay.prototype.drawReplaySkipping = function(gl, context, skippedFeaturesHash, textures,\n  groupIndices) {\n  let featureIndex = 0;\n\n  let i, ii;\n  for (i = 0, ii = textures.length; i < ii; ++i) {\n    gl.bindTexture(TEXTURE_2D, textures[i]);\n    const groupStart = (i > 0) ? groupIndices[i - 1] : 0;\n    const groupEnd = groupIndices[i];\n\n    let start = groupStart;\n    let end = groupStart;\n    while (featureIndex < this.startIndices.length &&\n        this.startIndices[featureIndex] <= groupEnd) {\n      const feature = this.startIndicesFeature[featureIndex];\n\n      const featureUid = getUid(feature).toString();\n      if (skippedFeaturesHash[featureUid] !== undefined) {\n        // feature should be skipped\n        if (start !== end) {\n          // draw the features so far\n          this.drawElements(gl, context, start, end);\n        }\n        // continue with the next feature\n        start = (featureIndex === this.startIndices.length - 1) ?\n          groupEnd : this.startIndices[featureIndex + 1];\n        end = start;\n      } else {\n        // the feature is not skipped, augment the end index\n        end = (featureIndex === this.startIndices.length - 1) ?\n          groupEnd : this.startIndices[featureIndex + 1];\n      }\n      featureIndex++;\n    }\n\n    if (start !== end) {\n      // draw the remaining features (in case there was no skipped feature\n      // in this texture group, all features of a group are drawn together)\n      this.drawElements(gl, context, start, end);\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTextureReplay.prototype.drawHitDetectionReplayOneByOne = function(gl, context, skippedFeaturesHash,\n  featureCallback, opt_hitExtent) {\n  let i, groupStart, start, end, feature, featureUid;\n  let featureIndex = this.startIndices.length - 1;\n  const hitDetectionTextures = this.getHitDetectionTextures();\n  for (i = hitDetectionTextures.length - 1; i >= 0; --i) {\n    gl.bindTexture(TEXTURE_2D, hitDetectionTextures[i]);\n    groupStart = (i > 0) ? this.hitDetectionGroupIndices[i - 1] : 0;\n    end = this.hitDetectionGroupIndices[i];\n\n    // draw all features for this texture group\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      start = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid] === undefined &&\n          feature.getGeometry() &&\n          (opt_hitExtent === undefined || intersects(\n            /** @type {Array<number>} */ (opt_hitExtent),\n            feature.getGeometry().getExtent()))) {\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        this.drawElements(gl, context, start, end);\n\n        const result = featureCallback(feature);\n        if (result) {\n          return result;\n        }\n      }\n\n      end = start;\n      featureIndex--;\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTextureReplay.prototype.finish = function(context) {\n  this.anchorX = undefined;\n  this.anchorY = undefined;\n  this.height = undefined;\n  this.imageHeight = undefined;\n  this.imageWidth = undefined;\n  this.indices = null;\n  this.opacity = undefined;\n  this.originX = undefined;\n  this.originY = undefined;\n  this.rotateWithView = undefined;\n  this.rotation = undefined;\n  this.scale = undefined;\n  this.vertices = null;\n  this.width = undefined;\n};\n\n\n/**\n * @abstract\n * @protected\n * @param {boolean=} opt_all Return hit detection textures with regular ones.\n * @returns {Array.<WebGLTexture>} Textures.\n */\nWebGLTextureReplay.prototype.getTextures = function(opt_all) {};\n\n\n/**\n * @abstract\n * @protected\n * @returns {Array.<WebGLTexture>} Textures.\n */\nWebGLTextureReplay.prototype.getHitDetectionTextures = function() {};\nexport default WebGLTextureReplay;\n","/**\n * @module ol/render/webgl/ImageReplay\n */\nimport {getUid, inherits} from '../../util.js';\nimport WebGLTextureReplay from '../webgl/TextureReplay.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/webgl/TextureReplay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @struct\n */\nconst WebGLImageReplay = function(tolerance, maxExtent) {\n  WebGLTextureReplay.call(this, tolerance, maxExtent);\n\n  /**\n   * @type {Array.<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>}\n   * @protected\n   */\n  this.images_ = [];\n\n  /**\n   * @type {Array.<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>}\n   * @protected\n   */\n  this.hitDetectionImages_ = [];\n\n  /**\n   * @type {Array.<WebGLTexture>}\n   * @private\n   */\n  this.textures_ = [];\n\n  /**\n   * @type {Array.<WebGLTexture>}\n   * @private\n   */\n  this.hitDetectionTextures_ = [];\n\n};\n\ninherits(WebGLImageReplay, WebGLTextureReplay);\n\n\n/**\n * @inheritDoc\n */\nWebGLImageReplay.prototype.drawMultiPoint = function(multiPointGeometry, feature) {\n  this.startIndices.push(this.indices.length);\n  this.startIndicesFeature.push(feature);\n  const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n  const stride = multiPointGeometry.getStride();\n  this.drawCoordinates(\n    flatCoordinates, 0, flatCoordinates.length, stride);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImageReplay.prototype.drawPoint = function(pointGeometry, feature) {\n  this.startIndices.push(this.indices.length);\n  this.startIndicesFeature.push(feature);\n  const flatCoordinates = pointGeometry.getFlatCoordinates();\n  const stride = pointGeometry.getStride();\n  this.drawCoordinates(\n    flatCoordinates, 0, flatCoordinates.length, stride);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImageReplay.prototype.finish = function(context) {\n  const gl = context.getGL();\n\n  this.groupIndices.push(this.indices.length);\n  this.hitDetectionGroupIndices.push(this.indices.length);\n\n  // create, bind, and populate the vertices buffer\n  this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n  const indices = this.indices;\n\n  // create, bind, and populate the indices buffer\n  this.indicesBuffer = new WebGLBuffer(indices);\n\n  // create textures\n  /** @type {Object.<string, WebGLTexture>} */\n  const texturePerImage = {};\n\n  this.createTextures(this.textures_, this.images_, texturePerImage, gl);\n\n  this.createTextures(this.hitDetectionTextures_, this.hitDetectionImages_,\n    texturePerImage, gl);\n\n  this.images_ = null;\n  this.hitDetectionImages_ = null;\n  WebGLTextureReplay.prototype.finish.call(this, context);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImageReplay.prototype.setImageStyle = function(imageStyle) {\n  const anchor = imageStyle.getAnchor();\n  const image = imageStyle.getImage(1);\n  const imageSize = imageStyle.getImageSize();\n  const hitDetectionImage = imageStyle.getHitDetectionImage(1);\n  const opacity = imageStyle.getOpacity();\n  const origin = imageStyle.getOrigin();\n  const rotateWithView = imageStyle.getRotateWithView();\n  const rotation = imageStyle.getRotation();\n  const size = imageStyle.getSize();\n  const scale = imageStyle.getScale();\n\n  let currentImage;\n  if (this.images_.length === 0) {\n    this.images_.push(image);\n  } else {\n    currentImage = this.images_[this.images_.length - 1];\n    if (getUid(currentImage) != getUid(image)) {\n      this.groupIndices.push(this.indices.length);\n      this.images_.push(image);\n    }\n  }\n\n  if (this.hitDetectionImages_.length === 0) {\n    this.hitDetectionImages_.push(hitDetectionImage);\n  } else {\n    currentImage =\n        this.hitDetectionImages_[this.hitDetectionImages_.length - 1];\n    if (getUid(currentImage) != getUid(hitDetectionImage)) {\n      this.hitDetectionGroupIndices.push(this.indices.length);\n      this.hitDetectionImages_.push(hitDetectionImage);\n    }\n  }\n\n  this.anchorX = anchor[0];\n  this.anchorY = anchor[1];\n  this.height = size[1];\n  this.imageHeight = imageSize[1];\n  this.imageWidth = imageSize[0];\n  this.opacity = opacity;\n  this.originX = origin[0];\n  this.originY = origin[1];\n  this.rotation = rotation;\n  this.rotateWithView = rotateWithView;\n  this.scale = scale;\n  this.width = size[0];\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImageReplay.prototype.getTextures = function(opt_all) {\n  return opt_all ? this.textures_.concat(this.hitDetectionTextures_) : this.textures_;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImageReplay.prototype.getHitDetectionTextures = function() {\n  return this.hitDetectionTextures_;\n};\nexport default WebGLImageReplay;\n","/**\n * @module ol/geom/flat/topology\n */\nimport {linearRing as linearRingArea} from '../flat/area.js';\n\n/**\n * Check if the linestring is a boundary.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} The linestring is a boundary.\n */\nexport function lineStringIsClosed(flatCoordinates, offset, end, stride) {\n  const lastCoord = end - stride;\n  if (flatCoordinates[offset] === flatCoordinates[lastCoord] &&\n      flatCoordinates[offset + 1] === flatCoordinates[lastCoord + 1] && (end - offset) / stride > 3) {\n    return !!linearRingArea(flatCoordinates, offset, end, stride);\n  }\n  return false;\n}\n","/**\n * @module ol/render/webgl/linestringreplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport const fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying float v_round;\\nvarying vec2 v_roundVertex;\\nvarying float v_halfWidth;\\n\\n\\n\\nuniform float u_opacity;\\nuniform vec4 u_color;\\nuniform vec2 u_size;\\nuniform float u_pixelRatio;\\n\\nvoid main(void) {\\n  if (v_round > 0.0) {\\n    vec2 windowCoords = vec2((v_roundVertex.x + 1.0) / 2.0 * u_size.x * u_pixelRatio,\\n        (v_roundVertex.y + 1.0) / 2.0 * u_size.y * u_pixelRatio);\\n    if (length(windowCoords - gl_FragCoord.xy) > v_halfWidth * u_pixelRatio) {\\n      discard;\\n    }\\n  }\\n  gl_FragColor = u_color;\\n  float alpha = u_color.a * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;varying float a;varying vec2 aVertex;varying float c;uniform float m;uniform vec4 n;uniform vec2 o;uniform float p;void main(void){if(a>0.0){vec2 windowCoords=vec2((aVertex.x+1.0)/2.0*o.x*p,(aVertex.y+1.0)/2.0*o.y*p);if(length(windowCoords-gl_FragCoord.xy)>c*p){discard;}} gl_FragColor=n;float alpha=n.a*m;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\nexport const vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying float v_round;\\nvarying vec2 v_roundVertex;\\nvarying float v_halfWidth;\\n\\n\\nattribute vec2 a_lastPos;\\nattribute vec2 a_position;\\nattribute vec2 a_nextPos;\\nattribute float a_direction;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\nuniform float u_lineWidth;\\nuniform float u_miterLimit;\\n\\nbool nearlyEquals(in float value, in float ref) {\\n  float epsilon = 0.000000000001;\\n  return value >= ref - epsilon && value <= ref + epsilon;\\n}\\n\\nvoid alongNormal(out vec2 offset, in vec2 nextP, in float turnDir, in float direction) {\\n  vec2 dirVect = nextP - a_position;\\n  vec2 normal = normalize(vec2(-turnDir * dirVect.y, turnDir * dirVect.x));\\n  offset = u_lineWidth / 2.0 * normal * direction;\\n}\\n\\nvoid miterUp(out vec2 offset, out float round, in bool isRound, in float direction) {\\n  float halfWidth = u_lineWidth / 2.0;\\n  vec2 tangent = normalize(normalize(a_nextPos - a_position) + normalize(a_position - a_lastPos));\\n  vec2 normal = vec2(-tangent.y, tangent.x);\\n  vec2 dirVect = a_nextPos - a_position;\\n  vec2 tmpNormal = normalize(vec2(-dirVect.y, dirVect.x));\\n  float miterLength = abs(halfWidth / dot(normal, tmpNormal));\\n  offset = normal * direction * miterLength;\\n  round = 0.0;\\n  if (isRound) {\\n    round = 1.0;\\n  } else if (miterLength > u_miterLimit + u_lineWidth) {\\n    offset = halfWidth * tmpNormal * direction;\\n  }\\n}\\n\\nbool miterDown(out vec2 offset, in vec4 projPos, in mat4 offsetMatrix, in float direction) {\\n  bool degenerate = false;\\n  vec2 tangent = normalize(normalize(a_nextPos - a_position) + normalize(a_position - a_lastPos));\\n  vec2 normal = vec2(-tangent.y, tangent.x);\\n  vec2 dirVect = a_lastPos - a_position;\\n  vec2 tmpNormal = normalize(vec2(-dirVect.y, dirVect.x));\\n  vec2 longOffset, shortOffset, longVertex;\\n  vec4 shortProjVertex;\\n  float halfWidth = u_lineWidth / 2.0;\\n  if (length(a_nextPos - a_position) > length(a_lastPos - a_position)) {\\n    longOffset = tmpNormal * direction * halfWidth;\\n    shortOffset = normalize(vec2(dirVect.y, -dirVect.x)) * direction * halfWidth;\\n    longVertex = a_nextPos;\\n    shortProjVertex = u_projectionMatrix * vec4(a_lastPos, 0.0, 1.0);\\n  } else {\\n    shortOffset = tmpNormal * direction * halfWidth;\\n    longOffset = normalize(vec2(dirVect.y, -dirVect.x)) * direction * halfWidth;\\n    longVertex = a_lastPos;\\n    shortProjVertex = u_projectionMatrix * vec4(a_nextPos, 0.0, 1.0);\\n  }\\n  //Intersection algorithm based on theory by Paul Bourke (http://paulbourke.net/geometry/pointlineplane/).\\n  vec4 p1 = u_projectionMatrix * vec4(longVertex, 0.0, 1.0) + offsetMatrix * vec4(longOffset, 0.0, 0.0);\\n  vec4 p2 = projPos + offsetMatrix * vec4(longOffset, 0.0, 0.0);\\n  vec4 p3 = shortProjVertex + offsetMatrix * vec4(-shortOffset, 0.0, 0.0);\\n  vec4 p4 = shortProjVertex + offsetMatrix * vec4(shortOffset, 0.0, 0.0);\\n  float denom = (p4.y - p3.y) * (p2.x - p1.x) - (p4.x - p3.x) * (p2.y - p1.y);\\n  float firstU = ((p4.x - p3.x) * (p1.y - p3.y) - (p4.y - p3.y) * (p1.x - p3.x)) / denom;\\n  float secondU = ((p2.x - p1.x) * (p1.y - p3.y) - (p2.y - p1.y) * (p1.x - p3.x)) / denom;\\n  float epsilon = 0.000000000001;\\n  if (firstU > epsilon && firstU < 1.0 - epsilon && secondU > epsilon && secondU < 1.0 - epsilon) {\\n    shortProjVertex.x = p1.x + firstU * (p2.x - p1.x);\\n    shortProjVertex.y = p1.y + firstU * (p2.y - p1.y);\\n    offset = shortProjVertex.xy;\\n    degenerate = true;\\n  } else {\\n    float miterLength = abs(halfWidth / dot(normal, tmpNormal));\\n    offset = normal * direction * miterLength;\\n  }\\n  return degenerate;\\n}\\n\\nvoid squareCap(out vec2 offset, out float round, in bool isRound, in vec2 nextP,\\n    in float turnDir, in float direction) {\\n  round = 0.0;\\n  vec2 dirVect = a_position - nextP;\\n  vec2 firstNormal = normalize(dirVect);\\n  vec2 secondNormal = vec2(turnDir * firstNormal.y * direction, -turnDir * firstNormal.x * direction);\\n  vec2 hypotenuse = normalize(firstNormal - secondNormal);\\n  vec2 normal = vec2(turnDir * hypotenuse.y * direction, -turnDir * hypotenuse.x * direction);\\n  float length = sqrt(v_halfWidth * v_halfWidth * 2.0);\\n  offset = normal * length;\\n  if (isRound) {\\n    round = 1.0;\\n  }\\n}\\n\\nvoid main(void) {\\n  bool degenerate = false;\\n  float direction = float(sign(a_direction));\\n  mat4 offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  vec2 offset;\\n  vec4 projPos = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\\n  bool round = nearlyEquals(mod(a_direction, 2.0), 0.0);\\n\\n  v_round = 0.0;\\n  v_halfWidth = u_lineWidth / 2.0;\\n  v_roundVertex = projPos.xy;\\n\\n  if (nearlyEquals(mod(a_direction, 3.0), 0.0) || nearlyEquals(mod(a_direction, 17.0), 0.0)) {\\n    alongNormal(offset, a_nextPos, 1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 5.0), 0.0) || nearlyEquals(mod(a_direction, 13.0), 0.0)) {\\n    alongNormal(offset, a_lastPos, -1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 23.0), 0.0)) {\\n    miterUp(offset, v_round, round, direction);\\n  } else if (nearlyEquals(mod(a_direction, 19.0), 0.0)) {\\n    degenerate = miterDown(offset, projPos, offsetMatrix, direction);\\n  } else if (nearlyEquals(mod(a_direction, 7.0), 0.0)) {\\n    squareCap(offset, v_round, round, a_nextPos, 1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 11.0), 0.0)) {\\n    squareCap(offset, v_round, round, a_lastPos, -1.0, direction);\\n  }\\n  if (!degenerate) {\\n    vec4 offsets = offsetMatrix * vec4(offset, 0.0, 0.0);\\n    gl_Position = projPos + offsets;\\n  } else {\\n    gl_Position = vec4(offset, 0.0, 1.0);\\n  }\\n}\\n\\n\\n' :\n  'varying float a;varying vec2 aVertex;varying float c;attribute vec2 d;attribute vec2 e;attribute vec2 f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;uniform float k;uniform float l;bool nearlyEquals(in float value,in float ref){float epsilon=0.000000000001;return value>=ref-epsilon&&value<=ref+epsilon;}void alongNormal(out vec2 offset,in vec2 nextP,in float turnDir,in float direction){vec2 dirVect=nextP-e;vec2 normal=normalize(vec2(-turnDir*dirVect.y,turnDir*dirVect.x));offset=k/2.0*normal*direction;}void miterUp(out vec2 offset,out float round,in bool isRound,in float direction){float halfWidth=k/2.0;vec2 tangent=normalize(normalize(f-e)+normalize(e-d));vec2 normal=vec2(-tangent.y,tangent.x);vec2 dirVect=f-e;vec2 tmpNormal=normalize(vec2(-dirVect.y,dirVect.x));float miterLength=abs(halfWidth/dot(normal,tmpNormal));offset=normal*direction*miterLength;round=0.0;if(isRound){round=1.0;}else if(miterLength>l+k){offset=halfWidth*tmpNormal*direction;}} bool miterDown(out vec2 offset,in vec4 projPos,in mat4 offsetMatrix,in float direction){bool degenerate=false;vec2 tangent=normalize(normalize(f-e)+normalize(e-d));vec2 normal=vec2(-tangent.y,tangent.x);vec2 dirVect=d-e;vec2 tmpNormal=normalize(vec2(-dirVect.y,dirVect.x));vec2 longOffset,shortOffset,longVertex;vec4 shortProjVertex;float halfWidth=k/2.0;if(length(f-e)>length(d-e)){longOffset=tmpNormal*direction*halfWidth;shortOffset=normalize(vec2(dirVect.y,-dirVect.x))*direction*halfWidth;longVertex=f;shortProjVertex=h*vec4(d,0.0,1.0);}else{shortOffset=tmpNormal*direction*halfWidth;longOffset=normalize(vec2(dirVect.y,-dirVect.x))*direction*halfWidth;longVertex=d;shortProjVertex=h*vec4(f,0.0,1.0);}vec4 p1=h*vec4(longVertex,0.0,1.0)+offsetMatrix*vec4(longOffset,0.0,0.0);vec4 p2=projPos+offsetMatrix*vec4(longOffset,0.0,0.0);vec4 p3=shortProjVertex+offsetMatrix*vec4(-shortOffset,0.0,0.0);vec4 p4=shortProjVertex+offsetMatrix*vec4(shortOffset,0.0,0.0);float denom=(p4.y-p3.y)*(p2.x-p1.x)-(p4.x-p3.x)*(p2.y-p1.y);float firstU=((p4.x-p3.x)*(p1.y-p3.y)-(p4.y-p3.y)*(p1.x-p3.x))/denom;float secondU=((p2.x-p1.x)*(p1.y-p3.y)-(p2.y-p1.y)*(p1.x-p3.x))/denom;float epsilon=0.000000000001;if(firstU>epsilon&&firstU<1.0-epsilon&&secondU>epsilon&&secondU<1.0-epsilon){shortProjVertex.x=p1.x+firstU*(p2.x-p1.x);shortProjVertex.y=p1.y+firstU*(p2.y-p1.y);offset=shortProjVertex.xy;degenerate=true;}else{float miterLength=abs(halfWidth/dot(normal,tmpNormal));offset=normal*direction*miterLength;}return degenerate;}void squareCap(out vec2 offset,out float round,in bool isRound,in vec2 nextP,in float turnDir,in float direction){round=0.0;vec2 dirVect=e-nextP;vec2 firstNormal=normalize(dirVect);vec2 secondNormal=vec2(turnDir*firstNormal.y*direction,-turnDir*firstNormal.x*direction);vec2 hypotenuse=normalize(firstNormal-secondNormal);vec2 normal=vec2(turnDir*hypotenuse.y*direction,-turnDir*hypotenuse.x*direction);float length=sqrt(c*c*2.0);offset=normal*length;if(isRound){round=1.0;}} void main(void){bool degenerate=false;float direction=float(sign(g));mat4 offsetMatrix=i*j;vec2 offset;vec4 projPos=h*vec4(e,0.0,1.0);bool round=nearlyEquals(mod(g,2.0),0.0);a=0.0;c=k/2.0;aVertex=projPos.xy;if(nearlyEquals(mod(g,3.0),0.0)||nearlyEquals(mod(g,17.0),0.0)){alongNormal(offset,f,1.0,direction);}else if(nearlyEquals(mod(g,5.0),0.0)||nearlyEquals(mod(g,13.0),0.0)){alongNormal(offset,d,-1.0,direction);}else if(nearlyEquals(mod(g,23.0),0.0)){miterUp(offset,a,round,direction);}else if(nearlyEquals(mod(g,19.0),0.0)){degenerate=miterDown(offset,projPos,offsetMatrix,direction);}else if(nearlyEquals(mod(g,7.0),0.0)){squareCap(offset,a,round,f,1.0,direction);}else if(nearlyEquals(mod(g,11.0),0.0)){squareCap(offset,a,round,d,-1.0,direction);}if(!degenerate){vec4 offsets=offsetMatrix*vec4(offset,0.0,0.0);gl_Position=projPos+offsets;}else{gl_Position=vec4(offset,0.0,1.0);}}');\n","/**\n * @module ol/render/webgl/linestringreplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\n/**\n * @constructor\n * @param {WebGLRenderingContext} gl GL.\n * @param {WebGLProgram} program Program.\n * @struct\n */\nconst Locations = function(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_lineWidth = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_lineWidth' : 'k');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_miterLimit = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_miterLimit' : 'l');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'm');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_color = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_color' : 'n');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_size = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_size' : 'o');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_pixelRatio = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_pixelRatio' : 'p');\n\n  /**\n   * @type {number}\n   */\n  this.a_lastPos = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_lastPos' : 'd');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_nextPos = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_nextPos' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_direction = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_direction' : 'g');\n};\n\nexport default Locations;\n","/**\n * @module ol/render/webgl/LineStringReplay\n */\nimport {getUid, inherits} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {intersects} from '../../extent.js';\nimport {linearRingIsClockwise} from '../../geom/flat/orient.js';\nimport {translate} from '../../geom/flat/transform.js';\nimport {lineStringIsClosed} from '../../geom/flat/topology.js';\nimport {isEmpty} from '../../obj.js';\nimport {DEFAULT_LINECAP, DEFAULT_LINEDASH, DEFAULT_LINEDASHOFFSET,\n  DEFAULT_LINEJOIN, DEFAULT_LINEWIDTH, DEFAULT_MITERLIMIT, DEFAULT_STROKESTYLE,\n  triangleIsCounterClockwise} from '../webgl.js';\nimport WebGLReplay from '../webgl/Replay.js';\nimport {fragment, vertex} from '../webgl/linestringreplay/defaultshader.js';\nimport Locations from '../webgl/linestringreplay/defaultshader/Locations.js';\nimport {FLOAT} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  ROUND: 2,\n  BEGIN_LINE: 3,\n  END_LINE: 5,\n  BEGIN_LINE_CAP: 7,\n  END_LINE_CAP: 11,\n  BEVEL_FIRST: 13,\n  BEVEL_SECOND: 17,\n  MITER_BOTTOM: 19,\n  MITER_TOP: 23\n};\n\n\n/**\n * @constructor\n * @extends {module:ol/render/webgl/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @struct\n */\nconst WebGLLineStringReplay = function(tolerance, maxExtent) {\n  WebGLReplay.call(this, tolerance, maxExtent);\n\n  /**\n   * @private\n   * @type {module:ol/render/webgl/linestringreplay/defaultshader/Locations}\n   */\n  this.defaultLocations_ = null;\n\n  /**\n   * @private\n   * @type {Array.<Array.<?>>}\n   */\n  this.styles_ = [];\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.styleIndices_ = [];\n\n  /**\n   * @private\n   * @type {{strokeColor: (Array.<number>|null),\n   *         lineCap: (string|undefined),\n   *         lineDash: Array.<number>,\n   *         lineDashOffset: (number|undefined),\n   *         lineJoin: (string|undefined),\n   *         lineWidth: (number|undefined),\n   *         miterLimit: (number|undefined),\n   *         changed: boolean}|null}\n   */\n  this.state_ = {\n    strokeColor: null,\n    lineCap: undefined,\n    lineDash: null,\n    lineDashOffset: undefined,\n    lineJoin: undefined,\n    lineWidth: undefined,\n    miterLimit: undefined,\n    changed: false\n  };\n\n};\n\ninherits(WebGLLineStringReplay, WebGLReplay);\n\n\n/**\n * Draw one segment.\n * @private\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nWebGLLineStringReplay.prototype.drawCoordinates_ = function(flatCoordinates, offset, end, stride) {\n\n  let i, ii;\n  let numVertices = this.vertices.length;\n  let numIndices = this.indices.length;\n  //To save a vertex, the direction of a point is a product of the sign (1 or -1), a prime from\n  //Instruction, and a rounding factor (1 or 2). If the product is even,\n  //we round it. If it is odd, we don't.\n  const lineJoin = this.state_.lineJoin === 'bevel' ? 0 :\n    this.state_.lineJoin === 'miter' ? 1 : 2;\n  const lineCap = this.state_.lineCap === 'butt' ? 0 :\n    this.state_.lineCap === 'square' ? 1 : 2;\n  const closed = lineStringIsClosed(flatCoordinates, offset, end, stride);\n  let startCoords, sign, n;\n  let lastIndex = numIndices;\n  let lastSign = 1;\n  //We need the adjacent vertices to define normals in joins. p0 = last, p1 = current, p2 = next.\n  let p0, p1, p2;\n\n  for (i = offset, ii = end; i < ii; i += stride) {\n\n    n = numVertices / 7;\n\n    p0 = p1;\n    p1 = p2 || [flatCoordinates[i], flatCoordinates[i + 1]];\n    //First vertex.\n    if (i === offset) {\n      p2 = [flatCoordinates[i + stride], flatCoordinates[i + stride + 1]];\n      if (end - offset === stride * 2 && equals(p1, p2)) {\n        break;\n      }\n      if (closed) {\n        //A closed line! Complete the circle.\n        p0 = [flatCoordinates[end - stride * 2],\n          flatCoordinates[end - stride * 2 + 1]];\n\n        startCoords = p2;\n      } else {\n        //Add the first two/four vertices.\n\n        if (lineCap) {\n          numVertices = this.addVertices_([0, 0], p1, p2,\n            lastSign * Instruction.BEGIN_LINE_CAP * lineCap, numVertices);\n\n          numVertices = this.addVertices_([0, 0], p1, p2,\n            -lastSign * Instruction.BEGIN_LINE_CAP * lineCap, numVertices);\n\n          this.indices[numIndices++] = n + 2;\n          this.indices[numIndices++] = n;\n          this.indices[numIndices++] = n + 1;\n\n          this.indices[numIndices++] = n + 1;\n          this.indices[numIndices++] = n + 3;\n          this.indices[numIndices++] = n + 2;\n\n        }\n\n        numVertices = this.addVertices_([0, 0], p1, p2,\n          lastSign * Instruction.BEGIN_LINE * (lineCap || 1), numVertices);\n\n        numVertices = this.addVertices_([0, 0], p1, p2,\n          -lastSign * Instruction.BEGIN_LINE * (lineCap || 1), numVertices);\n\n        lastIndex = numVertices / 7 - 1;\n\n        continue;\n      }\n    } else if (i === end - stride) {\n      //Last vertex.\n      if (closed) {\n        //Same as the first vertex.\n        p2 = startCoords;\n        break;\n      } else {\n        p0 = p0 || [0, 0];\n\n        numVertices = this.addVertices_(p0, p1, [0, 0],\n          lastSign * Instruction.END_LINE * (lineCap || 1), numVertices);\n\n        numVertices = this.addVertices_(p0, p1, [0, 0],\n          -lastSign * Instruction.END_LINE * (lineCap || 1), numVertices);\n\n        this.indices[numIndices++] = n;\n        this.indices[numIndices++] = lastIndex - 1;\n        this.indices[numIndices++] = lastIndex;\n\n        this.indices[numIndices++] = lastIndex;\n        this.indices[numIndices++] = n + 1;\n        this.indices[numIndices++] = n;\n\n        if (lineCap) {\n          numVertices = this.addVertices_(p0, p1, [0, 0],\n            lastSign * Instruction.END_LINE_CAP * lineCap, numVertices);\n\n          numVertices = this.addVertices_(p0, p1, [0, 0],\n            -lastSign * Instruction.END_LINE_CAP * lineCap, numVertices);\n\n          this.indices[numIndices++] = n + 2;\n          this.indices[numIndices++] = n;\n          this.indices[numIndices++] = n + 1;\n\n          this.indices[numIndices++] = n + 1;\n          this.indices[numIndices++] = n + 3;\n          this.indices[numIndices++] = n + 2;\n\n        }\n\n        break;\n      }\n    } else {\n      p2 = [flatCoordinates[i + stride], flatCoordinates[i + stride + 1]];\n    }\n\n    // We group CW and straight lines, thus the not so inituitive CCW checking function.\n    sign = triangleIsCounterClockwise(p0[0], p0[1], p1[0], p1[1], p2[0], p2[1])\n      ? -1 : 1;\n\n    numVertices = this.addVertices_(p0, p1, p2,\n      sign * Instruction.BEVEL_FIRST * (lineJoin || 1), numVertices);\n\n    numVertices = this.addVertices_(p0, p1, p2,\n      sign * Instruction.BEVEL_SECOND * (lineJoin || 1), numVertices);\n\n    numVertices = this.addVertices_(p0, p1, p2,\n      -sign * Instruction.MITER_BOTTOM * (lineJoin || 1), numVertices);\n\n    if (i > offset) {\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = lastIndex - 1;\n      this.indices[numIndices++] = lastIndex;\n\n      this.indices[numIndices++] = n + 2;\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = lastSign * sign > 0 ? lastIndex : lastIndex - 1;\n    }\n\n    this.indices[numIndices++] = n;\n    this.indices[numIndices++] = n + 2;\n    this.indices[numIndices++] = n + 1;\n\n    lastIndex = n + 2;\n    lastSign = sign;\n\n    //Add miter\n    if (lineJoin) {\n      numVertices = this.addVertices_(p0, p1, p2,\n        sign * Instruction.MITER_TOP * lineJoin, numVertices);\n\n      this.indices[numIndices++] = n + 1;\n      this.indices[numIndices++] = n + 3;\n      this.indices[numIndices++] = n;\n    }\n  }\n\n  if (closed) {\n    n = n || numVertices / 7;\n    sign = linearRingIsClockwise([p0[0], p0[1], p1[0], p1[1], p2[0], p2[1]], 0, 6, 2)\n      ? 1 : -1;\n\n    numVertices = this.addVertices_(p0, p1, p2,\n      sign * Instruction.BEVEL_FIRST * (lineJoin || 1), numVertices);\n\n    numVertices = this.addVertices_(p0, p1, p2,\n      -sign * Instruction.MITER_BOTTOM * (lineJoin || 1), numVertices);\n\n    this.indices[numIndices++] = n;\n    this.indices[numIndices++] = lastIndex - 1;\n    this.indices[numIndices++] = lastIndex;\n\n    this.indices[numIndices++] = n + 1;\n    this.indices[numIndices++] = n;\n    this.indices[numIndices++] = lastSign * sign > 0 ? lastIndex : lastIndex - 1;\n  }\n};\n\n/**\n * @param {Array.<number>} p0 Last coordinates.\n * @param {Array.<number>} p1 Current coordinates.\n * @param {Array.<number>} p2 Next coordinates.\n * @param {number} product Sign, instruction, and rounding product.\n * @param {number} numVertices Vertex counter.\n * @return {number} Vertex counter.\n * @private\n */\nWebGLLineStringReplay.prototype.addVertices_ = function(p0, p1, p2, product, numVertices) {\n  this.vertices[numVertices++] = p0[0];\n  this.vertices[numVertices++] = p0[1];\n  this.vertices[numVertices++] = p1[0];\n  this.vertices[numVertices++] = p1[1];\n  this.vertices[numVertices++] = p2[0];\n  this.vertices[numVertices++] = p2[1];\n  this.vertices[numVertices++] = product;\n\n  return numVertices;\n};\n\n/**\n * Check if the linestring can be drawn (i. e. valid).\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} The linestring can be drawn.\n * @private\n */\nWebGLLineStringReplay.prototype.isValid_ = function(flatCoordinates, offset, end, stride) {\n  const range = end - offset;\n  if (range < stride * 2) {\n    return false;\n  } else if (range === stride * 2) {\n    const firstP = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    const lastP = [flatCoordinates[offset + stride], flatCoordinates[offset + stride + 1]];\n    return !equals(firstP, lastP);\n  }\n\n  return true;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLLineStringReplay.prototype.drawLineString = function(lineStringGeometry, feature) {\n  let flatCoordinates = lineStringGeometry.getFlatCoordinates();\n  const stride = lineStringGeometry.getStride();\n  if (this.isValid_(flatCoordinates, 0, flatCoordinates.length, stride)) {\n    flatCoordinates = translate(flatCoordinates, 0, flatCoordinates.length,\n      stride, -this.origin[0], -this.origin[1]);\n    if (this.state_.changed) {\n      this.styleIndices_.push(this.indices.length);\n      this.state_.changed = false;\n    }\n    this.startIndices.push(this.indices.length);\n    this.startIndicesFeature.push(feature);\n    this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLLineStringReplay.prototype.drawMultiLineString = function(multiLineStringGeometry, feature) {\n  const indexCount = this.indices.length;\n  const ends = multiLineStringGeometry.getEnds();\n  ends.unshift(0);\n  const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n  const stride = multiLineStringGeometry.getStride();\n  let i, ii;\n  if (ends.length > 1) {\n    for (i = 1, ii = ends.length; i < ii; ++i) {\n      if (this.isValid_(flatCoordinates, ends[i - 1], ends[i], stride)) {\n        const lineString = translate(flatCoordinates, ends[i - 1], ends[i],\n          stride, -this.origin[0], -this.origin[1]);\n        this.drawCoordinates_(\n          lineString, 0, lineString.length, stride);\n      }\n    }\n  }\n  if (this.indices.length > indexCount) {\n    this.startIndices.push(indexCount);\n    this.startIndicesFeature.push(feature);\n    if (this.state_.changed) {\n      this.styleIndices_.push(indexCount);\n      this.state_.changed = false;\n    }\n  }\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} holeFlatCoordinates Hole flat coordinates.\n * @param {number} stride Stride.\n */\nWebGLLineStringReplay.prototype.drawPolygonCoordinates = function(\n  flatCoordinates, holeFlatCoordinates, stride) {\n  if (!lineStringIsClosed(flatCoordinates, 0, flatCoordinates.length, stride)) {\n    flatCoordinates.push(flatCoordinates[0]);\n    flatCoordinates.push(flatCoordinates[1]);\n  }\n  this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n  if (holeFlatCoordinates.length) {\n    let i, ii;\n    for (i = 0, ii = holeFlatCoordinates.length; i < ii; ++i) {\n      if (!lineStringIsClosed(holeFlatCoordinates[i], 0, holeFlatCoordinates[i].length, stride)) {\n        holeFlatCoordinates[i].push(holeFlatCoordinates[i][0]);\n        holeFlatCoordinates[i].push(holeFlatCoordinates[i][1]);\n      }\n      this.drawCoordinates_(holeFlatCoordinates[i], 0,\n        holeFlatCoordinates[i].length, stride);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {number=} opt_index Index count.\n */\nWebGLLineStringReplay.prototype.setPolygonStyle = function(feature, opt_index) {\n  const index = opt_index === undefined ? this.indices.length : opt_index;\n  this.startIndices.push(index);\n  this.startIndicesFeature.push(feature);\n  if (this.state_.changed) {\n    this.styleIndices_.push(index);\n    this.state_.changed = false;\n  }\n};\n\n\n/**\n * @return {number} Current index.\n */\nWebGLLineStringReplay.prototype.getCurrentIndex = function() {\n  return this.indices.length;\n};\n\n\n/**\n * @inheritDoc\n **/\nWebGLLineStringReplay.prototype.finish = function(context) {\n  // create, bind, and populate the vertices buffer\n  this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n  // create, bind, and populate the indices buffer\n  this.indicesBuffer = new WebGLBuffer(this.indices);\n\n  this.startIndices.push(this.indices.length);\n\n  //Clean up, if there is nothing to draw\n  if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n    this.styles_ = [];\n  }\n\n  this.vertices = null;\n  this.indices = null;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLLineStringReplay.prototype.getDeleteResourcesFunction = function(context) {\n  const verticesBuffer = this.verticesBuffer;\n  const indicesBuffer = this.indicesBuffer;\n  return function() {\n    context.deleteBuffer(verticesBuffer);\n    context.deleteBuffer(indicesBuffer);\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLLineStringReplay.prototype.setUpProgram = function(gl, context, size, pixelRatio) {\n  // get the program\n  const program = context.getProgram(fragment, vertex);\n\n  // get the locations\n  let locations;\n  if (!this.defaultLocations_) {\n    locations = new Locations(gl, program);\n    this.defaultLocations_ = locations;\n  } else {\n    locations = this.defaultLocations_;\n  }\n\n  context.useProgram(program);\n\n  // enable the vertex attrib arrays\n  gl.enableVertexAttribArray(locations.a_lastPos);\n  gl.vertexAttribPointer(locations.a_lastPos, 2, FLOAT,\n    false, 28, 0);\n\n  gl.enableVertexAttribArray(locations.a_position);\n  gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n    false, 28, 8);\n\n  gl.enableVertexAttribArray(locations.a_nextPos);\n  gl.vertexAttribPointer(locations.a_nextPos, 2, FLOAT,\n    false, 28, 16);\n\n  gl.enableVertexAttribArray(locations.a_direction);\n  gl.vertexAttribPointer(locations.a_direction, 1, FLOAT,\n    false, 28, 24);\n\n  // Enable renderer specific uniforms.\n  gl.uniform2fv(locations.u_size, size);\n  gl.uniform1f(locations.u_pixelRatio, pixelRatio);\n\n  return locations;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLLineStringReplay.prototype.shutDownProgram = function(gl, locations) {\n  gl.disableVertexAttribArray(locations.a_lastPos);\n  gl.disableVertexAttribArray(locations.a_position);\n  gl.disableVertexAttribArray(locations.a_nextPos);\n  gl.disableVertexAttribArray(locations.a_direction);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLLineStringReplay.prototype.drawReplay = function(gl, context, skippedFeaturesHash, hitDetection) {\n  //Save GL parameters.\n  const tmpDepthFunc = /** @type {number} */ (gl.getParameter(gl.DEPTH_FUNC));\n  const tmpDepthMask = /** @type {boolean} */ (gl.getParameter(gl.DEPTH_WRITEMASK));\n\n  if (!hitDetection) {\n    gl.enable(gl.DEPTH_TEST);\n    gl.depthMask(true);\n    gl.depthFunc(gl.NOTEQUAL);\n  }\n\n  if (!isEmpty(skippedFeaturesHash)) {\n    this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n  } else {\n    //Draw by style groups to minimize drawElements() calls.\n    let i, start, end, nextStyle;\n    end = this.startIndices[this.startIndices.length - 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      start = this.styleIndices_[i];\n      nextStyle = this.styles_[i];\n      this.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n      this.drawElements(gl, context, start, end);\n      gl.clear(gl.DEPTH_BUFFER_BIT);\n      end = start;\n    }\n  }\n  if (!hitDetection) {\n    gl.disable(gl.DEPTH_TEST);\n    gl.clear(gl.DEPTH_BUFFER_BIT);\n    //Restore GL parameters.\n    gl.depthMask(tmpDepthMask);\n    gl.depthFunc(tmpDepthFunc);\n  }\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {Object} skippedFeaturesHash Ids of features to skip.\n */\nWebGLLineStringReplay.prototype.drawReplaySkipping_ = function(gl, context, skippedFeaturesHash) {\n  let i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex, featureStart;\n  featureIndex = this.startIndices.length - 2;\n  end = start = this.startIndices[featureIndex + 1];\n  for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n    nextStyle = this.styles_[i];\n    this.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n    groupStart = this.styleIndices_[i];\n\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      featureStart = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid]) {\n        if (start !== end) {\n          this.drawElements(gl, context, start, end);\n          gl.clear(gl.DEPTH_BUFFER_BIT);\n        }\n        end = featureStart;\n      }\n      featureIndex--;\n      start = featureStart;\n    }\n    if (start !== end) {\n      this.drawElements(gl, context, start, end);\n      gl.clear(gl.DEPTH_BUFFER_BIT);\n    }\n    start = end = groupStart;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLLineStringReplay.prototype.drawHitDetectionReplayOneByOne = function(gl, context, skippedFeaturesHash,\n  featureCallback, opt_hitExtent) {\n  let i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex;\n  featureIndex = this.startIndices.length - 2;\n  end = this.startIndices[featureIndex + 1];\n  for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n    nextStyle = this.styles_[i];\n    this.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n    groupStart = this.styleIndices_[i];\n\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      start = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid] === undefined &&\n          feature.getGeometry() &&\n          (opt_hitExtent === undefined || intersects(\n            /** @type {Array<number>} */ (opt_hitExtent),\n            feature.getGeometry().getExtent()))) {\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        this.drawElements(gl, context, start, end);\n\n        const result = featureCallback(feature);\n\n        if (result) {\n          return result;\n        }\n\n      }\n      featureIndex--;\n      end = start;\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {Array.<number>} color Color.\n * @param {number} lineWidth Line width.\n * @param {number} miterLimit Miter limit.\n */\nWebGLLineStringReplay.prototype.setStrokeStyle_ = function(gl, color, lineWidth, miterLimit) {\n  gl.uniform4fv(this.defaultLocations_.u_color, color);\n  gl.uniform1f(this.defaultLocations_.u_lineWidth, lineWidth);\n  gl.uniform1f(this.defaultLocations_.u_miterLimit, miterLimit);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLLineStringReplay.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  const strokeStyleLineCap = strokeStyle.getLineCap();\n  this.state_.lineCap = strokeStyleLineCap !== undefined ?\n    strokeStyleLineCap : DEFAULT_LINECAP;\n  const strokeStyleLineDash = strokeStyle.getLineDash();\n  this.state_.lineDash = strokeStyleLineDash ?\n    strokeStyleLineDash : DEFAULT_LINEDASH;\n  const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n  this.state_.lineDashOffset = strokeStyleLineDashOffset ?\n    strokeStyleLineDashOffset : DEFAULT_LINEDASHOFFSET;\n  const strokeStyleLineJoin = strokeStyle.getLineJoin();\n  this.state_.lineJoin = strokeStyleLineJoin !== undefined ?\n    strokeStyleLineJoin : DEFAULT_LINEJOIN;\n  let strokeStyleColor = strokeStyle.getColor();\n  if (!(strokeStyleColor instanceof CanvasGradient) &&\n      !(strokeStyleColor instanceof CanvasPattern)) {\n    strokeStyleColor = asArray(strokeStyleColor).map(function(c, i) {\n      return i != 3 ? c / 255 : c;\n    }) || DEFAULT_STROKESTYLE;\n  } else {\n    strokeStyleColor = DEFAULT_STROKESTYLE;\n  }\n  let strokeStyleWidth = strokeStyle.getWidth();\n  strokeStyleWidth = strokeStyleWidth !== undefined ?\n    strokeStyleWidth : DEFAULT_LINEWIDTH;\n  let strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n  strokeStyleMiterLimit = strokeStyleMiterLimit !== undefined ?\n    strokeStyleMiterLimit : DEFAULT_MITERLIMIT;\n  if (!this.state_.strokeColor || !equals(this.state_.strokeColor, strokeStyleColor) ||\n      this.state_.lineWidth !== strokeStyleWidth || this.state_.miterLimit !== strokeStyleMiterLimit) {\n    this.state_.changed = true;\n    this.state_.strokeColor = strokeStyleColor;\n    this.state_.lineWidth = strokeStyleWidth;\n    this.state_.miterLimit = strokeStyleMiterLimit;\n    this.styles_.push([strokeStyleColor, strokeStyleWidth, strokeStyleMiterLimit]);\n  }\n};\n\nexport default WebGLLineStringReplay;\n","/**\n * @module ol/render/webgl/polygonreplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport const fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\n\\n\\n\\nuniform vec4 u_color;\\nuniform float u_opacity;\\n\\nvoid main(void) {\\n  gl_FragColor = u_color;\\n  float alpha = u_color.a * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;uniform vec4 e;uniform float f;void main(void){gl_FragColor=e;float alpha=e.a*f;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\nexport const vertex = new WebGLVertex(DEBUG_WEBGL ?\n  '\\n\\nattribute vec2 a_position;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\n\\nvoid main(void) {\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\\n}\\n\\n\\n' :\n  'attribute vec2 a;uniform mat4 b;uniform mat4 c;uniform mat4 d;void main(void){gl_Position=b*vec4(a,0.0,1.0);}');\n","/**\n * @module ol/render/webgl/polygonreplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\n/**\n * @constructor\n * @param {WebGLRenderingContext} gl GL.\n * @param {WebGLProgram} program Program.\n * @struct\n */\nconst Locations = function(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'b');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'c');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'd');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_color = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_color' : 'e');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'a');\n};\n\nexport default Locations;\n","/**\n * @module ol/structs/LinkedList\n */\n\n\n/**\n * @typedef {Object} Item\n * @property {module:ol/structs/LinkedList~Item} [prev]\n * @property {module:ol/structs/LinkedList~Item} [next]\n * @property {?} data\n */\n\n\n/**\n * Creates an empty linked list structure.\n *\n * @constructor\n * @struct\n * @param {boolean=} opt_circular The last item is connected to the first one,\n * and the first item to the last one. Default is true.\n */\nconst LinkedList = function(opt_circular) {\n\n  /**\n   * @private\n   * @type {module:ol/structs/LinkedList~Item|undefined}\n   */\n  this.first_;\n\n  /**\n   * @private\n   * @type {module:ol/structs/LinkedList~Item|undefined}\n   */\n  this.last_;\n\n  /**\n   * @private\n   * @type {module:ol/structs/LinkedList~Item|undefined}\n   */\n  this.head_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.circular_ = opt_circular === undefined ? true : opt_circular;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.length_ = 0;\n};\n\n/**\n * Inserts an item into the linked list right after the current one.\n *\n * @param {?} data Item data.\n */\nLinkedList.prototype.insertItem = function(data) {\n\n  /** @type {module:ol/structs/LinkedList~Item} */\n  const item = {\n    prev: undefined,\n    next: undefined,\n    data: data\n  };\n\n  const head = this.head_;\n\n  //Initialize the list.\n  if (!head) {\n    this.first_ = item;\n    this.last_ = item;\n    if (this.circular_) {\n      item.next = item;\n      item.prev = item;\n    }\n  } else {\n    //Link the new item to the adjacent ones.\n    const next = head.next;\n    item.prev = head;\n    item.next = next;\n    head.next = item;\n    if (next) {\n      next.prev = item;\n    }\n\n    if (head === this.last_) {\n      this.last_ = item;\n    }\n  }\n  this.head_ = item;\n  this.length_++;\n};\n\n/**\n * Removes the current item from the list. Sets the cursor to the next item,\n * if possible.\n */\nLinkedList.prototype.removeItem = function() {\n  const head = this.head_;\n  if (head) {\n    const next = head.next;\n    const prev = head.prev;\n    if (next) {\n      next.prev = prev;\n    }\n    if (prev) {\n      prev.next = next;\n    }\n    this.head_ = next || prev;\n\n    if (this.first_ === this.last_) {\n      this.head_ = undefined;\n      this.first_ = undefined;\n      this.last_ = undefined;\n    } else if (this.first_ === head) {\n      this.first_ = this.head_;\n    } else if (this.last_ === head) {\n      this.last_ = prev ? this.head_.prev : this.head_;\n    }\n    this.length_--;\n  }\n};\n\n/**\n * Sets the cursor to the first item, and returns the associated data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.firstItem = function() {\n  this.head_ = this.first_;\n  if (this.head_) {\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n* Sets the cursor to the last item, and returns the associated data.\n*\n* @return {?} Item data.\n*/\nLinkedList.prototype.lastItem = function() {\n  this.head_ = this.last_;\n  if (this.head_) {\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Sets the cursor to the next item, and returns the associated data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.nextItem = function() {\n  if (this.head_ && this.head_.next) {\n    this.head_ = this.head_.next;\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Returns the next item's data without moving the cursor.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.getNextItem = function() {\n  if (this.head_ && this.head_.next) {\n    return this.head_.next.data;\n  }\n  return undefined;\n};\n\n/**\n * Sets the cursor to the previous item, and returns the associated data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.prevItem = function() {\n  if (this.head_ && this.head_.prev) {\n    this.head_ = this.head_.prev;\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Returns the previous item's data without moving the cursor.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.getPrevItem = function() {\n  if (this.head_ && this.head_.prev) {\n    return this.head_.prev.data;\n  }\n  return undefined;\n};\n\n/**\n * Returns the current item's data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.getCurrItem = function() {\n  if (this.head_) {\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Sets the first item of the list. This only works for circular lists, and sets\n * the last item accordingly.\n */\nLinkedList.prototype.setFirstItem = function() {\n  if (this.circular_ && this.head_) {\n    this.first_ = this.head_;\n    this.last_ = this.head_.prev;\n  }\n};\n\n/**\n * Concatenates two lists.\n * @param {module:ol/structs/LinkedList} list List to merge into the current list.\n */\nLinkedList.prototype.concat = function(list) {\n  if (list.head_) {\n    if (this.head_) {\n      const end = this.head_.next;\n      this.head_.next = list.first_;\n      list.first_.prev = this.head_;\n      end.prev = list.last_;\n      list.last_.next = end;\n      this.length_ += list.length_;\n    } else {\n      this.head_ = list.head_;\n      this.first_ = list.first_;\n      this.last_ = list.last_;\n      this.length_ = list.length_;\n    }\n    list.head_ = undefined;\n    list.first_ = undefined;\n    list.last_ = undefined;\n    list.length_ = 0;\n  }\n};\n\n/**\n * Returns the current length of the list.\n *\n * @return {number} Length.\n */\nLinkedList.prototype.getLength = function() {\n  return this.length_;\n};\nexport default LinkedList;\n","/**\n * @module ol/render/webgl/PolygonReplay\n */\nimport {getUid, inherits} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {intersects} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {linearRingContainsXY} from '../../geom/flat/contains.js';\nimport {linearRingIsClockwise} from '../../geom/flat/orient.js';\nimport {translate} from '../../geom/flat/transform.js';\nimport {fragment, vertex} from '../webgl/polygonreplay/defaultshader.js';\nimport Locations from '../webgl/polygonreplay/defaultshader/Locations.js';\nimport WebGLLineStringReplay from '../webgl/LineStringReplay.js';\nimport WebGLReplay from '../webgl/Replay.js';\nimport {triangleIsCounterClockwise, EPSILON, DEFAULT_FILLSTYLE} from '../webgl.js';\nimport Stroke from '../../style/Stroke.js';\nimport LinkedList from '../../structs/LinkedList.js';\nimport RBush from '../../structs/RBush.js';\nimport {FLOAT} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n\n/**\n * @typedef {Object} PolygonVertex\n * @property {number} x\n * @property {number} y\n * @property {number} i\n * @property {boolean} [reflex]\n */\n\n/**\n * @typedef {Object} PolygonSegment\n * @property {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0\n * @property {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/render/webgl/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @struct\n */\nconst WebGLPolygonReplay = function(tolerance, maxExtent) {\n  WebGLReplay.call(this, tolerance, maxExtent);\n\n  this.lineStringReplay = new WebGLLineStringReplay(\n    tolerance, maxExtent);\n\n  /**\n   * @private\n   * @type {module:ol/render/webgl/polygonreplay/defaultshader/Locations}\n   */\n  this.defaultLocations_ = null;\n\n  /**\n   * @private\n   * @type {Array.<Array.<number>>}\n   */\n  this.styles_ = [];\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.styleIndices_ = [];\n\n  /**\n   * @private\n   * @type {{fillColor: (Array.<number>|null),\n   *         changed: boolean}|null}\n   */\n  this.state_ = {\n    fillColor: null,\n    changed: false\n  };\n\n};\n\ninherits(WebGLPolygonReplay, WebGLReplay);\n\n\n/**\n * Draw one polygon.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} holeFlatCoordinates Hole flat coordinates.\n * @param {number} stride Stride.\n * @private\n */\nWebGLPolygonReplay.prototype.drawCoordinates_ = function(\n  flatCoordinates, holeFlatCoordinates, stride) {\n  // Triangulate the polygon\n  const outerRing = new LinkedList();\n  const rtree = new RBush();\n  // Initialize the outer ring\n  this.processFlatCoordinates_(flatCoordinates, stride, outerRing, rtree, true);\n  const maxCoords = this.getMaxCoords_(outerRing);\n\n  // Eliminate holes, if there are any\n  if (holeFlatCoordinates.length) {\n    let i, ii;\n    const holeLists = [];\n    for (i = 0, ii = holeFlatCoordinates.length; i < ii; ++i) {\n      const holeList = {\n        list: new LinkedList(),\n        maxCoords: undefined,\n        rtree: new RBush()\n      };\n      holeLists.push(holeList);\n      this.processFlatCoordinates_(holeFlatCoordinates[i],\n        stride, holeList.list, holeList.rtree, false);\n      this.classifyPoints_(holeList.list, holeList.rtree, true);\n      holeList.maxCoords = this.getMaxCoords_(holeList.list);\n    }\n    holeLists.sort(function(a, b) {\n      return b.maxCoords[0] === a.maxCoords[0] ?\n        a.maxCoords[1] - b.maxCoords[1] : b.maxCoords[0] - a.maxCoords[0];\n    });\n    for (i = 0; i < holeLists.length; ++i) {\n      const currList = holeLists[i].list;\n      const start = currList.firstItem();\n      let currItem = start;\n      let intersection;\n      do {\n        //TODO: Triangulate holes when they intersect the outer ring.\n        if (this.getIntersections_(currItem, rtree).length) {\n          intersection = true;\n          break;\n        }\n        currItem = currList.nextItem();\n      } while (start !== currItem);\n      if (!intersection) {\n        if (this.bridgeHole_(currList, holeLists[i].maxCoords[0], outerRing, maxCoords[0], rtree)) {\n          rtree.concat(holeLists[i].rtree);\n          this.classifyPoints_(outerRing, rtree, false);\n        }\n      }\n    }\n  } else {\n    this.classifyPoints_(outerRing, rtree, false);\n  }\n  this.triangulate_(outerRing, rtree);\n};\n\n\n/**\n * Inserts flat coordinates in a linked list and adds them to the vertex buffer.\n * @private\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {module:ol/structs/LinkedList} list Linked list.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n * @param {boolean} clockwise Coordinate order should be clockwise.\n */\nWebGLPolygonReplay.prototype.processFlatCoordinates_ = function(\n  flatCoordinates, stride, list, rtree, clockwise) {\n  const isClockwise = linearRingIsClockwise(flatCoordinates,\n    0, flatCoordinates.length, stride);\n  let i, ii;\n  let n = this.vertices.length / 2;\n  /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n  let start;\n  /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n  let p0;\n  /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n  let p1;\n  const extents = [];\n  const segments = [];\n  if (clockwise === isClockwise) {\n    start = this.createPoint_(flatCoordinates[0], flatCoordinates[1], n++);\n    p0 = start;\n    for (i = stride, ii = flatCoordinates.length; i < ii; i += stride) {\n      p1 = this.createPoint_(flatCoordinates[i], flatCoordinates[i + 1], n++);\n      segments.push(this.insertItem_(p0, p1, list));\n      extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n        Math.max(p0.y, p1.y)]);\n      p0 = p1;\n    }\n    segments.push(this.insertItem_(p1, start, list));\n    extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n      Math.max(p0.y, p1.y)]);\n  } else {\n    const end = flatCoordinates.length - stride;\n    start = this.createPoint_(flatCoordinates[end], flatCoordinates[end + 1], n++);\n    p0 = start;\n    for (i = end - stride, ii = 0; i >= ii; i -= stride) {\n      p1 = this.createPoint_(flatCoordinates[i], flatCoordinates[i + 1], n++);\n      segments.push(this.insertItem_(p0, p1, list));\n      extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n        Math.max(p0.y, p1.y)]);\n      p0 = p1;\n    }\n    segments.push(this.insertItem_(p1, start, list));\n    extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n      Math.max(p0.y, p1.y)]);\n  }\n  rtree.load(extents, segments);\n};\n\n\n/**\n * Returns the rightmost coordinates of a polygon on the X axis.\n * @private\n * @param {module:ol/structs/LinkedList} list Polygons ring.\n * @return {Array.<number>} Max X coordinates.\n */\nWebGLPolygonReplay.prototype.getMaxCoords_ = function(list) {\n  const start = list.firstItem();\n  let seg = start;\n  let maxCoords = [seg.p0.x, seg.p0.y];\n\n  do {\n    seg = list.nextItem();\n    if (seg.p0.x > maxCoords[0]) {\n      maxCoords = [seg.p0.x, seg.p0.y];\n    }\n  } while (seg !== start);\n\n  return maxCoords;\n};\n\n\n/**\n * Classifies the points of a polygon list as convex, reflex. Removes collinear vertices.\n * @private\n * @param {module:ol/structs/LinkedList} list Polygon ring.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n * @param {boolean} ccw The orientation of the polygon is counter-clockwise.\n * @return {boolean} There were reclassified points.\n */\nWebGLPolygonReplay.prototype.classifyPoints_ = function(list, rtree, ccw) {\n  let start = list.firstItem();\n  let s0 = start;\n  let s1 = list.nextItem();\n  let pointsReclassified = false;\n  do {\n    const reflex = ccw ? triangleIsCounterClockwise(s1.p1.x,\n      s1.p1.y, s0.p1.x, s0.p1.y, s0.p0.x, s0.p0.y) :\n      triangleIsCounterClockwise(s0.p0.x, s0.p0.y, s0.p1.x,\n        s0.p1.y, s1.p1.x, s1.p1.y);\n    if (reflex === undefined) {\n      this.removeItem_(s0, s1, list, rtree);\n      pointsReclassified = true;\n      if (s1 === start) {\n        start = list.getNextItem();\n      }\n      s1 = s0;\n      list.prevItem();\n    } else if (s0.p1.reflex !== reflex) {\n      s0.p1.reflex = reflex;\n      pointsReclassified = true;\n    }\n    s0 = s1;\n    s1 = list.nextItem();\n  } while (s0 !== start);\n  return pointsReclassified;\n};\n\n\n/**\n * @private\n * @param {module:ol/structs/LinkedList} hole Linked list of the hole.\n * @param {number} holeMaxX Maximum X value of the hole.\n * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n * @param {number} listMaxX Maximum X value of the polygon.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n * @return {boolean} Bridging was successful.\n */\nWebGLPolygonReplay.prototype.bridgeHole_ = function(hole, holeMaxX,\n  list, listMaxX, rtree) {\n  let seg = hole.firstItem();\n  while (seg.p1.x !== holeMaxX) {\n    seg = hole.nextItem();\n  }\n\n  const p1 = seg.p1;\n  /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n  const p2 = {x: listMaxX, y: p1.y, i: -1};\n  let minDist = Infinity;\n  let i, ii, bestPoint;\n  /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n  let p5;\n\n  const intersectingSegments = this.getIntersections_({p0: p1, p1: p2}, rtree, true);\n  for (i = 0, ii = intersectingSegments.length; i < ii; ++i) {\n    const currSeg = intersectingSegments[i];\n    const intersection = this.calculateIntersection_(p1, p2, currSeg.p0,\n      currSeg.p1, true);\n    const dist = Math.abs(p1.x - intersection[0]);\n    if (dist < minDist && triangleIsCounterClockwise(p1.x, p1.y,\n      currSeg.p0.x, currSeg.p0.y, currSeg.p1.x, currSeg.p1.y) !== undefined) {\n      minDist = dist;\n      p5 = {x: intersection[0], y: intersection[1], i: -1};\n      seg = currSeg;\n    }\n  }\n  if (minDist === Infinity) {\n    return false;\n  }\n  bestPoint = seg.p1;\n\n  if (minDist > 0) {\n    const pointsInTriangle = this.getPointsInTriangle_(p1, p5, seg.p1, rtree);\n    if (pointsInTriangle.length) {\n      let theta = Infinity;\n      for (i = 0, ii = pointsInTriangle.length; i < ii; ++i) {\n        const currPoint = pointsInTriangle[i];\n        const currTheta = Math.atan2(p1.y - currPoint.y, p2.x - currPoint.x);\n        if (currTheta < theta || (currTheta === theta && currPoint.x < bestPoint.x)) {\n          theta = currTheta;\n          bestPoint = currPoint;\n        }\n      }\n    }\n  }\n\n  seg = list.firstItem();\n  while (seg.p1.x !== bestPoint.x || seg.p1.y !== bestPoint.y) {\n    seg = list.nextItem();\n  }\n\n  //We clone the bridge points as they can have different convexity.\n  const p0Bridge = {x: p1.x, y: p1.y, i: p1.i, reflex: undefined};\n  const p1Bridge = {x: seg.p1.x, y: seg.p1.y, i: seg.p1.i, reflex: undefined};\n\n  hole.getNextItem().p0 = p0Bridge;\n  this.insertItem_(p1, seg.p1, hole, rtree);\n  this.insertItem_(p1Bridge, p0Bridge, hole, rtree);\n  seg.p1 = p1Bridge;\n  hole.setFirstItem();\n  list.concat(hole);\n\n  return true;\n};\n\n\n/**\n * @private\n * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n */\nWebGLPolygonReplay.prototype.triangulate_ = function(list, rtree) {\n  let ccw = false;\n  let simple = this.isSimple_(list, rtree);\n\n  // Start clipping ears\n  while (list.getLength() > 3) {\n    if (simple) {\n      if (!this.clipEars_(list, rtree, simple, ccw)) {\n        if (!this.classifyPoints_(list, rtree, ccw)) {\n          // Due to the behavior of OL's PIP algorithm, the ear clipping cannot\n          // introduce touching segments. However, the original data may have some.\n          if (!this.resolveSelfIntersections_(list, rtree, true)) {\n            break;\n          }\n        }\n      }\n    } else {\n      if (!this.clipEars_(list, rtree, simple, ccw)) {\n        // We ran out of ears, try to reclassify.\n        if (!this.classifyPoints_(list, rtree, ccw)) {\n          // We have a bad polygon, try to resolve local self-intersections.\n          if (!this.resolveSelfIntersections_(list, rtree)) {\n            simple = this.isSimple_(list, rtree);\n            if (!simple) {\n              // We have a really bad polygon, try more time consuming methods.\n              this.splitPolygon_(list, rtree);\n              break;\n            } else {\n              ccw = !this.isClockwise_(list);\n              this.classifyPoints_(list, rtree, ccw);\n            }\n          }\n        }\n      }\n    }\n  }\n  if (list.getLength() === 3) {\n    let numIndices = this.indices.length;\n    this.indices[numIndices++] = list.getPrevItem().p0.i;\n    this.indices[numIndices++] = list.getCurrItem().p0.i;\n    this.indices[numIndices++] = list.getNextItem().p0.i;\n  }\n};\n\n\n/**\n * @private\n * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n * @param {boolean} simple The polygon is simple.\n * @param {boolean} ccw Orientation of the polygon is counter-clockwise.\n * @return {boolean} There were processed ears.\n */\nWebGLPolygonReplay.prototype.clipEars_ = function(list, rtree, simple, ccw) {\n  let numIndices = this.indices.length;\n  let start = list.firstItem();\n  let s0 = list.getPrevItem();\n  let s1 = start;\n  let s2 = list.nextItem();\n  let s3 = list.getNextItem();\n  let p0, p1, p2;\n  let processedEars = false;\n  do {\n    p0 = s1.p0;\n    p1 = s1.p1;\n    p2 = s2.p1;\n    if (p1.reflex === false) {\n      // We might have a valid ear\n      let variableCriterion;\n      if (simple) {\n        variableCriterion = this.getPointsInTriangle_(p0, p1, p2, rtree, true).length === 0;\n      } else {\n        variableCriterion = ccw ? this.diagonalIsInside_(s3.p1, p2, p1, p0,\n          s0.p0) : this.diagonalIsInside_(s0.p0, p0, p1, p2, s3.p1);\n      }\n      if ((simple || this.getIntersections_({p0: p0, p1: p2}, rtree).length === 0) &&\n          variableCriterion) {\n        //The diagonal is completely inside the polygon\n        if (simple || p0.reflex === false || p2.reflex === false ||\n            linearRingIsClockwise([s0.p0.x, s0.p0.y, p0.x,\n              p0.y, p1.x, p1.y, p2.x, p2.y, s3.p1.x, s3.p1.y], 0, 10, 2) === !ccw) {\n          //The diagonal is persumably valid, we have an ear\n          this.indices[numIndices++] = p0.i;\n          this.indices[numIndices++] = p1.i;\n          this.indices[numIndices++] = p2.i;\n          this.removeItem_(s1, s2, list, rtree);\n          if (s2 === start) {\n            start = s3;\n          }\n          processedEars = true;\n        }\n      }\n    }\n    // Else we have a reflex point.\n    s0 = list.getPrevItem();\n    s1 = list.getCurrItem();\n    s2 = list.nextItem();\n    s3 = list.getNextItem();\n  } while (s1 !== start && list.getLength() > 3);\n\n  return processedEars;\n};\n\n\n/**\n * @private\n * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n * @param {boolean=} opt_touch Resolve touching segments.\n * @return {boolean} There were resolved intersections.\n*/\nWebGLPolygonReplay.prototype.resolveSelfIntersections_ = function(\n  list, rtree, opt_touch) {\n  const start = list.firstItem();\n  list.nextItem();\n  let s0 = start;\n  let s1 = list.nextItem();\n  let resolvedIntersections = false;\n\n  do {\n    const intersection = this.calculateIntersection_(s0.p0, s0.p1, s1.p0, s1.p1,\n      opt_touch);\n    if (intersection) {\n      let breakCond = false;\n      const numVertices = this.vertices.length;\n      let numIndices = this.indices.length;\n      const n = numVertices / 2;\n      const seg = list.prevItem();\n      list.removeItem();\n      rtree.remove(seg);\n      breakCond = (seg === start);\n      let p;\n      if (opt_touch) {\n        if (intersection[0] === s0.p0.x && intersection[1] === s0.p0.y) {\n          list.prevItem();\n          p = s0.p0;\n          s1.p0 = p;\n          rtree.remove(s0);\n          breakCond = breakCond || (s0 === start);\n        } else {\n          p = s1.p1;\n          s0.p1 = p;\n          rtree.remove(s1);\n          breakCond = breakCond || (s1 === start);\n        }\n        list.removeItem();\n      } else {\n        p = this.createPoint_(intersection[0], intersection[1], n);\n        s0.p1 = p;\n        s1.p0 = p;\n        rtree.update([Math.min(s0.p0.x, s0.p1.x), Math.min(s0.p0.y, s0.p1.y),\n          Math.max(s0.p0.x, s0.p1.x), Math.max(s0.p0.y, s0.p1.y)], s0);\n        rtree.update([Math.min(s1.p0.x, s1.p1.x), Math.min(s1.p0.y, s1.p1.y),\n          Math.max(s1.p0.x, s1.p1.x), Math.max(s1.p0.y, s1.p1.y)], s1);\n      }\n\n      this.indices[numIndices++] = seg.p0.i;\n      this.indices[numIndices++] = seg.p1.i;\n      this.indices[numIndices++] = p.i;\n\n      resolvedIntersections = true;\n      if (breakCond) {\n        break;\n      }\n    }\n\n    s0 = list.getPrevItem();\n    s1 = list.nextItem();\n  } while (s0 !== start);\n  return resolvedIntersections;\n};\n\n\n/**\n * @private\n * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n * @return {boolean} The polygon is simple.\n */\nWebGLPolygonReplay.prototype.isSimple_ = function(list, rtree) {\n  const start = list.firstItem();\n  let seg = start;\n  do {\n    if (this.getIntersections_(seg, rtree).length) {\n      return false;\n    }\n    seg = list.nextItem();\n  } while (seg !== start);\n  return true;\n};\n\n\n/**\n * @private\n * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n * @return {boolean} Orientation is clockwise.\n */\nWebGLPolygonReplay.prototype.isClockwise_ = function(list) {\n  const length = list.getLength() * 2;\n  const flatCoordinates = new Array(length);\n  const start = list.firstItem();\n  let seg = start;\n  let i = 0;\n  do {\n    flatCoordinates[i++] = seg.p0.x;\n    flatCoordinates[i++] = seg.p0.y;\n    seg = list.nextItem();\n  } while (seg !== start);\n  return linearRingIsClockwise(flatCoordinates, 0, length, 2);\n};\n\n\n/**\n * @private\n * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n */\nWebGLPolygonReplay.prototype.splitPolygon_ = function(list, rtree) {\n  const start = list.firstItem();\n  let s0 = start;\n  do {\n    const intersections = this.getIntersections_(s0, rtree);\n    if (intersections.length) {\n      const s1 = intersections[0];\n      const n = this.vertices.length / 2;\n      const intersection = this.calculateIntersection_(s0.p0,\n        s0.p1, s1.p0, s1.p1);\n      const p = this.createPoint_(intersection[0], intersection[1], n);\n      const newPolygon = new LinkedList();\n      const newRtree = new RBush();\n      this.insertItem_(p, s0.p1, newPolygon, newRtree);\n      s0.p1 = p;\n      rtree.update([Math.min(s0.p0.x, p.x), Math.min(s0.p0.y, p.y),\n        Math.max(s0.p0.x, p.x), Math.max(s0.p0.y, p.y)], s0);\n      let currItem = list.nextItem();\n      while (currItem !== s1) {\n        this.insertItem_(currItem.p0, currItem.p1, newPolygon, newRtree);\n        rtree.remove(currItem);\n        list.removeItem();\n        currItem = list.getCurrItem();\n      }\n      this.insertItem_(s1.p0, p, newPolygon, newRtree);\n      s1.p0 = p;\n      rtree.update([Math.min(s1.p1.x, p.x), Math.min(s1.p1.y, p.y),\n        Math.max(s1.p1.x, p.x), Math.max(s1.p1.y, p.y)], s1);\n      this.classifyPoints_(list, rtree, false);\n      this.triangulate_(list, rtree);\n      this.classifyPoints_(newPolygon, newRtree, false);\n      this.triangulate_(newPolygon, newRtree);\n      break;\n    }\n    s0 = list.nextItem();\n  } while (s0 !== start);\n};\n\n\n/**\n * @private\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @param {number} i Index.\n * @return {module:ol/render/webgl/PolygonReplay~PolygonVertex} List item.\n */\nWebGLPolygonReplay.prototype.createPoint_ = function(x, y, i) {\n  let numVertices = this.vertices.length;\n  this.vertices[numVertices++] = x;\n  this.vertices[numVertices++] = y;\n  /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n  const p = {\n    x: x,\n    y: y,\n    i: i,\n    reflex: undefined\n  };\n  return p;\n};\n\n\n/**\n * @private\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0 First point of segment.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1 Second point of segment.\n * @param {module:ol/structs/LinkedList} list Polygon ring.\n * @param {module:ol/structs/RBush=} opt_rtree Insert the segment into the R-Tree.\n * @return {module:ol/render/webgl/PolygonReplay~PolygonSegment} segment.\n */\nWebGLPolygonReplay.prototype.insertItem_ = function(p0, p1, list, opt_rtree) {\n  const seg = {\n    p0: p0,\n    p1: p1\n  };\n  list.insertItem(seg);\n  if (opt_rtree) {\n    opt_rtree.insert([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y),\n      Math.max(p0.x, p1.x), Math.max(p0.y, p1.y)], seg);\n  }\n  return seg;\n};\n\n\n/**\n  * @private\n  * @param {module:ol/render/webgl/PolygonReplay~PolygonSegment} s0 Segment before the remove candidate.\n  * @param {module:ol/render/webgl/PolygonReplay~PolygonSegment} s1 Remove candidate segment.\n  * @param {module:ol/structs/LinkedList} list Polygon ring.\n  * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n  */\nWebGLPolygonReplay.prototype.removeItem_ = function(s0, s1, list, rtree) {\n  if (list.getCurrItem() === s1) {\n    list.removeItem();\n    s0.p1 = s1.p1;\n    rtree.remove(s1);\n    rtree.update([Math.min(s0.p0.x, s0.p1.x), Math.min(s0.p0.y, s0.p1.y),\n      Math.max(s0.p0.x, s0.p1.x), Math.max(s0.p0.y, s0.p1.y)], s0);\n  }\n};\n\n\n/**\n * @private\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0 First point.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1 Second point.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p2 Third point.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n * @param {boolean=} opt_reflex Only include reflex points.\n * @return {Array.<module:ol/render/webgl/PolygonReplay~PolygonVertex>} Points in the triangle.\n */\nWebGLPolygonReplay.prototype.getPointsInTriangle_ = function(p0, p1, p2, rtree, opt_reflex) {\n  const result = [];\n  const segmentsInExtent = rtree.getInExtent([Math.min(p0.x, p1.x, p2.x),\n    Math.min(p0.y, p1.y, p2.y), Math.max(p0.x, p1.x, p2.x), Math.max(p0.y,\n      p1.y, p2.y)]);\n  for (let i = 0, ii = segmentsInExtent.length; i < ii; ++i) {\n    for (const j in segmentsInExtent[i]) {\n      const p = segmentsInExtent[i][j];\n      if (typeof p === 'object' && (!opt_reflex || p.reflex)) {\n        if ((p.x !== p0.x || p.y !== p0.y) && (p.x !== p1.x || p.y !== p1.y) &&\n            (p.x !== p2.x || p.y !== p2.y) && result.indexOf(p) === -1 &&\n            linearRingContainsXY([p0.x, p0.y, p1.x, p1.y, p2.x, p2.y], 0, 6, 2, p.x, p.y)) {\n          result.push(p);\n        }\n      }\n    }\n  }\n  return result;\n};\n\n\n/**\n * @private\n * @param {module:ol/render/webgl/PolygonReplay~PolygonSegment} segment Segment.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n * @param {boolean=} opt_touch Touching segments should be considered an intersection.\n * @return {Array.<module:ol/render/webgl/PolygonReplay~PolygonSegment>} Intersecting segments.\n */\nWebGLPolygonReplay.prototype.getIntersections_ = function(segment, rtree, opt_touch) {\n  const p0 = segment.p0;\n  const p1 = segment.p1;\n  const segmentsInExtent = rtree.getInExtent([Math.min(p0.x, p1.x),\n    Math.min(p0.y, p1.y), Math.max(p0.x, p1.x), Math.max(p0.y, p1.y)]);\n  const result = [];\n  for (let i = 0, ii = segmentsInExtent.length; i < ii; ++i) {\n    const currSeg = segmentsInExtent[i];\n    if (segment !== currSeg && (opt_touch || currSeg.p0 !== p1 || currSeg.p1 !== p0) &&\n        this.calculateIntersection_(p0, p1, currSeg.p0, currSeg.p1, opt_touch)) {\n      result.push(currSeg);\n    }\n  }\n  return result;\n};\n\n\n/**\n * Line intersection algorithm by Paul Bourke.\n * @see http://paulbourke.net/geometry/pointlineplane/\n *\n * @private\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0 First point.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1 Second point.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p2 Third point.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p3 Fourth point.\n * @param {boolean=} opt_touch Touching segments should be considered an intersection.\n * @return {Array.<number>|undefined} Intersection coordinates.\n */\nWebGLPolygonReplay.prototype.calculateIntersection_ = function(p0, p1, p2, p3, opt_touch) {\n  const denom = (p3.y - p2.y) * (p1.x - p0.x) - (p3.x - p2.x) * (p1.y - p0.y);\n  if (denom !== 0) {\n    const ua = ((p3.x - p2.x) * (p0.y - p2.y) - (p3.y - p2.y) * (p0.x - p2.x)) / denom;\n    const ub = ((p1.x - p0.x) * (p0.y - p2.y) - (p1.y - p0.y) * (p0.x - p2.x)) / denom;\n    if ((!opt_touch && ua > EPSILON && ua < 1 - EPSILON &&\n        ub > EPSILON && ub < 1 - EPSILON) || (opt_touch &&\n        ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1)) {\n      return [p0.x + ua * (p1.x - p0.x), p0.y + ua * (p1.y - p0.y)];\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0 Point before the start of the diagonal.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1 Start point of the diagonal.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p2 Ear candidate.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p3 End point of the diagonal.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p4 Point after the end of the diagonal.\n * @return {boolean} Diagonal is inside the polygon.\n */\nWebGLPolygonReplay.prototype.diagonalIsInside_ = function(p0, p1, p2, p3, p4) {\n  if (p1.reflex === undefined || p3.reflex === undefined) {\n    return false;\n  }\n  const p1IsLeftOf = (p2.x - p3.x) * (p1.y - p3.y) > (p2.y - p3.y) * (p1.x - p3.x);\n  const p1IsRightOf = (p4.x - p3.x) * (p1.y - p3.y) < (p4.y - p3.y) * (p1.x - p3.x);\n  const p3IsLeftOf = (p0.x - p1.x) * (p3.y - p1.y) > (p0.y - p1.y) * (p3.x - p1.x);\n  const p3IsRightOf = (p2.x - p1.x) * (p3.y - p1.y) < (p2.y - p1.y) * (p3.x - p1.x);\n  const p1InCone = p3.reflex ? p1IsRightOf || p1IsLeftOf : p1IsRightOf && p1IsLeftOf;\n  const p3InCone = p1.reflex ? p3IsRightOf || p3IsLeftOf : p3IsRightOf && p3IsLeftOf;\n  return p1InCone && p3InCone;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLPolygonReplay.prototype.drawMultiPolygon = function(multiPolygonGeometry, feature) {\n  const endss = multiPolygonGeometry.getEndss();\n  const stride = multiPolygonGeometry.getStride();\n  const currIndex = this.indices.length;\n  const currLineIndex = this.lineStringReplay.getCurrentIndex();\n  const flatCoordinates = multiPolygonGeometry.getFlatCoordinates();\n  let i, ii, j, jj;\n  let start = 0;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (ends.length > 0) {\n      const outerRing = translate(flatCoordinates, start, ends[0],\n        stride, -this.origin[0], -this.origin[1]);\n      if (outerRing.length) {\n        const holes = [];\n        let holeFlatCoords;\n        for (j = 1, jj = ends.length; j < jj; ++j) {\n          if (ends[j] !== ends[j - 1]) {\n            holeFlatCoords = translate(flatCoordinates, ends[j - 1],\n              ends[j], stride, -this.origin[0], -this.origin[1]);\n            holes.push(holeFlatCoords);\n          }\n        }\n        this.lineStringReplay.drawPolygonCoordinates(outerRing, holes, stride);\n        this.drawCoordinates_(outerRing, holes, stride);\n      }\n    }\n    start = ends[ends.length - 1];\n  }\n  if (this.indices.length > currIndex) {\n    this.startIndices.push(currIndex);\n    this.startIndicesFeature.push(feature);\n    if (this.state_.changed) {\n      this.styleIndices_.push(currIndex);\n      this.state_.changed = false;\n    }\n  }\n  if (this.lineStringReplay.getCurrentIndex() > currLineIndex) {\n    this.lineStringReplay.setPolygonStyle(feature, currLineIndex);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLPolygonReplay.prototype.drawPolygon = function(polygonGeometry, feature) {\n  const ends = polygonGeometry.getEnds();\n  const stride = polygonGeometry.getStride();\n  if (ends.length > 0) {\n    const flatCoordinates = polygonGeometry.getFlatCoordinates().map(Number);\n    const outerRing = translate(flatCoordinates, 0, ends[0],\n      stride, -this.origin[0], -this.origin[1]);\n    if (outerRing.length) {\n      const holes = [];\n      let i, ii, holeFlatCoords;\n      for (i = 1, ii = ends.length; i < ii; ++i) {\n        if (ends[i] !== ends[i - 1]) {\n          holeFlatCoords = translate(flatCoordinates, ends[i - 1],\n            ends[i], stride, -this.origin[0], -this.origin[1]);\n          holes.push(holeFlatCoords);\n        }\n      }\n\n      this.startIndices.push(this.indices.length);\n      this.startIndicesFeature.push(feature);\n      if (this.state_.changed) {\n        this.styleIndices_.push(this.indices.length);\n        this.state_.changed = false;\n      }\n      this.lineStringReplay.setPolygonStyle(feature);\n\n      this.lineStringReplay.drawPolygonCoordinates(outerRing, holes, stride);\n      this.drawCoordinates_(outerRing, holes, stride);\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n **/\nWebGLPolygonReplay.prototype.finish = function(context) {\n  // create, bind, and populate the vertices buffer\n  this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n  // create, bind, and populate the indices buffer\n  this.indicesBuffer = new WebGLBuffer(this.indices);\n\n  this.startIndices.push(this.indices.length);\n\n  this.lineStringReplay.finish(context);\n\n  //Clean up, if there is nothing to draw\n  if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n    this.styles_ = [];\n  }\n\n  this.vertices = null;\n  this.indices = null;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLPolygonReplay.prototype.getDeleteResourcesFunction = function(context) {\n  const verticesBuffer = this.verticesBuffer;\n  const indicesBuffer = this.indicesBuffer;\n  const lineDeleter = this.lineStringReplay.getDeleteResourcesFunction(context);\n  return function() {\n    context.deleteBuffer(verticesBuffer);\n    context.deleteBuffer(indicesBuffer);\n    lineDeleter();\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLPolygonReplay.prototype.setUpProgram = function(gl, context, size, pixelRatio) {\n  // get the program\n  const program = context.getProgram(fragment, vertex);\n\n  // get the locations\n  let locations;\n  if (!this.defaultLocations_) {\n    locations = new Locations(gl, program);\n    this.defaultLocations_ = locations;\n  } else {\n    locations = this.defaultLocations_;\n  }\n\n  context.useProgram(program);\n\n  // enable the vertex attrib arrays\n  gl.enableVertexAttribArray(locations.a_position);\n  gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n    false, 8, 0);\n\n  return locations;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLPolygonReplay.prototype.shutDownProgram = function(gl, locations) {\n  gl.disableVertexAttribArray(locations.a_position);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLPolygonReplay.prototype.drawReplay = function(gl, context, skippedFeaturesHash, hitDetection) {\n  //Save GL parameters.\n  const tmpDepthFunc = /** @type {number} */ (gl.getParameter(gl.DEPTH_FUNC));\n  const tmpDepthMask = /** @type {boolean} */ (gl.getParameter(gl.DEPTH_WRITEMASK));\n\n  if (!hitDetection) {\n    gl.enable(gl.DEPTH_TEST);\n    gl.depthMask(true);\n    gl.depthFunc(gl.NOTEQUAL);\n  }\n\n  if (!isEmpty(skippedFeaturesHash)) {\n    this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n  } else {\n    //Draw by style groups to minimize drawElements() calls.\n    let i, start, end, nextStyle;\n    end = this.startIndices[this.startIndices.length - 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      start = this.styleIndices_[i];\n      nextStyle = this.styles_[i];\n      this.setFillStyle_(gl, nextStyle);\n      this.drawElements(gl, context, start, end);\n      end = start;\n    }\n  }\n  if (!hitDetection) {\n    gl.disable(gl.DEPTH_TEST);\n    gl.clear(gl.DEPTH_BUFFER_BIT);\n    //Restore GL parameters.\n    gl.depthMask(tmpDepthMask);\n    gl.depthFunc(tmpDepthFunc);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLPolygonReplay.prototype.drawHitDetectionReplayOneByOne = function(gl, context, skippedFeaturesHash,\n  featureCallback, opt_hitExtent) {\n  let i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex;\n  featureIndex = this.startIndices.length - 2;\n  end = this.startIndices[featureIndex + 1];\n  for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n    nextStyle = this.styles_[i];\n    this.setFillStyle_(gl, nextStyle);\n    groupStart = this.styleIndices_[i];\n\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      start = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid] === undefined &&\n          feature.getGeometry() &&\n          (opt_hitExtent === undefined || intersects(\n            /** @type {Array<number>} */ (opt_hitExtent),\n            feature.getGeometry().getExtent()))) {\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        this.drawElements(gl, context, start, end);\n\n        const result = featureCallback(feature);\n\n        if (result) {\n          return result;\n        }\n\n      }\n      featureIndex--;\n      end = start;\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {Object} skippedFeaturesHash Ids of features to skip.\n */\nWebGLPolygonReplay.prototype.drawReplaySkipping_ = function(gl, context, skippedFeaturesHash) {\n  let i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex, featureStart;\n  featureIndex = this.startIndices.length - 2;\n  end = start = this.startIndices[featureIndex + 1];\n  for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n    nextStyle = this.styles_[i];\n    this.setFillStyle_(gl, nextStyle);\n    groupStart = this.styleIndices_[i];\n\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      featureStart = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid]) {\n        if (start !== end) {\n          this.drawElements(gl, context, start, end);\n          gl.clear(gl.DEPTH_BUFFER_BIT);\n        }\n        end = featureStart;\n      }\n      featureIndex--;\n      start = featureStart;\n    }\n    if (start !== end) {\n      this.drawElements(gl, context, start, end);\n      gl.clear(gl.DEPTH_BUFFER_BIT);\n    }\n    start = end = groupStart;\n  }\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {Array.<number>} color Color.\n */\nWebGLPolygonReplay.prototype.setFillStyle_ = function(gl, color) {\n  gl.uniform4fv(this.defaultLocations_.u_color, color);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLPolygonReplay.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  let fillStyleColor = fillStyle ? fillStyle.getColor() : [0, 0, 0, 0];\n  if (!(fillStyleColor instanceof CanvasGradient) &&\n      !(fillStyleColor instanceof CanvasPattern)) {\n    fillStyleColor = asArray(fillStyleColor).map(function(c, i) {\n      return i != 3 ? c / 255 : c;\n    }) || DEFAULT_FILLSTYLE;\n  } else {\n    fillStyleColor = DEFAULT_FILLSTYLE;\n  }\n  if (!this.state_.fillColor || !equals(fillStyleColor, this.state_.fillColor)) {\n    this.state_.fillColor = fillStyleColor;\n    this.state_.changed = true;\n    this.styles_.push(fillStyleColor);\n  }\n  //Provide a null stroke style, if no strokeStyle is provided. Required for the draw interaction to work.\n  if (strokeStyle) {\n    this.lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n  } else {\n    const nullStrokeStyle = new Stroke({\n      color: [0, 0, 0, 0],\n      lineWidth: 0\n    });\n    this.lineStringReplay.setFillStrokeStyle(null, nullStrokeStyle);\n  }\n};\nexport default WebGLPolygonReplay;\n","/**\n * @module ol/render/webgl/TextReplay\n */\nimport {getUid, inherits} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {DEFAULT_FILLSTYLE, DEFAULT_FONT, DEFAULT_LINECAP, DEFAULT_LINEDASH,\n  DEFAULT_LINEDASHOFFSET, DEFAULT_LINEJOIN, DEFAULT_LINEWIDTH, DEFAULT_MITERLIMIT,\n  DEFAULT_STROKESTYLE, DEFAULT_TEXTALIGN, DEFAULT_TEXTBASELINE} from '../webgl.js';\nimport WebGLTextureReplay from '../webgl/TextureReplay.js';\nimport AtlasManager from '../../style/AtlasManager.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n/**\n * @typedef {Object} GlyphAtlas\n * @property {module:ol/style/AtlasManager} atlas\n * @property {Object.<string, number>} width\n * @property {number} height\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/render/webgl/TextureReplay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @struct\n */\nconst WebGLTextReplay = function(tolerance, maxExtent) {\n  WebGLTextureReplay.call(this, tolerance, maxExtent);\n\n  /**\n   * @private\n   * @type {Array.<HTMLCanvasElement>}\n   */\n  this.images_ = [];\n\n  /**\n   * @private\n   * @type {Array.<WebGLTexture>}\n   */\n  this.textures_ = [];\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.measureCanvas_ = createCanvasContext2D(0, 0).canvas;\n\n  /**\n   * @private\n   * @type {{strokeColor: (module:ol/colorlike~ColorLike|null),\n   *         lineCap: (string|undefined),\n   *         lineDash: Array.<number>,\n   *         lineDashOffset: (number|undefined),\n   *         lineJoin: (string|undefined),\n   *         lineWidth: number,\n   *         miterLimit: (number|undefined),\n   *         fillColor: (module:ol/colorlike~ColorLike|null),\n   *         font: (string|undefined),\n   *         scale: (number|undefined)}}\n   */\n  this.state_ = {\n    strokeColor: null,\n    lineCap: undefined,\n    lineDash: null,\n    lineDashOffset: undefined,\n    lineJoin: undefined,\n    lineWidth: 0,\n    miterLimit: undefined,\n    fillColor: null,\n    font: undefined,\n    scale: undefined\n  };\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.text_ = '';\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.textAlign_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.textBaseline_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.offsetX_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.offsetY_ = undefined;\n\n  /**\n   * @private\n   * @type {Object.<string, module:ol/render/webgl/TextReplay~GlyphAtlas>}\n   */\n  this.atlases_ = {};\n\n  /**\n   * @private\n   * @type {module:ol/render/webgl/TextReplay~GlyphAtlas|undefined}\n   */\n  this.currAtlas_ = undefined;\n\n  this.scale = 1;\n\n  this.opacity = 1;\n\n};\n\ninherits(WebGLTextReplay, WebGLTextureReplay);\n\n\n/**\n * @inheritDoc\n */\nWebGLTextReplay.prototype.drawText = function(geometry, feature) {\n  if (this.text_) {\n    let flatCoordinates = null;\n    const offset = 0;\n    let end = 2;\n    let stride = 2;\n    switch (geometry.getType()) {\n      case GeometryType.POINT:\n      case GeometryType.MULTI_POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        end = flatCoordinates.length;\n        stride = geometry.getStride();\n        break;\n      case GeometryType.CIRCLE:\n        flatCoordinates = /** @type {module:ol/geom/Circle} */ (geometry).getCenter();\n        break;\n      case GeometryType.LINE_STRING:\n        flatCoordinates = /** @type {module:ol/geom/LineString} */ (geometry).getFlatMidpoint();\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        flatCoordinates = /** @type {module:ol/geom/MultiLineString} */ (geometry).getFlatMidpoints();\n        end = flatCoordinates.length;\n        break;\n      case GeometryType.POLYGON:\n        flatCoordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getFlatInteriorPoint();\n        break;\n      case GeometryType.MULTI_POLYGON:\n        flatCoordinates = /** @type {module:ol/geom/MultiPolygon} */ (geometry).getFlatInteriorPoints();\n        end = flatCoordinates.length;\n        break;\n      default:\n    }\n    this.startIndices.push(this.indices.length);\n    this.startIndicesFeature.push(feature);\n\n    const glyphAtlas = this.currAtlas_;\n    const lines = this.text_.split('\\n');\n    const textSize = this.getTextSize_(lines);\n    let i, ii, j, jj, currX, currY, charArr, charInfo;\n    const anchorX = Math.round(textSize[0] * this.textAlign_ - this.offsetX_);\n    const anchorY = Math.round(textSize[1] * this.textBaseline_ - this.offsetY_);\n    const lineWidth = (this.state_.lineWidth / 2) * this.state_.scale;\n\n    for (i = 0, ii = lines.length; i < ii; ++i) {\n      currX = 0;\n      currY = glyphAtlas.height * i;\n      charArr = lines[i].split('');\n\n      for (j = 0, jj = charArr.length; j < jj; ++j) {\n        charInfo = glyphAtlas.atlas.getInfo(charArr[j]);\n\n        if (charInfo) {\n          const image = charInfo.image;\n\n          this.anchorX = anchorX - currX;\n          this.anchorY = anchorY - currY;\n          this.originX = j === 0 ? charInfo.offsetX - lineWidth : charInfo.offsetX;\n          this.originY = charInfo.offsetY;\n          this.height = glyphAtlas.height;\n          this.width = j === 0 || j === charArr.length - 1 ?\n            glyphAtlas.width[charArr[j]] + lineWidth : glyphAtlas.width[charArr[j]];\n          this.imageHeight = image.height;\n          this.imageWidth = image.width;\n\n          if (this.images_.length === 0) {\n            this.images_.push(image);\n          } else {\n            const currentImage = this.images_[this.images_.length - 1];\n            if (getUid(currentImage) != getUid(image)) {\n              this.groupIndices.push(this.indices.length);\n              this.images_.push(image);\n            }\n          }\n\n          this.drawText_(flatCoordinates, offset, end, stride);\n        }\n        currX += this.width;\n      }\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {Array.<string>} lines Label to draw split to lines.\n * @return {Array.<number>} Size of the label in pixels.\n */\nWebGLTextReplay.prototype.getTextSize_ = function(lines) {\n  const self = this;\n  const glyphAtlas = this.currAtlas_;\n  const textHeight = lines.length * glyphAtlas.height;\n  //Split every line to an array of chars, sum up their width, and select the longest.\n  const textWidth = lines.map(function(str) {\n    let sum = 0;\n    for (let i = 0, ii = str.length; i < ii; ++i) {\n      const curr = str[i];\n      if (!glyphAtlas.width[curr]) {\n        self.addCharToAtlas_(curr);\n      }\n      sum += glyphAtlas.width[curr] ? glyphAtlas.width[curr] : 0;\n    }\n    return sum;\n  }).reduce(function(max, curr) {\n    return Math.max(max, curr);\n  });\n\n  return [textWidth, textHeight];\n};\n\n\n/**\n * @private\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nWebGLTextReplay.prototype.drawText_ = function(flatCoordinates, offset, end, stride) {\n  for (let i = offset, ii = end; i < ii; i += stride) {\n    this.drawCoordinates(flatCoordinates, offset, end, stride);\n  }\n};\n\n\n/**\n * @private\n * @param {string} char Character.\n */\nWebGLTextReplay.prototype.addCharToAtlas_ = function(char) {\n  if (char.length === 1) {\n    const glyphAtlas = this.currAtlas_;\n    const state = this.state_;\n    const mCtx = this.measureCanvas_.getContext('2d');\n    mCtx.font = state.font;\n    const width = Math.ceil(mCtx.measureText(char).width * state.scale);\n\n    const info = glyphAtlas.atlas.add(char, width, glyphAtlas.height,\n      function(ctx, x, y) {\n        //Parameterize the canvas\n        ctx.font = /** @type {string} */ (state.font);\n        ctx.fillStyle = state.fillColor;\n        ctx.strokeStyle = state.strokeColor;\n        ctx.lineWidth = state.lineWidth;\n        ctx.lineCap = /*** @type {string} */ (state.lineCap);\n        ctx.lineJoin = /** @type {string} */ (state.lineJoin);\n        ctx.miterLimit = /** @type {number} */ (state.miterLimit);\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'top';\n        if (CANVAS_LINE_DASH && state.lineDash) {\n          //FIXME: use pixelRatio\n          ctx.setLineDash(state.lineDash);\n          ctx.lineDashOffset = /** @type {number} */ (state.lineDashOffset);\n        }\n        if (state.scale !== 1) {\n          //FIXME: use pixelRatio\n          ctx.setTransform(/** @type {number} */ (state.scale), 0, 0,\n            /** @type {number} */ (state.scale), 0, 0);\n        }\n\n        //Draw the character on the canvas\n        if (state.strokeColor) {\n          ctx.strokeText(char, x, y);\n        }\n        if (state.fillColor) {\n          ctx.fillText(char, x, y);\n        }\n      });\n\n    if (info) {\n      glyphAtlas.width[char] = width;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTextReplay.prototype.finish = function(context) {\n  const gl = context.getGL();\n\n  this.groupIndices.push(this.indices.length);\n  this.hitDetectionGroupIndices = this.groupIndices;\n\n  // create, bind, and populate the vertices buffer\n  this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n  // create, bind, and populate the indices buffer\n  this.indicesBuffer = new WebGLBuffer(this.indices);\n\n  // create textures\n  /** @type {Object.<string, WebGLTexture>} */\n  const texturePerImage = {};\n\n  this.createTextures(this.textures_, this.images_, texturePerImage, gl);\n\n  this.state_ = {\n    strokeColor: null,\n    lineCap: undefined,\n    lineDash: null,\n    lineDashOffset: undefined,\n    lineJoin: undefined,\n    lineWidth: 0,\n    miterLimit: undefined,\n    fillColor: null,\n    font: undefined,\n    scale: undefined\n  };\n  this.text_ = '';\n  this.textAlign_ = undefined;\n  this.textBaseline_ = undefined;\n  this.offsetX_ = undefined;\n  this.offsetY_ = undefined;\n  this.images_ = null;\n  this.atlases_ = {};\n  this.currAtlas_ = undefined;\n  WebGLTextureReplay.prototype.finish.call(this, context);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTextReplay.prototype.setTextStyle = function(textStyle) {\n  const state = this.state_;\n  const textFillStyle = textStyle.getFill();\n  const textStrokeStyle = textStyle.getStroke();\n  if (!textStyle || !textStyle.getText() || (!textFillStyle && !textStrokeStyle)) {\n    this.text_ = '';\n  } else {\n    if (!textFillStyle) {\n      state.fillColor = null;\n    } else {\n      const textFillStyleColor = textFillStyle.getColor();\n      state.fillColor = asColorLike(textFillStyleColor ?\n        textFillStyleColor : DEFAULT_FILLSTYLE);\n    }\n    if (!textStrokeStyle) {\n      state.strokeColor = null;\n      state.lineWidth = 0;\n    } else {\n      const textStrokeStyleColor = textStrokeStyle.getColor();\n      state.strokeColor = asColorLike(textStrokeStyleColor ?\n        textStrokeStyleColor : DEFAULT_STROKESTYLE);\n      state.lineWidth = textStrokeStyle.getWidth() || DEFAULT_LINEWIDTH;\n      state.lineCap = textStrokeStyle.getLineCap() || DEFAULT_LINECAP;\n      state.lineDashOffset = textStrokeStyle.getLineDashOffset() || DEFAULT_LINEDASHOFFSET;\n      state.lineJoin = textStrokeStyle.getLineJoin() || DEFAULT_LINEJOIN;\n      state.miterLimit = textStrokeStyle.getMiterLimit() || DEFAULT_MITERLIMIT;\n      const lineDash = textStrokeStyle.getLineDash();\n      state.lineDash = lineDash ? lineDash.slice() : DEFAULT_LINEDASH;\n    }\n    state.font = textStyle.getFont() || DEFAULT_FONT;\n    state.scale = textStyle.getScale() || 1;\n    this.text_ = /** @type {string} */ (textStyle.getText());\n    const textAlign = TEXT_ALIGN[textStyle.getTextAlign()];\n    const textBaseline = TEXT_ALIGN[textStyle.getTextBaseline()];\n    this.textAlign_ = textAlign === undefined ?\n      DEFAULT_TEXTALIGN : textAlign;\n    this.textBaseline_ = textBaseline === undefined ?\n      DEFAULT_TEXTBASELINE : textBaseline;\n    this.offsetX_ = textStyle.getOffsetX() || 0;\n    this.offsetY_ = textStyle.getOffsetY() || 0;\n    this.rotateWithView = !!textStyle.getRotateWithView();\n    this.rotation = textStyle.getRotation() || 0;\n\n    this.currAtlas_ = this.getAtlas_(state);\n  }\n};\n\n\n/**\n * @private\n * @param {Object} state Font attributes.\n * @return {module:ol/render/webgl/TextReplay~GlyphAtlas} Glyph atlas.\n */\nWebGLTextReplay.prototype.getAtlas_ = function(state) {\n  let params = [];\n  for (const i in state) {\n    if (state[i] || state[i] === 0) {\n      if (Array.isArray(state[i])) {\n        params = params.concat(state[i]);\n      } else {\n        params.push(state[i]);\n      }\n    }\n  }\n  const hash = this.calculateHash_(params);\n  if (!this.atlases_[hash]) {\n    const mCtx = this.measureCanvas_.getContext('2d');\n    mCtx.font = state.font;\n    const height = Math.ceil((mCtx.measureText('M').width * 1.5 +\n        state.lineWidth / 2) * state.scale);\n\n    this.atlases_[hash] = {\n      atlas: new AtlasManager({\n        space: state.lineWidth + 1\n      }),\n      width: {},\n      height: height\n    };\n  }\n  return this.atlases_[hash];\n};\n\n\n/**\n * @private\n * @param {Array.<string|number>} params Array of parameters.\n * @return {string} Hash string.\n */\nWebGLTextReplay.prototype.calculateHash_ = function(params) {\n  //TODO: Create a more performant, reliable, general hash function.\n  let hash = '';\n  for (let i = 0, ii = params.length; i < ii; ++i) {\n    hash += params[i];\n  }\n  return hash;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTextReplay.prototype.getTextures = function(opt_all) {\n  return this.textures_;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTextReplay.prototype.getHitDetectionTextures = function() {\n  return this.textures_;\n};\nexport default WebGLTextReplay;\n","/**\n * @module ol/render/webgl/ReplayGroup\n */\nimport {inherits} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {buffer, createOrUpdateFromCoordinate} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {ORDER} from '../replay.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport WebGLCircleReplay from '../webgl/CircleReplay.js';\nimport WebGLImageReplay from '../webgl/ImageReplay.js';\nimport WebGLLineStringReplay from '../webgl/LineStringReplay.js';\nimport WebGLPolygonReplay from '../webgl/PolygonReplay.js';\nimport WebGLTextReplay from '../webgl/TextReplay.js';\n\n/**\n * @type {Array.<number>}\n */\nconst HIT_DETECTION_SIZE = [1, 1];\n\n/**\n * @type {Object.<module:ol/render/ReplayType,\n *                function(new: module:ol/render/webgl/Replay, number,\n *                module:ol/extent~Extent)>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': WebGLCircleReplay,\n  'Image': WebGLImageReplay,\n  'LineString': WebGLLineStringReplay,\n  'Polygon': WebGLPolygonReplay,\n  'Text': WebGLTextReplay\n};\n\n\n/**\n * @constructor\n * @extends {module:ol/render/ReplayGroup}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @param {number=} opt_renderBuffer Render buffer.\n * @struct\n */\nconst WebGLReplayGroup = function(tolerance, maxExtent, opt_renderBuffer) {\n  ReplayGroup.call(this);\n\n  /**\n   * @type {module:ol/extent~Extent}\n   * @private\n   */\n  this.maxExtent_ = maxExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.tolerance_ = tolerance;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.renderBuffer_ = opt_renderBuffer;\n\n  /**\n   * @private\n   * @type {!Object.<string,\n   *        Object.<module:ol/render/ReplayType, module:ol/render/webgl/Replay>>}\n   */\n  this.replaysByZIndex_ = {};\n\n};\n\ninherits(WebGLReplayGroup, ReplayGroup);\n\n\n/**\n * @param {module:ol/style/Style} style Style.\n * @param {boolean} group Group with previous replay.\n */\nWebGLReplayGroup.prototype.addDeclutter = function(style, group) {};\n\n\n/**\n * @param {module:ol/webgl/Context} context WebGL context.\n * @return {function()} Delete resources function.\n */\nWebGLReplayGroup.prototype.getDeleteResourcesFunction = function(context) {\n  const functions = [];\n  let zKey;\n  for (zKey in this.replaysByZIndex_) {\n    const replays = this.replaysByZIndex_[zKey];\n    for (const replayKey in replays) {\n      functions.push(\n        replays[replayKey].getDeleteResourcesFunction(context));\n    }\n  }\n  return function() {\n    const length = functions.length;\n    let result;\n    for (let i = 0; i < length; i++) {\n      result = functions[i].apply(this, arguments);\n    }\n    return result;\n  };\n};\n\n\n/**\n * @param {module:ol/webgl/Context} context Context.\n */\nWebGLReplayGroup.prototype.finish = function(context) {\n  let zKey;\n  for (zKey in this.replaysByZIndex_) {\n    const replays = this.replaysByZIndex_[zKey];\n    for (const replayKey in replays) {\n      replays[replayKey].finish(context);\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLReplayGroup.prototype.getReplay = function(zIndex, replayType) {\n  const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n  let replays = this.replaysByZIndex_[zIndexKey];\n  if (replays === undefined) {\n    replays = {};\n    this.replaysByZIndex_[zIndexKey] = replays;\n  }\n  let replay = replays[replayType];\n  if (replay === undefined) {\n    /**\n     * @type {Function}\n     */\n    const Constructor = BATCH_CONSTRUCTORS[replayType];\n    replay = new Constructor(this.tolerance_, this.maxExtent_);\n    replays[replayType] = replay;\n  }\n  return replay;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLReplayGroup.prototype.isEmpty = function() {\n  return isEmpty(this.replaysByZIndex_);\n};\n\n\n/**\n * @param {module:ol/webgl/Context} context Context.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} opacity Global opacity.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n */\nWebGLReplayGroup.prototype.replay = function(context,\n  center, resolution, rotation, size, pixelRatio,\n  opacity, skippedFeaturesHash) {\n  /** @type {Array.<number>} */\n  const zs = Object.keys(this.replaysByZIndex_).map(Number);\n  zs.sort(numberSafeCompareFunction);\n\n  let i, ii, j, jj, replays, replay;\n  for (i = 0, ii = zs.length; i < ii; ++i) {\n    replays = this.replaysByZIndex_[zs[i].toString()];\n    for (j = 0, jj = ORDER.length; j < jj; ++j) {\n      replay = replays[ORDER[j]];\n      if (replay !== undefined) {\n        replay.replay(context,\n          center, resolution, rotation, size, pixelRatio,\n          opacity, skippedFeaturesHash,\n          undefined, false);\n      }\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {module:ol/webgl/Context} context Context.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} opacity Global opacity.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n * @param {module:ol/extent~Extent=} opt_hitExtent Hit extent: Only features intersecting\n *  this extent are checked.\n * @return {T|undefined} Callback result.\n * @template T\n */\nWebGLReplayGroup.prototype.replayHitDetection_ = function(context,\n  center, resolution, rotation, size, pixelRatio, opacity,\n  skippedFeaturesHash, featureCallback, oneByOne, opt_hitExtent) {\n  /** @type {Array.<number>} */\n  const zs = Object.keys(this.replaysByZIndex_).map(Number);\n  zs.sort(function(a, b) {\n    return b - a;\n  });\n\n  let i, ii, j, replays, replay, result;\n  for (i = 0, ii = zs.length; i < ii; ++i) {\n    replays = this.replaysByZIndex_[zs[i].toString()];\n    for (j = ORDER.length - 1; j >= 0; --j) {\n      replay = replays[ORDER[j]];\n      if (replay !== undefined) {\n        result = replay.replay(context,\n          center, resolution, rotation, size, pixelRatio, opacity,\n          skippedFeaturesHash, featureCallback, oneByOne, opt_hitExtent);\n        if (result) {\n          return result;\n        }\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/webgl/Context} context Context.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} opacity Global opacity.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} callback Feature callback.\n * @return {T|undefined} Callback result.\n * @template T\n */\nWebGLReplayGroup.prototype.forEachFeatureAtCoordinate = function(\n  coordinate, context, center, resolution, rotation, size, pixelRatio,\n  opacity, skippedFeaturesHash,\n  callback) {\n  const gl = context.getGL();\n  gl.bindFramebuffer(\n    gl.FRAMEBUFFER, context.getHitDetectionFramebuffer());\n\n\n  /**\n   * @type {module:ol/extent~Extent}\n   */\n  let hitExtent;\n  if (this.renderBuffer_ !== undefined) {\n    // build an extent around the coordinate, so that only features that\n    // intersect this extent are checked\n    hitExtent = buffer(createOrUpdateFromCoordinate(coordinate), resolution * this.renderBuffer_);\n  }\n\n  return this.replayHitDetection_(context,\n    coordinate, resolution, rotation, HIT_DETECTION_SIZE,\n    pixelRatio, opacity, skippedFeaturesHash,\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @return {?} Callback result.\n     */\n    function(feature) {\n      const imageData = new Uint8Array(4);\n      gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n\n      if (imageData[3] > 0) {\n        const result = callback(feature);\n        if (result) {\n          return result;\n        }\n      }\n    }, true, hitExtent);\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/webgl/Context} context Context.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} opacity Global opacity.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @return {boolean} Is there a feature at the given coordinate?\n */\nWebGLReplayGroup.prototype.hasFeatureAtCoordinate = function(\n  coordinate, context, center, resolution, rotation, size, pixelRatio,\n  opacity, skippedFeaturesHash) {\n  const gl = context.getGL();\n  gl.bindFramebuffer(\n    gl.FRAMEBUFFER, context.getHitDetectionFramebuffer());\n\n  const hasFeature = this.replayHitDetection_(context,\n    coordinate, resolution, rotation, HIT_DETECTION_SIZE,\n    pixelRatio, opacity, skippedFeaturesHash,\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @return {boolean} Is there a feature?\n     */\n    function(feature) {\n      const imageData = new Uint8Array(4);\n      gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n      return imageData[3] > 0;\n    }, false);\n\n  return hasFeature !== undefined;\n};\n\nexport default WebGLReplayGroup;\n","/**\n * @module ol/render/webgl/Immediate\n */\nimport {inherits} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport ReplayType from '../ReplayType.js';\nimport VectorContext from '../VectorContext.js';\nimport WebGLReplayGroup from '../webgl/ReplayGroup.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/VectorContext}\n * @param {module:ol/webgl/Context} context Context.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} pixelRatio Pixel ratio.\n * @struct\n */\nconst WebGLImmediateRenderer = function(context, center, resolution, rotation, size, extent, pixelRatio) {\n  VectorContext.call(this);\n\n  /**\n   * @private\n   */\n  this.context_ = context;\n\n  /**\n   * @private\n   */\n  this.center_ = center;\n\n  /**\n   * @private\n   */\n  this.extent_ = extent;\n\n  /**\n   * @private\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   */\n  this.size_ = size;\n\n  /**\n   * @private\n   */\n  this.rotation_ = rotation;\n\n  /**\n   * @private\n   */\n  this.resolution_ = resolution;\n\n  /**\n   * @private\n   * @type {module:ol/style/Image}\n   */\n  this.imageStyle_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.fillStyle_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.strokeStyle_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Text}\n   */\n  this.textStyle_ = null;\n\n};\n\ninherits(WebGLImmediateRenderer, VectorContext);\n\n\n/**\n * @param {module:ol/render/webgl/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @private\n */\nWebGLImmediateRenderer.prototype.drawText_ = function(replayGroup, geometry) {\n  const context = this.context_;\n  const replay = /** @type {module:ol/render/webgl/TextReplay} */ (\n    replayGroup.getReplay(0, ReplayType.TEXT));\n  replay.setTextStyle(this.textStyle_);\n  replay.drawText(geometry, null);\n  replay.finish(context);\n  // default colors\n  const opacity = 1;\n  const skippedFeatures = {};\n  let featureCallback;\n  const oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n    this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n    oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n};\n\n\n/**\n * Set the rendering style.  Note that since this is an immediate rendering API,\n * any `zIndex` on the provided style will be ignored.\n *\n * @param {module:ol/style/Style} style The rendering style.\n * @override\n * @api\n */\nWebGLImmediateRenderer.prototype.setStyle = function(style) {\n  this.setFillStrokeStyle(style.getFill(), style.getStroke());\n  this.setImageStyle(style.getImage());\n  this.setTextStyle(style.getText());\n};\n\n\n/**\n * Render a geometry into the canvas.  Call\n * {@link ol/render/webgl/Immediate#setStyle} first to set the rendering style.\n *\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry The geometry to render.\n * @override\n * @api\n */\nWebGLImmediateRenderer.prototype.drawGeometry = function(geometry) {\n  const type = geometry.getType();\n  switch (type) {\n    case GeometryType.POINT:\n      this.drawPoint(/** @type {module:ol/geom/Point} */ (geometry), null);\n      break;\n    case GeometryType.LINE_STRING:\n      this.drawLineString(/** @type {module:ol/geom/LineString} */ (geometry), null);\n      break;\n    case GeometryType.POLYGON:\n      this.drawPolygon(/** @type {module:ol/geom/Polygon} */ (geometry), null);\n      break;\n    case GeometryType.MULTI_POINT:\n      this.drawMultiPoint(/** @type {module:ol/geom/MultiPoint} */ (geometry), null);\n      break;\n    case GeometryType.MULTI_LINE_STRING:\n      this.drawMultiLineString(/** @type {module:ol/geom/MultiLineString} */ (geometry), null);\n      break;\n    case GeometryType.MULTI_POLYGON:\n      this.drawMultiPolygon(/** @type {module:ol/geom/MultiPolygon} */ (geometry), null);\n      break;\n    case GeometryType.GEOMETRY_COLLECTION:\n      this.drawGeometryCollection(/** @type {module:ol/geom/GeometryCollection} */ (geometry), null);\n      break;\n    case GeometryType.CIRCLE:\n      this.drawCircle(/** @type {module:ol/geom/Circle} */ (geometry), null);\n      break;\n    default:\n      // pass\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nWebGLImmediateRenderer.prototype.drawFeature = function(feature, style) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  this.setStyle(style);\n  this.drawGeometry(geometry);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.drawGeometryCollection = function(geometry, data) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    this.drawGeometry(geometries[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.drawPoint = function(geometry, data) {\n  const context = this.context_;\n  const replayGroup = new WebGLReplayGroup(1, this.extent_);\n  const replay = /** @type {module:ol/render/webgl/ImageReplay} */ (\n    replayGroup.getReplay(0, ReplayType.IMAGE));\n  replay.setImageStyle(this.imageStyle_);\n  replay.drawPoint(geometry, data);\n  replay.finish(context);\n  // default colors\n  const opacity = 1;\n  const skippedFeatures = {};\n  let featureCallback;\n  const oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n    this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n    oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.drawMultiPoint = function(geometry, data) {\n  const context = this.context_;\n  const replayGroup = new WebGLReplayGroup(1, this.extent_);\n  const replay = /** @type {module:ol/render/webgl/ImageReplay} */ (\n    replayGroup.getReplay(0, ReplayType.IMAGE));\n  replay.setImageStyle(this.imageStyle_);\n  replay.drawMultiPoint(geometry, data);\n  replay.finish(context);\n  const opacity = 1;\n  const skippedFeatures = {};\n  let featureCallback;\n  const oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n    this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n    oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.drawLineString = function(geometry, data) {\n  const context = this.context_;\n  const replayGroup = new WebGLReplayGroup(1, this.extent_);\n  const replay = /** @type {module:ol/render/webgl/LineStringReplay} */ (\n    replayGroup.getReplay(0, ReplayType.LINE_STRING));\n  replay.setFillStrokeStyle(null, this.strokeStyle_);\n  replay.drawLineString(geometry, data);\n  replay.finish(context);\n  const opacity = 1;\n  const skippedFeatures = {};\n  let featureCallback;\n  const oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n    this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n    oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.drawMultiLineString = function(geometry, data) {\n  const context = this.context_;\n  const replayGroup = new WebGLReplayGroup(1, this.extent_);\n  const replay = /** @type {module:ol/render/webgl/LineStringReplay} */ (\n    replayGroup.getReplay(0, ReplayType.LINE_STRING));\n  replay.setFillStrokeStyle(null, this.strokeStyle_);\n  replay.drawMultiLineString(geometry, data);\n  replay.finish(context);\n  const opacity = 1;\n  const skippedFeatures = {};\n  let featureCallback;\n  const oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n    this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n    oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.drawPolygon = function(geometry, data) {\n  const context = this.context_;\n  const replayGroup = new WebGLReplayGroup(1, this.extent_);\n  const replay = /** @type {module:ol/render/webgl/PolygonReplay} */ (\n    replayGroup.getReplay(0, ReplayType.POLYGON));\n  replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n  replay.drawPolygon(geometry, data);\n  replay.finish(context);\n  const opacity = 1;\n  const skippedFeatures = {};\n  let featureCallback;\n  const oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n    this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n    oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.drawMultiPolygon = function(geometry, data) {\n  const context = this.context_;\n  const replayGroup = new WebGLReplayGroup(1, this.extent_);\n  const replay = /** @type {module:ol/render/webgl/PolygonReplay} */ (\n    replayGroup.getReplay(0, ReplayType.POLYGON));\n  replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n  replay.drawMultiPolygon(geometry, data);\n  replay.finish(context);\n  const opacity = 1;\n  const skippedFeatures = {};\n  let featureCallback;\n  const oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n    this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n    oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.drawCircle = function(geometry, data) {\n  const context = this.context_;\n  const replayGroup = new WebGLReplayGroup(1, this.extent_);\n  const replay = /** @type {module:ol/render/webgl/CircleReplay} */ (\n    replayGroup.getReplay(0, ReplayType.CIRCLE));\n  replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n  replay.drawCircle(geometry, data);\n  replay.finish(context);\n  const opacity = 1;\n  const skippedFeatures = {};\n  let featureCallback;\n  const oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n    this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n    oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.setImageStyle = function(imageStyle) {\n  this.imageStyle_ = imageStyle;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  this.fillStyle_ = fillStyle;\n  this.strokeStyle_ = strokeStyle;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.setTextStyle = function(textStyle) {\n  this.textStyle_ = textStyle;\n};\nexport default WebGLImmediateRenderer;\n","/**\n * @module ol/renderer/webgl/defaultmapshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../webgl.js';\nimport WebGLFragment from '../../webgl/Fragment.js';\nimport WebGLVertex from '../../webgl/Vertex.js';\n\nexport const fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\n\\n\\nuniform float u_opacity;\\nuniform sampler2D u_texture;\\n\\nvoid main(void) {\\n  vec4 texColor = texture2D(u_texture, v_texCoord);\\n  gl_FragColor.rgb = texColor.rgb;\\n  gl_FragColor.a = texColor.a * u_opacity;\\n}\\n' :\n  'precision mediump float;varying vec2 a;uniform float f;uniform sampler2D g;void main(void){vec4 texColor=texture2D(g,a);gl_FragColor.rgb=texColor.rgb;gl_FragColor.a=texColor.a*f;}');\n\nexport const vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\n\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\n\\nuniform mat4 u_texCoordMatrix;\\nuniform mat4 u_projectionMatrix;\\n\\nvoid main(void) {\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0., 1.);\\n  v_texCoord = (u_texCoordMatrix * vec4(a_texCoord, 0., 1.)).st;\\n}\\n\\n\\n' :\n  'varying vec2 a;attribute vec2 b;attribute vec2 c;uniform mat4 d;uniform mat4 e;void main(void){gl_Position=e*vec4(b,0.,1.);a=(d*vec4(c,0.,1.)).st;}');\n","/**\n * @module ol/renderer/webgl/defaultmapshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\n\n/**\n * @constructor\n * @param {WebGLRenderingContext} gl GL.\n * @param {WebGLProgram} program Program.\n * @struct\n */\nconst Locations = function(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_texCoordMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_texCoordMatrix' : 'd');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'e');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'f');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_texture = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_texture' : 'g');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'b');\n\n  /**\n   * @type {number}\n   */\n  this.a_texCoord = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_texCoord' : 'c');\n};\n\nexport default Locations;\n","/**\n * @module ol/renderer/webgl/Layer\n */\nimport {inherits} from '../../util.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLImmediateRenderer from '../../render/webgl/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {fragment, vertex} from '../webgl/defaultmapshader.js';\nimport Locations from '../webgl/defaultmapshader/Locations.js';\nimport {create as createTransform} from '../../transform.js';\nimport {create, fromTransform} from '../../vec/mat4.js';\nimport {ARRAY_BUFFER, FRAMEBUFFER, FLOAT, TEXTURE_2D,\n  TRIANGLE_STRIP, COLOR_ATTACHMENT0} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\nimport {createEmptyTexture} from '../../webgl/Context.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/renderer/Layer}\n * @param {module:ol/renderer/webgl/Map} mapRenderer Map renderer.\n * @param {module:ol/layer/Layer} layer Layer.\n */\nconst WebGLLayerRenderer = function(mapRenderer, layer) {\n\n  LayerRenderer.call(this, layer);\n\n  /**\n   * @protected\n   * @type {module:ol/renderer/webgl/Map}\n   */\n  this.mapRenderer = mapRenderer;\n\n  /**\n   * @private\n   * @type {module:ol/webgl/Buffer}\n   */\n  this.arrayBuffer_ = new WebGLBuffer([\n    -1, -1, 0, 0,\n    1, -1, 1, 0,\n    -1, 1, 0, 1,\n    1, 1, 1, 1\n  ]);\n\n  /**\n   * @protected\n   * @type {WebGLTexture}\n   */\n  this.texture = null;\n\n  /**\n   * @protected\n   * @type {WebGLFramebuffer}\n   */\n  this.framebuffer = null;\n\n  /**\n   * @protected\n   * @type {number|undefined}\n   */\n  this.framebufferDimension = undefined;\n\n  /**\n   * @protected\n   * @type {module:ol/transform~Transform}\n   */\n  this.texCoordMatrix = createTransform();\n\n  /**\n   * @protected\n   * @type {module:ol/transform~Transform}\n   */\n  this.projectionMatrix = createTransform();\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.tmpMat4_ = create();\n\n  /**\n   * @private\n   * @type {module:ol/renderer/webgl/defaultmapshader/Locations}\n   */\n  this.defaultLocations_ = null;\n\n};\n\ninherits(WebGLLayerRenderer, LayerRenderer);\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {number} framebufferDimension Framebuffer dimension.\n * @protected\n */\nWebGLLayerRenderer.prototype.bindFramebuffer = function(frameState, framebufferDimension) {\n\n  const gl = this.mapRenderer.getGL();\n\n  if (this.framebufferDimension === undefined ||\n      this.framebufferDimension != framebufferDimension) {\n    /**\n     * @param {WebGLRenderingContext} gl GL.\n     * @param {WebGLFramebuffer} framebuffer Framebuffer.\n     * @param {WebGLTexture} texture Texture.\n     */\n    const postRenderFunction = function(gl, framebuffer, texture) {\n      if (!gl.isContextLost()) {\n        gl.deleteFramebuffer(framebuffer);\n        gl.deleteTexture(texture);\n      }\n    }.bind(null, gl, this.framebuffer, this.texture);\n\n    frameState.postRenderFunctions.push(\n      /** @type {module:ol/PluggableMap~PostRenderFunction} */ (postRenderFunction)\n    );\n\n    const texture = createEmptyTexture(\n      gl, framebufferDimension, framebufferDimension);\n\n    const framebuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(FRAMEBUFFER, framebuffer);\n    gl.framebufferTexture2D(FRAMEBUFFER,\n      COLOR_ATTACHMENT0, TEXTURE_2D, texture, 0);\n\n    this.texture = texture;\n    this.framebuffer = framebuffer;\n    this.framebufferDimension = framebufferDimension;\n\n  } else {\n    gl.bindFramebuffer(FRAMEBUFFER, this.framebuffer);\n  }\n\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {module:ol/webgl/Context} context Context.\n */\nWebGLLayerRenderer.prototype.composeFrame = function(frameState, layerState, context) {\n\n  this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState);\n\n  context.bindBuffer(ARRAY_BUFFER, this.arrayBuffer_);\n\n  const gl = context.getGL();\n\n  const program = context.getProgram(fragment, vertex);\n\n  let locations;\n  if (!this.defaultLocations_) {\n    locations = new Locations(gl, program);\n    this.defaultLocations_ = locations;\n  } else {\n    locations = this.defaultLocations_;\n  }\n\n  if (context.useProgram(program)) {\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(\n      locations.a_position, 2, FLOAT, false, 16, 0);\n    gl.enableVertexAttribArray(locations.a_texCoord);\n    gl.vertexAttribPointer(\n      locations.a_texCoord, 2, FLOAT, false, 16, 8);\n    gl.uniform1i(locations.u_texture, 0);\n  }\n\n  gl.uniformMatrix4fv(locations.u_texCoordMatrix, false,\n    fromTransform(this.tmpMat4_, this.getTexCoordMatrix()));\n  gl.uniformMatrix4fv(locations.u_projectionMatrix, false,\n    fromTransform(this.tmpMat4_, this.getProjectionMatrix()));\n  gl.uniform1f(locations.u_opacity, layerState.opacity);\n  gl.bindTexture(TEXTURE_2D, this.getTexture());\n  gl.drawArrays(TRIANGLE_STRIP, 0, 4);\n\n  this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState);\n};\n\n\n/**\n * @param {module:ol/render/EventType} type Event type.\n * @param {module:ol/webgl/Context} context WebGL context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @private\n */\nWebGLLayerRenderer.prototype.dispatchComposeEvent_ = function(type, context, frameState) {\n  const layer = this.getLayer();\n  if (layer.hasListener(type)) {\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const extent = frameState.extent;\n    const center = viewState.center;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n\n    const render = new WebGLImmediateRenderer(\n      context, center, resolution, rotation, size, extent, pixelRatio);\n    const composeEvent = new RenderEvent(\n      type, render, frameState, null, context);\n    layer.dispatchEvent(composeEvent);\n  }\n};\n\n\n/**\n * @return {!module:ol/transform~Transform} Matrix.\n */\nWebGLLayerRenderer.prototype.getTexCoordMatrix = function() {\n  return this.texCoordMatrix;\n};\n\n\n/**\n * @return {WebGLTexture} Texture.\n */\nWebGLLayerRenderer.prototype.getTexture = function() {\n  return this.texture;\n};\n\n\n/**\n * @return {!module:ol/transform~Transform} Matrix.\n */\nWebGLLayerRenderer.prototype.getProjectionMatrix = function() {\n  return this.projectionMatrix;\n};\n\n\n/**\n * Handle webglcontextlost.\n */\nWebGLLayerRenderer.prototype.handleWebGLContextLost = function() {\n  this.texture = null;\n  this.framebuffer = null;\n  this.framebufferDimension = undefined;\n};\n\n\n/**\n * @abstract\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {module:ol/webgl/Context} context Context.\n * @return {boolean} whether composeFrame should be called.\n */\nWebGLLayerRenderer.prototype.prepareFrame = function(frameState, layerState, context) {};\n\n\n/**\n * @abstract\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n *     callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @return {T|undefined} Callback result.\n * @template S,T,U\n */\nWebGLLayerRenderer.prototype.forEachLayerAtPixel = function(pixel, frameState, callback, thisArg) {};\nexport default WebGLLayerRenderer;\n","/**\n * @module ol/renderer/webgl/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport {inherits} from '../../util.js';\nimport {TRUE, UNDEFINED} from '../../functions.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {getIntersection, isEmpty} from '../../extent.js';\nimport WebGLLayerRenderer from '../webgl/Layer.js';\nimport {\n  create as createTransform,\n  rotate as rotateTransform,\n  translate as translateTransform,\n  scale as scaleTransform,\n  reset as resetTransform,\n  apply as applyTransform,\n  invert as invertTransform,\n  multiply as multiplyTransform\n} from '../../transform.js';\nimport {CLAMP_TO_EDGE} from '../../webgl.js';\nimport {createTexture} from '../../webgl/Context.js';\n\n/**\n * @constructor\n * @extends {module:ol/renderer/webgl/Layer}\n * @param {module:ol/renderer/webgl/Map} mapRenderer Map renderer.\n * @param {module:ol/layer/Image} imageLayer Tile layer.\n * @api\n */\nconst WebGLImageLayerRenderer = function(mapRenderer, imageLayer) {\n\n  WebGLLayerRenderer.call(this, mapRenderer, imageLayer);\n\n  /**\n   * The last rendered image.\n   * @private\n   * @type {?module:ol/ImageBase}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.hitCanvasContext_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/transform~Transform}\n   */\n  this.hitTransformationMatrix_ = null;\n\n};\n\ninherits(WebGLImageLayerRenderer, WebGLLayerRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nWebGLImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/webgl/ImageLayer} The layer renderer.\n */\nWebGLImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new WebGLImageLayerRenderer(\n    /** @type {module:ol/renderer/webgl/Map} */ (mapRenderer),\n    /** @type {module:ol/layer/Image} */ (layer)\n  );\n};\n\n\n/**\n * @param {module:ol/ImageBase} image Image.\n * @private\n * @return {WebGLTexture} Texture.\n */\nWebGLImageLayerRenderer.prototype.createTexture_ = function(image) {\n\n  // We meet the conditions to work with non-power of two textures.\n  // http://www.khronos.org/webgl/wiki/WebGL_and_OpenGL_Differences#Non-Power_of_Two_Texture_Support\n  // http://learningwebgl.com/blog/?p=2101\n\n  const imageElement = image.getImage();\n  const gl = this.mapRenderer.getGL();\n\n  return createTexture(\n    gl, imageElement, CLAMP_TO_EDGE, CLAMP_TO_EDGE);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  const layer = this.getLayer();\n  const source = layer.getSource();\n  const resolution = frameState.viewState.resolution;\n  const rotation = frameState.viewState.rotation;\n  const skippedFeatureUids = frameState.skippedFeatureUids;\n  return source.forEachFeatureAtCoordinate(\n    coordinate, resolution, rotation, hitTolerance, skippedFeatureUids,\n\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @return {?} Callback result.\n     */\n    function(feature) {\n      return callback.call(thisArg, feature, layer);\n    });\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImageLayerRenderer.prototype.prepareFrame = function(frameState, layerState, context) {\n\n  const gl = this.mapRenderer.getGL();\n\n  const pixelRatio = frameState.pixelRatio;\n  const viewState = frameState.viewState;\n  const viewCenter = viewState.center;\n  const viewResolution = viewState.resolution;\n  const viewRotation = viewState.rotation;\n\n  let image = this.image_;\n  let texture = this.texture;\n  const imageLayer = /** @type {module:ol/layer/Image} */ (this.getLayer());\n  const imageSource = imageLayer.getSource();\n\n  const hints = frameState.viewHints;\n\n  let renderedExtent = frameState.extent;\n  if (layerState.extent !== undefined) {\n    renderedExtent = getIntersection(renderedExtent, layerState.extent);\n  }\n  if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)) {\n    let projection = viewState.projection;\n    if (!ENABLE_RASTER_REPROJECTION) {\n      const sourceProjection = imageSource.getProjection();\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n    }\n    const image_ = imageSource.getImage(renderedExtent, viewResolution,\n      pixelRatio, projection);\n    if (image_) {\n      const loaded = this.loadImage(image_);\n      if (loaded) {\n        image = image_;\n        texture = this.createTexture_(image_);\n        if (this.texture) {\n          /**\n           * @param {WebGLRenderingContext} gl GL.\n           * @param {WebGLTexture} texture Texture.\n           */\n          const postRenderFunction = function(gl, texture) {\n            if (!gl.isContextLost()) {\n              gl.deleteTexture(texture);\n            }\n          }.bind(null, gl, this.texture);\n          frameState.postRenderFunctions.push(\n            /** @type {module:ol/PluggableMap~PostRenderFunction} */ (postRenderFunction)\n          );\n        }\n      }\n    }\n  }\n\n  if (image) {\n    const canvas = this.mapRenderer.getContext().getCanvas();\n\n    this.updateProjectionMatrix_(canvas.width, canvas.height,\n      pixelRatio, viewCenter, viewResolution, viewRotation,\n      image.getExtent());\n    this.hitTransformationMatrix_ = null;\n\n    // Translate and scale to flip the Y coord.\n    const texCoordMatrix = this.texCoordMatrix;\n    resetTransform(texCoordMatrix);\n    scaleTransform(texCoordMatrix, 1, -1);\n    translateTransform(texCoordMatrix, 0, -1);\n\n    this.image_ = image;\n    this.texture = texture;\n  }\n\n  return !!image;\n};\n\n\n/**\n * @param {number} canvasWidth Canvas width.\n * @param {number} canvasHeight Canvas height.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/coordinate~Coordinate} viewCenter View center.\n * @param {number} viewResolution View resolution.\n * @param {number} viewRotation View rotation.\n * @param {module:ol/extent~Extent} imageExtent Image extent.\n * @private\n */\nWebGLImageLayerRenderer.prototype.updateProjectionMatrix_ = function(canvasWidth, canvasHeight, pixelRatio,\n  viewCenter, viewResolution, viewRotation, imageExtent) {\n\n  const canvasExtentWidth = canvasWidth * viewResolution;\n  const canvasExtentHeight = canvasHeight * viewResolution;\n\n  const projectionMatrix = this.projectionMatrix;\n  resetTransform(projectionMatrix);\n  scaleTransform(projectionMatrix,\n    pixelRatio * 2 / canvasExtentWidth,\n    pixelRatio * 2 / canvasExtentHeight);\n  rotateTransform(projectionMatrix, -viewRotation);\n  translateTransform(projectionMatrix,\n    imageExtent[0] - viewCenter[0],\n    imageExtent[1] - viewCenter[1]);\n  scaleTransform(projectionMatrix,\n    (imageExtent[2] - imageExtent[0]) / 2,\n    (imageExtent[3] - imageExtent[1]) / 2);\n  translateTransform(projectionMatrix, 1, 1);\n\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImageLayerRenderer.prototype.hasFeatureAtCoordinate = function(coordinate, frameState) {\n  const hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, 0, TRUE, this);\n  return hasFeature !== undefined;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImageLayerRenderer.prototype.forEachLayerAtPixel = function(pixel, frameState, callback, thisArg) {\n  if (!this.image_ || !this.image_.getImage()) {\n    return undefined;\n  }\n\n  if (this.getLayer().getSource().forEachFeatureAtCoordinate !== UNDEFINED) {\n    // for ImageCanvas sources use the original hit-detection logic,\n    // so that for example also transparent polygons are detected\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n    const hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, 0, TRUE, this);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  } else {\n    const imageSize =\n        [this.image_.getImage().width, this.image_.getImage().height];\n\n    if (!this.hitTransformationMatrix_) {\n      this.hitTransformationMatrix_ = this.getHitTransformationMatrix_(\n        frameState.size, imageSize);\n    }\n\n    const pixelOnFrameBuffer = applyTransform(\n      this.hitTransformationMatrix_, pixel.slice());\n\n    if (pixelOnFrameBuffer[0] < 0 || pixelOnFrameBuffer[0] > imageSize[0] ||\n        pixelOnFrameBuffer[1] < 0 || pixelOnFrameBuffer[1] > imageSize[1]) {\n      // outside the image, no need to check\n      return undefined;\n    }\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.image_.getImage(),\n      pixelOnFrameBuffer[0], pixelOnFrameBuffer[1], 1, 1, 0, 0, 1, 1);\n\n    const imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(),  imageData);\n    } else {\n      return undefined;\n    }\n  }\n};\n\n\n/**\n * The transformation matrix to get the pixel on the image for a\n * pixel on the map.\n * @param {module:ol/size~Size} mapSize The map size.\n * @param {module:ol/size~Size} imageSize The image size.\n * @return {module:ol/transform~Transform} The transformation matrix.\n * @private\n */\nWebGLImageLayerRenderer.prototype.getHitTransformationMatrix_ = function(mapSize, imageSize) {\n  // the first matrix takes a map pixel, flips the y-axis and scales to\n  // a range between -1 ... 1\n  const mapCoordTransform = createTransform();\n  translateTransform(mapCoordTransform, -1, -1);\n  scaleTransform(mapCoordTransform, 2 / mapSize[0], 2 / mapSize[1]);\n  translateTransform(mapCoordTransform, 0, mapSize[1]);\n  scaleTransform(mapCoordTransform, 1, -1);\n\n  // the second matrix is the inverse of the projection matrix used in the\n  // shader for drawing\n  const projectionMatrixInv = invertTransform(this.projectionMatrix.slice());\n\n  // the third matrix scales to the image dimensions and flips the y-axis again\n  const transform = createTransform();\n  translateTransform(transform, 0, imageSize[1]);\n  scaleTransform(transform, 1, -1);\n  scaleTransform(transform, imageSize[0] / 2, imageSize[1] / 2);\n  translateTransform(transform, 1, 1);\n\n  multiplyTransform(transform, projectionMatrixInv);\n  multiplyTransform(transform, mapCoordTransform);\n\n  return transform;\n};\nexport default WebGLImageLayerRenderer;\n","/**\n * @module ol/renderer/webgl/Map\n */\n\nimport {inherits} from '../../util.js';\nimport {stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen} from '../../events.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLImmediateRenderer from '../../render/webgl/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport PriorityQueue from '../../structs/PriorityQueue.js';\nimport {BLEND, CLAMP_TO_EDGE, COLOR_BUFFER_BIT, CULL_FACE, DEPTH_TEST, FRAMEBUFFER,\n  getContext, LINEAR, ONE, ONE_MINUS_SRC_ALPHA, RGBA, SCISSOR_TEST, SRC_ALPHA,\n  STENCIL_TEST, TEXTURE0, TEXTURE_2D, TEXTURE_MAG_FILTER, TEXTURE_MIN_FILTER,\n  TEXTURE_WRAP_S, TEXTURE_WRAP_T, UNSIGNED_BYTE} from '../../webgl.js';\nimport WebGLContext from '../../webgl/Context.js';\nimport ContextEventType from '../../webgl/ContextEventType.js';\n\n\n/**\n * @typedef {Object} TextureCacheEntry\n * @property {number} magFilter\n * @property {number} minFilter\n * @property {WebGLTexture} texture\n */\n\n\n/**\n * Texture cache high water mark.\n * @type {number}\n */\nconst WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK = 1024;\n\n\n/**\n * @constructor\n * @extends {module:ol/renderer/Map}\n * @param {module:ol/PluggableMap} map Map.\n * @api\n */\nconst WebGLMapRenderer = function(map) {\n  MapRenderer.call(this, map);\n\n  const container = map.getViewport();\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = /** @type {HTMLCanvasElement} */\n    (document.createElement('CANVAS'));\n  this.canvas_.style.width = '100%';\n  this.canvas_.style.height = '100%';\n  this.canvas_.style.display = 'block';\n  this.canvas_.className = CLASS_UNSELECTABLE;\n  container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.clipTileCanvasWidth_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.clipTileCanvasHeight_ = 0;\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.clipTileContext_ = createCanvasContext2D();\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderedVisible_ = true;\n\n  /**\n   * @private\n   * @type {WebGLRenderingContext}\n   */\n  this.gl_ = getContext(this.canvas_, {\n    antialias: true,\n    depth: true,\n    failIfMajorPerformanceCaveat: true,\n    preserveDrawingBuffer: false,\n    stencil: true\n  });\n\n  /**\n   * @private\n   * @type {module:ol/webgl/Context}\n   */\n  this.context_ = new WebGLContext(this.canvas_, this.gl_);\n\n  listen(this.canvas_, ContextEventType.LOST,\n    this.handleWebGLContextLost, this);\n  listen(this.canvas_, ContextEventType.RESTORED,\n    this.handleWebGLContextRestored, this);\n\n  /**\n   * @private\n   * @type {module:ol/structs/LRUCache.<module:ol/renderer/webgl/Map~TextureCacheEntry|null>}\n   */\n  this.textureCache_ = new LRUCache();\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.focus_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/structs/PriorityQueue.<Array>}\n   */\n  this.tileTextureQueue_ = new PriorityQueue(\n    /**\n     * @param {Array.<*>} element Element.\n     * @return {number} Priority.\n     * @this {module:ol/renderer/webgl/Map}\n     */\n    (function(element) {\n      const tileCenter = /** @type {module:ol/coordinate~Coordinate} */ (element[1]);\n      const tileResolution = /** @type {number} */ (element[2]);\n      const deltaX = tileCenter[0] - this.focus_[0];\n      const deltaY = tileCenter[1] - this.focus_[1];\n      return 65536 * Math.log(tileResolution) +\n            Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n    }).bind(this),\n    /**\n     * @param {Array.<*>} element Element.\n     * @return {string} Key.\n     */\n    function(element) {\n      return (\n        /** @type {module:ol/Tile} */ (element[0]).getKey()\n      );\n    });\n\n\n  /**\n   * @param {module:ol/PluggableMap} map Map.\n   * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @return {boolean} false.\n   * @this {module:ol/renderer/webgl/Map}\n   */\n  this.loadNextTileTexture_ =\n      function(map, frameState) {\n        if (!this.tileTextureQueue_.isEmpty()) {\n          this.tileTextureQueue_.reprioritize();\n          const element = this.tileTextureQueue_.dequeue();\n          const tile = /** @type {module:ol/Tile} */ (element[0]);\n          const tileSize = /** @type {module:ol/size~Size} */ (element[3]);\n          const tileGutter = /** @type {number} */ (element[4]);\n          this.bindTileTexture(\n            tile, tileSize, tileGutter, LINEAR, LINEAR);\n        }\n        return false;\n      }.bind(this);\n\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textureCacheFrameMarkerCount_ = 0;\n\n  this.initializeGL_();\n};\n\ninherits(WebGLMapRenderer, MapRenderer);\n\n\n/**\n * @param {module:ol/Tile} tile Tile.\n * @param {module:ol/size~Size} tileSize Tile size.\n * @param {number} tileGutter Tile gutter.\n * @param {number} magFilter Mag filter.\n * @param {number} minFilter Min filter.\n */\nWebGLMapRenderer.prototype.bindTileTexture = function(tile, tileSize, tileGutter, magFilter, minFilter) {\n  const gl = this.getGL();\n  const tileKey = tile.getKey();\n  if (this.textureCache_.containsKey(tileKey)) {\n    const textureCacheEntry = this.textureCache_.get(tileKey);\n    gl.bindTexture(TEXTURE_2D, textureCacheEntry.texture);\n    if (textureCacheEntry.magFilter != magFilter) {\n      gl.texParameteri(\n        TEXTURE_2D, TEXTURE_MAG_FILTER, magFilter);\n      textureCacheEntry.magFilter = magFilter;\n    }\n    if (textureCacheEntry.minFilter != minFilter) {\n      gl.texParameteri(\n        TEXTURE_2D, TEXTURE_MIN_FILTER, minFilter);\n      textureCacheEntry.minFilter = minFilter;\n    }\n  } else {\n    const texture = gl.createTexture();\n    gl.bindTexture(TEXTURE_2D, texture);\n    if (tileGutter > 0) {\n      const clipTileCanvas = this.clipTileContext_.canvas;\n      const clipTileContext = this.clipTileContext_;\n      if (this.clipTileCanvasWidth_ !== tileSize[0] ||\n          this.clipTileCanvasHeight_ !== tileSize[1]) {\n        clipTileCanvas.width = tileSize[0];\n        clipTileCanvas.height = tileSize[1];\n        this.clipTileCanvasWidth_ = tileSize[0];\n        this.clipTileCanvasHeight_ = tileSize[1];\n      } else {\n        clipTileContext.clearRect(0, 0, tileSize[0], tileSize[1]);\n      }\n      clipTileContext.drawImage(tile.getImage(), tileGutter, tileGutter,\n        tileSize[0], tileSize[1], 0, 0, tileSize[0], tileSize[1]);\n      gl.texImage2D(TEXTURE_2D, 0,\n        RGBA, RGBA,\n        UNSIGNED_BYTE, clipTileCanvas);\n    } else {\n      gl.texImage2D(TEXTURE_2D, 0,\n        RGBA, RGBA,\n        UNSIGNED_BYTE, tile.getImage());\n    }\n    gl.texParameteri(\n      TEXTURE_2D, TEXTURE_MAG_FILTER, magFilter);\n    gl.texParameteri(\n      TEXTURE_2D, TEXTURE_MIN_FILTER, minFilter);\n    gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_S,\n      CLAMP_TO_EDGE);\n    gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_T,\n      CLAMP_TO_EDGE);\n    this.textureCache_.set(tileKey, {\n      texture: texture,\n      magFilter: magFilter,\n      minFilter: minFilter\n    });\n  }\n};\n\n\n/**\n * @param {module:ol/render/EventType} type Event type.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @private\n */\nWebGLMapRenderer.prototype.dispatchComposeEvent_ = function(type, frameState) {\n  const map = this.getMap();\n  if (map.hasListener(type)) {\n    const context = this.context_;\n\n    const extent = frameState.extent;\n    const size = frameState.size;\n    const viewState = frameState.viewState;\n    const pixelRatio = frameState.pixelRatio;\n\n    const resolution = viewState.resolution;\n    const center = viewState.center;\n    const rotation = viewState.rotation;\n\n    const vectorContext = new WebGLImmediateRenderer(context,\n      center, resolution, rotation, size, extent, pixelRatio);\n    const composeEvent = new RenderEvent(type, vectorContext,\n      frameState, null, context);\n    map.dispatchEvent(composeEvent);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLMapRenderer.prototype.disposeInternal = function() {\n  const gl = this.getGL();\n  if (!gl.isContextLost()) {\n    this.textureCache_.forEach(\n      /**\n       * @param {?module:ol/renderer/webgl/Map~TextureCacheEntry} textureCacheEntry\n       *     Texture cache entry.\n       */\n      function(textureCacheEntry) {\n        if (textureCacheEntry) {\n          gl.deleteTexture(textureCacheEntry.texture);\n        }\n      });\n  }\n  this.context_.dispose();\n  MapRenderer.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @param {module:ol/PluggableMap} map Map.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @private\n */\nWebGLMapRenderer.prototype.expireCache_ = function(map, frameState) {\n  const gl = this.getGL();\n  let textureCacheEntry;\n  while (this.textureCache_.getCount() - this.textureCacheFrameMarkerCount_ >\n      WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK) {\n    textureCacheEntry = this.textureCache_.peekLast();\n    if (!textureCacheEntry) {\n      if (+this.textureCache_.peekLastKey() == frameState.index) {\n        break;\n      } else {\n        --this.textureCacheFrameMarkerCount_;\n      }\n    } else {\n      gl.deleteTexture(textureCacheEntry.texture);\n    }\n    this.textureCache_.pop();\n  }\n};\n\n\n/**\n * @return {module:ol/webgl/Context} The context.\n */\nWebGLMapRenderer.prototype.getContext = function() {\n  return this.context_;\n};\n\n\n/**\n * @return {WebGLRenderingContext} GL.\n */\nWebGLMapRenderer.prototype.getGL = function() {\n  return this.gl_;\n};\n\n\n/**\n * @return {module:ol/structs/PriorityQueue.<Array>} Tile texture queue.\n */\nWebGLMapRenderer.prototype.getTileTextureQueue = function() {\n  return this.tileTextureQueue_;\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n * @protected\n */\nWebGLMapRenderer.prototype.handleWebGLContextLost = function(event) {\n  event.preventDefault();\n  this.textureCache_.clear();\n  this.textureCacheFrameMarkerCount_ = 0;\n\n  const renderers = this.getLayerRenderers();\n  for (const id in renderers) {\n    const renderer = /** @type {module:ol/renderer/webgl/Layer} */ (renderers[id]);\n    renderer.handleWebGLContextLost();\n  }\n};\n\n\n/**\n * @protected\n */\nWebGLMapRenderer.prototype.handleWebGLContextRestored = function() {\n  this.initializeGL_();\n  this.getMap().render();\n};\n\n\n/**\n * @private\n */\nWebGLMapRenderer.prototype.initializeGL_ = function() {\n  const gl = this.gl_;\n  gl.activeTexture(TEXTURE0);\n  gl.blendFuncSeparate(\n    SRC_ALPHA, ONE_MINUS_SRC_ALPHA,\n    ONE, ONE_MINUS_SRC_ALPHA);\n  gl.disable(CULL_FACE);\n  gl.disable(DEPTH_TEST);\n  gl.disable(SCISSOR_TEST);\n  gl.disable(STENCIL_TEST);\n};\n\n\n/**\n * @param {module:ol/Tile} tile Tile.\n * @return {boolean} Is tile texture loaded.\n */\nWebGLMapRenderer.prototype.isTileTextureLoaded = function(tile) {\n  return this.textureCache_.containsKey(tile.getKey());\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLMapRenderer.prototype.renderFrame = function(frameState) {\n\n  const context = this.getContext();\n  const gl = this.getGL();\n\n  if (gl.isContextLost()) {\n    return false;\n  }\n\n  if (!frameState) {\n    if (this.renderedVisible_) {\n      this.canvas_.style.display = 'none';\n      this.renderedVisible_ = false;\n    }\n    return false;\n  }\n\n  this.focus_ = frameState.focus;\n\n  this.textureCache_.set((-frameState.index).toString(), null);\n  ++this.textureCacheFrameMarkerCount_;\n\n  this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, frameState);\n\n  /** @type {Array.<module:ol/layer/Layer~State>} */\n  const layerStatesToDraw = [];\n  const layerStatesArray = frameState.layerStatesArray;\n  stableSort(layerStatesArray, sortByZIndex);\n\n  const viewResolution = frameState.viewState.resolution;\n  let i, ii, layerRenderer, layerState;\n  for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n    layerState = layerStatesArray[i];\n    if (visibleAtResolution(layerState, viewResolution) &&\n        layerState.sourceState == SourceState.READY) {\n      layerRenderer = /** @type {module:ol/renderer/webgl/Layer} */ (this.getLayerRenderer(layerState.layer));\n      if (layerRenderer.prepareFrame(frameState, layerState, context)) {\n        layerStatesToDraw.push(layerState);\n      }\n    }\n  }\n\n  const width = frameState.size[0] * frameState.pixelRatio;\n  const height = frameState.size[1] * frameState.pixelRatio;\n  if (this.canvas_.width != width || this.canvas_.height != height) {\n    this.canvas_.width = width;\n    this.canvas_.height = height;\n  }\n\n  gl.bindFramebuffer(FRAMEBUFFER, null);\n\n  gl.clearColor(0, 0, 0, 0);\n  gl.clear(COLOR_BUFFER_BIT);\n  gl.enable(BLEND);\n  gl.viewport(0, 0, this.canvas_.width, this.canvas_.height);\n\n  for (i = 0, ii = layerStatesToDraw.length; i < ii; ++i) {\n    layerState = layerStatesToDraw[i];\n    layerRenderer = /** @type {module:ol/renderer/webgl/Layer} */ (this.getLayerRenderer(layerState.layer));\n    layerRenderer.composeFrame(frameState, layerState, context);\n  }\n\n  if (!this.renderedVisible_) {\n    this.canvas_.style.display = '';\n    this.renderedVisible_ = true;\n  }\n\n  this.calculateMatrices2D(frameState);\n\n  if (this.textureCache_.getCount() - this.textureCacheFrameMarkerCount_ >\n      WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK) {\n    frameState.postRenderFunctions.push(\n      /** @type {module:ol/PluggableMap~PostRenderFunction} */ (this.expireCache_.bind(this))\n    );\n  }\n\n  if (!this.tileTextureQueue_.isEmpty()) {\n    frameState.postRenderFunctions.push(this.loadNextTileTexture_);\n    frameState.animate = true;\n  }\n\n  this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, frameState);\n\n  this.scheduleRemoveUnusedLayerRenderers(frameState);\n  this.scheduleExpireIconCache(frameState);\n\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLMapRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg,\n  layerFilter, thisArg2) {\n  let result;\n\n  if (this.getGL().isContextLost()) {\n    return false;\n  }\n\n  const viewState = frameState.viewState;\n\n  const layerStates = frameState.layerStatesArray;\n  const numLayers = layerStates.length;\n  let i;\n  for (i = numLayers - 1; i >= 0; --i) {\n    const layerState = layerStates[i];\n    const layer = layerState.layer;\n    if (visibleAtResolution(layerState, viewState.resolution) &&\n        layerFilter.call(thisArg2, layer)) {\n      const layerRenderer = this.getLayerRenderer(layer);\n      result = layerRenderer.forEachFeatureAtCoordinate(\n        coordinate, frameState, hitTolerance, callback, thisArg);\n      if (result) {\n        return result;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLMapRenderer.prototype.hasFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n  let hasFeature = false;\n\n  if (this.getGL().isContextLost()) {\n    return false;\n  }\n\n  const viewState = frameState.viewState;\n\n  const layerStates = frameState.layerStatesArray;\n  const numLayers = layerStates.length;\n  let i;\n  for (i = numLayers - 1; i >= 0; --i) {\n    const layerState = layerStates[i];\n    const layer = layerState.layer;\n    if (visibleAtResolution(layerState, viewState.resolution) &&\n        layerFilter.call(thisArg, layer)) {\n      const layerRenderer = this.getLayerRenderer(layer);\n      hasFeature =\n          layerRenderer.hasFeatureAtCoordinate(coordinate, frameState);\n      if (hasFeature) {\n        return true;\n      }\n    }\n  }\n  return hasFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLMapRenderer.prototype.forEachLayerAtPixel = function(pixel, frameState, hitTolerance, callback, thisArg,\n  layerFilter, thisArg2) {\n  if (this.getGL().isContextLost()) {\n    return false;\n  }\n\n  const viewState = frameState.viewState;\n  let result;\n\n  const layerStates = frameState.layerStatesArray;\n  const numLayers = layerStates.length;\n  let i;\n  for (i = numLayers - 1; i >= 0; --i) {\n    const layerState = layerStates[i];\n    const layer = layerState.layer;\n    if (visibleAtResolution(layerState, viewState.resolution) &&\n        layerFilter.call(thisArg, layer)) {\n      const layerRenderer = /** @type {module:ol/renderer/webgl/Layer} */ (this.getLayerRenderer(layer));\n      result = layerRenderer.forEachLayerAtPixel(\n        pixel, frameState, callback, thisArg);\n      if (result) {\n        return result;\n      }\n    }\n  }\n  return undefined;\n};\n\nexport default WebGLMapRenderer;\n","/**\n * @module ol/renderer/webgl/tilelayershader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../webgl.js';\nimport WebGLFragment from '../../webgl/Fragment.js';\nimport WebGLVertex from '../../webgl/Vertex.js';\n\nexport const fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\n\\n\\nuniform sampler2D u_texture;\\n\\nvoid main(void) {\\n  gl_FragColor = texture2D(u_texture, v_texCoord);\\n}\\n' :\n  'precision mediump float;varying vec2 a;uniform sampler2D e;void main(void){gl_FragColor=texture2D(e,a);}');\n\nexport const vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\n\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\nuniform vec4 u_tileOffset;\\n\\nvoid main(void) {\\n  gl_Position = vec4(a_position * u_tileOffset.xy + u_tileOffset.zw, 0., 1.);\\n  v_texCoord = a_texCoord;\\n}\\n\\n\\n' :\n  'varying vec2 a;attribute vec2 b;attribute vec2 c;uniform vec4 d;void main(void){gl_Position=vec4(b*d.xy+d.zw,0.,1.);a=c;}');\n","/**\n * @module ol/renderer/webgl/tilelayershader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\n\n/**\n * @constructor\n * @param {WebGLRenderingContext} gl GL.\n * @param {WebGLProgram} program Program.\n * @struct\n */\nconst Locations = function(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_tileOffset = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_tileOffset' : 'd');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_texture = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_texture' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'b');\n\n  /**\n   * @type {number}\n   */\n  this.a_texCoord = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_texCoord' : 'c');\n};\n\nexport default Locations;\n","/**\n * @module ol/renderer/webgl/TileLayer\n */\n// FIXME large resolutions lead to too large framebuffers :-(\n// FIXME animated shaders! check in redraw\n\nimport {inherits} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createEmpty, intersects} from '../../extent.js';\nimport {roundUpToPowerOfTwo} from '../../math.js';\nimport WebGLLayerRenderer from '../webgl/Layer.js';\nimport {fragment, vertex} from '../webgl/tilelayershader.js';\nimport Locations from '../webgl/tilelayershader/Locations.js';\nimport {toSize} from '../../size.js';\nimport {\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform,\n  apply as applyTransform\n} from '../../transform.js';\nimport {COLOR_BUFFER_BIT, BLEND, ARRAY_BUFFER, FLOAT, LINEAR, TRIANGLE_STRIP} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n/**\n * @constructor\n * @extends {module:ol/renderer/webgl/Layer}\n * @param {module:ol/renderer/webgl/Map} mapRenderer Map renderer.\n * @param {module:ol/layer/Tile} tileLayer Tile layer.\n * @api\n */\nconst WebGLTileLayerRenderer = function(mapRenderer, tileLayer) {\n\n  WebGLLayerRenderer.call(this, mapRenderer, tileLayer);\n\n  /**\n   * @private\n   * @type {module:ol/webgl/Fragment}\n   */\n  this.fragmentShader_ = fragment;\n\n  /**\n   * @private\n   * @type {module:ol/webgl/Vertex}\n   */\n  this.vertexShader_ = vertex;\n\n  /**\n   * @private\n   * @type {module:ol/renderer/webgl/tilelayershader/Locations}\n   */\n  this.locations_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/webgl/Buffer}\n   */\n  this.renderArrayBuffer_ = new WebGLBuffer([\n    0, 0, 0, 1,\n    1, 0, 1, 1,\n    0, 1, 0, 0,\n    1, 1, 1, 0\n  ]);\n\n  /**\n   * @private\n   * @type {module:ol/TileRange}\n   */\n  this.renderedTileRange_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.renderedFramebufferExtent_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n};\n\ninherits(WebGLTileLayerRenderer, WebGLLayerRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nWebGLTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/webgl/TileLayer} The layer renderer.\n */\nWebGLTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new WebGLTileLayerRenderer(\n    /** @type {module:ol/renderer/webgl/Map} */ (mapRenderer),\n    /** @type {module:ol/layer/Tile} */ (layer)\n  );\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTileLayerRenderer.prototype.disposeInternal = function() {\n  const context = this.mapRenderer.getContext();\n  context.deleteBuffer(this.renderArrayBuffer_);\n  WebGLLayerRenderer.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTileLayerRenderer.prototype.createLoadedTileFinder = function(source, projection, tiles) {\n  const mapRenderer = this.mapRenderer;\n\n  return (\n    /**\n     * @param {number} zoom Zoom level.\n     * @param {module:ol/TileRange} tileRange Tile range.\n     * @return {boolean} The tile range is fully loaded.\n     */\n    function(zoom, tileRange) {\n      function callback(tile) {\n        const loaded = mapRenderer.isTileTextureLoaded(tile);\n        if (loaded) {\n          if (!tiles[zoom]) {\n            tiles[zoom] = {};\n          }\n          tiles[zoom][tile.tileCoord.toString()] = tile;\n        }\n        return loaded;\n      }\n      return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n    }\n  );\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTileLayerRenderer.prototype.handleWebGLContextLost = function() {\n  WebGLLayerRenderer.prototype.handleWebGLContextLost.call(this);\n  this.locations_ = null;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTileLayerRenderer.prototype.prepareFrame = function(frameState, layerState, context) {\n\n  const mapRenderer = this.mapRenderer;\n  const gl = context.getGL();\n\n  const viewState = frameState.viewState;\n  const projection = viewState.projection;\n\n  const tileLayer = /** @type {module:ol/layer/Tile} */ (this.getLayer());\n  const tileSource = tileLayer.getSource();\n  const tileGrid = tileSource.getTileGridForProjection(projection);\n  const z = tileGrid.getZForResolution(viewState.resolution);\n  const tileResolution = tileGrid.getResolution(z);\n\n  const tilePixelSize =\n      tileSource.getTilePixelSize(z, frameState.pixelRatio, projection);\n  const pixelRatio = tilePixelSize[0] /\n      toSize(tileGrid.getTileSize(z), this.tmpSize_)[0];\n  const tilePixelResolution = tileResolution / pixelRatio;\n  const tileGutter = tileSource.getTilePixelRatio(pixelRatio) * tileSource.getGutter(projection);\n\n  const center = viewState.center;\n  const extent = frameState.extent;\n  const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n  let framebufferExtent;\n  if (this.renderedTileRange_ &&\n      this.renderedTileRange_.equals(tileRange) &&\n      this.renderedRevision_ == tileSource.getRevision()) {\n    framebufferExtent = this.renderedFramebufferExtent_;\n  } else {\n\n    const tileRangeSize = tileRange.getSize();\n\n    const maxDimension = Math.max(\n      tileRangeSize[0] * tilePixelSize[0],\n      tileRangeSize[1] * tilePixelSize[1]);\n    const framebufferDimension = roundUpToPowerOfTwo(maxDimension);\n    const framebufferExtentDimension = tilePixelResolution * framebufferDimension;\n    const origin = tileGrid.getOrigin(z);\n    const minX = origin[0] +\n        tileRange.minX * tilePixelSize[0] * tilePixelResolution;\n    const minY = origin[1] +\n        tileRange.minY * tilePixelSize[1] * tilePixelResolution;\n    framebufferExtent = [\n      minX, minY,\n      minX + framebufferExtentDimension, minY + framebufferExtentDimension\n    ];\n\n    this.bindFramebuffer(frameState, framebufferDimension);\n    gl.viewport(0, 0, framebufferDimension, framebufferDimension);\n\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(COLOR_BUFFER_BIT);\n    gl.disable(BLEND);\n\n    const program = context.getProgram(this.fragmentShader_, this.vertexShader_);\n    context.useProgram(program);\n    if (!this.locations_) {\n      this.locations_ = new Locations(gl, program);\n    }\n\n    context.bindBuffer(ARRAY_BUFFER, this.renderArrayBuffer_);\n    gl.enableVertexAttribArray(this.locations_.a_position);\n    gl.vertexAttribPointer(\n      this.locations_.a_position, 2, FLOAT, false, 16, 0);\n    gl.enableVertexAttribArray(this.locations_.a_texCoord);\n    gl.vertexAttribPointer(\n      this.locations_.a_texCoord, 2, FLOAT, false, 16, 8);\n    gl.uniform1i(this.locations_.u_texture, 0);\n\n    /**\n     * @type {Object.<number, Object.<string, module:ol/Tile>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource, projection, tilesToDrawByZ);\n\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    let allTilesLoaded = true;\n    const tmpExtent = createEmpty();\n    const tmpTileRange = new TileRange(0, 0, 0, 0);\n    let childTileRange, drawable, fullyLoaded, tile, tileState;\n    let x, y, tileExtent;\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n\n        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (layerState.extent !== undefined) {\n          // ignore tiles outside layer extent\n          tileExtent = tileGrid.getTileCoordExtent(tile.tileCoord, tmpExtent);\n          if (!intersects(tileExtent, layerState.extent)) {\n            continue;\n          }\n        }\n        tileState = tile.getState();\n        drawable = tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            tileState == TileState.ERROR && !useInterimTilesOnError;\n        if (!drawable) {\n          tile = tile.getInterimTile();\n        }\n        tileState = tile.getState();\n        if (tileState == TileState.LOADED) {\n          if (mapRenderer.isTileTextureLoaded(tile)) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            continue;\n          }\n        } else if (tileState == TileState.EMPTY ||\n                   (tileState == TileState.ERROR &&\n                    !useInterimTilesOnError)) {\n          continue;\n        }\n\n        allTilesLoaded = false;\n        fullyLoaded = tileGrid.forEachTileCoordParentTileRange(\n          tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n        if (!fullyLoaded) {\n          childTileRange = tileGrid.getTileCoordChildTileRange(\n            tile.tileCoord, tmpTileRange, tmpExtent);\n          if (childTileRange) {\n            findLoadedTiles(z + 1, childTileRange);\n          }\n        }\n\n      }\n\n    }\n\n    /** @type {Array.<number>} */\n    const zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n    const u_tileOffset = new Float32Array(4);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      const tilesToDraw = tilesToDrawByZ[zs[i]];\n      for (const tileKey in tilesToDraw) {\n        tile = tilesToDraw[tileKey];\n        tileExtent = tileGrid.getTileCoordExtent(tile.tileCoord, tmpExtent);\n        u_tileOffset[0] = 2 * (tileExtent[2] - tileExtent[0]) /\n            framebufferExtentDimension;\n        u_tileOffset[1] = 2 * (tileExtent[3] - tileExtent[1]) /\n            framebufferExtentDimension;\n        u_tileOffset[2] = 2 * (tileExtent[0] - framebufferExtent[0]) /\n            framebufferExtentDimension - 1;\n        u_tileOffset[3] = 2 * (tileExtent[1] - framebufferExtent[1]) /\n            framebufferExtentDimension - 1;\n        gl.uniform4fv(this.locations_.u_tileOffset, u_tileOffset);\n        mapRenderer.bindTileTexture(tile, tilePixelSize,\n          tileGutter * pixelRatio, LINEAR, LINEAR);\n        gl.drawArrays(TRIANGLE_STRIP, 0, 4);\n      }\n    }\n\n    if (allTilesLoaded) {\n      this.renderedTileRange_ = tileRange;\n      this.renderedFramebufferExtent_ = framebufferExtent;\n      this.renderedRevision_ = tileSource.getRevision();\n    } else {\n      this.renderedTileRange_ = null;\n      this.renderedFramebufferExtent_ = null;\n      this.renderedRevision_ = -1;\n      frameState.animate = true;\n    }\n\n  }\n\n  this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n  const tileTextureQueue = mapRenderer.getTileTextureQueue();\n  this.manageTilePyramid(\n    frameState, tileSource, tileGrid, pixelRatio, projection, extent, z,\n    tileLayer.getPreload(),\n    /**\n     * @param {module:ol/Tile} tile Tile.\n     */\n    function(tile) {\n      if (tile.getState() == TileState.LOADED &&\n            !mapRenderer.isTileTextureLoaded(tile) &&\n            !tileTextureQueue.isKeyQueued(tile.getKey())) {\n        tileTextureQueue.enqueue([\n          tile,\n          tileGrid.getTileCoordCenter(tile.tileCoord),\n          tileGrid.getResolution(tile.tileCoord[0]),\n          tilePixelSize, tileGutter * pixelRatio\n        ]);\n      }\n    }, this);\n  this.scheduleExpireCache(frameState, tileSource);\n\n  const texCoordMatrix = this.texCoordMatrix;\n  resetTransform(texCoordMatrix);\n  translateTransform(texCoordMatrix,\n    (Math.round(center[0] / tileResolution) * tileResolution - framebufferExtent[0]) /\n          (framebufferExtent[2] - framebufferExtent[0]),\n    (Math.round(center[1] / tileResolution) * tileResolution - framebufferExtent[1]) /\n          (framebufferExtent[3] - framebufferExtent[1]));\n  if (viewState.rotation !== 0) {\n    rotateTransform(texCoordMatrix, viewState.rotation);\n  }\n  scaleTransform(texCoordMatrix,\n    frameState.size[0] * viewState.resolution /\n          (framebufferExtent[2] - framebufferExtent[0]),\n    frameState.size[1] * viewState.resolution /\n          (framebufferExtent[3] - framebufferExtent[1]));\n  translateTransform(texCoordMatrix, -0.5, -0.5);\n\n  return true;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTileLayerRenderer.prototype.forEachLayerAtPixel = function(pixel, frameState, callback, thisArg) {\n  if (!this.framebuffer) {\n    return undefined;\n  }\n\n  const pixelOnMapScaled = [\n    pixel[0] / frameState.size[0],\n    (frameState.size[1] - pixel[1]) / frameState.size[1]];\n\n  const pixelOnFrameBufferScaled = applyTransform(\n    this.texCoordMatrix, pixelOnMapScaled.slice());\n  const pixelOnFrameBuffer = [\n    pixelOnFrameBufferScaled[0] * this.framebufferDimension,\n    pixelOnFrameBufferScaled[1] * this.framebufferDimension];\n\n  const gl = this.mapRenderer.getContext().getGL();\n  gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n  const imageData = new Uint8Array(4);\n  gl.readPixels(pixelOnFrameBuffer[0], pixelOnFrameBuffer[1], 1, 1,\n    gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n\n  if (imageData[3] > 0) {\n    return callback.call(thisArg, this.getLayer(), imageData);\n  } else {\n    return undefined;\n  }\n};\nexport default WebGLTileLayerRenderer;\n","/**\n * @module ol/renderer/webgl/VectorLayer\n */\nimport {getUid, inherits} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {buffer, containsExtent, createEmpty} from '../../extent.js';\nimport WebGLReplayGroup from '../../render/webgl/ReplayGroup.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport WebGLLayerRenderer from '../webgl/Layer.js';\nimport {apply as applyTransform} from '../../transform.js';\n\n/**\n * @constructor\n * @extends {module:ol/renderer/webgl/Layer}\n * @param {module:ol/renderer/webgl/Map} mapRenderer Map renderer.\n * @param {module:ol/layer/Vector} vectorLayer Vector layer.\n * @api\n */\nconst WebGLVectorLayerRenderer = function(mapRenderer, vectorLayer) {\n\n  WebGLLayerRenderer.call(this, mapRenderer, vectorLayer);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.dirty_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedResolution_ = NaN;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.renderedExtent_ = createEmpty();\n\n  /**\n   * @private\n   * @type {function(module:ol/Feature, module:ol/Feature): number|null}\n   */\n  this.renderedRenderOrder_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/render/webgl/ReplayGroup}\n   */\n  this.replayGroup_ = null;\n\n  /**\n   * The last layer state.\n   * @private\n   * @type {?module:ol/layer/Layer~State}\n   */\n  this.layerState_ = null;\n\n};\n\ninherits(WebGLVectorLayerRenderer, WebGLLayerRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nWebGLVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/webgl/VectorLayer} The layer renderer.\n */\nWebGLVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new WebGLVectorLayerRenderer(\n    /** @type {module:ol/renderer/webgl/Map} */ (mapRenderer),\n    /** @type {module:ol/layer/Vector} */ (layer)\n  );\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLVectorLayerRenderer.prototype.composeFrame = function(frameState, layerState, context) {\n  this.layerState_ = layerState;\n  const viewState = frameState.viewState;\n  const replayGroup = this.replayGroup_;\n  const size = frameState.size;\n  const pixelRatio = frameState.pixelRatio;\n  const gl = this.mapRenderer.getGL();\n  if (replayGroup && !replayGroup.isEmpty()) {\n    gl.enable(gl.SCISSOR_TEST);\n    gl.scissor(0, 0, size[0] * pixelRatio, size[1] * pixelRatio);\n    replayGroup.replay(context,\n      viewState.center, viewState.resolution, viewState.rotation,\n      size, pixelRatio, layerState.opacity,\n      layerState.managed ? frameState.skippedFeatureUids : {});\n    gl.disable(gl.SCISSOR_TEST);\n  }\n\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLVectorLayerRenderer.prototype.disposeInternal = function() {\n  const replayGroup = this.replayGroup_;\n  if (replayGroup) {\n    const context = this.mapRenderer.getContext();\n    replayGroup.getDeleteResourcesFunction(context)();\n    this.replayGroup_ = null;\n  }\n  WebGLLayerRenderer.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  if (!this.replayGroup_ || !this.layerState_) {\n    return undefined;\n  } else {\n    const context = this.mapRenderer.getContext();\n    const viewState = frameState.viewState;\n    const layer = this.getLayer();\n    const layerState = this.layerState_;\n    /** @type {!Object.<string, boolean>} */\n    const features = {};\n    return this.replayGroup_.forEachFeatureAtCoordinate(coordinate,\n      context, viewState.center, viewState.resolution, viewState.rotation,\n      frameState.size, frameState.pixelRatio, layerState.opacity,\n      {},\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        const key = getUid(feature).toString();\n        if (!(key in features)) {\n          features[key] = true;\n          return callback.call(thisArg, feature, layer);\n        }\n      });\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLVectorLayerRenderer.prototype.hasFeatureAtCoordinate = function(coordinate, frameState) {\n  if (!this.replayGroup_ || !this.layerState_) {\n    return false;\n  } else {\n    const context = this.mapRenderer.getContext();\n    const viewState = frameState.viewState;\n    const layerState = this.layerState_;\n    return this.replayGroup_.hasFeatureAtCoordinate(coordinate,\n      context, viewState.center, viewState.resolution, viewState.rotation,\n      frameState.size, frameState.pixelRatio, layerState.opacity,\n      frameState.skippedFeatureUids);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLVectorLayerRenderer.prototype.forEachLayerAtPixel = function(pixel, frameState, callback, thisArg) {\n  const coordinate = applyTransform(\n    frameState.pixelToCoordinateTransform, pixel.slice());\n  const hasFeature = this.hasFeatureAtCoordinate(coordinate, frameState);\n\n  if (hasFeature) {\n    return callback.call(thisArg, this.getLayer(), null);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Handle changes in image style state.\n * @param {module:ol/events/Event} event Image style change event.\n * @private\n */\nWebGLVectorLayerRenderer.prototype.handleStyleImageChange_ = function(event) {\n  this.renderIfReadyAndVisible();\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLVectorLayerRenderer.prototype.prepareFrame = function(frameState, layerState, context) {\n  const vectorLayer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n  const vectorSource = vectorLayer.getSource();\n\n  const animating = frameState.viewHints[ViewHint.ANIMATING];\n  const interacting = frameState.viewHints[ViewHint.INTERACTING];\n  const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n  const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n  if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)) {\n    return true;\n  }\n\n  const frameStateExtent = frameState.extent;\n  const viewState = frameState.viewState;\n  const projection = viewState.projection;\n  const resolution = viewState.resolution;\n  const pixelRatio = frameState.pixelRatio;\n  const vectorLayerRevision = vectorLayer.getRevision();\n  const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n  let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n  if (vectorLayerRenderOrder === undefined) {\n    vectorLayerRenderOrder = defaultRenderOrder;\n  }\n\n  const extent = buffer(frameStateExtent,\n    vectorLayerRenderBuffer * resolution);\n\n  if (!this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.renderedExtent_, extent)) {\n    return true;\n  }\n\n  if (this.replayGroup_) {\n    frameState.postRenderFunctions.push(\n      this.replayGroup_.getDeleteResourcesFunction(context));\n  }\n\n  this.dirty_ = false;\n\n  const replayGroup = new WebGLReplayGroup(\n    getRenderTolerance(resolution, pixelRatio),\n    extent, vectorLayer.getRenderBuffer());\n  vectorSource.loadFeatures(extent, resolution, projection);\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @this {module:ol/renderer/webgl/VectorLayer}\n   */\n  const render = function(feature) {\n    let styles;\n    const styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n    if (styleFunction) {\n      styles = styleFunction(feature, resolution);\n    }\n    if (styles) {\n      const dirty = this.renderFeature(\n        feature, resolution, pixelRatio, styles, replayGroup);\n      this.dirty_ = this.dirty_ || dirty;\n    }\n  };\n  if (vectorLayerRenderOrder) {\n    /** @type {Array.<module:ol/Feature>} */\n    const features = [];\n    vectorSource.forEachFeatureInExtent(extent,\n      /**\n       * @param {module:ol/Feature} feature Feature.\n       */\n      function(feature) {\n        features.push(feature);\n      }, this);\n    features.sort(vectorLayerRenderOrder);\n    features.forEach(render.bind(this));\n  } else {\n    vectorSource.forEachFeatureInExtent(extent, render, this);\n  }\n  replayGroup.finish(context);\n\n  this.renderedResolution_ = resolution;\n  this.renderedRevision_ = vectorLayerRevision;\n  this.renderedRenderOrder_ = vectorLayerRenderOrder;\n  this.renderedExtent_ = extent;\n  this.replayGroup_ = replayGroup;\n\n  return true;\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {(module:ol/style/Style|Array.<module:ol/style/Style>)} styles The style or array of\n *     styles.\n * @param {module:ol/render/webgl/ReplayGroup} replayGroup Replay group.\n * @return {boolean} `true` if an image is loading.\n */\nWebGLVectorLayerRenderer.prototype.renderFeature = function(feature, resolution, pixelRatio, styles, replayGroup) {\n  if (!styles) {\n    return false;\n  }\n  let loading = false;\n  if (Array.isArray(styles)) {\n    for (let i = styles.length - 1, ii = 0; i >= ii; --i) {\n      loading = renderFeature(\n        replayGroup, feature, styles[i],\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this) || loading;\n    }\n  } else {\n    loading = renderFeature(\n      replayGroup, feature, styles,\n      getSquaredRenderTolerance(resolution, pixelRatio),\n      this.handleStyleImageChange_, this) || loading;\n  }\n  return loading;\n};\nexport default WebGLVectorLayerRenderer;\n","/**\n * @module ol/WebGLMap\n */\nimport {inherits} from './util.js';\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport WebGLImageLayerRenderer from './renderer/webgl/ImageLayer.js';\nimport WebGLMapRenderer from './renderer/webgl/Map.js';\nimport WebGLTileLayerRenderer from './renderer/webgl/TileLayer.js';\nimport WebGLVectorLayerRenderer from './renderer/webgl/VectorLayer.js';\n\n\n/**\n * @classdesc\n * The WebGLMap uses WebGL for rendering map layers.  This renderer has limited\n * support for vector data and no support for vector tiles.\n *\n *     import WebGLMap from 'ol/WebGLMap';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *     import View from 'ol/View';\n *\n *     var map = new WebGLMap({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`.\n * Note that {@link module:ol/layer/Group~Group} is a subclass of\n * {@link module:ol/layer/Base}, so layers entered in the options or added\n * with `addLayer` can be groups, which can contain further groups, and so on.\n *\n * @constructor\n * @extends {module:ol/PluggableMap}\n * @param {module:ol/PluggableMap~MapOptions} options Map options.\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nconst WebGLMap = function(options) {\n  options = assign({}, options);\n  if (!options.controls) {\n    options.controls = defaultControls();\n  }\n  if (!options.interactions) {\n    options.interactions = defaultInteractions();\n  }\n\n  PluggableMap.call(this, options);\n};\n\ninherits(WebGLMap, PluggableMap);\n\n\nWebGLMap.prototype.createRenderer = function() {\n  const renderer = new WebGLMapRenderer(this);\n  renderer.registerLayerRenderers([\n    WebGLImageLayerRenderer,\n    WebGLTileLayerRenderer,\n    WebGLVectorLayerRenderer\n  ]);\n  return renderer;\n};\n\nexport default WebGLMap;\n","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../util.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport {readHref} from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport {readString, readNonNegativeInteger, readDecimal} from '../format/xsd.js';\nimport {pushParseAndPop, makeStructureNS,\n  makeObjectPropertySetter, makeObjectPropertyPusher, makeArrayPusher} from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {module:ol/format/XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {module:ol/format/OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * @const\n * @type {Array.<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @type {Array.<null|string>}\n */\nconst OWS_NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Contents': makeObjectPropertySetter(readContents)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst CONTENTS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Layer': makeObjectPropertyPusher(readLayer),\n    'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readWgs84BoundingBox),\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst TMS_LINKS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TileMatrixSet': makeObjectPropertySetter(readString),\n    'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst TMS_LIMITS_LIST_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst TMS_LIMITS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TileMatrix': makeObjectPropertySetter(readString),\n    'MinTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n    'MinTileCol': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxTileCol': makeObjectPropertySetter(readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst DIMENSION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst WGS84_BBOX_READERS = makeStructureNS(\n  OWS_NAMESPACE_URIS, {\n    'LowerCorner': makeArrayPusher(readCoordinates),\n    'UpperCorner': makeArrayPusher(readCoordinates)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst TMS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst TM_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'TileHeight': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixHeight': makeObjectPropertySetter(readNonNegativeInteger)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = pushParseAndPop(WMTSCapabilityObject, PARSERS, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  const style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nfunction readWgs84BoundingBox(node, objectStack) {\n  const coordinates = pushParseAndPop([], WGS84_BBOX_READERS, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = readHref(node);\n  return legend;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n  const coordinates = readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\n\n\nexport default WMTSCapabilities;\n","/**\n * @module ol/Image\n */\nimport {inherits} from './util.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(module:ol/Image, string)} LoadFunction\n * @api\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/ImageBase}\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/Image~LoadFunction} imageLoadFunction Image load function.\n */\nconst ImageWrapper = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  ImageBase.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {module:ol/ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {module:ol/Image~LoadFunction}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(ImageWrapper, ImageBase);\n\n\n/**\n * @inheritDoc\n * @api\n */\nImageWrapper.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\nImageWrapper.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\nImageWrapper.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\nImageWrapper.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\nImageWrapper.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\nImageWrapper.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\n\nexport default ImageWrapper;\n","/**\n * @module ol/loadingstrategy\n */\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/extent~Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/extent~Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {function(module:ol/extent~Extent, number): Array.<module:ol/extent~Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {module:ol/extent~Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array.<module:ol/extent~Extent>} Extents.\n     */\n    function(extent, resolution) {\n      const z = tileGrid.getZForResolution(resolution);\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array.<module:ol/extent~Extent>} */\n      const extents = [];\n      /** @type {module:ol/tilecoord~TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {module:ol/proj/Projection} sourceProj Source projection.\n * @param {module:ol/proj/Projection} targetProj Target projection.\n * @param {module:ol/coordinate~Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {module:ol/coordinate~Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  const dX = x - centroidX;\n  const dY = y - centroidY;\n  const distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {module:ol/extent~Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {module:ol/extent~Extent} targetExtent Target extent.\n * @param {module:ol/reproj/Triangulation} triangulation\n * Calculated triangulation.\n * @param {Array.<{extent: module:ol/extent~Extent,\n *                 image: (HTMLCanvasElement|Image|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  const context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0], y0 = source[0][1];\n    let x1 = source[1][0], y1 = source[1][1];\n    let x2 = source[2][0], y2 = source[2][1];\n    const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    const centroidX = (u0 + u1 + u2) / 3;\n    const centroidY = (v0 + v1 + v2) / 3;\n    const p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    const p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    const p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport {inherits} from '../util.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {linearRing as linearRingArea} from '../geom/flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {douglasPeucker} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst LinearRing = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(LinearRing, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/LinearRing} Clone.\n * @override\n * @api\n */\nLinearRing.prototype.clone = function() {\n  const linearRing = new LinearRing(null);\n  linearRing.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return linearRing;\n};\n\n\n/**\n * @inheritDoc\n */\nLinearRing.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestPoint(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Return the area of the linear ring on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nLinearRing.prototype.getArea = function() {\n  return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the coordinates of the linear ring.\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n * @override\n * @api\n */\nLinearRing.prototype.getCoordinates = function() {\n  return inflateCoordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nLinearRing.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    squaredTolerance, simplifiedFlatCoordinates, 0);\n  const simplifiedLinearRing = new LinearRing(null);\n  simplifiedLinearRing.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates);\n  return simplifiedLinearRing;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nLinearRing.prototype.getType = function() {\n  return GeometryType.LINEAR_RING;\n};\n\n\n/**\n * @inheritDoc\n */\nLinearRing.prototype.intersectsExtent = function(extent) {};\n\n\n/**\n * Set the coordinates of the linear ring.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nLinearRing.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nLinearRing.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default LinearRing;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n","/**\n * @module ol/renderer/Map\n */\nimport {getUid, inherits} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE, UNDEFINED} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\n\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/Disposable}\n * @param {module:ol/PluggableMap} map Map.\n * @struct\n */\nconst MapRenderer = function(map) {\n  Disposable.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/PluggableMap}\n   */\n  this.map_ = map;\n\n  /**\n   * @private\n   * @type {!Object.<string, module:ol/renderer/Layer>}\n   */\n  this.layerRenderers_ = {};\n\n  /**\n   * @private\n   * @type {Object.<string, module:ol/events~EventsKey>}\n   */\n  this.layerRendererListeners_ = {};\n\n  /**\n   * @private\n   * @type {Array.<module:ol/renderer/Layer>}\n   */\n  this.layerRendererConstructors_ = [];\n\n};\n\ninherits(MapRenderer, Disposable);\n\n\n/**\n * Register layer renderer constructors.\n * @param {Array.<module:ol/renderer/Layer>} constructors Layer renderers.\n */\nMapRenderer.prototype.registerLayerRenderers = function(constructors) {\n  this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n};\n\n\n/**\n * Get the registered layer renderer constructors.\n * @return {Array.<module:ol/renderer/Layer>} Registered layer renderers.\n */\nMapRenderer.prototype.getLayerRendererConstructors = function() {\n  return this.layerRendererConstructors_;\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @protected\n */\nMapRenderer.prototype.calculateMatrices2D = function(frameState) {\n  const viewState = frameState.viewState;\n  const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n  const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n  composeTransform(coordinateToPixelTransform,\n    frameState.size[0] / 2, frameState.size[1] / 2,\n    1 / viewState.resolution, -1 / viewState.resolution,\n    -viewState.rotation,\n    -viewState.center[0], -viewState.center[1]);\n\n  invertTransform(\n    transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n};\n\n\n/**\n * Removes all layer renderers.\n */\nMapRenderer.prototype.removeLayerRenderers = function() {\n  for (const key in this.layerRenderers_) {\n    this.removeLayerRendererByKey_(key).dispose();\n  }\n};\n\n\n/**\n * @param {module:ol/PluggableMap} map Map.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature),\n *     module:ol/layer/Layer): T} callback Feature callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n *     function, only layers which are visible and for which this function\n *     returns `true` will be tested for features.  By default, all visible\n *     layers will be tested.\n * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n * @return {T|undefined} Callback result.\n * @template S,T,U\n */\nMapRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg,\n  layerFilter, thisArg2) {\n  let result;\n  const viewState = frameState.viewState;\n  const viewResolution = viewState.resolution;\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @return {?} Callback result.\n   */\n  function forEachFeatureAtCoordinate(feature, layer) {\n    const key = getUid(feature).toString();\n    const managed = frameState.layerStates[getUid(layer)].managed;\n    if (!(key in frameState.skippedFeatureUids && !managed)) {\n      return callback.call(thisArg, feature, managed ? layer : null);\n    }\n  }\n\n  const projection = viewState.projection;\n\n  let translatedCoordinate = coordinate;\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    const x = coordinate[0];\n    if (x < projectionExtent[0] || x > projectionExtent[2]) {\n      const worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n      translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n    }\n  }\n\n  const layerStates = frameState.layerStatesArray;\n  const numLayers = layerStates.length;\n  let i;\n  for (i = numLayers - 1; i >= 0; --i) {\n    const layerState = layerStates[i];\n    const layer = layerState.layer;\n    if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n      const layerRenderer = this.getLayerRenderer(layer);\n      if (layer.getSource()) {\n        result = layerRenderer.forEachFeatureAtCoordinate(\n          layer.getSource().getWrapX() ? translatedCoordinate : coordinate,\n          frameState, hitTolerance, forEachFeatureAtCoordinate, thisArg);\n      }\n      if (result) {\n        return result;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @abstract\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n *     callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n *     function, only layers which are visible and for which this function\n *     returns `true` will be tested for features.  By default, all visible\n *     layers will be tested.\n * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n * @return {T|undefined} Callback result.\n * @template S,T,U\n */\nMapRenderer.prototype.forEachLayerAtPixel = function(pixel, frameState, hitTolerance, callback, thisArg,\n  layerFilter, thisArg2) {};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n *     function, only layers which are visible and for which this function\n *     returns `true` will be tested for features.  By default, all visible\n *     layers will be tested.\n * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n * @return {boolean} Is there a feature at the given coordinate?\n * @template U\n */\nMapRenderer.prototype.hasFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n  const hasFeature = this.forEachFeatureAtCoordinate(\n    coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n  return hasFeature !== undefined;\n};\n\n\n/**\n * @param {module:ol/layer/Layer} layer Layer.\n * @protected\n * @return {module:ol/renderer/Layer} Layer renderer.\n */\nMapRenderer.prototype.getLayerRenderer = function(layer) {\n  const layerKey = getUid(layer).toString();\n  if (layerKey in this.layerRenderers_) {\n    return this.layerRenderers_[layerKey];\n  } else {\n    let renderer;\n    for (let i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n      const candidate = this.layerRendererConstructors_[i];\n      if (candidate['handles'](layer)) {\n        renderer = candidate['create'](this, layer);\n        break;\n      }\n    }\n    if (renderer) {\n      this.layerRenderers_[layerKey] = renderer;\n      this.layerRendererListeners_[layerKey] = listen(renderer,\n        EventType.CHANGE, this.handleLayerRendererChange_, this);\n    } else {\n      throw new Error('Unable to create renderer for layer: ' + layer.getType());\n    }\n    return renderer;\n  }\n};\n\n\n/**\n * @param {string} layerKey Layer key.\n * @protected\n * @return {module:ol/renderer/Layer} Layer renderer.\n */\nMapRenderer.prototype.getLayerRendererByKey = function(layerKey) {\n  return this.layerRenderers_[layerKey];\n};\n\n\n/**\n * @protected\n * @return {Object.<string, module:ol/renderer/Layer>} Layer renderers.\n */\nMapRenderer.prototype.getLayerRenderers = function() {\n  return this.layerRenderers_;\n};\n\n\n/**\n * @return {module:ol/PluggableMap} Map.\n */\nMapRenderer.prototype.getMap = function() {\n  return this.map_;\n};\n\n\n/**\n * Handle changes in a layer renderer.\n * @private\n */\nMapRenderer.prototype.handleLayerRendererChange_ = function() {\n  this.map_.render();\n};\n\n\n/**\n * @param {string} layerKey Layer key.\n * @return {module:ol/renderer/Layer} Layer renderer.\n * @private\n */\nMapRenderer.prototype.removeLayerRendererByKey_ = function(layerKey) {\n  const layerRenderer = this.layerRenderers_[layerKey];\n  delete this.layerRenderers_[layerKey];\n\n  unlistenByKey(this.layerRendererListeners_[layerKey]);\n  delete this.layerRendererListeners_[layerKey];\n\n  return layerRenderer;\n};\n\n\n/**\n * Render.\n * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nMapRenderer.prototype.renderFrame = UNDEFINED;\n\n\n/**\n * @param {module:ol/PluggableMap} map Map.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @private\n */\nMapRenderer.prototype.removeUnusedLayerRenderers_ = function(map, frameState) {\n  for (const layerKey in this.layerRenderers_) {\n    if (!frameState || !(layerKey in frameState.layerStates)) {\n      this.removeLayerRendererByKey_(layerKey).dispose();\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @protected\n */\nMapRenderer.prototype.scheduleExpireIconCache = function(frameState) {\n  frameState.postRenderFunctions.push(/** @type {module:ol/PluggableMap~PostRenderFunction} */ (expireIconCache));\n};\n\n\n/**\n * @param {!module:ol/PluggableMap~FrameState} frameState Frame state.\n * @protected\n */\nMapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function(frameState) {\n  for (const layerKey in this.layerRenderers_) {\n    if (!(layerKey in frameState.layerStates)) {\n      frameState.postRenderFunctions.push(\n        /** @type {module:ol/PluggableMap~PostRenderFunction} */ (this.removeUnusedLayerRenderers_.bind(this))\n      );\n      return;\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/layer/Layer~State} state1 First layer state.\n * @param {module:ol/layer/Layer~State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n","/**\n * @module ol/interaction/Select\n */\nimport {getUid, inherits} from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {extend, includes} from '../array.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {singleClick, never, shiftKeyOnly, pointerMove} from '../events/condition.js';\nimport {TRUE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from '../interaction/Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clear} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select'\n};\n\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function((module:ol/Feature|module:ol/render/Feature), module:ol/layer/Layer):\n *     boolean} FilterFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array.<module:ol/layer/Layer>|function(module:ol/layer/Layer): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}).\n * @property {module:ol/events/condition~Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {module:ol/events/condition~Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {module:ol/interaction/Select~FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the selection\n * overlay.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n *\n * @param {SelectEventType} type The event type.\n * @param {Array.<module:ol/Feature>} selected Selected features.\n * @param {Array.<module:ol/Feature>} deselected Deselected features.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Associated\n *     {@link module:ol/MapBrowserEvent}.\n * @extends {module:ol/events/Event}\n * @constructor\n */\nconst SelectEvent = function(type, selected, deselected, mapBrowserEvent) {\n  Event.call(this, type);\n\n  /**\n   * Selected features array.\n   * @type {Array.<module:ol/Feature>}\n   * @api\n   */\n  this.selected = selected;\n\n  /**\n   * Deselected features array.\n   * @type {Array.<module:ol/Feature>}\n   * @api\n   */\n  this.deselected = deselected;\n\n  /**\n   * Associated {@link module:ol/MapBrowserEvent}.\n   * @type {module:ol/MapBrowserEvent}\n   * @api\n   */\n  this.mapBrowserEvent = mapBrowserEvent;\n};\n\ninherits(SelectEvent, Event);\n\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @param {module:ol/interaction/Select~Options=} opt_options Options.\n * @fires SelectEvent\n * @api\n */\nconst Select = function(opt_options) {\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : singleClick;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multi_ = options.multi ? options.multi : false;\n\n  /**\n   * @private\n   * @type {module:ol/interaction/Select~FilterFunction}\n   */\n  this.filter_ = options.filter ? options.filter : TRUE;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n  const featureOverlay = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      features: options.features,\n      wrapX: options.wrapX\n    }),\n    style: options.style ? options.style :\n      getDefaultStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @private\n   * @type {module:ol/layer/Vector}\n   */\n  this.featureOverlay_ = featureOverlay;\n\n  /** @type {function(module:ol/layer/Layer): boolean} */\n  let layerFilter;\n  if (options.layers) {\n    if (typeof options.layers === 'function') {\n      layerFilter = options.layers;\n    } else {\n      const layers = options.layers;\n      layerFilter = function(layer) {\n        return includes(layers, layer);\n      };\n    }\n  } else {\n    layerFilter = TRUE;\n  }\n\n  /**\n   * @private\n   * @type {function(module:ol/layer/Layer): boolean}\n   */\n  this.layerFilter_ = layerFilter;\n\n  /**\n   * An association between selected feature (key)\n   * and layer (value)\n   * @private\n   * @type {Object.<number, module:ol/layer/Layer>}\n   */\n  this.featureLayerAssociation_ = {};\n\n  const features = this.featureOverlay_.getSource().getFeaturesCollection();\n  listen(features, CollectionEventType.ADD,\n    this.addFeature_, this);\n  listen(features, CollectionEventType.REMOVE,\n    this.removeFeature_, this);\n\n};\n\ninherits(Select, Interaction);\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/layer/Layer} layer Layer.\n * @private\n */\nSelect.prototype.addFeatureLayerAssociation_ = function(feature, layer) {\n  const key = getUid(feature);\n  this.featureLayerAssociation_[key] = layer;\n};\n\n\n/**\n * Get the selected features.\n * @return {module:ol/Collection.<module:ol/Feature>} Features collection.\n * @api\n */\nSelect.prototype.getFeatures = function() {\n  return this.featureOverlay_.getSource().getFeaturesCollection();\n};\n\n\n/**\n * Returns the Hit-detection tolerance.\n * @returns {number} Hit tolerance in pixels.\n * @api\n */\nSelect.prototype.getHitTolerance = function() {\n  return this.hitTolerance_;\n};\n\n\n/**\n * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n * the (last) selected feature. Note that this will not work with any\n * programmatic method like pushing features to\n * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature\n * @return {module:ol/layer/Vector} Layer.\n * @api\n */\nSelect.prototype.getLayer = function(feature) {\n  const key = getUid(feature);\n  return (\n    /** @type {module:ol/layer/Vector} */ (this.featureLayerAssociation_[key])\n  );\n};\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n * selected state of features.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Select}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  const add = this.addCondition_(mapBrowserEvent);\n  const remove = this.removeCondition_(mapBrowserEvent);\n  const toggle = this.toggleCondition_(mapBrowserEvent);\n  const set = !add && !remove && !toggle;\n  const map = mapBrowserEvent.map;\n  const features = this.featureOverlay_.getSource().getFeaturesCollection();\n  const deselected = [];\n  const selected = [];\n  if (set) {\n    // Replace the currently selected feature(s) with the feature(s) at the\n    // pixel, or clear the selected feature(s) if there is no feature at\n    // the pixel.\n    clear(this.featureLayerAssociation_);\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @param {module:ol/layer/Layer} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            selected.push(feature);\n            this.addFeatureLayerAssociation_(feature, layer);\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (let i = features.getLength() - 1; i >= 0; --i) {\n      const feature = features.item(i);\n      const index = selected.indexOf(feature);\n      if (index > -1) {\n        // feature is already selected\n        selected.splice(index, 1);\n      } else {\n        features.remove(feature);\n        deselected.push(feature);\n      }\n    }\n    if (selected.length !== 0) {\n      features.extend(selected);\n    }\n  } else {\n    // Modify the currently selected feature(s).\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @param {module:ol/layer/Layer} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\n              selected.push(feature);\n              this.addFeatureLayerAssociation_(feature, layer);\n            } else if ((remove || toggle) && includes(features.getArray(), feature)) {\n              deselected.push(feature);\n              this.removeFeatureLayerAssociation_(feature);\n            }\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (let j = deselected.length - 1; j >= 0; --j) {\n      features.remove(deselected[j]);\n    }\n    features.extend(selected);\n  }\n  if (selected.length > 0 || deselected.length > 0) {\n    this.dispatchEvent(\n      new SelectEvent(SelectEventType.SELECT,\n        selected, deselected, mapBrowserEvent));\n  }\n  return pointerMove(mapBrowserEvent);\n}\n\n\n/**\n * Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @api\n */\nSelect.prototype.setHitTolerance = function(hitTolerance) {\n  this.hitTolerance_ = hitTolerance;\n};\n\n\n/**\n * Remove the interaction from its current map, if any,  and attach it to a new\n * map, if any. Pass `null` to just remove the interaction from the current map.\n * @param {module:ol/PluggableMap} map Map.\n * @override\n * @api\n */\nSelect.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const selectedFeatures =\n      this.featureOverlay_.getSource().getFeaturesCollection();\n  if (currentMap) {\n    selectedFeatures.forEach(currentMap.unskipFeature.bind(currentMap));\n  }\n  Interaction.prototype.setMap.call(this, map);\n  this.featureOverlay_.setMap(map);\n  if (map) {\n    selectedFeatures.forEach(map.skipFeature.bind(map));\n  }\n};\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n\n  return function(feature, resolution) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nSelect.prototype.addFeature_ = function(evt) {\n  const map = this.getMap();\n  if (map) {\n    map.skipFeature(/** @type {module:ol/Feature} */ (evt.element));\n  }\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nSelect.prototype.removeFeature_ = function(evt) {\n  const map = this.getMap();\n  if (map) {\n    map.unskipFeature(/** @type {module:ol/Feature} */ (evt.element));\n  }\n};\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @private\n */\nSelect.prototype.removeFeatureLayerAssociation_ = function(feature) {\n  const key = getUid(feature);\n  delete this.featureLayerAssociation_[key];\n};\n\n\nexport default Select;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/format/XML\n */\nimport {isDocument, isNode, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n","/**\n * @module ol/format/XLink\n */\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readHref(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n","/**\n * @module ol/format/TextFeature\n */\nimport {inherits} from '../util.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/format/Feature}\n */\nconst TextFeature = function() {\n  FeatureFormat.call(this);\n};\n\ninherits(TextFeature, FeatureFormat);\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nTextFeature.prototype.getType = function() {\n  return FormatType.TEXT;\n};\n\n\n/**\n * @inheritDoc\n */\nTextFeature.prototype.readFeature = function(source, opt_options) {\n  return this.readFeatureFromText(getText(source), this.adaptOptions(opt_options));\n};\n\n\n/**\n * @abstract\n * @param {string} text Text.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @protected\n * @return {module:ol/Feature} Feature.\n */\nTextFeature.prototype.readFeatureFromText = function(text, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nTextFeature.prototype.readFeatures = function(source, opt_options) {\n  return this.readFeaturesFromText(getText(source), this.adaptOptions(opt_options));\n};\n\n\n/**\n * @abstract\n * @param {string} text Text.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @protected\n * @return {Array.<module:ol/Feature>} Features.\n */\nTextFeature.prototype.readFeaturesFromText = function(text, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nTextFeature.prototype.readGeometry = function(source, opt_options) {\n  return this.readGeometryFromText(getText(source), this.adaptOptions(opt_options));\n};\n\n\n/**\n * @abstract\n * @param {string} text Text.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @protected\n * @return {module:ol/geom/Geometry} Geometry.\n */\nTextFeature.prototype.readGeometryFromText = function(text, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nTextFeature.prototype.readProjection = function(source) {\n  return this.readProjectionFromText(getText(source));\n};\n\n\n/**\n * @param {string} text Text.\n * @protected\n * @return {module:ol/proj/Projection} Projection.\n */\nTextFeature.prototype.readProjectionFromText = function(text) {\n  return this.dataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nTextFeature.prototype.writeFeature = function(feature, opt_options) {\n  return this.writeFeatureText(feature, this.adaptOptions(opt_options));\n};\n\n\n/**\n * @abstract\n * @param {module:ol/Feature} feature Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @protected\n * @return {string} Text.\n */\nTextFeature.prototype.writeFeatureText = function(feature, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nTextFeature.prototype.writeFeatures = function(features, opt_options) {\n  return this.writeFeaturesText(features, this.adaptOptions(opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @protected\n * @return {string} Text.\n */\nTextFeature.prototype.writeFeaturesText = function(features, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nTextFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  return this.writeGeometryText(geometry, this.adaptOptions(opt_options));\n};\n\n\n/**\n * @abstract\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @protected\n * @return {string} Text.\n */\nTextFeature.prototype.writeGeometryText = function(geometry, opt_options) {};\nexport default TextFeature;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport {inherits} from '../util.js';\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @constructor\n * @extends {module:ol/geom/Geometry}\n * @param {Array.<module:ol/geom/Geometry>=} opt_geometries Geometries.\n * @api\n */\nconst GeometryCollection = function(opt_geometries) {\n\n  Geometry.call(this);\n\n  /**\n   * @private\n   * @type {Array.<module:ol/geom/Geometry>}\n   */\n  this.geometries_ = opt_geometries ? opt_geometries : null;\n\n  this.listenGeometriesChange_();\n};\n\ninherits(GeometryCollection, Geometry);\n\n\n/**\n * @param {Array.<module:ol/geom/Geometry>} geometries Geometries.\n * @return {Array.<module:ol/geom/Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.unlistenGeometriesChange_ = function() {\n  if (!this.geometries_) {\n    return;\n  }\n  for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    unlisten(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.listenGeometriesChange_ = function() {\n  if (!this.geometries_) {\n    return;\n  }\n  for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    listen(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/GeometryCollection} Clone.\n * @override\n * @api\n */\nGeometryCollection.prototype.clone = function() {\n  const geometryCollection = new GeometryCollection(null);\n  geometryCollection.setGeometries(this.geometries_);\n  return geometryCollection;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    minSquaredDistance = geometries[i].closestPointXY(\n      x, y, closestPoint, minSquaredDistance);\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.containsXY = function(x, y) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].containsXY(x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.computeExtent = function(extent) {\n  createOrUpdateEmpty(extent);\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    extend(extent, geometries[i].getExtent());\n  }\n  return extent;\n};\n\n\n/**\n * Return the geometries that make up this geometry collection.\n * @return {Array.<module:ol/geom/Geometry>} Geometries.\n * @api\n */\nGeometryCollection.prototype.getGeometries = function() {\n  return cloneGeometries(this.geometries_);\n};\n\n\n/**\n * @return {Array.<module:ol/geom/Geometry>} Geometries.\n */\nGeometryCollection.prototype.getGeometriesArray = function() {\n  return this.geometries_;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  const key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.getType = function() {\n  return GeometryType.GEOMETRY_COLLECTION;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.intersectsExtent = function(extent) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].intersectsExtent(extent)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nGeometryCollection.prototype.isEmpty = function() {\n  return this.geometries_.length === 0;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.rotate = function(angle, anchor) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].rotate(angle, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  let anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].scale(sx, opt_sy, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the geometries that make up this geometry collection.\n * @param {Array.<module:ol/geom/Geometry>} geometries Geometries.\n * @api\n */\nGeometryCollection.prototype.setGeometries = function(geometries) {\n  this.setGeometriesArray(cloneGeometries(geometries));\n};\n\n\n/**\n * @param {Array.<module:ol/geom/Geometry>} geometries Geometries.\n */\nGeometryCollection.prototype.setGeometriesArray = function(geometries) {\n  this.unlistenGeometriesChange_();\n  this.geometries_ = geometries;\n  this.listenGeometriesChange_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.applyTransform = function(transformFn) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].applyTransform(transformFn);\n  }\n  this.changed();\n};\n\n\n/**\n * Translate the geometry.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @override\n * @api\n */\nGeometryCollection.prototype.translate = function(deltaX, deltaY) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].translate(deltaX, deltaY);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.disposeInternal = function() {\n  this.unlistenGeometriesChange_();\n  Geometry.prototype.disposeInternal.call(this);\n};\nexport default GeometryCollection;\n","/**\n * @module ol/format/JSONFeature\n */\nimport {inherits} from '../util.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/format/Feature}\n */\nconst JSONFeature = function() {\n  FeatureFormat.call(this);\n};\n\ninherits(JSONFeature, FeatureFormat);\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.getType = function() {\n  return FormatType.JSON;\n};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readFeature = function(source, opt_options) {\n  return this.readFeatureFromObject(\n    getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readFeatures = function(source, opt_options) {\n  return this.readFeaturesFromObject(\n    getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @protected\n * @return {module:ol/Feature} Feature.\n */\nJSONFeature.prototype.readFeatureFromObject = function(object, opt_options) {};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @protected\n * @return {Array.<module:ol/Feature>} Features.\n */\nJSONFeature.prototype.readFeaturesFromObject = function(object, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readGeometry = function(source, opt_options) {\n  return this.readGeometryFromObject(\n    getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @protected\n * @return {module:ol/geom/Geometry} Geometry.\n */\nJSONFeature.prototype.readGeometryFromObject = function(object, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readProjection = function(source) {\n  return this.readProjectionFromObject(getObject(source));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @protected\n * @return {module:ol/proj/Projection} Projection.\n */\nJSONFeature.prototype.readProjectionFromObject = function(object) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeFeature = function(feature, opt_options) {\n  return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeFeatureObject = function(feature, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeFeatures = function(features, opt_options) {\n  return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeFeaturesObject = function(features, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeGeometryObject = function(geometry, opt_options) {};\nexport default JSONFeature;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  let pointX = NaN;\n  let pointY = NaN;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] +\n        fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n        fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      const t = (target - cumulativeLengths[-index - 2]) /\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      const o = offset + (-index - 2) * stride;\n      pointX = lerp(\n        flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = lerp(\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\n      flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * @see http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * @see http://hg.python.org/cpython/file/2.7/Lib/heapq.py\n *\n * @constructor\n * @param {function(T): number} priorityFunction Priority function.\n * @param {function(T): string} keyFunction Key function.\n * @struct\n * @template T\n */\nconst PriorityQueue = function(priorityFunction, keyFunction) {\n\n  /**\n   * @type {function(T): number}\n   * @private\n   */\n  this.priorityFunction_ = priorityFunction;\n\n  /**\n   * @type {function(T): string}\n   * @private\n   */\n  this.keyFunction_ = keyFunction;\n\n  /**\n   * @type {Array.<T>}\n   * @private\n   */\n  this.elements_ = [];\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.priorities_ = [];\n\n  /**\n   * @type {!Object.<string, boolean>}\n   * @private\n   */\n  this.queuedElements_ = {};\n\n};\n\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.clear = function() {\n  this.elements_.length = 0;\n  this.priorities_.length = 0;\n  clear(this.queuedElements_);\n};\n\n\n/**\n * Remove and return the highest-priority element. O(log N).\n * @return {T} Element.\n */\nPriorityQueue.prototype.dequeue = function() {\n  const elements = this.elements_;\n  const priorities = this.priorities_;\n  const element = elements[0];\n  if (elements.length == 1) {\n    elements.length = 0;\n    priorities.length = 0;\n  } else {\n    elements[0] = elements.pop();\n    priorities[0] = priorities.pop();\n    this.siftUp_(0);\n  }\n  const elementKey = this.keyFunction_(element);\n  delete this.queuedElements_[elementKey];\n  return element;\n};\n\n\n/**\n * Enqueue an element. O(log N).\n * @param {T} element Element.\n * @return {boolean} The element was added to the queue.\n */\nPriorityQueue.prototype.enqueue = function(element) {\n  assert(!(this.keyFunction_(element) in this.queuedElements_),\n    31); // Tried to enqueue an `element` that was already added to the queue\n  const priority = this.priorityFunction_(element);\n  if (priority != DROP) {\n    this.elements_.push(element);\n    this.priorities_.push(priority);\n    this.queuedElements_[this.keyFunction_(element)] = true;\n    this.siftDown_(0, this.elements_.length - 1);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @return {number} Count.\n */\nPriorityQueue.prototype.getCount = function() {\n  return this.elements_.length;\n};\n\n\n/**\n * Gets the index of the left child of the node at the given index.\n * @param {number} index The index of the node to get the left child for.\n * @return {number} The index of the left child.\n * @private\n */\nPriorityQueue.prototype.getLeftChildIndex_ = function(index) {\n  return index * 2 + 1;\n};\n\n\n/**\n * Gets the index of the right child of the node at the given index.\n * @param {number} index The index of the node to get the right child for.\n * @return {number} The index of the right child.\n * @private\n */\nPriorityQueue.prototype.getRightChildIndex_ = function(index) {\n  return index * 2 + 2;\n};\n\n\n/**\n * Gets the index of the parent of the node at the given index.\n * @param {number} index The index of the node to get the parent for.\n * @return {number} The index of the parent.\n * @private\n */\nPriorityQueue.prototype.getParentIndex_ = function(index) {\n  return (index - 1) >> 1;\n};\n\n\n/**\n * Make this a heap. O(N).\n * @private\n */\nPriorityQueue.prototype.heapify_ = function() {\n  let i;\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n    this.siftUp_(i);\n  }\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nPriorityQueue.prototype.isEmpty = function() {\n  return this.elements_.length === 0;\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Is key queued.\n */\nPriorityQueue.prototype.isKeyQueued = function(key) {\n  return key in this.queuedElements_;\n};\n\n\n/**\n * @param {T} element Element.\n * @return {boolean} Is queued.\n */\nPriorityQueue.prototype.isQueued = function(element) {\n  return this.isKeyQueued(this.keyFunction_(element));\n};\n\n\n/**\n * @param {number} index The index of the node to move down.\n * @private\n */\nPriorityQueue.prototype.siftUp_ = function(index) {\n  const elements = this.elements_;\n  const priorities = this.priorities_;\n  const count = elements.length;\n  const element = elements[index];\n  const priority = priorities[index];\n  const startIndex = index;\n\n  while (index < (count >> 1)) {\n    const lIndex = this.getLeftChildIndex_(index);\n    const rIndex = this.getRightChildIndex_(index);\n\n    const smallerChildIndex = rIndex < count &&\n        priorities[rIndex] < priorities[lIndex] ?\n      rIndex : lIndex;\n\n    elements[index] = elements[smallerChildIndex];\n    priorities[index] = priorities[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n  this.siftDown_(startIndex, index);\n};\n\n\n/**\n * @param {number} startIndex The index of the root.\n * @param {number} index The index of the node to move up.\n * @private\n */\nPriorityQueue.prototype.siftDown_ = function(startIndex, index) {\n  const elements = this.elements_;\n  const priorities = this.priorities_;\n  const element = elements[index];\n  const priority = priorities[index];\n\n  while (index > startIndex) {\n    const parentIndex = this.getParentIndex_(index);\n    if (priorities[parentIndex] > priority) {\n      elements[index] = elements[parentIndex];\n      priorities[index] = priorities[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  elements[index] = element;\n  priorities[index] = priority;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.reprioritize = function() {\n  const priorityFunction = this.priorityFunction_;\n  const elements = this.elements_;\n  const priorities = this.priorities_;\n  let index = 0;\n  const n = elements.length;\n  let element, i, priority;\n  for (i = 0; i < n; ++i) {\n    element = elements[i];\n    priority = priorityFunction(element);\n    if (priority == DROP) {\n      delete this.queuedElements_[this.keyFunction_(element)];\n    } else {\n      priorities[index] = priority;\n      elements[index++] = element;\n    }\n  }\n  elements.length = index;\n  priorities.length = index;\n  this.heapify_();\n};\nexport default PriorityQueue;\n","/**\n * @module ol/GeolocationProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions'\n};\n","/**\n * @module ol/Geolocation\n */\nimport {inherits} from './util.js';\nimport GeolocationProperty from './GeolocationProperty.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport {listen} from './events.js';\nimport EventType from './events/EventType.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {GEOLOCATION} from './has.js';\nimport {toRadians} from './math.js';\nimport {get as getProjection, getTransformFromProjections, identityTransform} from './proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {GeolocationPositionOptions} [trackingOptions] Tracking options.\n * See {@link http://www.w3.org/TR/geolocation-API/#position_options_interface}.\n * @property {module:ol/proj~ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](http://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes, register a listener for the generic\n * `change` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     var geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       window.console.log(geolocation.getPosition());\n *     });\n *\n * @fires error\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/Geolocation~Options=} opt_options Options.\n * @api\n */\nconst Geolocation = function(opt_options) {\n\n  BaseObject.call(this);\n\n  const options = opt_options || {};\n\n  /**\n   * The unprojected (EPSG:4326) device position.\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.position_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/proj~TransformFunction}\n   */\n  this.transform_ = identityTransform;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.watchId_ = undefined;\n\n  listen(\n    this, getChangeEventType(GeolocationProperty.PROJECTION),\n    this.handleProjectionChanged_, this);\n  listen(\n    this, getChangeEventType(GeolocationProperty.TRACKING),\n    this.handleTrackingChanged_, this);\n\n  if (options.projection !== undefined) {\n    this.setProjection(options.projection);\n  }\n  if (options.trackingOptions !== undefined) {\n    this.setTrackingOptions(options.trackingOptions);\n  }\n\n  this.setTracking(options.tracking !== undefined ? options.tracking : false);\n\n};\n\ninherits(Geolocation, BaseObject);\n\n\n/**\n * @inheritDoc\n */\nGeolocation.prototype.disposeInternal = function() {\n  this.setTracking(false);\n  BaseObject.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @private\n */\nGeolocation.prototype.handleProjectionChanged_ = function() {\n  const projection = this.getProjection();\n  if (projection) {\n    this.transform_ = getTransformFromProjections(\n      getProjection('EPSG:4326'), projection);\n    if (this.position_) {\n      this.set(GeolocationProperty.POSITION, this.transform_(this.position_));\n    }\n  }\n};\n\n\n/**\n * @private\n */\nGeolocation.prototype.handleTrackingChanged_ = function() {\n  if (GEOLOCATION) {\n    const tracking = this.getTracking();\n    if (tracking && this.watchId_ === undefined) {\n      this.watchId_ = navigator.geolocation.watchPosition(\n        this.positionChange_.bind(this),\n        this.positionError_.bind(this),\n        this.getTrackingOptions());\n    } else if (!tracking && this.watchId_ !== undefined) {\n      navigator.geolocation.clearWatch(this.watchId_);\n      this.watchId_ = undefined;\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {GeolocationPosition} position position event.\n */\nGeolocation.prototype.positionChange_ = function(position) {\n  const coords = position.coords;\n  this.set(GeolocationProperty.ACCURACY, coords.accuracy);\n  this.set(GeolocationProperty.ALTITUDE,\n    coords.altitude === null ? undefined : coords.altitude);\n  this.set(GeolocationProperty.ALTITUDE_ACCURACY,\n    coords.altitudeAccuracy === null ?\n      undefined : coords.altitudeAccuracy);\n  this.set(GeolocationProperty.HEADING, coords.heading === null ?\n    undefined : toRadians(coords.heading));\n  if (!this.position_) {\n    this.position_ = [coords.longitude, coords.latitude];\n  } else {\n    this.position_[0] = coords.longitude;\n    this.position_[1] = coords.latitude;\n  }\n  const projectedPosition = this.transform_(this.position_);\n  this.set(GeolocationProperty.POSITION, projectedPosition);\n  this.set(GeolocationProperty.SPEED,\n    coords.speed === null ? undefined : coords.speed);\n  const geometry = circularPolygon(this.position_, coords.accuracy);\n  geometry.applyTransform(this.transform_);\n  this.set(GeolocationProperty.ACCURACY_GEOMETRY, geometry);\n  this.changed();\n};\n\n/**\n * Triggered when the Geolocation returns an error.\n * @event error\n * @api\n */\n\n/**\n * @private\n * @param {GeolocationPositionError} error error object.\n */\nGeolocation.prototype.positionError_ = function(error) {\n  error.type = EventType.ERROR;\n  this.setTracking(false);\n  this.dispatchEvent(/** @type {{type: string, target: undefined}} */ (error));\n};\n\n\n/**\n * Get the accuracy of the position in meters.\n * @return {number|undefined} The accuracy of the position measurement in\n *     meters.\n * @observable\n * @api\n */\nGeolocation.prototype.getAccuracy = function() {\n  return /** @type {number|undefined} */ (this.get(GeolocationProperty.ACCURACY));\n};\n\n\n/**\n * Get a geometry of the position accuracy.\n * @return {?module:ol/geom/Polygon} A geometry of the position accuracy.\n * @observable\n * @api\n */\nGeolocation.prototype.getAccuracyGeometry = function() {\n  return (\n    /** @type {?module:ol/geom/Polygon} */ (this.get(GeolocationProperty.ACCURACY_GEOMETRY) || null)\n  );\n};\n\n\n/**\n * Get the altitude associated with the position.\n * @return {number|undefined} The altitude of the position in meters above mean\n *     sea level.\n * @observable\n * @api\n */\nGeolocation.prototype.getAltitude = function() {\n  return /** @type {number|undefined} */ (this.get(GeolocationProperty.ALTITUDE));\n};\n\n\n/**\n * Get the altitude accuracy of the position.\n * @return {number|undefined} The accuracy of the altitude measurement in\n *     meters.\n * @observable\n * @api\n */\nGeolocation.prototype.getAltitudeAccuracy = function() {\n  return /** @type {number|undefined} */ (this.get(GeolocationProperty.ALTITUDE_ACCURACY));\n};\n\n\n/**\n * Get the heading as radians clockwise from North.\n * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n * is set to `true` in the tracking options.\n * @return {number|undefined} The heading of the device in radians from north.\n * @observable\n * @api\n */\nGeolocation.prototype.getHeading = function() {\n  return /** @type {number|undefined} */ (this.get(GeolocationProperty.HEADING));\n};\n\n\n/**\n * Get the position of the device.\n * @return {module:ol/coordinate~Coordinate|undefined} The current position of the device reported\n *     in the current projection.\n * @observable\n * @api\n */\nGeolocation.prototype.getPosition = function() {\n  return (\n    /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(GeolocationProperty.POSITION))\n  );\n};\n\n\n/**\n * Get the projection associated with the position.\n * @return {module:ol/proj/Projection|undefined} The projection the position is\n *     reported in.\n * @observable\n * @api\n */\nGeolocation.prototype.getProjection = function() {\n  return (\n    /** @type {module:ol/proj/Projection|undefined} */ (this.get(GeolocationProperty.PROJECTION))\n  );\n};\n\n\n/**\n * Get the speed in meters per second.\n * @return {number|undefined} The instantaneous speed of the device in meters\n *     per second.\n * @observable\n * @api\n */\nGeolocation.prototype.getSpeed = function() {\n  return /** @type {number|undefined} */ (this.get(GeolocationProperty.SPEED));\n};\n\n\n/**\n * Determine if the device location is being tracked.\n * @return {boolean} The device location is being tracked.\n * @observable\n * @api\n */\nGeolocation.prototype.getTracking = function() {\n  return /** @type {boolean} */ (this.get(GeolocationProperty.TRACKING));\n};\n\n\n/**\n * Get the tracking options.\n * @see http://www.w3.org/TR/geolocation-API/#position-options\n * @return {GeolocationPositionOptions|undefined} PositionOptions as defined by\n *     the [HTML5 Geolocation spec\n *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n * @observable\n * @api\n */\nGeolocation.prototype.getTrackingOptions = function() {\n  return /** @type {GeolocationPositionOptions|undefined} */ (this.get(GeolocationProperty.TRACKING_OPTIONS));\n};\n\n\n/**\n * Set the projection to use for transforming the coordinates.\n * @param {module:ol/proj~ProjectionLike} projection The projection the position is\n *     reported in.\n * @observable\n * @api\n */\nGeolocation.prototype.setProjection = function(projection) {\n  this.set(GeolocationProperty.PROJECTION, getProjection(projection));\n};\n\n\n/**\n * Enable or disable tracking.\n * @param {boolean} tracking Enable tracking.\n * @observable\n * @api\n */\nGeolocation.prototype.setTracking = function(tracking) {\n  this.set(GeolocationProperty.TRACKING, tracking);\n};\n\n\n/**\n * Set the tracking options.\n * @see http://www.w3.org/TR/geolocation-API/#position-options\n * @param {GeolocationPositionOptions} options PositionOptions as defined by the\n *     [HTML5 Geolocation spec\n *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n * @observable\n * @api\n */\nGeolocation.prototype.setTrackingOptions = function(options) {\n  this.set(GeolocationProperty.TRACKING_OPTIONS, options);\n};\nexport default Geolocation;\n","/**\n * @module ol/source/Raster\n */\nimport {getUid, inherits} from '../util.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport TileQueue from '../TileQueue.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {Processor} from 'pixelworks/lib/index';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport ImageLayer from '../layer/Image.js';\nimport TileLayer from '../layer/Tile.js';\nimport {assign} from '../obj.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\nimport ImageSource from '../source/Image.js';\nimport SourceState from '../source/State.js';\nimport TileSource from '../source/Tile.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * {@link ImageData https://developer.mozilla.org/en-US/docs/Web/API/ImageData}\n * and should return a single {@link ImageData\n * https://developer.mozilla.org/en-US/docs/Web/API/ImageData}.  The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array.<Array.<number>>|Array.<ImageData>), Object):\n *     (Array.<number>|ImageData)} Operation\n */\n\n\n/**\n * @enum {string}\n */\nconst RasterEventType = {\n  /**\n   * Triggered before operations are run.\n   * @event ol/source/Raster~RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.\n   * @event ol/source/Raster~RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations'\n};\n\n\n/**\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n * @enum {string}\n */\nconst RasterOperationType = {\n  PIXEL: 'pixel',\n  IMAGE: 'image'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type Type.\n * @param {module:ol/PluggableMap~FrameState} frameState The frame state.\n * @param {Object} data An object made available to operations.\n */\nconst RasterSourceEvent = function(type, frameState, data) {\n  Event.call(this, type);\n\n  /**\n   * The raster extent.\n   * @type {module:ol/extent~Extent}\n   * @api\n   */\n  this.extent = frameState.extent;\n\n  /**\n   * The pixel resolution (map units per pixel).\n   * @type {number}\n   * @api\n   */\n  this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n  /**\n   * An object made available to all operations.  This can be used by operations\n   * as a storage object (e.g. for calculating statistics).\n   * @type {Object}\n   * @api\n   */\n  this.data = data;\n\n};\ninherits(RasterSourceEvent, Event);\n\n/**\n * @typedef {Object} Options\n * @property {Array.<module:ol/source/Source|module:ol/layer/Layer>} sources Input\n * sources or layers. Vector layers must be configured with `renderMode: 'image'`.\n * @property {module:ol/source/Raster~Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {module:ol/source/Raster~RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n */\n\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @constructor\n * @extends {module:ol/source/Image}\n * @fires ol/source/Raster~RasterSourceEvent\n * @param {module:ol/source/Raster~Options=} options Options.\n * @api\n */\nconst RasterSource = function(options) {\n\n  /**\n   * @private\n   * @type {*}\n   */\n  this.worker_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/source/Raster~RasterOperationType}\n   */\n  this.operationType_ = options.operationType !== undefined ?\n    options.operationType : RasterOperationType.PIXEL;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/renderer/canvas/Layer>}\n   */\n  this.renderers_ = createRenderers(options.sources);\n\n  for (let r = 0, rr = this.renderers_.length; r < rr; ++r) {\n    listen(this.renderers_[r], EventType.CHANGE,\n      this.changed, this);\n  }\n\n  /**\n   * @private\n   * @type {module:ol/TileQueue}\n   */\n  this.tileQueue_ = new TileQueue(\n    function() {\n      return 1;\n    },\n    this.changed.bind(this));\n\n  const layerStatesArray = getLayerStatesArray(this.renderers_);\n  const layerStates = {};\n  for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n    layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n  }\n\n  /**\n   * The most recently requested frame state.\n   * @type {module:ol/PluggableMap~FrameState}\n   * @private\n   */\n  this.requestedFrameState_;\n\n  /**\n   * The most recently rendered image canvas.\n   * @type {module:ol/ImageCanvas}\n   * @private\n   */\n  this.renderedImageCanvas_ = null;\n\n  /**\n   * The most recently rendered revision.\n   * @type {number}\n   */\n  this.renderedRevision_;\n\n  /**\n   * @private\n   * @type {module:ol/PluggableMap~FrameState}\n   */\n  this.frameState_ = {\n    animate: false,\n    coordinateToPixelTransform: createTransform(),\n    extent: null,\n    focus: null,\n    index: 0,\n    layerStates: layerStates,\n    layerStatesArray: layerStatesArray,\n    pixelRatio: 1,\n    pixelToCoordinateTransform: createTransform(),\n    postRenderFunctions: [],\n    size: [0, 0],\n    skippedFeatureUids: {},\n    tileQueue: this.tileQueue_,\n    time: Date.now(),\n    usedTiles: {},\n    viewState: /** @type {module:ol/View~State} */ ({\n      rotation: 0\n    }),\n    viewHints: [],\n    wantedTiles: {}\n  };\n\n  ImageSource.call(this, {});\n\n  if (options.operation !== undefined) {\n    this.setOperation(options.operation, options.lib);\n  }\n\n};\n\ninherits(RasterSource, ImageSource);\n\n\n/**\n * Set the operation.\n * @param {module:ol/source/Raster~Operation} operation New operation.\n * @param {Object=} opt_lib Functions that will be available to operations run\n *     in a worker.\n * @api\n */\nRasterSource.prototype.setOperation = function(operation, opt_lib) {\n  this.worker_ = new Processor({\n    operation: operation,\n    imageOps: this.operationType_ === RasterOperationType.IMAGE,\n    queue: 1,\n    lib: opt_lib,\n    threads: this.threads_\n  });\n  this.changed();\n};\n\n\n/**\n * Update the stored frame state.\n * @param {module:ol/extent~Extent} extent The view extent (in map units).\n * @param {number} resolution The view resolution.\n * @param {module:ol/proj/Projection} projection The view projection.\n * @return {module:ol/PluggableMap~FrameState} The updated frame state.\n * @private\n */\nRasterSource.prototype.updateFrameState_ = function(extent, resolution, projection) {\n\n  const frameState = /** @type {module:ol/PluggableMap~FrameState} */ (assign({}, this.frameState_));\n\n  frameState.viewState = /** @type {module:ol/View~State} */ (assign({}, frameState.viewState));\n\n  const center = getCenter(extent);\n\n  frameState.extent = extent.slice();\n  frameState.focus = center;\n  frameState.size[0] = Math.round(getWidth(extent) / resolution);\n  frameState.size[1] = Math.round(getHeight(extent) / resolution);\n  frameState.time = Date.now();\n  frameState.animate = false;\n\n  const viewState = frameState.viewState;\n  viewState.center = center;\n  viewState.projection = projection;\n  viewState.resolution = resolution;\n  return frameState;\n};\n\n\n/**\n * Determine if all sources are ready.\n * @return {boolean} All sources are ready.\n * @private\n */\nRasterSource.prototype.allSourcesReady_ = function() {\n  let ready = true;\n  let source;\n  for (let i = 0, ii = this.renderers_.length; i < ii; ++i) {\n    source = this.renderers_[i].getLayer().getSource();\n    if (source.getState() !== SourceState.READY) {\n      ready = false;\n      break;\n    }\n  }\n  return ready;\n};\n\n\n/**\n * @inheritDoc\n */\nRasterSource.prototype.getImage = function(extent, resolution, pixelRatio, projection) {\n  if (!this.allSourcesReady_()) {\n    return null;\n  }\n\n  const frameState = this.updateFrameState_(extent, resolution, projection);\n  this.requestedFrameState_ = frameState;\n\n  // check if we can't reuse the existing ol/ImageCanvas\n  if (this.renderedImageCanvas_) {\n    const renderedResolution = this.renderedImageCanvas_.getResolution();\n    const renderedExtent = this.renderedImageCanvas_.getExtent();\n    if (resolution !== renderedResolution || !equals(extent, renderedExtent)) {\n      this.renderedImageCanvas_ = null;\n    }\n  }\n\n  if (!this.renderedImageCanvas_ || this.getRevision() !== this.renderedRevision_) {\n    this.processSources_();\n  }\n\n  frameState.tileQueue.loadMoreTiles(16, 16);\n\n  if (frameState.animate) {\n    requestAnimationFrame(this.changed.bind(this));\n  }\n\n  return this.renderedImageCanvas_;\n};\n\n\n/**\n * Start processing source data.\n * @private\n */\nRasterSource.prototype.processSources_ = function() {\n  const frameState = this.requestedFrameState_;\n  const len = this.renderers_.length;\n  const imageDatas = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    const imageData = getImageData(\n      this.renderers_[i], frameState, frameState.layerStatesArray[i]);\n    if (imageData) {\n      imageDatas[i] = imageData;\n    } else {\n      return;\n    }\n  }\n\n  const data = {};\n  this.dispatchEvent(new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data));\n  this.worker_.process(imageDatas, data, this.onWorkerComplete_.bind(this, frameState));\n};\n\n\n/**\n * Called when pixel processing is complete.\n * @param {module:ol/PluggableMap~FrameState} frameState The frame state.\n * @param {Error} err Any error during processing.\n * @param {ImageData} output The output image data.\n * @param {Object} data The user data.\n * @private\n */\nRasterSource.prototype.onWorkerComplete_ = function(frameState, err, output, data) {\n  if (err || !output) {\n    return;\n  }\n\n  // do nothing if extent or resolution changed\n  const extent = frameState.extent;\n  const resolution = frameState.viewState.resolution;\n  if (resolution !== this.requestedFrameState_.viewState.resolution ||\n      !equals(extent, this.requestedFrameState_.extent)) {\n    return;\n  }\n\n  let context;\n  if (this.renderedImageCanvas_) {\n    context = this.renderedImageCanvas_.getImage().getContext('2d');\n  } else {\n    const width = Math.round(getWidth(extent) / resolution);\n    const height = Math.round(getHeight(extent) / resolution);\n    context = createCanvasContext2D(width, height);\n    this.renderedImageCanvas_ = new ImageCanvas(extent, resolution, 1, context.canvas);\n  }\n  context.putImageData(output, 0, 0);\n\n  this.changed();\n  this.renderedRevision_ = this.getRevision();\n\n  this.dispatchEvent(new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data));\n};\n\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nlet sharedContext = null;\n\n\n/**\n * Get image data from a renderer.\n * @param {module:ol/renderer/canvas/Layer} renderer Layer renderer.\n * @param {module:ol/PluggableMap~FrameState} frameState The frame state.\n * @param {module:ol/layer/Layer~State} layerState The layer state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(renderer, frameState, layerState) {\n  if (!renderer.prepareFrame(frameState, layerState)) {\n    return null;\n  }\n  const width = frameState.size[0];\n  const height = frameState.size[1];\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height);\n  } else {\n    const canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height);\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  renderer.composeFrame(frameState, layerState, sharedContext);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n\n/**\n * Get a list of layer states from a list of renderers.\n * @param {Array.<module:ol/renderer/canvas/Layer>} renderers Layer renderers.\n * @return {Array.<module:ol/layer/Layer~State>} The layer states.\n */\nfunction getLayerStatesArray(renderers) {\n  return renderers.map(function(renderer) {\n    return renderer.getLayer().getLayerState();\n  });\n}\n\n\n/**\n * Create renderers for all sources.\n * @param {Array.<module:ol/source/Source>} sources The sources.\n * @return {Array.<module:ol/renderer/canvas/Layer>} Array of layer renderers.\n */\nfunction createRenderers(sources) {\n  const len = sources.length;\n  const renderers = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    renderers[i] = createRenderer(sources[i]);\n  }\n  return renderers;\n}\n\n\n/**\n * Create a renderer for the provided source.\n * @param {module:ol/source/Source} source The source.\n * @return {module:ol/renderer/canvas/Layer} The renderer.\n */\nfunction createRenderer(source) {\n  let renderer = null;\n  if (source instanceof TileSource) {\n    renderer = createTileRenderer(source);\n  } else if (source instanceof ImageSource) {\n    renderer = createImageRenderer(source);\n  } else if (source instanceof TileLayer) {\n    renderer = new CanvasTileLayerRenderer(source);\n  } else if (source instanceof Layer &&\n      (source.getType() == LayerType.IMAGE || source.getType() == LayerType.VECTOR)) {\n    renderer = new CanvasImageLayerRenderer(source);\n  }\n  return renderer;\n}\n\n\n/**\n * Create an image renderer for the provided source.\n * @param {module:ol/source/Image} source The source.\n * @return {module:ol/renderer/canvas/Layer} The renderer.\n */\nfunction createImageRenderer(source) {\n  const layer = new ImageLayer({source: source});\n  return new CanvasImageLayerRenderer(layer);\n}\n\n\n/**\n * Create a tile renderer for the provided source.\n * @param {module:ol/source/Tile} source The source.\n * @return {module:ol/renderer/canvas/Layer} The renderer.\n */\nfunction createTileRenderer(source) {\n  const layer = new TileLayer({source: source});\n  return new CanvasTileLayerRenderer(layer);\n}\n\n\n/**\n * @override\n */\nRasterSource.prototype.getImageInternal = function() {\n  return null; // not implemented\n};\n\n\nexport default RasterSource;\n","/**\n * @module ol/ImageCanvas\n */\nimport {inherits} from './util.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error))} Loader\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/ImageBase}\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {module:ol/ImageCanvas~Loader=} opt_loader Optional loader function to\n *     support asynchronous canvas drawing.\n */\nconst ImageCanvas = function(extent, resolution, pixelRatio, canvas, opt_loader) {\n\n  /**\n   * Optional canvas loader function.\n   * @type {?module:ol/ImageCanvas~Loader}\n   * @private\n   */\n  this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n  const state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n  ImageBase.call(this, extent, resolution, pixelRatio, state);\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = canvas;\n\n  /**\n   * @private\n   * @type {Error}\n   */\n  this.error_ = null;\n\n};\n\ninherits(ImageCanvas, ImageBase);\n\n\n/**\n * Get any error associated with asynchronous rendering.\n * @return {Error} Any error that occurred during rendering.\n */\nImageCanvas.prototype.getError = function() {\n  return this.error_;\n};\n\n\n/**\n * Handle async drawing complete.\n * @param {Error} err Any error during drawing.\n * @private\n */\nImageCanvas.prototype.handleLoad_ = function(err) {\n  if (err) {\n    this.error_ = err;\n    this.state = ImageState.ERROR;\n  } else {\n    this.state = ImageState.LOADED;\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nImageCanvas.prototype.load = function() {\n  if (this.state == ImageState.IDLE) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.loader_(this.handleLoad_.bind(this));\n  }\n};\n\n\n/**\n * @return {HTMLCanvasElement} Canvas element.\n */\nImageCanvas.prototype.getImage = function() {\n  return this.canvas_;\n};\nexport default ImageCanvas;\n","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font}. Default is '10px sans-serif'\n * @property {number} [maxAngle] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {module:ol/style/TextPlacement|string} [placement] Text placement.\n * @property {number} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {module:ol/style/Fill} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/Fill} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {module:ol/style/Stroke} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array.<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {module:ol/style/Text~Options=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: DEFAULT_FILL_COLOR});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {module:ol/style/TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * Clones the style.\n * @return {module:ol/style/Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {module:ol/style/TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {module:ol/style/Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {module:ol/style/Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {module:ol/style/Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {module:ol/style/Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {module:ol/style/TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {module:ol/style/Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {module:ol/style/Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {module:ol/style/Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {module:ol/style/Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n","/**\n * @module ol/tilegrid/WMTS\n */\nimport {inherits} from '../util.js';\nimport {find} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {module:ol/coordinate~Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and upwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array.<module:ol/coordinate~Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and upwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array.<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array.<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array.<module:ol/size~Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define the grid's extent together with the `origin`.\n * An `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. Note that when the top-left corner of\n * the `extent` is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates increase upwards.\n * @property {number|module:ol/size~Size} [tileSize] Tile size.\n * @property {Array.<module:ol/size~Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n * @property {Array.<number>} [widths] Number of tile columns that cover the grid's\n * extent for each zoom level. Only required when used with a source that has `wrapX`\n * set to `true`, and only when the grid's origin differs from the one of the\n * projection's extent. The array length has to match the length of the `resolutions`\n * array, i.e. each resolution will have a matching entry here.\n */\n\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n *\n * @constructor\n * @extends {module:ol/tilegrid/TileGrid}\n * @param {module:ol/tilegrid/WMTS~Options} options WMTS options.\n * @struct\n * @api\n */\nconst WMTSTileGrid = function(options) {\n  /**\n   * @private\n   * @type {!Array.<string>}\n   */\n  this.matrixIds_ = options.matrixIds;\n  // FIXME: should the matrixIds become optional?\n\n  TileGrid.call(this, {\n    extent: options.extent,\n    origin: options.origin,\n    origins: options.origins,\n    resolutions: options.resolutions,\n    tileSize: options.tileSize,\n    tileSizes: options.tileSizes,\n    sizes: options.sizes\n  });\n};\n\ninherits(WMTSTileGrid, TileGrid);\n\n\n/**\n * @param {number} z Z.\n * @return {string} MatrixId..\n */\nWMTSTileGrid.prototype.getMatrixId = function(z) {\n  return this.matrixIds_[z];\n};\n\n\n/**\n * Get the list of matrix identifiers.\n * @return {Array.<string>} MatrixIds.\n * @api\n */\nWMTSTileGrid.prototype.getMatrixIds = function() {\n  return this.matrixIds_;\n};\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {module:ol/extent~Extent=} opt_extent An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array.<Object>=} opt_matrixLimits An optional object representing\n *     the available matrices for tileGrid.\n * @return {module:ol/tilegrid/WMTS} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(matrixSet, opt_extent, opt_matrixLimits) {\n\n  /** @type {!Array.<number>} */\n  const resolutions = [];\n  /** @type {!Array.<string>} */\n  const matrixIds = [];\n  /** @type {!Array.<module:ol/coordinate~Coordinate>} */\n  const origins = [];\n  /** @type {!Array.<module:ol/size~Size>} */\n  const tileSizes = [];\n  /** @type {!Array.<module:ol/size~Size>} */\n  const sizes = [];\n\n  const matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n      getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function(a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function(elt) {\n\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = find(matrixLimits, function(elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (elt[identifierPropName].indexOf(':') === -1) {\n          return matrixSet[identifierPropName] + ':' + elt[identifierPropName] === elt_ml[matrixIdsPropName];\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution = elt[scaleDenominatorPropName] * 0.28E-3 / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0]]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(tileWidth == tileHeight ?\n        tileWidth : [tileWidth, tileHeight]);\n      // top-left origin, so height is negative\n      sizes.push([elt['MatrixWidth'], -elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: opt_extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes\n  });\n}\n","/**\n * @module ol/style/Icon\n */\nimport {getUid, inherits} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport {get as getIconImage} from '../style/IconImage.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport ImageStyle from '../style/Image.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array.<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {module:ol/style/IconOrigin} [anchorOrigin] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {module:ol/style/IconAnchorUnits} [anchorXUnits] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels. Default is `'fraction'`.\n * @property {module:ol/style/IconAnchorUnits} [anchorYUnits] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels. Default is `'fraction'`.\n * @property {module:ol/color~Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you are using the WebGL renderer or if you want to access pixel data with the Canvas renderer.\n * See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {Image|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array.<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {module:ol/style/IconOrigin} [offsetOrigin] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [scale=1] Scale.\n * @property {boolean} [snapToPixel=true] If `true` integral numbers of pixels are used as the X and Y pixel coordinate\n * when drawing the icon in the output canvas. If `false` fractional numbers may be used. Using `true` allows for\n * \"sharp\" rendering (no blur), while using `false` allows for \"accurate\" rendering. Note that accuracy is important if\n * the icon's position is animated. Without it, the icon may jitter noticeably.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {module:ol/size~Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {module:ol/size~Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n\n/**\n * @classdesc\n * Set icon style for vector features.\n *\n * @constructor\n * @param {module:ol/style/Icon~Options=} opt_options Options.\n * @extends {module:ol/style/Image}\n * @api\n */\nconst Icon = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.normalizedAnchor_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/style/IconOrigin}\n   */\n  this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n    options.anchorOrigin : IconOrigin.TOP_LEFT;\n\n  /**\n   * @private\n   * @type {module:ol/style/IconAnchorUnits}\n   */\n  this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n    options.anchorXUnits : IconAnchorUnits.FRACTION;\n\n  /**\n   * @private\n   * @type {module:ol/style/IconAnchorUnits}\n   */\n  this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n    options.anchorYUnits : IconAnchorUnits.FRACTION;\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @type {Image|HTMLCanvasElement}\n   */\n  const image = options.img !== undefined ? options.img : null;\n\n  /**\n   * @type {module:ol/size~Size}\n   */\n  const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n  /**\n   * @type {string|undefined}\n   */\n  let src = options.src;\n\n  assert(!(src !== undefined && image),\n    4); // `image` and `src` cannot be provided at the same time\n  assert(!image || (image && imgSize),\n    5); // `imgSize` must be set when `image` is provided\n\n  if ((src === undefined || src.length === 0) && image) {\n    src = image.src || getUid(image).toString();\n  }\n  assert(src !== undefined && src.length > 0,\n    6); // A defined and non-empty `src` or `image` must be provided\n\n  /**\n   * @type {module:ol/ImageState}\n   */\n  const imageState = options.src !== undefined ?\n    ImageState.IDLE : ImageState.LOADED;\n\n  /**\n   * @private\n   * @type {module:ol/color~Color}\n   */\n  this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/IconImage}\n   */\n  this.iconImage_ = getIconImage(\n    image, /** @type {string} */ (src), imgSize, this.crossOrigin_, imageState, this.color_);\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n\n  /**\n   * @private\n   * @type {module:ol/style/IconOrigin}\n   */\n  this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n    options.offsetOrigin : IconOrigin.TOP_LEFT;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.origin_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.size_ = options.size !== undefined ? options.size : null;\n\n  /**\n   * @type {number}\n   */\n  const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n  /**\n   * @type {boolean}\n   */\n  const rotateWithView = options.rotateWithView !== undefined ?\n    options.rotateWithView : false;\n\n  /**\n   * @type {number}\n   */\n  const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n  /**\n   * @type {number}\n   */\n  const scale = options.scale !== undefined ? options.scale : 1;\n\n  /**\n   * @type {boolean}\n   */\n  const snapToPixel = options.snapToPixel !== undefined ?\n    options.snapToPixel : true;\n\n  ImageStyle.call(this, {\n    opacity: opacity,\n    rotation: rotation,\n    scale: scale,\n    snapToPixel: snapToPixel,\n    rotateWithView: rotateWithView\n  });\n\n};\n\ninherits(Icon, ImageStyle);\n\n\n/**\n * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n * @return {module:ol/style/Icon} The cloned style.\n * @api\n */\nIcon.prototype.clone = function() {\n  return new Icon({\n    anchor: this.anchor_.slice(),\n    anchorOrigin: this.anchorOrigin_,\n    anchorXUnits: this.anchorXUnits_,\n    anchorYUnits: this.anchorYUnits_,\n    crossOrigin: this.crossOrigin_,\n    color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n    src: this.getSrc(),\n    offset: this.offset_.slice(),\n    offsetOrigin: this.offsetOrigin_,\n    size: this.size_ !== null ? this.size_.slice() : undefined,\n    opacity: this.getOpacity(),\n    scale: this.getScale(),\n    snapToPixel: this.getSnapToPixel(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView()\n  });\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nIcon.prototype.getAnchor = function() {\n  if (this.normalizedAnchor_) {\n    return this.normalizedAnchor_;\n  }\n  let anchor = this.anchor_;\n  const size = this.getSize();\n  if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n      this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n    if (!size) {\n      return null;\n    }\n    anchor = this.anchor_.slice();\n    if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n      anchor[0] *= size[0];\n    }\n    if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n      anchor[1] *= size[1];\n    }\n  }\n\n  if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n    if (!size) {\n      return null;\n    }\n    if (anchor === this.anchor_) {\n      anchor = this.anchor_.slice();\n    }\n    if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n      anchor[0] = -anchor[0] + size[0];\n    }\n    if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n      anchor[1] = -anchor[1] + size[1];\n    }\n  }\n  this.normalizedAnchor_ = anchor;\n  return this.normalizedAnchor_;\n};\n\n\n/**\n * Get the icon color.\n * @return {module:ol/color~Color} Color.\n * @api\n */\nIcon.prototype.getColor = function() {\n  return this.color_;\n};\n\n\n/**\n * Get the image icon.\n * @param {number} pixelRatio Pixel ratio.\n * @return {Image|HTMLCanvasElement} Image or Canvas element.\n * @override\n * @api\n */\nIcon.prototype.getImage = function(pixelRatio) {\n  return this.iconImage_.getImage(pixelRatio);\n};\n\n\n/**\n * @override\n */\nIcon.prototype.getImageSize = function() {\n  return this.iconImage_.getSize();\n};\n\n\n/**\n * @override\n */\nIcon.prototype.getHitDetectionImageSize = function() {\n  return this.getImageSize();\n};\n\n\n/**\n * @override\n */\nIcon.prototype.getImageState = function() {\n  return this.iconImage_.getImageState();\n};\n\n\n/**\n * @override\n */\nIcon.prototype.getHitDetectionImage = function(pixelRatio) {\n  return this.iconImage_.getHitDetectionImage(pixelRatio);\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nIcon.prototype.getOrigin = function() {\n  if (this.origin_) {\n    return this.origin_;\n  }\n  let offset = this.offset_;\n\n  if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n    const size = this.getSize();\n    const iconImageSize = this.iconImage_.getSize();\n    if (!size || !iconImageSize) {\n      return null;\n    }\n    offset = offset.slice();\n    if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n      offset[0] = iconImageSize[0] - size[0] - offset[0];\n    }\n    if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n      offset[1] = iconImageSize[1] - size[1] - offset[1];\n    }\n  }\n  this.origin_ = offset;\n  return this.origin_;\n};\n\n\n/**\n * Get the image URL.\n * @return {string|undefined} Image src.\n * @api\n */\nIcon.prototype.getSrc = function() {\n  return this.iconImage_.getSrc();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nIcon.prototype.getSize = function() {\n  return !this.size_ ? this.iconImage_.getSize() : this.size_;\n};\n\n\n/**\n * @override\n */\nIcon.prototype.listenImageChange = function(listener, thisArg) {\n  return listen(this.iconImage_, EventType.CHANGE,\n    listener, thisArg);\n};\n\n\n/**\n * Load not yet loaded URI.\n * When rendering a feature with an icon style, the vector renderer will\n * automatically call this method. However, you might want to call this\n * method yourself for preloading or other purposes.\n * @override\n * @api\n */\nIcon.prototype.load = function() {\n  this.iconImage_.load();\n};\n\n\n/**\n * @override\n */\nIcon.prototype.unlistenImageChange = function(listener, thisArg) {\n  unlisten(this.iconImage_, EventType.CHANGE,\n    listener, thisArg);\n};\nexport default Icon;\n","/**\n * @module ol/ImageTile\n */\nimport {inherits} from './util.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @typedef {function(new: module:ol/ImageTile, module:ol/tilecoord~TileCoord,\n * module:ol/TileState, string, ?string, module:ol/Tile~LoadFunction)} TileClass\n * @api\n */\n\n/**\n * @constructor\n * @extends {module:ol/Tile}\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileState} state State.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n * @param {module:ol/Tile~Options=} opt_options Tile options.\n */\nconst ImageTile = function(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n  Tile.call(this, tileCoord, state, opt_options);\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ = crossOrigin;\n\n  /**\n   * Image URI\n   *\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {Image|HTMLCanvasElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/Tile~LoadFunction}\n   */\n  this.tileLoadFunction_ = tileLoadFunction;\n\n};\n\ninherits(ImageTile, Tile);\n\n\n/**\n * @inheritDoc\n */\nImageTile.prototype.disposeInternal = function() {\n  if (this.state == TileState.LOADING) {\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n  }\n  if (this.interimTile) {\n    this.interimTile.dispose();\n  }\n  this.state = TileState.ABORT;\n  this.changed();\n  Tile.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n * @api\n */\nImageTile.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageTile.prototype.getKey = function() {\n  return this.src_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\nImageTile.prototype.handleImageError_ = function() {\n  this.state = TileState.ERROR;\n  this.unlistenImage_();\n  this.image_ = getBlankImage();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\nImageTile.prototype.handleImageLoad_ = function() {\n  if (this.image_.naturalWidth && this.image_.naturalHeight) {\n    this.state = TileState.LOADED;\n  } else {\n    this.state = TileState.EMPTY;\n  }\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nImageTile.prototype.load = function() {\n  if (this.state == TileState.ERROR) {\n    this.state = TileState.IDLE;\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n  if (this.state == TileState.IDLE) {\n    this.state = TileState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.tileLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\nImageTile.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/render/Event\n */\nimport {inherits} from '../util.js';\nimport Event from '../events/Event.js';\n\n/**\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/render/EventType} type Type.\n * @param {module:ol/render/VectorContext=} opt_vectorContext Vector context.\n * @param {module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n * @param {?CanvasRenderingContext2D=} opt_context Context.\n * @param {?module:ol/webgl/Context=} opt_glContext WebGL Context.\n */\nconst RenderEvent = function(\n  type, opt_vectorContext, opt_frameState, opt_context,\n  opt_glContext) {\n\n  Event.call(this, type);\n\n  /**\n   * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n   * @type {module:ol/render/VectorContext|undefined}\n   * @api\n   */\n  this.vectorContext = opt_vectorContext;\n\n  /**\n   * An object representing the current render frame state.\n   * @type {module:ol/PluggableMap~FrameState|undefined}\n   * @api\n   */\n  this.frameState = opt_frameState;\n\n  /**\n   * Canvas context. Only available when a Canvas renderer is used, null\n   * otherwise.\n   * @type {CanvasRenderingContext2D|null|undefined}\n   * @api\n   */\n  this.context = opt_context;\n\n  /**\n   * WebGL context. Only available when a WebGL renderer is used, null\n   * otherwise.\n   * @type {module:ol/webgl/Context|null|undefined}\n   * @api\n   */\n  this.glContext = opt_glContext;\n\n};\n\ninherits(RenderEvent, Event);\nexport default RenderEvent;\n","/**\n * @module ol/style/Image\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n * @property {boolean} snapToPixel\n */\n\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n *\n * @constructor\n * @abstract\n * @param {module:ol/style/Image~Options} options Options.\n * @api\n */\nconst ImageStyle = function(options) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.opacity_ = options.opacity;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.snapToPixel_ = options.snapToPixel;\n\n};\n\n\n/**\n * Get the symbolizer opacity.\n * @return {number} Opacity.\n * @api\n */\nImageStyle.prototype.getOpacity = function() {\n  return this.opacity_;\n};\n\n\n/**\n * Determine whether the symbolizer rotates with the map.\n * @return {boolean} Rotate with map.\n * @api\n */\nImageStyle.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the symoblizer rotation.\n * @return {number} Rotation.\n * @api\n */\nImageStyle.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the symbolizer scale.\n * @return {number} Scale.\n * @api\n */\nImageStyle.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Determine whether the symbolizer should be snapped to a pixel.\n * @return {boolean} The symbolizer should snap to a pixel.\n * @api\n */\nImageStyle.prototype.getSnapToPixel = function() {\n  return this.snapToPixel_;\n};\n\n\n/**\n * Get the anchor point in pixels. The anchor determines the center point for the\n * symbolizer.\n * @abstract\n * @return {Array.<number>} Anchor.\n */\nImageStyle.prototype.getAnchor = function() {};\n\n\n/**\n * Get the image element for the symbolizer.\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|Image} Image element.\n */\nImageStyle.prototype.getImage = function(pixelRatio) {};\n\n\n/**\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|Image} Image element.\n */\nImageStyle.prototype.getHitDetectionImage = function(pixelRatio) {};\n\n\n/**\n * @abstract\n * @return {module:ol/ImageState} Image state.\n */\nImageStyle.prototype.getImageState = function() {};\n\n\n/**\n * @abstract\n * @return {module:ol/size~Size} Image size.\n */\nImageStyle.prototype.getImageSize = function() {};\n\n\n/**\n * @abstract\n * @return {module:ol/size~Size} Size of the hit-detection image.\n */\nImageStyle.prototype.getHitDetectionImageSize = function() {};\n\n\n/**\n * Get the origin of the symbolizer.\n * @abstract\n * @return {Array.<number>} Origin.\n */\nImageStyle.prototype.getOrigin = function() {};\n\n\n/**\n * Get the size of the symbolizer (in pixels).\n * @abstract\n * @return {module:ol/size~Size} Size.\n */\nImageStyle.prototype.getSize = function() {};\n\n\n/**\n * Set the opacity.\n *\n * @param {number} opacity Opacity.\n * @api\n */\nImageStyle.prototype.setOpacity = function(opacity) {\n  this.opacity_ = opacity;\n};\n\n\n/**\n * Set whether to rotate the style with the view.\n *\n * @param {boolean} rotateWithView Rotate with map.\n * @api\n */\nImageStyle.prototype.setRotateWithView = function(rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number} rotation Rotation.\n * @api\n */\nImageStyle.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number} scale Scale.\n * @api\n */\nImageStyle.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set whether to snap the image to the closest pixel.\n *\n * @param {boolean} snapToPixel Snap to pixel?\n * @api\n */\nImageStyle.prototype.setSnapToPixel = function(snapToPixel) {\n  this.snapToPixel_ = snapToPixel;\n};\n\n\n/**\n * @abstract\n * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {module:ol/events~EventsKey|undefined} Listener key.\n * @template T\n */\nImageStyle.prototype.listenImageChange = function(listener, thisArg) {};\n\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\nImageStyle.prototype.load = function() {};\n\n\n/**\n * @abstract\n * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @template T\n */\nImageStyle.prototype.unlistenImageChange = function(listener, thisArg) {};\nexport default ImageStyle;\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from '../flat/contains.js';\nimport {forEach as forEachSegment} from '../flat/segments.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {module:ol/coordinate~Coordinate} point1 Start point.\n     * @param {module:ol/coordinate~Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/PluggableMap\n */\nimport {getUid, inherits} from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {assert} from './asserts.js';\nimport {removeNode} from './dom.js';\nimport {listen, unlistenByKey, unlisten} from './events.js';\nimport {stopPropagation} from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, TOUCH} from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport {hasArea} from './size.js';\nimport {DROP} from './structs/PriorityQueue.js';\nimport {create as createTransform, apply as applyTransform} from './transform.js';\n\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {module:ol/View~State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {module:ol/transform~Transform} coordinateToPixelTransform\n * @property {null|module:ol/extent~Extent} extent\n * @property {module:ol/coordinate~Coordinate} focus\n * @property {number} index\n * @property {Object.<number, module:ol/layer/Layer~State>} layerStates\n * @property {Array.<module:ol/layer/Layer~State>} layerStatesArray\n * @property {module:ol/transform~Transform} pixelToCoordinateTransform\n * @property {Array.<module:ol/PluggableMap~PostRenderFunction>} postRenderFunctions\n * @property {module:ol/size~Size} size\n * @property {!Object.<string, boolean>} skippedFeatureUids\n * @property {module:ol/TileQueue} tileQueue\n * @property {Object.<string, Object.<string, module:ol/TileRange>>} usedTiles\n * @property {Array.<number>} viewHints\n * @property {!Object.<string, Object.<string, boolean>>} wantedTiles\n */\n\n\n/**\n * @typedef {function(module:ol/PluggableMap, ?module:ol/PluggableMap~FrameState): boolean} PostRenderFunction\n */\n\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {((function(module:ol/layer/Layer): boolean)|undefined)} layerFilter Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {module:ol/Collection.<module:ol/control/Control>} [controls]\n * @property {module:ol/Collection.<module:ol/interaction/Interaction>} [interactions]\n * @property {Element|Document} keyboardEventTarget\n * @property {module:ol/Collection.<module:ol/Overlay>} overlays\n * @property {Object.<string, *>} values\n */\n\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {module:ol/Collection.<module:ol/control/Control>|Array.<module:ol/control/Control>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/util~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {module:ol/Collection.<module:ol/interaction/Interaction>|Array.<module:ol/interaction/Interaction>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {Element|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array.<module:ol/layer/Base>|module:ol/Collection.<module:ol/layer/Base>} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {boolean} [loadTilesWhileAnimating=false] When set to `true`, tiles\n * will be loaded during animations. This may improve the user experience, but\n * can also make animations stutter on devices with slow memory.\n * @property {boolean} [loadTilesWhileInteracting=false] When set to `true`,\n * tiles will be loaded while interacting with the map. This may improve the\n * user experience, but can also make map panning and zooming choppy on devices\n * with slow memory.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {module:ol/Collection.<module:ol/Overlay>|Array.<module:ol/Overlay>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {Element|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {module:ol/View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/PluggableMap~MapOptions} options Map options.\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nconst PluggableMap = function(options) {\n\n  BaseObject.call(this);\n\n  const optionsInternal = createOptionsInternal(options);\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.loadTilesWhileAnimating_ =\n      options.loadTilesWhileAnimating !== undefined ?\n        options.loadTilesWhileAnimating : false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.loadTilesWhileInteracting_ =\n      options.loadTilesWhileInteracting !== undefined ?\n        options.loadTilesWhileInteracting : false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = options.pixelRatio !== undefined ?\n    options.pixelRatio : DEVICE_PIXEL_RATIO;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.animationDelayKey_;\n\n  /**\n   * @private\n   */\n  this.animationDelay_ = function() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_.call(this, Date.now());\n  }.bind(this);\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.coordinateToPixelTransform_ = createTransform();\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.pixelToCoordinateTransform_ = createTransform();\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.frameIndex_ = 0;\n\n  /**\n   * @private\n   * @type {?module:ol/PluggableMap~FrameState}\n   */\n  this.frameState_ = null;\n\n  /**\n   * The extent at the previous 'moveend' event.\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.previousExtent_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.viewPropertyListenerKey_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.viewChangeListenerKey_ = null;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.layerGroupPropertyListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.viewport_ = document.createElement('DIV');\n  this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n  this.viewport_.style.position = 'relative';\n  this.viewport_.style.overflow = 'hidden';\n  this.viewport_.style.width = '100%';\n  this.viewport_.style.height = '100%';\n  // prevent page zoom on IE >= 10 browsers\n  this.viewport_.style.msTouchAction = 'none';\n  this.viewport_.style.touchAction = 'none';\n\n  /**\n   * @private\n   * @type {!Element}\n   */\n  this.overlayContainer_ = document.createElement('DIV');\n  this.overlayContainer_.className = 'ol-overlaycontainer';\n  this.viewport_.appendChild(this.overlayContainer_);\n\n  /**\n   * @private\n   * @type {!Element}\n   */\n  this.overlayContainerStopEvent_ = document.createElement('DIV');\n  this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n  const overlayEvents = [\n    EventType.CLICK,\n    EventType.DBLCLICK,\n    EventType.MOUSEDOWN,\n    EventType.TOUCHSTART,\n    EventType.MSPOINTERDOWN,\n    MapBrowserEventType.POINTERDOWN,\n    EventType.MOUSEWHEEL,\n    EventType.WHEEL\n  ];\n  for (let i = 0, ii = overlayEvents.length; i < ii; ++i) {\n    listen(this.overlayContainerStopEvent_, overlayEvents[i], stopPropagation);\n  }\n  this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n  /**\n   * @private\n   * @type {module:ol/MapBrowserEventHandler}\n   */\n  this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\n  for (const key in MapBrowserEventType) {\n    listen(this.mapBrowserEventHandler_, MapBrowserEventType[key],\n      this.handleMapBrowserEvent, this);\n  }\n\n  /**\n   * @private\n   * @type {Element|Document}\n   */\n  this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.keyHandlerKeys_ = null;\n\n  listen(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n  listen(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n  listen(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n\n  /**\n   * @type {module:ol/Collection.<module:ol/control/Control>}\n   * @protected\n   */\n  this.controls = optionsInternal.controls || new Collection();\n\n  /**\n   * @type {module:ol/Collection.<module:ol/interaction/Interaction>}\n   * @protected\n   */\n  this.interactions = optionsInternal.interactions || new Collection();\n\n  /**\n   * @type {module:ol/Collection.<module:ol/Overlay>}\n   * @private\n   */\n  this.overlays_ = optionsInternal.overlays;\n\n  /**\n   * A lookup of overlays by id.\n   * @private\n   * @type {Object.<string, module:ol/Overlay>}\n   */\n  this.overlayIdIndex_ = {};\n\n  /**\n   * @type {module:ol/renderer/Map}\n   * @private\n   */\n  this.renderer_ = this.createRenderer();\n\n  /**\n   * @type {function(Event)|undefined}\n   * @private\n   */\n  this.handleResize_;\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.focus_ = null;\n\n  /**\n   * @private\n   * @type {!Array.<module:ol/PluggableMap~PostRenderFunction>}\n   */\n  this.postRenderFunctions_ = [];\n\n  /**\n   * @private\n   * @type {module:ol/TileQueue}\n   */\n  this.tileQueue_ = new TileQueue(\n    this.getTilePriority.bind(this),\n    this.handleTileChange_.bind(this));\n\n  /**\n   * Uids of features to skip at rendering time.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.skippedFeatureUids_ = {};\n\n  listen(\n    this, getChangeEventType(MapProperty.LAYERGROUP),\n    this.handleLayerGroupChanged_, this);\n  listen(this, getChangeEventType(MapProperty.VIEW),\n    this.handleViewChanged_, this);\n  listen(this, getChangeEventType(MapProperty.SIZE),\n    this.handleSizeChanged_, this);\n  listen(this, getChangeEventType(MapProperty.TARGET),\n    this.handleTargetChanged_, this);\n\n  // setProperties will trigger the rendering of the map if the map\n  // is \"defined\" already.\n  this.setProperties(optionsInternal.values);\n\n  this.controls.forEach(\n    /**\n     * @param {module:ol/control/Control} control Control.\n     * @this {module:ol/PluggableMap}\n     */\n    (function(control) {\n      control.setMap(this);\n    }).bind(this));\n\n  listen(this.controls, CollectionEventType.ADD,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      event.element.setMap(this);\n    }, this);\n\n  listen(this.controls, CollectionEventType.REMOVE,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      event.element.setMap(null);\n    }, this);\n\n  this.interactions.forEach(\n    /**\n     * @param {module:ol/interaction/Interaction} interaction Interaction.\n     * @this {module:ol/PluggableMap}\n     */\n    (function(interaction) {\n      interaction.setMap(this);\n    }).bind(this));\n\n  listen(this.interactions, CollectionEventType.ADD,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      event.element.setMap(this);\n    }, this);\n\n  listen(this.interactions, CollectionEventType.REMOVE,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      event.element.setMap(null);\n    }, this);\n\n  this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n  listen(this.overlays_, CollectionEventType.ADD,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      this.addOverlayInternal_(/** @type {module:ol/Overlay} */ (event.element));\n    }, this);\n\n  listen(this.overlays_, CollectionEventType.REMOVE,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      const overlay = /** @type {module:ol/Overlay} */ (event.element);\n      const id = overlay.getId();\n      if (id !== undefined) {\n        delete this.overlayIdIndex_[id.toString()];\n      }\n      event.element.setMap(null);\n    }, this);\n\n};\n\ninherits(PluggableMap, BaseObject);\n\n\nPluggableMap.prototype.createRenderer = function() {\n  throw new Error('Use a map type that has a createRenderer method');\n};\n\n\n/**\n * Add the given control to the map.\n * @param {module:ol/control/Control} control Control.\n * @api\n */\nPluggableMap.prototype.addControl = function(control) {\n  this.getControls().push(control);\n};\n\n\n/**\n * Add the given interaction to the map.\n * @param {module:ol/interaction/Interaction} interaction Interaction to add.\n * @api\n */\nPluggableMap.prototype.addInteraction = function(interaction) {\n  this.getInteractions().push(interaction);\n};\n\n\n/**\n * Adds the given layer to the top of this map. If you want to add a layer\n * elsewhere in the stack, use `getLayers()` and the methods available on\n * {@link module:ol/Collection~Collection}.\n * @param {module:ol/layer/Base} layer Layer.\n * @api\n */\nPluggableMap.prototype.addLayer = function(layer) {\n  const layers = this.getLayerGroup().getLayers();\n  layers.push(layer);\n};\n\n\n/**\n * Add the given overlay to the map.\n * @param {module:ol/Overlay} overlay Overlay.\n * @api\n */\nPluggableMap.prototype.addOverlay = function(overlay) {\n  this.getOverlays().push(overlay);\n};\n\n\n/**\n * This deals with map's overlay collection changes.\n * @param {module:ol/Overlay} overlay Overlay.\n * @private\n */\nPluggableMap.prototype.addOverlayInternal_ = function(overlay) {\n  const id = overlay.getId();\n  if (id !== undefined) {\n    this.overlayIdIndex_[id.toString()] = overlay;\n  }\n  overlay.setMap(this);\n};\n\n\n/**\n *\n * @inheritDoc\n */\nPluggableMap.prototype.disposeInternal = function() {\n  this.mapBrowserEventHandler_.dispose();\n  unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n  unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n  unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n  if (this.handleResize_ !== undefined) {\n    removeEventListener(EventType.RESIZE, this.handleResize_, false);\n    this.handleResize_ = undefined;\n  }\n  if (this.animationDelayKey_) {\n    cancelAnimationFrame(this.animationDelayKey_);\n    this.animationDelayKey_ = undefined;\n  }\n  this.setTarget(null);\n  BaseObject.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Detect features that intersect a pixel on the viewport, and execute a\n * callback with each intersecting feature. Layers included in the detection can\n * be configured through the `layerFilter` option in `opt_options`.\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature),\n *     module:ol/layer/Layer): T} callback Feature callback. The callback will be\n *     called with two arguments. The first argument is one\n *     {@link module:ol/Feature feature} or\n *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n *     unmanaged layers. To stop detection, callback functions can return a\n *     truthy value.\n * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n * @return {T|undefined} Callback result, i.e. the return value of last\n * callback execution, or the first truthy callback return value.\n * @template S,T\n * @api\n */\nPluggableMap.prototype.forEachFeatureAtPixel = function(pixel, callback, opt_options) {\n  if (!this.frameState_) {\n    return;\n  }\n  const coordinate = this.getCoordinateFromPixel(pixel);\n  opt_options = opt_options !== undefined ? opt_options : {};\n  const hitTolerance = opt_options.hitTolerance !== undefined ?\n    opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n  const layerFilter = opt_options.layerFilter !== undefined ?\n    opt_options.layerFilter : TRUE;\n  return this.renderer_.forEachFeatureAtCoordinate(\n    coordinate, this.frameState_, hitTolerance, callback, null,\n    layerFilter, null);\n};\n\n\n/**\n * Get all features that intersect a pixel on the viewport.\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n * @return {Array.<module:ol/Feature|module:ol/render/Feature>} The detected features or\n * `null` if none were found.\n * @api\n */\nPluggableMap.prototype.getFeaturesAtPixel = function(pixel, opt_options) {\n  let features = null;\n  this.forEachFeatureAtPixel(pixel, function(feature) {\n    if (!features) {\n      features = [];\n    }\n    features.push(feature);\n  }, opt_options);\n  return features;\n};\n\n/**\n * Detect layers that have a color value at a pixel on the viewport, and\n * execute a callback with each matching layer. Layers included in the\n * detection can be configured through `opt_layerFilter`.\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback\n *     Layer callback. This callback will receive two arguments: first is the\n *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n *     that do not currently support this argument. To stop detection, callback\n *     functions can return a truthy value.\n * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Configuration options.\n * @return {T|undefined} Callback result, i.e. the return value of last\n * callback execution, or the first truthy callback return value.\n * @template S,T\n * @api\n */\nPluggableMap.prototype.forEachLayerAtPixel = function(pixel, callback, opt_options) {\n  if (!this.frameState_) {\n    return;\n  }\n  const options = opt_options || {};\n  const hitTolerance = options.hitTolerance !== undefined ?\n    opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n  const layerFilter = options.layerFilter || TRUE;\n  return this.renderer_.forEachLayerAtPixel(\n    pixel, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n};\n\n\n/**\n * Detect if features intersect a pixel on the viewport. Layers included in the\n * detection can be configured through `opt_layerFilter`.\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n * @return {boolean} Is there a feature at the given pixel?\n * @template U\n * @api\n */\nPluggableMap.prototype.hasFeatureAtPixel = function(pixel, opt_options) {\n  if (!this.frameState_) {\n    return false;\n  }\n  const coordinate = this.getCoordinateFromPixel(pixel);\n  opt_options = opt_options !== undefined ? opt_options : {};\n  const layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n  const hitTolerance = opt_options.hitTolerance !== undefined ?\n    opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n  return this.renderer_.hasFeatureAtCoordinate(\n    coordinate, this.frameState_, hitTolerance, layerFilter, null);\n};\n\n\n/**\n * Returns the coordinate in view projection for a browser event.\n * @param {Event} event Event.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nPluggableMap.prototype.getEventCoordinate = function(event) {\n  return this.getCoordinateFromPixel(this.getEventPixel(event));\n};\n\n\n/**\n * Returns the map pixel position for a browser event relative to the viewport.\n * @param {Event} event Event.\n * @return {module:ol~Pixel} Pixel.\n * @api\n */\nPluggableMap.prototype.getEventPixel = function(event) {\n  const viewportPosition = this.viewport_.getBoundingClientRect();\n  const eventPosition = event.changedTouches ? event.changedTouches[0] : event;\n  return [\n    eventPosition.clientX - viewportPosition.left,\n    eventPosition.clientY - viewportPosition.top\n  ];\n};\n\n\n/**\n * Get the target in which this map is rendered.\n * Note that this returns what is entered as an option or in setTarget:\n * if that was an element, it returns an element; if a string, it returns that.\n * @return {Element|string|undefined} The Element or id of the Element that the\n *     map is rendered in.\n * @observable\n * @api\n */\nPluggableMap.prototype.getTarget = function() {\n  return /** @type {Element|string|undefined} */ (this.get(MapProperty.TARGET));\n};\n\n\n/**\n * Get the DOM element into which this map is rendered. In contrast to\n * `getTarget` this method always return an `Element`, or `null` if the\n * map has no target.\n * @return {Element} The element that the map is rendered in.\n * @api\n */\nPluggableMap.prototype.getTargetElement = function() {\n  const target = this.getTarget();\n  if (target !== undefined) {\n    return typeof target === 'string' ? document.getElementById(target) : target;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Get the coordinate for a given pixel.  This returns a coordinate in the\n * map view projection.\n * @param {module:ol~Pixel} pixel Pixel position in the map viewport.\n * @return {module:ol/coordinate~Coordinate} The coordinate for the pixel position.\n * @api\n */\nPluggableMap.prototype.getCoordinateFromPixel = function(pixel) {\n  const frameState = this.frameState_;\n  if (!frameState) {\n    return null;\n  } else {\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n};\n\n\n/**\n * Get the map controls. Modifying this collection changes the controls\n * associated with the map.\n * @return {module:ol/Collection.<module:ol/control/Control>} Controls.\n * @api\n */\nPluggableMap.prototype.getControls = function() {\n  return this.controls;\n};\n\n\n/**\n * Get the map overlays. Modifying this collection changes the overlays\n * associated with the map.\n * @return {module:ol/Collection.<module:ol/Overlay>} Overlays.\n * @api\n */\nPluggableMap.prototype.getOverlays = function() {\n  return this.overlays_;\n};\n\n\n/**\n * Get an overlay by its identifier (the value returned by overlay.getId()).\n * Note that the index treats string and numeric identifiers as the same. So\n * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n * @param {string|number} id Overlay identifier.\n * @return {module:ol/Overlay} Overlay.\n * @api\n */\nPluggableMap.prototype.getOverlayById = function(id) {\n  const overlay = this.overlayIdIndex_[id.toString()];\n  return overlay !== undefined ? overlay : null;\n};\n\n\n/**\n * Get the map interactions. Modifying this collection changes the interactions\n * associated with the map.\n *\n * Interactions are used for e.g. pan, zoom and rotate.\n * @return {module:ol/Collection.<module:ol/interaction/Interaction>} Interactions.\n * @api\n */\nPluggableMap.prototype.getInteractions = function() {\n  return this.interactions;\n};\n\n\n/**\n * Get the layergroup associated with this map.\n * @return {module:ol/layer/Group} A layer group containing the layers in this map.\n * @observable\n * @api\n */\nPluggableMap.prototype.getLayerGroup = function() {\n  return (\n    /** @type {module:ol/layer/Group} */ (this.get(MapProperty.LAYERGROUP))\n  );\n};\n\n\n/**\n * Get the collection of layers associated with this map.\n * @return {!module:ol/Collection.<module:ol/layer/Base>} Layers.\n * @api\n */\nPluggableMap.prototype.getLayers = function() {\n  const layers = this.getLayerGroup().getLayers();\n  return layers;\n};\n\n\n/**\n * Get the pixel for a coordinate.  This takes a coordinate in the map view\n * projection and returns the corresponding pixel.\n * @param {module:ol/coordinate~Coordinate} coordinate A map coordinate.\n * @return {module:ol~Pixel} A pixel position in the map viewport.\n * @api\n */\nPluggableMap.prototype.getPixelFromCoordinate = function(coordinate) {\n  const frameState = this.frameState_;\n  if (!frameState) {\n    return null;\n  } else {\n    return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n  }\n};\n\n\n/**\n * Get the map renderer.\n * @return {module:ol/renderer/Map} Renderer\n */\nPluggableMap.prototype.getRenderer = function() {\n  return this.renderer_;\n};\n\n\n/**\n * Get the size of this map.\n * @return {module:ol/size~Size|undefined} The size in pixels of the map in the DOM.\n * @observable\n * @api\n */\nPluggableMap.prototype.getSize = function() {\n  return (\n    /** @type {module:ol/size~Size|undefined} */ (this.get(MapProperty.SIZE))\n  );\n};\n\n\n/**\n * Get the view associated with this map. A view manages properties such as\n * center and resolution.\n * @return {module:ol/View} The view that controls this map.\n * @observable\n * @api\n */\nPluggableMap.prototype.getView = function() {\n  return (\n    /** @type {module:ol/View} */ (this.get(MapProperty.VIEW))\n  );\n};\n\n\n/**\n * Get the element that serves as the map viewport.\n * @return {Element} Viewport.\n * @api\n */\nPluggableMap.prototype.getViewport = function() {\n  return this.viewport_;\n};\n\n\n/**\n * Get the element that serves as the container for overlays.  Elements added to\n * this container will let mousedown and touchstart events through to the map,\n * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n * events.\n * @return {!Element} The map's overlay container.\n */\nPluggableMap.prototype.getOverlayContainer = function() {\n  return this.overlayContainer_;\n};\n\n\n/**\n * Get the element that serves as a container for overlays that don't allow\n * event propagation. Elements added to this container won't let mousedown and\n * touchstart events through to the map, so clicks and gestures on an overlay\n * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n * @return {!Element} The map's overlay container that stops events.\n */\nPluggableMap.prototype.getOverlayContainerStopEvent = function() {\n  return this.overlayContainerStopEvent_;\n};\n\n\n/**\n * @param {module:ol/Tile} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {module:ol/coordinate~Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nPluggableMap.prototype.getTilePriority = function(tile, tileSourceKey, tileCenter, tileResolution) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  const frameState = this.frameState_;\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels\n  // between the center of the tile and the focus.  The factor of 65536 means\n  // that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const deltaX = tileCenter[0] - frameState.focus[0];\n  const deltaY = tileCenter[1] - frameState.focus[1];\n  return 65536 * Math.log(tileResolution) +\n      Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n};\n\n\n/**\n * @param {Event} browserEvent Browser event.\n * @param {string=} opt_type Type.\n */\nPluggableMap.prototype.handleBrowserEvent = function(browserEvent, opt_type) {\n  const type = opt_type || browserEvent.type;\n  const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n  this.handleMapBrowserEvent(mapBrowserEvent);\n};\n\n\n/**\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent The event to handle.\n */\nPluggableMap.prototype.handleMapBrowserEvent = function(mapBrowserEvent) {\n  if (!this.frameState_) {\n    // With no view defined, we cannot translate pixels into geographical\n    // coordinates so interactions cannot be used.\n    return;\n  }\n  this.focus_ = mapBrowserEvent.coordinate;\n  mapBrowserEvent.frameState = this.frameState_;\n  const interactionsArray = this.getInteractions().getArray();\n  if (this.dispatchEvent(mapBrowserEvent) !== false) {\n    for (let i = interactionsArray.length - 1; i >= 0; i--) {\n      const interaction = interactionsArray[i];\n      if (!interaction.getActive()) {\n        continue;\n      }\n      const cont = interaction.handleEvent(mapBrowserEvent);\n      if (!cont) {\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * @protected\n */\nPluggableMap.prototype.handlePostRender = function() {\n\n  const frameState = this.frameState_;\n\n  // Manage the tile queue\n  // Image loads are expensive and a limited resource, so try to use them\n  // efficiently:\n  // * When the view is static we allow a large number of parallel tile loads\n  //   to complete the frame as quickly as possible.\n  // * When animating or interacting, image loads can cause janks, so we reduce\n  //   the maximum number of loads per frame and limit the number of parallel\n  //   tile loads to remain reactive to view changes and to reduce the chance of\n  //   loading tiles that will quickly disappear from view.\n  const tileQueue = this.tileQueue_;\n  if (!tileQueue.isEmpty()) {\n    let maxTotalLoading = this.maxTilesLoading_;\n    let maxNewLoads = maxTotalLoading;\n    if (frameState) {\n      const hints = frameState.viewHints;\n      if (hints[ViewHint.ANIMATING]) {\n        maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n        maxNewLoads = 2;\n      }\n      if (hints[ViewHint.INTERACTING]) {\n        maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n        maxNewLoads = 2;\n      }\n    }\n    if (tileQueue.getTilesLoading() < maxTotalLoading) {\n      tileQueue.reprioritize(); // FIXME only call if view has changed\n      tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n    }\n  }\n\n  const postRenderFunctions = this.postRenderFunctions_;\n  for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n    postRenderFunctions[i](this, frameState);\n  }\n  postRenderFunctions.length = 0;\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleSizeChanged_ = function() {\n  this.render();\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleTargetChanged_ = function() {\n  // target may be undefined, null, a string or an Element.\n  // If it's a string we convert it to an Element before proceeding.\n  // If it's not now an Element we remove the viewport from the DOM.\n  // If it's an Element we append the viewport element to it.\n\n  let targetElement;\n  if (this.getTarget()) {\n    targetElement = this.getTargetElement();\n  }\n\n  if (this.keyHandlerKeys_) {\n    for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n      unlistenByKey(this.keyHandlerKeys_[i]);\n    }\n    this.keyHandlerKeys_ = null;\n  }\n\n  if (!targetElement) {\n    this.renderer_.removeLayerRenderers();\n    removeNode(this.viewport_);\n    if (this.handleResize_ !== undefined) {\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n  } else {\n    targetElement.appendChild(this.viewport_);\n\n    const keyboardEventTarget = !this.keyboardEventTarget_ ?\n      targetElement : this.keyboardEventTarget_;\n    this.keyHandlerKeys_ = [\n      listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n      listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n    ];\n\n    if (!this.handleResize_) {\n      this.handleResize_ = this.updateSize.bind(this);\n      addEventListener(EventType.RESIZE, this.handleResize_, false);\n    }\n  }\n\n  this.updateSize();\n  // updateSize calls setSize, so no need to call this.render\n  // ourselves here.\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleTileChange_ = function() {\n  this.render();\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleViewPropertyChanged_ = function() {\n  this.render();\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleViewChanged_ = function() {\n  if (this.viewPropertyListenerKey_) {\n    unlistenByKey(this.viewPropertyListenerKey_);\n    this.viewPropertyListenerKey_ = null;\n  }\n  if (this.viewChangeListenerKey_) {\n    unlistenByKey(this.viewChangeListenerKey_);\n    this.viewChangeListenerKey_ = null;\n  }\n  const view = this.getView();\n  if (view) {\n    this.viewport_.setAttribute('data-view', getUid(view));\n    this.viewPropertyListenerKey_ = listen(\n      view, ObjectEventType.PROPERTYCHANGE,\n      this.handleViewPropertyChanged_, this);\n    this.viewChangeListenerKey_ = listen(\n      view, EventType.CHANGE,\n      this.handleViewPropertyChanged_, this);\n  }\n  this.render();\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleLayerGroupChanged_ = function() {\n  if (this.layerGroupPropertyListenerKeys_) {\n    this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n    this.layerGroupPropertyListenerKeys_ = null;\n  }\n  const layerGroup = this.getLayerGroup();\n  if (layerGroup) {\n    this.layerGroupPropertyListenerKeys_ = [\n      listen(\n        layerGroup, ObjectEventType.PROPERTYCHANGE,\n        this.render, this),\n      listen(\n        layerGroup, EventType.CHANGE,\n        this.render, this)\n    ];\n  }\n  this.render();\n};\n\n\n/**\n * @return {boolean} Is rendered.\n */\nPluggableMap.prototype.isRendered = function() {\n  return !!this.frameState_;\n};\n\n\n/**\n * Requests an immediate render in a synchronous manner.\n * @api\n */\nPluggableMap.prototype.renderSync = function() {\n  if (this.animationDelayKey_) {\n    cancelAnimationFrame(this.animationDelayKey_);\n  }\n  this.animationDelay_();\n};\n\n\n/**\n * Request a map rendering (at the next animation frame).\n * @api\n */\nPluggableMap.prototype.render = function() {\n  if (this.animationDelayKey_ === undefined) {\n    this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n  }\n};\n\n\n/**\n * Remove the given control from the map.\n * @param {module:ol/control/Control} control Control.\n * @return {module:ol/control/Control|undefined} The removed control (or undefined\n *     if the control was not found).\n * @api\n */\nPluggableMap.prototype.removeControl = function(control) {\n  return this.getControls().remove(control);\n};\n\n\n/**\n * Remove the given interaction from the map.\n * @param {module:ol/interaction/Interaction} interaction Interaction to remove.\n * @return {module:ol/interaction/Interaction|undefined} The removed interaction (or\n *     undefined if the interaction was not found).\n * @api\n */\nPluggableMap.prototype.removeInteraction = function(interaction) {\n  return this.getInteractions().remove(interaction);\n};\n\n\n/**\n * Removes the given layer from the map.\n * @param {module:ol/layer/Base} layer Layer.\n * @return {module:ol/layer/Base|undefined} The removed layer (or undefined if the\n *     layer was not found).\n * @api\n */\nPluggableMap.prototype.removeLayer = function(layer) {\n  const layers = this.getLayerGroup().getLayers();\n  return layers.remove(layer);\n};\n\n\n/**\n * Remove the given overlay from the map.\n * @param {module:ol/Overlay} overlay Overlay.\n * @return {module:ol/Overlay|undefined} The removed overlay (or undefined\n *     if the overlay was not found).\n * @api\n */\nPluggableMap.prototype.removeOverlay = function(overlay) {\n  return this.getOverlays().remove(overlay);\n};\n\n\n/**\n * @param {number} time Time.\n * @private\n */\nPluggableMap.prototype.renderFrame_ = function(time) {\n  let viewState;\n\n  const size = this.getSize();\n  const view = this.getView();\n  const extent = createEmpty();\n  const previousFrameState = this.frameState_;\n  /** @type {?module:ol/PluggableMap~FrameState} */\n  let frameState = null;\n  if (size !== undefined && hasArea(size) && view && view.isDef()) {\n    const viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    const layerStates = {};\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n    }\n    viewState = view.getState();\n    let focus = this.focus_;\n    if (!focus) {\n      focus = viewState.center;\n      const pixelResolution = viewState.resolution / this.pixelRatio_;\n      focus[0] = Math.round(focus[0] / pixelResolution) * pixelResolution;\n      focus[1] = Math.round(focus[1] / pixelResolution) * pixelResolution;\n    }\n    frameState = /** @type {module:ol/PluggableMap~FrameState} */ ({\n      animate: false,\n      coordinateToPixelTransform: this.coordinateToPixelTransform_,\n      extent: extent,\n      focus: focus,\n      index: this.frameIndex_++,\n      layerStates: layerStates,\n      layerStatesArray: layerStatesArray,\n      pixelRatio: this.pixelRatio_,\n      pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n      postRenderFunctions: [],\n      size: size,\n      skippedFeatureUids: this.skippedFeatureUids_,\n      tileQueue: this.tileQueue_,\n      time: time,\n      usedTiles: {},\n      viewState: viewState,\n      viewHints: viewHints,\n      wantedTiles: {}\n    });\n  }\n\n  if (frameState) {\n    frameState.extent = getForViewAndSize(viewState.center,\n      viewState.resolution, viewState.rotation, frameState.size, extent);\n  }\n\n  this.frameState_ = frameState;\n  this.renderer_.renderFrame(frameState);\n\n  if (frameState) {\n    if (frameState.animate) {\n      this.render();\n    }\n    Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n    if (previousFrameState) {\n      const moveStart = !this.previousExtent_ ||\n                  (!isEmpty(this.previousExtent_) &&\n                  !equals(frameState.extent, this.previousExtent_));\n      if (moveStart) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n        this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n      }\n    }\n\n    const idle = this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n    if (idle) {\n      this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n      clone(frameState.extent, this.previousExtent_);\n    }\n  }\n\n  this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n  setTimeout(this.handlePostRender.bind(this), 0);\n\n};\n\n\n/**\n * Sets the layergroup of this map.\n * @param {module:ol/layer/Group} layerGroup A layer group containing the layers in this map.\n * @observable\n * @api\n */\nPluggableMap.prototype.setLayerGroup = function(layerGroup) {\n  this.set(MapProperty.LAYERGROUP, layerGroup);\n};\n\n\n/**\n * Set the size of this map.\n * @param {module:ol/size~Size|undefined} size The size in pixels of the map in the DOM.\n * @observable\n * @api\n */\nPluggableMap.prototype.setSize = function(size) {\n  this.set(MapProperty.SIZE, size);\n};\n\n\n/**\n * Set the target element to render this map into.\n * @param {Element|string|undefined} target The Element or id of the Element\n *     that the map is rendered in.\n * @observable\n * @api\n */\nPluggableMap.prototype.setTarget = function(target) {\n  this.set(MapProperty.TARGET, target);\n};\n\n\n/**\n * Set the view for this map.\n * @param {module:ol/View} view The view that controls this map.\n * @observable\n * @api\n */\nPluggableMap.prototype.setView = function(view) {\n  this.set(MapProperty.VIEW, view);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n */\nPluggableMap.prototype.skipFeature = function(feature) {\n  const featureUid = getUid(feature).toString();\n  this.skippedFeatureUids_[featureUid] = true;\n  this.render();\n};\n\n\n/**\n * Force a recalculation of the map viewport size.  This should be called when\n * third-party code changes the size of the map viewport.\n * @api\n */\nPluggableMap.prototype.updateSize = function() {\n  const targetElement = this.getTargetElement();\n\n  if (!targetElement) {\n    this.setSize(undefined);\n  } else {\n    const computedStyle = getComputedStyle(targetElement);\n    this.setSize([\n      targetElement.offsetWidth -\n          parseFloat(computedStyle['borderLeftWidth']) -\n          parseFloat(computedStyle['paddingLeft']) -\n          parseFloat(computedStyle['paddingRight']) -\n          parseFloat(computedStyle['borderRightWidth']),\n      targetElement.offsetHeight -\n          parseFloat(computedStyle['borderTopWidth']) -\n          parseFloat(computedStyle['paddingTop']) -\n          parseFloat(computedStyle['paddingBottom']) -\n          parseFloat(computedStyle['borderBottomWidth'])\n    ]);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n */\nPluggableMap.prototype.unskipFeature = function(feature) {\n  const featureUid = getUid(feature).toString();\n  delete this.skippedFeatureUids_[featureUid];\n  this.render();\n};\n\n\n/**\n * @param {MapOptions} options Map options.\n * @return {module:ol/PluggableMap~MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n\n  /**\n   * @type {Element|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object.<string, *>}\n   */\n  const values = {};\n\n  const layerGroup = (options.layers instanceof LayerGroup) ?\n    options.layers : new LayerGroup({layers: options.layers});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] = options.view !== undefined ?\n    options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(options.controls instanceof Collection,\n        47); // Expected `controls` to be an array or an `module:ol/Collection~Collection`\n      controls = options.controls;\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(options.interactions instanceof Collection,\n        48); // Expected `interactions` to be an array or an `module:ol/Collection~Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(options.overlays instanceof Collection,\n        49); // Expected `overlays` to be an array or an `module:ol/Collection~Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n\n}\nexport default PluggableMap;\n","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {module:ol/geom/Geometry} geometry A geometry.\n * @param {module:ol/sphere~SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {module:ol/geom/Geometry} geometry A geometry.\n * @param {module:ol/sphere~SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {module:ol/coordinate~Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {module:ol/coordinate~Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  const lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/pointer/MouseSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../util.js';\nimport EventSource from '../pointer/EventSource.js';\n\n/**\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @constructor\n * @extends {module:ol/pointer/EventSource}\n */\nconst MouseSource = function(dispatcher) {\n  const mapping = {\n    'mousedown': this.mousedown,\n    'mousemove': this.mousemove,\n    'mouseup': this.mouseup,\n    'mouseover': this.mouseover,\n    'mouseout': this.mouseout\n  };\n  EventSource.call(this, dispatcher, mapping);\n\n  /**\n   * @const\n   * @type {!Object.<string, Event|Object>}\n   */\n  this.pointerMap = dispatcher.pointerMap;\n\n  /**\n   * @const\n   * @type {Array.<module:ol~Pixel>}\n   */\n  this.lastTouches = [];\n};\n\ninherits(MouseSource, EventSource);\n\n\n/**\n * @type {number}\n */\nexport const POINTER_ID = 1;\n\n\n/**\n * @type {string}\n */\nexport const POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nconst DEDUP_DIST = 25;\n\n\n/**\n * Detect if a mouse event was simulated from a touch by\n * checking if previously there was a touch event at the\n * same position.\n *\n * FIXME - Known problem with the native Android browser on\n * Samsung GT-I9100 (Android 4.1.2):\n * In case the page is scrolled, this function does not work\n * correctly when a canvas is used (WebGL or canvas renderer).\n * Mouse listeners on canvas elements (for this browser), create\n * two mouse events: One 'good' and one 'bad' one (on other browsers or\n * when a div is used, there is only one event). For the 'bad' one,\n * clientX/clientY and also pageX/pageY are wrong when the page\n * is scrolled. Because of that, this function can not detect if\n * the events were simulated from a touch event. As result, a\n * pointer event at a wrong position is dispatched, which confuses\n * the map interactions.\n * It is unclear, how one can get the correct position for the event\n * or detect that the positions are invalid.\n *\n * @private\n * @param {Event} inEvent The in event.\n * @return {boolean} True, if the event was generated by a touch.\n */\nMouseSource.prototype.isEventSimulatedFromTouch_ = function(inEvent) {\n  const lts = this.lastTouches;\n  const x = inEvent.clientX;\n  const y = inEvent.clientY;\n  for (let i = 0, l = lts.length, t; i < l && (t = lts[i]); i++) {\n    // simulated mouse events will be swallowed near a primary touchend\n    const dx = Math.abs(x - t[0]);\n    const dy = Math.abs(y - t[1]);\n    if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nfunction prepareEvent(inEvent, dispatcher) {\n  const e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  const pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n\n  return e;\n}\n\n\n/**\n * Handler for `mousedown`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mousedown = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n};\n\n\n/**\n * Handler for `mousemove`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mousemove = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n};\n\n\n/**\n * Handler for `mouseup`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mouseup = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const p = this.pointerMap[POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      const e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n};\n\n\n/**\n * Handler for `mouseover`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mouseover = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n};\n\n\n/**\n * Handler for `mouseout`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mouseout = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n};\n\n\n/**\n * Dispatches a `pointercancel` event.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.cancel = function(inEvent) {\n  const e = prepareEvent(inEvent, this.dispatcher);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanupMouse();\n};\n\n\n/**\n * Remove the mouse from the list of active pointers.\n */\nMouseSource.prototype.cleanupMouse = function() {\n  delete this.pointerMap[POINTER_ID.toString()];\n};\nexport default MouseSource;\n","/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {inherits} from '../../util.js';\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {TRUE} from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/renderer/Layer}\n * @param {module:ol/layer/Layer} layer Layer.\n */\nconst CanvasLayerRenderer = function(layer) {\n\n  LayerRenderer.call(this, layer);\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.renderedResolution;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.transform_ = createTransform();\n\n};\n\ninherits(CanvasLayerRenderer, LayerRenderer);\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/extent~Extent} extent Clip extent.\n * @protected\n */\nCanvasLayerRenderer.prototype.clip = function(context, frameState, extent) {\n  const pixelRatio = frameState.pixelRatio;\n  const width = frameState.size[0] * pixelRatio;\n  const height = frameState.size[1] * pixelRatio;\n  const rotation = frameState.viewState.rotation;\n  const topLeft = getTopLeft(/** @type {module:ol/extent~Extent} */ (extent));\n  const topRight = getTopRight(/** @type {module:ol/extent~Extent} */ (extent));\n  const bottomRight = getBottomRight(/** @type {module:ol/extent~Extent} */ (extent));\n  const bottomLeft = getBottomLeft(/** @type {module:ol/extent~Extent} */ (extent));\n\n  applyTransform(frameState.coordinateToPixelTransform, topLeft);\n  applyTransform(frameState.coordinateToPixelTransform, topRight);\n  applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n  applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n  context.save();\n  rotateAtOffset(context, -rotation, width / 2, height / 2);\n  context.beginPath();\n  context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n  context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n  context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n  context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n  context.clip();\n  rotateAtOffset(context, rotation, width / 2, height / 2);\n};\n\n\n/**\n * @param {module:ol/render/EventType} type Event type.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/transform~Transform=} opt_transform Transform.\n * @private\n */\nCanvasLayerRenderer.prototype.dispatchComposeEvent_ = function(type, context, frameState, opt_transform) {\n  const layer = this.getLayer();\n  if (layer.hasListener(type)) {\n    const width = frameState.size[0] * frameState.pixelRatio;\n    const height = frameState.size[1] * frameState.pixelRatio;\n    const rotation = frameState.viewState.rotation;\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    const transform = opt_transform !== undefined ?\n      opt_transform : this.getTransform(frameState, 0);\n    const render = new CanvasImmediateRenderer(\n      context, frameState.pixelRatio, frameState.extent, transform,\n      frameState.viewState.rotation);\n    const composeEvent = new RenderEvent(type, render, frameState,\n      context, null);\n    layer.dispatchEvent(composeEvent);\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  }\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n *     callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @return {T|undefined} Callback result.\n * @template S,T,U\n */\nCanvasLayerRenderer.prototype.forEachLayerAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  const hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE, this);\n\n  if (hasFeature) {\n    return callback.call(thisArg, this.getLayer(), null);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {module:ol/transform~Transform=} opt_transform Transform.\n * @protected\n */\nCanvasLayerRenderer.prototype.postCompose = function(context, frameState, layerState, opt_transform) {\n  this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/transform~Transform=} opt_transform Transform.\n * @protected\n */\nCanvasLayerRenderer.prototype.preCompose = function(context, frameState, opt_transform) {\n  this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/transform~Transform=} opt_transform Transform.\n * @protected\n */\nCanvasLayerRenderer.prototype.dispatchRenderEvent = function(context, frameState, opt_transform) {\n  this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {number} offsetX Offset on the x-axis in view coordinates.\n * @protected\n * @return {!module:ol/transform~Transform} Transform.\n */\nCanvasLayerRenderer.prototype.getTransform = function(frameState, offsetX) {\n  const viewState = frameState.viewState;\n  const pixelRatio = frameState.pixelRatio;\n  const dx1 = pixelRatio * frameState.size[0] / 2;\n  const dy1 = pixelRatio * frameState.size[1] / 2;\n  const sx = pixelRatio / viewState.resolution;\n  const sy = -sx;\n  const angle = -viewState.rotation;\n  const dx2 = -viewState.center[0] + offsetX;\n  const dy2 = -viewState.center[1];\n  return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n};\n\n\n/**\n * @abstract\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {CanvasRenderingContext2D} context Context.\n */\nCanvasLayerRenderer.prototype.composeFrame = function(frameState, layerState, context) {};\n\n/**\n * @abstract\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @return {boolean} whether composeFrame should be called.\n */\nCanvasLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {};\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport {inherits} from '../../util.js';\nimport {scale as scaleCoordinate} from '../../coordinate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport {UNDEFINED} from '../../functions.js';\nimport CanvasLayerRenderer from '../canvas/Layer.js';\nimport {create as createTransform, apply as applyTransform} from '../../transform.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/renderer/canvas/Layer}\n * @param {module:ol/layer/Layer} layer Layer.\n */\nconst IntermediateCanvasRenderer = function(layer) {\n\n  CanvasLayerRenderer.call(this, layer);\n\n  /**\n   * @protected\n   * @type {module:ol/transform~Transform}\n   */\n  this.coordinateToCanvasPixelTransform = createTransform();\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.hitCanvasContext_ = null;\n\n};\n\ninherits(IntermediateCanvasRenderer, CanvasLayerRenderer);\n\n\n/**\n * @inheritDoc\n */\nIntermediateCanvasRenderer.prototype.composeFrame = function(frameState, layerState, context) {\n\n  this.preCompose(context, frameState);\n\n  const image = this.getImage();\n  if (image) {\n\n    // clipped rendering if layer extent is set\n    const extent = layerState.extent;\n    const clipped = extent !== undefined &&\n        !containsExtent(extent, frameState.extent) &&\n        intersects(extent, frameState.extent);\n    if (clipped) {\n      this.clip(context, frameState, /** @type {module:ol/extent~Extent} */ (extent));\n    }\n\n    const imageTransform = this.getImageTransform();\n    // for performance reasons, context.save / context.restore is not used\n    // to save and restore the transformation matrix and the opacity.\n    // see http://jsperf.com/context-save-restore-versus-variable\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layerState.opacity;\n\n    // for performance reasons, context.setTransform is only used\n    // when the view is rotated. see http://jsperf.com/canvas-transform\n    const dx = imageTransform[4];\n    const dy = imageTransform[5];\n    const dw = image.width * imageTransform[0];\n    const dh = image.height * imageTransform[3];\n    context.drawImage(image, 0, 0, +image.width, +image.height,\n      Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n    context.globalAlpha = alpha;\n\n    if (clipped) {\n      context.restore();\n    }\n  }\n\n  this.postCompose(context, frameState, layerState);\n};\n\n\n/**\n * @abstract\n * @return {HTMLCanvasElement|HTMLVideoElement|Image} Canvas.\n */\nIntermediateCanvasRenderer.prototype.getImage = function() {};\n\n\n/**\n * @abstract\n * @return {!module:ol/transform~Transform} Image transform.\n */\nIntermediateCanvasRenderer.prototype.getImageTransform = function() {};\n\n\n/**\n * @inheritDoc\n */\nIntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  const layer = this.getLayer();\n  const source = layer.getSource();\n  const resolution = frameState.viewState.resolution;\n  const rotation = frameState.viewState.rotation;\n  const skippedFeatureUids = frameState.skippedFeatureUids;\n  return source.forEachFeatureAtCoordinate(\n    coordinate, resolution, rotation, hitTolerance, skippedFeatureUids,\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @return {?} Callback result.\n     */\n    function(feature) {\n      return callback.call(thisArg, feature, layer);\n    });\n};\n\n\n/**\n * @inheritDoc\n */\nIntermediateCanvasRenderer.prototype.forEachLayerAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  if (!this.getImage()) {\n    return undefined;\n  }\n\n  if (this.getLayer().getSource().forEachFeatureAtCoordinate !== UNDEFINED) {\n    // for ImageCanvas sources use the original hit-detection logic,\n    // so that for example also transparent polygons are detected\n    return CanvasLayerRenderer.prototype.forEachLayerAtCoordinate.apply(this, arguments);\n  } else {\n    const pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n    scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n    const imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(),  imageData);\n    } else {\n      return undefined;\n    }\n  }\n};\n\nexport default IntermediateCanvasRenderer;\n","/**\n * @module ol/geom/Circle\n */\nimport {inherits} from '../util.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinate} from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number=} opt_radius Radius.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Circle = function(center, opt_radius, opt_layout) {\n  SimpleGeometry.call(this);\n  const radius = opt_radius ? opt_radius : 0;\n  this.setCenterAndRadius(center, radius, opt_layout);\n};\n\ninherits(Circle, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/Circle} Clone.\n * @override\n * @api\n */\nCircle.prototype.clone = function() {\n  const circle = new Circle(null);\n  circle.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return circle;\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  const squaredDistance = dx * dx + dy * dy;\n  if (squaredDistance < minSquaredDistance) {\n    if (squaredDistance === 0) {\n      for (let i = 0; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    } else {\n      const delta = this.getRadius() / Math.sqrt(squaredDistance);\n      closestPoint[0] = flatCoordinates[0] + delta * dx;\n      closestPoint[1] = flatCoordinates[1] + delta * dy;\n      for (let i = 2; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    }\n    closestPoint.length = this.stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.containsXY = function(x, y) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  return dx * dx + dy * dy <= this.getRadiusSquared_();\n};\n\n\n/**\n * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n * @return {module:ol/coordinate~Coordinate} Center.\n * @api\n */\nCircle.prototype.getCenter = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.computeExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n  return createOrUpdate(\n    flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n    flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n    extent);\n};\n\n\n/**\n * Return the radius of the circle.\n * @return {number} Radius.\n * @api\n */\nCircle.prototype.getRadius = function() {\n  return Math.sqrt(this.getRadiusSquared_());\n};\n\n\n/**\n * @private\n * @return {number} Radius squared.\n */\nCircle.prototype.getRadiusSquared_ = function() {\n  const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n  const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.getType = function() {\n  return GeometryType.CIRCLE;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.intersectsExtent = function(extent) {\n  const circleExtent = this.getExtent();\n  if (intersects(extent, circleExtent)) {\n    const center = this.getCenter();\n\n    if (extent[0] <= center[0] && extent[2] >= center[0]) {\n      return true;\n    }\n    if (extent[1] <= center[1] && extent[3] >= center[1]) {\n      return true;\n    }\n\n    return forEachCorner(extent, this.intersectsCoordinate, this);\n  }\n  return false;\n\n};\n\n\n/**\n * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @api\n */\nCircle.prototype.setCenter = function(center) {\n  const stride = this.stride;\n  const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n  const flatCoordinates = center.slice();\n  flatCoordinates[stride] = flatCoordinates[0] + radius;\n  for (let i = 1; i < stride; ++i) {\n    flatCoordinates[stride + i] = center[i];\n  }\n  this.setFlatCoordinates(this.layout, flatCoordinates);\n};\n\n\n/**\n * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n * number) of the circle.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} radius Radius.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nCircle.prototype.setCenterAndRadius = function(center, radius, opt_layout) {\n  if (!center) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.getCoordinates = function() {};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nCircle.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\n\n\n/**\n * Set the radius of the circle. The radius is in the units of the projection.\n * @param {number} radius Radius.\n * @api\n */\nCircle.prototype.setRadius = function(radius) {\n  this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n  this.changed();\n};\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {module:ol/proj~ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {module:ol/proj~ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {module:ol/geom/Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport {inherits} from './util.js';\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n *\n * @constructor\n * @extends {module:ol/MapEvent}\n * @param {string} type Event type.\n * @param {module:ol/PluggableMap} map Map.\n * @param {Event} browserEvent Browser event.\n * @param {boolean=} opt_dragging Is the map currently being dragged?\n * @param {?module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n */\nconst MapBrowserEvent = function(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n  MapEvent.call(this, type, map, opt_frameState);\n\n  /**\n   * The original browser event.\n   * @const\n   * @type {Event}\n   * @api\n   */\n  this.originalEvent = browserEvent;\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original browser event.\n   * @type {module:ol~Pixel}\n   * @api\n   */\n  this.pixel = map.getEventPixel(browserEvent);\n\n  /**\n   * The coordinate in view projection corresponding to the original browser event.\n   * @type {module:ol/coordinate~Coordinate}\n   * @api\n   */\n  this.coordinate = map.getCoordinateFromPixel(this.pixel);\n\n  /**\n   * Indicates if the map is currently being dragged. Only set for\n   * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n   *\n   * @type {boolean}\n   * @api\n   */\n  this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n};\n\ninherits(MapBrowserEvent, MapEvent);\n\n\n/**\n * Prevents the default browser action.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault\n * @override\n * @api\n */\nMapBrowserEvent.prototype.preventDefault = function() {\n  MapEvent.prototype.preventDefault.call(this);\n  this.originalEvent.preventDefault();\n};\n\n\n/**\n * Prevents further propagation of the current event.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation\n * @override\n * @api\n */\nMapBrowserEvent.prototype.stopPropagation = function() {\n  MapEvent.prototype.stopPropagation.call(this);\n  this.originalEvent.stopPropagation();\n};\nexport default MapBrowserEvent;\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {function()=} opt_errback Callback on error.\n * @param {string=} opt_callbackParam Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src = url + (url.indexOf('?') == -1 ? '?' : '&') +\n      (opt_callbackParam || 'callback') + '=' + key;\n  const timer = setTimeout(function() {\n    cleanup();\n    if (opt_errback) {\n      opt_errback();\n    }\n  }, 10000);\n  window[key] = function(data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.getElementsByTagName('head')[0].appendChild(script);\n}\n","/**\n * @module ol/structs/LRUCache\n */\nimport {inherits} from '../util.js';\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/EventTarget.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n * @constructor\n * @extends {module:ol/events/EventTarget}\n * @fires module:ol/events/Event~Event\n * @struct\n * @template T\n * @param {number=} opt_highWaterMark High water mark.\n */\nconst LRUCache = function(opt_highWaterMark) {\n\n  EventTarget.call(this);\n\n  /**\n   * @type {number}\n   */\n  this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.count_ = 0;\n\n  /**\n   * @private\n   * @type {!Object.<string, module:ol/structs/LRUCache~Entry>}\n   */\n  this.entries_ = {};\n\n  /**\n   * @private\n   * @type {?module:ol/structs/LRUCache~Entry}\n   */\n  this.oldest_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/structs/LRUCache~Entry}\n   */\n  this.newest_ = null;\n\n};\n\ninherits(LRUCache, EventTarget);\n\n\n/**\n * @return {boolean} Can expire cache.\n */\nLRUCache.prototype.canExpireCache = function() {\n  return this.getCount() > this.highWaterMark;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nLRUCache.prototype.clear = function() {\n  this.count_ = 0;\n  this.entries_ = {};\n  this.oldest_ = null;\n  this.newest_ = null;\n  this.dispatchEvent(EventType.CLEAR);\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Contains key.\n */\nLRUCache.prototype.containsKey = function(key) {\n  return this.entries_.hasOwnProperty(key);\n};\n\n\n/**\n * @param {function(this: S, T, string, module:ol/structs/LRUCache): ?} f The function\n *     to call for every entry from the oldest to the newer. This function takes\n *     3 arguments (the entry value, the entry key and the LRUCache object).\n *     The return value is ignored.\n * @param {S=} opt_this The object to use as `this` in `f`.\n * @template S\n */\nLRUCache.prototype.forEach = function(f, opt_this) {\n  let entry = this.oldest_;\n  while (entry) {\n    f.call(opt_this, entry.value_, entry.key_, this);\n    entry = entry.newer;\n  }\n};\n\n\n/**\n * @param {string} key Key.\n * @return {T} Value.\n */\nLRUCache.prototype.get = function(key) {\n  const entry = this.entries_[key];\n  assert(entry !== undefined,\n    15); // Tried to get a value for a key that does not exist in the cache\n  if (entry === this.newest_) {\n    return entry.value_;\n  } else if (entry === this.oldest_) {\n    this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (this.oldest_.newer);\n    this.oldest_.older = null;\n  } else {\n    entry.newer.older = entry.older;\n    entry.older.newer = entry.newer;\n  }\n  entry.newer = null;\n  entry.older = this.newest_;\n  this.newest_.newer = entry;\n  this.newest_ = entry;\n  return entry.value_;\n};\n\n\n/**\n * Remove an entry from the cache.\n * @param {string} key The entry key.\n * @return {T} The removed entry.\n */\nLRUCache.prototype.remove = function(key) {\n  const entry = this.entries_[key];\n  assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n  if (entry === this.newest_) {\n    this.newest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.older);\n    if (this.newest_) {\n      this.newest_.newer = null;\n    }\n  } else if (entry === this.oldest_) {\n    this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.newer);\n    if (this.oldest_) {\n      this.oldest_.older = null;\n    }\n  } else {\n    entry.newer.older = entry.older;\n    entry.older.newer = entry.newer;\n  }\n  delete this.entries_[key];\n  --this.count_;\n  return entry.value_;\n};\n\n\n/**\n * @return {number} Count.\n */\nLRUCache.prototype.getCount = function() {\n  return this.count_;\n};\n\n\n/**\n * @return {Array.<string>} Keys.\n */\nLRUCache.prototype.getKeys = function() {\n  const keys = new Array(this.count_);\n  let i = 0;\n  let entry;\n  for (entry = this.newest_; entry; entry = entry.older) {\n    keys[i++] = entry.key_;\n  }\n  return keys;\n};\n\n\n/**\n * @return {Array.<T>} Values.\n */\nLRUCache.prototype.getValues = function() {\n  const values = new Array(this.count_);\n  let i = 0;\n  let entry;\n  for (entry = this.newest_; entry; entry = entry.older) {\n    values[i++] = entry.value_;\n  }\n  return values;\n};\n\n\n/**\n * @return {T} Last value.\n */\nLRUCache.prototype.peekLast = function() {\n  return this.oldest_.value_;\n};\n\n\n/**\n * @return {string} Last key.\n */\nLRUCache.prototype.peekLastKey = function() {\n  return this.oldest_.key_;\n};\n\n\n/**\n * Get the key of the newest item in the cache.  Throws if the cache is empty.\n * @return {string} The newest key.\n */\nLRUCache.prototype.peekFirstKey = function() {\n  return this.newest_.key_;\n};\n\n\n/**\n * @return {T} value Value.\n */\nLRUCache.prototype.pop = function() {\n  const entry = this.oldest_;\n  delete this.entries_[entry.key_];\n  if (entry.newer) {\n    entry.newer.older = null;\n  }\n  this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.newer);\n  if (!this.oldest_) {\n    this.newest_ = null;\n  }\n  --this.count_;\n  return entry.value_;\n};\n\n\n/**\n * @param {string} key Key.\n * @param {T} value Value.\n */\nLRUCache.prototype.replace = function(key, value) {\n  this.get(key);  // update `newest_`\n  this.entries_[key].value_ = value;\n};\n\n\n/**\n * @param {string} key Key.\n * @param {T} value Value.\n */\nLRUCache.prototype.set = function(key, value) {\n  assert(!(key in this.entries_),\n    16); // Tried to set a value for a key that is used already\n  const entry = /** @type {module:ol/structs/LRUCache~Entry} */ ({\n    key_: key,\n    newer: null,\n    older: this.newest_,\n    value_: value\n  });\n  if (!this.newest_) {\n    this.oldest_ = entry;\n  } else {\n    this.newest_.newer = entry;\n  }\n  this.newest_ = entry;\n  this.entries_[key] = entry;\n  ++this.count_;\n};\n\n\n/**\n * Set a maximum number of entries for the cache.\n * @param {number} size Cache size.\n * @api\n */\nLRUCache.prototype.setSize = function(size) {\n  this.highWaterMark = size;\n};\n\n\n/**\n * Prune the cache.\n */\nLRUCache.prototype.prune = function() {\n  while (this.canExpireCache()) {\n    this.pop();\n  }\n};\nexport default LRUCache;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from '../flat/contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array.<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array.<number>} flatCenters Flat centers.\n * @return {Array.<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nconst Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../util.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...module:ol/format/filter/Filter} conditions Conditions.\n * @extends {module:ol/format/filter/Filter}\n */\nconst LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @type {Array.<module:ol/format/filter/Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../util.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...module:ol/format/filter/Filter} conditions Conditions.\n * @extends {module:ol/format/filter/LogicalNary}\n */\nconst And = function(conditions) {\n  const params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../util.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!module:ol/extent~Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {module:ol/format/filter/Filter}\n * @api\n */\nconst Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../util.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!module:ol/geom/Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {module:ol/format/filter/Filter}\n */\nconst Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @type {module:ol/geom/Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../util.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!module:ol/geom/Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {module:ol/format/filter/Spatial}\n * @api\n */\nconst Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../util.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {module:ol/format/filter/Filter}\n */\nconst Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../util.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {module:ol/format/filter/Comparison}\n * @api\n */\nconst During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../util.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {module:ol/format/filter/Comparison}\n */\nconst ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../util.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {module:ol/format/filter/ComparisonBinary}\n * @api\n */\nconst EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../util.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {module:ol/format/filter/ComparisonBinary}\n * @api\n */\nconst GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../util.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {module:ol/format/filter/ComparisonBinary}\n * @api\n */\nconst GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../util.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!module:ol/geom/Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {module:ol/format/filter/Spatial}\n * @api\n */\nconst Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../util.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {module:ol/format/filter/Comparison}\n * @api\n */\nconst IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../util.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {module:ol/format/filter/Comparison}\n * @api\n */\nconst IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../util.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {module:ol/format/filter/Comparison}\n * @api\n */\nconst IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../util.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {module:ol/format/filter/ComparisonBinary}\n * @api\n */\nconst LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../util.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {module:ol/format/filter/ComparisonBinary}\n * @api\n */\nconst LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../util.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!module:ol/format/filter/Filter} condition Filter condition.\n * @extends {module:ol/format/filter/Filter}\n * @api\n */\nconst Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @type {!module:ol/format/filter/Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../util.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {module:ol/format/filter/ComparisonBinary}\n * @api\n */\nconst NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../util.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...module:ol/format/filter/Filter} conditions Conditions.\n * @extends {module:ol/format/filter/LogicalNary}\n * @api\n */\nconst Or = function(conditions) {\n  const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../util.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!module:ol/geom/Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {module:ol/format/filter/Spatial}\n * @api\n */\nconst Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n","/**\n * @module ol/format/filter\n */\nimport And from '../format/filter/And.js';\nimport Bbox from '../format/filter/Bbox.js';\nimport Contains from '../format/filter/Contains.js';\nimport During from '../format/filter/During.js';\nimport EqualTo from '../format/filter/EqualTo.js';\nimport GreaterThan from '../format/filter/GreaterThan.js';\nimport GreaterThanOrEqualTo from '../format/filter/GreaterThanOrEqualTo.js';\nimport Intersects from '../format/filter/Intersects.js';\nimport IsBetween from '../format/filter/IsBetween.js';\nimport IsLike from '../format/filter/IsLike.js';\nimport IsNull from '../format/filter/IsNull.js';\nimport LessThan from '../format/filter/LessThan.js';\nimport LessThanOrEqualTo from '../format/filter/LessThanOrEqualTo.js';\nimport Not from '../format/filter/Not.js';\nimport NotEqualTo from '../format/filter/NotEqualTo.js';\nimport Or from '../format/filter/Or.js';\nimport Within from '../format/filter/Within.js';\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...module:ol/format/filter/Filter} conditions Filter conditions.\n * @returns {!module:ol/format/filter/And} `<And>` operator.\n * @api\n */\nexport function and(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(And, params));\n}\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...module:ol/format/filter/Filter} conditions Filter conditions.\n * @returns {!module:ol/format/filter/Or} `<Or>` operator.\n * @api\n */\nexport function or(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(Or, params));\n}\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!module:ol/format/filter/Filter} condition Filter condition.\n * @returns {!module:ol/format/filter/Not} `<Not>` operator.\n * @api\n */\nexport function not(condition) {\n  return new Not(condition);\n}\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!module:ol/extent~Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!module:ol/format/filter/Bbox} `<BBOX>` operator.\n * @api\n */\nexport function bbox(geometryName, extent, opt_srsName) {\n  return new Bbox(geometryName, extent, opt_srsName);\n}\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!module:ol/geom/Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!module:ol/format/filter/Contains} `<Contains>` operator.\n * @api\n */\nexport function contains(geometryName, geometry, opt_srsName) {\n  return new Contains(geometryName, geometry, opt_srsName);\n}\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!module:ol/geom/Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!module:ol/format/filter/Intersects} `<Intersects>` operator.\n * @api\n */\nexport function intersects(geometryName, geometry, opt_srsName) {\n  return new Intersects(geometryName, geometry, opt_srsName);\n}\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!module:ol/geom/Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!module:ol/format/filter/Within} `<Within>` operator.\n * @api\n */\nexport function within(geometryName, geometry, opt_srsName) {\n  return new Within(geometryName, geometry, opt_srsName);\n}\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!module:ol/format/filter/EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\nexport function equalTo(propertyName, expression, opt_matchCase) {\n  return new EqualTo(propertyName, expression, opt_matchCase);\n}\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!module:ol/format/filter/NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\nexport function notEqualTo(propertyName, expression, opt_matchCase) {\n  return new NotEqualTo(propertyName, expression, opt_matchCase);\n}\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!module:ol/format/filter/LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\nexport function lessThan(propertyName, expression) {\n  return new LessThan(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!module:ol/format/filter/LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\nexport function lessThanOrEqualTo(propertyName, expression) {\n  return new LessThanOrEqualTo(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!module:ol/format/filter/GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\nexport function greaterThan(propertyName, expression) {\n  return new GreaterThan(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!module:ol/format/filter/GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\nexport function greaterThanOrEqualTo(propertyName, expression) {\n  return new GreaterThanOrEqualTo(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!module:ol/format/filter/IsNull} `<PropertyIsNull>` operator.\n * @api\n */\nexport function isNull(propertyName) {\n  return new IsNull(propertyName);\n}\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!module:ol/format/filter/IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\nexport function between(propertyName, lowerBoundary, upperBoundary) {\n  return new IsBetween(propertyName, lowerBoundary, upperBoundary);\n}\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!module:ol/format/filter/IsLike} `<PropertyIsLike>` operator.\n * @api\n */\nexport function like(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new IsLike(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n}\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!module:ol/format/filter/During} `<During>` operator.\n * @api\n */\nexport function during(propertyName, begin, end) {\n  return new During(propertyName, begin, end);\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n","/**\n * @module ol/geom/flat/geodesic\n */\nimport {squaredSegmentDistance, toRadians, toDegrees} from '../../math.js';\nimport {get as getProjection, getTransform} from '../../proj.js';\n\n\n/**\n * @param {function(number): module:ol/coordinate~Coordinate} interpolate Interpolate function.\n * @param {module:ol/proj~TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array.<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n  // FIXME reduce garbage generation\n  // FIXME optimize stack operations\n\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n\n  let geoA = interpolate(0);\n  let geoB = interpolate(1);\n\n  let a = transform(geoA);\n  let b = transform(geoB);\n\n  /** @type {Array.<module:ol/coordinate~Coordinate>} */\n  const geoStack = [geoB, geoA];\n  /** @type {Array.<module:ol/coordinate~Coordinate>} */\n  const stack = [b, a];\n  /** @type {Array.<number>} */\n  const fractionStack = [1, 0];\n\n  /** @type {!Object.<string, boolean>} */\n  const fractions = {};\n\n  let maxIterations = 1e5;\n  let geoM, m, fracA, fracB, fracM, key;\n\n  while (--maxIterations > 0 && fractionStack.length > 0) {\n    // Pop the a coordinate off the stack\n    fracA = fractionStack.pop();\n    geoA = geoStack.pop();\n    a = stack.pop();\n    // Add the a coordinate if it has not been added yet\n    key = fracA.toString();\n    if (!(key in fractions)) {\n      flatCoordinates.push(a[0], a[1]);\n      fractions[key] = true;\n    }\n    // Pop the b coordinate off the stack\n    fracB = fractionStack.pop();\n    geoB = geoStack.pop();\n    b = stack.pop();\n    // Find the m point between the a and b coordinates\n    fracM = (fracA + fracB) / 2;\n    geoM = interpolate(fracM);\n    m = transform(geoM);\n    if (squaredSegmentDistance(m[0], m[1], a[0], a[1],\n      b[0], b[1]) < squaredTolerance) {\n      // If the m point is sufficiently close to the straight line, then we\n      // discard it.  Just use the b coordinate and move on to the next line\n      // segment.\n      flatCoordinates.push(b[0], b[1]);\n      key = fracB.toString();\n      fractions[key] = true;\n    } else {\n      // Otherwise, we need to subdivide the current line segment.  Split it\n      // into two and push the two line segments onto the stack.\n      fractionStack.push(fracB, fracM, fracM, fracA);\n      stack.push(b, m, m, a);\n      geoStack.push(geoB, geoM, geoM, geoA);\n    }\n  }\n\n  return flatCoordinates;\n}\n\n\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array.<number>} Flat coordinates.\n */\nexport function greatCircleArc(lon1, lat1, lon2, lat2, projection, squaredTolerance) {\n  const geoProjection = getProjection('EPSG:4326');\n\n  const cosLat1 = Math.cos(toRadians(lat1));\n  const sinLat1 = Math.sin(toRadians(lat1));\n  const cosLat2 = Math.cos(toRadians(lat2));\n  const sinLat2 = Math.sin(toRadians(lat2));\n  const cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n  const sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n  const d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {module:ol/coordinate~Coordinate} Coordinate.\n     */\n    function(frac) {\n      if (1 <= d) {\n        return [lon2, lat2];\n      }\n      const D = frac * Math.acos(d);\n      const cosD = Math.cos(D);\n      const sinD = Math.sin(D);\n      const y = sinDeltaLon * cosLat2;\n      const x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n      const theta = Math.atan2(y, x);\n      const lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n      const lon = toRadians(lon1) +\n            Math.atan2(Math.sin(theta) * sinD * cosLat1,\n              cosD - sinLat1 * Math.sin(lat));\n      return [toDegrees(lon), toDegrees(lat)];\n    }, getTransform(geoProjection, projection), squaredTolerance);\n}\n\n\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array.<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {module:ol/coordinate~Coordinate} Coordinate.\n     */\n    function(frac) {\n      return [lon, lat1 + ((lat2 - lat1) * frac)];\n    },\n    getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n\n\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array.<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {module:ol/coordinate~Coordinate} Coordinate.\n     */\n    function(frac) {\n      return [lon1 + ((lon2 - lon1) * frac), lat];\n    },\n    getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n","/**\n * @module ol/Graticule\n */\nimport {degreesToStringHDMS} from './coordinate.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {intersects, getCenter} from './extent.js';\nimport GeometryLayout from './geom/GeometryLayout.js';\nimport LineString from './geom/LineString.js';\nimport Point from './geom/Point.js';\nimport {meridian, parallel} from './geom/flat/geodesic.js';\nimport {clamp} from './math.js';\nimport {get as getProjection, equivalent as equivalentProjection, getTransform, transformExtent} from './proj.js';\nimport RenderEventType from './render/EventType.js';\nimport Fill from './style/Fill.js';\nimport Stroke from './style/Stroke.js';\nimport Text from './style/Text.js';\n\n\n/**\n * @type {module:ol/style/Stroke}\n * @private\n * @const\n */\nconst DEFAULT_STROKE_STYLE = new Stroke({\n  color: 'rgba(0,0,0,0.2)'\n});\n\n/**\n * TODO can be configurable\n * @type {Array.<number>}\n * @private\n */\nconst INTERVALS = [\n  90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001\n];\n\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {module:ol/geom/Point} geom\n * @property {string} text\n */\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/PluggableMap} [map] Reference to an\n * {@link module:ol/Map~Map} object.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {module:ol/style/Stroke} [strokeStyle='rgba(0,0,0,0.2)'] The\n * stroke style to use for drawing the graticule. If not provided, a not fully\n * opaque black will be used.\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {module:ol/style/Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {module:ol/style/Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n */\n\n\n/**\n * Render a grid for a coordinate system on a map.\n * @constructor\n * @param {module:ol/Graticule~Options=} opt_options Options.\n * @api\n */\nconst Graticule = function(opt_options) {\n  const options = opt_options || {};\n\n  /**\n   * @type {module:ol/PluggableMap}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?module:ol/events~EventsKey}\n   * @private\n   */\n  this.postcomposeListenerKey_ = null;\n\n  /**\n   * @type {module:ol/proj/Projection}\n   */\n  this.projection_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLat_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLon_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLat_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLon_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLatP_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLonP_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLatP_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLonP_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.targetSize_ = options.targetSize !== undefined ? options.targetSize : 100;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n\n  /**\n   * @type {Array.<module:ol/geom/LineString>}\n   * @private\n   */\n  this.meridians_ = [];\n\n  /**\n   * @type {Array.<module:ol/geom/LineString>}\n   * @private\n   */\n  this.parallels_ = [];\n\n  /**\n   * @type {module:ol/style/Stroke}\n   * @private\n   */\n  this.strokeStyle_ = options.strokeStyle !== undefined ? options.strokeStyle : DEFAULT_STROKE_STYLE;\n\n  /**\n   * @type {module:ol/proj~TransformFunction|undefined}\n   * @private\n   */\n  this.fromLonLatTransform_ = undefined;\n\n  /**\n   * @type {module:ol/proj~TransformFunction|undefined}\n   * @private\n   */\n  this.toLonLatTransform_ = undefined;\n\n  /**\n   * @type {module:ol/coordinate~Coordinate}\n   * @private\n   */\n  this.projectionCenterLonLat_ = null;\n\n  /**\n   * @type {Array.<module:ol/Graticule~GraticuleLabelDataType>}\n   * @private\n   */\n  this.meridiansLabels_ = null;\n\n  /**\n   * @type {Array.<module:ol/Graticule~GraticuleLabelDataType>}\n   * @private\n   */\n  this.parallelsLabels_ = null;\n\n  if (options.showLabels == true) {\n\n    /**\n     * @type {null|function(number):string}\n     * @private\n     */\n    this.lonLabelFormatter_ = options.lonLabelFormatter == undefined ?\n      degreesToStringHDMS.bind(this, 'EW') : options.lonLabelFormatter;\n\n    /**\n     * @type {function(number):string}\n     * @private\n     */\n    this.latLabelFormatter_ = options.latLabelFormatter == undefined ?\n      degreesToStringHDMS.bind(this, 'NS') : options.latLabelFormatter;\n\n    /**\n     * Longitude label position in fractions (0..1) of view extent. 0 means\n     * bottom, 1 means top.\n     * @type {number}\n     * @private\n     */\n    this.lonLabelPosition_ = options.lonLabelPosition == undefined ? 0 :\n      options.lonLabelPosition;\n\n    /**\n     * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n     * means right.\n     * @type {number}\n     * @private\n     */\n    this.latLabelPosition_ = options.latLabelPosition == undefined ? 1 :\n      options.latLabelPosition;\n\n    /**\n     * @type {module:ol/style/Text}\n     * @private\n     */\n    this.lonLabelStyle_ = options.lonLabelStyle !== undefined ? options.lonLabelStyle :\n      new Text({\n        font: '12px Calibri,sans-serif',\n        textBaseline: 'bottom',\n        fill: new Fill({\n          color: 'rgba(0,0,0,1)'\n        }),\n        stroke: new Stroke({\n          color: 'rgba(255,255,255,1)',\n          width: 3\n        })\n      });\n\n    /**\n     * @type {module:ol/style/Text}\n     * @private\n     */\n    this.latLabelStyle_ = options.latLabelStyle !== undefined ? options.latLabelStyle :\n      new Text({\n        font: '12px Calibri,sans-serif',\n        textAlign: 'end',\n        fill: new Fill({\n          color: 'rgba(0,0,0,1)'\n        }),\n        stroke: new Stroke({\n          color: 'rgba(255,255,255,1)',\n          width: 3\n        })\n      });\n\n    this.meridiansLabels_ = [];\n    this.parallelsLabels_ = [];\n  }\n\n  this.setMap(options.map !== undefined ? options.map : null);\n};\n\n\n/**\n * @param {number} lon Longitude.\n * @param {number} minLat Minimal latitude.\n * @param {number} maxLat Maximal latitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} index Index.\n * @return {number} Index.\n * @private\n */\nGraticule.prototype.addMeridian_ = function(lon, minLat, maxLat, squaredTolerance, extent, index) {\n  const lineString = this.getMeridian_(lon, minLat, maxLat, squaredTolerance, index);\n  if (intersects(lineString.getExtent(), extent)) {\n    if (this.meridiansLabels_) {\n      const textPoint = this.getMeridianPoint_(lineString, extent, index);\n      this.meridiansLabels_[index] = {\n        geom: textPoint,\n        text: this.lonLabelFormatter_(lon)\n      };\n    }\n    this.meridians_[index++] = lineString;\n  }\n  return index;\n};\n\n/**\n * @param {module:ol/geom/LineString} lineString Meridian\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} index Index.\n * @return {module:ol/geom/Point} Meridian point.\n * @private\n */\nGraticule.prototype.getMeridianPoint_ = function(lineString, extent, index) {\n  const flatCoordinates = lineString.getFlatCoordinates();\n  const clampedBottom = Math.max(extent[1], flatCoordinates[1]);\n  const clampedTop = Math.min(extent[3], flatCoordinates[flatCoordinates.length - 1]);\n  const lat = clamp(\n    extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\n    clampedBottom, clampedTop);\n  const coordinate = [flatCoordinates[0], lat];\n  const point = this.meridiansLabels_[index] !== undefined ?\n    this.meridiansLabels_[index].geom : new Point(null);\n  point.setCoordinates(coordinate);\n  return point;\n};\n\n\n/**\n * @param {number} lat Latitude.\n * @param {number} minLon Minimal longitude.\n * @param {number} maxLon Maximal longitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} index Index.\n * @return {number} Index.\n * @private\n */\nGraticule.prototype.addParallel_ = function(lat, minLon, maxLon, squaredTolerance, extent, index) {\n  const lineString = this.getParallel_(lat, minLon, maxLon, squaredTolerance, index);\n  if (intersects(lineString.getExtent(), extent)) {\n    if (this.parallelsLabels_) {\n      const textPoint = this.getParallelPoint_(lineString, extent, index);\n      this.parallelsLabels_[index] = {\n        geom: textPoint,\n        text: this.latLabelFormatter_(lat)\n      };\n    }\n    this.parallels_[index++] = lineString;\n  }\n  return index;\n};\n\n\n/**\n * @param {module:ol/geom/LineString} lineString Parallels.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} index Index.\n * @return {module:ol/geom/Point} Parallel point.\n * @private\n */\nGraticule.prototype.getParallelPoint_ = function(lineString, extent, index) {\n  const flatCoordinates = lineString.getFlatCoordinates();\n  const clampedLeft = Math.max(extent[0], flatCoordinates[0]);\n  const clampedRight = Math.min(extent[2], flatCoordinates[flatCoordinates.length - 2]);\n  const lon = clamp(\n    extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\n    clampedLeft, clampedRight);\n  const coordinate = [lon, flatCoordinates[1]];\n  const point = this.parallelsLabels_[index] !== undefined ?\n    this.parallelsLabels_[index].geom : new Point(null);\n  point.setCoordinates(coordinate);\n  return point;\n};\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} squaredTolerance Squared tolerance.\n * @private\n */\nGraticule.prototype.createGraticule_ = function(extent, center, resolution, squaredTolerance) {\n\n  const interval = this.getInterval_(resolution);\n  if (interval == -1) {\n    this.meridians_.length = this.parallels_.length = 0;\n    if (this.meridiansLabels_) {\n      this.meridiansLabels_.length = 0;\n    }\n    if (this.parallelsLabels_) {\n      this.parallelsLabels_.length = 0;\n    }\n    return;\n  }\n\n  const centerLonLat = this.toLonLatTransform_(center);\n  let centerLon = centerLonLat[0];\n  let centerLat = centerLonLat[1];\n  const maxLines = this.maxLines_;\n  let cnt, idx, lat, lon;\n\n  let validExtent = [\n    Math.max(extent[0], this.minLonP_),\n    Math.max(extent[1], this.minLatP_),\n    Math.min(extent[2], this.maxLonP_),\n    Math.min(extent[3], this.maxLatP_)\n  ];\n\n  validExtent = transformExtent(validExtent, this.projection_, 'EPSG:4326');\n  const maxLat = validExtent[3];\n  const maxLon = validExtent[2];\n  const minLat = validExtent[1];\n  const minLon = validExtent[0];\n\n  // Create meridians\n\n  centerLon = Math.floor(centerLon / interval) * interval;\n  lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n  idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n\n  cnt = 0;\n  while (lon != this.minLon_ && cnt++ < maxLines) {\n    lon = Math.max(lon - interval, this.minLon_);\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n  }\n\n  lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n  cnt = 0;\n  while (lon != this.maxLon_ && cnt++ < maxLines) {\n    lon = Math.min(lon + interval, this.maxLon_);\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n  }\n\n  this.meridians_.length = idx;\n  if (this.meridiansLabels_) {\n    this.meridiansLabels_.length = idx;\n  }\n\n  // Create parallels\n\n  centerLat = Math.floor(centerLat / interval) * interval;\n  lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n  idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n\n  cnt = 0;\n  while (lat != this.minLat_ && cnt++ < maxLines) {\n    lat = Math.max(lat - interval, this.minLat_);\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n  }\n\n  lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n  cnt = 0;\n  while (lat != this.maxLat_ && cnt++ < maxLines) {\n    lat = Math.min(lat + interval, this.maxLat_);\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n  }\n\n  this.parallels_.length = idx;\n  if (this.parallelsLabels_) {\n    this.parallelsLabels_.length = idx;\n  }\n\n};\n\n\n/**\n * @param {number} resolution Resolution.\n * @return {number} The interval in degrees.\n * @private\n */\nGraticule.prototype.getInterval_ = function(resolution) {\n  const centerLon = this.projectionCenterLonLat_[0];\n  const centerLat = this.projectionCenterLonLat_[1];\n  let interval = -1;\n  const target = Math.pow(this.targetSize_ * resolution, 2);\n  /** @type {Array.<number>} **/\n  const p1 = [];\n  /** @type {Array.<number>} **/\n  const p2 = [];\n  for (let i = 0, ii = INTERVALS.length; i < ii; ++i) {\n    const delta = INTERVALS[i] / 2;\n    p1[0] = centerLon - delta;\n    p1[1] = centerLat - delta;\n    p2[0] = centerLon + delta;\n    p2[1] = centerLat + delta;\n    this.fromLonLatTransform_(p1, p1);\n    this.fromLonLatTransform_(p2, p2);\n    const dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n    if (dist <= target) {\n      break;\n    }\n    interval = INTERVALS[i];\n  }\n  return interval;\n};\n\n\n/**\n * Get the map associated with this graticule.\n * @return {module:ol/PluggableMap} The map.\n * @api\n */\nGraticule.prototype.getMap = function() {\n  return this.map_;\n};\n\n\n/**\n * @param {number} lon Longitude.\n * @param {number} minLat Minimal latitude.\n * @param {number} maxLat Maximal latitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {module:ol/geom/LineString} The meridian line string.\n * @param {number} index Index.\n * @private\n */\nGraticule.prototype.getMeridian_ = function(lon, minLat, maxLat, squaredTolerance, index) {\n  const flatCoordinates = meridian(lon, minLat, maxLat, this.projection_, squaredTolerance);\n  const lineString = this.meridians_[index] !== undefined ? this.meridians_[index] : new LineString(null);\n  lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Get the list of meridians.  Meridians are lines of equal longitude.\n * @return {Array.<module:ol/geom/LineString>} The meridians.\n * @api\n */\nGraticule.prototype.getMeridians = function() {\n  return this.meridians_;\n};\n\n\n/**\n * @param {number} lat Latitude.\n * @param {number} minLon Minimal longitude.\n * @param {number} maxLon Maximal longitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {module:ol/geom/LineString} The parallel line string.\n * @param {number} index Index.\n * @private\n */\nGraticule.prototype.getParallel_ = function(lat, minLon, maxLon, squaredTolerance, index) {\n  const flatCoordinates = parallel(lat, minLon, maxLon, this.projection_, squaredTolerance);\n  const lineString = this.parallels_[index] !== undefined ? this.parallels_[index] : new LineString(null);\n  lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Get the list of parallels.  Parallels are lines of equal latitude.\n * @return {Array.<module:ol/geom/LineString>} The parallels.\n * @api\n */\nGraticule.prototype.getParallels = function() {\n  return this.parallels_;\n};\n\n\n/**\n * @param {module:ol/render/Event} e Event.\n * @private\n */\nGraticule.prototype.handlePostCompose_ = function(e) {\n  const vectorContext = e.vectorContext;\n  const frameState = e.frameState;\n  const extent = frameState.extent;\n  const viewState = frameState.viewState;\n  const center = viewState.center;\n  const projection = viewState.projection;\n  const resolution = viewState.resolution;\n  const pixelRatio = frameState.pixelRatio;\n  const squaredTolerance =\n      resolution * resolution / (4 * pixelRatio * pixelRatio);\n\n  const updateProjectionInfo = !this.projection_ ||\n      !equivalentProjection(this.projection_, projection);\n\n  if (updateProjectionInfo) {\n    this.updateProjectionInfo_(projection);\n  }\n\n  this.createGraticule_(extent, center, resolution, squaredTolerance);\n\n  // Draw the lines\n  vectorContext.setFillStrokeStyle(null, this.strokeStyle_);\n  let i, l, line;\n  for (i = 0, l = this.meridians_.length; i < l; ++i) {\n    line = this.meridians_[i];\n    vectorContext.drawGeometry(line);\n  }\n  for (i = 0, l = this.parallels_.length; i < l; ++i) {\n    line = this.parallels_[i];\n    vectorContext.drawGeometry(line);\n  }\n  let labelData;\n  if (this.meridiansLabels_) {\n    for (i = 0, l = this.meridiansLabels_.length; i < l; ++i) {\n      labelData = this.meridiansLabels_[i];\n      this.lonLabelStyle_.setText(labelData.text);\n      vectorContext.setTextStyle(this.lonLabelStyle_);\n      vectorContext.drawGeometry(labelData.geom);\n    }\n  }\n  if (this.parallelsLabels_) {\n    for (i = 0, l = this.parallelsLabels_.length; i < l; ++i) {\n      labelData = this.parallelsLabels_[i];\n      this.latLabelStyle_.setText(labelData.text);\n      vectorContext.setTextStyle(this.latLabelStyle_);\n      vectorContext.drawGeometry(labelData.geom);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @private\n */\nGraticule.prototype.updateProjectionInfo_ = function(projection) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n\n  const worldExtent = projection.getWorldExtent();\n  const worldExtentP = transformExtent(worldExtent, epsg4326Projection, projection);\n\n  this.maxLat_ = worldExtent[3];\n  this.maxLon_ = worldExtent[2];\n  this.minLat_ = worldExtent[1];\n  this.minLon_ = worldExtent[0];\n\n  this.maxLatP_ = worldExtentP[3];\n  this.maxLonP_ = worldExtentP[2];\n  this.minLatP_ = worldExtentP[1];\n  this.minLonP_ = worldExtentP[0];\n\n  this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n\n  this.toLonLatTransform_ = getTransform(projection, epsg4326Projection);\n\n  this.projectionCenterLonLat_ = this.toLonLatTransform_(getCenter(projection.getExtent()));\n\n  this.projection_ = projection;\n};\n\n\n/**\n * Set the map for this graticule.  The graticule will be rendered on the\n * provided map.\n * @param {module:ol/PluggableMap} map Map.\n * @api\n */\nGraticule.prototype.setMap = function(map) {\n  if (this.map_) {\n    unlistenByKey(this.postcomposeListenerKey_);\n    this.postcomposeListenerKey_ = null;\n    this.map_.render();\n  }\n  if (map) {\n    this.postcomposeListenerKey_ = listen(map, RenderEventType.POSTCOMPOSE, this.handlePostCompose_, this);\n    map.render();\n  }\n  this.map_ = map;\n};\nexport default Graticule;\n","/**\n * @module ol/format/WKT\n */\nimport {inherits} from '../util.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport TextFeature from '../format/TextFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [splitCollection=false] Whether to split GeometryCollections into\n * multiple features on reading.\n */\n\n/**\n * @typedef {Object} Token\n * @property {number} type\n * @property {number|string} [value]\n * @property {number} position\n */\n\n/**\n * @const\n * @type {string}\n */\nconst EMPTY = 'EMPTY';\n\n\n/**\n * @const\n * @type {string}\n */\nconst Z = 'Z';\n\n\n/**\n * @const\n * @type {string}\n */\nconst M = 'M';\n\n\n/**\n * @const\n * @type {string}\n */\nconst ZM = 'ZM';\n\n\n/**\n * @const\n * @enum {number}\n */\nconst TokenType = {\n  TEXT: 1,\n  LEFT_PAREN: 2,\n  RIGHT_PAREN: 3,\n  NUMBER: 4,\n  COMMA: 5,\n  EOF: 6\n};\n\n\n/**\n * Class to tokenize a WKT string.\n * @param {string} wkt WKT string.\n * @constructor\n */\nconst Lexer = function(wkt) {\n\n  /**\n   * @type {string}\n   */\n  this.wkt = wkt;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = -1;\n};\n\n\n/**\n * @param {string} c Character.\n * @return {boolean} Whether the character is alphabetic.\n * @private\n */\nLexer.prototype.isAlpha_ = function(c) {\n  return c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z';\n};\n\n\n/**\n * @param {string} c Character.\n * @param {boolean=} opt_decimal Whether the string number\n *     contains a dot, i.e. is a decimal number.\n * @return {boolean} Whether the character is numeric.\n * @private\n */\nLexer.prototype.isNumeric_ = function(c, opt_decimal) {\n  const decimal = opt_decimal !== undefined ? opt_decimal : false;\n  return c >= '0' && c <= '9' || c == '.' && !decimal;\n};\n\n\n/**\n * @param {string} c Character.\n * @return {boolean} Whether the character is whitespace.\n * @private\n */\nLexer.prototype.isWhiteSpace_ = function(c) {\n  return c == ' ' || c == '\\t' || c == '\\r' || c == '\\n';\n};\n\n\n/**\n * @return {string} Next string character.\n * @private\n */\nLexer.prototype.nextChar_ = function() {\n  return this.wkt.charAt(++this.index_);\n};\n\n\n/**\n * Fetch and return the next token.\n * @return {!module:ol/format/WKT~Token} Next string token.\n */\nLexer.prototype.nextToken = function() {\n  const c = this.nextChar_();\n  const token = {position: this.index_, value: c};\n\n  if (c == '(') {\n    token.type = TokenType.LEFT_PAREN;\n  } else if (c == ',') {\n    token.type = TokenType.COMMA;\n  } else if (c == ')') {\n    token.type = TokenType.RIGHT_PAREN;\n  } else if (this.isNumeric_(c) || c == '-') {\n    token.type = TokenType.NUMBER;\n    token.value = this.readNumber_();\n  } else if (this.isAlpha_(c)) {\n    token.type = TokenType.TEXT;\n    token.value = this.readText_();\n  } else if (this.isWhiteSpace_(c)) {\n    return this.nextToken();\n  } else if (c === '') {\n    token.type = TokenType.EOF;\n  } else {\n    throw new Error('Unexpected character: ' + c);\n  }\n\n  return token;\n};\n\n\n/**\n * @return {number} Numeric token value.\n * @private\n */\nLexer.prototype.readNumber_ = function() {\n  let c;\n  const index = this.index_;\n  let decimal = false;\n  let scientificNotation = false;\n  do {\n    if (c == '.') {\n      decimal = true;\n    } else if (c == 'e' || c == 'E') {\n      scientificNotation = true;\n    }\n    c = this.nextChar_();\n  } while (\n    this.isNumeric_(c, decimal) ||\n      // if we haven't detected a scientific number before, 'e' or 'E'\n      // hint that we should continue to read\n      !scientificNotation && (c == 'e' || c == 'E') ||\n      // once we know that we have a scientific number, both '-' and '+'\n      // are allowed\n      scientificNotation && (c == '-' || c == '+')\n  );\n  return parseFloat(this.wkt.substring(index, this.index_--));\n};\n\n\n/**\n * @return {string} String token value.\n * @private\n */\nLexer.prototype.readText_ = function() {\n  let c;\n  const index = this.index_;\n  do {\n    c = this.nextChar_();\n  } while (this.isAlpha_(c));\n  return this.wkt.substring(index, this.index_--).toUpperCase();\n};\n\n\n/**\n * Class to parse the tokens from the WKT string.\n * @param {module:ol/format/WKT~Lexer} lexer The lexer.\n * @constructor\n */\nconst Parser = function(lexer) {\n\n  /**\n   * @type {module:ol/format/WKT~Lexer}\n   * @private\n   */\n  this.lexer_ = lexer;\n\n  /**\n   * @type {module:ol/format/WKT~Token}\n   * @private\n   */\n  this.token_;\n\n  /**\n   * @type {module:ol/geom/GeometryLayout}\n   * @private\n   */\n  this.layout_ = GeometryLayout.XY;\n};\n\n\n/**\n * Fetch the next token form the lexer and replace the active token.\n * @private\n */\nParser.prototype.consume_ = function() {\n  this.token_ = this.lexer_.nextToken();\n};\n\n/**\n * Tests if the given type matches the type of the current token.\n * @param {module:ol/format/WKT~TokenType} type Token type.\n * @return {boolean} Whether the token matches the given type.\n */\nParser.prototype.isTokenType = function(type) {\n  const isMatch = this.token_.type == type;\n  return isMatch;\n};\n\n\n/**\n * If the given type matches the current token, consume it.\n * @param {module:ol/format/WKT~TokenType} type Token type.\n * @return {boolean} Whether the token matches the given type.\n */\nParser.prototype.match = function(type) {\n  const isMatch = this.isTokenType(type);\n  if (isMatch) {\n    this.consume_();\n  }\n  return isMatch;\n};\n\n\n/**\n * Try to parse the tokens provided by the lexer.\n * @return {module:ol/geom/Geometry} The geometry.\n */\nParser.prototype.parse = function() {\n  this.consume_();\n  const geometry = this.parseGeometry_();\n  return geometry;\n};\n\n\n/**\n * Try to parse the dimensional info.\n * @return {module:ol/geom/GeometryLayout} The layout.\n * @private\n */\nParser.prototype.parseGeometryLayout_ = function() {\n  let layout = GeometryLayout.XY;\n  const dimToken = this.token_;\n  if (this.isTokenType(TokenType.TEXT)) {\n    const dimInfo = dimToken.value;\n    if (dimInfo === Z) {\n      layout = GeometryLayout.XYZ;\n    } else if (dimInfo === M) {\n      layout = GeometryLayout.XYM;\n    } else if (dimInfo === ZM) {\n      layout = GeometryLayout.XYZM;\n    }\n    if (layout !== GeometryLayout.XY) {\n      this.consume_();\n    }\n  }\n  return layout;\n};\n\n\n/**\n * @return {!Array.<module:ol/geom/Geometry>} A collection of geometries.\n * @private\n */\nParser.prototype.parseGeometryCollectionText_ = function() {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    const geometries = [];\n    do {\n      geometries.push(this.parseGeometry_());\n    } while (this.match(TokenType.COMMA));\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return geometries;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @return {Array.<number>} All values in a point.\n * @private\n */\nParser.prototype.parsePointText_ = function() {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    const coordinates = this.parsePoint_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return null;\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @return {!Array.<!Array.<number>>} All points in a linestring.\n * @private\n */\nParser.prototype.parseLineStringText_ = function() {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    const coordinates = this.parsePointList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @return {!Array.<!Array.<number>>} All points in a polygon.\n * @private\n */\nParser.prototype.parsePolygonText_ = function() {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    const coordinates = this.parseLineStringTextList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @return {!Array.<!Array.<number>>} All points in a multipoint.\n * @private\n */\nParser.prototype.parseMultiPointText_ = function() {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    let coordinates;\n    if (this.token_.type == TokenType.LEFT_PAREN) {\n      coordinates = this.parsePointTextList_();\n    } else {\n      coordinates = this.parsePointList_();\n    }\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @return {!Array.<!Array.<number>>} All linestring points\n *                                        in a multilinestring.\n * @private\n */\nParser.prototype.parseMultiLineStringText_ = function() {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    const coordinates = this.parseLineStringTextList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @return {!Array.<!Array.<number>>} All polygon points in a multipolygon.\n * @private\n */\nParser.prototype.parseMultiPolygonText_ = function() {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    const coordinates = this.parsePolygonTextList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @return {!Array.<number>} A point.\n * @private\n */\nParser.prototype.parsePoint_ = function() {\n  const coordinates = [];\n  const dimensions = this.layout_.length;\n  for (let i = 0; i < dimensions; ++i) {\n    const token = this.token_;\n    if (this.match(TokenType.NUMBER)) {\n      coordinates.push(token.value);\n    } else {\n      break;\n    }\n  }\n  if (coordinates.length == dimensions) {\n    return coordinates;\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @return {!Array.<!Array.<number>>} An array of points.\n * @private\n */\nParser.prototype.parsePointList_ = function() {\n  const coordinates = [this.parsePoint_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this.parsePoint_());\n  }\n  return coordinates;\n};\n\n\n/**\n * @return {!Array.<!Array.<number>>} An array of points.\n * @private\n */\nParser.prototype.parsePointTextList_ = function() {\n  const coordinates = [this.parsePointText_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this.parsePointText_());\n  }\n  return coordinates;\n};\n\n\n/**\n * @return {!Array.<!Array.<number>>} An array of points.\n * @private\n */\nParser.prototype.parseLineStringTextList_ = function() {\n  const coordinates = [this.parseLineStringText_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this.parseLineStringText_());\n  }\n  return coordinates;\n};\n\n\n/**\n * @return {!Array.<!Array.<number>>} An array of points.\n * @private\n */\nParser.prototype.parsePolygonTextList_ = function() {\n  const coordinates = [this.parsePolygonText_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this.parsePolygonText_());\n  }\n  return coordinates;\n};\n\n\n/**\n * @return {boolean} Whether the token implies an empty geometry.\n * @private\n */\nParser.prototype.isEmptyGeometry_ = function() {\n  const isEmpty = this.isTokenType(TokenType.TEXT) &&\n      this.token_.value == EMPTY;\n  if (isEmpty) {\n    this.consume_();\n  }\n  return isEmpty;\n};\n\n\n/**\n * Create an error message for an unexpected token error.\n * @return {string} Error message.\n * @private\n */\nParser.prototype.formatErrorMessage_ = function() {\n  return 'Unexpected `' + this.token_.value + '` at position ' +\n      this.token_.position + ' in `' + this.lexer_.wkt + '`';\n};\n\n\n/**\n * @classdesc\n * Geometry format for reading and writing data in the `WellKnownText` (WKT)\n * format.\n *\n * @constructor\n * @extends {module:ol/format/TextFeature}\n * @param {module:ol/format/WKT~Options=} opt_options Options.\n * @api\n */\nconst WKT = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  TextFeature.call(this);\n\n  /**\n   * Split GeometryCollection into multiple features.\n   * @type {boolean}\n   * @private\n   */\n  this.splitCollection_ = options.splitCollection !== undefined ?\n    options.splitCollection : false;\n\n};\n\ninherits(WKT, TextFeature);\n\n\n/**\n * @param {module:ol/geom/Point} geom Point geometry.\n * @return {string} Coordinates part of Point as WKT.\n */\nfunction encodePointGeometry(geom) {\n  const coordinates = geom.getCoordinates();\n  if (coordinates.length === 0) {\n    return '';\n  }\n  return coordinates.join(' ');\n}\n\n\n/**\n * @param {module:ol/geom/MultiPoint} geom MultiPoint geometry.\n * @return {string} Coordinates part of MultiPoint as WKT.\n */\nfunction encodeMultiPointGeometry(geom) {\n  const array = [];\n  const components = geom.getPoints();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePointGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {module:ol/geom/GeometryCollection} geom GeometryCollection geometry.\n * @return {string} Coordinates part of GeometryCollection as WKT.\n */\nfunction encodeGeometryCollectionGeometry(geom) {\n  const array = [];\n  const geoms = geom.getGeometries();\n  for (let i = 0, ii = geoms.length; i < ii; ++i) {\n    array.push(encode(geoms[i]));\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {module:ol/geom/LineString|module:ol/geom/LinearRing} geom LineString geometry.\n * @return {string} Coordinates part of LineString as WKT.\n */\nfunction encodeLineStringGeometry(geom) {\n  const coordinates = geom.getCoordinates();\n  const array = [];\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    array.push(coordinates[i].join(' '));\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {module:ol/geom/MultiLineString} geom MultiLineString geometry.\n * @return {string} Coordinates part of MultiLineString as WKT.\n */\nfunction encodeMultiLineStringGeometry(geom) {\n  const array = [];\n  const components = geom.getLineStrings();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {module:ol/geom/Polygon} geom Polygon geometry.\n * @return {string} Coordinates part of Polygon as WKT.\n */\nfunction encodePolygonGeometry(geom) {\n  const array = [];\n  const rings = geom.getLinearRings();\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(rings[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {module:ol/geom/MultiPolygon} geom MultiPolygon geometry.\n * @return {string} Coordinates part of MultiPolygon as WKT.\n */\nfunction encodeMultiPolygonGeometry(geom) {\n  const array = [];\n  const components = geom.getPolygons();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePolygonGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {module:ol/geom/SimpleGeometry} geom SimpleGeometry geometry.\n * @return {string} Potential dimensional information for WKT type.\n */\nfunction encodeGeometryLayout(geom) {\n  const layout = geom.getLayout();\n  let dimInfo = '';\n  if (layout === GeometryLayout.XYZ || layout === GeometryLayout.XYZM) {\n    dimInfo += Z;\n  }\n  if (layout === GeometryLayout.XYM || layout === GeometryLayout.XYZM) {\n    dimInfo += M;\n  }\n  return dimInfo;\n}\n\n\n/**\n * @const\n * @type {Object.<string, function(module:ol/geom/Geometry): string>}\n */\nconst GeometryEncoder = {\n  'Point': encodePointGeometry,\n  'LineString': encodeLineStringGeometry,\n  'Polygon': encodePolygonGeometry,\n  'MultiPoint': encodeMultiPointGeometry,\n  'MultiLineString': encodeMultiLineStringGeometry,\n  'MultiPolygon': encodeMultiPolygonGeometry,\n  'GeometryCollection': encodeGeometryCollectionGeometry\n};\n\n\n/**\n * Encode a geometry as WKT.\n * @param {module:ol/geom/Geometry} geom The geometry to encode.\n * @return {string} WKT string for the geometry.\n */\nfunction encode(geom) {\n  let type = geom.getType();\n  const geometryEncoder = GeometryEncoder[type];\n  const enc = geometryEncoder(geom);\n  type = type.toUpperCase();\n  if (geom instanceof SimpleGeometry) {\n    const dimInfo = encodeGeometryLayout(geom);\n    if (dimInfo.length > 0) {\n      type += ' ' + dimInfo;\n    }\n  }\n  if (enc.length === 0) {\n    return type + ' ' + EMPTY;\n  }\n  return type + '(' + enc + ')';\n}\n\n\n/**\n * Parse a WKT string.\n * @param {string} wkt WKT string.\n * @return {module:ol/geom/Geometry|undefined}\n *     The geometry created.\n * @private\n */\nWKT.prototype.parse_ = function(wkt) {\n  const lexer = new Lexer(wkt);\n  const parser = new Parser(lexer);\n  return parser.parse();\n};\n\n\n/**\n * Read a feature from a WKT source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/Feature} Feature.\n * @api\n */\nWKT.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nWKT.prototype.readFeatureFromText = function(text, opt_options) {\n  const geom = this.readGeometryFromText(text, opt_options);\n  if (geom) {\n    const feature = new Feature();\n    feature.setGeometry(geom);\n    return feature;\n  }\n  return null;\n};\n\n\n/**\n * Read all features from a WKT source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nWKT.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWKT.prototype.readFeaturesFromText = function(text, opt_options) {\n  let geometries = [];\n  const geometry = this.readGeometryFromText(text, opt_options);\n  if (this.splitCollection_ &&\n      geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    geometries = (/** @type {module:ol/geom/GeometryCollection} */ (geometry))\n      .getGeometriesArray();\n  } else {\n    geometries = [geometry];\n  }\n  const features = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    const feature = new Feature();\n    feature.setGeometry(geometries[i]);\n    features.push(feature);\n  }\n  return features;\n};\n\n\n/**\n * Read a single geometry from a WKT source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/Geometry} Geometry.\n * @api\n */\nWKT.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nWKT.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometry = this.parse_(text);\n  if (geometry) {\n    return (\n      /** @type {module:ol/geom/Geometry} */ (transformWithOptions(geometry, false, opt_options))\n    );\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @enum {function (new:module:ol/geom/Geometry, Array, module:ol/geom/GeometryLayout)}\n */\nconst GeometryConstructor = {\n  'POINT': Point,\n  'LINESTRING': LineString,\n  'POLYGON': Polygon,\n  'MULTIPOINT': MultiPoint,\n  'MULTILINESTRING': MultiLineString,\n  'MULTIPOLYGON': MultiPolygon\n};\n\n\n/**\n * @enum {(function(): Array)}\n */\nconst GeometryParser = {\n  'POINT': Parser.prototype.parsePointText_,\n  'LINESTRING': Parser.prototype.parseLineStringText_,\n  'POLYGON': Parser.prototype.parsePolygonText_,\n  'MULTIPOINT': Parser.prototype.parseMultiPointText_,\n  'MULTILINESTRING': Parser.prototype.parseMultiLineStringText_,\n  'MULTIPOLYGON': Parser.prototype.parseMultiPolygonText_\n};\n\n\n/**\n * @return {!module:ol/geom/Geometry} The geometry.\n * @private\n */\nParser.prototype.parseGeometry_ = function() {\n  const token = this.token_;\n  if (this.match(TokenType.TEXT)) {\n    const geomType = token.value;\n    this.layout_ = this.parseGeometryLayout_();\n    if (geomType == GeometryType.GEOMETRY_COLLECTION.toUpperCase()) {\n      const geometries = this.parseGeometryCollectionText_();\n      return new GeometryCollection(geometries);\n    } else {\n      const parser = GeometryParser[geomType];\n      const ctor = GeometryConstructor[geomType];\n      if (!parser || !ctor) {\n        throw new Error('Invalid geometry type: ' + geomType);\n      }\n      const coordinates = parser.call(this);\n      return new ctor(coordinates, this.layout_);\n    }\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * Encode a feature as a WKT string.\n *\n * @function\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} WKT string.\n * @api\n */\nWKT.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nWKT.prototype.writeFeatureText = function(feature, opt_options) {\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    return this.writeGeometryText(geometry, opt_options);\n  }\n  return '';\n};\n\n\n/**\n * Encode an array of features as a WKT string.\n *\n * @function\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} WKT string.\n * @api\n */\nWKT.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nWKT.prototype.writeFeaturesText = function(features, opt_options) {\n  if (features.length == 1) {\n    return this.writeFeatureText(features[0], opt_options);\n  }\n  const geometries = [];\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    geometries.push(features[i].getGeometry());\n  }\n  const collection = new GeometryCollection(geometries);\n  return this.writeGeometryText(collection, opt_options);\n};\n\n\n/**\n * Write a single geometry as a WKT string.\n *\n * @function\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} WKT string.\n * @api\n */\nWKT.prototype.writeGeometry;\n\n\n/**\n * @inheritDoc\n */\nWKT.prototype.writeGeometryText = function(geometry, opt_options) {\n  return encode(/** @type {module:ol/geom/Geometry} */ (\n    transformWithOptions(geometry, true, opt_options)));\n};\n\n\nexport default WKT;\n","/**\n * @module ol/format/TopoJSON\n */\nimport {inherits} from '../util.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport JSONFeature from '../format/JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/proj~ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {string} [layerName] Set the name of the TopoJSON topology\n * `objects`'s children as feature property with the specified name. This means\n * that when set to `'layer'`, a topology like\n * ```\n * {\n *   \"type\": \"Topology\",\n *   \"objects\": {\n *     \"example\": {\n *       \"type\": \"GeometryCollection\",\n *       \"geometries\": []\n *     }\n *   }\n * }\n * ```\n * will result in features that have a property `'layer'` set to `'example'`.\n * When not set, no property will be added to features.\n * @property {Array.<string>} [layers] Names of the TopoJSON topology's\n * `objects`'s children to read features from.  If not provided, features will\n * be read from all children.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading data in the TopoJSON format.\n *\n * @constructor\n * @extends {module:ol/format/JSONFeature}\n * @param {module:ol/format/TopoJSON~Options=} opt_options Options.\n * @api\n */\nconst TopoJSON = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  JSONFeature.call(this);\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.layerName_ = options.layerName;\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  /**\n   * @inheritDoc\n   */\n  this.dataProjection = getProjection(\n    options.dataProjection ?\n      options.dataProjection : 'EPSG:4326');\n\n};\n\ninherits(TopoJSON, JSONFeature);\n\n\n/**\n * @const\n * @type {Object.<string, function(TopoJSONGeometry, Array, ...Array): module:ol/geom/Geometry>}\n */\nconst GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry\n};\n\n\n/**\n * Concatenate arcs into a coordinate array.\n * @param {Array.<number>} indices Indices of arcs to concatenate.  Negative\n *     values indicate arcs need to be reversed.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} arcs Array of arcs (already\n *     transformed).\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates array.\n */\nfunction concatenateArcs(indices, arcs) {\n  /** @type {Array.<module:ol/coordinate~Coordinate>} */\n  const coordinates = [];\n  let index, arc;\n  for (let i = 0, ii = indices.length; i < ii; ++i) {\n    index = indices[i];\n    if (i > 0) {\n      // splicing together arcs, discard last point\n      coordinates.pop();\n    }\n    if (index >= 0) {\n      // forward arc\n      arc = arcs[index];\n    } else {\n      // reverse arc\n      arc = arcs[~index].slice().reverse();\n    }\n    coordinates.push.apply(coordinates, arc);\n  }\n  // provide fresh copies of coordinate arrays\n  for (let j = 0, jj = coordinates.length; j < jj; ++j) {\n    coordinates[j] = coordinates[j].slice();\n  }\n  return coordinates;\n}\n\n\n/**\n * Create a point from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array.<number>} scale Scale for each dimension.\n * @param {Array.<number>} translate Translation for each dimension.\n * @return {module:ol/geom/Point} Geometry.\n */\nfunction readPointGeometry(object, scale, translate) {\n  const coordinates = object.coordinates;\n  if (scale && translate) {\n    transformVertex(coordinates, scale, translate);\n  }\n  return new Point(coordinates);\n}\n\n\n/**\n * Create a multi-point from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array.<number>} scale Scale for each dimension.\n * @param {Array.<number>} translate Translation for each dimension.\n * @return {module:ol/geom/MultiPoint} Geometry.\n */\nfunction readMultiPointGeometry(object, scale, translate) {\n  const coordinates = object.coordinates;\n  if (scale && translate) {\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      transformVertex(coordinates[i], scale, translate);\n    }\n  }\n  return new MultiPoint(coordinates);\n}\n\n\n/**\n * Create a linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @return {module:ol/geom/LineString} Geometry.\n */\nfunction readLineStringGeometry(object, arcs) {\n  const coordinates = concatenateArcs(object.arcs, arcs);\n  return new LineString(coordinates);\n}\n\n\n/**\n * Create a multi-linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @return {module:ol/geom/MultiLineString} Geometry.\n */\nfunction readMultiLineStringGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object.arcs.length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object.arcs[i], arcs);\n  }\n  return new MultiLineString(coordinates);\n}\n\n\n/**\n * Create a polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @return {module:ol/geom/Polygon} Geometry.\n */\nfunction readPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object.arcs.length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object.arcs[i], arcs);\n  }\n  return new Polygon(coordinates);\n}\n\n\n/**\n * Create a multi-polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @return {module:ol/geom/MultiPolygon} Geometry.\n */\nfunction readMultiPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object.arcs.length; i < ii; ++i) {\n    // for each polygon\n    const polyArray = object.arcs[i];\n    const ringCoords = [];\n    for (let j = 0, jj = polyArray.length; j < jj; ++j) {\n      // for each ring\n      ringCoords[j] = concatenateArcs(polyArray[j], arcs);\n    }\n    coordinates[i] = ringCoords;\n  }\n  return new MultiPolygon(coordinates);\n}\n\n\n/**\n * Create features from a TopoJSON GeometryCollection object.\n *\n * @param {TopoJSONGeometryCollection} collection TopoJSON Geometry\n *     object.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @param {Array.<number>} scale Scale for each dimension.\n * @param {Array.<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {Array.<module:ol/Feature>} Array of features.\n */\nfunction readFeaturesFromGeometryCollection(collection, arcs, scale, translate, property, name, opt_options) {\n  const geometries = collection.geometries;\n  const features = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    features[i] = readFeatureFromGeometry(\n      geometries[i], arcs, scale, translate, property, name, opt_options);\n  }\n  return features;\n}\n\n\n/**\n * Create a feature from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON geometry object.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @param {Array.<number>} scale Scale for each dimension.\n * @param {Array.<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/Feature} Feature.\n */\nfunction readFeatureFromGeometry(object, arcs, scale, translate, property, name, opt_options) {\n  let geometry;\n  const type = object.type;\n  const geometryReader = GEOMETRY_READERS[type];\n  if ((type === 'Point') || (type === 'MultiPoint')) {\n    geometry = geometryReader(object, scale, translate);\n  } else {\n    geometry = geometryReader(object, arcs);\n  }\n  const feature = new Feature();\n  feature.setGeometry(/** @type {module:ol/geom/Geometry} */ (\n    transformWithOptions(geometry, false, opt_options)));\n  if (object.id !== undefined) {\n    feature.setId(object.id);\n  }\n  let properties = object.properties;\n  if (property) {\n    if (!properties) {\n      properties = {};\n    }\n    properties[property] = name;\n  }\n  if (properties) {\n    feature.setProperties(properties);\n  }\n  return feature;\n}\n\n\n/**\n * Read all features from a TopoJSON source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nTopoJSON.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nTopoJSON.prototype.readFeaturesFromObject = function(object, opt_options) {\n  if (object.type == 'Topology') {\n    const topoJSONTopology = /** @type {TopoJSONTopology} */ (object);\n    let transform, scale = null, translate = null;\n    if (topoJSONTopology.transform) {\n      transform = topoJSONTopology.transform;\n      scale = transform.scale;\n      translate = transform.translate;\n    }\n    const arcs = topoJSONTopology.arcs;\n    if (transform) {\n      transformArcs(arcs, scale, translate);\n    }\n    /** @type {Array.<module:ol/Feature>} */\n    const features = [];\n    const topoJSONFeatures = topoJSONTopology.objects;\n    const property = this.layerName_;\n    let feature;\n    for (const objectName in topoJSONFeatures) {\n      if (this.layers_ && this.layers_.indexOf(objectName) == -1) {\n        continue;\n      }\n      if (topoJSONFeatures[objectName].type === 'GeometryCollection') {\n        feature = /** @type {TopoJSONGeometryCollection} */ (topoJSONFeatures[objectName]);\n        features.push.apply(features, readFeaturesFromGeometryCollection(\n          feature, arcs, scale, translate, property, objectName, opt_options));\n      } else {\n        feature = /** @type {TopoJSONGeometry} */ (topoJSONFeatures[objectName]);\n        features.push(readFeatureFromGeometry(\n          feature, arcs, scale, translate, property, objectName, opt_options));\n      }\n    }\n    return features;\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * Apply a linear transform to array of arcs.  The provided array of arcs is\n * modified in place.\n *\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @param {Array.<number>} scale Scale for each dimension.\n * @param {Array.<number>} translate Translation for each dimension.\n */\nfunction transformArcs(arcs, scale, translate) {\n  for (let i = 0, ii = arcs.length; i < ii; ++i) {\n    transformArc(arcs[i], scale, translate);\n  }\n}\n\n\n/**\n * Apply a linear transform to an arc.  The provided arc is modified in place.\n *\n * @param {Array.<module:ol/coordinate~Coordinate>} arc Arc.\n * @param {Array.<number>} scale Scale for each dimension.\n * @param {Array.<number>} translate Translation for each dimension.\n */\nfunction transformArc(arc, scale, translate) {\n  let x = 0;\n  let y = 0;\n  for (let i = 0, ii = arc.length; i < ii; ++i) {\n    const vertex = arc[i];\n    x += vertex[0];\n    y += vertex[1];\n    vertex[0] = x;\n    vertex[1] = y;\n    transformVertex(vertex, scale, translate);\n  }\n}\n\n\n/**\n * Apply a linear transform to a vertex.  The provided vertex is modified in\n * place.\n *\n * @param {module:ol/coordinate~Coordinate} vertex Vertex.\n * @param {Array.<number>} scale Scale for each dimension.\n * @param {Array.<number>} translate Translation for each dimension.\n */\nfunction transformVertex(vertex, scale, translate) {\n  vertex[0] = vertex[0] * scale[0] + translate[0];\n  vertex[1] = vertex[1] * scale[1] + translate[1];\n}\n\n\n/**\n * Read the projection from a TopoJSON source.\n *\n * @param {Document|Node|Object|string} object Source.\n * @return {module:ol/proj/Projection} Projection.\n * @override\n * @api\n */\nTopoJSON.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nTopoJSON.prototype.readProjectionFromObject = function(object) {\n  return this.dataProjection;\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nTopoJSON.prototype.writeFeatureObject = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nTopoJSON.prototype.writeFeaturesObject = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nTopoJSON.prototype.writeGeometryObject = function(geometry, opt_options) {};\n\n\n/**\n * Not implemented.\n * @override\n */\nTopoJSON.prototype.readGeometryFromObject = function() {};\n\n\n/**\n * Not implemented.\n * @override\n */\nTopoJSON.prototype.readFeatureFromObject = function() {};\nexport default TopoJSON;\n","/**\n * @module ol/format/EsriJSON\n */\nimport {inherits} from '../util.js';\nimport Feature from '../Feature.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport JSONFeature from '../format/JSONFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {linearRingIsClockwise} from '../geom/flat/orient.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @const\n * @type {Object.<module:ol/geom/GeometryType, function(EsriJSONGeometry): module:ol/geom/Geometry>}\n */\nconst GEOMETRY_READERS = {};\nGEOMETRY_READERS[GeometryType.POINT] = readPointGeometry;\nGEOMETRY_READERS[GeometryType.LINE_STRING] = readLineStringGeometry;\nGEOMETRY_READERS[GeometryType.POLYGON] = readPolygonGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_POINT] = readMultiPointGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_LINE_STRING] = readMultiLineStringGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_POLYGON] = readMultiPolygonGeometry;\n\n\n/**\n * @const\n * @type {Object.<string, function(module:ol/geom/Geometry, module:ol/format/Feature~WriteOptions=): (EsriJSONGeometry)>}\n */\nconst GEOMETRY_WRITERS = {};\nGEOMETRY_WRITERS[GeometryType.POINT] = writePointGeometry;\nGEOMETRY_WRITERS[GeometryType.LINE_STRING] = writeLineStringGeometry;\nGEOMETRY_WRITERS[GeometryType.POLYGON] = writePolygonGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_POINT] = writeMultiPointGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_LINE_STRING] = writeMultiLineStringGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_POLYGON] = writeMultiPolygonGeometry;\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [geometryName] Geometry name to use when creating features.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the EsriJSON format.\n *\n * @constructor\n * @extends {module:ol/format/JSONFeature}\n * @param {module:ol/format/EsriJSON~Options=} opt_options Options.\n * @api\n */\nconst EsriJSON = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  JSONFeature.call(this);\n\n  /**\n   * Name of the geometry attribute for features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n};\n\ninherits(EsriJSON, JSONFeature);\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/Geometry} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n  /** @type {module:ol/geom/GeometryType} */\n  let type;\n  if (typeof object.x === 'number' && typeof object.y === 'number') {\n    type = GeometryType.POINT;\n  } else if (object.points) {\n    type = GeometryType.MULTI_POINT;\n  } else if (object.paths) {\n    if (object.paths.length === 1) {\n      type = GeometryType.LINE_STRING;\n    } else {\n      type = GeometryType.MULTI_LINE_STRING;\n    }\n  } else if (object.rings) {\n    const layout = getGeometryLayout(object);\n    const rings = convertRings(object.rings, layout);\n    object = /** @type {EsriJSONGeometry} */(assign({}, object));\n    if (rings.length === 1) {\n      type = GeometryType.POLYGON;\n      object.rings = rings[0];\n    } else {\n      type = GeometryType.MULTI_POLYGON;\n      object.rings = rings;\n    }\n  }\n  const geometryReader = GEOMETRY_READERS[type];\n  return (\n    /** @type {module:ol/geom/Geometry} */ (transformWithOptions(geometryReader(object), false, opt_options))\n  );\n}\n\n\n/**\n * Determines inner and outer rings.\n * Checks if any polygons in this array contain any other polygons in this\n * array. It is used for checking for holes.\n * Logic inspired by: https://github.com/Esri/terraformer-arcgis-parser\n * @param {Array.<!Array.<!Array.<number>>>} rings Rings.\n * @param {module:ol/geom/GeometryLayout} layout Geometry layout.\n * @return {Array.<!Array.<!Array.<number>>>} Transformed rings.\n */\nfunction convertRings(rings, layout) {\n  const flatRing = [];\n  const outerRings = [];\n  const holes = [];\n  let i, ii;\n  for (i = 0, ii = rings.length; i < ii; ++i) {\n    flatRing.length = 0;\n    deflateCoordinates(flatRing, 0, rings[i], layout.length);\n    // is this ring an outer ring? is it clockwise?\n    const clockwise = linearRingIsClockwise(flatRing, 0,\n      flatRing.length, layout.length);\n    if (clockwise) {\n      outerRings.push([rings[i]]);\n    } else {\n      holes.push(rings[i]);\n    }\n  }\n  while (holes.length) {\n    const hole = holes.shift();\n    let matched = false;\n    // loop over all outer rings and see if they contain our hole.\n    for (i = outerRings.length - 1; i >= 0; i--) {\n      const outerRing = outerRings[i][0];\n      const containsHole = containsExtent(\n        new LinearRing(outerRing).getExtent(),\n        new LinearRing(hole).getExtent()\n      );\n      if (containsHole) {\n        // the hole is contained push it into our polygon\n        outerRings[i].push(hole);\n        matched = true;\n        break;\n      }\n    }\n    if (!matched) {\n      // no outer rings contain this hole turn it into and outer\n      // ring (reverse it)\n      outerRings.push([hole.reverse()]);\n    }\n  }\n  return outerRings;\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} Point.\n */\nfunction readPointGeometry(object) {\n  let point;\n  if (object.m !== undefined && object.z !== undefined) {\n    point = new Point([object.x, object.y, object.z, object.m],\n      GeometryLayout.XYZM);\n  } else if (object.z !== undefined) {\n    point = new Point([object.x, object.y, object.z],\n      GeometryLayout.XYZ);\n  } else if (object.m !== undefined) {\n    point = new Point([object.x, object.y, object.m],\n      GeometryLayout.XYM);\n  } else {\n    point = new Point([object.x, object.y]);\n  }\n  return point;\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} LineString.\n */\nfunction readLineStringGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new LineString(object.paths[0], layout);\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new MultiLineString(object.paths, layout);\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/GeometryLayout} The geometry layout to use.\n */\nfunction getGeometryLayout(object) {\n  let layout = GeometryLayout.XY;\n  if (object.hasZ === true && object.hasM === true) {\n    layout = GeometryLayout.XYZM;\n  } else if (object.hasZ === true) {\n    layout = GeometryLayout.XYZ;\n  } else if (object.hasM === true) {\n    layout = GeometryLayout.XYM;\n  }\n  return layout;\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new MultiPoint(object.points, layout);\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new MultiPolygon(\n    /** @type {Array.<Array.<Array.<Array.<number>>>>} */(object.rings),\n    layout);\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new Polygon(object.rings, layout);\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONGeometry} EsriJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  const coordinates = /** @type {module:ol/geom/Point} */ (geometry).getCoordinates();\n  let esriJSON;\n  const layout = /** @type {module:ol/geom/Point} */ (geometry).getLayout();\n  if (layout === GeometryLayout.XYZ) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1],\n      z: coordinates[2]\n    });\n  } else if (layout === GeometryLayout.XYM) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1],\n      m: coordinates[2]\n    });\n  } else if (layout === GeometryLayout.XYZM) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1],\n      z: coordinates[2],\n      m: coordinates[3]\n    });\n  } else if (layout === GeometryLayout.XY) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1]\n    });\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n  return /** @type {EsriJSONGeometry} */ (esriJSON);\n}\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @return {Object} Object with boolean hasZ and hasM keys.\n */\nfunction getHasZM(geometry) {\n  const layout = geometry.getLayout();\n  return {\n    hasZ: (layout === GeometryLayout.XYZ ||\n      layout === GeometryLayout.XYZM),\n    hasM: (layout === GeometryLayout.XYM ||\n      layout === GeometryLayout.XYZM)\n  };\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  const hasZM = getHasZM(/** @type {module:ol/geom/LineString} */(geometry));\n  return (\n    /** @type {EsriJSONPolyline} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      paths: [\n        /** @type {module:ol/geom/LineString} */ (geometry).getCoordinates()\n      ]\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  // Esri geometries use the left-hand rule\n  const hasZM = getHasZM(/** @type {module:ol/geom/Polygon} */(geometry));\n  return (\n    /** @type {EsriJSONPolygon} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      rings: /** @type {module:ol/geom/Polygon} */ (geometry).getCoordinates(false)\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  const hasZM = getHasZM(/** @type {module:ol/geom/MultiLineString} */(geometry));\n  return (\n    /** @type {EsriJSONPolyline} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      paths: /** @type {module:ol/geom/MultiLineString} */ (geometry).getCoordinates()\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONMultipoint} EsriJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  const hasZM = getHasZM(/** @type {module:ol/geom/MultiPoint} */(geometry));\n  return (\n    /** @type {EsriJSONMultipoint} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      points: /** @type {module:ol/geom/MultiPoint} */ (geometry).getCoordinates()\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  const hasZM = getHasZM(/** @type {module:ol/geom/MultiPolygon} */(geometry));\n  const coordinates = /** @type {module:ol/geom/MultiPolygon} */ (geometry).getCoordinates(false);\n  const output = [];\n  for (let i = 0; i < coordinates.length; i++) {\n    for (let x = coordinates[i].length - 1; x >= 0; x--) {\n      output.push(coordinates[i][x]);\n    }\n  }\n  return /** @type {EsriJSONPolygon} */ ({\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    rings: output\n  });\n}\n\n\n/**\n * Read a feature from a EsriJSON Feature source.  Only works for Feature,\n * use `readFeatures` to read FeatureCollection source.\n *\n * @function\n * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/Feature} Feature.\n * @api\n */\nEsriJSON.prototype.readFeature;\n\n\n/**\n * Read all features from a EsriJSON source.  Works with both Feature and\n * FeatureCollection sources.\n *\n * @function\n * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nEsriJSON.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nEsriJSON.prototype.readFeatureFromObject = function(object, opt_options) {\n  const esriJSONFeature = /** @type {EsriJSONFeature} */ (object);\n  const geometry = readGeometry(esriJSONFeature.geometry, opt_options);\n  const feature = new Feature();\n  if (this.geometryName_) {\n    feature.setGeometryName(this.geometryName_);\n  }\n  feature.setGeometry(geometry);\n  if (opt_options && opt_options.idField &&\n    esriJSONFeature.attributes[opt_options.idField]) {\n    feature.setId(/** @type {number} */(esriJSONFeature.attributes[opt_options.idField]));\n  }\n  if (esriJSONFeature.attributes) {\n    feature.setProperties(esriJSONFeature.attributes);\n  }\n  return feature;\n};\n\n\n/**\n * @inheritDoc\n */\nEsriJSON.prototype.readFeaturesFromObject = function(object, opt_options) {\n  const esriJSONObject = /** @type {EsriJSONObject} */ (object);\n  const options = opt_options ? opt_options : {};\n  if (esriJSONObject.features) {\n    const esriJSONFeatureCollection = /** @type {EsriJSONFeatureCollection} */ (object);\n    /** @type {Array.<module:ol/Feature>} */\n    const features = [];\n    const esriJSONFeatures = esriJSONFeatureCollection.features;\n    options.idField = object.objectIdFieldName;\n    for (let i = 0, ii = esriJSONFeatures.length; i < ii; ++i) {\n      features.push(this.readFeatureFromObject(esriJSONFeatures[i], options));\n    }\n    return features;\n  } else {\n    return [this.readFeatureFromObject(object, options)];\n  }\n};\n\n\n/**\n * Read a geometry from a EsriJSON source.\n *\n * @function\n * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/Geometry} Geometry.\n * @api\n */\nEsriJSON.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nEsriJSON.prototype.readGeometryFromObject = function(object, opt_options) {\n  return readGeometry(/** @type {EsriJSONGeometry} */(object), opt_options);\n};\n\n\n/**\n * Read the projection from a EsriJSON source.\n *\n * @function\n * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n * @return {module:ol/proj/Projection} Projection.\n * @api\n */\nEsriJSON.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nEsriJSON.prototype.readProjectionFromObject = function(object) {\n  const esriJSONObject = /** @type {EsriJSONObject} */ (object);\n  if (esriJSONObject.spatialReference && esriJSONObject.spatialReference.wkid) {\n    const crs = esriJSONObject.spatialReference.wkid;\n    return getProjection('EPSG:' + crs);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONGeometry} EsriJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  const geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n  return geometryWriter(/** @type {module:ol/geom/Geometry} */(\n    transformWithOptions(geometry, true, opt_options)), opt_options);\n}\n\n\n/**\n * Encode a geometry as a EsriJSON string.\n *\n * @function\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} EsriJSON.\n * @api\n */\nEsriJSON.prototype.writeGeometry;\n\n\n/**\n * Encode a geometry as a EsriJSON object.\n *\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONGeometry} Object.\n * @override\n * @api\n */\nEsriJSON.prototype.writeGeometryObject = function(geometry, opt_options) {\n  return writeGeometry(geometry, this.adaptOptions(opt_options));\n};\n\n\n/**\n * Encode a feature as a EsriJSON Feature string.\n *\n * @function\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} EsriJSON.\n * @api\n */\nEsriJSON.prototype.writeFeature;\n\n\n/**\n * Encode a feature as a esriJSON Feature object.\n *\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n * @override\n * @api\n */\nEsriJSON.prototype.writeFeatureObject = function(feature, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const object = {};\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    object['geometry'] = writeGeometry(geometry, opt_options);\n    if (opt_options && opt_options.featureProjection) {\n      object['geometry']['spatialReference'] = /** @type {EsriJSONCRS} */({\n        wkid: getProjection(opt_options.featureProjection).getCode().split(':').pop()\n      });\n    }\n  }\n  const properties = feature.getProperties();\n  delete properties[feature.getGeometryName()];\n  if (!isEmpty(properties)) {\n    object['attributes'] = properties;\n  } else {\n    object['attributes'] = {};\n  }\n  return object;\n};\n\n\n/**\n * Encode an array of features as EsriJSON.\n *\n * @function\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} EsriJSON.\n * @api\n */\nEsriJSON.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features as a EsriJSON object.\n *\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {Object} EsriJSON Object.\n * @override\n * @api\n */\nEsriJSON.prototype.writeFeaturesObject = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const objects = [];\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    objects.push(this.writeFeatureObject(features[i], opt_options));\n  }\n  return /** @type {EsriJSONFeatureCollection} */ ({\n    'features': objects\n  });\n};\n\nexport default EsriJSON;\n","/**\n * @module ol/source/ImageStatic\n */\nimport {inherits} from '../util.js';\nimport ImageWrapper from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {intersects, getHeight, getWidth} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport ImageSource, {defaultImageLoadFunction} from '../source/Image.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {module:ol/extent~Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {module:ol/Image~LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {module:ol/size~Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n *\n * @constructor\n * @extends {module:ol/source/Image}\n * @param {module:ol/source/ImageStatic~Options=} options ImageStatic options.\n * @api\n */\nconst Static = function(options) {\n  const imageExtent = options.imageExtent;\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : null;\n\n  const /** @type {module:ol/Image~LoadFunction} */ imageLoadFunction =\n      options.imageLoadFunction !== undefined ?\n        options.imageLoadFunction : defaultImageLoadFunction;\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: getProjection(options.projection)\n  });\n\n  /**\n   * @private\n   * @type {module:ol/Image}\n   */\n  this.image_ = new ImageWrapper(imageExtent, undefined, 1, options.url, crossOrigin, imageLoadFunction);\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.imageSize_ = options.imageSize ? options.imageSize : null;\n\n  listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n};\n\ninherits(Static, ImageSource);\n\n\n/**\n * @inheritDoc\n */\nStatic.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n  if (intersects(extent, this.image_.getExtent())) {\n    return this.image_;\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nStatic.prototype.handleImageChange = function(evt) {\n  if (this.image_.getState() == ImageState.LOADED) {\n    const imageExtent = this.image_.getExtent();\n    const image = this.image_.getImage();\n    let imageWidth, imageHeight;\n    if (this.imageSize_) {\n      imageWidth = this.imageSize_[0];\n      imageHeight = this.imageSize_[1];\n    } else {\n      imageWidth = image.width;\n      imageHeight = image.height;\n    }\n    const resolution = getHeight(imageExtent) / imageHeight;\n    const targetWidth = Math.ceil(getWidth(imageExtent) / resolution);\n    if (targetWidth != imageWidth) {\n      const context = createCanvasContext2D(targetWidth, imageHeight);\n      const canvas = context.canvas;\n      context.drawImage(image, 0, 0, imageWidth, imageHeight,\n        0, 0, canvas.width, canvas.height);\n      this.image_.setImage(canvas);\n    }\n  }\n  ImageSource.prototype.handleImageChange.call(this, evt);\n};\nexport default Static;\n","/**\n * @module ol/TileCache\n */\nimport {inherits} from './util.js';\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\n/**\n * @constructor\n * @extends {module:ol/structs/LRUCache.<module:ol/Tile>}\n * @param {number=} opt_highWaterMark High water mark.\n * @struct\n */\nconst TileCache = function(opt_highWaterMark) {\n\n  LRUCache.call(this, opt_highWaterMark);\n\n};\n\ninherits(TileCache, LRUCache);\n\n\n/**\n * @param {!Object.<string, module:ol/TileRange>} usedTiles Used tiles.\n */\nTileCache.prototype.expireCache = function(usedTiles) {\n  while (this.canExpireCache()) {\n    const tile = this.peekLast();\n    const zKey = tile.tileCoord[0].toString();\n    if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n      break;\n    } else {\n      this.pop().dispose();\n    }\n  }\n};\n\n\n/**\n * Prune all tiles from the cache that don't have the same z as the newest tile.\n */\nTileCache.prototype.pruneExceptNewestZ = function() {\n  if (this.getCount() === 0) {\n    return;\n  }\n  const key = this.peekFirstKey();\n  const tileCoord = fromKey(key);\n  const z = tileCoord[0];\n  this.forEach(function(tile) {\n    if (tile.tileCoord[0] !== z) {\n      this.remove(getKey(tile.tileCoord));\n      tile.dispose();\n    }\n  }, this);\n};\nexport default TileCache;\n","/**\n * @module ol/TileQueue\n */\nimport {inherits} from './util.js';\nimport TileState from './TileState.js';\nimport {listen, unlisten} from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n\n\n/**\n * @typedef {function(module:ol/Tile, string, module:ol/coordinate~Coordinate, number): number} PriorityFunction\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/structs/PriorityQueue.<Array>}\n * @param {module:ol/TileQueue~PriorityFunction} tilePriorityFunction\n *     Tile priority function.\n * @param {function(): ?} tileChangeCallback\n *     Function called on each tile change event.\n * @struct\n */\nconst TileQueue = function(tilePriorityFunction, tileChangeCallback) {\n\n  PriorityQueue.call(\n    this,\n    /**\n     * @param {Array} element Element.\n     * @return {number} Priority.\n     */\n    function(element) {\n      return tilePriorityFunction.apply(null, element);\n    },\n    /**\n     * @param {Array} element Element.\n     * @return {string} Key.\n     */\n    function(element) {\n      return (/** @type {module:ol/Tile} */ (element[0]).getKey());\n    });\n\n  /**\n   * @private\n   * @type {function(): ?}\n   */\n  this.tileChangeCallback_ = tileChangeCallback;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.tilesLoading_ = 0;\n\n  /**\n   * @private\n   * @type {!Object.<string,boolean>}\n   */\n  this.tilesLoadingKeys_ = {};\n\n};\n\ninherits(TileQueue, PriorityQueue);\n\n\n/**\n * @inheritDoc\n */\nTileQueue.prototype.enqueue = function(element) {\n  const added = PriorityQueue.prototype.enqueue.call(this, element);\n  if (added) {\n    const tile = element[0];\n    listen(tile, EventType.CHANGE, this.handleTileChange, this);\n  }\n  return added;\n};\n\n\n/**\n * @return {number} Number of tiles loading.\n */\nTileQueue.prototype.getTilesLoading = function() {\n  return this.tilesLoading_;\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n * @protected\n */\nTileQueue.prototype.handleTileChange = function(event) {\n  const tile = /** @type {module:ol/Tile} */ (event.target);\n  const state = tile.getState();\n  if (state === TileState.LOADED || state === TileState.ERROR ||\n      state === TileState.EMPTY || state === TileState.ABORT) {\n    unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n    const tileKey = tile.getKey();\n    if (tileKey in this.tilesLoadingKeys_) {\n      delete this.tilesLoadingKeys_[tileKey];\n      --this.tilesLoading_;\n    }\n    this.tileChangeCallback_();\n  }\n};\n\n\n/**\n * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n * @param {number} maxNewLoads Maximum number of new tiles to load.\n */\nTileQueue.prototype.loadMoreTiles = function(maxTotalLoading, maxNewLoads) {\n  let newLoads = 0;\n  let abortedTiles = false;\n  let state, tile, tileKey;\n  while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n         this.getCount() > 0) {\n    tile = /** @type {module:ol/Tile} */ (this.dequeue()[0]);\n    tileKey = tile.getKey();\n    state = tile.getState();\n    if (state === TileState.ABORT) {\n      abortedTiles = true;\n    } else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n      this.tilesLoadingKeys_[tileKey] = true;\n      ++this.tilesLoading_;\n      ++newLoads;\n      tile.load();\n    }\n  }\n  if (newLoads === 0 && abortedTiles) {\n    // Do not stop the render loop when all wanted tiles were aborted due to\n    // a small, saturated tile cache.\n    this.tileChangeCallback_();\n  }\n};\nexport default TileQueue;\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION, inherits} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error}\n * @constructor\n * @extends {Error}\n * @param {number} code Error code.\n */\nconst AssertionError = function(code) {\n\n  const path = VERSION.split('-')[0];\n\n  /**\n   * @type {string}\n   */\n  this.message = 'Assertion failed. See https://openlayers.org/en/' + path +\n      '/doc/errors/#' + code + ' for details.';\n\n  /**\n   * Error code. The meaning of the code can be found on\n   * {@link https://openlayers.org/en/latest/doc/errors/} (replace `latest` with\n   * the version found in the OpenLayers script's header comment if a version\n   * other than the latest is used).\n   * @type {number}\n   * @api\n   */\n  this.code = code;\n\n  this.name = 'AssertionError';\n\n};\n\ninherits(AssertionError, Error);\n\nexport default AssertionError;\n","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../util.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport {makeArrayPusher, makeStructureNS, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array.<string>} [layers] If set, only features of the given layers will be returned by the format when read.\n */\n\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link module:ol/format/GML2~GML2} to read features.\n *\n * @constructor\n * @extends {module:ol/format/XMLFeature}\n * @param {module:ol/format/WMSGetFeatureInfo~Options=} opt_options Options.\n * @api\n */\nconst WMSGetFeatureInfo = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {module:ol/format/GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nconst featureIdentifier = '_feature';\n\n\n/**\n * @const\n * @type {string}\n */\nconst layerIdentifier = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<module:ol/Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  const localName = node.localName;\n  /** @type {Array.<module:ol/Feature>} */\n  let features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n      const layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      const context = objectStack[0];\n\n      const toRemove = layerIdentifier;\n      const layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      const featureType = layerName +\n          featureIdentifier;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      const parsers = {};\n      parsers[featureType] = makeArrayPusher(\n        this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      const parsersNS = makeStructureNS(\n        [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      const layerFeatures = pushParseAndPop(\n        [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    const gmlFeatures = pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {};\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n","/**\n * @module ol/style/Atlas\n */\nimport {createCanvasContext2D} from '../dom.js';\n\n\n/**\n * @typedef {Object} AtlasBlock\n * @property {number} x\n * @property {number} y\n * @property {number} width\n * @property {number} height\n */\n\n/**\n * Provides information for an image inside an atlas.\n * `offsetX` and `offsetY` are the position of the image inside the atlas image `image`.\n * @typedef {Object} AtlasInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n */\n\n/**\n * This class facilitates the creation of image atlases.\n *\n * Images added to an atlas will be rendered onto a single\n * atlas canvas. The distribution of images on the canvas is\n * managed with the bin packing algorithm described in:\n * http://www.blackpawn.com/texts/lightmaps/\n *\n * @constructor\n * @struct\n * @param {number} size The size in pixels of the sprite image.\n * @param {number} space The space in pixels between images.\n *    Because texture coordinates are float values, the edges of\n *    images might not be completely correct (in a way that the\n *    edges overlap when being rendered). To avoid this we add a\n *    padding around each image.\n */\nconst Atlas = function(size, space) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.space_ = space;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/style/Atlas~AtlasBlock>}\n   */\n  this.emptyBlocks_ = [{x: 0, y: 0, width: size, height: size}];\n\n  /**\n   * @private\n   * @type {Object.<string, module:ol/style/Atlas~AtlasInfo>}\n   */\n  this.entries_ = {};\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = createCanvasContext2D(size, size);\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = this.context_.canvas;\n};\n\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?module:ol/style/Atlas~AtlasInfo} The atlas info.\n */\nAtlas.prototype.get = function(id) {\n  return this.entries_[id] || null;\n};\n\n\n/**\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *    Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *    `renderCallback`.\n * @return {?module:ol/style/Atlas~AtlasInfo} The position and atlas image for the entry.\n */\nAtlas.prototype.add = function(id, width, height, renderCallback, opt_this) {\n  for (let i = 0, ii = this.emptyBlocks_.length; i < ii; ++i) {\n    const block = this.emptyBlocks_[i];\n    if (block.width >= width + this.space_ &&\n        block.height >= height + this.space_) {\n      // we found a block that is big enough for our entry\n      const entry = {\n        offsetX: block.x + this.space_,\n        offsetY: block.y + this.space_,\n        image: this.canvas_\n      };\n      this.entries_[id] = entry;\n\n      // render the image on the atlas image\n      renderCallback.call(opt_this, this.context_,\n        block.x + this.space_, block.y + this.space_);\n\n      // split the block after the insertion, either horizontally or vertically\n      this.split_(i, block, width + this.space_, height + this.space_);\n\n      return entry;\n    }\n  }\n\n  // there is no space for the new entry in this atlas\n  return null;\n};\n\n\n/**\n * @private\n * @param {number} index The index of the block.\n * @param {module:ol/style/Atlas~AtlasBlock} block The block to split.\n * @param {number} width The width of the entry to insert.\n * @param {number} height The height of the entry to insert.\n */\nAtlas.prototype.split_ = function(index, block, width, height) {\n  const deltaWidth = block.width - width;\n  const deltaHeight = block.height - height;\n\n  /** @type {module:ol/style/Atlas~AtlasBlock} */\n  let newBlock1;\n  /** @type {module:ol/style/Atlas~AtlasBlock} */\n  let newBlock2;\n\n  if (deltaWidth > deltaHeight) {\n    // split vertically\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: block.height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  } else {\n    // split horizontally\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: block.width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  }\n};\n\n\n/**\n * Remove the old block and insert new blocks at the same array position.\n * The new blocks are inserted at the same position, so that splitted\n * blocks (that are potentially smaller) are filled first.\n * @private\n * @param {number} index The index of the block to remove.\n * @param {module:ol/style/Atlas~AtlasBlock} newBlock1 The 1st block to add.\n * @param {module:ol/style/Atlas~AtlasBlock} newBlock2 The 2nd block to add.\n */\nAtlas.prototype.updateBlocks_ = function(index, newBlock1, newBlock2) {\n  const args = [index, 1];\n  if (newBlock1.width > 0 && newBlock1.height > 0) {\n    args.push(newBlock1);\n  }\n  if (newBlock2.width > 0 && newBlock2.height > 0) {\n    args.push(newBlock2);\n  }\n  this.emptyBlocks_.splice.apply(this.emptyBlocks_, args);\n};\nexport default Atlas;\n","/**\n * @module ol/source/Zoomify\n */\nimport {DEFAULT_TILE_SIZE} from '../tilegrid/common.js';\nimport {inherits} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getTopLeft} from '../extent.js';\nimport {toSize} from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\n\n\n/**\n * @enum {string}\n */\nconst TierSizeCalculation = {\n  DEFAULT: 'default',\n  TRUNCATED: 'truncated'\n};\n\n\n/**\n * @constructor\n * @extends {module:ol/ImageTile}\n * @param {module:ol/tilegrid/TileGrid} tileGrid TileGrid that the tile belongs to.\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileState} state State.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n * @param {module:ol/Tile~Options=} opt_options Tile options.\n */\nexport const CustomTile = function(\n  tileGrid, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n  ImageTile.call(this, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options);\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n   */\n  this.zoomifyImage_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.tileSize_ = toSize(tileGrid.getTileSize(tileCoord[0]));\n};\ninherits(CustomTile, ImageTile);\n\n\n/**\n * @inheritDoc\n */\nCustomTile.prototype.getImage = function() {\n  if (this.zoomifyImage_) {\n    return this.zoomifyImage_;\n  }\n  const image = ImageTile.prototype.getImage.call(this);\n  if (this.state == TileState.LOADED) {\n    const tileSize = this.tileSize_;\n    if (image.width == tileSize[0] && image.height == tileSize[1]) {\n      this.zoomifyImage_ = image;\n      return image;\n    } else {\n      const context = createCanvasContext2D(tileSize[0], tileSize[1]);\n      context.drawImage(image, 0, 0);\n      this.zoomifyImage_ = context.canvas;\n      return context.canvas;\n    }\n  } else {\n    return image;\n  }\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {module:ol/proj~ProjectionLike} [projection] Projection.\n * @property {boolean} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {string} [url] URL template or base URL of the Zoomify service.\n * A base URL is the fixed part\n * of the URL, excluding the tile group, z, x, and y folder structure, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/`. A URL template must include\n * `{TileGroup}`, `{x}`, `{y}`, and `{z}` placeholders, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/{TileGroup}/{z}-{x}-{y}.jpg`.\n * Internet Imaging Protocol (IIP) with JTL extension can be also used with\n * `{tileIndex}` and `{z}` placeholders, e.g.\n * `http://my.zoomify.info?FIF=IMAGE.TIF&JTL={z},{tileIndex}`.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {string} [tierSizeCalculation] Tier size calculation method: `default` or `truncated`.\n * @property {module:ol/size~Size} [size] Size of the image.\n * @property {module:ol/extent~Extent} [extent] Extent for the TileGrid that is created.\n * Default sets the TileGrid in the\n * fourth quadrant, meaning extent is `[0, -height, width, 0]`. To change the\n * extent to the first quadrant (the default for OpenLayers 2) set the extent\n * as `[0, 0, width, height]`.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [tileSize=256] Tile size. Same tile size is used for all zoom levels.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data in Zoomify format (both Zoomify and Internet\n * Imaging Protocol are supported).\n *\n * @constructor\n * @extends {module:ol/source/TileImage}\n * @param {module:ol/source/Zoomify~Options=} opt_options Options.\n * @api\n */\nconst Zoomify = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const size = options.size;\n  const tierSizeCalculation = options.tierSizeCalculation !== undefined ?\n    options.tierSizeCalculation :\n    TierSizeCalculation.DEFAULT;\n\n  const imageWidth = size[0];\n  const imageHeight = size[1];\n  const extent = options.extent || [0, -size[1], size[0], 0];\n  const tierSizeInTiles = [];\n  const tileSize = options.tileSize || DEFAULT_TILE_SIZE;\n  let tileSizeForTierSizeCalculation = tileSize;\n\n  switch (tierSizeCalculation) {\n    case TierSizeCalculation.DEFAULT:\n      while (imageWidth > tileSizeForTierSizeCalculation || imageHeight > tileSizeForTierSizeCalculation) {\n        tierSizeInTiles.push([\n          Math.ceil(imageWidth / tileSizeForTierSizeCalculation),\n          Math.ceil(imageHeight / tileSizeForTierSizeCalculation)\n        ]);\n        tileSizeForTierSizeCalculation += tileSizeForTierSizeCalculation;\n      }\n      break;\n    case TierSizeCalculation.TRUNCATED:\n      let width = imageWidth;\n      let height = imageHeight;\n      while (width > tileSizeForTierSizeCalculation || height > tileSizeForTierSizeCalculation) {\n        tierSizeInTiles.push([\n          Math.ceil(width / tileSizeForTierSizeCalculation),\n          Math.ceil(height / tileSizeForTierSizeCalculation)\n        ]);\n        width >>= 1;\n        height >>= 1;\n      }\n      break;\n    default:\n      assert(false, 53); // Unknown `tierSizeCalculation` configured\n      break;\n  }\n\n  tierSizeInTiles.push([1, 1]);\n  tierSizeInTiles.reverse();\n\n  const resolutions = [1];\n  const tileCountUpToTier = [0];\n  for (let i = 1, ii = tierSizeInTiles.length; i < ii; i++) {\n    resolutions.push(1 << i);\n    tileCountUpToTier.push(\n      tierSizeInTiles[i - 1][0] * tierSizeInTiles[i - 1][1] +\n        tileCountUpToTier[i - 1]\n    );\n  }\n  resolutions.reverse();\n\n  const tileGrid = new TileGrid({\n    tileSize: tileSize,\n    extent: extent,\n    origin: getTopLeft(extent),\n    resolutions: resolutions\n  });\n\n  let url = options.url;\n  if (url && url.indexOf('{TileGroup}') == -1 && url.indexOf('{tileIndex}') == -1) {\n    url += '{TileGroup}/{z}-{x}-{y}.jpg';\n  }\n  const urls = expandUrl(url);\n\n  /**\n   * @param {string} template Template.\n   * @return {module:ol/Tile~UrlFunction} Tile URL function.\n   */\n  function createFromTemplate(template) {\n\n    return (\n      /**\n       * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {module:ol/proj/Projection} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function(tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        } else {\n          const tileCoordZ = tileCoord[0];\n          const tileCoordX = tileCoord[1];\n          const tileCoordY = -tileCoord[2] - 1;\n          const tileIndex =\n              tileCoordX +\n              tileCoordY * tierSizeInTiles[tileCoordZ][0];\n          const tileSize = tileGrid.getTileSize(tileCoordZ);\n          const tileGroup = ((tileIndex + tileCountUpToTier[tileCoordZ]) / tileSize) | 0;\n          const localContext = {\n            'z': tileCoordZ,\n            'x': tileCoordX,\n            'y': tileCoordY,\n            'tileIndex': tileIndex,\n            'TileGroup': 'TileGroup' + tileGroup\n          };\n          return template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n            return localContext[p];\n          });\n        }\n      }\n    );\n  }\n\n  const tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromTemplate));\n\n  const ZoomifyTileClass = CustomTile.bind(null, tileGrid);\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: ZoomifyTileClass,\n    tileGrid: tileGrid,\n    tileUrlFunction: tileUrlFunction,\n    transition: options.transition\n  });\n\n};\n\ninherits(Zoomify, TileImage);\n\n\nexport default Zoomify;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {inherits} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n *\n * @constructor\n * @extends {module:ol/render/VectorContext}\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @struct\n */\nconst CanvasImmediateRenderer = function(context, pixelRatio, extent, transform, viewRotation) {\n  VectorContext.call(this);\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = context;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = extent;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.transform_ = transform;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.viewRotation_ = viewRotation;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~FillState}\n   */\n  this.contextFillState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~StrokeState}\n   */\n  this.contextStrokeState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~TextState}\n   */\n  this.contextTextState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~FillState}\n   */\n  this.fillState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~StrokeState}\n   */\n  this.strokeState_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|HTMLVideoElement|Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageAnchorX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageAnchorY_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageHeight_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageOpacity_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageOriginX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageOriginY_ = 0;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.imageRotateWithView_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageRotation_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageScale_ = 0;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.imageSnapToPixel_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageWidth_ = 0;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.text_ = '';\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetY_ = 0;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.textRotateWithView_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textRotation_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textScale_ = 0;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~FillState}\n   */\n  this.textFillState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~StrokeState}\n   */\n  this.textStrokeState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~TextState}\n   */\n  this.textState_ = null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.pixelCoordinates_ = [];\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.tmpLocalTransform_ = createTransform();\n\n};\n\ninherits(CanvasImmediateRenderer, VectorContext);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n */\nCanvasImmediateRenderer.prototype.drawImages_ = function(flatCoordinates, offset, end, stride) {\n  if (!this.image_) {\n    return;\n  }\n  const pixelCoordinates = transform2D(\n    flatCoordinates, offset, end, 2, this.transform_,\n    this.pixelCoordinates_);\n  const context = this.context_;\n  const localTransform = this.tmpLocalTransform_;\n  const alpha = context.globalAlpha;\n  if (this.imageOpacity_ != 1) {\n    context.globalAlpha = alpha * this.imageOpacity_;\n  }\n  let rotation = this.imageRotation_;\n  if (this.imageRotateWithView_) {\n    rotation += this.viewRotation_;\n  }\n  for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n    let x = pixelCoordinates[i] - this.imageAnchorX_;\n    let y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n    if (this.imageSnapToPixel_) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      const centerX = x + this.imageAnchorX_;\n      const centerY = y + this.imageAnchorY_;\n      composeTransform(localTransform,\n        centerX, centerY,\n        this.imageScale_, this.imageScale_,\n        rotation,\n        -centerX, -centerY);\n      context.setTransform.apply(context, localTransform);\n    }\n    context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_,\n      this.imageWidth_, this.imageHeight_, x, y,\n      this.imageWidth_, this.imageHeight_);\n  }\n  if (rotation !== 0 || this.imageScale_ != 1) {\n    context.setTransform(1, 0, 0, 1, 0, 0);\n  }\n  if (this.imageOpacity_ != 1) {\n    context.globalAlpha = alpha;\n  }\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n */\nCanvasImmediateRenderer.prototype.drawText_ = function(flatCoordinates, offset, end, stride) {\n  if (!this.textState_ || this.text_ === '') {\n    return;\n  }\n  if (this.textFillState_) {\n    this.setContextFillState_(this.textFillState_);\n  }\n  if (this.textStrokeState_) {\n    this.setContextStrokeState_(this.textStrokeState_);\n  }\n  this.setContextTextState_(this.textState_);\n  const pixelCoordinates = transform2D(\n    flatCoordinates, offset, end, stride, this.transform_,\n    this.pixelCoordinates_);\n  const context = this.context_;\n  let rotation = this.textRotation_;\n  if (this.textRotateWithView_) {\n    rotation += this.viewRotation_;\n  }\n  for (; offset < end; offset += stride) {\n    const x = pixelCoordinates[offset] + this.textOffsetX_;\n    const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n    if (rotation !== 0 || this.textScale_ != 1) {\n      const localTransform = composeTransform(this.tmpLocalTransform_,\n        x, y,\n        this.textScale_, this.textScale_,\n        rotation,\n        -x, -y);\n      context.setTransform.apply(context, localTransform);\n    }\n    if (this.textStrokeState_) {\n      context.strokeText(this.text_, x, y);\n    }\n    if (this.textFillState_) {\n      context.fillText(this.text_, x, y);\n    }\n  }\n  if (rotation !== 0 || this.textScale_ != 1) {\n    context.setTransform(1, 0, 0, 1, 0, 0);\n  }\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {boolean} close Close.\n * @private\n * @return {number} end End.\n */\nCanvasImmediateRenderer.prototype.moveToLineTo_ = function(flatCoordinates, offset, end, stride, close) {\n  const context = this.context_;\n  const pixelCoordinates = transform2D(\n    flatCoordinates, offset, end, stride, this.transform_,\n    this.pixelCoordinates_);\n  context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n  let length = pixelCoordinates.length;\n  if (close) {\n    length -= 2;\n  }\n  for (let i = 2; i < length; i += 2) {\n    context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n  }\n  if (close) {\n    context.closePath();\n  }\n  return end;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @private\n * @return {number} End.\n */\nCanvasImmediateRenderer.prototype.drawRings_ = function(flatCoordinates, offset, ends, stride) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n  }\n  return offset;\n};\n\n\n/**\n * Render a circle geometry into the canvas.  Rendering is immediate and uses\n * the current fill and stroke styles.\n *\n * @param {module:ol/geom/Circle} geometry Circle geometry.\n * @override\n * @api\n */\nCanvasImmediateRenderer.prototype.drawCircle = function(geometry) {\n  if (!intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.fillState_ || this.strokeState_) {\n    if (this.fillState_) {\n      this.setContextFillState_(this.fillState_);\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n    }\n    const pixelCoordinates = transformGeom2D(\n      geometry, this.transform_, this.pixelCoordinates_);\n    const dx = pixelCoordinates[2] - pixelCoordinates[0];\n    const dy = pixelCoordinates[3] - pixelCoordinates[1];\n    const radius = Math.sqrt(dx * dx + dy * dy);\n    const context = this.context_;\n    context.beginPath();\n    context.arc(\n      pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n    if (this.fillState_) {\n      context.fill();\n    }\n    if (this.strokeState_) {\n      context.stroke();\n    }\n  }\n  if (this.text_ !== '') {\n    this.drawText_(geometry.getCenter(), 0, 2, 2);\n  }\n};\n\n\n/**\n * Set the rendering style.  Note that since this is an immediate rendering API,\n * any `zIndex` on the provided style will be ignored.\n *\n * @param {module:ol/style/Style} style The rendering style.\n * @override\n * @api\n */\nCanvasImmediateRenderer.prototype.setStyle = function(style) {\n  this.setFillStrokeStyle(style.getFill(), style.getStroke());\n  this.setImageStyle(style.getImage());\n  this.setTextStyle(style.getText());\n};\n\n\n/**\n * Render a geometry into the canvas.  Call\n * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n *\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry The geometry to render.\n * @override\n * @api\n */\nCanvasImmediateRenderer.prototype.drawGeometry = function(geometry) {\n  const type = geometry.getType();\n  switch (type) {\n    case GeometryType.POINT:\n      this.drawPoint(/** @type {module:ol/geom/Point} */ (geometry));\n      break;\n    case GeometryType.LINE_STRING:\n      this.drawLineString(/** @type {module:ol/geom/LineString} */ (geometry));\n      break;\n    case GeometryType.POLYGON:\n      this.drawPolygon(/** @type {module:ol/geom/Polygon} */ (geometry));\n      break;\n    case GeometryType.MULTI_POINT:\n      this.drawMultiPoint(/** @type {module:ol/geom/MultiPoint} */ (geometry));\n      break;\n    case GeometryType.MULTI_LINE_STRING:\n      this.drawMultiLineString(/** @type {module:ol/geom/MultiLineString} */ (geometry));\n      break;\n    case GeometryType.MULTI_POLYGON:\n      this.drawMultiPolygon(/** @type {module:ol/geom/MultiPolygon} */ (geometry));\n      break;\n    case GeometryType.GEOMETRY_COLLECTION:\n      this.drawGeometryCollection(/** @type {module:ol/geom/GeometryCollection} */ (geometry));\n      break;\n    case GeometryType.CIRCLE:\n      this.drawCircle(/** @type {module:ol/geom/Circle} */ (geometry));\n      break;\n    default:\n  }\n};\n\n\n/**\n * Render a feature into the canvas.  Note that any `zIndex` on the provided\n * style will be ignored - features are rendered immediately in the order that\n * this method is called.  If you need `zIndex` support, you should be using an\n * {@link module:ol/layer/Vector~VectorLayer} instead.\n *\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @override\n * @api\n */\nCanvasImmediateRenderer.prototype.drawFeature = function(feature, style) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  this.setStyle(style);\n  this.drawGeometry(geometry);\n};\n\n\n/**\n * Render a GeometryCollection to the canvas.  Rendering is immediate and\n * uses the current styles appropriate for each geometry in the collection.\n *\n * @param {module:ol/geom/GeometryCollection} geometry Geometry collection.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawGeometryCollection = function(geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    this.drawGeometry(geometries[i]);\n  }\n};\n\n\n/**\n * Render a Point geometry into the canvas.  Rendering is immediate and uses\n * the current style.\n *\n * @param {module:ol/geom/Point|module:ol/render/Feature} geometry Point geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawPoint = function(geometry) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  if (this.image_) {\n    this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n  if (this.text_ !== '') {\n    this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n};\n\n\n/**\n * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n * uses the current style.\n *\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} geometry MultiPoint geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawMultiPoint = function(geometry) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  if (this.image_) {\n    this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n  if (this.text_ !== '') {\n    this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n};\n\n\n/**\n * Render a LineString into the canvas.  Rendering is immediate and uses\n * the current style.\n *\n * @param {module:ol/geom/LineString|module:ol/render/Feature} geometry LineString geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawLineString = function(geometry) {\n  if (!intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.strokeState_) {\n    this.setContextStrokeState_(this.strokeState_);\n    const context = this.context_;\n    const flatCoordinates = geometry.getFlatCoordinates();\n    context.beginPath();\n    this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n      geometry.getStride(), false);\n    context.stroke();\n  }\n  if (this.text_ !== '') {\n    const flatMidpoint = geometry.getFlatMidpoint();\n    this.drawText_(flatMidpoint, 0, 2, 2);\n  }\n};\n\n\n/**\n * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n * and uses the current style.\n *\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} geometry MultiLineString geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawMultiLineString = function(geometry) {\n  const geometryExtent = geometry.getExtent();\n  if (!intersects(this.extent_, geometryExtent)) {\n    return;\n  }\n  if (this.strokeState_) {\n    this.setContextStrokeState_(this.strokeState_);\n    const context = this.context_;\n    const flatCoordinates = geometry.getFlatCoordinates();\n    let offset = 0;\n    const ends = geometry.getEnds();\n    const stride = geometry.getStride();\n    context.beginPath();\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n    }\n    context.stroke();\n  }\n  if (this.text_ !== '') {\n    const flatMidpoints = geometry.getFlatMidpoints();\n    this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n  }\n};\n\n\n/**\n * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n * the current style.\n *\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} geometry Polygon geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawPolygon = function(geometry) {\n  if (!intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.strokeState_ || this.fillState_) {\n    if (this.fillState_) {\n      this.setContextFillState_(this.fillState_);\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n    }\n    const context = this.context_;\n    context.beginPath();\n    this.drawRings_(geometry.getOrientedFlatCoordinates(),\n      0, geometry.getEnds(), geometry.getStride());\n    if (this.fillState_) {\n      context.fill();\n    }\n    if (this.strokeState_) {\n      context.stroke();\n    }\n  }\n  if (this.text_ !== '') {\n    const flatInteriorPoint = geometry.getFlatInteriorPoint();\n    this.drawText_(flatInteriorPoint, 0, 2, 2);\n  }\n};\n\n\n/**\n * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n * uses the current style.\n * @param {module:ol/geom/MultiPolygon} geometry MultiPolygon geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawMultiPolygon = function(geometry) {\n  if (!intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.strokeState_ || this.fillState_) {\n    if (this.fillState_) {\n      this.setContextFillState_(this.fillState_);\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n    }\n    const context = this.context_;\n    const flatCoordinates = geometry.getOrientedFlatCoordinates();\n    let offset = 0;\n    const endss = geometry.getEndss();\n    const stride = geometry.getStride();\n    context.beginPath();\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i];\n      offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n    }\n    if (this.fillState_) {\n      context.fill();\n    }\n    if (this.strokeState_) {\n      context.stroke();\n    }\n  }\n  if (this.text_ !== '') {\n    const flatInteriorPoints = geometry.getFlatInteriorPoints();\n    this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillState} fillState Fill state.\n * @private\n */\nCanvasImmediateRenderer.prototype.setContextFillState_ = function(fillState) {\n  const context = this.context_;\n  const contextFillState = this.contextFillState_;\n  if (!contextFillState) {\n    context.fillStyle = fillState.fillStyle;\n    this.contextFillState_ = {\n      fillStyle: fillState.fillStyle\n    };\n  } else {\n    if (contextFillState.fillStyle != fillState.fillStyle) {\n      contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~StrokeState} strokeState Stroke state.\n * @private\n */\nCanvasImmediateRenderer.prototype.setContextStrokeState_ = function(strokeState) {\n  const context = this.context_;\n  const contextStrokeState = this.contextStrokeState_;\n  if (!contextStrokeState) {\n    context.lineCap = strokeState.lineCap;\n    if (CANVAS_LINE_DASH) {\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n    }\n    context.lineJoin = strokeState.lineJoin;\n    context.lineWidth = strokeState.lineWidth;\n    context.miterLimit = strokeState.miterLimit;\n    context.strokeStyle = strokeState.strokeStyle;\n    this.contextStrokeState_ = {\n      lineCap: strokeState.lineCap,\n      lineDash: strokeState.lineDash,\n      lineDashOffset: strokeState.lineDashOffset,\n      lineJoin: strokeState.lineJoin,\n      lineWidth: strokeState.lineWidth,\n      miterLimit: strokeState.miterLimit,\n      strokeStyle: strokeState.strokeStyle\n    };\n  } else {\n    if (contextStrokeState.lineCap != strokeState.lineCap) {\n      contextStrokeState.lineCap = context.lineCap = strokeState.lineCap;\n    }\n    if (CANVAS_LINE_DASH) {\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = context.lineDashOffset =\n            strokeState.lineDashOffset;\n      }\n    }\n    if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n      contextStrokeState.lineJoin = context.lineJoin = strokeState.lineJoin;\n    }\n    if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n      contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n    }\n    if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n      contextStrokeState.miterLimit = context.miterLimit =\n          strokeState.miterLimit;\n    }\n    if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n      contextStrokeState.strokeStyle = context.strokeStyle =\n          strokeState.strokeStyle;\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~TextState} textState Text state.\n * @private\n */\nCanvasImmediateRenderer.prototype.setContextTextState_ = function(textState) {\n  const context = this.context_;\n  const contextTextState = this.contextTextState_;\n  const textAlign = textState.textAlign ?\n    textState.textAlign : defaultTextAlign;\n  if (!contextTextState) {\n    context.font = textState.font;\n    context.textAlign = textAlign;\n    context.textBaseline = textState.textBaseline;\n    this.contextTextState_ = {\n      font: textState.font,\n      textAlign: textAlign,\n      textBaseline: textState.textBaseline\n    };\n  } else {\n    if (contextTextState.font != textState.font) {\n      contextTextState.font = context.font = textState.font;\n    }\n    if (contextTextState.textAlign != textAlign) {\n      contextTextState.textAlign = context.textAlign = textAlign;\n    }\n    if (contextTextState.textBaseline != textState.textBaseline) {\n      contextTextState.textBaseline = context.textBaseline =\n          textState.textBaseline;\n    }\n  }\n};\n\n\n/**\n * Set the fill and stroke style for subsequent draw operations.  To clear\n * either fill or stroke styles, pass null for the appropriate parameter.\n *\n * @param {module:ol/style/Fill} fillStyle Fill style.\n * @param {module:ol/style/Stroke} strokeStyle Stroke style.\n * @override\n */\nCanvasImmediateRenderer.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  if (!fillStyle) {\n    this.fillState_ = null;\n  } else {\n    const fillStyleColor = fillStyle.getColor();\n    this.fillState_ = {\n      fillStyle: asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle)\n    };\n  }\n  if (!strokeStyle) {\n    this.strokeState_ = null;\n  } else {\n    const strokeStyleColor = strokeStyle.getColor();\n    const strokeStyleLineCap = strokeStyle.getLineCap();\n    const strokeStyleLineDash = strokeStyle.getLineDash();\n    const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n    const strokeStyleLineJoin = strokeStyle.getLineJoin();\n    const strokeStyleWidth = strokeStyle.getWidth();\n    const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n    this.strokeState_ = {\n      lineCap: strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap,\n      lineDash: strokeStyleLineDash ?\n        strokeStyleLineDash : defaultLineDash,\n      lineDashOffset: strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset,\n      lineJoin: strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin,\n      lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth),\n      miterLimit: strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit,\n      strokeStyle: asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle)\n    };\n  }\n};\n\n\n/**\n * Set the image style for subsequent draw operations.  Pass null to remove\n * the image style.\n *\n * @param {module:ol/style/Image} imageStyle Image style.\n * @override\n */\nCanvasImmediateRenderer.prototype.setImageStyle = function(imageStyle) {\n  if (!imageStyle) {\n    this.image_ = null;\n  } else {\n    const imageAnchor = imageStyle.getAnchor();\n    // FIXME pixel ratio\n    const imageImage = imageStyle.getImage(1);\n    const imageOrigin = imageStyle.getOrigin();\n    const imageSize = imageStyle.getSize();\n    this.imageAnchorX_ = imageAnchor[0];\n    this.imageAnchorY_ = imageAnchor[1];\n    this.imageHeight_ = imageSize[1];\n    this.image_ = imageImage;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n    this.imageSnapToPixel_ = imageStyle.getSnapToPixel();\n    this.imageWidth_ = imageSize[0];\n  }\n};\n\n\n/**\n * Set the text style for subsequent draw operations.  Pass null to\n * remove the text style.\n *\n * @param {module:ol/style/Text} textStyle Text style.\n * @override\n */\nCanvasImmediateRenderer.prototype.setTextStyle = function(textStyle) {\n  if (!textStyle) {\n    this.text_ = '';\n  } else {\n    const textFillStyle = textStyle.getFill();\n    if (!textFillStyle) {\n      this.textFillState_ = null;\n    } else {\n      const textFillStyleColor = textFillStyle.getColor();\n      this.textFillState_ = {\n        fillStyle: asColorLike(textFillStyleColor ?\n          textFillStyleColor : defaultFillStyle)\n      };\n    }\n    const textStrokeStyle = textStyle.getStroke();\n    if (!textStrokeStyle) {\n      this.textStrokeState_ = null;\n    } else {\n      const textStrokeStyleColor = textStrokeStyle.getColor();\n      const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n      const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n      const textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n      const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n      const textStrokeStyleWidth = textStrokeStyle.getWidth();\n      const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n      this.textStrokeState_ = {\n        lineCap: textStrokeStyleLineCap !== undefined ?\n          textStrokeStyleLineCap : defaultLineCap,\n        lineDash: textStrokeStyleLineDash ?\n          textStrokeStyleLineDash : defaultLineDash,\n        lineDashOffset: textStrokeStyleLineDashOffset ?\n          textStrokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: textStrokeStyleLineJoin !== undefined ?\n          textStrokeStyleLineJoin : defaultLineJoin,\n        lineWidth: textStrokeStyleWidth !== undefined ?\n          textStrokeStyleWidth : defaultLineWidth,\n        miterLimit: textStrokeStyleMiterLimit !== undefined ?\n          textStrokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(textStrokeStyleColor ?\n          textStrokeStyleColor : defaultStrokeStyle)\n      };\n    }\n    const textFont = textStyle.getFont();\n    const textOffsetX = textStyle.getOffsetX();\n    const textOffsetY = textStyle.getOffsetY();\n    const textRotateWithView = textStyle.getRotateWithView();\n    const textRotation = textStyle.getRotation();\n    const textScale = textStyle.getScale();\n    const textText = textStyle.getText();\n    const textTextAlign = textStyle.getTextAlign();\n    const textTextBaseline = textStyle.getTextBaseline();\n    this.textState_ = {\n      font: textFont !== undefined ?\n        textFont : defaultFont,\n      textAlign: textTextAlign !== undefined ?\n        textTextAlign : defaultTextAlign,\n      textBaseline: textTextBaseline !== undefined ?\n        textTextBaseline : defaultTextBaseline\n    };\n    this.text_ = textText !== undefined ? textText : '';\n    this.textOffsetX_ =\n        textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n    this.textOffsetY_ =\n        textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n    this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n    this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n    this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n      textScale : 1);\n  }\n};\nexport default CanvasImmediateRenderer;\n","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/render/ReplayGroup\n */\n/**\n * Base class for replay groups.\n * @constructor\n * @abstract\n */\nconst ReplayGroup = function() {};\n\n\n/**\n * @abstract\n * @param {number|undefined} zIndex Z index.\n * @param {module:ol/render/ReplayType} replayType Replay type.\n * @return {module:ol/render/VectorContext} Replay.\n */\nReplayGroup.prototype.getReplay = function(zIndex, replayType) {};\n\n\n/**\n * @abstract\n * @return {boolean} Is empty.\n */\nReplayGroup.prototype.isEmpty = function() {};\nexport default ReplayGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport {getUid, inherits} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {FALSE, UNDEFINED} from '../functions.js';\nimport SourceState from '../source/State.js';\n\n/**\n * @constructor\n * @extends {module:ol/Observable}\n * @param {module:ol/layer/Layer} layer Layer.\n * @struct\n */\nconst LayerRenderer = function(layer) {\n\n  Observable.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/layer/Layer}\n   */\n  this.layer_ = layer;\n\n\n};\n\ninherits(LayerRenderer, Observable);\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature), module:ol/layer/Layer): T}\n *     callback Feature callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @return {T|undefined} Callback result.\n * @template S,T\n */\nLayerRenderer.prototype.forEachFeatureAtCoordinate = UNDEFINED;\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @return {boolean} Is there a feature at the given coordinate?\n */\nLayerRenderer.prototype.hasFeatureAtCoordinate = FALSE;\n\n\n/**\n * Create a function that adds loaded tiles to the tile lookup.\n * @param {module:ol/source/Tile} source Tile source.\n * @param {module:ol/proj/Projection} projection Projection of the tiles.\n * @param {Object.<number, Object.<string, module:ol/Tile>>} tiles Lookup of loaded tiles by zoom level.\n * @return {function(number, module:ol/TileRange):boolean} A function that can be\n *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n * @protected\n */\nLayerRenderer.prototype.createLoadedTileFinder = function(source, projection, tiles) {\n  return (\n    /**\n     * @param {number} zoom Zoom level.\n     * @param {module:ol/TileRange} tileRange Tile range.\n     * @return {boolean} The tile range is fully loaded.\n     */\n    function(zoom, tileRange) {\n      function callback(tile) {\n        if (!tiles[zoom]) {\n          tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n      }\n      return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n    }\n  );\n};\n\n\n/**\n * @return {module:ol/layer/Layer} Layer.\n */\nLayerRenderer.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * Handle changes in image state.\n * @param {module:ol/events/Event} event Image change event.\n * @private\n */\nLayerRenderer.prototype.handleImageChange_ = function(event) {\n  const image = /** @type {module:ol/Image} */ (event.target);\n  if (image.getState() === ImageState.LOADED) {\n    this.renderIfReadyAndVisible();\n  }\n};\n\n\n/**\n * Load the image if not already loaded, and register the image change\n * listener if needed.\n * @param {module:ol/ImageBase} image Image.\n * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n * @protected\n */\nLayerRenderer.prototype.loadImage = function(image) {\n  let imageState = image.getState();\n  if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n    listen(image, EventType.CHANGE, this.handleImageChange_, this);\n  }\n  if (imageState == ImageState.IDLE) {\n    image.load();\n    imageState = image.getState();\n  }\n  return imageState == ImageState.LOADED;\n};\n\n\n/**\n * @protected\n */\nLayerRenderer.prototype.renderIfReadyAndVisible = function() {\n  const layer = this.getLayer();\n  if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/source/Tile} tileSource Tile source.\n * @protected\n */\nLayerRenderer.prototype.scheduleExpireCache = function(frameState, tileSource) {\n  if (tileSource.canExpireCache()) {\n    /**\n     * @param {module:ol/source/Tile} tileSource Tile source.\n     * @param {module:ol/PluggableMap} map Map.\n     * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n     */\n    const postRenderFunction = function(tileSource, map, frameState) {\n      const tileSourceKey = getUid(tileSource).toString();\n      if (tileSourceKey in frameState.usedTiles) {\n        tileSource.expireCache(frameState.viewState.projection,\n          frameState.usedTiles[tileSourceKey]);\n      }\n    }.bind(null, tileSource);\n\n    frameState.postRenderFunctions.push(\n      /** @type {module:ol/PluggableMap~PostRenderFunction} */ (postRenderFunction)\n    );\n  }\n};\n\n\n/**\n * @param {!Object.<string, !Object.<string, module:ol/TileRange>>} usedTiles Used tiles.\n * @param {module:ol/source/Tile} tileSource Tile source.\n * @param {number} z Z.\n * @param {module:ol/TileRange} tileRange Tile range.\n * @protected\n */\nLayerRenderer.prototype.updateUsedTiles = function(usedTiles, tileSource, z, tileRange) {\n  // FIXME should we use tilesToDrawByZ instead?\n  const tileSourceKey = getUid(tileSource).toString();\n  const zKey = z.toString();\n  if (tileSourceKey in usedTiles) {\n    if (zKey in usedTiles[tileSourceKey]) {\n      usedTiles[tileSourceKey][zKey].extend(tileRange);\n    } else {\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  } else {\n    usedTiles[tileSourceKey] = {};\n    usedTiles[tileSourceKey][zKey] = tileRange;\n  }\n};\n\n\n/**\n * Manage tile pyramid.\n * This function performs a number of functions related to the tiles at the\n * current zoom and lower zoom levels:\n * - registers idle tiles in frameState.wantedTiles so that they are not\n *   discarded by the tile queue\n * - enqueues missing tiles\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/source/Tile} tileSource Tile source.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} currentZ Current Z.\n * @param {number} preload Load low resolution tiles up to 'preload' levels.\n * @param {function(this: T, module:ol/Tile)=} opt_tileCallback Tile callback.\n * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n * @protected\n * @template T\n */\nLayerRenderer.prototype.manageTilePyramid = function(\n  frameState, tileSource, tileGrid, pixelRatio, projection, extent,\n  currentZ, preload, opt_tileCallback, opt_this) {\n  const tileSourceKey = getUid(tileSource).toString();\n  if (!(tileSourceKey in frameState.wantedTiles)) {\n    frameState.wantedTiles[tileSourceKey] = {};\n  }\n  const wantedTiles = frameState.wantedTiles[tileSourceKey];\n  const tileQueue = frameState.tileQueue;\n  const minZoom = tileGrid.getMinZoom();\n  let tile, tileRange, tileResolution, x, y, z;\n  for (z = minZoom; z <= currentZ; ++z) {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n    tileResolution = tileGrid.getResolution(z);\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (currentZ - z <= preload) {\n          tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n          if (tile.getState() == TileState.IDLE) {\n            wantedTiles[tile.getKey()] = true;\n            if (!tileQueue.isKeyQueued(tile.getKey())) {\n              tileQueue.enqueue([tile, tileSourceKey,\n                tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n            }\n          }\n          if (opt_tileCallback !== undefined) {\n            opt_tileCallback.call(opt_this, tile);\n          }\n        } else {\n          tileSource.useTile(z, x, y, projection);\n        }\n      }\n    }\n  }\n};\nexport default LayerRenderer;\n","/**\n * @module ol/layer/Base\n */\nimport {inherits} from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from '../layer/Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/Object}\n * @param {module:ol/layer/Base~Options} options Layer options.\n * @api\n */\nconst BaseLayer = function(options) {\n\n  BaseObject.call(this);\n\n  /**\n   * @type {Object.<string, *>}\n   */\n  const properties = assign({}, options);\n  properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n  properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n  properties[LayerProperty.Z_INDEX] =\n      options.zIndex !== undefined ? options.zIndex : 0;\n  properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n  properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n\n  this.setProperties(properties);\n\n  /**\n   * @type {module:ol/layer/Layer~State}\n   * @private\n   */\n  this.state_ = /** @type {module:ol/layer/Layer~State} */ ({\n    layer: /** @type {module:ol/layer/Layer} */ (this),\n    managed: true\n  });\n\n  /**\n   * The layer type.\n   * @type {module:ol/LayerType}\n   * @protected;\n   */\n  this.type;\n\n};\n\ninherits(BaseLayer, BaseObject);\n\n\n/**\n * Get the layer type (used when creating a layer renderer).\n * @return {module:ol/LayerType} The layer type.\n */\nBaseLayer.prototype.getType = function() {\n  return this.type;\n};\n\n\n/**\n * @return {module:ol/layer/Layer~State} Layer state.\n */\nBaseLayer.prototype.getLayerState = function() {\n  this.state_.opacity = clamp(this.getOpacity(), 0, 1);\n  this.state_.sourceState = this.getSourceState();\n  this.state_.visible = this.getVisible();\n  this.state_.extent = this.getExtent();\n  this.state_.zIndex = this.getZIndex();\n  this.state_.maxResolution = this.getMaxResolution();\n  this.state_.minResolution = Math.max(this.getMinResolution(), 0);\n\n  return this.state_;\n};\n\n\n/**\n * @abstract\n * @param {Array.<module:ol/layer/Layer>=} opt_array Array of layers (to be\n *     modified in place).\n * @return {Array.<module:ol/layer/Layer>} Array of layers.\n */\nBaseLayer.prototype.getLayersArray = function(opt_array) {};\n\n\n/**\n * @abstract\n * @param {Array.<module:ol/layer/Layer~State>=} opt_states Optional list of layer\n *     states (to be modified in place).\n * @return {Array.<module:ol/layer/Layer~State>} List of layer states.\n */\nBaseLayer.prototype.getLayerStatesArray = function(opt_states) {};\n\n\n/**\n * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n * will be visible regardless of extent.\n * @return {module:ol/extent~Extent|undefined} The layer extent.\n * @observable\n * @api\n */\nBaseLayer.prototype.getExtent = function() {\n  return (\n    /** @type {module:ol/extent~Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n  );\n};\n\n\n/**\n * Return the maximum resolution of the layer.\n * @return {number} The maximum resolution of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getMaxResolution = function() {\n  return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n};\n\n\n/**\n * Return the minimum resolution of the layer.\n * @return {number} The minimum resolution of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getMinResolution = function() {\n  return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n};\n\n\n/**\n * Return the opacity of the layer (between 0 and 1).\n * @return {number} The opacity of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getOpacity = function() {\n  return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n};\n\n\n/**\n * @abstract\n * @return {module:ol/source/State} Source state.\n */\nBaseLayer.prototype.getSourceState = function() {};\n\n\n/**\n * Return the visibility of the layer (`true` or `false`).\n * @return {boolean} The visibility of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getVisible = function() {\n  return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n};\n\n\n/**\n * Return the Z-index of the layer, which is used to order layers before\n * rendering. The default Z-index is 0.\n * @return {number} The Z-index of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getZIndex = function() {\n  return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n};\n\n\n/**\n * Set the extent at which the layer is visible.  If `undefined`, the layer\n * will be visible at all extents.\n * @param {module:ol/extent~Extent|undefined} extent The extent of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setExtent = function(extent) {\n  this.set(LayerProperty.EXTENT, extent);\n};\n\n\n/**\n * Set the maximum resolution at which the layer is visible.\n * @param {number} maxResolution The maximum resolution of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setMaxResolution = function(maxResolution) {\n  this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n};\n\n\n/**\n * Set the minimum resolution at which the layer is visible.\n * @param {number} minResolution The minimum resolution of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setMinResolution = function(minResolution) {\n  this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n};\n\n\n/**\n * Set the opacity of the layer, allowed values range from 0 to 1.\n * @param {number} opacity The opacity of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setOpacity = function(opacity) {\n  this.set(LayerProperty.OPACITY, opacity);\n};\n\n\n/**\n * Set the visibility of the layer (`true` or `false`).\n * @param {boolean} visible The visibility of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setVisible = function(visible) {\n  this.set(LayerProperty.VISIBLE, visible);\n};\n\n\n/**\n * Set Z-index of the layer, which is used to order layers before rendering.\n * The default Z-index is 0.\n * @param {number} zindex The z-index of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setZIndex = function(zindex) {\n  this.set(LayerProperty.Z_INDEX, zindex);\n};\nexport default BaseLayer;\n","/**\n * @module ol/VectorImageTile\n */\nimport {getUid, inherits} from './util.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {getHeight, getIntersection, getWidth} from './extent.js';\nimport EventType from './events/EventType.js';\nimport {loadFeaturesXhr} from './featureloader.js';\nimport {UNDEFINED} from './functions.js';\n\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty\n * @property {null|module:ol/render~OrderFunction} renderedRenderOrder\n * @property {number} renderedTileRevision\n * @property {number} renderedRevision\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/Tile}\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileState} state State.\n * @param {number} sourceRevision Source revision.\n * @param {module:ol/format/Feature} format Feature format.\n * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n * @param {module:ol/tilecoord~TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n * @param {module:ol/Tile~UrlFunction} tileUrlFunction Tile url function.\n * @param {module:ol/tilegrid/TileGrid} sourceTileGrid Tile grid of the source.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid of the renderer.\n * @param {Object.<string, module:ol/VectorTile>} sourceTiles Source tiles.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {function(new: module:ol/VectorTile, module:ol/tilecoord~TileCoord, module:ol/TileState, string,\n *     module:ol/format/Feature, module:ol/Tile~LoadFunction)} tileClass Class to\n *     instantiate for source tiles.\n * @param {function(this: module:ol/source/VectorTile, module:ol/events/Event)} handleTileChange\n *     Function to call when a source tile's state changes.\n * @param {number} zoom Integer zoom to render the tile for.\n */\nconst VectorImageTile = function(tileCoord, state, sourceRevision, format,\n  tileLoadFunction, urlTileCoord, tileUrlFunction, sourceTileGrid, tileGrid,\n  sourceTiles, pixelRatio, projection, tileClass, handleTileChange, zoom) {\n\n  Tile.call(this, tileCoord, state, {transition: 0});\n\n  /**\n   * @private\n   * @type {!Object.<string, CanvasRenderingContext2D>}\n   */\n  this.context_ = {};\n\n  /**\n   * @private\n   * @type {module:ol/featureloader~FeatureLoader}\n   */\n  this.loader_;\n\n  /**\n   * @private\n   * @type {!Object.<string, module:ol/VectorImageTile~ReplayState>}\n   */\n  this.replayState_ = {};\n\n  /**\n   * @private\n   * @type {Object.<string, module:ol/VectorTile>}\n   */\n  this.sourceTiles_ = sourceTiles;\n\n  /**\n   * Keys of source tiles used by this tile. Use with {@link #getTile}.\n   * @type {Array.<string>}\n   */\n  this.tileKeys = [];\n\n  /**\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent = null;\n\n  /**\n   * @type {number}\n   */\n  this.sourceRevision_ = sourceRevision;\n\n  /**\n   * @type {module:ol/tilecoord~TileCoord}\n   */\n  this.wrappedTileCoord = urlTileCoord;\n\n  /**\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.loadListenerKeys_ = [];\n\n  /**\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.sourceTileListenerKeys_ = [];\n\n  if (urlTileCoord) {\n    const extent = this.extent = tileGrid.getTileCoordExtent(urlTileCoord);\n    const resolution = tileGrid.getResolution(zoom);\n    const sourceZ = sourceTileGrid.getZForResolution(resolution);\n    const useLoadedOnly = zoom != tileCoord[0];\n    let loadCount = 0;\n    sourceTileGrid.forEachTileCoord(extent, sourceZ, function(sourceTileCoord) {\n      let sharedExtent = getIntersection(extent,\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord));\n      const sourceExtent = sourceTileGrid.getExtent();\n      if (sourceExtent) {\n        sharedExtent = getIntersection(sharedExtent, sourceExtent, sharedExtent);\n      }\n      if (getWidth(sharedExtent) / resolution >= 0.5 &&\n          getHeight(sharedExtent) / resolution >= 0.5) {\n        // only include source tile if overlap is at least 1 pixel\n        ++loadCount;\n        const sourceTileKey = sourceTileCoord.toString();\n        let sourceTile = sourceTiles[sourceTileKey];\n        if (!sourceTile && !useLoadedOnly) {\n          const tileUrl = tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n          sourceTile = sourceTiles[sourceTileKey] = new tileClass(sourceTileCoord,\n            tileUrl == undefined ? TileState.EMPTY : TileState.IDLE,\n            tileUrl == undefined ? '' : tileUrl,\n            format, tileLoadFunction);\n          this.sourceTileListenerKeys_.push(\n            listen(sourceTile, EventType.CHANGE, handleTileChange));\n        }\n        if (sourceTile && (!useLoadedOnly || sourceTile.getState() == TileState.LOADED)) {\n          sourceTile.consumers++;\n          this.tileKeys.push(sourceTileKey);\n        }\n      }\n    }.bind(this));\n\n    if (useLoadedOnly && loadCount == this.tileKeys.length) {\n      this.finishLoading_();\n    }\n\n    if (zoom <= tileCoord[0] && this.state != TileState.LOADED) {\n      while (zoom > tileGrid.getMinZoom()) {\n        const tile = new VectorImageTile(tileCoord, state, sourceRevision,\n          format, tileLoadFunction, urlTileCoord, tileUrlFunction,\n          sourceTileGrid, tileGrid, sourceTiles, pixelRatio, projection,\n          tileClass, UNDEFINED, --zoom);\n        if (tile.state == TileState.LOADED) {\n          this.interimTile = tile;\n          break;\n        }\n      }\n    }\n  }\n\n};\n\ninherits(VectorImageTile, Tile);\n\n\n/**\n * @inheritDoc\n */\nVectorImageTile.prototype.disposeInternal = function() {\n  this.state = TileState.ABORT;\n  this.changed();\n  if (this.interimTile) {\n    this.interimTile.dispose();\n  }\n\n  for (let i = 0, ii = this.tileKeys.length; i < ii; ++i) {\n    const sourceTileKey = this.tileKeys[i];\n    const sourceTile = this.getTile(sourceTileKey);\n    sourceTile.consumers--;\n    if (sourceTile.consumers == 0) {\n      delete this.sourceTiles_[sourceTileKey];\n      sourceTile.dispose();\n    }\n  }\n  this.tileKeys.length = 0;\n  this.sourceTiles_ = null;\n  this.loadListenerKeys_.forEach(unlistenByKey);\n  this.loadListenerKeys_.length = 0;\n  this.sourceTileListenerKeys_.forEach(unlistenByKey);\n  this.sourceTileListenerKeys_.length = 0;\n  Tile.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @param {module:ol/layer/Layer} layer Layer.\n * @return {CanvasRenderingContext2D} The rendering context.\n */\nVectorImageTile.prototype.getContext = function(layer) {\n  const key = getUid(layer).toString();\n  if (!(key in this.context_)) {\n    this.context_[key] = createCanvasContext2D();\n  }\n  return this.context_[key];\n};\n\n\n/**\n * Get the Canvas for this tile.\n * @param {module:ol/layer/Layer} layer Layer.\n * @return {HTMLCanvasElement} Canvas.\n */\nVectorImageTile.prototype.getImage = function(layer) {\n  return this.getReplayState(layer).renderedTileRevision == -1 ?\n    null : this.getContext(layer).canvas;\n};\n\n\n/**\n * @param {module:ol/layer/Layer} layer Layer.\n * @return {module:ol/VectorImageTile~ReplayState} The replay state.\n */\nVectorImageTile.prototype.getReplayState = function(layer) {\n  const key = getUid(layer).toString();\n  if (!(key in this.replayState_)) {\n    this.replayState_[key] = {\n      dirty: false,\n      renderedRenderOrder: null,\n      renderedRevision: -1,\n      renderedTileRevision: -1\n    };\n  }\n  return this.replayState_[key];\n};\n\n\n/**\n * @inheritDoc\n */\nVectorImageTile.prototype.getKey = function() {\n  return this.tileKeys.join('/') + '-' + this.sourceRevision_;\n};\n\n\n/**\n * @param {string} tileKey Key (tileCoord) of the source tile.\n * @return {module:ol/VectorTile} Source tile.\n */\nVectorImageTile.prototype.getTile = function(tileKey) {\n  return this.sourceTiles_[tileKey];\n};\n\n\n/**\n * @inheritDoc\n */\nVectorImageTile.prototype.load = function() {\n  // Source tiles with LOADED state - we just count them because once they are\n  // loaded, we're no longer listening to state changes.\n  let leftToLoad = 0;\n  // Source tiles with ERROR state - we track them because they can still have\n  // an ERROR state after another load attempt.\n  const errorSourceTiles = {};\n\n  if (this.state == TileState.IDLE) {\n    this.setState(TileState.LOADING);\n  }\n  if (this.state == TileState.LOADING) {\n    this.tileKeys.forEach(function(sourceTileKey) {\n      const sourceTile = this.getTile(sourceTileKey);\n      if (sourceTile.state == TileState.IDLE) {\n        sourceTile.setLoader(this.loader_);\n        sourceTile.load();\n      }\n      if (sourceTile.state == TileState.LOADING) {\n        const key = listen(sourceTile, EventType.CHANGE, function(e) {\n          const state = sourceTile.getState();\n          if (state == TileState.LOADED ||\n              state == TileState.ERROR) {\n            const uid = getUid(sourceTile);\n            if (state == TileState.ERROR) {\n              errorSourceTiles[uid] = true;\n            } else {\n              --leftToLoad;\n              delete errorSourceTiles[uid];\n            }\n            if (leftToLoad - Object.keys(errorSourceTiles).length == 0) {\n              this.finishLoading_();\n            }\n          }\n        }.bind(this));\n        this.loadListenerKeys_.push(key);\n        ++leftToLoad;\n      }\n    }.bind(this));\n  }\n  if (leftToLoad - Object.keys(errorSourceTiles).length == 0) {\n    setTimeout(this.finishLoading_.bind(this), 0);\n  }\n};\n\n\n/**\n * @private\n */\nVectorImageTile.prototype.finishLoading_ = function() {\n  let loaded = this.tileKeys.length;\n  let empty = 0;\n  for (let i = loaded - 1; i >= 0; --i) {\n    const state = this.getTile(this.tileKeys[i]).getState();\n    if (state != TileState.LOADED) {\n      --loaded;\n    }\n    if (state == TileState.EMPTY) {\n      ++empty;\n    }\n  }\n  if (loaded == this.tileKeys.length) {\n    this.loadListenerKeys_.forEach(unlistenByKey);\n    this.loadListenerKeys_.length = 0;\n    this.setState(TileState.LOADED);\n  } else {\n    this.setState(empty == this.tileKeys.length ? TileState.EMPTY : TileState.ERROR);\n  }\n};\n\nexport default VectorImageTile;\n\n/**\n * Sets the loader for a tile.\n * @param {module:ol/VectorTile} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  const loader = loadFeaturesXhr(url, tile.getFormat(), tile.onLoad.bind(tile), tile.onError.bind(tile));\n  tile.setLoader(loader);\n}\n","/**\n * @module ol/style/RegularShape\n */\nimport {inherits} from '../util.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {CANVAS_LINE_DASH} from '../has.js';\nimport ImageState from '../ImageState.js';\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\nimport ImageStyle from '../style/Image.js';\n\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {boolean} [snapToPixel=true] If `true` integral numbers of pixels are used as the X and Y pixel coordinate\n * when drawing the shape in the output canvas. If `false` fractional numbers may be used. Using `true` allows for\n * \"sharp\" rendering (no blur), while using `false` allows for \"accurate\" rendering. Note that accuracy is important if\n * the shape's position is animated. Without it, the shape may jitter noticeably.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {module:ol/style/AtlasManager} [atlasManager] The atlas manager to use for this symbol. When\n * using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given, the\n * symbol is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @typedef {Object} RenderOptions\n * @property {module:ol/colorlike~ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array.<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n *\n * @constructor\n * @param {module:ol/style/RegularShape~Options} options Options.\n * @extends {module:ol/style/Image}\n * @api\n */\nconst RegularShape = function(options) {\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.checksums_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.hitDetectionCanvas_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.origin_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.points_ = options.points;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n    options.radius : options.radius1);\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.radius2_ = options.radius2;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.anchor_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.size_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.imageSize_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.hitDetectionImageSize_ = null;\n\n  /**\n   * @protected\n   * @type {module:ol/style/AtlasManager|undefined}\n   */\n  this.atlasManager_ = options.atlasManager;\n\n  this.render_(this.atlasManager_);\n\n  /**\n   * @type {boolean}\n   */\n  const snapToPixel = options.snapToPixel !== undefined ?\n    options.snapToPixel : true;\n\n  /**\n   * @type {boolean}\n   */\n  const rotateWithView = options.rotateWithView !== undefined ?\n    options.rotateWithView : false;\n\n  ImageStyle.call(this, {\n    opacity: 1,\n    rotateWithView: rotateWithView,\n    rotation: options.rotation !== undefined ? options.rotation : 0,\n    scale: 1,\n    snapToPixel: snapToPixel\n  });\n};\n\ninherits(RegularShape, ImageStyle);\n\n\n/**\n * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n * @return {module:ol/style/RegularShape} The cloned style.\n * @api\n */\nRegularShape.prototype.clone = function() {\n  const style = new RegularShape({\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    points: this.getPoints(),\n    radius: this.getRadius(),\n    radius2: this.getRadius2(),\n    angle: this.getAngle(),\n    snapToPixel: this.getSnapToPixel(),\n    stroke: this.getStroke() ?  this.getStroke().clone() : undefined,\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    atlasManager: this.atlasManager_\n  });\n  style.setOpacity(this.getOpacity());\n  style.setScale(this.getScale());\n  return style;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nRegularShape.prototype.getAnchor = function() {\n  return this.anchor_;\n};\n\n\n/**\n * Get the angle used in generating the shape.\n * @return {number} Shape's rotation in radians.\n * @api\n */\nRegularShape.prototype.getAngle = function() {\n  return this.angle_;\n};\n\n\n/**\n * Get the fill style for the shape.\n * @return {module:ol/style/Fill} Fill style.\n * @api\n */\nRegularShape.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.getHitDetectionImage = function(pixelRatio) {\n  return this.hitDetectionCanvas_;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nRegularShape.prototype.getImage = function(pixelRatio) {\n  return this.canvas_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.getImageSize = function() {\n  return this.imageSize_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.getHitDetectionImageSize = function() {\n  return this.hitDetectionImageSize_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.getImageState = function() {\n  return ImageState.LOADED;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nRegularShape.prototype.getOrigin = function() {\n  return this.origin_;\n};\n\n\n/**\n * Get the number of points for generating the shape.\n * @return {number} Number of points for stars and regular polygons.\n * @api\n */\nRegularShape.prototype.getPoints = function() {\n  return this.points_;\n};\n\n\n/**\n * Get the (primary) radius for the shape.\n * @return {number} Radius.\n * @api\n */\nRegularShape.prototype.getRadius = function() {\n  return this.radius_;\n};\n\n\n/**\n * Get the secondary radius for the shape.\n * @return {number|undefined} Radius2.\n * @api\n */\nRegularShape.prototype.getRadius2 = function() {\n  return this.radius2_;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nRegularShape.prototype.getSize = function() {\n  return this.size_;\n};\n\n\n/**\n * Get the stroke style for the shape.\n * @return {module:ol/style/Stroke} Stroke style.\n * @api\n */\nRegularShape.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.listenImageChange = function(listener, thisArg) {};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.load = function() {};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.unlistenImageChange = function(listener, thisArg) {};\n\n\n/**\n * @protected\n * @param {module:ol/style/AtlasManager|undefined} atlasManager An atlas manager.\n */\nRegularShape.prototype.render_ = function(atlasManager) {\n  let imageSize;\n  let lineCap = '';\n  let lineJoin = '';\n  let miterLimit = 0;\n  let lineDash = null;\n  let lineDashOffset = 0;\n  let strokeStyle;\n  let strokeWidth = 0;\n\n  if (this.stroke_) {\n    strokeStyle = this.stroke_.getColor();\n    if (strokeStyle === null) {\n      strokeStyle = defaultStrokeStyle;\n    }\n    strokeStyle = asColorLike(strokeStyle);\n    strokeWidth = this.stroke_.getWidth();\n    if (strokeWidth === undefined) {\n      strokeWidth = defaultLineWidth;\n    }\n    lineDash = this.stroke_.getLineDash();\n    lineDashOffset = this.stroke_.getLineDashOffset();\n    if (!CANVAS_LINE_DASH) {\n      lineDash = null;\n      lineDashOffset = 0;\n    }\n    lineJoin = this.stroke_.getLineJoin();\n    if (lineJoin === undefined) {\n      lineJoin = defaultLineJoin;\n    }\n    lineCap = this.stroke_.getLineCap();\n    if (lineCap === undefined) {\n      lineCap = defaultLineCap;\n    }\n    miterLimit = this.stroke_.getMiterLimit();\n    if (miterLimit === undefined) {\n      miterLimit = defaultMiterLimit;\n    }\n  }\n\n  let size = 2 * (this.radius_ + strokeWidth) + 1;\n\n  /** @type {module:ol/style/RegularShape~RenderOptions} */\n  const renderOptions = {\n    strokeStyle: strokeStyle,\n    strokeWidth: strokeWidth,\n    size: size,\n    lineCap: lineCap,\n    lineDash: lineDash,\n    lineDashOffset: lineDashOffset,\n    lineJoin: lineJoin,\n    miterLimit: miterLimit\n  };\n\n  if (atlasManager === undefined) {\n    // no atlas manager is used, create a new canvas\n    const context = createCanvasContext2D(size, size);\n    this.canvas_ = context.canvas;\n\n    // canvas.width and height are rounded to the closest integer\n    size = this.canvas_.width;\n    imageSize = size;\n\n    this.draw_(renderOptions, context, 0, 0);\n\n    this.createHitDetectionCanvas_(renderOptions);\n  } else {\n    // an atlas manager is used, add the symbol to an atlas\n    size = Math.round(size);\n\n    const hasCustomHitDetectionImage = !this.fill_;\n    let renderHitDetectionCallback;\n    if (hasCustomHitDetectionImage) {\n      // render the hit-detection image into a separate atlas image\n      renderHitDetectionCallback =\n          this.drawHitDetectionCanvas_.bind(this, renderOptions);\n    }\n\n    const id = this.getChecksum();\n    const info = atlasManager.add(\n      id, size, size, this.draw_.bind(this, renderOptions),\n      renderHitDetectionCallback);\n\n    this.canvas_ = info.image;\n    this.origin_ = [info.offsetX, info.offsetY];\n    imageSize = info.image.width;\n\n    if (hasCustomHitDetectionImage) {\n      this.hitDetectionCanvas_ = info.hitImage;\n      this.hitDetectionImageSize_ =\n          [info.hitImage.width, info.hitImage.height];\n    } else {\n      this.hitDetectionCanvas_ = this.canvas_;\n      this.hitDetectionImageSize_ = [imageSize, imageSize];\n    }\n  }\n\n  this.anchor_ = [size / 2, size / 2];\n  this.size_ = [size, size];\n  this.imageSize_ = [imageSize, imageSize];\n};\n\n\n/**\n * @private\n * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n * @param {CanvasRenderingContext2D} context The rendering context.\n * @param {number} x The origin for the symbol (x).\n * @param {number} y The origin for the symbol (y).\n */\nRegularShape.prototype.draw_ = function(renderOptions, context, x, y) {\n  let i, angle0, radiusC;\n  // reset transform\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  // then move to (x, y)\n  context.translate(x, y);\n\n  context.beginPath();\n\n  let points = this.points_;\n  if (points === Infinity) {\n    context.arc(\n      renderOptions.size / 2, renderOptions.size / 2,\n      this.radius_, 0, 2 * Math.PI, true);\n  } else {\n    const radius2 = (this.radius2_ !== undefined) ? this.radius2_\n      : this.radius_;\n    if (radius2 !== this.radius_) {\n      points = 2 * points;\n    }\n    for (i = 0; i <= points; i++) {\n      angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n      radiusC = i % 2 === 0 ? this.radius_ : radius2;\n      context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n        renderOptions.size / 2 + radiusC * Math.sin(angle0));\n    }\n  }\n\n\n  if (this.fill_) {\n    let color = this.fill_.getColor();\n    if (color === null) {\n      color = defaultFillStyle;\n    }\n    context.fillStyle = asColorLike(color);\n    context.fill();\n  }\n  if (this.stroke_) {\n    context.strokeStyle = renderOptions.strokeStyle;\n    context.lineWidth = renderOptions.strokeWidth;\n    if (renderOptions.lineDash) {\n      context.setLineDash(renderOptions.lineDash);\n      context.lineDashOffset = renderOptions.lineDashOffset;\n    }\n    context.lineCap = renderOptions.lineCap;\n    context.lineJoin = renderOptions.lineJoin;\n    context.miterLimit = renderOptions.miterLimit;\n    context.stroke();\n  }\n  context.closePath();\n};\n\n\n/**\n * @private\n * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n */\nRegularShape.prototype.createHitDetectionCanvas_ = function(renderOptions) {\n  this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n  if (this.fill_) {\n    this.hitDetectionCanvas_ = this.canvas_;\n    return;\n  }\n\n  // if no fill style is set, create an extra hit-detection image with a\n  // default fill style\n  const context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n  this.hitDetectionCanvas_ = context.canvas;\n\n  this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n};\n\n\n/**\n * @private\n * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n * @param {CanvasRenderingContext2D} context The context.\n * @param {number} x The origin for the symbol (x).\n * @param {number} y The origin for the symbol (y).\n */\nRegularShape.prototype.drawHitDetectionCanvas_ = function(renderOptions, context, x, y) {\n  // reset transform\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  // then move to (x, y)\n  context.translate(x, y);\n\n  context.beginPath();\n\n  let points = this.points_;\n  if (points === Infinity) {\n    context.arc(\n      renderOptions.size / 2, renderOptions.size / 2,\n      this.radius_, 0, 2 * Math.PI, true);\n  } else {\n    const radius2 = (this.radius2_ !== undefined) ? this.radius2_\n      : this.radius_;\n    if (radius2 !== this.radius_) {\n      points = 2 * points;\n    }\n    let i, radiusC, angle0;\n    for (i = 0; i <= points; i++) {\n      angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n      radiusC = i % 2 === 0 ? this.radius_ : radius2;\n      context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n        renderOptions.size / 2 + radiusC * Math.sin(angle0));\n    }\n  }\n\n  context.fillStyle = defaultFillStyle;\n  context.fill();\n  if (this.stroke_) {\n    context.strokeStyle = renderOptions.strokeStyle;\n    context.lineWidth = renderOptions.strokeWidth;\n    if (renderOptions.lineDash) {\n      context.setLineDash(renderOptions.lineDash);\n      context.lineDashOffset = renderOptions.lineDashOffset;\n    }\n    context.stroke();\n  }\n  context.closePath();\n};\n\n\n/**\n * @return {string} The checksum.\n */\nRegularShape.prototype.getChecksum = function() {\n  const strokeChecksum = this.stroke_ ?\n    this.stroke_.getChecksum() : '-';\n  const fillChecksum = this.fill_ ?\n    this.fill_.getChecksum() : '-';\n\n  const recalculate = !this.checksums_ ||\n      (strokeChecksum != this.checksums_[1] ||\n      fillChecksum != this.checksums_[2] ||\n      this.radius_ != this.checksums_[3] ||\n      this.radius2_ != this.checksums_[4] ||\n      this.angle_ != this.checksums_[5] ||\n      this.points_ != this.checksums_[6]);\n\n  if (recalculate) {\n    const checksum = 'r' + strokeChecksum + fillChecksum +\n        (this.radius_ !== undefined ? this.radius_.toString() : '-') +\n        (this.radius2_ !== undefined ? this.radius2_.toString() : '-') +\n        (this.angle_ !== undefined ? this.angle_.toString() : '-') +\n        (this.points_ !== undefined ? this.points_.toString() : '-');\n    this.checksums_ = [checksum, strokeChecksum, fillChecksum,\n      this.radius_, this.radius2_, this.angle_, this.points_];\n  }\n\n  return this.checksums_[0];\n};\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\nimport {inherits} from '../util.js';\nimport RegularShape from '../style/RegularShape.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {boolean} [snapToPixel=true] If `true` integral numbers of pixels are used as the X and Y pixel coordinate\n * when drawing the circle in the output canvas. If `false` fractional numbers may be used. Using `true` allows for\n * \"sharp\" rendering (no blur), while using `false` allows for \"accurate\" rendering. Note that accuracy is important if\n * the circle's position is animated. Without it, the circle may jitter noticeably.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/AtlasManager} [atlasManager] The atlas manager to use for this circle.\n * When using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given,\n * the circle is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @classdesc\n * Set circle style for vector features.\n *\n * @constructor\n * @param {module:ol/style/Circle~Options=} opt_options Options.\n * @extends {module:ol/style/RegularShape}\n * @api\n */\nconst CircleStyle = function(opt_options) {\n\n  const options = opt_options || {};\n\n  RegularShape.call(this, {\n    points: Infinity,\n    fill: options.fill,\n    radius: options.radius,\n    snapToPixel: options.snapToPixel,\n    stroke: options.stroke,\n    atlasManager: options.atlasManager\n  });\n\n};\n\ninherits(CircleStyle, RegularShape);\n\n\n/**\n * Clones the style.  If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n * @return {module:ol/style/Circle} The cloned style.\n * @override\n * @api\n */\nCircleStyle.prototype.clone = function() {\n  const style = new CircleStyle({\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    radius: this.getRadius(),\n    snapToPixel: this.getSnapToPixel(),\n    atlasManager: this.atlasManager_\n  });\n  style.setOpacity(this.getOpacity());\n  style.setScale(this.getScale());\n  return style;\n};\n\n\n/**\n * Set the circle radius.\n *\n * @param {number} radius Circle radius.\n * @api\n */\nCircleStyle.prototype.setRadius = function(radius) {\n  this.radius_ = radius;\n  this.render_(this.atlasManager_);\n};\nexport default CircleStyle;\n","/**\n * @module ol/layer/Group\n */\nimport {getUid, inherits} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from '../layer/Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {(Array.<module:ol/layer/Base>|module:ol/Collection.<module:ol/layer/Base>)} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @constructor\n * @extends {module:ol/layer/Base}\n * @param {module:ol/layer/Group~Options=} opt_options Layer options.\n * @api\n */\nconst LayerGroup = function(opt_options) {\n\n  const options = opt_options || {};\n  const baseOptions = /** @type {module:ol/layer/Group~Options} */ (assign({}, options));\n  delete baseOptions.layers;\n\n  let layers = options.layers;\n\n  BaseLayer.call(this, baseOptions);\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.layersListenerKeys_ = [];\n\n  /**\n   * @private\n   * @type {Object.<string, Array.<module:ol/events~EventsKey>>}\n   */\n  this.listenerKeys_ = {};\n\n  listen(this,\n    getChangeEventType(Property.LAYERS),\n    this.handleLayersChanged_, this);\n\n  if (layers) {\n    if (Array.isArray(layers)) {\n      layers = new Collection(layers.slice(), {unique: true});\n    } else {\n      assert(layers instanceof Collection,\n        43); // Expected `layers` to be an array or a `Collection`\n      layers = layers;\n    }\n  } else {\n    layers = new Collection(undefined, {unique: true});\n  }\n\n  this.setLayers(layers);\n\n};\n\ninherits(LayerGroup, BaseLayer);\n\n\n/**\n * @private\n */\nLayerGroup.prototype.handleLayerChange_ = function() {\n  this.changed();\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n * @private\n */\nLayerGroup.prototype.handleLayersChanged_ = function(event) {\n  this.layersListenerKeys_.forEach(unlistenByKey);\n  this.layersListenerKeys_.length = 0;\n\n  const layers = this.getLayers();\n  this.layersListenerKeys_.push(\n    listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n    listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n  );\n\n  for (const id in this.listenerKeys_) {\n    this.listenerKeys_[id].forEach(unlistenByKey);\n  }\n  clear(this.listenerKeys_);\n\n  const layersArray = layers.getArray();\n  for (let i = 0, ii = layersArray.length; i < ii; i++) {\n    const layer = layersArray[i];\n    this.listenerKeys_[getUid(layer).toString()] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n  }\n\n  this.changed();\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} collectionEvent CollectionEvent.\n * @private\n */\nLayerGroup.prototype.handleLayersAdd_ = function(collectionEvent) {\n  const layer = /** @type {module:ol/layer/Base} */ (collectionEvent.element);\n  const key = getUid(layer).toString();\n  this.listenerKeys_[key] = [\n    listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n    listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n  ];\n  this.changed();\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} collectionEvent CollectionEvent.\n * @private\n */\nLayerGroup.prototype.handleLayersRemove_ = function(collectionEvent) {\n  const layer = /** @type {module:ol/layer/Base} */ (collectionEvent.element);\n  const key = getUid(layer).toString();\n  this.listenerKeys_[key].forEach(unlistenByKey);\n  delete this.listenerKeys_[key];\n  this.changed();\n};\n\n\n/**\n * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n * in this group.\n * @return {!module:ol/Collection.<module:ol/layer/Base>} Collection of\n *   {@link module:ol/layer/Base layers} that are part of this group.\n * @observable\n * @api\n */\nLayerGroup.prototype.getLayers = function() {\n  return (\n    /** @type {!module:ol/Collection.<module:ol/layer/Base>} */ (this.get(Property.LAYERS))\n  );\n};\n\n\n/**\n * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n * in this group.\n * @param {!module:ol/Collection.<module:ol/layer/Base>} layers Collection of\n *   {@link module:ol/layer/Base layers} that are part of this group.\n * @observable\n * @api\n */\nLayerGroup.prototype.setLayers = function(layers) {\n  this.set(Property.LAYERS, layers);\n};\n\n\n/**\n * @inheritDoc\n */\nLayerGroup.prototype.getLayersArray = function(opt_array) {\n  const array = opt_array !== undefined ? opt_array : [];\n  this.getLayers().forEach(function(layer) {\n    layer.getLayersArray(array);\n  });\n  return array;\n};\n\n\n/**\n * @inheritDoc\n */\nLayerGroup.prototype.getLayerStatesArray = function(opt_states) {\n  const states = opt_states !== undefined ? opt_states : [];\n\n  const pos = states.length;\n\n  this.getLayers().forEach(function(layer) {\n    layer.getLayerStatesArray(states);\n  });\n\n  const ownLayerState = this.getLayerState();\n  for (let i = pos, ii = states.length; i < ii; i++) {\n    const layerState = states[i];\n    layerState.opacity *= ownLayerState.opacity;\n    layerState.visible = layerState.visible && ownLayerState.visible;\n    layerState.maxResolution = Math.min(\n      layerState.maxResolution, ownLayerState.maxResolution);\n    layerState.minResolution = Math.max(\n      layerState.minResolution, ownLayerState.minResolution);\n    if (ownLayerState.extent !== undefined) {\n      if (layerState.extent !== undefined) {\n        layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n      } else {\n        layerState.extent = ownLayerState.extent;\n      }\n    }\n  }\n\n  return states;\n};\n\n\n/**\n * @inheritDoc\n */\nLayerGroup.prototype.getSourceState = function() {\n  return SourceState.READY;\n};\n\nexport default LayerGroup;\n","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../util.js';\nimport EventSource from '../pointer/EventSource.js';\n\n/**\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @constructor\n * @extends {module:ol/pointer/EventSource}\n */\nconst MsSource = function(dispatcher) {\n  const mapping = {\n    'MSPointerDown': this.msPointerDown,\n    'MSPointerMove': this.msPointerMove,\n    'MSPointerUp': this.msPointerUp,\n    'MSPointerOut': this.msPointerOut,\n    'MSPointerOver': this.msPointerOver,\n    'MSPointerCancel': this.msPointerCancel,\n    'MSGotPointerCapture': this.msGotPointerCapture,\n    'MSLostPointerCapture': this.msLostPointerCapture\n  };\n  EventSource.call(this, dispatcher, mapping);\n\n  /**\n   * @const\n   * @type {!Object.<string, MSPointerEvent|Object>}\n   */\n  this.pointerMap = dispatcher.pointerMap;\n};\n\ninherits(MsSource, EventSource);\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst POINTER_TYPES = [\n  '',\n  'unavailable',\n  'touch',\n  'pen',\n  'mouse'\n];\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @private\n * @param {MSPointerEvent} inEvent The in event.\n * @return {Object} The copied event.\n */\nMsSource.prototype.prepareEvent_ = function(inEvent) {\n  let e = inEvent;\n  if (typeof inEvent.pointerType === 'number') {\n    e = this.dispatcher.cloneEvent(inEvent, inEvent);\n    e.pointerType = POINTER_TYPES[inEvent.pointerType];\n  }\n\n  return e;\n};\n\n\n/**\n * Remove this pointer from the list of active pointers.\n * @param {number} pointerId Pointer identifier.\n */\nMsSource.prototype.cleanup = function(pointerId) {\n  delete this.pointerMap[pointerId.toString()];\n};\n\n\n/**\n * Handler for `msPointerDown`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerDown = function(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerMove`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerMove = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerUp`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerUp = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n};\n\n\n/**\n * Handler for `msPointerOut`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerOut = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerOver`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerOver = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerCancel`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerCancel = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n};\n\n\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msLostPointerCapture = function(inEvent) {\n  const e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n};\n\n\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msGotPointerCapture = function(inEvent) {\n  const e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n};\nexport default MsSource;\n","/**\n * @module ol/pointer/NativeSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../util.js';\nimport EventSource from '../pointer/EventSource.js';\n\n/**\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @constructor\n * @extends {module:ol/pointer/EventSource}\n */\nconst NativeSource = function(dispatcher) {\n  const mapping = {\n    'pointerdown': this.pointerDown,\n    'pointermove': this.pointerMove,\n    'pointerup': this.pointerUp,\n    'pointerout': this.pointerOut,\n    'pointerover': this.pointerOver,\n    'pointercancel': this.pointerCancel,\n    'gotpointercapture': this.gotPointerCapture,\n    'lostpointercapture': this.lostPointerCapture\n  };\n  EventSource.call(this, dispatcher, mapping);\n};\n\ninherits(NativeSource, EventSource);\n\n\n/**\n * Handler for `pointerdown`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerDown = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointermove`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerMove = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointerup`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerUp = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointerout`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerOut = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointerover`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerOver = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointercancel`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerCancel = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.lostPointerCapture = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.gotPointerCapture = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\nexport default NativeSource;\n","/**\n * @module ol/pointer/PointerEvent\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../util.js';\nimport Event from '../events/Event.js';\n\n/**\n * A class for pointer events.\n *\n * This class is used as an abstraction for mouse events,\n * touch events and even native pointer events.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type The type of the event to create.\n * @param {Event} originalEvent The event.\n * @param {Object.<string, ?>=} opt_eventDict An optional dictionary of\n *    initial event properties.\n */\nconst PointerEvent = function(type, originalEvent, opt_eventDict) {\n  Event.call(this, type);\n\n  /**\n   * @const\n   * @type {Event}\n   */\n  this.originalEvent = originalEvent;\n\n  const eventDict = opt_eventDict ? opt_eventDict : {};\n\n  /**\n   * @type {number}\n   */\n  this.buttons = this.getButtons_(eventDict);\n\n  /**\n   * @type {number}\n   */\n  this.pressure = this.getPressure_(eventDict, this.buttons);\n\n  // MouseEvent related properties\n\n  /**\n   * @type {boolean}\n   */\n  this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n  /**\n   * @type {Object}\n   */\n  this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n  /**\n   * @type {number}\n   */\n  this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n  /**\n   * @type {number}\n   */\n  this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n  /**\n   * @type {boolean}\n   */\n  this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n  /**\n   * @type {number}\n   */\n  this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n  /**\n   * @type {Node}\n   */\n  this.relatedTarget = 'relatedTarget' in eventDict ?\n    eventDict['relatedTarget'] : null;\n\n  // PointerEvent related properties\n\n  /**\n   * @const\n   * @type {number}\n   */\n  this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n  /**\n   * @type {string}\n   */\n  this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n  /**\n   * @type {number}\n   */\n  this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n  /**\n   * @type {boolean}\n   */\n  this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n  // keep the semantics of preventDefault\n  if (originalEvent.preventDefault) {\n    this.preventDefault = function() {\n      originalEvent.preventDefault();\n    };\n  }\n};\n\ninherits(PointerEvent, Event);\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nlet HAS_BUTTONS = false;\n\n\n/**\n * @private\n * @param {Object.<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nPointerEvent.prototype.getButtons_ = function(eventDict) {\n  // According to the w3c spec,\n  // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n  // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n  // left mouse button depressed.\n  //\n  // As of now, the only way to distinguish between the two states of\n  // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n  // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n  // no mouse button is held.\n  //\n  // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n  // but initMouseEvent does not expose an argument with which to set\n  // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n  // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n  // of app developers.\n  //\n  // The only way to propagate the correct state of MouseEvent.which and\n  // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n  // is to call initMouseEvent with a buttonArg value of -1.\n  //\n  // This is fixed with DOM Level 4's use of buttons\n  let buttons;\n  if (eventDict.buttons || HAS_BUTTONS) {\n    buttons = eventDict.buttons;\n  } else {\n    switch (eventDict.which) {\n      case 1: buttons = 1; break;\n      case 2: buttons = 4; break;\n      case 3: buttons = 2; break;\n      default: buttons = 0;\n    }\n  }\n  return buttons;\n};\n\n\n/**\n * @private\n * @param {Object.<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nPointerEvent.prototype.getPressure_ = function(eventDict, buttons) {\n  // Spec requires that pointers without pressure specified use 0.5 for down\n  // state and 0 for up state.\n  let pressure = 0;\n  if (eventDict.pressure) {\n    pressure = eventDict.pressure;\n  } else {\n    pressure = buttons ? 0.5 : 0;\n  }\n  return pressure;\n};\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    const ev = new MouseEvent('click', {buttons: 1});\n    HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\nexport default PointerEvent;\n","/**\n * @module ol/pointer/TouchSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../util.js';\nimport {remove} from '../array.js';\nimport EventSource from '../pointer/EventSource.js';\nimport {POINTER_ID} from '../pointer/MouseSource.js';\n\n\n/**\n * @constructor\n * @param {module:ol/pointer/PointerEventHandler} dispatcher The event handler.\n * @param {module:ol/pointer/MouseSource} mouseSource Mouse source.\n * @extends {module:ol/pointer/EventSource}\n */\nconst TouchSource = function(dispatcher, mouseSource) {\n  const mapping = {\n    'touchstart': this.touchstart,\n    'touchmove': this.touchmove,\n    'touchend': this.touchend,\n    'touchcancel': this.touchcancel\n  };\n  EventSource.call(this, dispatcher, mapping);\n\n  /**\n   * @const\n   * @type {!Object.<string, Event|Object>}\n   */\n  this.pointerMap = dispatcher.pointerMap;\n\n  /**\n   * @const\n   * @type {module:ol/pointer/MouseSource}\n   */\n  this.mouseSource = mouseSource;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.firstTouchId_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.clickCount_ = 0;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.resetId_ = undefined;\n\n  /**\n   * Mouse event timeout: This should be long enough to\n   * ignore compat mouse events made by touch.\n   * @private\n   * @type {number}\n   */\n  this.dedupTimeout_ = 2500;\n};\n\ninherits(TouchSource, EventSource);\n\n\n/**\n * @type {number}\n */\nconst CLICK_COUNT_TIMEOUT = 200;\n\n\n/**\n * @type {string}\n */\nconst POINTER_TYPE = 'touch';\n\n/**\n * @private\n * @param {Touch} inTouch The in touch.\n * @return {boolean} True, if this is the primary touch.\n */\nTouchSource.prototype.isPrimaryTouch_ = function(inTouch) {\n  return this.firstTouchId_ === inTouch.identifier;\n};\n\n\n/**\n * Set primary touch if there are no pointers, or the only pointer is the mouse.\n * @param {Touch} inTouch The in touch.\n * @private\n */\nTouchSource.prototype.setPrimaryTouch_ = function(inTouch) {\n  const count = Object.keys(this.pointerMap).length;\n  if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n    this.firstTouchId_ = inTouch.identifier;\n    this.cancelResetClickCount_();\n  }\n};\n\n\n/**\n * @private\n * @param {Object} inPointer The in pointer object.\n */\nTouchSource.prototype.removePrimaryPointer_ = function(inPointer) {\n  if (inPointer.isPrimary) {\n    this.firstTouchId_ = undefined;\n    this.resetClickCount_();\n  }\n};\n\n\n/**\n * @private\n */\nTouchSource.prototype.resetClickCount_ = function() {\n  this.resetId_ = setTimeout(\n    this.resetClickCountHandler_.bind(this),\n    CLICK_COUNT_TIMEOUT);\n};\n\n\n/**\n * @private\n */\nTouchSource.prototype.resetClickCountHandler_ = function() {\n  this.clickCount_ = 0;\n  this.resetId_ = undefined;\n};\n\n\n/**\n * @private\n */\nTouchSource.prototype.cancelResetClickCount_ = function() {\n  if (this.resetId_ !== undefined) {\n    clearTimeout(this.resetId_);\n  }\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent Browser event\n * @param {Touch} inTouch Touch event\n * @return {Object} A pointer object.\n */\nTouchSource.prototype.touchToPointer_ = function(browserEvent, inTouch) {\n  const e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n  // Spec specifies that pointerId 1 is reserved for Mouse.\n  // Touch identifiers can start at 0.\n  // Add 2 to the touch identifier for compatibility.\n  e.pointerId = inTouch.identifier + 2;\n  // TODO: check if this is necessary?\n  //e.target = findTarget(e);\n  e.bubbles = true;\n  e.cancelable = true;\n  e.detail = this.clickCount_;\n  e.button = 0;\n  e.buttons = 1;\n  e.width = inTouch.webkitRadiusX || inTouch.radiusX || 0;\n  e.height = inTouch.webkitRadiusY || inTouch.radiusY || 0;\n  e.pressure = inTouch.webkitForce || inTouch.force || 0.5;\n  e.isPrimary = this.isPrimaryTouch_(inTouch);\n  e.pointerType = POINTER_TYPE;\n\n  // make sure that the properties that are different for\n  // each `Touch` object are not copied from the BrowserEvent object\n  e.clientX = inTouch.clientX;\n  e.clientY = inTouch.clientY;\n  e.screenX = inTouch.screenX;\n  e.screenY = inTouch.screenY;\n\n  return e;\n};\n\n\n/**\n * @private\n * @param {Event} inEvent Touch event\n * @param {function(Event, Object)} inFunction In function.\n */\nTouchSource.prototype.processTouches_ = function(inEvent, inFunction) {\n  const touches = Array.prototype.slice.call(inEvent.changedTouches);\n  const count = touches.length;\n  function preventDefault() {\n    inEvent.preventDefault();\n  }\n  for (let i = 0; i < count; ++i) {\n    const pointer = this.touchToPointer_(inEvent, touches[i]);\n    // forward touch preventDefaults\n    pointer.preventDefault = preventDefault;\n    inFunction.call(this, inEvent, pointer);\n  }\n};\n\n\n/**\n * @private\n * @param {TouchList} touchList The touch list.\n * @param {number} searchId Search identifier.\n * @return {boolean} True, if the `Touch` with the given id is in the list.\n */\nTouchSource.prototype.findTouch_ = function(touchList, searchId) {\n  const l = touchList.length;\n  for (let i = 0; i < l; i++) {\n    const touch = touchList[i];\n    if (touch.identifier === searchId) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * In some instances, a touchstart can happen without a touchend. This\n * leaves the pointermap in a broken state.\n * Therefore, on every touchstart, we remove the touches that did not fire a\n * touchend event.\n * To keep state globally consistent, we fire a pointercancel for\n * this \"abandoned\" touch\n *\n * @private\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.vacuumTouches_ = function(inEvent) {\n  const touchList = inEvent.touches;\n  // pointerMap.getCount() should be < touchList.length here,\n  // as the touchstart has not been processed yet.\n  const keys = Object.keys(this.pointerMap);\n  const count = keys.length;\n  if (count >= touchList.length) {\n    const d = [];\n    for (let i = 0; i < count; ++i) {\n      const key = keys[i];\n      const value = this.pointerMap[key];\n      // Never remove pointerId == 1, which is mouse.\n      // Touch identifiers are 2 smaller than their pointerId, which is the\n      // index in pointermap.\n      if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n        d.push(value.out);\n      }\n    }\n    for (let i = 0; i < d.length; ++i) {\n      this.cancelOut_(inEvent, d[i]);\n    }\n  }\n};\n\n\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.touchstart = function(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent The event.\n * @param {Object} inPointer The in pointer object.\n */\nTouchSource.prototype.overDown_ = function(browserEvent, inPointer) {\n  this.pointerMap[inPointer.pointerId] = {\n    target: inPointer.target,\n    out: inPointer,\n    outTarget: inPointer.target\n  };\n  this.dispatcher.over(inPointer, browserEvent);\n  this.dispatcher.enter(inPointer, browserEvent);\n  this.dispatcher.down(inPointer, browserEvent);\n};\n\n\n/**\n * Handler for `touchmove`.\n *\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.touchmove = function(inEvent) {\n  inEvent.preventDefault();\n  this.processTouches_(inEvent, this.moveOverOut_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent The event.\n * @param {Object} inPointer The in pointer.\n */\nTouchSource.prototype.moveOverOut_ = function(browserEvent, inPointer) {\n  const event = inPointer;\n  const pointer = this.pointerMap[event.pointerId];\n  // a finger drifted off the screen, ignore it\n  if (!pointer) {\n    return;\n  }\n  const outEvent = pointer.out;\n  const outTarget = pointer.outTarget;\n  this.dispatcher.move(event, browserEvent);\n  if (outEvent && outTarget !== event.target) {\n    outEvent.relatedTarget = event.target;\n    event.relatedTarget = outTarget;\n    // recover from retargeting by shadow\n    outEvent.target = outTarget;\n    if (event.target) {\n      this.dispatcher.leaveOut(outEvent, browserEvent);\n      this.dispatcher.enterOver(event, browserEvent);\n    } else {\n      // clean up case when finger leaves the screen\n      event.target = outTarget;\n      event.relatedTarget = null;\n      this.cancelOut_(browserEvent, event);\n    }\n  }\n  pointer.out = event;\n  pointer.outTarget = event.target;\n};\n\n\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @param {Event} inEvent The event.\n */\nTouchSource.prototype.touchend = function(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent An event.\n * @param {Object} inPointer The inPointer object.\n */\nTouchSource.prototype.upOut_ = function(browserEvent, inPointer) {\n  this.dispatcher.up(inPointer, browserEvent);\n  this.dispatcher.out(inPointer, browserEvent);\n  this.dispatcher.leave(inPointer, browserEvent);\n  this.cleanUpPointer_(inPointer);\n};\n\n\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.touchcancel = function(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent The event.\n * @param {Object} inPointer The in pointer.\n */\nTouchSource.prototype.cancelOut_ = function(browserEvent, inPointer) {\n  this.dispatcher.cancel(inPointer, browserEvent);\n  this.dispatcher.out(inPointer, browserEvent);\n  this.dispatcher.leave(inPointer, browserEvent);\n  this.cleanUpPointer_(inPointer);\n};\n\n\n/**\n * @private\n * @param {Object} inPointer The inPointer object.\n */\nTouchSource.prototype.cleanUpPointer_ = function(inPointer) {\n  delete this.pointerMap[inPointer.pointerId];\n  this.removePrimaryPointer_(inPointer);\n};\n\n\n/**\n * Prevent synth mouse events from creating pointer events.\n *\n * @private\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.dedupSynthMouse_ = function(inEvent) {\n  const lts = this.mouseSource.lastTouches;\n  const t = inEvent.changedTouches[0];\n  // only the primary finger will synth mouse events\n  if (this.isPrimaryTouch_(t)) {\n    // remember x/y of last touch\n    const lt = [t.clientX, t.clientY];\n    lts.push(lt);\n\n    setTimeout(function() {\n      // remove touch after timeout\n      remove(lts, lt);\n    }, this.dedupTimeout_);\n  }\n};\nexport default TouchSource;\n","/**\n * @module ol/pointer/PointerEventHandler\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../util.js';\nimport {listen, unlisten} from '../events.js';\nimport EventTarget from '../events/EventTarget.js';\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport MsSource from '../pointer/MsSource.js';\nimport NativeSource from '../pointer/NativeSource.js';\nimport PointerEvent from '../pointer/PointerEvent.js';\nimport TouchSource from '../pointer/TouchSource.js';\n\n/**\n * @constructor\n * @extends {module:ol/events/EventTarget}\n * @param {Element|HTMLDocument} element Viewport element.\n */\nconst PointerEventHandler = function(element) {\n  EventTarget.call(this);\n\n  /**\n   * @const\n   * @private\n   * @type {Element|HTMLDocument}\n   */\n  this.element_ = element;\n\n  /**\n   * @const\n   * @type {!Object.<string, Event|Object>}\n   */\n  this.pointerMap = {};\n\n  /**\n   * @type {Object.<string, function(Event)>}\n   * @private\n   */\n  this.eventMap_ = {};\n\n  /**\n   * @type {Array.<module:ol/pointer/EventSource>}\n   * @private\n   */\n  this.eventSourceList_ = [];\n\n  this.registerSources();\n};\n\ninherits(PointerEventHandler, EventTarget);\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array.<Array>}\n */\nconst CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\n\n\n/**\n * Set up the event sources (mouse, touch and native pointers)\n * that generate pointer events.\n */\nPointerEventHandler.prototype.registerSources = function() {\n  if (POINTER) {\n    this.registerSource('native', new NativeSource(this));\n  } else if (MSPOINTER) {\n    this.registerSource('ms', new MsSource(this));\n  } else {\n    const mouseSource = new MouseSource(this);\n    this.registerSource('mouse', mouseSource);\n\n    if (TOUCH) {\n      this.registerSource('touch', new TouchSource(this, mouseSource));\n    }\n  }\n\n  // register events on the viewport element\n  this.register_();\n};\n\n\n/**\n * Add a new event source that will generate pointer events.\n *\n * @param {string} name A name for the event source\n * @param {module:ol/pointer/EventSource} source The source event.\n */\nPointerEventHandler.prototype.registerSource = function(name, source) {\n  const s = source;\n  const newEvents = s.getEvents();\n\n  if (newEvents) {\n    newEvents.forEach(function(e) {\n      const handler = s.getHandlerForEvent(e);\n\n      if (handler) {\n        this.eventMap_[e] = handler.bind(s);\n      }\n    }.bind(this));\n    this.eventSourceList_.push(s);\n  }\n};\n\n\n/**\n * Set up the events for all registered event sources.\n * @private\n */\nPointerEventHandler.prototype.register_ = function() {\n  const l = this.eventSourceList_.length;\n  for (let i = 0; i < l; i++) {\n    const eventSource = this.eventSourceList_[i];\n    this.addEvents_(eventSource.getEvents());\n  }\n};\n\n\n/**\n * Remove all registered events.\n * @private\n */\nPointerEventHandler.prototype.unregister_ = function() {\n  const l = this.eventSourceList_.length;\n  for (let i = 0; i < l; i++) {\n    const eventSource = this.eventSourceList_[i];\n    this.removeEvents_(eventSource.getEvents());\n  }\n};\n\n\n/**\n * Calls the right handler for a new event.\n * @private\n * @param {Event} inEvent Browser event.\n */\nPointerEventHandler.prototype.eventHandler_ = function(inEvent) {\n  const type = inEvent.type;\n  const handler = this.eventMap_[type];\n  if (handler) {\n    handler(inEvent);\n  }\n};\n\n\n/**\n * Setup listeners for the given events.\n * @private\n * @param {Array.<string>} events List of events.\n */\nPointerEventHandler.prototype.addEvents_ = function(events) {\n  events.forEach(function(eventName) {\n    listen(this.element_, eventName, this.eventHandler_, this);\n  }.bind(this));\n};\n\n\n/**\n * Unregister listeners for the given events.\n * @private\n * @param {Array.<string>} events List of events.\n */\nPointerEventHandler.prototype.removeEvents_ = function(events) {\n  events.forEach(function(e) {\n    unlisten(this.element_, e, this.eventHandler_, this);\n  }.bind(this));\n};\n\n\n/**\n * Returns a snapshot of inEvent, with writable properties.\n *\n * @param {Event} event Browser event.\n * @param {Event|Touch} inEvent An event that contains\n *    properties to copy.\n * @return {Object} An object containing shallow copies of\n *    `inEvent`'s properties.\n */\nPointerEventHandler.prototype.cloneEvent = function(event, inEvent) {\n  const eventCopy = {};\n  for (let i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n    const p = CLONE_PROPS[i][0];\n    eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n  }\n\n  return eventCopy;\n};\n\n\n// EVENTS\n\n\n/**\n * Triggers a 'pointerdown' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.down = function(data, event) {\n  this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n};\n\n\n/**\n * Triggers a 'pointermove' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.move = function(data, event) {\n  this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n};\n\n\n/**\n * Triggers a 'pointerup' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.up = function(data, event) {\n  this.fireEvent(PointerEventType.POINTERUP, data, event);\n};\n\n\n/**\n * Triggers a 'pointerenter' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.enter = function(data, event) {\n  data.bubbles = false;\n  this.fireEvent(PointerEventType.POINTERENTER, data, event);\n};\n\n\n/**\n * Triggers a 'pointerleave' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.leave = function(data, event) {\n  data.bubbles = false;\n  this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n};\n\n\n/**\n * Triggers a 'pointerover' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.over = function(data, event) {\n  data.bubbles = true;\n  this.fireEvent(PointerEventType.POINTEROVER, data, event);\n};\n\n\n/**\n * Triggers a 'pointerout' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.out = function(data, event) {\n  data.bubbles = true;\n  this.fireEvent(PointerEventType.POINTEROUT, data, event);\n};\n\n\n/**\n * Triggers a 'pointercancel' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.cancel = function(data, event) {\n  this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n};\n\n\n/**\n * Triggers a combination of 'pointerout' and 'pointerleave' events.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.leaveOut = function(data, event) {\n  this.out(data, event);\n  if (!this.contains_(data.target, data.relatedTarget)) {\n    this.leave(data, event);\n  }\n};\n\n\n/**\n * Triggers a combination of 'pointerover' and 'pointerevents' events.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.enterOver = function(data, event) {\n  this.over(data, event);\n  if (!this.contains_(data.target, data.relatedTarget)) {\n    this.enter(data, event);\n  }\n};\n\n\n/**\n * @private\n * @param {Element} container The container element.\n * @param {Element} contained The contained element.\n * @return {boolean} Returns true if the container element\n *   contains the other element.\n */\nPointerEventHandler.prototype.contains_ = function(container, contained) {\n  if (!container || !contained) {\n    return false;\n  }\n  return container.contains(contained);\n};\n\n\n// EVENT CREATION AND TRACKING\n/**\n * Creates a new Event of type `inType`, based on the information in\n * `data`.\n *\n * @param {string} inType A string representing the type of event to create.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n * @return {module:ol/pointer/PointerEvent} A PointerEvent of type `inType`.\n */\nPointerEventHandler.prototype.makeEvent = function(inType, data, event) {\n  return new PointerEvent(inType, event, data);\n};\n\n\n/**\n * Make and dispatch an event in one call.\n * @param {string} inType A string representing the type of event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.fireEvent = function(inType, data, event) {\n  const e = this.makeEvent(inType, data, event);\n  this.dispatchEvent(e);\n};\n\n\n/**\n * Creates a pointer event from a native pointer event\n * and dispatches this event.\n * @param {Event} event A platform event with a target.\n */\nPointerEventHandler.prototype.fireNativeEvent = function(event) {\n  const e = this.makeEvent(event.type, event, event);\n  this.dispatchEvent(e);\n};\n\n\n/**\n * Wrap a native mouse event into a pointer event.\n * This proxy method is required for the legacy IE support.\n * @param {string} eventType The pointer event type.\n * @param {Event} event The event.\n * @return {module:ol/pointer/PointerEvent} The wrapped event.\n */\nPointerEventHandler.prototype.wrapMouseEvent = function(eventType, event) {\n  const pointerEvent = this.makeEvent(\n    eventType, MouseSource.prepareEvent(event, this), event);\n  return pointerEvent;\n};\n\n\n/**\n * @inheritDoc\n */\nPointerEventHandler.prototype.disposeInternal = function() {\n  this.unregister_();\n  EventTarget.prototype.disposeInternal.call(this);\n};\n\n\nexport default PointerEventHandler;\n","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../util.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase, {GMLNS} from '../format/GMLBase.js';\nimport {writeStringTextNode} from '../format/xsd.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport {createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender,\n  makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, pushParseAndPop, pushSerializeAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {string}\n */\nconst schemaLocation = GMLNS + ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {module:ol/format/GMLBase~Options=} opt_options Optional configuration object.\n * @extends {module:ol/format/GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {module:ol/format/GMLBase~Options} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLNS][\n    'featureMember'] =\n      makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : schemaLocation;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {module:ol/xml~NodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    const x = parseFloat(coords[0]);\n    const y = parseFloat(coords[1]);\n    const z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {module:ol/extent~Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {module:ol/geom/Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n    (item), context.serializers,\n    makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    this.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Geometry|module:ol/extent~Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {module:ol/geom/Geometry} */ (geometry), true, context);\n  }\n  pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n    (item), this.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LineString|module:ol/geom/LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    const point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      this.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    this.POINTMEMBER_SERIALIZERS_,\n    makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    this.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n    ({node: node}), this.ENVELOPE_SERIALIZERS_,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS('http://www.opengis.net/gml',\n    MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode)\n  }\n};\n\nexport default GML2;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n * @constructor\n */\nconst IconImageCache = function() {\n\n  /**\n   * @type {!Object.<string, module:ol/style/IconImage>}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.cacheSize_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxCacheSize_ = 32;\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/color~Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\n/**\n * FIXME empty description for jsdoc\n */\nIconImageCache.prototype.clear = function() {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nIconImageCache.prototype.expire = function() {\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    let i = 0;\n    for (const key in this.cache_) {\n      const iconImage = this.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this.cache_[key];\n        --this.cacheSize_;\n      }\n    }\n  }\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/color~Color} color Color.\n * @return {module:ol/style/IconImage} Icon image.\n */\nIconImageCache.prototype.get = function(src, crossOrigin, color) {\n  const key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/color~Color} color Color.\n * @param {module:ol/style/IconImage} iconImage Icon image.\n */\nIconImageCache.prototype.set = function(src, crossOrigin, color, iconImage) {\n  const key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n\n/**\n * Set the cache size of the icon cache. Default is `32`. Change this value when\n * your map uses more than 32 different icon images and you are not caching icon\n * styles on the application level.\n * @param {number} maxCacheSize Cache max size.\n * @api\n */\nIconImageCache.prototype.setSize = function(maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {inherits} from '../../util.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array.<module:ol/renderer/Layer>}\n */\nexport const layerRendererConstructors = [];\n\n\n/**\n * @constructor\n * @extends {module:ol/renderer/Map}\n * @param {module:ol/PluggableMap} map Map.\n * @api\n */\nconst CanvasMapRenderer = function(map) {\n  MapRenderer.call(this, map);\n\n  const container = map.getViewport();\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = createCanvasContext2D();\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = this.context_.canvas;\n\n  this.canvas_.style.width = '100%';\n  this.canvas_.style.height = '100%';\n  this.canvas_.style.display = 'block';\n  this.canvas_.className = CLASS_UNSELECTABLE;\n  container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderedVisible_ = true;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.transform_ = createTransform();\n\n};\n\ninherits(CanvasMapRenderer, MapRenderer);\n\n\n/**\n * @param {module:ol/render/EventType} type Event type.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @private\n */\nCanvasMapRenderer.prototype.dispatchComposeEvent_ = function(type, frameState) {\n  const map = this.getMap();\n  const context = this.context_;\n  if (map.hasListener(type)) {\n    const extent = frameState.extent;\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n\n    const transform = this.getTransform(frameState);\n\n    const vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n      extent, transform, rotation);\n    const composeEvent = new RenderEvent(type, vectorContext,\n      frameState, context, null);\n    map.dispatchEvent(composeEvent);\n  }\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @protected\n * @return {!module:ol/transform~Transform} Transform.\n */\nCanvasMapRenderer.prototype.getTransform = function(frameState) {\n  const viewState = frameState.viewState;\n  const dx1 = this.canvas_.width / 2;\n  const dy1 = this.canvas_.height / 2;\n  const sx = frameState.pixelRatio / viewState.resolution;\n  const sy = -sx;\n  const angle = -viewState.rotation;\n  const dx2 = -viewState.center[0];\n  const dy2 = -viewState.center[1];\n  return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasMapRenderer.prototype.renderFrame = function(frameState) {\n\n  if (!frameState) {\n    if (this.renderedVisible_) {\n      this.canvas_.style.display = 'none';\n      this.renderedVisible_ = false;\n    }\n    return;\n  }\n\n  const context = this.context_;\n  const pixelRatio = frameState.pixelRatio;\n  const width = Math.round(frameState.size[0] * pixelRatio);\n  const height = Math.round(frameState.size[1] * pixelRatio);\n  if (this.canvas_.width != width || this.canvas_.height != height) {\n    this.canvas_.width = width;\n    this.canvas_.height = height;\n  } else {\n    context.clearRect(0, 0, width, height);\n  }\n\n  const rotation = frameState.viewState.rotation;\n\n  this.calculateMatrices2D(frameState);\n\n  this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, frameState);\n\n  const layerStatesArray = frameState.layerStatesArray;\n  stableSort(layerStatesArray, sortByZIndex);\n\n  if (rotation) {\n    context.save();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  }\n\n  const viewResolution = frameState.viewState.resolution;\n  let i, ii, layer, layerRenderer, layerState;\n  for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n    layerState = layerStatesArray[i];\n    layer = layerState.layer;\n    layerRenderer = /** @type {module:ol/renderer/canvas/Layer} */ (this.getLayerRenderer(layer));\n    if (!visibleAtResolution(layerState, viewResolution) ||\n        layerState.sourceState != SourceState.READY) {\n      continue;\n    }\n    if (layerRenderer.prepareFrame(frameState, layerState)) {\n      layerRenderer.composeFrame(frameState, layerState, context);\n    }\n  }\n\n  if (rotation) {\n    context.restore();\n  }\n\n  this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, frameState);\n\n  if (!this.renderedVisible_) {\n    this.canvas_.style.display = '';\n    this.renderedVisible_ = true;\n  }\n\n  this.scheduleRemoveUnusedLayerRenderers(frameState);\n  this.scheduleExpireIconCache(frameState);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasMapRenderer.prototype.forEachLayerAtPixel = function(pixel, frameState, hitTolerance, callback, thisArg,\n  layerFilter, thisArg2) {\n  let result;\n  const viewState = frameState.viewState;\n  const viewResolution = viewState.resolution;\n\n  const layerStates = frameState.layerStatesArray;\n  const numLayers = layerStates.length;\n\n  const coordinate = applyTransform(\n    frameState.pixelToCoordinateTransform, pixel.slice());\n\n  let i;\n  for (i = numLayers - 1; i >= 0; --i) {\n    const layerState = layerStates[i];\n    const layer = layerState.layer;\n    if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n      const layerRenderer = /** @type {module:ol/renderer/canvas/Layer} */ (this.getLayerRenderer(layer));\n      result = layerRenderer.forEachLayerAtCoordinate(\n        coordinate, frameState, hitTolerance, callback, thisArg);\n      if (result) {\n        return result;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasMapRenderer.prototype.registerLayerRenderers = function(constructors) {\n  MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n  for (let i = 0, ii = constructors.length; i < ii; ++i) {\n    const ctor = constructors[i];\n    if (!includes(layerRendererConstructors, ctor)) {\n      layerRendererConstructors.push(ctor);\n    }\n  }\n};\n\nexport default CanvasMapRenderer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport {inherits} from '../../util.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from '../canvas/IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @constructor\n * @extends {module:ol/renderer/canvas/IntermediateCanvas}\n * @param {module:ol/layer/Image|module:ol/layer/Vector} imageLayer Image or vector layer.\n * @api\n */\nconst CanvasImageLayerRenderer = function(imageLayer) {\n\n  IntermediateCanvasRenderer.call(this, imageLayer);\n\n  /**\n   * @private\n   * @type {?module:ol/ImageBase}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.imageTransform_ = createTransform();\n\n  /**\n   * @type {!Array.<string>}\n   */\n  this.skippedFeatures_ = [];\n\n  /**\n   * @private\n   * @type {module:ol/renderer/canvas/VectorLayer}\n   */\n  this.vectorRenderer_ = null;\n\n  if (imageLayer.getType() === LayerType.VECTOR) {\n    for (let i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n      const ctor = layerRendererConstructors[i];\n      if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n        this.vectorRenderer_ = new ctor(imageLayer);\n        break;\n      }\n    }\n  }\n\n};\n\ninherits(CanvasImageLayerRenderer, IntermediateCanvasRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {module:ol/layer/Vector} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/ImageLayer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {module:ol/layer/Image} */ (layer));\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.disposeInternal = function() {\n  if (this.vectorRenderer_) {\n    this.vectorRenderer_.dispose();\n  }\n  IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.getImage = function() {\n  return !this.image_ ? null : this.image_.getImage();\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.getImageTransform = function() {\n  return this.imageTransform_;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {\n\n  const pixelRatio = frameState.pixelRatio;\n  const size = frameState.size;\n  const viewState = frameState.viewState;\n  const viewCenter = viewState.center;\n  const viewResolution = viewState.resolution;\n\n  let image;\n  const imageLayer = /** @type {module:ol/layer/Image} */ (this.getLayer());\n  const imageSource = imageLayer.getSource();\n\n  const hints = frameState.viewHints;\n\n  const vectorRenderer = this.vectorRenderer_;\n  let renderedExtent = frameState.extent;\n  if (!vectorRenderer && layerState.extent !== undefined) {\n    renderedExtent = getIntersection(renderedExtent, layerState.extent);\n  }\n\n  if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)) {\n    let projection = viewState.projection;\n    if (!ENABLE_RASTER_REPROJECTION) {\n      const sourceProjection = imageSource.getProjection();\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n    }\n    let skippedFeatures = this.skippedFeatures_;\n    if (vectorRenderer) {\n      const context = vectorRenderer.context;\n      const imageFrameState = /** @type {module:ol/PluggableMap~FrameState} */ (assign({}, frameState, {\n        size: [\n          getWidth(renderedExtent) / viewResolution,\n          getHeight(renderedExtent) / viewResolution\n        ],\n        viewState: /** @type {module:ol/View~State} */ (assign({}, frameState.viewState, {\n          rotation: 0\n        }))\n      }));\n      const newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n      image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n        if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n            (vectorRenderer.replayGroupChanged ||\n            !equals(skippedFeatures, newSkippedFeatures))) {\n          context.canvas.width = imageFrameState.size[0] * pixelRatio;\n          context.canvas.height = imageFrameState.size[1] * pixelRatio;\n          vectorRenderer.compose(context, imageFrameState, layerState);\n          skippedFeatures = newSkippedFeatures;\n          callback();\n        }\n      });\n    } else {\n      image = imageSource.getImage(\n        renderedExtent, viewResolution, pixelRatio, projection);\n    }\n    if (image && this.loadImage(image)) {\n      this.image_ = image;\n      this.skippedFeatures_ = skippedFeatures;\n    }\n  }\n\n  if (this.image_) {\n    image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const imagePixelRatio = image.getPixelRatio();\n    const scale = pixelRatio * imageResolution /\n        (viewResolution * imagePixelRatio);\n    const transform = composeTransform(this.imageTransform_,\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n      scale, scale,\n      0,\n      imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n      imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n    composeTransform(this.coordinateToCanvasPixelTransform,\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\n      0,\n      -viewCenter[0], -viewCenter[1]);\n\n    this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n  }\n\n  return !!this.image_;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  if (this.vectorRenderer_) {\n    return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg);\n  } else {\n    return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback, thisArg);\n  }\n};\n\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/geom/flat/flip\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array.<number>=} opt_dest Destination.\n * @param {number=} opt_destOffset Destination offset.\n * @return {Array.<number>} Flat coordinates.\n */\nexport function flipXY(flatCoordinates, offset, end, stride, opt_dest, opt_destOffset) {\n  let dest, destOffset;\n  if (opt_dest !== undefined) {\n    dest = opt_dest;\n    destOffset = opt_destOffset !== undefined ? opt_destOffset : 0;\n  } else {\n    dest = [];\n    destOffset = 0;\n  }\n  let j = offset;\n  while (j < end) {\n    const x = flatCoordinates[j++];\n    dest[destOffset++] = flatCoordinates[j++];\n    dest[destOffset++] = x;\n    for (let k = 2; k < stride; ++k) {\n      dest[destOffset++] = flatCoordinates[j++];\n    }\n  }\n  dest.length = destOffset;\n  return dest;\n}\n","/**\n * @module ol/format/Polyline\n */\nimport {inherits} from '../util.js';\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport TextFeature from '../format/TextFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\nimport {flipXY} from '../geom/flat/flip.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\n * @property {module:ol/geom/GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the format reader.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the Encoded\n * Polyline Algorithm Format.\n *\n * @constructor\n * @extends {module:ol/format/TextFeature}\n * @param {module:ol/format/Polyline~Options=} opt_options Optional configuration object.\n * @api\n */\nconst Polyline = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  TextFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.dataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.factor_ = options.factor ? options.factor : 1e5;\n\n  /**\n   * @private\n   * @type {module:ol/geom/GeometryLayout}\n   */\n  this.geometryLayout_ = options.geometryLayout ?\n    options.geometryLayout : GeometryLayout.XY;\n};\n\ninherits(Polyline, TextFeature);\n\n\n/**\n * Encode a list of n-dimensional points and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array.<number>} numbers A list of n-dimensional points.\n * @param {number} stride The number of dimension of the points in the list.\n * @param {number=} opt_factor The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeDeltas(numbers, stride, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  let d;\n\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  for (let i = 0, ii = numbers.length; i < ii;) {\n    for (d = 0; d < stride; ++d, ++i) {\n      const num = numbers[i];\n      const delta = num - lastNumbers[d];\n      lastNumbers[d] = num;\n\n      numbers[i] = delta;\n    }\n  }\n\n  return encodeFloats(numbers, factor);\n}\n\n\n/**\n * Decode a list of n-dimensional points from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} stride The number of dimension of the points in the\n *     encoded string.\n * @param {number=} opt_factor The factor by which the resulting numbers will\n *     be divided. Default is `1e5`.\n * @return {Array.<number>} A list of n-dimensional points.\n * @api\n */\nexport function decodeDeltas(encoded, stride, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  let d;\n\n  /** @type {Array.<number>} */\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  const numbers = decodeFloats(encoded, factor);\n\n  for (let i = 0, ii = numbers.length; i < ii;) {\n    for (d = 0; d < stride; ++d, ++i) {\n      lastNumbers[d] += numbers[i];\n\n      numbers[i] = lastNumbers[d];\n    }\n  }\n\n  return numbers;\n}\n\n\n/**\n * Encode a list of floating point numbers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array.<number>} numbers A list of floating point numbers.\n * @param {number=} opt_factor The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeFloats(numbers, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] = Math.round(numbers[i] * factor);\n  }\n\n  return encodeSignedIntegers(numbers);\n}\n\n\n/**\n * Decode a list of floating point numbers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number=} opt_factor The factor by which the result will be divided.\n *     Default is `1e5`.\n * @return {Array.<number>} A list of floating point numbers.\n * @api\n */\nexport function decodeFloats(encoded, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  const numbers = decodeSignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] /= factor;\n  }\n  return numbers;\n}\n\n\n/**\n * Encode a list of signed integers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array.<number>} numbers A list of signed integers.\n * @return {string} The encoded string.\n */\nexport function encodeSignedIntegers(numbers) {\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = (num < 0) ? ~(num << 1) : (num << 1);\n  }\n  return encodeUnsignedIntegers(numbers);\n}\n\n\n/**\n * Decode a list of signed integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array.<number>} A list of signed integers.\n */\nexport function decodeSignedIntegers(encoded) {\n  const numbers = decodeUnsignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = (num & 1) ? ~(num >> 1) : (num >> 1);\n  }\n  return numbers;\n}\n\n\n/**\n * Encode a list of unsigned integers and return an encoded string\n *\n * @param {Array.<number>} numbers A list of unsigned integers.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedIntegers(numbers) {\n  let encoded = '';\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    encoded += encodeUnsignedInteger(numbers[i]);\n  }\n  return encoded;\n}\n\n\n/**\n * Decode a list of unsigned integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array.<number>} A list of unsigned integers.\n */\nexport function decodeUnsignedIntegers(encoded) {\n  const numbers = [];\n  let current = 0;\n  let shift = 0;\n  for (let i = 0, ii = encoded.length; i < ii; ++i) {\n    const b = encoded.charCodeAt(i) - 63;\n    current |= (b & 0x1f) << shift;\n    if (b < 0x20) {\n      numbers.push(current);\n      current = 0;\n      shift = 0;\n    } else {\n      shift += 5;\n    }\n  }\n  return numbers;\n}\n\n\n/**\n * Encode one single unsigned integer and return an encoded string\n *\n * @param {number} num Unsigned integer that should be encoded.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedInteger(num) {\n  let value, encoded = '';\n  while (num >= 0x20) {\n    value = (0x20 | (num & 0x1f)) + 63;\n    encoded += String.fromCharCode(value);\n    num >>= 5;\n  }\n  value = num + 63;\n  encoded += String.fromCharCode(value);\n  return encoded;\n}\n\n\n/**\n * Read the feature from the Polyline source. The coordinates are assumed to be\n * in two dimensions and in latitude, longitude order.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/Feature} Feature.\n * @api\n */\nPolyline.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nPolyline.prototype.readFeatureFromText = function(text, opt_options) {\n  const geometry = this.readGeometryFromText(text, opt_options);\n  return new Feature(geometry);\n};\n\n\n/**\n * Read the feature from the source. As Polyline sources contain a single\n * feature, this will return the feature in an array.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nPolyline.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nPolyline.prototype.readFeaturesFromText = function(text, opt_options) {\n  const feature = this.readFeatureFromText(text, opt_options);\n  return [feature];\n};\n\n\n/**\n * Read the geometry from the source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/Geometry} Geometry.\n * @api\n */\nPolyline.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nPolyline.prototype.readGeometryFromText = function(text, opt_options) {\n  const stride = getStrideForLayout(this.geometryLayout_);\n  const flatCoordinates = decodeDeltas(text, stride, this.factor_);\n  flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n  const coordinates = inflateCoordinates(flatCoordinates, 0, flatCoordinates.length, stride);\n\n  return (\n    /** @type {module:ol/geom/Geometry} */ (transformWithOptions(\n      new LineString(coordinates, this.geometryLayout_),\n      false,\n      this.adaptOptions(opt_options)\n    ))\n  );\n};\n\n\n/**\n * Read the projection from a Polyline source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {module:ol/proj/Projection} Projection.\n * @api\n */\nPolyline.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nPolyline.prototype.writeFeatureText = function(feature, opt_options) {\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    return this.writeGeometryText(geometry, opt_options);\n  } else {\n    assert(false, 40); // Expected `feature` to have a geometry\n    return '';\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nPolyline.prototype.writeFeaturesText = function(features, opt_options) {\n  return this.writeFeatureText(features[0], opt_options);\n};\n\n\n/**\n * Write a single geometry in Polyline format.\n *\n * @function\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} Geometry.\n * @api\n */\nPolyline.prototype.writeGeometry;\n\n\n/**\n * @inheritDoc\n */\nPolyline.prototype.writeGeometryText = function(geometry, opt_options) {\n  geometry = /** @type {module:ol/geom/LineString} */\n    (transformWithOptions(geometry, true, this.adaptOptions(opt_options)));\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n  return encodeDeltas(flatCoordinates, stride, this.factor_);\n};\nexport default Polyline;\n","/**\n * @module ol/format/WMSCapabilities\n */\nimport {inherits} from '../util.js';\nimport {readHref} from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport {readDecimalString, readString, readNonNegativeInteger, readDecimal, readBooleanString, readNonNegativeIntegerString} from '../format/xsd.js';\nimport {makeArrayPusher, makeObjectPropertyPusher, makeObjectPropertySetter,\n  makeStructureNS, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @classdesc\n * Format for reading WMS capabilities data\n *\n * @constructor\n * @extends {module:ol/format/XML}\n * @api\n */\nconst WMSCapabilities = function() {\n\n  XML.call(this);\n\n  /**\n   * @type {string|undefined}\n   */\n  this.version = undefined;\n};\n\ninherits(WMSCapabilities, XML);\n\n\n/**\n * @const\n * @type {Array.<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/wms'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Service': makeObjectPropertySetter(readService),\n    'Capability': makeObjectPropertySetter(readCapability)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst CAPABILITY_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Request': makeObjectPropertySetter(readRequest),\n    'Exception': makeObjectPropertySetter(readException),\n    'Layer': makeObjectPropertySetter(readCapabilityLayer)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst SERVICE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\n    'OnlineResource': makeObjectPropertySetter(readHref),\n    'ContactInformation': makeObjectPropertySetter(readContactInformation),\n    'Fees': makeObjectPropertySetter(readString),\n    'AccessConstraints': makeObjectPropertySetter(readString),\n    'LayerLimit': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxHeight': makeObjectPropertySetter(readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst CONTACT_INFORMATION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ContactPersonPrimary': makeObjectPropertySetter(readContactPersonPrimary),\n    'ContactPosition': makeObjectPropertySetter(readString),\n    'ContactAddress': makeObjectPropertySetter(readContactAddress),\n    'ContactVoiceTelephone': makeObjectPropertySetter(readString),\n    'ContactFacsimileTelephone': makeObjectPropertySetter(readString),\n    'ContactElectronicMailAddress': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst CONTACT_PERSON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ContactPerson': makeObjectPropertySetter(readString),\n    'ContactOrganization': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst CONTACT_ADDRESS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'AddressType': makeObjectPropertySetter(readString),\n    'Address': makeObjectPropertySetter(readString),\n    'City': makeObjectPropertySetter(readString),\n    'StateOrProvince': makeObjectPropertySetter(readString),\n    'PostCode': makeObjectPropertySetter(readString),\n    'Country': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst EXCEPTION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Format': makeArrayPusher(readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\n    'CRS': makeObjectPropertyPusher(readString),\n    'EX_GeographicBoundingBox': makeObjectPropertySetter(readEXGeographicBoundingBox),\n    'BoundingBox': makeObjectPropertyPusher(readBoundingBox),\n    'Dimension': makeObjectPropertyPusher(readDimension),\n    'Attribution': makeObjectPropertySetter(readAttribution),\n    'AuthorityURL': makeObjectPropertyPusher(readAuthorityURL),\n    'Identifier': makeObjectPropertyPusher(readString),\n    'MetadataURL': makeObjectPropertyPusher(readMetadataURL),\n    'DataURL': makeObjectPropertyPusher(readFormatOnlineresource),\n    'FeatureListURL': makeObjectPropertyPusher(readFormatOnlineresource),\n    'Style': makeObjectPropertyPusher(readStyle),\n    'MinScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'MaxScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'Layer': makeObjectPropertyPusher(readLayer)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst ATTRIBUTION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'OnlineResource': makeObjectPropertySetter(readHref),\n    'LogoURL': makeObjectPropertySetter(readSizedFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS =\n    makeStructureNS(NAMESPACE_URIS, {\n      'westBoundLongitude': makeObjectPropertySetter(readDecimal),\n      'eastBoundLongitude': makeObjectPropertySetter(readDecimal),\n      'southBoundLatitude': makeObjectPropertySetter(readDecimal),\n      'northBoundLatitude': makeObjectPropertySetter(readDecimal)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst REQUEST_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'GetCapabilities': makeObjectPropertySetter(readOperationType),\n    'GetMap': makeObjectPropertySetter(readOperationType),\n    'GetFeatureInfo': makeObjectPropertySetter(readOperationType)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst OPERATIONTYPE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Format': makeObjectPropertyPusher(readString),\n    'DCPType': makeObjectPropertyPusher(readDCPType)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst DCPTYPE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'HTTP': makeObjectPropertySetter(readHTTP)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst HTTP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Get': makeObjectPropertySetter(readFormatOnlineresource),\n    'Post': makeObjectPropertySetter(readFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'LegendURL': makeObjectPropertyPusher(readSizedFormatOnlineresource),\n    'StyleSheetURL': makeObjectPropertySetter(readFormatOnlineresource),\n    'StyleURL': makeObjectPropertySetter(readFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst FORMAT_ONLINERESOURCE_PARSERS =\n    makeStructureNS(NAMESPACE_URIS, {\n      'Format': makeObjectPropertySetter(readString),\n      'OnlineResource': makeObjectPropertySetter(readHref)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst KEYWORDLIST_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Keyword': makeArrayPusher(readString)\n  });\n\n\n/**\n * Read a WMS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMS capabilities.\n * @api\n */\nWMSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMSCapabilities.prototype.readFromNode = function(node) {\n  this.version = node.getAttribute('version').trim();\n  const wmsCapabilityObject = pushParseAndPop({\n    'version': this.version\n  }, PARSERS, node, []);\n  return wmsCapabilityObject ? wmsCapabilityObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readAttribution(node, objectStack) {\n  return pushParseAndPop({}, ATTRIBUTION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object} Bounding box object.\n */\nfunction readBoundingBox(node, objectStack) {\n  const extent = [\n    readDecimalString(node.getAttribute('minx')),\n    readDecimalString(node.getAttribute('miny')),\n    readDecimalString(node.getAttribute('maxx')),\n    readDecimalString(node.getAttribute('maxy'))\n  ];\n\n  const resolutions = [\n    readDecimalString(node.getAttribute('resx')),\n    readDecimalString(node.getAttribute('resy'))\n  ];\n\n  return {\n    'crs': node.getAttribute('CRS'),\n    'extent': extent,\n    'res': resolutions\n  };\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/extent~Extent|undefined} Bounding box object.\n */\nfunction readEXGeographicBoundingBox(node, objectStack) {\n  const geographicBoundingBox = pushParseAndPop(\n    {},\n    EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS,\n    node, objectStack);\n  if (!geographicBoundingBox) {\n    return undefined;\n  }\n  const westBoundLongitude = /** @type {number|undefined} */\n        (geographicBoundingBox['westBoundLongitude']);\n  const southBoundLatitude = /** @type {number|undefined} */\n        (geographicBoundingBox['southBoundLatitude']);\n  const eastBoundLongitude = /** @type {number|undefined} */\n        (geographicBoundingBox['eastBoundLongitude']);\n  const northBoundLatitude = /** @type {number|undefined} */\n        (geographicBoundingBox['northBoundLatitude']);\n  if (westBoundLongitude === undefined || southBoundLatitude === undefined ||\n        eastBoundLongitude === undefined || northBoundLatitude === undefined) {\n    return undefined;\n  }\n  return [\n    westBoundLongitude, southBoundLatitude,\n    eastBoundLongitude, northBoundLatitude\n  ];\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Capability object.\n */\nfunction readCapability(node, objectStack) {\n  return pushParseAndPop({}, CAPABILITY_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Service object.\n */\nfunction readService(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Contact information object.\n */\nfunction readContactInformation(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFORMATION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Contact person object.\n */\nfunction readContactPersonPrimary(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_PERSON_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Contact address object.\n */\nfunction readContactAddress(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_ADDRESS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Format array.\n */\nfunction readException(node, objectStack) {\n  return pushParseAndPop([], EXCEPTION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readCapabilityLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readLayer(node, objectStack) {\n  const parentLayerObject = /**  @type {!Object.<string,*>} */ (objectStack[objectStack.length - 1]);\n\n  const layerObject = pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n\n  if (!layerObject) {\n    return undefined;\n  }\n  let queryable = readBooleanString(node.getAttribute('queryable'));\n  if (queryable === undefined) {\n    queryable = parentLayerObject['queryable'];\n  }\n  layerObject['queryable'] = queryable !== undefined ? queryable : false;\n\n  let cascaded = readNonNegativeIntegerString(\n    node.getAttribute('cascaded'));\n  if (cascaded === undefined) {\n    cascaded = parentLayerObject['cascaded'];\n  }\n  layerObject['cascaded'] = cascaded;\n\n  let opaque = readBooleanString(node.getAttribute('opaque'));\n  if (opaque === undefined) {\n    opaque = parentLayerObject['opaque'];\n  }\n  layerObject['opaque'] = opaque !== undefined ? opaque : false;\n\n  let noSubsets = readBooleanString(node.getAttribute('noSubsets'));\n  if (noSubsets === undefined) {\n    noSubsets = parentLayerObject['noSubsets'];\n  }\n  layerObject['noSubsets'] = noSubsets !== undefined ? noSubsets : false;\n\n  let fixedWidth = readDecimalString(node.getAttribute('fixedWidth'));\n  if (!fixedWidth) {\n    fixedWidth = parentLayerObject['fixedWidth'];\n  }\n  layerObject['fixedWidth'] = fixedWidth;\n\n  let fixedHeight = readDecimalString(node.getAttribute('fixedHeight'));\n  if (!fixedHeight) {\n    fixedHeight = parentLayerObject['fixedHeight'];\n  }\n  layerObject['fixedHeight'] = fixedHeight;\n\n  // See 7.2.4.8\n  const addKeys = ['Style', 'CRS', 'AuthorityURL'];\n  addKeys.forEach(function(key) {\n    if (key in parentLayerObject) {\n      const childValue = layerObject[key] || [];\n      layerObject[key] = childValue.concat(parentLayerObject[key]);\n    }\n  });\n\n  const replaceKeys = ['EX_GeographicBoundingBox', 'BoundingBox', 'Dimension',\n    'Attribution', 'MinScaleDenominator', 'MaxScaleDenominator'];\n  replaceKeys.forEach(function(key) {\n    if (!(key in layerObject)) {\n      const parentValue = parentLayerObject[key];\n      layerObject[key] = parentValue;\n    }\n  });\n\n  return layerObject;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object} Dimension object.\n */\nfunction readDimension(node, objectStack) {\n  const dimensionObject = {\n    'name': node.getAttribute('name'),\n    'units': node.getAttribute('units'),\n    'unitSymbol': node.getAttribute('unitSymbol'),\n    'default': node.getAttribute('default'),\n    'multipleValues': readBooleanString(node.getAttribute('multipleValues')),\n    'nearestValue': readBooleanString(node.getAttribute('nearestValue')),\n    'current': readBooleanString(node.getAttribute('current')),\n    'values': readString(node)\n  };\n  return dimensionObject;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readFormatOnlineresource(node, objectStack) {\n  return pushParseAndPop({}, FORMAT_ONLINERESOURCE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Request object.\n */\nfunction readRequest(node, objectStack) {\n  return pushParseAndPop({}, REQUEST_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} DCP type object.\n */\nfunction readDCPType(node, objectStack) {\n  return pushParseAndPop({}, DCPTYPE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} HTTP object.\n */\nfunction readHTTP(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Operation type object.\n */\nfunction readOperationType(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONTYPE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readSizedFormatOnlineresource(node, objectStack) {\n  const formatOnlineresource = readFormatOnlineresource(node, objectStack);\n  if (formatOnlineresource) {\n    const size = [\n      readNonNegativeIntegerString(node.getAttribute('width')),\n      readNonNegativeIntegerString(node.getAttribute('height'))\n    ];\n    formatOnlineresource['size'] = size;\n    return formatOnlineresource;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Authority URL object.\n */\nfunction readAuthorityURL(node, objectStack) {\n  const authorityObject = readFormatOnlineresource(node, objectStack);\n  if (authorityObject) {\n    authorityObject['name'] = node.getAttribute('name');\n    return authorityObject;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Metadata URL object.\n */\nfunction readMetadataURL(node, objectStack) {\n  const metadataObject = readFormatOnlineresource(node, objectStack);\n  if (metadataObject) {\n    metadataObject['type'] = node.getAttribute('type');\n    return metadataObject;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  return pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Keyword list.\n */\nfunction readKeywordList(node, objectStack) {\n  return pushParseAndPop([], KEYWORDLIST_PARSERS, node, objectStack);\n}\n\n\nexport default WMSCapabilities;\n","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../util.js';\nimport {readHref} from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport {readString} from '../format/xsd.js';\nimport {makeObjectPropertyPusher, makeObjectPropertySetter, makeStructureNS, pushParseAndPop} from '../xml.js';\n\n/**\n * @constructor\n * @extends {module:ol/format/XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @const\n * @type {Array.<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n    'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n    'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst ADDRESS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'DeliveryPoint': makeObjectPropertySetter(readString),\n    'City': makeObjectPropertySetter(readString),\n    'AdministrativeArea': makeObjectPropertySetter(readString),\n    'PostalCode': makeObjectPropertySetter(readString),\n    'Country': makeObjectPropertySetter(readString),\n    'ElectronicMailAddress': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst ALLOWED_VALUES_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Value': makeObjectPropertyPusher(readValue)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst CONSTRAINT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'AllowedValues': makeObjectPropertySetter(readAllowedValues)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst CONTACT_INFO_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Phone': makeObjectPropertySetter(readPhone),\n    'Address': makeObjectPropertySetter(readAddress)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst DCP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'HTTP': makeObjectPropertySetter(readHttp)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst HTTP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Get': makeObjectPropertyPusher(readGet),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst OPERATION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'DCP': makeObjectPropertySetter(readDcp)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst OPERATIONS_METADATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Operation': readOperation\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst PHONE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Voice': makeObjectPropertySetter(readString),\n    'Facsimile': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst REQUEST_METHOD_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Constraint': makeObjectPropertyPusher(readConstraint)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst SERVICE_CONTACT_PARSERS =\n    makeStructureNS(\n      NAMESPACE_URIS, {\n        'IndividualName': makeObjectPropertySetter(readString),\n        'PositionName': makeObjectPropertySetter(readString),\n        'ContactInfo': makeObjectPropertySetter(readContactInfo)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst SERVICE_IDENTIFICATION_PARSERS =\n    makeStructureNS(\n      NAMESPACE_URIS, {\n        'Abstract': makeObjectPropertySetter(readString),\n        'AccessConstraints': makeObjectPropertySetter(readString),\n        'Fees': makeObjectPropertySetter(readString),\n        'Title': makeObjectPropertySetter(readString),\n        'ServiceTypeVersion': makeObjectPropertySetter(readString),\n        'ServiceType': makeObjectPropertySetter(readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst SERVICE_PROVIDER_PARSERS =\n    makeStructureNS(\n      NAMESPACE_URIS, {\n        'ProviderName': makeObjectPropertySetter(readString),\n        'ProviderSite': makeObjectPropertySetter(readHref),\n        'ServiceContact': makeObjectPropertySetter(readServiceContact)\n      });\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = pushParseAndPop({},\n    PARSERS, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({},\n    ADDRESS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({},\n    ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({'name': name},\n    CONSTRAINT_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({},\n    CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({},\n    DCP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  const href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop({'href': href},\n    REQUEST_METHOD_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = pushParseAndPop({},\n    OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({},\n    OPERATIONS_METADATA_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({},\n    PHONE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop(\n    {}, SERVICE_IDENTIFICATION_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop(\n    {}, SERVICE_CONTACT_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop(\n    {}, SERVICE_PROVIDER_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\n\n\nexport default OWS;\n","/**\n * @module ol/format/IGC\n */\nimport {inherits} from '../util.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport TextFeature from '../format/TextFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * IGC altitude/z. One of 'barometric', 'gps', 'none'.\n * @enum {string}\n */\nconst IGCZ = {\n  BAROMETRIC: 'barometric',\n  GPS: 'gps',\n  NONE: 'none'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {IGCZ|string} [altitudeMode='none'] Altitude mode. Possible\n * values are `'barometric'`, `'gps'`, and `'none'`.\n */\n\n\n/**\n * @classdesc\n * Feature format for `*.igc` flight recording files.\n *\n * @constructor\n * @extends {module:ol/format/TextFeature}\n * @param {module:ol/format/IGC~Options=} opt_options Options.\n * @api\n */\nconst IGC = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  TextFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.dataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @private\n   * @type {IGCZ}\n   */\n  this.altitudeMode_ = options.altitudeMode ? options.altitudeMode : IGCZ.NONE;\n};\n\ninherits(IGC, TextFeature);\n\n\n/**\n * @const\n * @type {RegExp}\n */\nconst B_RECORD_RE =\n    /^B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5})/;\n\n\n/**\n * @const\n * @type {RegExp}\n */\nconst H_RECORD_RE = /^H.([A-Z]{3}).*?:(.*)/;\n\n\n/**\n * @const\n * @type {RegExp}\n */\nconst HFDTE_RECORD_RE = /^HFDTE(\\d{2})(\\d{2})(\\d{2})/;\n\n\n/**\n * A regular expression matching the newline characters `\\r\\n`, `\\r` and `\\n`.\n *\n * @const\n * @type {RegExp}\n */\nconst NEWLINE_RE = /\\r\\n|\\r|\\n/;\n\n\n/**\n * Read the feature from the IGC source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/Feature} Feature.\n * @api\n */\nIGC.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nIGC.prototype.readFeatureFromText = function(text, opt_options) {\n  const altitudeMode = this.altitudeMode_;\n  const lines = text.split(NEWLINE_RE);\n  /** @type {Object.<string, string>} */\n  const properties = {};\n  const flatCoordinates = [];\n  let year = 2000;\n  let month = 0;\n  let day = 1;\n  let lastDateTime = -1;\n  let i, ii;\n  for (i = 0, ii = lines.length; i < ii; ++i) {\n    const line = lines[i];\n    let m;\n    if (line.charAt(0) == 'B') {\n      m = B_RECORD_RE.exec(line);\n      if (m) {\n        const hour = parseInt(m[1], 10);\n        const minute = parseInt(m[2], 10);\n        const second = parseInt(m[3], 10);\n        let y = parseInt(m[4], 10) + parseInt(m[5], 10) / 60000;\n        if (m[6] == 'S') {\n          y = -y;\n        }\n        let x = parseInt(m[7], 10) + parseInt(m[8], 10) / 60000;\n        if (m[9] == 'W') {\n          x = -x;\n        }\n        flatCoordinates.push(x, y);\n        if (altitudeMode != IGCZ.NONE) {\n          let z;\n          if (altitudeMode == IGCZ.GPS) {\n            z = parseInt(m[11], 10);\n          } else if (altitudeMode == IGCZ.BAROMETRIC) {\n            z = parseInt(m[12], 10);\n          } else {\n            z = 0;\n          }\n          flatCoordinates.push(z);\n        }\n        let dateTime = Date.UTC(year, month, day, hour, minute, second);\n        // Detect UTC midnight wrap around.\n        if (dateTime < lastDateTime) {\n          dateTime = Date.UTC(year, month, day + 1, hour, minute, second);\n        }\n        flatCoordinates.push(dateTime / 1000);\n        lastDateTime = dateTime;\n      }\n    } else if (line.charAt(0) == 'H') {\n      m = HFDTE_RECORD_RE.exec(line);\n      if (m) {\n        day = parseInt(m[1], 10);\n        month = parseInt(m[2], 10) - 1;\n        year = 2000 + parseInt(m[3], 10);\n      } else {\n        m = H_RECORD_RE.exec(line);\n        if (m) {\n          properties[m[1]] = m[2].trim();\n        }\n      }\n    }\n  }\n  if (flatCoordinates.length === 0) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  const layout = altitudeMode == IGCZ.NONE ? GeometryLayout.XYM : GeometryLayout.XYZM;\n  lineString.setFlatCoordinates(layout, flatCoordinates);\n  const feature = new Feature(transformWithOptions(lineString, false, opt_options));\n  feature.setProperties(properties);\n  return feature;\n};\n\n\n/**\n * Read the feature from the source. As IGC sources contain a single\n * feature, this will return the feature in an array.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nIGC.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nIGC.prototype.readFeaturesFromText = function(text, opt_options) {\n  const feature = this.readFeatureFromText(text, opt_options);\n  if (feature) {\n    return [feature];\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * Read the projection from the IGC source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {module:ol/proj/Projection} Projection.\n * @api\n */\nIGC.prototype.readProjection;\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nIGC.prototype.writeFeatureText = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nIGC.prototype.writeFeaturesText = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nIGC.prototype.writeGeometryText = function(geometry, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nIGC.prototype.readGeometryFromText = function(text, opt_options) {};\nexport default IGC;\n","/**\n * @module ol/format/GPX\n */\nimport {inherits} from '../util.js';\nimport Feature from '../Feature.js';\nimport {includes} from '../array.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {readString, readDecimal, readNonNegativeInteger, readDateTime, writeStringTextNode, writeNonNegativeIntegerTextNode, writeDecimalTextNode, writeDateTimeTextNode} from '../format/xsd.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport {get as getProjection} from '../proj.js';\nimport {createElementNS, makeArrayPusher, makeArraySerializer, makeChildAppender,\n  makeObjectPropertySetter, makeSequence, makeSimpleNodeFactory, makeStructureNS,\n  OBJECT_PROPERTY_NODE_FACTORY, parseNode, pushParseAndPop, pushSerializeAndPop,\n  XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {function(module:ol/Feature, Node)} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ]\n * @property {boolean} [hasM]\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * @constructor\n * @extends {module:ol/format/XMLFeature}\n * @param {module:ol/format/GPX~Options=} opt_options Options.\n * @api\n */\nconst GPX = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.dataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @type {function(module:ol/Feature, Node)|undefined}\n   * @private\n   */\n  this.readExtensions_ = options.readExtensions;\n};\n\ninherits(GPX, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n\n/**\n * @const\n * @type {Object.<string, function(Node, Array.<*>): (module:ol/Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst GPX_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': makeArrayPusher(readRte),\n    'trk': makeArrayPusher(readTrk),\n    'wpt': makeArrayPusher(readWpt)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst LINK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': makeObjectPropertySetter(readString, 'linkText'),\n    'type': makeObjectPropertySetter(readString, 'linkType')\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst RTE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\n    'extensions': parseExtensions,\n    'type': makeObjectPropertySetter(readString),\n    'rtept': parseRtePt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst RTEPT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst TRK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\n    'type': makeObjectPropertySetter(readString),\n    'extensions': parseExtensions,\n    'trkseg': parseTrkSeg\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst TRKSEG_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': parseTrkPt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst TRKPT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst WPT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime),\n    'magvar': makeObjectPropertySetter(readDecimal),\n    'geoidheight': makeObjectPropertySetter(readDecimal),\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'sym': makeObjectPropertySetter(readString),\n    'type': makeObjectPropertySetter(readString),\n    'fix': makeObjectPropertySetter(readString),\n    'sat': makeObjectPropertySetter(readNonNegativeInteger),\n    'hdop': makeObjectPropertySetter(readDecimal),\n    'vdop': makeObjectPropertySetter(readDecimal),\n    'pdop': makeObjectPropertySetter(readDecimal),\n    'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n    'dgpsid': makeObjectPropertySetter(readNonNegativeInteger),\n    'extensions': parseExtensions\n  });\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst LINK_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': makeChildAppender(writeStringTextNode),\n    'type': makeChildAppender(writeStringTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst RTE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'rtept': makeArraySerializer(makeChildAppender(writeWptType))\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTEPT_TYPE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst TRK_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst TRK_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg))\n  });\n\n\n/**\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst TRKSEG_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': makeChildAppender(writeWptType)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst WPT_TYPE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n    'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n    'ageofdgpsdata', 'dgpsid'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst WPT_TYPE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeChildAppender(writeDecimalTextNode),\n    'time': makeChildAppender(writeDateTimeTextNode),\n    'magvar': makeChildAppender(writeDecimalTextNode),\n    'geoidheight': makeChildAppender(writeDecimalTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'sym': makeChildAppender(writeStringTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'fix': makeChildAppender(writeStringTextNode),\n    'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'hdop': makeChildAppender(writeDecimalTextNode),\n    'vdop': makeChildAppender(writeDecimalTextNode),\n    'pdop': makeChildAppender(writeDecimalTextNode),\n    'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n    'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk'\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  const geometry = /** @type {module:ol/Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst GPX_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': makeChildAppender(writeRte),\n    'trk': makeChildAppender(writeTrk),\n    'wpt': makeChildAppender(writeWpt)\n  });\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {module:ol/format/GPX~LayoutOptions} layoutOptions Layout options.\n * @param {Node} node Node.\n * @param {!Object} values Values.\n * @return {Array.<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')));\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {module:ol/format/GPX~LayoutOptions} layoutOptions Layout options.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>=} ends Ends.\n * @return {module:ol/geom/GeometryLayout} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n  let layout = GeometryLayout.XY;\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    for (let i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = flatCoordinates.length / 4 * stride;\n    if (ends) {\n      for (let i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = ends[i] / 4 * stride;\n      }\n    }\n  }\n  return layout;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */ (rteValues['flatCoordinates']);\n    const layoutOptions = /** @type {module:ol/format/GPX~LayoutOptions} */ (rteValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */ (trkValues['flatCoordinates']);\n    const layoutOptions = /** @type {module:ol/format/GPX~LayoutOptions} */ (trkValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {module:ol/format/Feature~ReadOptions} */ (objectStack[0]);\n  const values = pushParseAndPop({\n    'flatCoordinates': [],\n    'layoutOptions': {}\n  }, RTE_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {module:ol/format/GPX~LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n  const geometry = new LineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {module:ol/format/Feature~ReadOptions} */ (objectStack[0]);\n  const values = pushParseAndPop({\n    'flatCoordinates': [],\n    'ends': [],\n    'layoutOptions': {}\n  }, TRK_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {module:ol/format/GPX~LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates, ends);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {module:ol/format/Feature~ReadOptions} */ (objectStack[0]);\n  const values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {module:ol/format/GPX~LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = applyLayoutOptions(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Array.<module:ol/Feature>} features List of features.\n * @private\n */\nGPX.prototype.handleReadExtensions_ = function(features) {\n  if (!features) {\n    features = [];\n  }\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    const feature = features[i];\n    if (this.readExtensions_) {\n      const extensionsNode = feature.get('extensionsNode_') || null;\n      this.readExtensions_(feature, extensionsNode);\n    }\n    feature.set('extensionsNode_', undefined);\n  }\n};\n\n\n/**\n * Read the first feature from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/Feature} Feature.\n * @api\n */\nGPX.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return null;\n  }\n  const featureReader = FEATURE_READER[node.localName];\n  if (!featureReader) {\n    return null;\n  }\n  const feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n  if (!feature) {\n    return null;\n  }\n  this.handleReadExtensions_([feature]);\n  return feature;\n};\n\n\n/**\n * Read all features from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nGPX.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return [];\n  }\n  if (node.localName == 'gpx') {\n    /** @type {Array.<module:ol/Feature>} */\n    const features = pushParseAndPop([], GPX_PARSERS,\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      this.handleReadExtensions_(features);\n      return features;\n    } else {\n      return [];\n    }\n  }\n  return [];\n};\n\n\n/**\n * Read the projection from a GPX source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {module:ol/proj/Projection} Projection.\n * @api\n */\nGPX.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [\n    properties['linkText'],\n    properties['linkType']\n  ];\n  pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    link, objectStack, LINK_SEQUENCE);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  node.setAttributeNS(null, 'lat', coordinate[1]);\n  node.setAttributeNS(null, 'lon', coordinate[0]);\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n      // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n      // pass\n  }\n  const orderedKeys = (node.nodeName == 'rtept') ?\n    RTEPT_TYPE_SEQUENCE[namespaceURI] :\n    WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {module:ol/geom/LineString} */ (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    properties['rtept'] = geometry.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context,\n    RTE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  /** @type {module:ol/xml~NodeStackItem} */\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {module:ol/geom/MultiLineString} */\n      (transformWithOptions(geometry, true, options));\n    properties['trkseg'] = geometry.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context,\n    TRK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LineString} lineString LineString.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {module:ol/xml~NodeStackItem} */\n  const context = {node: node, 'geometryLayout': lineString.getLayout(),\n    'properties': {}};\n  pushSerializeAndPop(context,\n    TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(), objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[0]);\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {module:ol/geom/Point} */\n      (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    writeWptType(node, geometry.getCoordinates(), objectStack);\n  }\n}\n\n\n/**\n * Encode an array of features in the GPX format.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @function\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} Result.\n * @api\n */\nGPX.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GPX format as an XML node.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGPX.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  //FIXME Serialize metadata\n  const gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n  gpx.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n  gpx.setAttribute('version', '1.1');\n  gpx.setAttribute('creator', 'OpenLayers');\n\n  pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n    ({node: gpx}), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n  return gpx;\n};\nexport default GPX;\n","/**\n * @module ol/VectorTile\n */\nimport {getUid, inherits} from './util.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(new: module:ol/VectorTile, module:ol/tilecoord~TileCoord,\n * module:ol/TileState, string, ?string, module:ol/Tile~LoadFunction)} TileClass\n * @api\n */\n\n/**\n * @constructor\n * @extends {module:ol/Tile}\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileState} state State.\n * @param {string} src Data source url.\n * @param {module:ol/format/Feature} format Feature format.\n * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n * @param {module:ol/Tile~Options=} opt_options Tile options.\n */\nconst VectorTile = function(tileCoord, state, src, format, tileLoadFunction, opt_options) {\n\n  Tile.call(this, tileCoord, state, opt_options);\n\n  /**\n   * @type {number}\n   */\n  this.consumers = 0;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/format/Feature}\n   */\n  this.format_ = format;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/Feature>}\n   */\n  this.features_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/featureloader~FeatureLoader}\n   */\n  this.loader_;\n\n  /**\n   * Data projection\n   * @private\n   * @type {module:ol/proj/Projection}\n   */\n  this.projection_ = null;\n\n  /**\n   * @private\n   * @type {Object.<string, module:ol/render/ReplayGroup>}\n   */\n  this.replayGroups_ = {};\n\n  /**\n   * @private\n   * @type {module:ol/Tile~LoadFunction}\n   */\n  this.tileLoadFunction_ = tileLoadFunction;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.url_ = src;\n\n};\n\ninherits(VectorTile, Tile);\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nconst DEFAULT_EXTENT = [0, 0, 4096, 4096];\n\n\n/**\n * @inheritDoc\n */\nVectorTile.prototype.disposeInternal = function() {\n  this.features_ = null;\n  this.replayGroups_ = {};\n  this.state = TileState.ABORT;\n  this.changed();\n  Tile.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Gets the extent of the vector tile.\n * @return {module:ol/extent~Extent} The extent.\n * @api\n */\nVectorTile.prototype.getExtent = function() {\n  return this.extent_ || DEFAULT_EXTENT;\n};\n\n\n/**\n * Get the feature format assigned for reading this tile's features.\n * @return {module:ol/format/Feature} Feature format.\n * @api\n */\nVectorTile.prototype.getFormat = function() {\n  return this.format_;\n};\n\n\n/**\n * Get the features for this tile. Geometries will be in the projection returned\n * by {@link module:ol/VectorTile~VectorTile#getProjection}.\n * @return {Array.<module:ol/Feature|module:ol/render/Feature>} Features.\n * @api\n */\nVectorTile.prototype.getFeatures = function() {\n  return this.features_;\n};\n\n\n/**\n * @inheritDoc\n */\nVectorTile.prototype.getKey = function() {\n  return this.url_;\n};\n\n\n/**\n * Get the feature projection of features returned by\n * {@link module:ol/VectorTile~VectorTile#getFeatures}.\n * @return {module:ol/proj/Projection} Feature projection.\n * @api\n */\nVectorTile.prototype.getProjection = function() {\n  return this.projection_;\n};\n\n\n/**\n * @param {module:ol/layer/Layer} layer Layer.\n * @param {string} key Key.\n * @return {module:ol/render/ReplayGroup} Replay group.\n */\nVectorTile.prototype.getReplayGroup = function(layer, key) {\n  return this.replayGroups_[getUid(layer) + ',' + key];\n};\n\n\n/**\n * @inheritDoc\n */\nVectorTile.prototype.load = function() {\n  if (this.state == TileState.IDLE) {\n    this.setState(TileState.LOADING);\n    this.tileLoadFunction_(this, this.url_);\n    this.loader_(null, NaN, null);\n  }\n};\n\n\n/**\n * Handler for successful tile load.\n * @param {Array.<module:ol/Feature>} features The loaded features.\n * @param {module:ol/proj/Projection} dataProjection Data projection.\n * @param {module:ol/extent~Extent} extent Extent.\n */\nVectorTile.prototype.onLoad = function(features, dataProjection, extent) {\n  this.setProjection(dataProjection);\n  this.setFeatures(features);\n  this.setExtent(extent);\n};\n\n\n/**\n * Handler for tile load errors.\n */\nVectorTile.prototype.onError = function() {\n  this.setState(TileState.ERROR);\n};\n\n\n/**\n * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s\n * `tileLoadFunction`. Sets the extent of the vector tile. This is only required\n * for tiles in projections with `tile-pixels` as units. The extent should be\n * set to `[0, 0, tilePixelSize, tilePixelSize]`, where `tilePixelSize` is\n * calculated by multiplying the tile size with the tile pixel ratio. For\n * sources using {@link module:ol/format/MVT~MVT} as feature format, the\n * {@link module:ol/format/MVT~MVT#getLastExtent} method will return the correct\n * extent. The default is `[0, 0, 4096, 4096]`.\n * @param {module:ol/extent~Extent} extent The extent.\n * @api\n */\nVectorTile.prototype.setExtent = function(extent) {\n  this.extent_ = extent;\n};\n\n\n/**\n * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n * Sets the features for the tile.\n * @param {Array.<module:ol/Feature>} features Features.\n * @api\n */\nVectorTile.prototype.setFeatures = function(features) {\n  this.features_ = features;\n  this.setState(TileState.LOADED);\n};\n\n\n/**\n * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n * Sets the projection of the features that were added with\n * {@link module:ol/VectorTile~VectorTile#setFeatures}.\n * @param {module:ol/proj/Projection} projection Feature projection.\n * @api\n */\nVectorTile.prototype.setProjection = function(projection) {\n  this.projection_ = projection;\n};\n\n\n/**\n * @param {module:ol/layer/Layer} layer Layer.\n * @param {string} key Key.\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n */\nVectorTile.prototype.setReplayGroup = function(layer, key, replayGroup) {\n  this.replayGroups_[getUid(layer) + ',' + key] = replayGroup;\n};\n\n\n/**\n * Set the feature loader for reading this tile's features.\n * @param {module:ol/featureloader~FeatureLoader} loader Feature loader.\n * @api\n */\nVectorTile.prototype.setLoader = function(loader) {\n  this.loader_ = loader;\n};\n\nexport default VectorTile;\n","/**\n * @module ol/style/AtlasManager\n */\nimport {MAX_TEXTURE_SIZE as WEBGL_MAX_TEXTURE_SIZE} from '../webgl.js';\nimport {UNDEFINED} from '../functions.js';\nimport Atlas from '../style/Atlas.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [initialSize=256] The size in pixels of the first atlas image.\n * @property {number} [maxSize] The maximum size in pixels of atlas images. Default is\n * `webgl/MAX_TEXTURE_SIZE` or 2048 if WebGL is not supported.\n * @property {number} [space=1] The space in pixels between images.\n */\n\n\n/**\n * Provides information for an image inside an atlas manager.\n * `offsetX` and `offsetY` is the position of the image inside\n * the atlas image `image` and the position of the hit-detection image\n * inside the hit-detection atlas image `hitImage`.\n * @typedef {Object} AtlasManagerInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n * @property {HTMLCanvasElement} hitImage\n */\n\n\n/**\n * The size in pixels of the first atlas image.\n * @type {number}\n */\nconst INITIAL_ATLAS_SIZE = 256;\n\n/**\n * The maximum size in pixels of atlas images.\n * @type {number}\n */\nconst MAX_ATLAS_SIZE = -1;\n\n\n/**\n * Manages the creation of image atlases.\n *\n * Images added to this manager will be inserted into an atlas, which\n * will be used for rendering.\n * The `size` given in the constructor is the size for the first\n * atlas. After that, when new atlases are created, they will have\n * twice the size as the latest atlas (until `maxSize` is reached).\n *\n * If an application uses many images or very large images, it is recommended\n * to set a higher `size` value to avoid the creation of too many atlases.\n *\n * @constructor\n * @struct\n * @api\n * @param {module:ol/style/AtlasManager~Options=} opt_options Options.\n */\nconst AtlasManager = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * The size in pixels of the latest atlas image.\n   * @private\n   * @type {number}\n   */\n  this.currentSize_ = options.initialSize !== undefined ?\n    options.initialSize : INITIAL_ATLAS_SIZE;\n\n  /**\n   * The maximum size in pixels of atlas images.\n   * @private\n   * @type {number}\n   */\n  this.maxSize_ = options.maxSize !== undefined ?\n    options.maxSize : MAX_ATLAS_SIZE != -1 ?\n      MAX_ATLAS_SIZE : WEBGL_MAX_TEXTURE_SIZE !== undefined ?\n        WEBGL_MAX_TEXTURE_SIZE : 2048;\n\n  /**\n   * The size in pixels between images.\n   * @private\n   * @type {number}\n   */\n  this.space_ = options.space !== undefined ? options.space : 1;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/style/Atlas>}\n   */\n  this.atlases_ = [new Atlas(this.currentSize_, this.space_)];\n\n  /**\n   * The size in pixels of the latest atlas image for hit-detection images.\n   * @private\n   * @type {number}\n   */\n  this.currentHitSize_ = this.currentSize_;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/style/Atlas>}\n   */\n  this.hitAtlases_ = [new Atlas(this.currentHitSize_, this.space_)];\n};\n\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?module:ol/style/AtlasManager~AtlasManagerInfo} The position and atlas image for the\n *    entry, or `null` if the entry is not part of the atlas manager.\n */\nAtlasManager.prototype.getInfo = function(id) {\n  /** @type {?module:ol/style/Atlas~AtlasInfo} */\n  const info = this.getInfo_(this.atlases_, id);\n\n  if (!info) {\n    return null;\n  }\n  const hitInfo = /** @type {module:ol/style/Atlas~AtlasInfo} */ (this.getInfo_(this.hitAtlases_, id));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n\n/**\n * @private\n * @param {Array.<module:ol/style/Atlas>} atlases The atlases to search.\n * @param {string} id The identifier of the entry to check.\n * @return {?module:ol/style/Atlas~AtlasInfo} The position and atlas image for the entry,\n *    or `null` if the entry is not part of the atlases.\n */\nAtlasManager.prototype.getInfo_ = function(atlases, id) {\n  for (let i = 0, ii = atlases.length; i < ii; ++i) {\n    const atlas = atlases[i];\n    const info = atlas.get(id);\n    if (info) {\n      return info;\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n * @param {module:ol/style/Atlas~AtlasInfo} info The info for the real image.\n * @param {module:ol/style/Atlas~AtlasInfo} hitInfo The info for the hit-detection\n *    image.\n * @return {?module:ol/style/AtlasManager~AtlasManagerInfo} The position and atlas image for the\n *    entry, or `null` if the entry is not part of the atlases.\n */\nAtlasManager.prototype.mergeInfos_ = function(info, hitInfo) {\n  return (\n    /** @type {module:ol/style/AtlasManager~AtlasManagerInfo} */ ({\n      offsetX: info.offsetX,\n      offsetY: info.offsetY,\n      image: info.image,\n      hitImage: hitInfo.image\n    })\n  );\n};\n\n\n/**\n * Add an image to the atlas manager.\n *\n * If an entry for the given id already exists, the entry will\n * be overridden (but the space on the atlas graphic will not be freed).\n *\n * If `renderHitCallback` is provided, the image (or the hit-detection version\n * of the image) will be rendered into a separate hit-detection atlas image.\n *\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *    Called to render the new image onto an atlas image.\n * @param {function(CanvasRenderingContext2D, number, number)=}\n *    opt_renderHitCallback Called to render a hit-detection image onto a hit\n *    detection atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *    `renderCallback` and `renderHitCallback`.\n * @return {?module:ol/style/AtlasManager~AtlasManagerInfo}  The position and atlas image for the\n *    entry, or `null` if the image is too big.\n */\nAtlasManager.prototype.add = function(id, width, height,\n  renderCallback, opt_renderHitCallback, opt_this) {\n  if (width + this.space_ > this.maxSize_ ||\n      height + this.space_ > this.maxSize_) {\n    return null;\n  }\n\n  /** @type {?module:ol/style/Atlas~AtlasInfo} */\n  const info = this.add_(false, id, width, height, renderCallback, opt_this);\n  if (!info) {\n    return null;\n  }\n\n  // even if no hit-detection entry is requested, we insert a fake entry into\n  // the hit-detection atlas, to make sure that the offset is the same for\n  // the original image and the hit-detection image.\n  const renderHitCallback = opt_renderHitCallback !== undefined ?\n    opt_renderHitCallback : UNDEFINED;\n\n  const hitInfo = /** @type {module:ol/style/Atlas~AtlasInfo} */ (this.add_(true,\n    id, width, height, renderHitCallback, opt_this));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n\n/**\n * @private\n * @param {boolean} isHitAtlas If the hit-detection atlases are used.\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *    Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *    `renderCallback` and `renderHitCallback`.\n * @return {?module:ol/style/Atlas~AtlasInfo}  The position and atlas image for the entry,\n *    or `null` if the image is too big.\n */\nAtlasManager.prototype.add_ = function(isHitAtlas, id, width, height, renderCallback, opt_this) {\n  const atlases = (isHitAtlas) ? this.hitAtlases_ : this.atlases_;\n  let atlas, info, i, ii;\n  for (i = 0, ii = atlases.length; i < ii; ++i) {\n    atlas = atlases[i];\n    info = atlas.add(id, width, height, renderCallback, opt_this);\n    if (info) {\n      return info;\n    } else if (!info && i === ii - 1) {\n      // the entry could not be added to one of the existing atlases,\n      // create a new atlas that is twice as big and try to add to this one.\n      let size;\n      if (isHitAtlas) {\n        size = Math.min(this.currentHitSize_ * 2, this.maxSize_);\n        this.currentHitSize_ = size;\n      } else {\n        size = Math.min(this.currentSize_ * 2, this.maxSize_);\n        this.currentSize_ = size;\n      }\n      atlas = new Atlas(size, this.space_);\n      atlases.push(atlas);\n      // run the loop another time\n      ++ii;\n    }\n  }\n  return null;\n};\nexport default AtlasManager;\n","/**\n * @module ol/source/UTFGrid\n */\nimport {inherits} from '../util.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {listenOnce} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from '../source/State.js';\nimport TileSource from '../source/Tile.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n\n/**\n * @constructor\n * @extends {module:ol/Tile}\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileState} state State.\n * @param {string} src Image source URI.\n * @param {module:ol/extent~Extent} extent Extent of the tile.\n * @param {boolean} preemptive Load the tile when visible (before it's needed).\n * @param {boolean} jsonp Load the tile as a script.\n */\nexport const CustomTile = function(tileCoord, state, src, extent, preemptive, jsonp) {\n\n  Tile.call(this, tileCoord, state);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = extent;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.preemptive_ = preemptive;\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.grid_ = null;\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.keys_ = null;\n\n  /**\n   * @private\n   * @type {Object.<string, Object>|undefined}\n   */\n  this.data_ = null;\n\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.jsonp_ = jsonp;\n\n};\ninherits(CustomTile, Tile);\n\n\n/**\n * Get the image element for this tile.\n * @return {Image} Image.\n */\nCustomTile.prototype.getImage = function() {\n  return null;\n};\n\n\n/**\n * Synchronously returns data at given coordinate (if available).\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {*} The data.\n */\nCustomTile.prototype.getData = function(coordinate) {\n  if (!this.grid_ || !this.keys_) {\n    return null;\n  }\n  const xRelative = (coordinate[0] - this.extent_[0]) /\n      (this.extent_[2] - this.extent_[0]);\n  const yRelative = (coordinate[1] - this.extent_[1]) /\n      (this.extent_[3] - this.extent_[1]);\n\n  const row = this.grid_[Math.floor((1 - yRelative) * this.grid_.length)];\n\n  if (typeof row !== 'string') {\n    return null;\n  }\n\n  let code = row.charCodeAt(Math.floor(xRelative * row.length));\n  if (code >= 93) {\n    code--;\n  }\n  if (code >= 35) {\n    code--;\n  }\n  code -= 32;\n\n  let data = null;\n  if (code in this.keys_) {\n    const id = this.keys_[code];\n    if (this.data_ && id in this.data_) {\n      data = this.data_[id];\n    } else {\n      data = id;\n    }\n  }\n  return data;\n};\n\n\n/**\n * Calls the callback (synchronously by default) with the available data\n * for given coordinate (or `null` if not yet loaded).\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {function(this: T, *)} callback Callback.\n * @param {T=} opt_this The object to use as `this` in the callback.\n * @param {boolean=} opt_request If `true` the callback is always async.\n *                               The tile data is requested if not yet loaded.\n * @template T\n */\nCustomTile.prototype.forDataAtCoordinate = function(coordinate, callback, opt_this, opt_request) {\n  if (this.state == TileState.IDLE && opt_request === true) {\n    listenOnce(this, EventType.CHANGE, function(e) {\n      callback.call(opt_this, this.getData(coordinate));\n    }, this);\n    this.loadInternal_();\n  } else {\n    if (opt_request === true) {\n      setTimeout(function() {\n        callback.call(opt_this, this.getData(coordinate));\n      }.bind(this), 0);\n    } else {\n      callback.call(opt_this, this.getData(coordinate));\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCustomTile.prototype.getKey = function() {\n  return this.src_;\n};\n\n\n/**\n * @private\n */\nCustomTile.prototype.handleError_ = function() {\n  this.state = TileState.ERROR;\n  this.changed();\n};\n\n\n/**\n * @param {!UTFGridJSON} json UTFGrid data.\n * @private\n */\nCustomTile.prototype.handleLoad_ = function(json) {\n  this.grid_ = json.grid;\n  this.keys_ = json.keys;\n  this.data_ = json.data;\n\n  this.state = TileState.EMPTY;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nCustomTile.prototype.loadInternal_ = function() {\n  if (this.state == TileState.IDLE) {\n    this.state = TileState.LOADING;\n    if (this.jsonp_) {\n      requestJSONP(this.src_, this.handleLoad_.bind(this),\n        this.handleError_.bind(this));\n    } else {\n      const client = new XMLHttpRequest();\n      client.addEventListener('load', this.onXHRLoad_.bind(this));\n      client.addEventListener('error', this.onXHRError_.bind(this));\n      client.open('GET', this.src_);\n      client.send();\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {Event} event The load event.\n */\nCustomTile.prototype.onXHRLoad_ = function(event) {\n  const client = /** @type {XMLHttpRequest} */ (event.target);\n  // status will be 0 for file:// urls\n  if (!client.status || client.status >= 200 && client.status < 300) {\n    let response;\n    try {\n      response = /** @type {!UTFGridJSON} */(JSON.parse(client.responseText));\n    } catch (err) {\n      this.handleError_();\n      return;\n    }\n    this.handleLoad_(response);\n  } else {\n    this.handleError_();\n  }\n};\n\n\n/**\n * @private\n * @param {Event} event The error event.\n */\nCustomTile.prototype.onXHRError_ = function(event) {\n  this.handleError_();\n};\n\n\n/**\n * @override\n */\nCustomTile.prototype.load = function() {\n  if (this.preemptive_) {\n    this.loadInternal_();\n  }\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [preemptive=true]\n * If `true` the UTFGrid source loads the tiles based on their \"visibility\".\n * This improves the speed of response, but increases traffic.\n * Note that if set to `false`, you need to pass `true` as `opt_request`\n * to the `forDataAtCoordinateAndResolution` method otherwise no data\n * will ever be loaded.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {tileJSON} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {string} [url] TileJSON endpoint that provides the configuration for this source.\n * Request will be made through JSONP. If not provided, `tileJSON` must be configured.\n */\n\n\n/**\n * @classdesc\n * Layer source for UTFGrid interaction data loaded from TileJSON format.\n *\n * @constructor\n * @extends {module:ol/source/Tile}\n * @param {module:ol/source/UTFGrid~Options=} options Source options.\n * @api\n */\nconst UTFGrid = function(options) {\n  TileSource.call(this, {\n    projection: getProjection('EPSG:3857'),\n    state: SourceState.LOADING\n  });\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.preemptive_ = options.preemptive !== undefined ?\n    options.preemptive : true;\n\n  /**\n   * @private\n   * @type {!module:ol/Tile~UrlFunction}\n   */\n  this.tileUrlFunction_ = nullTileUrlFunction;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.template_ = undefined;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.jsonp_ = options.jsonp || false;\n\n  if (options.url) {\n    if (this.jsonp_) {\n      requestJSONP(options.url, this.handleTileJSONResponse.bind(this),\n        this.handleTileJSONError.bind(this));\n    } else {\n      const client = new XMLHttpRequest();\n      client.addEventListener('load', this.onXHRLoad_.bind(this));\n      client.addEventListener('error', this.onXHRError_.bind(this));\n      client.open('GET', options.url);\n      client.send();\n    }\n  } else if (options.tileJSON) {\n    this.handleTileJSONResponse(options.tileJSON);\n  } else {\n    assert(false, 51); // Either `url` or `tileJSON` options must be provided\n  }\n};\n\ninherits(UTFGrid, TileSource);\n\n\n/**\n * @private\n * @param {Event} event The load event.\n */\nUTFGrid.prototype.onXHRLoad_ = function(event) {\n  const client = /** @type {XMLHttpRequest} */ (event.target);\n  // status will be 0 for file:// urls\n  if (!client.status || client.status >= 200 && client.status < 300) {\n    let response;\n    try {\n      response = /** @type {TileJSON} */(JSON.parse(client.responseText));\n    } catch (err) {\n      this.handleTileJSONError();\n      return;\n    }\n    this.handleTileJSONResponse(response);\n  } else {\n    this.handleTileJSONError();\n  }\n};\n\n\n/**\n * @private\n * @param {Event} event The error event.\n */\nUTFGrid.prototype.onXHRError_ = function(event) {\n  this.handleTileJSONError();\n};\n\n\n/**\n * Return the template from TileJSON.\n * @return {string|undefined} The template from TileJSON.\n * @api\n */\nUTFGrid.prototype.getTemplate = function() {\n  return this.template_;\n};\n\n\n/**\n * Calls the callback (synchronously by default) with the available data\n * for given coordinate and resolution (or `null` if not yet loaded or\n * in case of an error).\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {function(*)} callback Callback.\n * @param {boolean=} opt_request If `true` the callback is always async.\n *                               The tile data is requested if not yet loaded.\n * @api\n */\nUTFGrid.prototype.forDataAtCoordinateAndResolution = function(\n  coordinate, resolution, callback, opt_request) {\n  if (this.tileGrid) {\n    const tileCoord = this.tileGrid.getTileCoordForCoordAndResolution(\n      coordinate, resolution);\n    const tile = /** @type {!module:ol/source/UTFGrid~CustomTile} */(this.getTile(\n      tileCoord[0], tileCoord[1], tileCoord[2], 1, this.getProjection()));\n    tile.forDataAtCoordinate(coordinate, callback, null, opt_request);\n  } else {\n    if (opt_request === true) {\n      setTimeout(function() {\n        callback(null);\n      }, 0);\n    } else {\n      callback(null);\n    }\n  }\n};\n\n\n/**\n * @protected\n */\nUTFGrid.prototype.handleTileJSONError = function() {\n  this.setState(SourceState.ERROR);\n};\n\n\n/**\n * TODO: very similar to ol/source/TileJSON#handleTileJSONResponse\n * @protected\n * @param {TileJSON} tileJSON Tile JSON.\n */\nUTFGrid.prototype.handleTileJSONResponse = function(tileJSON) {\n\n  const epsg4326Projection = getProjection('EPSG:4326');\n\n  const sourceProjection = this.getProjection();\n  let extent;\n  if (tileJSON.bounds !== undefined) {\n    const transform = getTransformFromProjections(\n      epsg4326Projection, sourceProjection);\n    extent = applyTransform(tileJSON.bounds, transform);\n  }\n\n  const minZoom = tileJSON.minzoom || 0;\n  const maxZoom = tileJSON.maxzoom || 22;\n  const tileGrid = createXYZ({\n    extent: extentFromProjection(sourceProjection),\n    maxZoom: maxZoom,\n    minZoom: minZoom\n  });\n  this.tileGrid = tileGrid;\n\n  this.template_ = tileJSON.template;\n\n  const grids = tileJSON.grids;\n  if (!grids) {\n    this.setState(SourceState.ERROR);\n    return;\n  }\n\n  this.tileUrlFunction_ = createFromTemplates(grids, tileGrid);\n\n  if (tileJSON.attribution !== undefined) {\n    const attributionExtent = extent !== undefined ?\n      extent : epsg4326Projection.getExtent();\n\n    this.setAttributions(function(frameState) {\n      if (intersects(attributionExtent, frameState.extent)) {\n        return [tileJSON.attribution];\n      }\n      return null;\n    });\n  }\n\n  this.setState(SourceState.READY);\n\n};\n\n\n/**\n * @inheritDoc\n */\nUTFGrid.prototype.getTile = function(z, x, y, pixelRatio, projection) {\n  const tileCoordKey = getKeyZXY(z, x, y);\n  if (this.tileCache.containsKey(tileCoordKey)) {\n    return (\n      /** @type {!module:ol/Tile} */ (this.tileCache.get(tileCoordKey))\n    );\n  } else {\n    const tileCoord = [z, x, y];\n    const urlTileCoord =\n        this.getTileCoordForTileUrlFunction(tileCoord, projection);\n    const tileUrl = this.tileUrlFunction_(urlTileCoord, pixelRatio, projection);\n    const tile = new CustomTile(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.tileGrid.getTileCoordExtent(tileCoord),\n      this.preemptive_,\n      this.jsonp_);\n    this.tileCache.set(tileCoordKey, tile);\n    return tile;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nUTFGrid.prototype.useTile = function(z, x, y) {\n  const tileCoordKey = getKeyZXY(z, x, y);\n  if (this.tileCache.containsKey(tileCoordKey)) {\n    this.tileCache.get(tileCoordKey);\n  }\n};\n\n\nexport default UTFGrid;\n","/**\n * @module ol/source/ImageMapGuide\n */\nimport {inherits} from '../util.js';\nimport ImageWrapper from '../Image.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getHeight, getWidth, scaleFromCenter} from '../extent.js';\nimport {assign} from '../obj.js';\nimport ImageSource, {defaultImageLoadFunction} from '../source/Image.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [url] The mapagent url.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {number} [displayDpi=96] The display resolution.\n * @property {number} [metersPerUnit=1] The meters-per-unit value.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {boolean} [useOverlay] If `true`, will use `GETDYNAMICMAPOVERLAYIMAGE`.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [ratio=1] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array.<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {module:ol/Image~LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object} [params] Additional parameters.\n */\n\n\n/**\n * @classdesc\n * Source for images from Mapguide servers\n *\n * @constructor\n * @fires ol/source/Image~ImageSourceEvent\n * @extends {module:ol/source/Image}\n * @param {module:ol/source/ImageMapGuide~Options=} options ImageMapGuide options.\n * @api\n */\nconst ImageMapGuide = function(options) {\n\n  ImageSource.call(this, {\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.displayDpi_ = options.displayDpi !== undefined ?\n    options.displayDpi : 96;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {module:ol/Image~LoadFunction}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.metersPerUnit_ = options.metersPerUnit !== undefined ?\n    options.metersPerUnit : 1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.useOverlay_ = options.useOverlay !== undefined ?\n    options.useOverlay : false;\n\n  /**\n   * @private\n   * @type {module:ol/Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n};\n\ninherits(ImageMapGuide, ImageSource);\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageMapGuide.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageMapGuide.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n  resolution = this.findNearestResolution(resolution);\n  pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n  let image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), extent)) {\n    return image;\n  }\n\n  if (this.ratio_ != 1) {\n    extent = extent.slice();\n    scaleFromCenter(extent, this.ratio_);\n  }\n  const width = getWidth(extent) / resolution;\n  const height = getHeight(extent) / resolution;\n  const size = [width * pixelRatio, height * pixelRatio];\n\n  if (this.url_ !== undefined) {\n    const imageUrl = this.getUrl(this.url_, this.params_, extent, size,\n      projection);\n    image = new ImageWrapper(extent, resolution, pixelRatio,\n      imageUrl, this.crossOrigin_,\n      this.imageLoadFunction_);\n    listen(image, EventType.CHANGE,\n      this.handleImageChange, this);\n  } else {\n    image = null;\n  }\n  this.image_ = image;\n  this.renderedRevision_ = this.getRevision();\n\n  return image;\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {module:ol/Image~LoadFunction} The image load function.\n * @api\n */\nImageMapGuide.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {module:ol/extent~Extent} extent The map extents.\n * @param {module:ol/size~Size} size The viewport size.\n * @param {number} metersPerUnit The meters-per-unit value.\n * @param {number} dpi The display resolution.\n * @return {number} The computed map scale.\n */\nfunction getScale(extent, size, metersPerUnit, dpi) {\n  const mcsW = getWidth(extent);\n  const mcsH = getHeight(extent);\n  const devW = size[0];\n  const devH = size[1];\n  const mpp = 0.0254 / dpi;\n  if (devH * mcsW > devW * mcsH) {\n    return mcsW * metersPerUnit / (devW * mpp); // width limited\n  } else {\n    return mcsH * metersPerUnit / (devH * mpp); // height limited\n  }\n}\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageMapGuide.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.changed();\n};\n\n\n/**\n * @param {string} baseUrl The mapagent url.\n * @param {Object.<string, string|number>} params Request parameters.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/size~Size} size Size.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {string} The mapagent map image request URL.\n */\nImageMapGuide.prototype.getUrl = function(baseUrl, params, extent, size, projection) {\n  const scale = getScale(extent, size,\n    this.metersPerUnit_, this.displayDpi_);\n  const center = getCenter(extent);\n  const baseParams = {\n    'OPERATION': this.useOverlay_ ? 'GETDYNAMICMAPOVERLAYIMAGE' : 'GETMAPIMAGE',\n    'VERSION': '2.0.0',\n    'LOCALE': 'en',\n    'CLIENTAGENT': 'ol/source/ImageMapGuide source',\n    'CLIP': '1',\n    'SETDISPLAYDPI': this.displayDpi_,\n    'SETDISPLAYWIDTH': Math.round(size[0]),\n    'SETDISPLAYHEIGHT': Math.round(size[1]),\n    'SETVIEWSCALE': scale,\n    'SETVIEWCENTERX': center[0],\n    'SETVIEWCENTERY': center[1]\n  };\n  assign(baseParams, params);\n  return appendParams(baseUrl, baseParams);\n};\n\n\n/**\n * Set the image load function of the MapGuide source.\n * @param {module:ol/Image~LoadFunction} imageLoadFunction Image load function.\n * @api\n */\nImageMapGuide.prototype.setImageLoadFunction = function(imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\nexport default ImageMapGuide;\n","/**\n * @module ol/style/IconImage\n */\nimport {inherits} from '../util.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {listenOnce, unlistenByKey} from '../events.js';\nimport EventTarget from '../events/EventTarget.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\n\n/**\n * @constructor\n * @param {Image|HTMLCanvasElement} image Image.\n * @param {string|undefined} src Src.\n * @param {module:ol/size~Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/ImageState} imageState Image state.\n * @param {module:ol/color~Color} color Color.\n * @extends {module:ol/events/EventTarget}\n */\nconst IconImage = function(image, src, size, crossOrigin, imageState, color) {\n\n  EventTarget.call(this);\n\n  /**\n   * @private\n   * @type {Image|HTMLCanvasElement}\n   */\n  this.hitDetectionImage_ = null;\n\n  /**\n   * @private\n   * @type {Image|HTMLCanvasElement}\n   */\n  this.image_ = !image ? new Image() : image;\n\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = color ?\n    /** @type {HTMLCanvasElement} */ (document.createElement('CANVAS')) :\n    null;\n\n  /**\n   * @private\n   * @type {module:ol/color~Color}\n   */\n  this.color_ = color;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/ImageState}\n   */\n  this.imageState_ = imageState;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.size_ = size;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.tainting_ = false;\n  if (this.imageState_ == ImageState.LOADED) {\n    this.determineTainting_();\n  }\n\n};\n\ninherits(IconImage, EventTarget);\n\n\n/**\n * @param {Image|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {module:ol/size~Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/ImageState} imageState Image state.\n * @param {module:ol/color~Color} color Color.\n * @return {module:ol/style/IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\n\n/**\n * @private\n */\nIconImage.prototype.determineTainting_ = function() {\n  const context = createCanvasContext2D(1, 1);\n  try {\n    context.drawImage(this.image_, 0, 0);\n    context.getImageData(0, 0, 1, 1);\n  } catch (e) {\n    this.tainting_ = true;\n  }\n};\n\n\n/**\n * @private\n */\nIconImage.prototype.dispatchChangeEvent_ = function() {\n  this.dispatchEvent(EventType.CHANGE);\n};\n\n\n/**\n * @private\n */\nIconImage.prototype.handleImageError_ = function() {\n  this.imageState_ = ImageState.ERROR;\n  this.unlistenImage_();\n  this.dispatchChangeEvent_();\n};\n\n\n/**\n * @private\n */\nIconImage.prototype.handleImageLoad_ = function() {\n  this.imageState_ = ImageState.LOADED;\n  if (this.size_) {\n    this.image_.width = this.size_[0];\n    this.image_.height = this.size_[1];\n  }\n  this.size_ = [this.image_.width, this.image_.height];\n  this.unlistenImage_();\n  this.determineTainting_();\n  this.replaceColor_();\n  this.dispatchChangeEvent_();\n};\n\n\n/**\n * @param {number} pixelRatio Pixel ratio.\n * @return {Image|HTMLCanvasElement} Image or Canvas element.\n */\nIconImage.prototype.getImage = function(pixelRatio) {\n  return this.canvas_ ? this.canvas_ : this.image_;\n};\n\n\n/**\n * @return {module:ol/ImageState} Image state.\n */\nIconImage.prototype.getImageState = function() {\n  return this.imageState_;\n};\n\n\n/**\n * @param {number} pixelRatio Pixel ratio.\n * @return {Image|HTMLCanvasElement} Image element.\n */\nIconImage.prototype.getHitDetectionImage = function(pixelRatio) {\n  if (!this.hitDetectionImage_) {\n    if (this.tainting_) {\n      const width = this.size_[0];\n      const height = this.size_[1];\n      const context = createCanvasContext2D(width, height);\n      context.fillRect(0, 0, width, height);\n      this.hitDetectionImage_ = context.canvas;\n    } else {\n      this.hitDetectionImage_ = this.image_;\n    }\n  }\n  return this.hitDetectionImage_;\n};\n\n\n/**\n * @return {module:ol/size~Size} Image size.\n */\nIconImage.prototype.getSize = function() {\n  return this.size_;\n};\n\n\n/**\n * @return {string|undefined} Image src.\n */\nIconImage.prototype.getSrc = function() {\n  return this.src_;\n};\n\n\n/**\n * Load not yet loaded URI.\n */\nIconImage.prototype.load = function() {\n  if (this.imageState_ == ImageState.IDLE) {\n    this.imageState_ = ImageState.LOADING;\n    this.imageListenerKeys_ = [\n      listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    try {\n      this.image_.src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n  }\n};\n\n\n/**\n * @private\n */\nIconImage.prototype.replaceColor_ = function() {\n  if (this.tainting_ || this.color_ === null) {\n    return;\n  }\n\n  this.canvas_.width = this.image_.width;\n  this.canvas_.height = this.image_.height;\n\n  const ctx = this.canvas_.getContext('2d');\n  ctx.drawImage(this.image_, 0, 0);\n\n  const imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n  const data = imgData.data;\n  const r = this.color_[0] / 255.0;\n  const g = this.color_[1] / 255.0;\n  const b = this.color_[2] / 255.0;\n\n  for (let i = 0, ii = data.length; i < ii; i += 4) {\n    data[i] *= r;\n    data[i + 1] *= g;\n    data[i + 2] *= b;\n  }\n  ctx.putImageData(imgData, 0, 0);\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\nIconImage.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default IconImage;\n","/**\n * @module ol/interaction/Extent\n */\nimport {inherits} from '../util.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {squaredDistanceToSegment, closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [boxStyle]\n * Style for the drawn extent box. Defaults to\n * {@link module:ol/style/Style~createEditing()['Polygon']}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to\n * {@link module:ol/style/Style~createEditing()['Point']}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n\n/**\n * @enum {string}\n */\nconst ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event module:ol/interaction/Extent~ExtentEventType#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n *\n * @constructor\n * @param {module:ol/extent~Extent} extent the new extent\n * @extends {module:ol/events/Event}\n */\nconst ExtentInteractionEvent = function(extent) {\n  Event.call(this, ExtentEventType.EXTENTCHANGED);\n\n  /**\n   * The current extent.\n   * @type {module:ol/extent~Extent}\n   * @api\n   */\n  this.extent = extent;\n\n};\ninherits(ExtentInteractionEvent, Event);\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @fires module:ol/interaction/Extent~Event\n * @param {module:ol/interaction/Extent~Options=} opt_options Options.\n * @api\n */\nconst ExtentInteraction = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * Extent of the drawn box\n   * @type {module:ol/extent~Extent}\n   * @private\n   */\n  this.extent_ = null;\n\n  /**\n   * Handler for pointer move events\n   * @type {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent|null}\n   * @private\n   */\n  this.pointerHandler_ = null;\n\n  /**\n   * Pixel threshold to snap to extent\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * Is the pointer snapped to an extent vertex\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Feature for displaying the visible extent\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.extentFeature_ = null;\n\n  /**\n   * Feature for displaying the visible pointer\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  if (!opt_options) {\n    opt_options = {};\n  }\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleEvent: handleEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * Layer for the extentFeature\n   * @type {module:ol/layer/Vector}\n   * @private\n   */\n  this.extentOverlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: !!opt_options.wrapX\n    }),\n    style: opt_options.boxStyle ? opt_options.boxStyle : getDefaultExtentStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * Layer for the vertexFeature\n   * @type {module:ol/layer/Vector}\n   * @private\n   */\n  this.vertexOverlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: !!opt_options.wrapX\n    }),\n    style: opt_options.pointerStyle ? opt_options.pointerStyle : getDefaultPointerStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  if (opt_options.extent) {\n    this.setExtent(opt_options.extent);\n  }\n};\n\ninherits(ExtentInteraction, PointerInteraction);\n\n/**\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Event.\n * @return {boolean} Propagate event?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  //display pointer (if not dragging)\n  if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE && !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  //call pointer to determine up/down/drag\n  handlePointerEvent.call(this, mapBrowserEvent);\n  //return false to stop propagation\n  return false;\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Event handled?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  const pixel = mapBrowserEvent.pixel;\n  const map = mapBrowserEvent.map;\n\n  const extent = this.getExtent();\n  let vertex = this.snapToVertex_(pixel, map);\n\n  //find the extent corner opposite the passed corner\n  const getOpposingPoint = function(point) {\n    let x_ = null;\n    let y_ = null;\n    if (point[0] == extent[0]) {\n      x_ = extent[2];\n    } else if (point[0] == extent[2]) {\n      x_ = extent[0];\n    }\n    if (point[1] == extent[1]) {\n      y_ = extent[3];\n    } else if (point[1] == extent[3]) {\n      y_ = extent[1];\n    }\n    if (x_ !== null && y_ !== null) {\n      return [x_, y_];\n    }\n    return null;\n  };\n  if (vertex && extent) {\n    const x = (vertex[0] == extent[0] || vertex[0] == extent[2]) ? vertex[0] : null;\n    const y = (vertex[1] == extent[1] || vertex[1] == extent[3]) ? vertex[1] : null;\n\n    //snap to point\n    if (x !== null && y !== null) {\n      this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n    //snap to edge\n    } else if (x !== null) {\n      this.pointerHandler_ = getEdgeHandler(\n        getOpposingPoint([x, extent[1]]),\n        getOpposingPoint([x, extent[3]])\n      );\n    } else if (y !== null) {\n      this.pointerHandler_ = getEdgeHandler(\n        getOpposingPoint([extent[0], y]),\n        getOpposingPoint([extent[2], y])\n      );\n    }\n  //no snap - new bbox\n  } else {\n    vertex = map.getCoordinateFromPixel(pixel);\n    this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n    this.pointerHandler_ = getPointHandler(vertex);\n  }\n  return true; //event handled; start downup sequence\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Event handled?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (this.pointerHandler_) {\n    const pixelCoordinate = mapBrowserEvent.coordinate;\n    this.setExtent(this.pointerHandler_(pixelCoordinate));\n    this.createOrUpdatePointerFeature_(pixelCoordinate);\n  }\n  return true;\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  this.pointerHandler_ = null;\n  //If bbox is zero area, set to null;\n  const extent = this.getExtent();\n  if (!extent || getArea(extent) === 0) {\n    this.setExtent(null);\n  }\n  return false; //Stop handling downup sequence\n}\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {module:ol/style/Style~StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POLYGON];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {module:ol/style/Style~StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n/**\n * @param {module:ol/coordinate~Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @returns {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function(point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {module:ol/coordinate~Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {module:ol/coordinate~Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @returns {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  } else if (fixedP1[1] == fixedP2[1]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  } else {\n    return null;\n  }\n}\n\n/**\n * @param {module:ol/extent~Extent} extent extent\n * @returns {Array<Array<module:ol/coordinate~Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [[extent[0], extent[1]], [extent[0], extent[3]]],\n    [[extent[0], extent[3]], [extent[2], extent[3]]],\n    [[extent[2], extent[3]], [extent[2], extent[1]]],\n    [[extent[2], extent[1]], [extent[0], extent[1]]]\n  ];\n}\n\n/**\n * @param {module:ol~Pixel} pixel cursor location\n * @param {module:ol/PluggableMap} map map\n * @returns {module:ol/coordinate~Coordinate|null} snapped vertex on extent\n * @private\n */\nExtentInteraction.prototype.snapToVertex_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return squaredDistanceToSegment(pixelCoordinate, a) -\n        squaredDistanceToSegment(pixelCoordinate, b);\n  };\n  const extent = this.getExtent();\n  if (extent) {\n    //convert extents to line segments and find the segment closest to pixelCoordinate\n    const segments = getSegments(extent);\n    segments.sort(sortByDistance);\n    const closestSegment = segments[0];\n\n    let vertex = (closestOnSegment(pixelCoordinate,\n      closestSegment));\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n\n    //if the distance is within tolerance, snap to the segment\n    if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n      //test if we should further snap to a vertex\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n      const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      this.snappedToVertex_ = dist <= this.pixelTolerance_;\n      if (this.snappedToVertex_) {\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n      }\n      return vertex;\n    }\n  }\n  return null;\n};\n\n/**\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent pointer move event\n * @private\n */\nExtentInteraction.prototype.handlePointerMove_ = function(mapBrowserEvent) {\n  const pixel = mapBrowserEvent.pixel;\n  const map = mapBrowserEvent.map;\n\n  let vertex = this.snapToVertex_(pixel, map);\n  if (!vertex) {\n    vertex = map.getCoordinateFromPixel(pixel);\n  }\n  this.createOrUpdatePointerFeature_(vertex);\n};\n\n/**\n * @param {module:ol/extent~Extent} extent extent\n * @returns {module:ol/Feature} extent as featrue\n * @private\n */\nExtentInteraction.prototype.createOrUpdateExtentFeature_ = function(extent) {\n  let extentFeature = this.extentFeature_;\n\n  if (!extentFeature) {\n    if (!extent) {\n      extentFeature = new Feature({});\n    } else {\n      extentFeature = new Feature(polygonFromExtent(extent));\n    }\n    this.extentFeature_ = extentFeature;\n    this.extentOverlay_.getSource().addFeature(extentFeature);\n  } else {\n    if (!extent) {\n      extentFeature.setGeometry(undefined);\n    } else {\n      extentFeature.setGeometry(polygonFromExtent(extent));\n    }\n  }\n  return extentFeature;\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} vertex location of feature\n * @returns {module:ol/Feature} vertex as feature\n * @private\n */\nExtentInteraction.prototype.createOrUpdatePointerFeature_ = function(vertex) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new Feature(new Point(vertex));\n    this.vertexFeature_ = vertexFeature;\n    this.vertexOverlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(vertex);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nExtentInteraction.prototype.setMap = function(map) {\n  this.extentOverlay_.setMap(map);\n  this.vertexOverlay_.setMap(map);\n  PointerInteraction.prototype.setMap.call(this, map);\n};\n\n/**\n * Returns the current drawn extent in the view projection\n *\n * @return {module:ol/extent~Extent} Drawn extent in the view projection.\n * @api\n */\nExtentInteraction.prototype.getExtent = function() {\n  return this.extent_;\n};\n\n/**\n * Manually sets the drawn extent, using the view projection.\n *\n * @param {module:ol/extent~Extent} extent Extent\n * @api\n */\nExtentInteraction.prototype.setExtent = function(extent) {\n  //Null extent means no bbox\n  this.extent_ = extent ? extent : null;\n  this.createOrUpdateExtentFeature_(extent);\n  this.dispatchEvent(new ExtentInteractionEvent(this.extent_));\n};\n\n\nexport default ExtentInteraction;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @constructor\n * @param {number} decay Rate of decay (must be negative).\n * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n * @param {number} delay Delay to consider to calculate the kinetic\n *     initial values (milliseconds).\n * @struct\n * @api\n */\nconst Kinetic = function(decay, minVelocity, delay) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.decay_ = decay;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minVelocity_ = minVelocity;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delay_ = delay;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.points_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.initialVelocity_ = 0;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nKinetic.prototype.begin = function() {\n  this.points_.length = 0;\n  this.angle_ = 0;\n  this.initialVelocity_ = 0;\n};\n\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n */\nKinetic.prototype.update = function(x, y) {\n  this.points_.push(x, y, Date.now());\n};\n\n\n/**\n * @return {boolean} Whether we should do kinetic animation.\n */\nKinetic.prototype.end = function() {\n  if (this.points_.length < 6) {\n    // at least 2 points are required (i.e. there must be at least 6 elements\n    // in the array)\n    return false;\n  }\n  const delay = Date.now() - this.delay_;\n  const lastIndex = this.points_.length - 3;\n  if (this.points_[lastIndex + 2] < delay) {\n    // the last tracked point is too old, which means that the user stopped\n    // panning before releasing the map\n    return false;\n  }\n\n  // get the first point which still falls into the delay time\n  let firstIndex = lastIndex - 3;\n  while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n    firstIndex -= 3;\n  }\n\n  const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n  // we don't want a duration of 0 (divide by zero)\n  // we also make sure the user panned for a duration of at least one frame\n  // (1/60s) to compute sane displacement values\n  if (duration < 1000 / 60) {\n    return false;\n  }\n\n  const dx = this.points_[lastIndex] - this.points_[firstIndex];\n  const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n  this.angle_ = Math.atan2(dy, dx);\n  this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n  return this.initialVelocity_ > this.minVelocity_;\n};\n\n\n/**\n * @return {number} Total distance travelled (pixels).\n */\nKinetic.prototype.getDistance = function() {\n  return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n};\n\n\n/**\n * @return {number} Angle of the kinetic panning animation (radians).\n */\nKinetic.prototype.getAngle = function() {\n  return this.angle_;\n};\nexport default Kinetic;\n","/**\n * @module ol/control/Zoom\n */\nimport {inherits} from '../util.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|Element} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Element} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {Element|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/Zoom~Options=} opt_options Zoom options.\n * @api\n */\nconst Zoom = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const className = options.className !== undefined ? options.className : 'ol-zoom';\n\n  const delta = options.delta !== undefined ? options.delta : 1;\n\n  const zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n  const zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n  const zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n    options.zoomInTipLabel : 'Zoom in';\n  const zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n    options.zoomOutTipLabel : 'Zoom out';\n\n  const inElement = document.createElement('button');\n  inElement.className = className + '-in';\n  inElement.setAttribute('type', 'button');\n  inElement.title = zoomInTipLabel;\n  inElement.appendChild(\n    typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n  );\n\n  listen(inElement, EventType.CLICK,\n    Zoom.prototype.handleClick_.bind(this, delta));\n\n  const outElement = document.createElement('button');\n  outElement.className = className + '-out';\n  outElement.setAttribute('type', 'button');\n  outElement.title = zoomOutTipLabel;\n  outElement.appendChild(\n    typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n  );\n\n  listen(outElement, EventType.CLICK,\n    Zoom.prototype.handleClick_.bind(this, -delta));\n\n  const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n  const element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(inElement);\n  element.appendChild(outElement);\n\n  Control.call(this, {\n    element: element,\n    target: options.target\n  });\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n};\n\ninherits(Zoom, Control);\n\n\n/**\n * @param {number} delta Zoom delta.\n * @param {Event} event The event to handle\n * @private\n */\nZoom.prototype.handleClick_ = function(delta, event) {\n  event.preventDefault();\n  this.zoomByDelta_(delta);\n};\n\n\n/**\n * @param {number} delta Zoom delta.\n * @private\n */\nZoom.prototype.zoomByDelta_ = function(delta) {\n  const map = this.getMap();\n  const view = map.getView();\n  if (!view) {\n    // the map does not have a view, so we can't act\n    // upon it\n    return;\n  }\n  const currentResolution = view.getResolution();\n  if (currentResolution) {\n    const newResolution = view.constrainResolution(currentResolution, delta);\n    if (this.duration_ > 0) {\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      view.animate({\n        resolution: newResolution,\n        duration: this.duration_,\n        easing: easeOut\n      });\n    } else {\n      view.setResolution(newResolution);\n    }\n  }\n};\nexport default Zoom;\n","/**\n * @module ol/control/Rotate\n */\n\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {inherits} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|Element} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {Element|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/Rotate~Options=} opt_options Rotate options.\n * @api\n */\nconst Rotate = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const className = options.className !== undefined ? options.className : 'ol-rotate';\n\n  const label = options.label !== undefined ? options.label : '\\u21E7';\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  this.label_ = null;\n\n  if (typeof label === 'string') {\n    this.label_ = document.createElement('span');\n    this.label_.className = 'ol-compass';\n    this.label_.textContent = label;\n  } else {\n    this.label_ = label;\n    this.label_.classList.add('ol-compass');\n  }\n\n  const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n  const button = document.createElement('button');\n  button.className = className + '-reset';\n  button.setAttribute('type', 'button');\n  button.title = tipLabel;\n  button.appendChild(this.label_);\n\n  listen(button, EventType.CLICK,\n    Rotate.prototype.handleClick_, this);\n\n  const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n  const element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(button);\n\n  this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n  Control.call(this, {\n    element: element,\n    render: options.render || render,\n    target: options.target\n  });\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = undefined;\n\n  if (this.autoHide_) {\n    this.element.classList.add(CLASS_HIDDEN);\n  }\n\n};\n\ninherits(Rotate, Control);\n\n\n/**\n * @param {Event} event The event to handle\n * @private\n */\nRotate.prototype.handleClick_ = function(event) {\n  event.preventDefault();\n  if (this.callResetNorth_ !== undefined) {\n    this.callResetNorth_();\n  } else {\n    this.resetNorth_();\n  }\n};\n\n\n/**\n * @private\n */\nRotate.prototype.resetNorth_ = function() {\n  const map = this.getMap();\n  const view = map.getView();\n  if (!view) {\n    // the map does not have a view, so we can't act\n    // upon it\n    return;\n  }\n  if (view.getRotation() !== undefined) {\n    if (this.duration_ > 0) {\n      view.animate({\n        rotation: 0,\n        duration: this.duration_,\n        easing: easeOut\n      });\n    } else {\n      view.setRotation(0);\n    }\n  }\n};\n\n\n/**\n * Update the rotate control element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/Rotate}\n * @api\n */\nexport function render(mapEvent) {\n  const frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  const rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    const transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      const contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Attribution\n */\nimport {inherits} from '../util.js';\nimport {equals} from '../array.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {Element|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible=true] Specify if attributions can\n * be collapsed. If you use an OSM source, should be set to `false` — see\n * {@link https://www.openstreetmap.org/copyright OSM Copyright} —\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Element} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(module:ol/MapEvent)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/Attribution~Options=} opt_options Attribution options.\n * @api\n */\nconst Attribution = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.ulElement_ = document.createElement('UL');\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.collapsible_ = options.collapsible !== undefined ?\n    options.collapsible : true;\n\n  if (!this.collapsible_) {\n    this.collapsed_ = false;\n  }\n\n  const className = options.className !== undefined ? options.className : 'ol-attribution';\n\n  const tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n  const collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n  if (typeof collapseLabel === 'string') {\n    /**\n     * @private\n     * @type {Element}\n     */\n    this.collapseLabel_ = document.createElement('span');\n    this.collapseLabel_.textContent = collapseLabel;\n  } else {\n    this.collapseLabel_ = collapseLabel;\n  }\n\n  const label = options.label !== undefined ? options.label : 'i';\n\n  if (typeof label === 'string') {\n    /**\n     * @private\n     * @type {Element}\n     */\n    this.label_ = document.createElement('span');\n    this.label_.textContent = label;\n  } else {\n    this.label_ = label;\n  }\n\n\n  const activeLabel = (this.collapsible_ && !this.collapsed_) ?\n    this.collapseLabel_ : this.label_;\n  const button = document.createElement('button');\n  button.setAttribute('type', 'button');\n  button.title = tipLabel;\n  button.appendChild(activeLabel);\n\n  listen(button, EventType.CLICK, this.handleClick_, this);\n\n  const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n  const element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(this.ulElement_);\n  element.appendChild(button);\n\n  Control.call(this, {\n    element: element,\n    render: options.render || render,\n    target: options.target\n  });\n\n  /**\n   * A list of currently rendered resolutions.\n   * @type {Array.<string>}\n   * @private\n   */\n  this.renderedAttributions_ = [];\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderedVisible_ = true;\n\n};\n\ninherits(Attribution, Control);\n\n\n/**\n * Get a list of visible attributions.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @return {Array.<string>} Attributions.\n * @private\n */\nAttribution.prototype.getSourceAttributions_ = function(frameState) {\n  /**\n   * Used to determine if an attribution already exists.\n   * @type {!Object.<string, boolean>}\n   */\n  const lookup = {};\n\n  /**\n   * A list of visible attributions.\n   * @type {Array.<string>}\n   */\n  const visibleAttributions = [];\n\n  const layerStatesArray = frameState.layerStatesArray;\n  const resolution = frameState.viewState.resolution;\n  for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n    const layerState = layerStatesArray[i];\n    if (!visibleAtResolution(layerState, resolution)) {\n      continue;\n    }\n\n    const source = layerState.layer.getSource();\n    if (!source) {\n      continue;\n    }\n\n    const attributionGetter = source.getAttributions();\n    if (!attributionGetter) {\n      continue;\n    }\n\n    const attributions = attributionGetter(frameState);\n    if (!attributions) {\n      continue;\n    }\n\n    if (Array.isArray(attributions)) {\n      for (let j = 0, jj = attributions.length; j < jj; ++j) {\n        if (!(attributions[j] in lookup)) {\n          visibleAttributions.push(attributions[j]);\n          lookup[attributions[j]] = true;\n        }\n      }\n    } else {\n      if (!(attributions in lookup)) {\n        visibleAttributions.push(attributions);\n        lookup[attributions] = true;\n      }\n    }\n  }\n  return visibleAttributions;\n};\n\n\n/**\n * Update the attribution element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/Attribution}\n * @api\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\n/**\n * @private\n * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nAttribution.prototype.updateElement_ = function(frameState) {\n  if (!frameState) {\n    if (this.renderedVisible_) {\n      this.element.style.display = 'none';\n      this.renderedVisible_ = false;\n    }\n    return;\n  }\n\n  const attributions = this.getSourceAttributions_(frameState);\n\n  const visible = attributions.length > 0;\n  if (this.renderedVisible_ != visible) {\n    this.element.style.display = visible ? '' : 'none';\n    this.renderedVisible_ = visible;\n  }\n\n  if (equals(attributions, this.renderedAttributions_)) {\n    return;\n  }\n\n  removeChildren(this.ulElement_);\n\n  // append the attributions\n  for (let i = 0, ii = attributions.length; i < ii; ++i) {\n    const element = document.createElement('LI');\n    element.innerHTML = attributions[i];\n    this.ulElement_.appendChild(element);\n  }\n\n  this.renderedAttributions_ = attributions;\n};\n\n\n/**\n * @param {Event} event The event to handle\n * @private\n */\nAttribution.prototype.handleClick_ = function(event) {\n  event.preventDefault();\n  this.handleToggle_();\n};\n\n\n/**\n * @private\n */\nAttribution.prototype.handleToggle_ = function() {\n  this.element.classList.toggle(CLASS_COLLAPSED);\n  if (this.collapsed_) {\n    replaceNode(this.collapseLabel_, this.label_);\n  } else {\n    replaceNode(this.label_, this.collapseLabel_);\n  }\n  this.collapsed_ = !this.collapsed_;\n};\n\n\n/**\n * Return `true` if the attribution is collapsible, `false` otherwise.\n * @return {boolean} True if the widget is collapsible.\n * @api\n */\nAttribution.prototype.getCollapsible = function() {\n  return this.collapsible_;\n};\n\n\n/**\n * Set whether the attribution should be collapsible.\n * @param {boolean} collapsible True if the widget is collapsible.\n * @api\n */\nAttribution.prototype.setCollapsible = function(collapsible) {\n  if (this.collapsible_ === collapsible) {\n    return;\n  }\n  this.collapsible_ = collapsible;\n  this.element.classList.toggle('ol-uncollapsible');\n  if (!collapsible && this.collapsed_) {\n    this.handleToggle_();\n  }\n};\n\n\n/**\n * Collapse or expand the attribution according to the passed parameter. Will\n * not do anything if the attribution isn't collapsible or if the current\n * collapsed state is already the one requested.\n * @param {boolean} collapsed True if the widget is collapsed.\n * @api\n */\nAttribution.prototype.setCollapsed = function(collapsed) {\n  if (!this.collapsible_ || this.collapsed_ === collapsed) {\n    return;\n  }\n  this.handleToggle_();\n};\n\n\n/**\n * Return `true` when the attribution is currently collapsed or `false`\n * otherwise.\n * @return {boolean} True if the widget is collapsed.\n * @api\n */\nAttribution.prototype.getCollapsed = function() {\n  return this.collapsed_;\n};\nexport default Attribution;\n","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {module:ol/control/Attribution~Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {module:ol/control/Rotate~Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {module:ol/control/Zoom~Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {module:ol/control/util~DefaultsOptions=} opt_options\n * Defaults options.\n * @return {module:ol/Collection.<module:ol/control/Control>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/MapBrowserEventHandler\n */\nimport {inherits} from './util.js';\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventTarget from './events/EventTarget.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\n\n/**\n * @param {module:ol/PluggableMap} map The map with the viewport to\n * listen to events on.\n * @param {number=} moveTolerance The minimal distance the pointer must travel\n * to trigger a move.\n * @constructor\n * @extends {module:ol/events/EventTarget}\n */\nconst MapBrowserEventHandler = function(map, moveTolerance) {\n\n  EventTarget.call(this);\n\n  /**\n   * This is the element that we will listen to the real events on.\n   * @type {module:ol/PluggableMap}\n   * @private\n   */\n  this.map_ = map;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.clickTimeoutId_ = 0;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.dragging_ = false;\n\n  /**\n   * @type {!Array.<module:ol/events~EventsKey>}\n   * @private\n   */\n  this.dragListenerKeys_ = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.moveTolerance_ = moveTolerance ?\n    moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n\n  /**\n   * The most recent \"down\" type event (or null if none have occurred).\n   * Set on pointerdown.\n   * @type {module:ol/pointer/PointerEvent}\n   * @private\n   */\n  this.down_ = null;\n\n  const element = this.map_.getViewport();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.activePointers_ = 0;\n\n  /**\n   * @type {!Object.<number, boolean>}\n   * @private\n   */\n  this.trackedTouches_ = {};\n\n  /**\n   * Event handler which generates pointer events for\n   * the viewport element.\n   *\n   * @type {module:ol/pointer/PointerEventHandler}\n   * @private\n   */\n  this.pointerEventHandler_ = new PointerEventHandler(element);\n\n  /**\n   * Event handler which generates pointer events for\n   * the document (used when dragging).\n   *\n   * @type {module:ol/pointer/PointerEventHandler}\n   * @private\n   */\n  this.documentPointerEventHandler_ = null;\n\n  /**\n   * @type {?module:ol/events~EventsKey}\n   * @private\n   */\n  this.pointerdownListenerKey_ = listen(this.pointerEventHandler_,\n    PointerEventType.POINTERDOWN,\n    this.handlePointerDown_, this);\n\n  /**\n   * @type {?module:ol/events~EventsKey}\n   * @private\n   */\n  this.relayedListenerKey_ = listen(this.pointerEventHandler_,\n    PointerEventType.POINTERMOVE,\n    this.relayEvent_, this);\n\n};\n\ninherits(MapBrowserEventHandler, EventTarget);\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.emulateClick_ = function(pointerEvent) {\n  let newEvent = new MapBrowserPointerEvent(\n    MapBrowserEventType.CLICK, this.map_, pointerEvent);\n  this.dispatchEvent(newEvent);\n  if (this.clickTimeoutId_ !== 0) {\n    // double-click\n    clearTimeout(this.clickTimeoutId_);\n    this.clickTimeoutId_ = 0;\n    newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n  } else {\n    // click\n    this.clickTimeoutId_ = setTimeout(function() {\n      this.clickTimeoutId_ = 0;\n      const newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    }.bind(this), 250);\n  }\n};\n\n\n/**\n * Keeps track on how many pointers are currently active.\n *\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.updateActivePointers_ = function(pointerEvent) {\n  const event = pointerEvent;\n\n  if (event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL) {\n    delete this.trackedTouches_[event.pointerId];\n  } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n    this.trackedTouches_[event.pointerId] = true;\n  }\n  this.activePointers_ = Object.keys(this.trackedTouches_).length;\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.handlePointerUp_ = function(pointerEvent) {\n  this.updateActivePointers_(pointerEvent);\n  const newEvent = new MapBrowserPointerEvent(\n    MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n  this.dispatchEvent(newEvent);\n\n  // We emulate click events on left mouse button click, touch contact, and pen\n  // contact. isMouseActionButton returns true in these cases (evt.button is set\n  // to 0).\n  // See http://www.w3.org/TR/pointerevents/#button-states\n  // We only fire click, singleclick, and doubleclick if nobody has called\n  // event.stopPropagation() or event.preventDefault().\n  if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n    this.emulateClick_(this.down_);\n  }\n\n  if (this.activePointers_ === 0) {\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n    this.dragging_ = false;\n    this.down_ = null;\n    this.documentPointerEventHandler_.dispose();\n    this.documentPointerEventHandler_ = null;\n  }\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @return {boolean} If the left mouse button was pressed.\n * @private\n */\nMapBrowserEventHandler.prototype.isMouseActionButton_ = function(pointerEvent) {\n  return pointerEvent.button === 0;\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.handlePointerDown_ = function(pointerEvent) {\n  this.updateActivePointers_(pointerEvent);\n  const newEvent = new MapBrowserPointerEvent(\n    MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n  this.dispatchEvent(newEvent);\n\n  this.down_ = pointerEvent;\n\n  if (this.dragListenerKeys_.length === 0) {\n    /* Set up a pointer event handler on the `document`,\n     * which is required when the pointer is moved outside\n     * the viewport when dragging.\n     */\n    this.documentPointerEventHandler_ =\n        new PointerEventHandler(document);\n\n    this.dragListenerKeys_.push(\n      listen(this.documentPointerEventHandler_,\n        MapBrowserEventType.POINTERMOVE,\n        this.handlePointerMove_, this),\n      listen(this.documentPointerEventHandler_,\n        MapBrowserEventType.POINTERUP,\n        this.handlePointerUp_, this),\n      /* Note that the listener for `pointercancel is set up on\n       * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n       * the `pointerup` and `pointermove` listeners.\n       *\n       * The reason for this is the following: `TouchSource.vacuumTouches_()`\n       * issues `pointercancel` events, when there was no `touchend` for a\n       * `touchstart`. Now, let's say a first `touchstart` is registered on\n       * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n       * But `documentPointerEventHandler_` doesn't know about the first\n       * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n       * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n       * only registered there.\n       */\n      listen(this.pointerEventHandler_,\n        MapBrowserEventType.POINTERCANCEL,\n        this.handlePointerUp_, this)\n    );\n  }\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.handlePointerMove_ = function(pointerEvent) {\n  // Between pointerdown and pointerup, pointermove events are triggered.\n  // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n  // moved a significant distance.\n  if (this.isMoving_(pointerEvent)) {\n    this.dragging_ = true;\n    const newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\n      this.dragging_);\n    this.dispatchEvent(newEvent);\n  }\n\n  // Some native android browser triggers mousemove events during small period\n  // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n  // https://code.google.com/p/android/issues/detail?id=19827\n  // ex: Galaxy Tab P3110 + Android 4.1.1\n  pointerEvent.preventDefault();\n};\n\n\n/**\n * Wrap and relay a pointer event.  Note that this requires that the type\n * string for the MapBrowserPointerEvent matches the PointerEvent type.\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.relayEvent_ = function(pointerEvent) {\n  const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n  this.dispatchEvent(new MapBrowserPointerEvent(\n    pointerEvent.type, this.map_, pointerEvent, dragging));\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @return {boolean} Is moving.\n * @private\n */\nMapBrowserEventHandler.prototype.isMoving_ = function(pointerEvent) {\n  return this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n};\n\n\n/**\n * @inheritDoc\n */\nMapBrowserEventHandler.prototype.disposeInternal = function() {\n  if (this.relayedListenerKey_) {\n    unlistenByKey(this.relayedListenerKey_);\n    this.relayedListenerKey_ = null;\n  }\n  if (this.pointerdownListenerKey_) {\n    unlistenByKey(this.pointerdownListenerKey_);\n    this.pointerdownListenerKey_ = null;\n  }\n\n  this.dragListenerKeys_.forEach(unlistenByKey);\n  this.dragListenerKeys_.length = 0;\n\n  if (this.documentPointerEventHandler_) {\n    this.documentPointerEventHandler_.dispose();\n    this.documentPointerEventHandler_ = null;\n  }\n  if (this.pointerEventHandler_) {\n    this.pointerEventHandler_.dispose();\n    this.pointerEventHandler_ = null;\n  }\n  EventTarget.prototype.disposeInternal.call(this);\n};\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/control/MousePosition\n */\n\nimport {inherits} from '../util.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport Control from '../control/Control.js';\nimport {getTransformFromProjections, identityTransform, get as getProjection} from '../proj.js';\n\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {module:ol/coordinate~CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {function(module:ol/MapEvent)} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {Element|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [undefinedHTML='&nbsp;'] Markup to show when coordinates are not\n * available (e.g. when the pointer leaves the map viewport).  By default, the last position\n * will be replaced with `'&nbsp;'` when the pointer leaves the viewport.  To\n * retain the last rendered position, set this option to something falsey (like an empty\n * string `''`).\n */\n\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/MousePosition~Options=} opt_options Mouse position\n *     options.\n * @api\n */\nconst MousePosition = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const element = document.createElement('DIV');\n  element.className = options.className !== undefined ? options.className : 'ol-mouse-position';\n\n  Control.call(this, {\n    element: element,\n    render: options.render || render,\n    target: options.target\n  });\n\n  listen(this,\n    getChangeEventType(PROJECTION),\n    this.handleProjectionChanged_, this);\n\n  if (options.coordinateFormat) {\n    this.setCoordinateFormat(options.coordinateFormat);\n  }\n  if (options.projection) {\n    this.setProjection(options.projection);\n  }\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.undefinedHTML_ = 'undefinedHTML' in options ? options.undefinedHTML : '&nbsp;';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderOnMouseOut_ = !!this.undefinedHTML_;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.renderedHTML_ = element.innerHTML;\n\n  /**\n   * @private\n   * @type {module:ol/proj/Projection}\n   */\n  this.mapProjection_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/proj~TransformFunction}\n   */\n  this.transform_ = null;\n\n  /**\n   * @private\n   * @type {module:ol~Pixel}\n   */\n  this.lastMouseMovePixel_ = null;\n\n};\n\ninherits(MousePosition, Control);\n\n\n/**\n * Update the mouseposition element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/MousePosition}\n * @api\n */\nexport function render(mapEvent) {\n  const frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.mapProjection_ = null;\n  } else {\n    if (this.mapProjection_ != frameState.viewState.projection) {\n      this.mapProjection_ = frameState.viewState.projection;\n      this.transform_ = null;\n    }\n  }\n  this.updateHTML_(this.lastMouseMovePixel_);\n}\n\n\n/**\n * @private\n */\nMousePosition.prototype.handleProjectionChanged_ = function() {\n  this.transform_ = null;\n};\n\n\n/**\n * Return the coordinate format type used to render the current position or\n * undefined.\n * @return {module:ol/coordinate~CoordinateFormat|undefined} The format to render the current\n *     position in.\n * @observable\n * @api\n */\nMousePosition.prototype.getCoordinateFormat = function() {\n  return (\n    /** @type {module:ol/coordinate~CoordinateFormat|undefined} */ (this.get(COORDINATE_FORMAT))\n  );\n};\n\n\n/**\n * Return the projection that is used to report the mouse position.\n * @return {module:ol/proj/Projection|undefined} The projection to report mouse\n *     position in.\n * @observable\n * @api\n */\nMousePosition.prototype.getProjection = function() {\n  return (\n    /** @type {module:ol/proj/Projection|undefined} */ (this.get(PROJECTION))\n  );\n};\n\n\n/**\n * @param {Event} event Browser event.\n * @protected\n */\nMousePosition.prototype.handleMouseMove = function(event) {\n  const map = this.getMap();\n  this.lastMouseMovePixel_ = map.getEventPixel(event);\n  this.updateHTML_(this.lastMouseMovePixel_);\n};\n\n\n/**\n * @param {Event} event Browser event.\n * @protected\n */\nMousePosition.prototype.handleMouseOut = function(event) {\n  this.updateHTML_(null);\n  this.lastMouseMovePixel_ = null;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMousePosition.prototype.setMap = function(map) {\n  Control.prototype.setMap.call(this, map);\n  if (map) {\n    const viewport = map.getViewport();\n    this.listenerKeys.push(\n      listen(viewport, EventType.MOUSEMOVE, this.handleMouseMove, this)\n    );\n    if (this.renderOnMouseOut_) {\n      this.listenerKeys.push(\n        listen(viewport, EventType.MOUSEOUT, this.handleMouseOut, this)\n      );\n    }\n  }\n};\n\n\n/**\n * Set the coordinate format type used to render the current position.\n * @param {module:ol/coordinate~CoordinateFormat} format The format to render the current\n *     position in.\n * @observable\n * @api\n */\nMousePosition.prototype.setCoordinateFormat = function(format) {\n  this.set(COORDINATE_FORMAT, format);\n};\n\n\n/**\n * Set the projection that is used to report the mouse position.\n * @param {module:ol/proj~ProjectionLike} projection The projection to report mouse\n *     position in.\n * @observable\n * @api\n */\nMousePosition.prototype.setProjection = function(projection) {\n  this.set(PROJECTION, getProjection(projection));\n};\n\n\n/**\n * @param {?module:ol~Pixel} pixel Pixel.\n * @private\n */\nMousePosition.prototype.updateHTML_ = function(pixel) {\n  let html = this.undefinedHTML_;\n  if (pixel && this.mapProjection_) {\n    if (!this.transform_) {\n      const projection = this.getProjection();\n      if (projection) {\n        this.transform_ = getTransformFromProjections(\n          this.mapProjection_, projection);\n      } else {\n        this.transform_ = identityTransform;\n      }\n    }\n    const map = this.getMap();\n    const coordinate = map.getCoordinateFromPixel(pixel);\n    if (coordinate) {\n      this.transform_(coordinate, coordinate);\n      const coordinateFormat = this.getCoordinateFormat();\n      if (coordinateFormat) {\n        html = coordinateFormat(coordinate);\n      } else {\n        html = coordinate.toString();\n      }\n    }\n  }\n  if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n    this.element.innerHTML = html;\n    this.renderedHTML_ = html;\n  }\n};\n\n\nexport default MousePosition;\n","/**\n * @module ol/render\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {create as createTransform, scale as scaleTransform} from './transform.js';\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\n\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {module:ol/Feature|module:ol/render/Feature} feature\n * @property {module:ol/geom/SimpleGeometry} geometry\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and returns a `{number}`.\n *\n * @typedef {function((module:ol/Feature|module:ol/render/Feature),\n *           (module:ol/Feature|module:ol/render/Feature)):number} OrderFunction\n */\n\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {module:ol/size~Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render';\n * import Fill from 'ol/style/Fill';\n * import Polygon from 'ol/geom/Polygon';\n *\n * var canvas = document.createElement('canvas');\n * var render = toContext(canvas.getContext('2d'),\n *     { size: [100, 100] });\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]]));\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {module:ol/render~ToContextOptions=} opt_options Options.\n * @return {module:ol/render/canvas/Immediate} Canvas Immediate.\n * @api\n */\nexport function toContext(context, opt_options) {\n  const canvas = context.canvas;\n  const options = opt_options ? opt_options : {};\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  const size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  const extent = [0, 0, canvas.width, canvas.height];\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n","/**\n * @module ol\n */\n\nexport {default as AssertionError} from './AssertionError.js';\nexport {default as Collection} from './Collection.js';\nexport {default as Disposable} from './Disposable.js';\nexport {default as Feature} from './Feature.js';\nexport {default as Geolocation} from './Geolocation.js';\nexport {default as Graticule} from './Graticule.js';\nexport {default as Image} from './Image.js';\nexport {default as ImageBase} from './ImageBase.js';\nexport {default as ImageCanvas} from './ImageCanvas.js';\nexport {default as ImageTile} from './ImageTile.js';\nexport {default as Kinetic} from './Kinetic.js';\nexport {default as Map} from './Map.js';\nexport {default as MapBrowserEvent} from './MapBrowserEvent.js';\nexport {default as MapBrowserEventHandler} from './MapBrowserEventHandler.js';\nexport {default as MapBrowserPointerEvent} from './MapBrowserPointerEvent.js';\nexport {default as MapEvent} from './MapEvent.js';\nexport {default as Object} from './Object.js';\nexport {default as Observable} from './Observable.js';\nexport {default as Overlay} from './Overlay.js';\nexport {default as PluggableMap} from './PluggableMap.js';\nexport {default as Tile} from './Tile.js';\nexport {default as TileCache} from './TileCache.js';\nexport {default as TileQueue} from './TileQueue.js';\nexport {default as TileRange} from './TileRange.js';\nexport {default as VectorImageTile} from './VectorImageTile.js';\nexport {default as VectorTile} from './VectorTile.js';\nexport {default as View} from './View.js';\nexport {default as WebGLMap} from './WebGLMap.js';\n\nexport {getUid, inherits, VERSION} from './util.js';\n\n/**\n * An array with two elements, representing a pixel. The first element is the\n * x-coordinate, the second the y-coordinate of the pixel.\n * @typedef {Array.<number>} Pixel\n * @api\n */\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array.<module:ol/coordinate~Coordinate>} source\n * @property {Array.<module:ol/coordinate~Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n *\n * @param {module:ol/proj/Projection} sourceProj Source projection.\n * @param {module:ol/proj/Projection} targetProj Target projection.\n * @param {module:ol/extent~Extent} targetExtent Target extent to triangulate.\n * @param {module:ol/extent~Extent} maxSourceExtent Maximal source extent that can be used.\n * @param {number} errorThreshold Acceptable error (in source units).\n * @constructor\n */\nconst Triangulation = function(sourceProj, targetProj, targetExtent,\n  maxSourceExtent, errorThreshold) {\n\n  /**\n   * @type {module:ol/proj/Projection}\n   * @private\n   */\n  this.sourceProj_ = sourceProj;\n\n  /**\n   * @type {module:ol/proj/Projection}\n   * @private\n   */\n  this.targetProj_ = targetProj;\n\n  /** @type {!Object.<string, module:ol/coordinate~Coordinate>} */\n  let transformInvCache = {};\n  const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} c A coordinate.\n   * @return {module:ol/coordinate~Coordinate} Transformed coordinate.\n   * @private\n   */\n  this.transformInv_ = function(c) {\n    const key = c[0] + '/' + c[1];\n    if (!transformInvCache[key]) {\n      transformInvCache[key] = transformInv(c);\n    }\n    return transformInvCache[key];\n  };\n\n  /**\n   * @type {module:ol/extent~Extent}\n   * @private\n   */\n  this.maxSourceExtent_ = maxSourceExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n  /**\n   * @type {Array.<module:ol/reproj/Triangulation~Triangle>}\n   * @private\n   */\n  this.triangles_ = [];\n\n  /**\n   * Indicates that the triangulation crosses edge of the source projection.\n   * @type {boolean}\n   * @private\n   */\n  this.wrapsXInSource_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n    getWidth(this.sourceProj_.getExtent()) : null;\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n    getWidth(this.targetProj_.getExtent()) : null;\n\n  const destinationTopLeft = getTopLeft(targetExtent);\n  const destinationTopRight = getTopRight(targetExtent);\n  const destinationBottomRight = getBottomRight(targetExtent);\n  const destinationBottomLeft = getBottomLeft(targetExtent);\n  const sourceTopLeft = this.transformInv_(destinationTopLeft);\n  const sourceTopRight = this.transformInv_(destinationTopRight);\n  const sourceBottomRight = this.transformInv_(destinationBottomRight);\n  const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n  this.addQuad_(\n    destinationTopLeft, destinationTopRight,\n    destinationBottomRight, destinationBottomLeft,\n    sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n    MAX_SUBDIVISION);\n\n  if (this.wrapsXInSource_) {\n    let leftBound = Infinity;\n    this.triangles_.forEach(function(triangle, i, arr) {\n      leftBound = Math.min(leftBound,\n        triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n    });\n\n    // Shift triangles to be as close to `leftBound` as possible\n    // (if the distance is more than `worldWidth / 2` it can be closer.\n    this.triangles_.forEach(function(triangle) {\n      if (Math.max(triangle.source[0][0], triangle.source[1][0],\n        triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n        const newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n          [triangle.source[1][0], triangle.source[1][1]],\n          [triangle.source[2][0], triangle.source[2][1]]];\n        if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[0][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[1][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[2][0] -= this.sourceWorldWidth_;\n        }\n\n        // Rarely (if the extent contains both the dateline and prime meridian)\n        // the shift can in turn break some triangles.\n        // Detect this here and don't shift in such cases.\n        const minX = Math.min(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        const maxX = Math.max(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n          triangle.source = newTriangle;\n        }\n      }\n    }.bind(this));\n  }\n\n  transformInvCache = {};\n};\n\n\n/**\n * Adds triangle to the triangulation.\n * @param {module:ol/coordinate~Coordinate} a The target a coordinate.\n * @param {module:ol/coordinate~Coordinate} b The target b coordinate.\n * @param {module:ol/coordinate~Coordinate} c The target c coordinate.\n * @param {module:ol/coordinate~Coordinate} aSrc The source a coordinate.\n * @param {module:ol/coordinate~Coordinate} bSrc The source b coordinate.\n * @param {module:ol/coordinate~Coordinate} cSrc The source c coordinate.\n * @private\n */\nTriangulation.prototype.addTriangle_ = function(a, b, c,\n  aSrc, bSrc, cSrc) {\n  this.triangles_.push({\n    source: [aSrc, bSrc, cSrc],\n    target: [a, b, c]\n  });\n};\n\n\n/**\n * Adds quad (points in clock-wise order) to the triangulation\n * (and reprojects the vertices) if valid.\n * Performs quad subdivision if needed to increase precision.\n *\n * @param {module:ol/coordinate~Coordinate} a The target a coordinate.\n * @param {module:ol/coordinate~Coordinate} b The target b coordinate.\n * @param {module:ol/coordinate~Coordinate} c The target c coordinate.\n * @param {module:ol/coordinate~Coordinate} d The target d coordinate.\n * @param {module:ol/coordinate~Coordinate} aSrc The source a coordinate.\n * @param {module:ol/coordinate~Coordinate} bSrc The source b coordinate.\n * @param {module:ol/coordinate~Coordinate} cSrc The source c coordinate.\n * @param {module:ol/coordinate~Coordinate} dSrc The source d coordinate.\n * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n * @private\n */\nTriangulation.prototype.addQuad_ = function(a, b, c, d,\n  aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n  const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n  const sourceCoverageX = this.sourceWorldWidth_ ?\n    getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n  const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n  // when the quad is wrapped in the source projection\n  // it covers most of the projection extent, but not fully\n  const wrapsX = this.sourceProj_.canWrapX() &&\n               sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n  let needsSubdivision = false;\n\n  if (maxSubdivision > 0) {\n    if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n      const targetQuadExtent = boundingExtent([a, b, c, d]);\n      const targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n      needsSubdivision |=\n          targetCoverageX > MAX_TRIANGLE_WIDTH;\n    }\n    if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n      needsSubdivision |=\n          sourceCoverageX > MAX_TRIANGLE_WIDTH;\n    }\n  }\n\n  if (!needsSubdivision && this.maxSourceExtent_) {\n    if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n      // whole quad outside source projection extent -> ignore\n      return;\n    }\n  }\n\n  if (!needsSubdivision) {\n    if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n      if (maxSubdivision > 0) {\n        needsSubdivision = true;\n      } else {\n        return;\n      }\n    }\n  }\n\n  if (maxSubdivision > 0) {\n    if (!needsSubdivision) {\n      const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n      const centerSrc = this.transformInv_(center);\n\n      let dx;\n      if (wrapsX) {\n        const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n             modulo(cSrc[0], sourceWorldWidth)) / 2;\n        dx = centerSrcEstimX -\n            modulo(centerSrc[0], sourceWorldWidth);\n      } else {\n        dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n      }\n      const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n      const centerSrcErrorSquared = dx * dx + dy * dy;\n      needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n    }\n    if (needsSubdivision) {\n      if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n        // split horizontally (top & bottom)\n        const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n        const bcSrc = this.transformInv_(bc);\n        const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n        const daSrc = this.transformInv_(da);\n\n        this.addQuad_(\n          a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n        this.addQuad_(\n          da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n      } else {\n        // split vertically (left & right)\n        const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n        const abSrc = this.transformInv_(ab);\n        const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n        const cdSrc = this.transformInv_(cd);\n\n        this.addQuad_(\n          a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n        this.addQuad_(\n          ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n      }\n      return;\n    }\n  }\n\n  if (wrapsX) {\n    if (!this.canWrapXInSource_) {\n      return;\n    }\n    this.wrapsXInSource_ = true;\n  }\n\n  this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n  this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n};\n\n\n/**\n * Calculates extent of the 'source' coordinates from all the triangles.\n *\n * @return {module:ol/extent~Extent} Calculated extent.\n */\nTriangulation.prototype.calculateSourceExtent = function() {\n  const extent = createEmpty();\n\n  this.triangles_.forEach(function(triangle, i, arr) {\n    const src = triangle.source;\n    extendCoordinate(extent, src[0]);\n    extendCoordinate(extent, src[1]);\n    extendCoordinate(extent, src[2]);\n  });\n\n  return extent;\n};\n\n\n/**\n * @return {Array.<module:ol/reproj/Triangulation~Triangle>} Array of the calculated triangles.\n */\nTriangulation.prototype.getTriangles = function() {\n  return this.triangles_;\n};\nexport default Triangulation;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n","/**\n * @module ol/featureloader\n */\nimport {UNDEFINED} from './functions.js';\nimport FormatType from './format/FormatType.js';\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:module:ol/source/Vector, module:ol/extent~Extent, number,\n *                    module:ol/proj/Projection)} FeatureLoader\n * @api\n */\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(module:ol/extent~Extent, number, module:ol/proj/Projection): string} FeatureUrlFunction\n * @api\n */\n\n\n/**\n * @param {string|module:ol/featureloader~FeatureUrlFunction} url Feature URL service.\n * @param {module:ol/format/Feature} format Feature format.\n * @param {function(this:module:ol/VectorTile, Array.<module:ol/Feature>, module:ol/proj/Projection, module:ol/extent~Extent)|function(this:module:ol/source/Vector, Array.<module:ol/Feature>)} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:module:ol/VectorTile)|function(this:module:ol/source/Vector)} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {module:ol/featureloader~FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {module:ol/extent~Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @this {module:ol/source/Vector|module:ol/VectorTile}\n     */\n    function(extent, resolution, projection) {\n      const xhr = new XMLHttpRequest();\n      xhr.open('GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true);\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          const type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          let source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source,\n              {featureProjection: projection}),\n            format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|module:ol/featureloader~FeatureUrlFunction} url Feature URL service.\n * @param {module:ol/format/Feature} format Feature format.\n * @return {module:ol/featureloader~FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n    /**\n     * @param {Array.<module:ol/Feature>} features The loaded features.\n     * @param {module:ol/proj/Projection} dataProjection Data\n     * projection.\n     * @this {module:ol/source/Vector}\n     */\n    function(features, dataProjection) {\n      this.addFeatures(features);\n    }, /* FIXME handle error */ UNDEFINED);\n}\n","/**\n * @module ol/layer/VectorRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array.<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, module:ol/coordinate~Coordinate, module:ol/coordinate~Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  const point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const point2 = [];\n  let ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos,\n            str = readUtf8(this.buf, this.pos, end);\n        this.pos = end;\n        return str;\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.ceil(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","var Processor = require('./processor');\n\nexports.Processor = Processor;\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\nvar context = document.createElement('canvas').getContext('2d');\n\nfunction newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  } else {\n    var imageData = context.createImageData(width, height);\n    imageData.data.set(data);\n    return imageData;\n  }\n}\n\nexports.newImageData = newImageData;\n","var newImageData = require('./util').newImageData;\n\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(Object):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  var workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    } else {\n      return {data: data, width: width, height: height};\n    }\n  }\n\n  return function(data) {\n    // bracket notation for minification support\n    var buffers = data['buffers'];\n    var meta = data['meta'];\n    var imageOps = data['imageOps'];\n    var width = data['width'];\n    var height = data['height'];\n\n    var numBuffers = buffers.length;\n    var numBytes = buffers[0].byteLength;\n    var output, b;\n\n    if (imageOps) {\n      var images = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n            new Uint8ClampedArray(buffers[b]), width, height);\n      }\n      output = operation(images, meta).data;\n    } else {\n      output = new Uint8ClampedArray(numBytes);\n      var arrays = new Array(numBuffers);\n      var pixels = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        arrays[b] = new Uint8ClampedArray(buffers[b]);\n        pixels[b] = [0, 0, 0, 0];\n      }\n      for (var i = 0; i < numBytes; i += 4) {\n        for (var j = 0; j < numBuffers; ++j) {\n          var array = arrays[j];\n          pixels[j][0] = array[i];\n          pixels[j][1] = array[i + 1];\n          pixels[j][2] = array[i + 2];\n          pixels[j][3] = array[i + 3];\n        }\n        var pixel = operation(pixels, meta);\n        output[i] = pixel[0];\n        output[i + 1] = pixel[1];\n        output[i + 2] = pixel[2];\n        output[i + 3] = pixel[3];\n      }\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  var lib = Object.keys(config.lib || {}).map(function(name) {\n    return 'var ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  var lines = lib.concat([\n    'var __minion__ = (' + createMinion.toString() + ')(', config.operation.toString(), ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  var buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});'\n  ]);\n\n  var blob = new Blob(lines, {type: 'text/javascript'});\n  var source = URL.createObjectURL(blob);\n  var worker = new Worker(source);\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * Create a faux worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  var minion = createMinion(config.operation);\n  return {\n    postMessage: function(data) {\n      setTimeout(function() {\n        onMessage({'data': {'buffer': minion(data), 'meta': data['meta']}});\n      }, 0);\n    }\n  };\n}\n\n/**\n * A processor runs pixel or image operations in workers.\n * @param {Object} config Configuration.\n */\nfunction Processor(config) {\n  this._imageOps = !!config.imageOps;\n  var threads;\n  if (config.threads === 0) {\n    threads = 0;\n  } else if (this._imageOps) {\n    threads = 1;\n  } else {\n    threads = config.threads || 1;\n  }\n  var workers = [];\n  if (threads) {\n    for (var i = 0; i < threads; ++i) {\n      workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n    }\n  } else {\n    workers[0] = createFauxWorker(config, this._onWorkerMessage.bind(this, 0));\n  }\n  this._workers = workers;\n  this._queue = [];\n  this._maxQueueLength = config.queue || Infinity;\n  this._running = 0;\n  this._dataLookup = {};\n  this._job = null;\n}\n\n/**\n * Run operation on input data.\n * @param {Array.<Array|ImageData>} inputs Array of pixels or image data\n *     (depending on the operation type).\n * @param {Object} meta A user data object.  This is passed to all operations\n *     and must be serializable.\n * @param {function(Error, ImageData, Object)} callback Called when work\n *     completes.  The first argument is any error.  The second is the ImageData\n *     generated by operations.  The third is the user data object.\n */\nProcessor.prototype.process = function(inputs, meta, callback) {\n  this._enqueue({\n    inputs: inputs,\n    meta: meta,\n    callback: callback\n  });\n  this._dispatch();\n};\n\n/**\n * Stop responding to any completed work and destroy the processor.\n */\nProcessor.prototype.destroy = function() {\n  for (var key in this) {\n    this[key] = null;\n  }\n  this._destroyed = true;\n};\n\n/**\n * Add a job to the queue.\n * @param {Object} job The job.\n */\nProcessor.prototype._enqueue = function(job) {\n  this._queue.push(job);\n  while (this._queue.length > this._maxQueueLength) {\n    this._queue.shift().callback(null, null);\n  }\n};\n\n/**\n * Dispatch a job.\n */\nProcessor.prototype._dispatch = function() {\n  if (this._running === 0 && this._queue.length > 0) {\n    var job = this._job = this._queue.shift();\n    var width = job.inputs[0].width;\n    var height = job.inputs[0].height;\n    var buffers = job.inputs.map(function(input) {\n      return input.data.buffer;\n    });\n    var threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage({\n        'buffers': buffers,\n        'meta': job.meta,\n        'imageOps': this._imageOps,\n        'width': width,\n        'height': height\n      }, buffers);\n    } else {\n      var length = job.inputs[0].data.length;\n      var segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (var i = 0; i < threads; ++i) {\n        var offset = i * segmentLength;\n        var slices = [];\n        for (var j = 0, jj = buffers.length; j < jj; ++j) {\n          slices.push(buffers[i].slice(offset, offset + segmentLength));\n        }\n        this._workers[i].postMessage({\n          'buffers': slices,\n          'meta': job.meta,\n          'imageOps': this._imageOps,\n          'width': width,\n          'height': height\n        }, slices);\n      }\n    }\n  }\n};\n\n/**\n * Handle messages from the worker.\n * @param {number} index The worker index.\n * @param {MessageEvent} event The message event.\n */\nProcessor.prototype._onWorkerMessage = function(index, event) {\n  if (this._destroyed) {\n    return;\n  }\n  this._dataLookup[index] = event.data;\n  --this._running;\n  if (this._running === 0) {\n    this._resolveJob();\n  }\n};\n\n/**\n * Resolve a job.  If there are no more worker threads, the processor callback\n * will be called.\n */\nProcessor.prototype._resolveJob = function() {\n  var job = this._job;\n  var threads = this._workers.length;\n  var data, meta;\n  if (threads === 1) {\n    data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n    meta = this._dataLookup[0]['meta'];\n  } else {\n    var length = job.inputs[0].data.length;\n    data = new Uint8ClampedArray(length);\n    meta = new Array(length);\n    var segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (var i = 0; i < threads; ++i) {\n      var buffer = this._dataLookup[i]['buffer'];\n      var offset = i * segmentLength;\n      data.set(new Uint8ClampedArray(buffer), offset);\n      meta[i] = this._dataLookup[i]['meta'];\n    }\n  }\n  this._job = null;\n  this._dataLookup = {};\n  job.callback(null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height), meta);\n  this._dispatch();\n};\n\nmodule.exports = Processor;\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n"],"sourceRoot":""}