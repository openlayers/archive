{"version":3,"sources":["webpack:///./vector-esri-edit.js"],"names":["serviceUrl","esrijsonFormat","_src_ol_format_EsriJSON_js__WEBPACK_IMPORTED_MODULE_2__","vectorSource","_src_ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_7__","loader","extent","resolution","projection","url","encodeURIComponent","$","ajax","dataType","success","response","error","alert","message","details","join","features","readFeatures","featureProjection","length","addFeatures","strategy","Object","_src_ol_loadingstrategy_js__WEBPACK_IMPORTED_MODULE_5__","_src_ol_tilegrid_js__WEBPACK_IMPORTED_MODULE_9__","tileSize","vector","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_4__","source","raster","_src_ol_source_XYZ_js__WEBPACK_IMPORTED_MODULE_8__","attributions","draw","_src_ol_interaction_js__WEBPACK_IMPORTED_MODULE_3__","type","select","setActive","selected","getFeatures","modify","map","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","interactions","extend","layers","target","document","getElementById","view","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","center","_src_ol_proj_js__WEBPACK_IMPORTED_MODULE_6__","zoom","typeSelect","onchange","value","dirty","on","evt","element","getId","feature","fid","payload","writeFeature","getView","getProjection","post","f","done","data","result","JSON","parse","updateResults","description","code","addResults","setId","clear"],"mappings":"qLAYA,MAAAA,EAAA,4GAIAC,EAAA,IAAAC,EAAA,EAEAC,EAAA,IAAAC,EAAA,GACAC,OAAA,SAAAC,EAAAC,EAAAC,GACA,MAAAC,EAAAT,EANA,oFAQAU,mBAAA,WAA6BJ,EAAA,cAC7BA,EAAA,cAAAA,EAAA,cAAAA,EAAA,GACA,wCACA,0EAEAK,EAAAC,MAAYH,MAAAI,SAAA,QAAAC,QAAA,SAAAC,GACZ,GAAAA,EAAAC,MACAC,MAAAF,EAAAC,MAAAE,QAAA,KACAH,EAAAC,MAAAG,QAAAC,KAAA,WACO,CAEP,MAAAC,EAAApB,EAAAqB,aAAAP,GACAQ,kBAAAf,IAEAa,EAAAG,OAAA,GACArB,EAAAsB,YAAAJ,QAKAK,SAAAC,OAAAC,EAAA,EAAAD,QAAAE,EAAA,EAAAF,EACAG,SAAA,SAIAC,EAAA,IAAAC,EAAA,GACAC,OAAA9B,IAGA+B,EAAA,IAAAF,EAAA,GACAC,OAAA,IAAAE,EAAA,GACAC,aAAA,+GAEA3B,IAAA,qGAKA4B,EAAA,IAAAC,EAAA,GACAL,OAAA9B,EACAoC,KAAA,YAGAC,EAAA,IAAAF,EAAA,EACAE,EAAAC,WAAA,GACA,MAAAC,EAAAF,EAAAG,cAEAC,EAAA,IAAAN,EAAA,GACAjB,SAAAqB,IAEAE,EAAAH,WAAA,GAEA,MAAAI,EAAA,IAAAC,EAAA,GACAC,aAAApB,OAAAW,EAAA,EAAAX,GAAAqB,QAAAX,EAAAG,EAAAI,IACAK,QAAAf,EAAAH,GACAmB,OAAAC,SAAAC,eAAA,OACAC,KAAA,IAAAC,EAAA,GACAC,OAAA5B,OAAA6B,EAAA,EAAA7B,GAAA,iBACA8B,KAAA,OAIAC,EAAAP,SAAAC,eAAA,QAMAM,EAAAC,SAAA,WACAtB,EAAAI,UAAA,SAAAiB,EAAAE,OACApB,EAAAC,UAAA,WAAAiB,EAAAE,OACAhB,EAAAH,UAAA,WAAAiB,EAAAE,QAGA,MAAAC,KAEAnB,EAAAoB,GAAA,eAAAC,GACAA,EAAAC,QACAF,GAAA,kBAAAC,GACAF,EAAAE,EAAAb,OAAAe,UAAA,MAIAvB,EAAAoB,GAAA,kBAAAC,GACA,MAAAG,EAAAH,EAAAC,QACAG,EAAAD,EAAAD,QACA,QAAAJ,EAAAM,GAAA,CACA,MAAAC,EAAA,IAAAnE,EAAAoE,aAAAH,GACA3C,kBAAAsB,EAAAyB,UAAAC,kBACK,IACL9D,EAAAT,EAlGA,mBAmGAW,EAAA6D,KAAA/D,GAAiBgE,EAAA,OAAApD,SAAA+C,IAA6BM,KAAA,SAAAC,GAC9C,MAAAC,EAAAC,KAAAC,MAAAH,GACA,GAAAC,EAAAG,eAAAH,EAAAG,cAAAvD,OAAA,EACA,QAAAoD,EAAAG,cAAA,GAAAjE,QAAA,CACA,MAAAE,EAAA4D,EAAAG,cAAA,GAAA/D,MACAC,MAAAD,EAAAgE,YAAA,KAAAhE,EAAAiE,KAAA,iBAEApB,EAAAM,QAOA9B,EAAAyB,GAAA,mBAAAC,GACA,MAAAG,EAAAH,EAAAG,QACAE,EAAA,IAAAnE,EAAAoE,aAAAH,GACA3C,kBAAAsB,EAAAyB,UAAAC,kBACG,IAEH5D,EAAA6D,KADAxE,0HACeyE,EAAA,OAAApD,SAAA+C,IAA6BM,KAAA,SAAAC,GAC5C,MAAAC,EAAAC,KAAAC,MAAAH,GACA,GAAAC,EAAAM,YAAAN,EAAAM,WAAA1D,OAAA,EACA,QAAAoD,EAAAM,WAAA,GAAApE,QACAoD,EAAAiB,MAAAP,EAAAM,WAAA,aACA/E,EAAAiF,YACO,CACP,MAAApE,EAAA4D,EAAAM,WAAA,GAAAlE,MACAC,MAAAD,EAAAgE,YAAA,KAAAhE,EAAAiE,KAAA","file":"vector-esri-edit.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport EsriJSON from '../src/ol/format/EsriJSON.js';\nimport {defaults as defaultInteractions, Draw, Modify, Select} from '../src/ol/interaction.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {tile as tileStrategy} from '../src/ol/loadingstrategy.js';\nimport {fromLonLat} from '../src/ol/proj.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport XYZ from '../src/ol/source/XYZ.js';\nimport {createXYZ} from '../src/ol/tilegrid.js';\n\n\nconst serviceUrl = 'https://services.arcgis.com/rOo16HdIMeOBI4Mb/arcgis/rest/' +\n    'services/PDX_Pedestrian_Districts/FeatureServer/';\nconst layer = '0';\n\nconst esrijsonFormat = new EsriJSON();\n\nconst vectorSource = new VectorSource({\n  loader: function(extent, resolution, projection) {\n    const url = serviceUrl + layer + '/query/?f=json&' +\n        'returnGeometry=true&spatialRel=esriSpatialRelIntersects&geometry=' +\n        encodeURIComponent('{\"xmin\":' + extent[0] + ',\"ymin\":' +\n            extent[1] + ',\"xmax\":' + extent[2] + ',\"ymax\":' + extent[3] +\n            ',\"spatialReference\":{\"wkid\":102100}}') +\n        '&geometryType=esriGeometryEnvelope&inSR=102100&outFields=*' +\n        '&outSR=102100';\n    $.ajax({url: url, dataType: 'jsonp', success: function(response) {\n      if (response.error) {\n        alert(response.error.message + '\\n' +\n            response.error.details.join('\\n'));\n      } else {\n        // dataProjection will be read from document\n        const features = esrijsonFormat.readFeatures(response, {\n          featureProjection: projection\n        });\n        if (features.length > 0) {\n          vectorSource.addFeatures(features);\n        }\n      }\n    }});\n  },\n  strategy: tileStrategy(createXYZ({\n    tileSize: 512\n  }))\n});\n\nconst vector = new VectorLayer({\n  source: vectorSource\n});\n\nconst raster = new TileLayer({\n  source: new XYZ({\n    attributions: 'Tiles Â© <a href=\"https://services.arcgisonline.com/ArcGIS/' +\n        'rest/services/World_Topo_Map/MapServer\">ArcGIS</a>',\n    url: 'https://server.arcgisonline.com/ArcGIS/rest/services/' +\n        'World_Topo_Map/MapServer/tile/{z}/{y}/{x}'\n  })\n});\n\nconst draw = new Draw({\n  source: vectorSource,\n  type: 'Polygon'\n});\n\nconst select = new Select();\nselect.setActive(false);\nconst selected = select.getFeatures();\n\nconst modify = new Modify({\n  features: selected\n});\nmodify.setActive(false);\n\nconst map = new Map({\n  interactions: defaultInteractions().extend([draw, select, modify]),\n  layers: [raster, vector],\n  target: document.getElementById('map'),\n  view: new View({\n    center: fromLonLat([-122.619, 45.512]),\n    zoom: 12\n  })\n});\n\nconst typeSelect = document.getElementById('type');\n\n\n/**\n * Let user change the interaction type.\n */\ntypeSelect.onchange = function() {\n  draw.setActive(typeSelect.value === 'DRAW');\n  select.setActive(typeSelect.value === 'MODIFY');\n  modify.setActive(typeSelect.value === 'MODIFY');\n};\n\nconst dirty = {};\n\nselected.on('add', function(evt) {\n  const feature = evt.element;\n  feature.on('change', function(evt) {\n    dirty[evt.target.getId()] = true;\n  });\n});\n\nselected.on('remove', function(evt) {\n  const feature = evt.element;\n  const fid = feature.getId();\n  if (dirty[fid] === true) {\n    const payload = '[' + esrijsonFormat.writeFeature(feature, {\n      featureProjection: map.getView().getProjection()\n    }) + ']';\n    const url = serviceUrl + layer + '/updateFeatures';\n    $.post(url, {f: 'json', features: payload}).done(function(data) {\n      const result = JSON.parse(data);\n      if (result.updateResults && result.updateResults.length > 0) {\n        if (result.updateResults[0].success !== true) {\n          const error = result.updateResults[0].error;\n          alert(error.description + ' (' + error.code + ')');\n        } else {\n          delete dirty[fid];\n        }\n      }\n    });\n  }\n});\n\ndraw.on('drawend', function(evt) {\n  const feature = evt.feature;\n  const payload = '[' + esrijsonFormat.writeFeature(feature, {\n    featureProjection: map.getView().getProjection()\n  }) + ']';\n  const url = serviceUrl + layer + '/addFeatures';\n  $.post(url, {f: 'json', features: payload}).done(function(data) {\n    const result = JSON.parse(data);\n    if (result.addResults && result.addResults.length > 0) {\n      if (result.addResults[0].success === true) {\n        feature.setId(result.addResults[0]['objectId']);\n        vectorSource.clear();\n      } else {\n        const error = result.addResults[0].error;\n        alert(error.description + ' (' + error.code + ')');\n      }\n    }\n  });\n});\n"],"sourceRoot":""}