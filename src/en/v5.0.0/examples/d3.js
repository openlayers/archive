(window.webpackJsonp=window.webpackJsonp||[]).push([[149],{385:function(e,t,n){"use strict";n.r(t);var o=n(5),c=n(4),a=n(3),s=n(10),r=n(7),d=n(16);const u=new o.a({layers:[new s.d({source:new d.h({layer:"watercolor"})})],target:"map",view:new c.a({center:Object(r.g)([-97,38]),zoom:4})});d3.json("data/topojson/us.json",function(e,t){const n=topojson.feature(t,t.objects.counties),o=new s.c({source:new d.e({canvasFunction:function(e,t,o,c,s){const d=c[0],u=c[1],w=d3.select(document.createElement("canvas"));w.attr("width",d).attr("height",u);const i=w.node().getContext("2d"),j=d3.geoMercator().scale(1).translate([0,0]);let l=d3.geoPath().projection(j);const p=l.bounds(n),b=p[1][0]-p[0][0],g=p[1][1]-p[0][1],h=d3.geoBounds(n),m=Object(r.g)(h[0],s),O=Object(r.g)(h[1],s);let x=O[0]-m[0];x<0&&(x+=Object(a.E)(s.getExtent()));const f=x/b,v=(O[1]-m[1])/g,E=Math.max(f,v)/(t/o),k=Object(r.m)(Object(a.x)(e),s);return j.scale(E).center(k).translate([d/2,u/2]),(l=l.projection(j).context(i))(n),i.stroke(),w.node()},projection:"EPSG:3857"})});u.addLayer(o)})}},[[385,0]]]);
//# sourceMappingURL=d3.js.map