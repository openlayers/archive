{"version":3,"sources":["webpack:///./feature-animation.js"],"names":["map","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_1__","layers","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_7__","source","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_10__","wrapX","controls","Object","_src_ol_control_js__WEBPACK_IMPORTED_MODULE_4__","attributionOptions","collapsible","target","view","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_3__","center","zoom","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_11__","vector","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_8__","addLayer","duration","on","e","feature","start","Date","getTime","listenerKey","event","vectorContext","frameState","flashGeom","getGeometry","clone","elapsed","time","elapsedRatio","radius","_src_ol_easing_js__WEBPACK_IMPORTED_MODULE_5__","opacity","style","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_12__","image","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_13__","snapToPixel","stroke","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_14__","color","width","setStyle","drawGeometry","_src_ol_Observable_js__WEBPACK_IMPORTED_MODULE_2__","render","flash","window","setInterval","x","Math","random","y","geom","_src_ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_6__","_src_ol_proj_js__WEBPACK_IMPORTED_MODULE_9__","_src_ol_Feature_js__WEBPACK_IMPORTED_MODULE_0__","addFeature"],"mappings":"8NAaA,MAAAA,EAAA,IAAAC,EAAA,GACAC,QACA,IAAAC,EAAA,GACAC,OAAA,IAAAC,EAAA,GACAC,OAAA,OAIAC,SAAAC,OAAAC,EAAA,EAAAD,EACAE,oBACAC,aAAA,KAGAC,OAAA,MACAC,KAAA,IAAAC,EAAA,GACAC,QAAA,KACAC,KAAA,MAIAZ,EAAA,IAAAa,EAAA,GACAX,OAAA,IAEAY,EAAA,IAAAC,EAAA,GACAf,WAEAJ,EAAAoB,SAAAF,GAUA,MAAAG,EAAA,IAqCAjB,EAAAkB,GAAA,sBAAAC,IApCA,SAAAC,GACA,MAAAC,GAAA,IAAAC,MAAAC,UACAC,EAAA5B,EAAAsB,GAAA,cAEA,SAAAO,GACA,MAAAC,EAAAD,EAAAC,cACAC,EAAAF,EAAAE,WACAC,EAAAR,EAAAS,cAAAC,QACAC,EAAAJ,EAAAK,KAAAX,EACAY,EAAAF,EAAAd,EAEAiB,EAAA,GAAA9B,OAAA+B,EAAA,EAAA/B,CAAA6B,GAAA,EACAG,EAAAhC,OAAA+B,EAAA,EAAA/B,CAAA,EAAA6B,GAEAI,EAAA,IAAAC,EAAA,GACAC,MAAA,IAAAC,EAAA,GACAN,SACAO,aAAA,EACAC,OAAA,IAAAC,EAAA,GACAC,MAAA,mBAAAR,EAAA,IACAS,MAAA,IAAAT,QAKAV,EAAAoB,SAAAT,GACAX,EAAAqB,aAAAnB,GACAG,EAAAd,EACAb,OAAA4C,EAAA,EAAA5C,CAAAoB,GAIA5B,EAAAqD,WAKAC,CAAA/B,EAAAC,WAGA+B,OAAAC,YAjDA,WACA,MAAAC,EAAA,IAAAC,KAAAC,SAAA,IACAC,EAAA,IAAAF,KAAAC,SAAA,GACAE,EAAA,IAAAC,EAAA,EAAAtD,OAAAuD,EAAA,EAAAvD,EAAAiD,EAAAG,KACApC,EAAA,IAAAwC,EAAA,EAAAH,GACAzD,EAAA6D,WAAAzC,IA4CA","file":"feature-animation.js","sourcesContent":["import Feature from '../src/ol/Feature.js';\nimport Map from '../src/ol/Map.js';\nimport {unByKey} from '../src/ol/Observable.js';\nimport View from '../src/ol/View.js';\nimport {defaults as defaultControls} from '../src/ol/control.js';\nimport {easeOut} from '../src/ol/easing.js';\nimport Point from '../src/ol/geom/Point.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {fromLonLat} from '../src/ol/proj.js';\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\nimport {Circle as CircleStyle, Stroke, Style} from '../src/ol/style.js';\n\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM({\n        wrapX: false\n      })\n    })\n  ],\n  controls: defaultControls({\n    attributionOptions: {\n      collapsible: false\n    }\n  }),\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 1\n  })\n});\n\nconst source = new VectorSource({\n  wrapX: false\n});\nconst vector = new VectorLayer({\n  source: source\n});\nmap.addLayer(vector);\n\nfunction addRandomFeature() {\n  const x = Math.random() * 360 - 180;\n  const y = Math.random() * 180 - 90;\n  const geom = new Point(fromLonLat([x, y]));\n  const feature = new Feature(geom);\n  source.addFeature(feature);\n}\n\nconst duration = 3000;\nfunction flash(feature) {\n  const start = new Date().getTime();\n  const listenerKey = map.on('postcompose', animate);\n\n  function animate(event) {\n    const vectorContext = event.vectorContext;\n    const frameState = event.frameState;\n    const flashGeom = feature.getGeometry().clone();\n    const elapsed = frameState.time - start;\n    const elapsedRatio = elapsed / duration;\n    // radius will be 5 at start and 30 at end.\n    const radius = easeOut(elapsedRatio) * 25 + 5;\n    const opacity = easeOut(1 - elapsedRatio);\n\n    const style = new Style({\n      image: new CircleStyle({\n        radius: radius,\n        snapToPixel: false,\n        stroke: new Stroke({\n          color: 'rgba(255, 0, 0, ' + opacity + ')',\n          width: 0.25 + opacity\n        })\n      })\n    });\n\n    vectorContext.setStyle(style);\n    vectorContext.drawGeometry(flashGeom);\n    if (elapsed > duration) {\n      unByKey(listenerKey);\n      return;\n    }\n    // tell OpenLayers to continue postcompose animation\n    map.render();\n  }\n}\n\nsource.on('addfeature', function(e) {\n  flash(e.feature);\n});\n\nwindow.setInterval(addRandomFeature, 1000);\n"],"sourceRoot":""}