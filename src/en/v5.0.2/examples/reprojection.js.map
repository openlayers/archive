{"version":3,"sources":["webpack:///./reprojection.js"],"names":["proj4__WEBPACK_IMPORTED_MODULE_13__","defs","Object","_src_ol_proj_proj4_js__WEBPACK_IMPORTED_MODULE_6__","_src_ol_proj_js__WEBPACK_IMPORTED_MODULE_5__","setExtent","layers","_src_ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_4__","source","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_7__","projection","url","crossOrigin","maxZoom","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_8__","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_9__","params","LAYERS","TILED","attributions","FORMAT","parser","_src_ol_format_WMTSCapabilities_js__WEBPACK_IMPORTED_MODULE_3__","fetch","then","response","text","result","read","options","_src_ol_source_WMTS_js__WEBPACK_IMPORTED_MODULE_11__","layer","matrixSet","wrapX","tilePixelRatio","startResolution","_src_ol_extent_js__WEBPACK_IMPORTED_MODULE_2__","getExtent","resolutions","Array","i","ii","length","Math","pow","serverType","tileGrid","_src_ol_tilegrid_TileGrid_js__WEBPACK_IMPORTED_MODULE_12__","extent","tileSize","map","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","target","view","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","center","zoom","baseLayerSelect","document","getElementById","overlayLayerSelect","viewProjSelect","renderEdgesCheckbox","renderEdges","updateViewProjection","newProj","value","newProjExtent","newView","undefined","setView","onchange","updateRenderEdgesOnLayer","getSource","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_10__","setRenderReprojectionEdges","setOpacity","getLayers","setAt","checked","forEach"],"mappings":"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","file":"reprojection.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {getWidth, getCenter} from '../src/ol/extent.js';\nimport WMTSCapabilities from '../src/ol/format/WMTSCapabilities.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport {get as getProjection} from '../src/ol/proj.js';\nimport {register} from '../src/ol/proj/proj4.js';\nimport {OSM, TileImage, TileWMS, XYZ} from '../src/ol/source.js';\nimport WMTS, {optionsFromCapabilities} from '../src/ol/source/WMTS.js';\nimport TileGrid from '../src/ol/tilegrid/TileGrid.js';\nimport proj4 from 'proj4';\n\n\nproj4.defs('EPSG:27700', '+proj=tmerc +lat_0=49 +lon_0=-2 +k=0.9996012717 ' +\n    '+x_0=400000 +y_0=-100000 +ellps=airy ' +\n    '+towgs84=446.448,-125.157,542.06,0.15,0.247,0.842,-20.489 ' +\n    '+units=m +no_defs');\nproj4.defs('EPSG:23032', '+proj=utm +zone=32 +ellps=intl ' +\n    '+towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs');\nproj4.defs('EPSG:5479', '+proj=lcc +lat_1=-76.66666666666667 +lat_2=' +\n    '-79.33333333333333 +lat_0=-78 +lon_0=163 +x_0=7000000 +y_0=5000000 ' +\n    '+ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs');\nproj4.defs('EPSG:21781', '+proj=somerc +lat_0=46.95240555555556 ' +\n    '+lon_0=7.439583333333333 +k_0=1 +x_0=600000 +y_0=200000 +ellps=bessel ' +\n    '+towgs84=674.4,15.1,405.3,0,0,0,0 +units=m +no_defs');\nproj4.defs('EPSG:3413', '+proj=stere +lat_0=90 +lat_ts=70 +lon_0=-45 +k=1 ' +\n    '+x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs');\nproj4.defs('EPSG:2163', '+proj=laea +lat_0=45 +lon_0=-100 +x_0=0 +y_0=0 ' +\n    '+a=6370997 +b=6370997 +units=m +no_defs');\nproj4.defs('ESRI:54009', '+proj=moll +lon_0=0 +x_0=0 +y_0=0 +datum=WGS84 ' +\n    '+units=m +no_defs');\nregister(proj4);\n\nconst proj27700 = getProjection('EPSG:27700');\nproj27700.setExtent([0, 0, 700000, 1300000]);\n\nconst proj23032 = getProjection('EPSG:23032');\nproj23032.setExtent([-1206118.71, 4021309.92, 1295389.00, 8051813.28]);\n\nconst proj5479 = getProjection('EPSG:5479');\nproj5479.setExtent([6825737.53, 4189159.80, 9633741.96, 5782472.71]);\n\nconst proj21781 = getProjection('EPSG:21781');\nproj21781.setExtent([485071.54, 75346.36, 828515.78, 299941.84]);\n\nconst proj3413 = getProjection('EPSG:3413');\nproj3413.setExtent([-4194304, -4194304, 4194304, 4194304]);\n\nconst proj2163 = getProjection('EPSG:2163');\nproj2163.setExtent([-8040784.5135, -2577524.9210, 3668901.4484, 4785105.1096]);\n\nconst proj54009 = getProjection('ESRI:54009');\nproj54009.setExtent([-18e6, -9e6, 18e6, 9e6]);\n\n\nconst layers = {};\n\nlayers['bng'] = new TileLayer({\n  source: new XYZ({\n    projection: 'EPSG:27700',\n    url: 'https://tileserver.maptiler.com/miniscale/{z}/{x}/{y}.png',\n    crossOrigin: '',\n    maxZoom: 6\n  })\n});\n\nlayers['osm'] = new TileLayer({\n  source: new OSM()\n});\n\nlayers['wms4326'] = new TileLayer({\n  source: new TileWMS({\n    url: 'https://ahocevar.com/geoserver/wms',\n    crossOrigin: '',\n    params: {\n      'LAYERS': 'ne:NE1_HR_LC_SR_W_DR',\n      'TILED': true\n    },\n    projection: 'EPSG:4326'\n  })\n});\n\nlayers['wms21781'] = new TileLayer({\n  source: new TileWMS({\n    attributions: '© <a href=\"http://www.geo.admin.ch/internet/geoportal/' +\n      'en/home.html\">Pixelmap 1:1000000 / geo.admin.ch</a>',\n    crossOrigin: 'anonymous',\n    params: {\n      'LAYERS': 'ch.swisstopo.pixelkarte-farbe-pk1000.noscale',\n      'FORMAT': 'image/jpeg'\n    },\n    url: 'https://wms.geo.admin.ch/',\n    projection: 'EPSG:21781'\n  })\n});\n\nconst parser = new WMTSCapabilities();\nconst url = 'https://map1.vis.earthdata.nasa.gov/wmts-arctic/' +\n    'wmts.cgi?SERVICE=WMTS&request=GetCapabilities';\nfetch(url).then(function(response) {\n  return response.text();\n}).then(function(text) {\n  const result = parser.read(text);\n  const options = optionsFromCapabilities(result, {\n    layer: 'OSM_Land_Mask',\n    matrixSet: 'EPSG3413_250m'\n  });\n  options.crossOrigin = '';\n  options.projection = 'EPSG:3413';\n  options.wrapX = false;\n  layers['wmts3413'] = new TileLayer({\n    source: new WMTS(/** @type {!module:ol/source/WMTS~Options} */ (options))\n  });\n});\n\nlayers['grandcanyon'] = new TileLayer({\n  source: new XYZ({\n    url: 'https://tileserver.maptiler.com/grandcanyon@2x/{z}/{x}/{y}.png',\n    crossOrigin: '',\n    tilePixelRatio: 2,\n    maxZoom: 15,\n    attributions: 'Tiles © USGS, rendered with ' +\n      '<a href=\"http://www.maptiler.com/\">MapTiler</a>'\n  })\n});\n\nconst startResolution =\n    getWidth(getProjection('EPSG:3857').getExtent()) / 256;\nconst resolutions = new Array(22);\nfor (let i = 0, ii = resolutions.length; i < ii; ++i) {\n  resolutions[i] = startResolution / Math.pow(2, i);\n}\n\nlayers['states'] = new TileLayer({\n  source: new TileWMS({\n    url: 'https://ahocevar.com/geoserver/wms',\n    crossOrigin: '',\n    params: {'LAYERS': 'topp:states'},\n    serverType: 'geoserver',\n    tileGrid: new TileGrid({\n      extent: [-13884991, 2870341, -7455066, 6338219],\n      resolutions: resolutions,\n      tileSize: [512, 256]\n    }),\n    projection: 'EPSG:3857'\n  })\n});\n\n\nconst map = new Map({\n  layers: [\n    layers['osm'],\n    layers['bng']\n  ],\n  target: 'map',\n  view: new View({\n    projection: 'EPSG:3857',\n    center: [0, 0],\n    zoom: 2\n  })\n});\n\n\nconst baseLayerSelect = document.getElementById('base-layer');\nconst overlayLayerSelect = document.getElementById('overlay-layer');\nconst viewProjSelect = document.getElementById('view-projection');\nconst renderEdgesCheckbox = document.getElementById('render-edges');\nlet renderEdges = false;\n\nfunction updateViewProjection() {\n  const newProj = getProjection(viewProjSelect.value);\n  const newProjExtent = newProj.getExtent();\n  const newView = new View({\n    projection: newProj,\n    center: getCenter(newProjExtent || [0, 0, 0, 0]),\n    zoom: 0,\n    extent: newProjExtent || undefined\n  });\n  map.setView(newView);\n\n  // Example how to prevent double occurrence of map by limiting layer extent\n  if (newProj == getProjection('EPSG:3857')) {\n    layers['bng'].setExtent([-1057216, 6405988, 404315, 8759696]);\n  } else {\n    layers['bng'].setExtent(undefined);\n  }\n}\n\n\n/**\n * Handle change event.\n */\nviewProjSelect.onchange = function() {\n  updateViewProjection();\n};\n\nupdateViewProjection();\n\nconst updateRenderEdgesOnLayer = function(layer) {\n  if (layer instanceof TileLayer) {\n    const source = layer.getSource();\n    if (source instanceof TileImage) {\n      source.setRenderReprojectionEdges(renderEdges);\n    }\n  }\n};\n\n\n/**\n * Handle change event.\n */\nbaseLayerSelect.onchange = function() {\n  const layer = layers[baseLayerSelect.value];\n  if (layer) {\n    layer.setOpacity(1);\n    updateRenderEdgesOnLayer(layer);\n    map.getLayers().setAt(0, layer);\n  }\n};\n\n\n/**\n * Handle change event.\n */\noverlayLayerSelect.onchange = function() {\n  const layer = layers[overlayLayerSelect.value];\n  if (layer) {\n    layer.setOpacity(0.7);\n    updateRenderEdgesOnLayer(layer);\n    map.getLayers().setAt(1, layer);\n  }\n};\n\n\n/**\n * Handle change event.\n */\nrenderEdgesCheckbox.onchange = function() {\n  renderEdges = renderEdgesCheckbox.checked;\n  map.getLayers().forEach(function(layer) {\n    updateRenderEdgesOnLayer(layer);\n  });\n};\n"],"sourceRoot":""}