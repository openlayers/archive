{"version":3,"sources":["webpack:///./hit-tolerance.js"],"names":["raster","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_2__","source","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_4__","style","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_8__","stroke","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_9__","color","width","feature","_src_ol_Feature_js__WEBPACK_IMPORTED_MODULE_6__","_src_ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_7__","vector","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_3__","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_5__","features","map","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","layers","target","view","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","center","zoom","hitTolerance","statusElement","document","getElementById","on","e","hit","forEachFeatureAtPixel","pixel","getStroke","setColor","innerHTML","changed","selectHitToleranceElement","circleCanvas","changeHitTolerance","size","parseInt","value","height","ctx","getContext","clearRect","beginPath","arc","Math","PI","fill","onchange"],"mappings":"oLAQA,MAAAA,EAAA,IAAAC,EAAA,GACAC,OAAA,IAAAC,EAAA,IAGAC,EAAA,IAAAC,EAAA,GACAC,OAAA,IAAAC,EAAA,GACAC,MAAA,QACAC,MAAA,MAIAC,EAAA,IAAAC,EAAA,MAAAC,EAAA,uBAEAC,EAAA,IAAAC,EAAA,GACAZ,OAAA,IAAAa,EAAA,GACAC,UAAAN,KAEAN,UAGAa,EAAA,IAAAC,EAAA,GACAC,QAAAnB,EAAAa,GACAO,OAAA,MACAC,KAAA,IAAAC,EAAA,GACAC,QAAA,KACAC,KAAA,MAIA,IAAAC,EAEA,MAAAC,EAAAC,SAAAC,eAAA,UAEAX,EAAAY,GAAA,uBAAAC,GACA,IAAAC,GAAA,EACAd,EAAAe,sBAAAF,EAAAG,MAAA,WACAF,GAAA,IAEAN,iBAEAM,GACA3B,EAAA8B,YAAAC,SAAA,SACAT,EAAAU,UAAA,6BAEAhC,EAAA8B,YAAAC,SAAA,SACAT,EAAAU,UAAA,6BAEA1B,EAAA2B,YAGA,MAAAC,EAAAX,SAAAC,eAAA,gBACAW,EAAAZ,SAAAC,eAAA,UAEAY,EAAA,WAGA,MAAAC,EAAA,GAFAhB,EAAAiB,SAAAJ,EAAAK,MAAA,KAEA,EACAJ,EAAA9B,MAAAgC,EACAF,EAAAK,OAAAH,EACA,MAAAI,EAAAN,EAAAO,WAAA,MACAD,EAAAE,UAAA,IAAAN,KACAI,EAAAG,YACAH,EAAAI,IAAAxB,EAAA,EAAAA,EAAA,EAAAA,EAAA,OAAAyB,KAAAC,IACAN,EAAAO,OACAP,EAAAvC,UAGAgC,EAAAe,SAAAb,EACAA","file":"hit-tolerance.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\nimport Feature from '../src/ol/Feature.js';\nimport LineString from '../src/ol/geom/LineString.js';\nimport {Stroke, Style} from '../src/ol/style.js';\n\nconst raster = new TileLayer({\n  source: new OSM()\n});\n\nconst style = new Style({\n  stroke: new Stroke({\n    color: 'black',\n    width: 1\n  })\n});\n\nconst feature = new Feature(new LineString([[-4000000, 0], [4000000, 0]]));\n\nconst vector = new VectorLayer({\n  source: new VectorSource({\n    features: [feature]\n  }),\n  style: style\n});\n\nconst map = new Map({\n  layers: [raster, vector],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n\nlet hitTolerance;\n\nconst statusElement = document.getElementById('status');\n\nmap.on('singleclick', function(e) {\n  let hit = false;\n  map.forEachFeatureAtPixel(e.pixel, function() {\n    hit = true;\n  }, {\n    hitTolerance: hitTolerance\n  });\n  if (hit) {\n    style.getStroke().setColor('green');\n    statusElement.innerHTML = '&nbsp;A feature got hit!';\n  } else {\n    style.getStroke().setColor('black');\n    statusElement.innerHTML = '&nbsp;No feature got hit.';\n  }\n  feature.changed();\n});\n\nconst selectHitToleranceElement = document.getElementById('hitTolerance');\nconst circleCanvas = document.getElementById('circle');\n\nconst changeHitTolerance = function() {\n  hitTolerance = parseInt(selectHitToleranceElement.value, 10);\n\n  const size = 2 * hitTolerance + 2;\n  circleCanvas.width = size;\n  circleCanvas.height = size;\n  const ctx = circleCanvas.getContext('2d');\n  ctx.clearRect(0, 0, size, size);\n  ctx.beginPath();\n  ctx.arc(hitTolerance + 1, hitTolerance + 1, hitTolerance + 0.5, 0, 2 * Math.PI);\n  ctx.fill();\n  ctx.stroke();\n};\n\nselectHitToleranceElement.onchange = changeHitTolerance;\nchangeHitTolerance();\n"],"sourceRoot":""}