{"version":3,"sources":["webpack:///./image-vector-layer.js"],"names":["style","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_5__","fill","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_6__","color","stroke","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_7__","width","text","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_8__","map","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","layers","_src_ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_3__","renderMode","source","_src_ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_4__","url","format","_src_ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_2__","feature","getText","setText","get","target","view","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","center","zoom","featureOverlay","highlight","displayFeatureInfo","pixel","forEachFeatureAtPixel","info","document","getElementById","innerHTML","getId","getSource","removeFeature","addFeature","on","evt","dragging","getEventPixel","originalEvent"],"mappings":"+KAQA,MAAAA,EAAA,IAAAC,EAAA,GACAC,KAAA,IAAAC,EAAA,GACAC,MAAA,6BAEAC,OAAA,IAAAC,EAAA,GACAF,MAAA,UACAG,MAAA,IAEAC,KAAA,IAAAC,EAAA,IAGAC,EAAA,IAAAC,EAAA,GACAC,QACA,IAAAC,EAAA,GACAC,WAAA,QACAC,OAAA,IAAAC,EAAA,GACAC,IAAA,iCACAC,OAAA,IAAAC,EAAA,IAEAnB,MAAA,SAAAoB,GAEA,OADApB,EAAAqB,UAAAC,QAAAF,EAAAG,IAAA,SACAvB,MAIAwB,OAAA,MACAC,KAAA,IAAAC,EAAA,GACAC,QAAA,KACAC,KAAA,MAIAC,EAAA,IAAAhB,EAAA,GACAE,OAAA,IAAAC,EAAA,EACAN,MACAV,MAAA,IAAAC,EAAA,GACAI,OAAA,IAAAC,EAAA,GACAF,MAAA,OACAG,MAAA,IAEAL,KAAA,IAAAC,EAAA,GACAC,MAAA,0BAKA,IAAA0B,EACA,MAAAC,EAAA,SAAAC,GAEA,MAAAZ,EAAAV,EAAAuB,sBAAAD,EAAA,SAAAZ,GACA,OAAAA,IAGAc,EAAAC,SAAAC,eAAA,QAEAF,EAAAG,UADAjB,EACAA,EAAAkB,QAAA,KAAAlB,EAAAG,IAAA,QAEA,SAGAH,IAAAU,IACAA,GACAD,EAAAU,YAAAC,cAAAV,GAEAV,GACAS,EAAAU,YAAAE,WAAArB,GAEAU,EAAAV,IAKAV,EAAAgC,GAAA,uBAAAC,GACA,GAAAA,EAAAC,SACA,OAEA,MAAAZ,EAAAtB,EAAAmC,cAAAF,EAAAG,eACAf,EAAAC,KAGAtB,EAAAgC,GAAA,iBAAAC,GACAZ,EAAAY,EAAAX","file":"image-vector-layer.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport GeoJSON from '../src/ol/format/GeoJSON.js';\nimport VectorLayer from '../src/ol/layer/Vector.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport {Fill, Stroke, Style, Text} from '../src/ol/style.js';\n\n\nconst style = new Style({\n  fill: new Fill({\n    color: 'rgba(255, 255, 255, 0.6)'\n  }),\n  stroke: new Stroke({\n    color: '#319FD3',\n    width: 1\n  }),\n  text: new Text()\n});\n\nconst map = new Map({\n  layers: [\n    new VectorLayer({\n      renderMode: 'image',\n      source: new VectorSource({\n        url: 'data/geojson/countries.geojson',\n        format: new GeoJSON()\n      }),\n      style: function(feature) {\n        style.getText().setText(feature.get('name'));\n        return style;\n      }\n    })\n  ],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 1\n  })\n});\n\nconst featureOverlay = new VectorLayer({\n  source: new VectorSource(),\n  map: map,\n  style: new Style({\n    stroke: new Stroke({\n      color: '#f00',\n      width: 1\n    }),\n    fill: new Fill({\n      color: 'rgba(255,0,0,0.1)'\n    })\n  })\n});\n\nlet highlight;\nconst displayFeatureInfo = function(pixel) {\n\n  const feature = map.forEachFeatureAtPixel(pixel, function(feature) {\n    return feature;\n  });\n\n  const info = document.getElementById('info');\n  if (feature) {\n    info.innerHTML = feature.getId() + ': ' + feature.get('name');\n  } else {\n    info.innerHTML = '&nbsp;';\n  }\n\n  if (feature !== highlight) {\n    if (highlight) {\n      featureOverlay.getSource().removeFeature(highlight);\n    }\n    if (feature) {\n      featureOverlay.getSource().addFeature(feature);\n    }\n    highlight = feature;\n  }\n\n};\n\nmap.on('pointermove', function(evt) {\n  if (evt.dragging) {\n    return;\n  }\n  const pixel = map.getEventPixel(evt.originalEvent);\n  displayFeatureInfo(pixel);\n});\n\nmap.on('click', function(evt) {\n  displayFeatureInfo(evt.pixel);\n});\n"],"sourceRoot":""}