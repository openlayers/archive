{"version":3,"sources":["webpack:///./vector-esri.js"],"names":["esrijsonFormat","_src_ol_format_EsriJSON_js__WEBPACK_IMPORTED_MODULE_2__","styleCache","ABANDONED","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_9__","fill","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_10__","color","stroke","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_11__","width","GAS","OIL","OILGAS","vectorSource","_src_ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_7__","loader","extent","resolution","projection","url","serviceUrl","encodeURIComponent","$","ajax","dataType","success","response","error","alert","message","details","join","features","readFeatures","featureProjection","length","addFeatures","strategy","Object","_src_ol_loadingstrategy_js__WEBPACK_IMPORTED_MODULE_5__","_src_ol_tilegrid_js__WEBPACK_IMPORTED_MODULE_12__","tileSize","vector","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_3__","source","style","feature","classify","get","raster","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_4__","_src_ol_source_XYZ_js__WEBPACK_IMPORTED_MODULE_8__","attributions","map","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","layers","target","document","getElementById","view","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","center","_src_ol_proj_js__WEBPACK_IMPORTED_MODULE_6__","zoom","displayFeatureInfo","pixel","forEachFeatureAtPixel","push","info","i","ii","innerHTML","getTarget","cursor","on","evt","dragging","getEventPixel","originalEvent"],"mappings":"8MAYA,MAIAA,EAAA,IAAAC,EAAA,EAEAC,GACAC,UAAA,IAAAC,EAAA,GACAC,KAAA,IAAAC,EAAA,GACAC,MAAA,6BAEAC,OAAA,IAAAC,EAAA,GACAF,MAAA,qBACAG,MAAA,OAGAC,IAAA,IAAAP,EAAA,GACAC,KAAA,IAAAC,EAAA,GACAC,MAAA,yBAEAC,OAAA,IAAAC,EAAA,GACAF,MAAA,2BACAG,MAAA,OAGAE,IAAA,IAAAR,EAAA,GACAC,KAAA,IAAAC,EAAA,GACAC,MAAA,0BAEAC,OAAA,IAAAC,EAAA,GACAF,MAAA,2BACAG,MAAA,MAGAG,OAAA,IAAAT,EAAA,GACAC,KAAA,IAAAC,EAAA,GACAC,MAAA,2BAEAC,OAAA,IAAAC,EAAA,GACAF,MAAA,2BACAG,MAAA,QAKAI,EAAA,IAAAC,EAAA,GACAC,OAAA,SAAAC,EAAAC,EAAAC,GACA,MAAAC,EAAAC,iLAEAC,mBAAA,WAA6BL,EAAA,cAC7BA,EAAA,cAAAA,EAAA,cAAAA,EAAA,GACA,wCACA,0EAEAM,EAAAC,MAAYJ,MAAAK,SAAA,QAAAC,QAAA,SAAAC,GACZ,GAAAA,EAAAC,MACAC,MAAAF,EAAAC,MAAAE,QAAA,KACAH,EAAAC,MAAAG,QAAAC,KAAA,WACO,CAEP,MAAAC,EAAAjC,EAAAkC,aAAAP,GACAQ,kBAAAhB,IAEAc,EAAAG,OAAA,GACAtB,EAAAuB,YAAAJ,QAKAK,SAAAC,OAAAC,EAAA,EAAAD,QAAAE,EAAA,EAAAF,EACAG,SAAA,SAIAC,EAAA,IAAAC,EAAA,GACAC,OAAA/B,EACAgC,MAAA,SAAAC,GACA,MAAAC,EAAAD,EAAAE,IAAA,cACA,OAAA/C,EAAA8C,MAIAE,EAAA,IAAAC,EAAA,GACAN,OAAA,IAAAO,EAAA,GACAC,aAAA,+GAEAjC,IAAA,qGAKAkC,EAAA,IAAAC,EAAA,GACAC,QAAAN,EAAAP,GACAc,OAAAC,SAAAC,eAAA,OACAC,KAAA,IAAAC,EAAA,GACAC,OAAAvB,OAAAwB,EAAA,EAAAxB,GAAA,kBACAyB,KAAA,MAIAC,EAAA,SAAAC,GACA,MAAAjC,KAIA,GAHAqB,EAAAa,sBAAAD,EAAA,SAAAnB,GACAd,EAAAmC,KAAArB,KAEAd,EAAAG,OAAA,GACA,MAAAiC,KACA,IAAAC,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAtC,EAAAG,OAAqCkC,EAAAC,IAAQD,EAC7CD,EAAAD,KAAAnC,EAAAqC,GAAArB,IAAA,eAEAS,SAAAC,eAAA,QAAAa,UAAAH,EAAArC,KAAA,mBACAsB,EAAAmB,YAAA3B,MAAA4B,OAAA,eAEAhB,SAAAC,eAAA,QAAAa,UAAA,SACAlB,EAAAmB,YAAA3B,MAAA4B,OAAA,IAIApB,EAAAqB,GAAA,uBAAAC,GACA,GAAAA,EAAAC,SACA,OAEA,MAAAX,EAAAZ,EAAAwB,cAAAF,EAAAG,eACAd,EAAAC,KAGAZ,EAAAqB,GAAA,iBAAAC,GACAX,EAAAW,EAAAV","file":"vector-esri.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport EsriJSON from '../src/ol/format/EsriJSON.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {tile as tileStrategy} from '../src/ol/loadingstrategy.js';\nimport {fromLonLat} from '../src/ol/proj.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport XYZ from '../src/ol/source/XYZ.js';\nimport {Fill, Stroke, Style} from '../src/ol/style.js';\nimport {createXYZ} from '../src/ol/tilegrid.js';\n\n\nconst serviceUrl = 'https://sampleserver3.arcgisonline.com/ArcGIS/rest/services/' +\n    'Petroleum/KSFields/FeatureServer/';\nconst layer = '0';\n\nconst esrijsonFormat = new EsriJSON();\n\nconst styleCache = {\n  'ABANDONED': new Style({\n    fill: new Fill({\n      color: 'rgba(225, 225, 225, 255)'\n    }),\n    stroke: new Stroke({\n      color: 'rgba(0, 0, 0, 255)',\n      width: 0.4\n    })\n  }),\n  'GAS': new Style({\n    fill: new Fill({\n      color: 'rgba(255, 0, 0, 255)'\n    }),\n    stroke: new Stroke({\n      color: 'rgba(110, 110, 110, 255)',\n      width: 0.4\n    })\n  }),\n  'OIL': new Style({\n    fill: new Fill({\n      color: 'rgba(56, 168, 0, 255)'\n    }),\n    stroke: new Stroke({\n      color: 'rgba(110, 110, 110, 255)',\n      width: 0\n    })\n  }),\n  'OILGAS': new Style({\n    fill: new Fill({\n      color: 'rgba(168, 112, 0, 255)'\n    }),\n    stroke: new Stroke({\n      color: 'rgba(110, 110, 110, 255)',\n      width: 0.4\n    })\n  })\n};\n\nconst vectorSource = new VectorSource({\n  loader: function(extent, resolution, projection) {\n    const url = serviceUrl + layer + '/query/?f=json&' +\n        'returnGeometry=true&spatialRel=esriSpatialRelIntersects&geometry=' +\n        encodeURIComponent('{\"xmin\":' + extent[0] + ',\"ymin\":' +\n            extent[1] + ',\"xmax\":' + extent[2] + ',\"ymax\":' + extent[3] +\n            ',\"spatialReference\":{\"wkid\":102100}}') +\n        '&geometryType=esriGeometryEnvelope&inSR=102100&outFields=*' +\n        '&outSR=102100';\n    $.ajax({url: url, dataType: 'jsonp', success: function(response) {\n      if (response.error) {\n        alert(response.error.message + '\\n' +\n            response.error.details.join('\\n'));\n      } else {\n        // dataProjection will be read from document\n        const features = esrijsonFormat.readFeatures(response, {\n          featureProjection: projection\n        });\n        if (features.length > 0) {\n          vectorSource.addFeatures(features);\n        }\n      }\n    }});\n  },\n  strategy: tileStrategy(createXYZ({\n    tileSize: 512\n  }))\n});\n\nconst vector = new VectorLayer({\n  source: vectorSource,\n  style: function(feature) {\n    const classify = feature.get('activeprod');\n    return styleCache[classify];\n  }\n});\n\nconst raster = new TileLayer({\n  source: new XYZ({\n    attributions: 'Tiles Â© <a href=\"https://services.arcgisonline.com/ArcGIS/' +\n        'rest/services/World_Topo_Map/MapServer\">ArcGIS</a>',\n    url: 'https://server.arcgisonline.com/ArcGIS/rest/services/' +\n        'World_Topo_Map/MapServer/tile/{z}/{y}/{x}'\n  })\n});\n\nconst map = new Map({\n  layers: [raster, vector],\n  target: document.getElementById('map'),\n  view: new View({\n    center: fromLonLat([-97.6114, 38.8403]),\n    zoom: 7\n  })\n});\n\nconst displayFeatureInfo = function(pixel) {\n  const features = [];\n  map.forEachFeatureAtPixel(pixel, function(feature) {\n    features.push(feature);\n  });\n  if (features.length > 0) {\n    const info = [];\n    let i, ii;\n    for (i = 0, ii = features.length; i < ii; ++i) {\n      info.push(features[i].get('field_name'));\n    }\n    document.getElementById('info').innerHTML = info.join(', ') || '(unknown)';\n    map.getTarget().style.cursor = 'pointer';\n  } else {\n    document.getElementById('info').innerHTML = '&nbsp;';\n    map.getTarget().style.cursor = '';\n  }\n};\n\nmap.on('pointermove', function(evt) {\n  if (evt.dragging) {\n    return;\n  }\n  const pixel = map.getEventPixel(evt.originalEvent);\n  displayFeatureInfo(pixel);\n});\n\nmap.on('click', function(evt) {\n  displayFeatureInfo(evt.pixel);\n});\n"],"sourceRoot":""}