{"version":3,"sources":["webpack:///./wmts.js"],"names":["projection","Object","_src_ol_proj_js__WEBPACK_IMPORTED_MODULE_5__","projectionExtent","getExtent","size","_src_ol_extent_js__WEBPACK_IMPORTED_MODULE_3__","resolutions","Array","matrixIds","z","Math","pow","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","layers","_src_ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_4__","source","_src_ol_source_OSM_js__WEBPACK_IMPORTED_MODULE_6__","opacity","_src_ol_source_WMTS_js__WEBPACK_IMPORTED_MODULE_7__","attributions","url","layer","matrixSet","format","tileGrid","_src_ol_tilegrid_WMTS_js__WEBPACK_IMPORTED_MODULE_8__","origin","style","wrapX","target","controls","_src_ol_control_js__WEBPACK_IMPORTED_MODULE_2__","attributionOptions","collapsible","view","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","center","zoom"],"mappings":"0KAWA,MAAAA,EAAAC,OAAAC,EAAA,EAAAD,CAAA,aACAE,EAAAH,EAAAI,YACAC,EAAAJ,OAAAK,EAAA,EAAAL,CAAAE,GAAA,IACAI,EAAA,IAAAC,MAAA,IACAC,EAAA,IAAAD,MAAA,IACA,QAAAE,EAAA,EAAeA,EAAA,KAAQA,EAEvBH,EAAAG,GAAAL,EAAAM,KAAAC,IAAA,EAAAF,GACAD,EAAAC,KAGA,IAAAG,EAAA,GACAC,QACA,IAAAC,EAAA,GACAC,OAAA,IAAAC,EAAA,EACAC,QAAA,KAEA,IAAAH,EAAA,GACAG,QAAA,GACAF,OAAA,IAAAG,EAAA,GACAC,aAAA,qIAEAC,IAAA,6GAEAC,MAAA,IACAC,UAAA,YACAC,OAAA,YACAxB,aACAyB,SAAA,IAAAC,EAAA,GACAC,OAAA1B,OAAAK,EAAA,EAAAL,CAAAE,GACAI,cACAE,cAEAmB,MAAA,UACAC,OAAA,OAIAC,OAAA,MACAC,SAAA9B,OAAA+B,EAAA,EAAA/B,EACAgC,oBACAC,aAAA,KAGAC,KAAA,IAAAC,EAAA,GACAC,SAAA,kBACAC,KAAA","file":"wmts.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {defaults as defaultControls} from '../src/ol/control.js';\nimport {getWidth, getTopLeft} from '../src/ol/extent.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport {get as getProjection} from '../src/ol/proj.js';\nimport OSM from '../src/ol/source/OSM.js';\nimport WMTS from '../src/ol/source/WMTS.js';\nimport WMTSTileGrid from '../src/ol/tilegrid/WMTS.js';\n\n\nconst projection = getProjection('EPSG:3857');\nconst projectionExtent = projection.getExtent();\nconst size = getWidth(projectionExtent) / 256;\nconst resolutions = new Array(14);\nconst matrixIds = new Array(14);\nfor (let z = 0; z < 14; ++z) {\n  // generate resolutions and matrixIds arrays for this WMTS\n  resolutions[z] = size / Math.pow(2, z);\n  matrixIds[z] = z;\n}\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM(),\n      opacity: 0.7\n    }),\n    new TileLayer({\n      opacity: 0.7,\n      source: new WMTS({\n        attributions: 'Tiles Â© <a href=\"https://services.arcgisonline.com/arcgis/rest/' +\n            'services/Demographics/USA_Population_Density/MapServer/\">ArcGIS</a>',\n        url: 'https://services.arcgisonline.com/arcgis/rest/' +\n            'services/Demographics/USA_Population_Density/MapServer/WMTS/',\n        layer: '0',\n        matrixSet: 'EPSG:3857',\n        format: 'image/png',\n        projection: projection,\n        tileGrid: new WMTSTileGrid({\n          origin: getTopLeft(projectionExtent),\n          resolutions: resolutions,\n          matrixIds: matrixIds\n        }),\n        style: 'default',\n        wrapX: true\n      })\n    })\n  ],\n  target: 'map',\n  controls: defaultControls({\n    attributionOptions: {\n      collapsible: false\n    }\n  }),\n  view: new View({\n    center: [-11158582, 4813697],\n    zoom: 4\n  })\n});\n"],"sourceRoot":""}