{"version":3,"sources":["webpack:///./box-selection.js"],"names":["vectorSource","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_9__","url","format","_src_ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_3__","map","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","layers","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_7__","source","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_10__","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_8__","target","view","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","center","zoom","select","_src_ol_interaction_js__WEBPACK_IMPORTED_MODULE_5__","addInteraction","selectedFeatures","getFeatures","dragBox","_src_ol_interaction_js__WEBPACK_IMPORTED_MODULE_6__","condition","_src_ol_events_condition_js__WEBPACK_IMPORTED_MODULE_2__","on","extent","getGeometry","getExtent","forEachFeatureIntersectingExtent","feature","push","clear","infoBox","document","getElementById","names","getArray","get","length","innerHTML","join"],"mappings":"6LASA,MAAAA,EAAA,IAAAC,EAAA,GACAC,IAAA,iCACAC,OAAA,IAAAC,EAAA,IAIAC,EAAA,IAAAC,EAAA,GACAC,QACA,IAAAC,EAAA,GACAC,OAAA,IAAAC,EAAA,IAEA,IAAAC,EAAA,GACAF,OAAAT,KAGAY,OAAA,MACAC,KAAA,IAAAC,EAAA,GACAC,QAAA,KACAC,KAAA,MAKAC,EAAA,IAAAC,EAAA,EACAb,EAAAc,eAAAF,GAEA,MAAAG,EAAAH,EAAAI,cAGAC,EAAA,IAAAC,EAAA,GACAC,UAAAC,EAAA,IAGApB,EAAAc,eAAAG,GAEAA,EAAAI,GAAA,oBAGA,MAAAC,EAAAL,EAAAM,cAAAC,YACA7B,EAAA8B,iCAAAH,EAAA,SAAAI,GACAX,EAAAY,KAAAD,OAKAT,EAAAI,GAAA,sBACAN,EAAAa,UAGA,MAAAC,EAAAC,SAAAC,eAAA,QAEAhB,EAAAM,IAAA,2BACA,MAAAW,EAAAjB,EAAAkB,WAAAjC,IAAA,SAAA0B,GACA,OAAAA,EAAAQ,IAAA,UAEAF,EAAAG,OAAA,EACAN,EAAAO,UAAAJ,EAAAK,KAAA,MAEAR,EAAAO,UAAA","file":"box-selection.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {platformModifierKeyOnly} from '../src/ol/events/condition.js';\nimport GeoJSON from '../src/ol/format/GeoJSON.js';\nimport {DragBox, Select} from '../src/ol/interaction.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\n\n\nconst vectorSource = new VectorSource({\n  url: 'data/geojson/countries.geojson',\n  format: new GeoJSON()\n});\n\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM()\n    }),\n    new VectorLayer({\n      source: vectorSource\n    })\n  ],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n\n// a normal select interaction to handle click\nconst select = new Select();\nmap.addInteraction(select);\n\nconst selectedFeatures = select.getFeatures();\n\n// a DragBox interaction used to select features by drawing boxes\nconst dragBox = new DragBox({\n  condition: platformModifierKeyOnly\n});\n\nmap.addInteraction(dragBox);\n\ndragBox.on('boxend', function() {\n  // features that intersect the box are added to the collection of\n  // selected features\n  const extent = dragBox.getGeometry().getExtent();\n  vectorSource.forEachFeatureIntersectingExtent(extent, function(feature) {\n    selectedFeatures.push(feature);\n  });\n});\n\n// clear selection when drawing a new box and when clicking on the map\ndragBox.on('boxstart', function() {\n  selectedFeatures.clear();\n});\n\nconst infoBox = document.getElementById('info');\n\nselectedFeatures.on(['add', 'remove'], function() {\n  const names = selectedFeatures.getArray().map(function(feature) {\n    return feature.get('name');\n  });\n  if (names.length > 0) {\n    infoBox.innerHTML = names.join(', ');\n  } else {\n    infoBox.innerHTML = 'No countries selected';\n  }\n});\n"],"sourceRoot":""}