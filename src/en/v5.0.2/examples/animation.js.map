{"version":3,"sources":["webpack:///./animation.js"],"names":["london","Object","_src_ol_proj_js__WEBPACK_IMPORTED_MODULE_4__","moscow","istanbul","rome","bern","view","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","center","zoom","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","target","layers","_src_ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_3__","preload","source","_src_ol_source_OSM_js__WEBPACK_IMPORTED_MODULE_5__","loadTilesWhileAnimating","bounce","t","s","p","l","elastic","Math","pow","sin","PI","onClick","id","callback","document","getElementById","addEventListener","flyTo","location","done","getZoom","parts","called","complete","animate","duration","rotation","getRotation","anchor","easing","_src_ol_easing_js__WEBPACK_IMPORTED_MODULE_2__","getCenter","locations","index","next","more","length","setTimeout","alert"],"mappings":"kJAOA,MAAAA,EAAAC,OAAAC,EAAA,EAAAD,GAAA,mBACAE,EAAAF,OAAAC,EAAA,EAAAD,EAAA,kBACAG,EAAAH,OAAAC,EAAA,EAAAD,EAAA,kBACAI,EAAAJ,OAAAC,EAAA,EAAAD,EAAA,YACAK,EAAAL,OAAAC,EAAA,EAAAD,EAAA,eAEAM,EAAA,IAAAC,EAAA,GACAC,OAAAL,EACAM,KAAA,IAGA,IAAAC,EAAA,GACAC,OAAA,MACAC,QACA,IAAAC,EAAA,GACAC,QAAA,EACAC,OAAA,IAAAC,EAAA,KAKAC,yBAAA,EACAX,SAIA,SAAAY,EAAAC,GACA,MAAAC,EAAA,OACAC,EAAA,KACA,IAAAC,EAiBA,OAfAA,EADAH,EAAA,EAAAE,EACAD,EAAAD,IAEAA,EAAA,EAAAE,EAEAD,GADAD,GAAA,IAAAE,GACAF,EAAA,IAEAA,EAAA,IAAAE,EAEAD,GADAD,GAAA,KAAAE,GACAF,EAAA,MAGAC,GADAD,GAAA,MAAAE,GACAF,EAAA,QAQA,SAAAI,EAAAJ,GACA,OAAAK,KAAAC,IAAA,MAAAN,GAAAK,KAAAE,KAAAP,EAAA,SAAAK,KAAAG,IAAA,MAGA,SAAAC,EAAAC,EAAAC,GACAC,SAAAC,eAAAH,GAAAI,iBAAA,QAAAH,GAqEA,SAAAI,EAAAC,EAAAC,GACA,MACA3B,EAAAH,EAAA+B,UACA,IAAAC,EAAA,EACAC,GAAA,EACA,SAAAT,EAAAU,GAEAD,GAGA,MAJAD,GAIAE,IACAD,GAAA,EACAH,EAAAI,IAGAlC,EAAAmC,SACAjC,OAAA2B,EACAO,SAhBA,KAiBGZ,GACHxB,EAAAmC,SACAhC,OAAA,EACAiC,eAEAjC,OACAiC,cACGZ,GA3FHF,EAAA,yBACAtB,EAAAmC,SACAE,SAAArC,EAAAsC,cAAApB,KAAAG,GAAA,MAIAC,EAAA,0BACAtB,EAAAmC,SACAE,SAAArC,EAAAsC,cAAApB,KAAAG,GAAA,MAIAC,EAAA,gCAEA,MAAAe,EAAArC,EAAAsC,cACAtC,EAAAmC,SACAE,WAAAnB,KAAAG,GACAkB,OAAAzC,EACA0C,OAAAC,EAAA,IAEAJ,WAAA,EAAAnB,KAAAG,GACAkB,OAAAzC,EACA0C,OAAAC,EAAA,MAIAnB,EAAA,2BACAtB,EAAAmC,SACAjC,OAAAT,EACA2C,SAAA,QAIAd,EAAA,+BACAtB,EAAAmC,SACAjC,OAAAN,EACAwC,SAAA,IACAI,OAAAvB,MAIAK,EAAA,gCACAtB,EAAAmC,SACAjC,OAAAL,EACAuC,SAAA,IACAI,OAAA5B,MAIAU,EAAA,0BAEA,MAAApB,EAAAF,EAAA0C,YACA1C,EAAAmC,SACAjC,QACAA,EAAA,IAAAJ,EAAA,GAAAI,EAAA,MACAA,EAAA,IAAAJ,EAAA,GAAAI,EAAA,OAEAmC,SAAAnB,KAAAG,GACAmB,OAAAC,EAAA,IAEAvC,OAAAJ,EACAuC,SAAA,EAAAnB,KAAAG,GACAmB,OAAAC,EAAA,MAgCAnB,EAAA,yBACAM,EAAA7B,EAAA,gBAwBAuB,EAAA,OArBA,WACA,MAAAqB,GAAAlD,EAAAM,EAAAD,EAAAF,EAAAC,GACA,IAAA+C,GAAA,GACA,SAAAC,EAAAC,GACAA,IACAF,EACAD,EAAAI,OAEAC,WAAA,WACApB,EAAAe,EAAAC,GAAAC,IAFA,IAAAD,EAAA,OAKAK,MAAA,iBAGAA,MAAA,kBAGAJ,EAAA","file":"animation.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {easeIn, easeOut} from '../src/ol/easing.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport {fromLonLat} from '../src/ol/proj.js';\nimport OSM from '../src/ol/source/OSM.js';\n\nconst london = fromLonLat([-0.12755, 51.507222]);\nconst moscow = fromLonLat([37.6178, 55.7517]);\nconst istanbul = fromLonLat([28.9744, 41.0128]);\nconst rome = fromLonLat([12.5, 41.9]);\nconst bern = fromLonLat([7.4458, 46.95]);\n\nconst view = new View({\n  center: istanbul,\n  zoom: 6\n});\n\nconst map = new Map({\n  target: 'map',\n  layers: [\n    new TileLayer({\n      preload: 4,\n      source: new OSM()\n    })\n  ],\n  // Improve user experience by loading tiles while animating. Will make\n  // animations stutter on mobile or slow devices.\n  loadTilesWhileAnimating: true,\n  view: view\n});\n\n// A bounce easing method (from https://github.com/DmitryBaranovskiy/raphael).\nfunction bounce(t) {\n  const s = 7.5625;\n  const p = 2.75;\n  let l;\n  if (t < (1 / p)) {\n    l = s * t * t;\n  } else {\n    if (t < (2 / p)) {\n      t -= (1.5 / p);\n      l = s * t * t + 0.75;\n    } else {\n      if (t < (2.5 / p)) {\n        t -= (2.25 / p);\n        l = s * t * t + 0.9375;\n      } else {\n        t -= (2.625 / p);\n        l = s * t * t + 0.984375;\n      }\n    }\n  }\n  return l;\n}\n\n// An elastic easing method (from https://github.com/DmitryBaranovskiy/raphael).\nfunction elastic(t) {\n  return Math.pow(2, -10 * t) * Math.sin((t - 0.075) * (2 * Math.PI) / 0.3) + 1;\n}\n\nfunction onClick(id, callback) {\n  document.getElementById(id).addEventListener('click', callback);\n}\n\nonClick('rotate-left', function() {\n  view.animate({\n    rotation: view.getRotation() + Math.PI / 2\n  });\n});\n\nonClick('rotate-right', function() {\n  view.animate({\n    rotation: view.getRotation() - Math.PI / 2\n  });\n});\n\nonClick('rotate-around-rome', function() {\n  // Rotation animation takes the shortest arc, so animate in two parts\n  const rotation = view.getRotation();\n  view.animate({\n    rotation: rotation + Math.PI,\n    anchor: rome,\n    easing: easeIn\n  }, {\n    rotation: rotation + 2 * Math.PI,\n    anchor: rome,\n    easing: easeOut\n  });\n});\n\nonClick('pan-to-london', function() {\n  view.animate({\n    center: london,\n    duration: 2000\n  });\n});\n\nonClick('elastic-to-moscow', function() {\n  view.animate({\n    center: moscow,\n    duration: 2000,\n    easing: elastic\n  });\n});\n\nonClick('bounce-to-istanbul', function() {\n  view.animate({\n    center: istanbul,\n    duration: 2000,\n    easing: bounce\n  });\n});\n\nonClick('spin-to-rome', function() {\n  // Rotation animation takes the shortest arc, so animate in two parts\n  const center = view.getCenter();\n  view.animate({\n    center: [\n      center[0] + (rome[0] - center[0]) / 2,\n      center[1] + (rome[1] - center[1]) / 2\n    ],\n    rotation: Math.PI,\n    easing: easeIn\n  }, {\n    center: rome,\n    rotation: 2 * Math.PI,\n    easing: easeOut\n  });\n});\n\nfunction flyTo(location, done) {\n  const duration = 2000;\n  const zoom = view.getZoom();\n  let parts = 2;\n  let called = false;\n  function callback(complete) {\n    --parts;\n    if (called) {\n      return;\n    }\n    if (parts === 0 || !complete) {\n      called = true;\n      done(complete);\n    }\n  }\n  view.animate({\n    center: location,\n    duration: duration\n  }, callback);\n  view.animate({\n    zoom: zoom - 1,\n    duration: duration / 2\n  }, {\n    zoom: zoom,\n    duration: duration / 2\n  }, callback);\n}\n\nonClick('fly-to-bern', function() {\n  flyTo(bern, function() {});\n});\n\nfunction tour() {\n  const locations = [london, bern, rome, moscow, istanbul];\n  let index = -1;\n  function next(more) {\n    if (more) {\n      ++index;\n      if (index < locations.length) {\n        const delay = index === 0 ? 0 : 750;\n        setTimeout(function() {\n          flyTo(locations[index], next);\n        }, delay);\n      } else {\n        alert('Tour complete');\n      }\n    } else {\n      alert('Tour cancelled');\n    }\n  }\n  next(true);\n}\n\nonClick('tour', tour);\n"],"sourceRoot":""}