{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../src/ol/util.js","webpack:///../src/ol/extent.js","webpack:///../src/ol/centerconstraint.js","webpack:///../src/ol/View.js","webpack:///../src/ol/resolutionconstraint.js","webpack:///../src/ol/geom/flat/textpath.js","webpack:///../src/ol/render/canvas/Instruction.js","webpack:///../src/ol/render/canvas/Replay.js","webpack:///../src/ol/render/canvas/ImageReplay.js","webpack:///../src/ol/render/canvas/LineStringReplay.js","webpack:///../src/ol/render/canvas/PolygonReplay.js","webpack:///../src/ol/geom/flat/straightchunk.js","webpack:///../src/ol/render/canvas/TextReplay.js","webpack:///../src/ol/render/canvas/ReplayGroup.js","webpack:///../src/ol/renderer/canvas/VectorLayer.js","webpack:///../src/ol/renderer/canvas/VectorTileLayer.js","webpack:///../src/ol/Map.js","webpack:///../src/ol/layer/Tile.js","webpack:///../src/ol/source/OSM.js","webpack:///../src/ol/xml.js","webpack:///../src/ol/format/xsd.js","webpack:///../src/ol/proj/epsg3857.js","webpack:///../src/ol/proj/epsg4326.js","webpack:///../src/ol/proj/projections.js","webpack:///../src/ol/proj.js","webpack:///../src/ol/events.js","webpack:///../src/ol/geom/GeometryType.js","webpack:///../src/ol/webgl.js","webpack:///../src/ol/events/EventType.js","webpack:///../src/ol/source/Vector.js","webpack:///../src/ol/obj.js","webpack:///../src/ol/array.js","webpack:///../src/ol/transform.js","webpack:///../src/ol/TileState.js","webpack:///../src/ol/math.js","webpack:///../src/ol/geom/GeometryLayout.js","webpack:///../src/ol/Feature.js","webpack:///../src/ol/render/canvas.js","webpack:///../src/ol/asserts.js","webpack:///../src/ol/functions.js","webpack:///../src/ol/geom/Point.js","webpack:///../src/ol/dom.js","webpack:///../src/ol/format/GeoJSON.js","webpack:///../src/ol/layer/Vector.js","webpack:///../src/ol/Object.js","webpack:///../src/ol/coordinate.js","webpack:///../src/ol/geom/LineString.js","webpack:///../src/ol/ImageState.js","webpack:///../src/ol/events/Event.js","webpack:///../src/ol/events/condition.js","webpack:///../src/ol/geom/Polygon.js","webpack:///../src/ol/render/ReplayType.js","webpack:///../src/ol/interaction/Pointer.js","webpack:///../src/ol/MapBrowserEventType.js","webpack:///../src/ol/format/Feature.js","webpack:///../src/ol/ViewHint.js","webpack:///../src/ol/interaction/Interaction.js","webpack:///../src/ol/source/BingMaps.js","webpack:///../src/ol/css.js","webpack:///../src/ol/has.js","webpack:///../src/ol/source/State.js","webpack:///../src/ol/format/GMLBase.js","webpack:///../src/ol/Kinetic.js","webpack:///../src/ol/interaction/DoubleClickZoom.js","webpack:///../src/ol/interaction/DragPan.js","webpack:///../src/ol/interaction/DragRotate.js","webpack:///../src/ol/interaction/DragZoom.js","webpack:///../src/ol/events/KeyCode.js","webpack:///../src/ol/interaction/KeyboardPan.js","webpack:///../src/ol/interaction/KeyboardZoom.js","webpack:///../src/ol/interaction/PinchRotate.js","webpack:///../src/ol/interaction.js","webpack:///../src/ol/source/XYZ.js","webpack:///../src/ol/control/Control.js","webpack:///../src/ol/Collection.js","webpack:///../src/ol/geom/SimpleGeometry.js","webpack:///../src/ol/easing.js","webpack:///../src/ol/tilecoord.js","webpack:///../src/ol/size.js","webpack:///../src/ol/LayerType.js","webpack:///../src/ol/geom/flat/transform.js","webpack:///../src/ol/CollectionEventType.js","webpack:///../src/ol/source/TileJSON.js","webpack:///../src/ol/proj/Units.js","webpack:///../src/ol/tilegrid.js","webpack:///../src/ol/proj/Projection.js","webpack:///../src/ol/reproj/Tile.js","webpack:///../src/ol/source/TileImage.js","webpack:///../src/ol/reproj/Image.js","webpack:///../src/ol/source/Image.js","webpack:///../node_modules/proj4/lib/global.js","webpack:///../node_modules/proj4/lib/constants/values.js","webpack:///../node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///../node_modules/proj4/lib/constants/units.js","webpack:///../node_modules/proj4/lib/match.js","webpack:///../node_modules/proj4/lib/projString.js","webpack:///../node_modules/wkt-parser/parser.js","webpack:///../node_modules/wkt-parser/process.js","webpack:///../node_modules/wkt-parser/index.js","webpack:///../node_modules/proj4/lib/defs.js","webpack:///../node_modules/proj4/lib/parseCode.js","webpack:///../node_modules/proj4/lib/extend.js","webpack:///../node_modules/proj4/lib/common/msfnz.js","webpack:///../node_modules/proj4/lib/common/sign.js","webpack:///../node_modules/proj4/lib/common/adjust_lon.js","webpack:///../node_modules/proj4/lib/common/tsfnz.js","webpack:///../node_modules/proj4/lib/common/phi2z.js","webpack:///../node_modules/proj4/lib/projections/longlat.js","webpack:///../node_modules/proj4/lib/projections.js","webpack:///../node_modules/proj4/lib/projections/merc.js","webpack:///../node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///../node_modules/proj4/lib/constants/Datum.js","webpack:///../node_modules/proj4/lib/datum.js","webpack:///../node_modules/proj4/lib/Proj.js","webpack:///../node_modules/proj4/lib/deriveConstants.js","webpack:///../node_modules/proj4/lib/datum_transform.js","webpack:///../node_modules/proj4/lib/datumUtils.js","webpack:///../node_modules/proj4/lib/adjust_axis.js","webpack:///../node_modules/proj4/lib/common/toPoint.js","webpack:///../node_modules/proj4/lib/checkSanity.js","webpack:///../node_modules/proj4/lib/transform.js","webpack:///../node_modules/proj4/lib/core.js","webpack:///../node_modules/mgrs/mgrs.js","webpack:///../node_modules/proj4/lib/Point.js","webpack:///../node_modules/proj4/lib/common/pj_enfn.js","webpack:///../node_modules/proj4/lib/common/pj_mlfn.js","webpack:///../node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///../node_modules/proj4/lib/projections/tmerc.js","webpack:///../node_modules/proj4/lib/common/sinh.js","webpack:///../node_modules/proj4/lib/common/hypot.js","webpack:///../node_modules/proj4/lib/common/asinhy.js","webpack:///../node_modules/proj4/lib/common/log1py.js","webpack:///../node_modules/proj4/lib/common/gatg.js","webpack:///../node_modules/proj4/lib/common/clens.js","webpack:///../node_modules/proj4/lib/common/clens_cmplx.js","webpack:///../node_modules/proj4/lib/common/cosh.js","webpack:///../node_modules/proj4/lib/projections/etmerc.js","webpack:///../node_modules/proj4/lib/common/adjust_zone.js","webpack:///../node_modules/proj4/lib/projections/utm.js","webpack:///../node_modules/proj4/lib/common/srat.js","webpack:///../node_modules/proj4/lib/projections/gauss.js","webpack:///../node_modules/proj4/lib/projections/sterea.js","webpack:///../node_modules/proj4/lib/projections/stere.js","webpack:///../node_modules/proj4/lib/projections/somerc.js","webpack:///../node_modules/proj4/lib/projections/omerc.js","webpack:///../node_modules/proj4/lib/projections/lcc.js","webpack:///../node_modules/proj4/lib/projections/krovak.js","webpack:///../node_modules/proj4/lib/common/mlfn.js","webpack:///../node_modules/proj4/lib/common/e0fn.js","webpack:///../node_modules/proj4/lib/common/e1fn.js","webpack:///../node_modules/proj4/lib/common/e2fn.js","webpack:///../node_modules/proj4/lib/common/e3fn.js","webpack:///../node_modules/proj4/lib/common/gN.js","webpack:///../node_modules/proj4/lib/common/adjust_lat.js","webpack:///../node_modules/proj4/lib/common/imlfn.js","webpack:///../node_modules/proj4/lib/projections/cass.js","webpack:///../node_modules/proj4/lib/common/qsfnz.js","webpack:///../node_modules/proj4/lib/projections/laea.js","webpack:///../node_modules/proj4/lib/common/asinz.js","webpack:///../node_modules/proj4/lib/projections/aea.js","webpack:///../node_modules/proj4/lib/projections/gnom.js","webpack:///../node_modules/proj4/lib/common/iqsfnz.js","webpack:///../node_modules/proj4/lib/projections/cea.js","webpack:///../node_modules/proj4/lib/projections/eqc.js","webpack:///../node_modules/proj4/lib/projections/poly.js","webpack:///../node_modules/proj4/lib/projections/nzmg.js","webpack:///../node_modules/proj4/lib/projections/mill.js","webpack:///../node_modules/proj4/lib/projections/sinu.js","webpack:///../node_modules/proj4/lib/projections/moll.js","webpack:///../node_modules/proj4/lib/projections/eqdc.js","webpack:///../node_modules/proj4/lib/projections/vandg.js","webpack:///../node_modules/proj4/lib/projections/aeqd.js","webpack:///../node_modules/proj4/lib/projections/ortho.js","webpack:///../node_modules/proj4/lib/projections/qsc.js","webpack:///../node_modules/proj4/lib/index.js","webpack:///../node_modules/proj4/projs.js","webpack:///../src/ol/source/TileWMS.js","webpack:///../src/ol/interaction/Draw.js","webpack:///../src/ol/layer/Layer.js","webpack:///../src/ol/events/EventTarget.js","webpack:///../src/ol/geom/MultiPoint.js","webpack:///../src/ol/geom/MultiLineString.js","webpack:///../src/ol/color.js","webpack:///../src/ol/source/Stamen.js","webpack:///../src/ol/style/Style.js","webpack:///../src/ol/Tile.js","webpack:///../src/ol/layer/Property.js","webpack:///../src/ol/render/EventType.js","webpack:///../src/ol/layer/Image.js","webpack:///../src/ol/render/replay.js","webpack:///../src/ol/style/IconOrigin.js","webpack:///../src/ol/ViewProperty.js","webpack:///../src/ol/tileurlfunction.js","webpack:///../src/ol/reproj/common.js","webpack:///../src/ol/extent/Relationship.js","webpack:///../src/ol/geom/MultiPolygon.js","webpack:///../src/ol/style/Text.js","webpack:///../src/ol/geom/flat/deflate.js","webpack:///../src/ol/geom/flat/inflate.js","webpack:///../src/ol/geom/Geometry.js","webpack:///../src/ol/geom/flat/reverse.js","webpack:///../src/ol/geom/flat/orient.js","webpack:///../src/ol/format/XMLFeature.js","webpack:///../src/ol/renderer/vector.js","webpack:///../src/ol/MapProperty.js","webpack:///../src/ol/Overlay.js","webpack:///../src/ol/colorlike.js","webpack:///../src/ol/style/IconAnchorUnits.js","webpack:///../src/ol/MapBrowserPointerEvent.js","webpack:///../src/ol/interaction/Select.js","webpack:///../src/ol/pointer/EventType.js","webpack:///../src/ol/OverlayPositioning.js","webpack:///../src/ol/source/WMTSRequestEncoding.js","webpack:///../src/ol/source/WMTS.js","webpack:///../src/ol/geom/flat/closest.js","webpack:///../src/ol/format/KML.js","webpack:///../src/ol/tilegrid/TileGrid.js","webpack:///../src/ol/format/FormatType.js","webpack:///../src/ol/geom/flat/contains.js","webpack:///../src/ol/source/VectorEventType.js","webpack:///../src/ol/uri.js","webpack:///../src/ol/string.js","webpack:///../src/ol/layer/VectorTileRenderType.js","webpack:///../src/ol/style/RegularShape.js","webpack:///../src/ol/VectorImageTile.js","webpack:///../src/ol/VectorTile.js","webpack:///../src/ol/source/VectorTile.js","webpack:///../src/ol/proj/proj4.js","webpack:///../src/ol/geom/flat/simplify.js","webpack:///../src/ol/style/Stroke.js","webpack:///../src/ol/Observable.js","webpack:///../src/ol/ObjectEventType.js","webpack:///../src/ol/source/Tile.js","webpack:///../src/ol/render/VectorContext.js","webpack:///../src/ol/style/Fill.js","webpack:///../src/ol/rotationconstraint.js","webpack:///../src/ol/pointer/EventSource.js","webpack:///../src/ol/renderer/canvas/TileLayer.js","webpack:///../src/ol/source/ImageWMS.js","webpack:///../src/ol/layer/VectorTile.js","webpack:///../src/ol/structs/RBush.js","webpack:///../src/ol/source/TileEventType.js","webpack:///../src/ol/source/UrlTile.js","webpack:///../src/ol/proj/transforms.js","webpack:///../src/ol/loadingstrategy.js","webpack:///../src/ol/reproj.js","webpack:///../src/ol/geom/LinearRing.js","webpack:///../src/ol/MapEventType.js","webpack:///../src/ol/Disposable.js","webpack:///../src/ol/ImageBase.js","webpack:///../src/ol/source/WMSServerType.js","webpack:///../src/ol/layer/TileProperty.js","webpack:///../src/ol/renderer/Map.js","webpack:///../src/ol/tilegrid/common.js","webpack:///../src/ol/format/XML.js","webpack:///../src/ol/format/XLink.js","webpack:///../src/ol/format/TextFeature.js","webpack:///../src/ol/geom/GeometryCollection.js","webpack:///../src/ol/format/JSONFeature.js","webpack:///../src/ol/TileRange.js","webpack:///../src/ol/source/Source.js","webpack:///../src/ol/geom/flat/interpolate.js","webpack:///../src/ol/structs/PriorityQueue.js","webpack:///../src/ol/MapEvent.js","webpack:///../src/ol/render/Feature.js","webpack:///../src/ol/format/MVT.js","webpack:///../src/ol/format/OWS.js","webpack:///../src/ol/format/WMTSCapabilities.js","webpack:///../src/ol/webgl/Shader.js","webpack:///../src/ol/webgl/Fragment.js","webpack:///../src/ol/webgl/Vertex.js","webpack:///../src/ol/render/webgl/circlereplay/defaultshader.js","webpack:///../src/ol/render/webgl/circlereplay/defaultshader/Locations.js","webpack:///../src/ol/vec/mat4.js","webpack:///../src/ol/render/webgl/Replay.js","webpack:///../src/ol/render/webgl.js","webpack:///../src/ol/webgl/Buffer.js","webpack:///../src/ol/render/webgl/CircleReplay.js","webpack:///../src/ol/render/webgl/texturereplay/defaultshader.js","webpack:///../src/ol/render/webgl/texturereplay/defaultshader/Locations.js","webpack:///../src/ol/webgl/ContextEventType.js","webpack:///../src/ol/webgl/Context.js","webpack:///../src/ol/render/webgl/TextureReplay.js","webpack:///../src/ol/render/webgl/ImageReplay.js","webpack:///../src/ol/geom/flat/topology.js","webpack:///../src/ol/render/webgl/linestringreplay/defaultshader.js","webpack:///../src/ol/render/webgl/linestringreplay/defaultshader/Locations.js","webpack:///../src/ol/render/webgl/LineStringReplay.js","webpack:///../src/ol/render/webgl/polygonreplay/defaultshader.js","webpack:///../src/ol/render/webgl/polygonreplay/defaultshader/Locations.js","webpack:///../src/ol/structs/LinkedList.js","webpack:///../src/ol/render/webgl/PolygonReplay.js","webpack:///../src/ol/render/webgl/TextReplay.js","webpack:///../src/ol/render/webgl/ReplayGroup.js","webpack:///../src/ol/render/webgl/Immediate.js","webpack:///../src/ol/renderer/webgl/defaultmapshader.js","webpack:///../src/ol/renderer/webgl/defaultmapshader/Locations.js","webpack:///../src/ol/renderer/webgl/Layer.js","webpack:///../src/ol/renderer/webgl/ImageLayer.js","webpack:///../src/ol/renderer/webgl/Map.js","webpack:///../src/ol/renderer/webgl/tilelayershader.js","webpack:///../src/ol/renderer/webgl/tilelayershader/Locations.js","webpack:///../src/ol/renderer/webgl/TileLayer.js","webpack:///../src/ol/renderer/webgl/VectorLayer.js","webpack:///../src/ol/WebGLMap.js","webpack:///../src/ol/tilegrid/WMTS.js","webpack:///../src/ol/Image.js","webpack:///../src/ol/render/Event.js","webpack:///../src/ol/geom/flat/intersectsextent.js","webpack:///../src/ol/geom/flat/area.js","webpack:///../src/ol/source/Raster.js","webpack:///../src/ol/sphere.js","webpack:///../src/ol/pointer/MouseSource.js","webpack:///../src/ol/source/common.js","webpack:///../src/ol/renderer/canvas/Layer.js","webpack:///../src/ol/renderer/canvas/IntermediateCanvas.js","webpack:///../src/ol/net.js","webpack:///../src/ol/structs/LRUCache.js","webpack:///../src/ol/interaction/Property.js","webpack:///../src/ol/geom/flat/interiorpoint.js","webpack:///../src/ol/interaction/Modify.js","webpack:///../src/ol/extent/Corner.js","webpack:///../src/ol/render/Box.js","webpack:///../src/ol/interaction/DragBox.js","webpack:///../src/ol/GeolocationProperty.js","webpack:///../src/ol/Geolocation.js","webpack:///../src/ol/render/canvas/Immediate.js","webpack:///../src/ol/ImageCanvas.js","webpack:///../node_modules/rbush/index.js","webpack:///../src/ol/MapBrowserEventHandler.js","webpack:///../src/ol/PluggableMap.js","webpack:///../src/ol/format/TopoJSON.js","webpack:///../src/ol/ImageTile.js","webpack:///../src/ol/render/ReplayGroup.js","webpack:///../src/ol/renderer/Layer.js","webpack:///../src/ol/style/Image.js","webpack:///../src/ol/layer/Base.js","webpack:///../src/ol/interaction/PinchZoom.js","webpack:///../src/ol/interaction/MouseWheelZoom.js","webpack:///../src/ol/pointer/MsSource.js","webpack:///../src/ol/pointer/NativeSource.js","webpack:///../src/ol/pointer/PointerEvent.js","webpack:///../src/ol/pointer/TouchSource.js","webpack:///../src/ol/pointer/PointerEventHandler.js","webpack:///../src/ol/format/GML2.js","webpack:///../src/ol/style/IconImageCache.js","webpack:///../src/ol/renderer/canvas/Map.js","webpack:///../src/ol/renderer/canvas/ImageLayer.js","webpack:///../src/ol/interaction/Snap.js","webpack:///../src/ol/geom/Circle.js","webpack:///../src/ol/interaction/DragRotateAndZoom.js","webpack:///../src/ol/MapBrowserEvent.js","webpack:///../src/ol/layer/Group.js","webpack:///../src/ol/control/ScaleLine.js","webpack:///../src/ol/style/IconImage.js","webpack:///../src/ol/style/Icon.js","webpack:///../src/ol/geom/flat/geodesic.js","webpack:///../src/ol/Graticule.js","webpack:///../src/ol/control/MousePosition.js","webpack:///../src/ol/render.js","webpack:///../src/ol/format/WKT.js","webpack:///../src/ol/format/EsriJSON.js","webpack:///../src/ol/source/ImageStatic.js","webpack:///../src/ol/reproj/Triangulation.js","webpack:///../src/ol/TileCache.js","webpack:///../src/ol/style/TextPlacement.js","webpack:///../src/ol/featureloader.js","webpack:///../src/ol/layer/VectorRenderType.js","webpack:///../src/ol/geom/flat/center.js","webpack:///../src/ol/geom/flat/length.js","webpack:///../src/ol/interaction/DragAndDrop.js","webpack:///../src/ol/geom/flat/segments.js","webpack:///../src/ol/TileQueue.js","webpack:///../src/ol/AssertionError.js","webpack:///../src/ol/format/IGC.js","webpack:///../src/ol/format/GPX.js","webpack:///../src/ol/style/Atlas.js","webpack:///../src/ol/style/AtlasManager.js","webpack:///../src/ol/control/Attribution.js","webpack:///../src/ol/control/FullScreen.js","webpack:///../node_modules/pbf/index.js","webpack:///../node_modules/pixelworks/lib/index.js","webpack:///../src/ol/source/Cluster.js","webpack:///../src/ol/control/OverviewMap.js","webpack:///../src/ol/control/Rotate.js","webpack:///../src/ol/control/Zoom.js","webpack:///../src/ol/control/util.js","webpack:///../node_modules/ieee754/index.js","webpack:///../node_modules/pixelworks/lib/util.js","webpack:///../node_modules/pixelworks/lib/processor.js","webpack:///../node_modules/quickselect/quickselect.js","webpack:///../src/ol/style/Circle.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","inherits","childCtor","parentCtor","constructor","__webpack_exports__","VERSION","uidCounter_","getUid","obj","ol_uid","_extent_Relationship_js__WEBPACK_IMPORTED_MODULE_2__","boundingExtent","coordinates","extent","createEmpty","ii","extendCoordinate","buffer","opt_extent","clone","closestSquaredDistanceXY","x","y","dx","dy","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","Infinity","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","end","stride","extendFlatCoordinates","equals","extend","extendXY","Math","min","max","forEachCorner","callback","opt_this","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","isEmpty","getWidth","getHeight","getCenter","getCorner","corner","_extent_Corner_js__WEBPACK_IMPORTED_MODULE_1__","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","_asserts_js__WEBPACK_IMPORTED_MODULE_0__","getForViewAndSize","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","getIntersection","intersection","intersects","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","xs","ys","_boundingExtentXYs","none","DEFAULT_MIN_ZOOM","View","opt_options","ol_Object","this","options","hints_","animations_","updateAnimationKey_","updateAnimations_","projection_","proj","projection","applyOptions_","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","util","properties","ViewProperty","CENTER","undefined","resolutionConstraintInfo","resolutionConstraint","maxResolution","minResolution","minZoom","maxZoom","zoomFactor","resolutions","delta","direction","z","array","math","index","floor","power","pow","createSnapToResolutions","getExtent","ol_extent","Units","DEGREES","getMetersPerUnit","defaultMaxResolution","common","defaultMinResolution","log","opt_maxLevel","oldLevel","newLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","createExtent","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","rotationconstraint","createRotationConstraint","constraints_","RESOLUTION","zoom","constrainResolution","Number","getResolution","ROTATION","setProperties","options_","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","animationCount","arguments","isDef","state","setCenter","setZoom","setRotation","setTimeout","Date","now","series","complete","anchor","duration","easing","PI","setHint","ViewHint","ANIMATING","getAnimating","getInteracting","INTERACTING","cancelAnimations","cancelAnimationFrame","more","seriesComplete","jj","elapsed","fraction","progress","set","calculateCenterZoom","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","getSizeFromViewport_","selector","element","document","querySelector","metrics","getComputedStyle","parseInt","width","height","constrainCenter","opt_delta","opt_direction","getConstraints","getHints","opt_hints","calculateExtent","opt_size","asserts","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","getProjection","getResolutions","getResolutionForExtent","xResolution","yResolution","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","getState","nearest","getResolutionForZoom","fit","geometryOrExtent","geometry","SimpleGeometry","getType","GeometryType","CIRCLE","Polygon","rotate","Array","isArray","padding","coords","getFlatCoordinates","cosAngle","sinAngle","minRotX","minRotY","maxRotX","maxRotY","getStride","rotX","rotY","isNaN","constrainedResolution","centerRotX","centerRotY","functions","setResolution","centerOn","position","centerX","centerY","opt_anchor","hint","changed","drawTextOnPath","text","measure","startM","maxAngle","reverse","numChars","previousAngle","segmentM","segmentLength","sqrt","chunk","chunkLength","char","charAt","charLength","charM","segmentPos","angle","atan2","abs","interpolate","unshift","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","CanvasReplay","tolerance","maxExtent","pixelRatio","overlaps","declutterTree","VectorContext","maxLineWidth","alignFill_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinateCache_","renderedTransform_","ol_transform","hitDetectionInstructions","pixelCoordinates_","viewRotation_","tmpExtent","tmpTransform","replayTextBackground_","context","p1","p2","p3","p4","fillInstruction","strokeInstruction","beginPath","moveTo","lineTo","fill_","setStrokeStyle_","stroke","replayImage_","image","anchorX","anchorY","declutterGroup","opacity","originX","originY","scale","snapToPixel","fillStroke","w","h","boxW","boxH","boxX","boxY","transform","canvas","strokePadding","round","declutterArgs","render_canvas","applyPixelRatio","dashArray","map","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastCoord","nextCoord","NaN","lastRel","nextRel","skipped","Relationship","drawCustomCoordinates_","ends","replayEnds","replayEnd","drawCustom","feature","renderer","beginGeometry","type","replayBegin","replayEndss","MULTI_POLYGON","getOrientedFlatCoordinates","endss","getEndss","myEnds","inflate","POLYGON","MULTI_LINE_STRING","getEnds","LINE_STRING","MULTI_POINT","POINT","endGeometry","origin","repeatSize","translate","fill","setTransform","instruction","strokeStyle","lineWidth","lineCap","lineJoin","miterLimit","has","lineDashOffset","setLineDash","renderDeclutter_","groupCount","box","collides","insert","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","pixelCoordinates","flat_transform","skipFeatures","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","batchSize","toString","getGeometry","arc","closePath","fn","rotateWithView","backgroundFill","backgroundStroke","begin","baseline","overflow","fillKey","offsetY","strokeKey","strokeWidth","textKey","textScale","pathLength","flat_length","textLength","textAlign","textStates","parts","render_replay","cc","chars","label","part","getImage","fillStyle","replay","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","setFillStrokeStyle","fillStyleColor","getColor","colorlike","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","lineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","finish","Replay","CanvasImageReplay","declutterGroup_","hitDetectionImage_","image_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","rotation_","scale_","snapToPixel_","width_","drawCoordinates_","drawPoint","pointGeometry","myBegin","drawMultiPoint","multiPointGeometry","setImageStyle","imageStyle","getAnchor","getSize","hitDetectionImage","getHitDetectionImage","getOrigin","getOpacity","getRotateWithView","getScale","getSnapToPixel","ImageReplay","CanvasLineStringReplay","drawFlatCoordinates_","moveToLineToInstruction","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","lastStroke","LineStringReplay","CanvasPolygonReplay","drawFlatCoordinatess_","numEnds","drawCircle","circleGeometry","setFillStrokeStyles_","color","circleInstruction","drawPolygon","polygonGeometry","drawMultiPolygon","multiPolygonGeometry","simplify","PolygonReplay","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","CanvasTextReplay","labels_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textKey_","fillKey_","strokeKey_","widths_","prune","drawText","fillState","strokeState","textState","geometryType","placement","TextPlacement","LINE","flatEnd","flatOffset","oo","range","drawChars_","getFlatMidpoint","getFlatMidpoints","getFlatInteriorPoint","interiorPoints","getFlatInteriorPoints","drawTextImage_","containsKey","align","lines","split","numLines","widths","font","currentWidth","measureTextWidths","lineHeight","renderWidth","dom","ceil","textBaseline","leftRight","strokeText","fillText","setTextStyle","textStyle","textFillStyle","getFill","textStrokeStyle","getStroke","getFont","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","getText","join","BATCH_CONSTRUCTORS","Circle","Default","Image","LineString","Text","CanvasReplayGroup","opt_renderBuffer","ReplayGroup","declutterTree_","tolerance_","maxExtent_","overlaps_","pixelRatio_","resolution_","renderBuffer_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","circleArrayCache","fillCircleArrayRowToMiddle","radius","addDeclutter","group","declutter","clip","flatClipCoords","getClipCoords","hasReplays","replays","zIndex","candidates","zKey","replayKey","forEachFeatureAtCoordinate","hitTolerance","declutterReplays","contextSize","hitExtent","clearRect","mask","arraySize","arr","error","getCircleArray","declutteredFeatures","replayType","imageData","getImageData","ReplayType","IMAGE","TEXT","indexOf","all","entry","zs","keys","sort","zIndexKey","getReplay","Constructor","getReplays","opt_replayTypes","opt_declutterReplays","save","replayTypes","restore","canvas_ReplayGroup","CanvasVectorLayerRenderer","vectorLayer","Layer","getDeclutter","rbush_default","dirty_","renderedRevision_","renderedResolution_","renderedExtent_","renderedRenderOrder_","replayGroup_","replayGroupChanged","events","EventType","CLEAR","handleFontsChanged_","layer","LayerType","VECTOR","mapRenderer","disposeInternal","compose","frameState","layerState","skippedFeatureUids","managed","viewState","projectionExtent","vectorSource","getLayer","getSource","getTransform","clipExtent","clipped","replayGroup","clear","replayContext","drawOffsetX","drawOffsetY","transparentLayer","hasRenderListeners","hasListener","render_EventType","RENDER","drawWidth","drawHeight","drawSize","alpha","globalAlpha","getWrapX","canWrapX","worldWidth","offsetX","world","dispatchRenderEvent","mainContextAlpha","drawImage","composeFrame","preCompose","postCompose","thisArg","features","event","getVisible","handleStyleImageChange_","renderIfReadyAndVisible","prepareFrame","animating","viewHints","interacting","updateWhileAnimating","getUpdateWhileAnimating","updateWhileInteracting","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","getRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","vector","gutter","getOverlaps","loadFeatures","render","styles","styleFunction","getStyleFunction","dirty","renderFeature","forEachFeatureInExtent","loading","VectorLayer","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","DEFAULT","CanvasVectorTileLayerRenderer","TileLayer","renderedLayerRevision_","tmpTransform_","zDirection","getRenderMode","VectorTileRenderType","VECTOR_TILE","getTile","tile","TileState","LOADED","createReplayGroup_","renderTileImage_","layerRevision","renderedTiles","renderMode","revision","renderOrder","replayState","getReplayState","renderedRevision","renderedRenderOrder","source","sourceTileGrid","getTileGrid","getTileGridForProjection","tileCoord","tileExtent","zIndexKeys","tt","tileKeys","sourceTile","sourceTileCoord","sourceTileExtent","getTileCoordExtent","sharedExtent","bufferedExtent","tileProjection","reproject","setProjection","squaredTolerance","getFeatures","getUnits","TILE_PIXELS","setWorldExtent","setExtent","setReplayGroup","found","getReplayGroup","getReplayTransform_","tileGrid","tileResolution","renderResolution","tiles","clips","ABORT","worldOffset","currentZ","currentClip","zz","replayData","replayDeclutter","renderedTileRevision","wrappedTileCoord","getContext","getTilePixelSize","pixelScale","VectorTileLayer","Map_Map","controls","control_util","interactions","interaction","PluggableMap","createRenderer","Map","registerLayerRenderers","ImageLayer","_obj_js__WEBPACK_IMPORTED_MODULE_4__","baseOptions","preload","useInterimTilesOnError","_layer_Layer_js__WEBPACK_IMPORTED_MODULE_2__","setPreload","setUseInterimTilesOnError","_LayerType_js__WEBPACK_IMPORTED_MODULE_1__","TILE","_util_js__WEBPACK_IMPORTED_MODULE_0__","getPreload","_layer_TileProperty_js__WEBPACK_IMPORTED_MODULE_3__","PRELOAD","getUseInterimTilesOnError","USE_INTERIM_TILES_ON_ERROR","_source_XYZ_js__WEBPACK_IMPORTED_MODULE_1__","ATTRIBUTION","OSM","attributions","crossOrigin","url","cacheSize","opaque","reprojectionErrorThreshold","tileLoadFunction","wrapX","_array_js__WEBPACK_IMPORTED_MODULE_0__","DOCUMENT","implementation","createDocument","XML_SCHEMA_INSTANCE_URI","createElementNS","namespaceURI","qualifiedName","getAllTextContent","node","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","String","nodeValue","replace","firstChild","nextSibling","isDocument","Document","isNode","getAttributeNS","parse","xml","DOMParser","parseFromString","makeArrayExtender","valueReader","objectStack","makeArrayPusher","makeReplacer","makeObjectPropertyPusher","opt_property","localName","makeObjectPropertySetter","makeChildAppender","nodeWriter","appendChild","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","opt_nodeName","opt_namespaceURI","fixedNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","opt_structureNS","structureNS","parseNode","parsersNS","firstElementChild","nextElementSibling","parsers","parser","pushParseAndPop","pop","values","opt_keys","pushSerializeAndPop","_string_js__WEBPACK_IMPORTED_MODULE_1__","readBoolean","readBooleanString","_xml_js__WEBPACK_IMPORTED_MODULE_0__","string","exec","readDateTime","dateTime","readDecimal","readDecimalString","parseFloat","readNonNegativeInteger","readNonNegativeIntegerString","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","writeDecimalTextNode","decimal","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","EPSG3857Projection","code","Projection","units","METERS","global","worldExtent","getPointResolution","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","output","halfSize","tan","epsg3857_toEPSG4326","atan","exp","epsg4326_EXTENT","METERS_PER_UNIT","EPSG4326Projection","opt_axisOrientation","axisOrientation","metersPerUnit","epsg4326_PROJECTIONS","cache","cloneTransform","identityTransform","addProjection","add","getCode","transforms","proj_get","projectionLike","opt_units","pointResolution","getPointResolutionFunc","toEPSG4326","getTransformFromProjections","vertices","sphere","addEquivalentProjections","projections","forEach","addProjections","destination","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","addCoordinateTransforms","forward","inverse","sourceProj","destProj","fromLonLat","opt_projection","toLonLat","lonLat","lon","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","sourceCode","destinationCode","transformFunc","transformExtent","projections1","projections2","forwardTransform","inverseTransform","addEquivalentTransforms","_obj_js__WEBPACK_IMPORTED_MODULE_0__","findListener","listeners","listener","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","target","listenerMap","ol_lm","getListenerMap","removeListeners","removeEventListener","boundListener","listen","opt_once","callOnce","addEventListener","evt","unlistenByKey","bindListener","listenOnce","unlisten","unlistenAll","LINEAR_RING","GEOMETRY_COLLECTION","EXTENSIONS","ONE","SRC_ALPHA","COLOR_ATTACHMENT0","COLOR_BUFFER_BIT","TRIANGLES","TRIANGLE_STRIP","ONE_MINUS_SRC_ALPHA","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","STREAM_DRAW","STATIC_DRAW","DYNAMIC_DRAW","CULL_FACE","BLEND","STENCIL_TEST","DEPTH_TEST","SCISSOR_TEST","UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT","FLOAT","RGBA","FRAGMENT_SHADER","VERTEX_SHADER","LINEAR","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_2D","TEXTURE0","CLAMP_TO_EDGE","FRAMEBUFFER","CONTEXT_IDS","opt_attributes","e","DEBUG","MAX_TEXTURE_SIZE","HAS","gl","createElement","failIfMajorPerformanceCaveat","getParameter","getSupportedExtensions","CHANGE","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","_structs_RBush_js__WEBPACK_IMPORTED_MODULE_17__","VectorSourceEvent","opt_feature","_events_Event_js__WEBPACK_IMPORTED_MODULE_7__","VectorSource","_source_Source_js__WEBPACK_IMPORTED_MODULE_14__","_source_State_js__WEBPACK_IMPORTED_MODULE_15__","READY","loader_","_functions_js__WEBPACK_IMPORTED_MODULE_11__","format_","format","url_","loader","_asserts_js__WEBPACK_IMPORTED_MODULE_5__","_featureloader_js__WEBPACK_IMPORTED_MODULE_10__","strategy_","strategy","_loadingstrategy_js__WEBPACK_IMPORTED_MODULE_12__","useSpatialIndex","collection","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","_Collection_js__WEBPACK_IMPORTED_MODULE_1__","getArray","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","dispatchEvent","_source_VectorEventType_js__WEBPACK_IMPORTED_MODULE_16__","ADDFEATURE","_events_js__WEBPACK_IMPORTED_MODULE_6__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_8__","handleFeatureChange_","_ObjectEventType_js__WEBPACK_IMPORTED_MODULE_3__","PROPERTYCHANGE","valid","id","getId","addFeatures","extents","newFeatures","geometryFeatures","load","modifyingCollection","REMOVEFEATURE","remove","_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_2__","ADD","REMOVE","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","intersectsCoordinate","forEachInExtent","forEachFeatureIntersectingExtent","intersectsExtent","getFeaturesCollection","getAll","_obj_js__WEBPACK_IMPORTED_MODULE_13__","_array_js__WEBPACK_IMPORTED_MODULE_4__","getFeaturesAtCoordinate","getFeaturesInExtent","getInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","closestPoint","minSquaredDistance","previousMinSquaredDistance","closestPointXY","minDistance","getFeatureById","getFormat","getUrl","update","sid","removeFromIdIndex_","CHANGEFEATURE","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","_extent_js__WEBPACK_IMPORTED_MODULE_9__","removeLoadedExtent","removed","setLoader","assign","var_sources","TypeError","getValues","binarySearch","haystack","needle","opt_comparator","mid","cmp","comparator","numberSafeCompareFunction","low","high","a","b","includes","linearFindNearest","reverseSubArray","tmp","extension","find","func","arr1","arr2","len1","stableSort","compareFnc","findIndex","every","el","idx","isSorted","opt_func","opt_strict","compare","currentVal","res","tmp_","reset","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","f","setFromArray","dx1","dy1","sx","sy","dx2","dy2","invert","det","mat","determinant","IDLE","LOADING","EMPTY","clamp","cosh","roundUpToPowerOfTwo","LN2","squaredSegmentDistance","squaredDistance","solveLinearSystem","maxRow","maxEl","absValue","coef","k","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","lerp","XY","XYZ","XYM","XYZM","_style_Style_js__WEBPACK_IMPORTED_MODULE_6__","Feature","opt_geometryOrProperties","_Object_js__WEBPACK_IMPORTED_MODULE_4__","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","_events_js__WEBPACK_IMPORTED_MODULE_1__","handleGeometryChanged_","_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_5__","setGeometry","_util_js__WEBPACK_IMPORTED_MODULE_3__","getProperties","setGeometryName","getGeometryName","style","getStyle","setStyle","handleGeometryChange_","_events_EventType_js__WEBPACK_IMPORTED_MODULE_2__","createStyleFunction","setId","_transform_js__WEBPACK_IMPORTED_MODULE_4__","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","labelCache","_structs_LRUCache_js__WEBPACK_IMPORTED_MODULE_3__","checkedFonts","measureContext","textHeights","checkFont","retries","checked","referenceFonts","len","interval","referenceWidth","isAvailable","getMeasureContext","available","referenceFont","measureText","check","done","_obj_js__WEBPACK_IMPORTED_MODULE_2__","clearInterval","fontSpec","fontFamilies","_css_js__WEBPACK_IMPORTED_MODULE_0__","fontFamily","setInterval","_dom_js__WEBPACK_IMPORTED_MODULE_1__","measureTextHeight","span","heights","textContent","margin","left","body","offsetHeight","removeChild","measureTextWidth","rotateAtOffset","resetTransform","_AssertionError_js__WEBPACK_IMPORTED_MODULE_0__","assert","assertion","errorCode","TRUE","FALSE","UNDEFINED","_math_js__WEBPACK_IMPORTED_MODULE_6__","Point","opt_layout","_geom_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_4__","setCoordinates","setFlatCoordinates","layout","getCoordinates","computeExtent","_extent_js__WEBPACK_IMPORTED_MODULE_1__","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_3__","setLayout","_geom_flat_deflate_js__WEBPACK_IMPORTED_MODULE_5__","_geom_GeometryLayout_js__WEBPACK_IMPORTED_MODULE_2__","setFlatCoordinatesInternal","createCanvasContext2D","opt_width","opt_height","outerWidth","offsetWidth","marginLeft","marginRight","outerHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","removeChildren","lastChild","_proj_js__WEBPACK_IMPORTED_MODULE_13__","GeoJSON","_format_JSONFeature_js__WEBPACK_IMPORTED_MODULE_4__","dataProjection","featureProjection","defaultFeatureProjection","geometryName","extractGeometryName_","extractGeometryName","GEOMETRY_READERS","_geom_Point_js__WEBPACK_IMPORTED_MODULE_10__","_geom_LineString_js__WEBPACK_IMPORTED_MODULE_6__","_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_11__","MultiPoint","_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_8__","MultiLineString","_geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_7__","MultiPolygon","_geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_9__","GeometryCollection","geometries","readGeometry","_geom_GeometryCollection_js__WEBPACK_IMPORTED_MODULE_5__","GEOMETRY_WRITERS","right","rightHanded","getGeometriesArray","_obj_js__WEBPACK_IMPORTED_MODULE_12__","writeGeometry","geometryReader","_format_Feature_js__WEBPACK_IMPORTED_MODULE_3__","geometryWriter","readFeature","readFeatures","readFeatureFromObject","geoJSONFeature","_Feature_js__WEBPACK_IMPORTED_MODULE_2__","geometry_name","readFeaturesFromObject","geoJSONFeatures","readGeometryFromObject","readProjection","readProjectionFromObject","crs","_asserts_js__WEBPACK_IMPORTED_MODULE_1__","writeFeature","writeFeatureObject","adaptOptions","writeFeatures","writeFeaturesObject","objects","writeGeometryObject","_style_Style_js__WEBPACK_IMPORTED_MODULE_5__","Property","renderBuffer","declutter_","updateWhileAnimating_","updateWhileInteracting_","renderMode_","_layer_VectorRenderType_js__WEBPACK_IMPORTED_MODULE_3__","setDeclutter","setRenderOrder","ObjectEvent","oldValue","_events_Event_js__WEBPACK_IMPORTED_MODULE_3__","BaseObject","opt_values","_Observable_js__WEBPACK_IMPORTED_MODULE_2__","values_","changeEventTypeCache","getChangeEventType","getKeys","notify","eventType","_ObjectEventType_js__WEBPACK_IMPORTED_MODULE_1__","opt_silent","unset","closestOnCircle","circle","getRadius","closestOnSegment","segment","along","createStringXY","opt_fractionDigits","template","toFixed","toStringXY","degreesToStringHDMS","hemispheres","degrees","normalizedDegrees","_math_js__WEBPACK_IMPORTED_MODULE_0__","dflPrecision","precision","deg","sec","coordinate1","coordinate2","coord1","coord2","distance","squaredDistanceToSegment","toStringHDMS","_geom_flat_simplify_js__WEBPACK_IMPORTED_MODULE_13__","_geom_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_5__","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","appendCoordinate","_array_js__WEBPACK_IMPORTED_MODULE_1__","lineString","_extent_js__WEBPACK_IMPORTED_MODULE_2__","_geom_flat_closest_js__WEBPACK_IMPORTED_MODULE_6__","forEachSegment","_geom_flat_segments_js__WEBPACK_IMPORTED_MODULE_12__","getCoordinateAtM","opt_extrapolate","_geom_GeometryLayout_js__WEBPACK_IMPORTED_MODULE_3__","extrapolate","_geom_flat_interpolate_js__WEBPACK_IMPORTED_MODULE_9__","_geom_flat_inflate_js__WEBPACK_IMPORTED_MODULE_8__","getCoordinateAt","opt_dest","getLength","_geom_flat_length_js__WEBPACK_IMPORTED_MODULE_11__","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","simplifiedLineString","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__","_geom_flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_10__","_geom_flat_deflate_js__WEBPACK_IMPORTED_MODULE_7__","Event","propagationStopped","stopPropagation","preventDefault","_has_js__WEBPACK_IMPORTED_MODULE_3__","altKeyOnly","mapBrowserEvent","originalEvent","altKey","metaKey","ctrlKey","shiftKey","altShiftKeysOnly","focus","getTargetElement","activeElement","always","_functions_js__WEBPACK_IMPORTED_MODULE_2__","click","_MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_0__","mouseActionButton","button","never","pointerMove","singleClick","SINGLECLICK","noModifierKeys","platformModifierKeyOnly","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","pointerEvent","pointerType","primaryAction","isPrimary","_math_js__WEBPACK_IMPORTED_MODULE_18__","_geom_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_7__","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","circular","opt_n","opt_sphereRadius","_sphere_js__WEBPACK_IMPORTED_MODULE_8__","polygon","fromExtent","fromCircle","opt_sides","opt_angle","sides","getLayout","arrayLength","makeRegular","startAngle","appendLinearRing","linearRing","_geom_flat_closest_js__WEBPACK_IMPORTED_MODULE_10__","_geom_flat_contains_js__WEBPACK_IMPORTED_MODULE_11__","_geom_flat_area_js__WEBPACK_IMPORTED_MODULE_9__","opt_right","_geom_flat_orient_js__WEBPACK_IMPORTED_MODULE_16__","_geom_flat_inflate_js__WEBPACK_IMPORTED_MODULE_13__","flatCenter","_geom_flat_interiorpoint_js__WEBPACK_IMPORTED_MODULE_14__","getInteriorPoint","_geom_Point_js__WEBPACK_IMPORTED_MODULE_6__","getLinearRingCount","getLinearRing","_geom_LinearRing_js__WEBPACK_IMPORTED_MODULE_5__","getLinearRings","linearRings","simplifiedEnds","_geom_flat_simplify_js__WEBPACK_IMPORTED_MODULE_17__","simplifiedPolygon","_geom_flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_15__","_geom_flat_deflate_js__WEBPACK_IMPORTED_MODULE_12__","_obj_js__WEBPACK_IMPORTED_MODULE_5__","handleDragEvent","_functions_js__WEBPACK_IMPORTED_MODULE_1__","handleUpEvent","handleDownEvent","handleMoveEvent","PointerInteraction","_interaction_Interaction_js__WEBPACK_IMPORTED_MODULE_4__","handleEvent","handleDownEvent_","handleDragEvent_","handleMoveEvent_","handleUpEvent_","handlingDownUpSequence","trackedPointers_","targetPointers","centroid","pointerEvents","clientX","clientY","_MapBrowserPointerEvent_js__WEBPACK_IMPORTED_MODULE_3__","stopEvent","updateTrackedPointers_","_MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_2__","POINTERDRAG","POINTERUP","handledUp","POINTERDOWN","handled","shouldStopEvent","POINTERMOVE","isPointerDraggingEvent","pointerId","_events_EventType_js__WEBPACK_IMPORTED_MODULE_0__","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","_proj_js__WEBPACK_IMPORTED_MODULE_2__","FeatureFormat","transformWithOptions","write","transformed","_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_0__","decimals","getReadOptions","_obj_js__WEBPACK_IMPORTED_MODULE_1__","getLastExtent","_math_js__WEBPACK_IMPORTED_MODULE_4__","Interaction","_Object_js__WEBPACK_IMPORTED_MODULE_1__","map_","setActive","pan","view","opt_duration","_easing_js__WEBPACK_IMPORTED_MODULE_2__","rotateWithoutConstraints","currentRotation","zoomWithoutConstraints","zoomByDelta","getActive","_interaction_Property_js__WEBPACK_IMPORTED_MODULE_3__","ACTIVE","getMap","active","setMap","_tilegrid_js__WEBPACK_IMPORTED_MODULE_8__","BingMaps","hidpi_","hidpi","_source_TileImage_js__WEBPACK_IMPORTED_MODULE_6__","_proj_js__WEBPACK_IMPORTED_MODULE_4__","_source_State_js__WEBPACK_IMPORTED_MODULE_5__","tilePixelRatio","transition","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","_net_js__WEBPACK_IMPORTED_MODULE_3__","handleImageryMetadataResponse","getApiKey","getImagerySet","response","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","setState","resource","zoomMax","tileSize","imageWidth","imageHeight","zoomMin","tileUrlFunction","_tileurlfunction_js__WEBPACK_IMPORTED_MODULE_1__","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","_tilecoord_js__WEBPACK_IMPORTED_MODULE_7__","imageryProviders","setAttributions","imageryProvider","intersecting","coverageAreas","coverageArea","bbox","epsg4326Extent","attribution","getFontFamilies","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","family","MSPOINTER","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","CANVAS_LINE_DASH","GEOLOCATION","TOUCH","POINTER","_xml_js__WEBPACK_IMPORTED_MODULE_15__","GMLNS","GMLBase","featureType","featureNS","srsName","schemaLocation","FEATURE_COLLECTION_PARSERS","featureMember","readFeaturesInternal","featureMembers","_format_XMLFeature_js__WEBPACK_IMPORTED_MODULE_4__","ONLY_WHITESPACE_RE","prefix","defaultPrefix","childNodes","child","ft","count","uri","candidate","featureTypes","readFeatureElement","readGeometryElement","getAttribute","GEOMETRY_PARSERS_","fid","test","readPoint","readFlatCoordinatesFromNode_","_geom_Point_js__WEBPACK_IMPORTED_MODULE_11__","_geom_GeometryLayout_js__WEBPACK_IMPORTED_MODULE_5__","readMultiPoint","MULTIPOINT_PARSERS_","_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_9__","readMultiLineString","lineStrings","MULTILINESTRING_PARSERS_","multiLineString","_geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_8__","setLineStrings","readMultiPolygon","polygons","MULTIPOLYGON_PARSERS_","multiPolygon","_geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_10__","setPolygons","pointMemberParser_","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","readFlatLinearRing_","ring","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLinearRing","_geom_LinearRing_js__WEBPACK_IMPORTED_MODULE_7__","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_12__","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","LinearRing","readGeometryFromNode","readFeaturesFromNode","readProjectionFromNode","_proj_js__WEBPACK_IMPORTED_MODULE_14__","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","getDistance","getAngle","ol_Kinetic","DoubleClickZoom","delta_","duration_","browserEvent","MapBrowserEventType","getView","interaction_DoubleClickZoom","DragPan","Pointer","kinetic_","kinetic","lastCentroid","lastPointersCount_","condition_","condition","events_condition","noKinetic_","centerpx","getPixelFromCoordinate","dest","getCoordinateFromPixel","interaction_DragPan","DragRotate","DragRotate_handleDownEvent","DragRotate_handleDragEvent","DragRotate_handleUpEvent","lastAngle_","pixel","theta","interaction_DragRotate","DragZoom","out_","out","DragBox","className","onBoxEnd","mapExtent","boxPixelExtent","factor","interaction_DragZoom","KeyCode","UP","DOWN","KeyboardPan","KeyboardPan_handleEvent","defaultCondition_","pixelDelta_","pixelDelta","keyCode","mapUnitsDelta","interaction_KeyboardPan","KeyboardZoom","KeyboardZoom_handleEvent","charCode","charCodeAt","interaction_KeyboardZoom","PinchRotate","PinchRotate_handleDownEvent","PinchRotate_handleDragEvent","PinchRotate_handleUpEvent","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","viewportPosition","getViewport","getBoundingClientRect","top","interaction_PinchRotate","defaults","Collection","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","PinchZoom","keyboard","mouseWheelZoom","MouseWheelZoom","shiftDragZoom","_tilegrid_js__WEBPACK_IMPORTED_MODULE_2__","_source_TileImage_js__WEBPACK_IMPORTED_MODULE_1__","urls","_events_js__WEBPACK_IMPORTED_MODULE_5__","Control","_Object_js__WEBPACK_IMPORTED_MODULE_3__","target_","listenerKeys","setTarget","_dom_js__WEBPACK_IMPORTED_MODULE_4__","getOverlayContainerStopEvent","_MapEventType_js__WEBPACK_IMPORTED_MODULE_2__","POSTRENDER","getElementById","_events_Event_js__WEBPACK_IMPORTED_MODULE_4__","CollectionEvent","opt_element","opt_array","unique_","unique","array_","assertUnique_","updateLength_","item","insertAt","elem","removeAt","prev","setAt","opt_except","_AssertionError_js__WEBPACK_IMPORTED_MODULE_1__","_obj_js__WEBPACK_IMPORTED_MODULE_6__","_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_3__","_geom_GeometryLayout_js__WEBPACK_IMPORTED_MODULE_4__","getStrideForLayout","transformGeom2D","simpleGeometry","_geom_flat_transform_js__WEBPACK_IMPORTED_MODULE_5__","getFirstCoordinate","getLastCoordinate","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometry","nesting","getLayoutForStride","opt_sy","easeIn","easeOut","inAndOut","linear","opt_tileCoord","getKeyZXY","getKey","fromKey","hash","quadKey","digits","fromCharCode","withinExtentAndZ","tileRange","getTileRangeForExtentAndZ","getFullTileRange","num","hasArea","ratio","toSize","transform2D","TileJSON","tileJSON_","_source_TileImage_js__WEBPACK_IMPORTED_MODULE_7__","_proj_js__WEBPACK_IMPORTED_MODULE_5__","_source_State_js__WEBPACK_IMPORTED_MODULE_6__","jsonp","_net_js__WEBPACK_IMPORTED_MODULE_4__","handleTileJSONResponse","handleTileJSONError","client","XMLHttpRequest","onXHRLoad_","onXHRError_","open","send","tileJSON","_asserts_js__WEBPACK_IMPORTED_MODULE_2__","status","JSON","responseText","err","getTileJSON","epsg4326Projection","bounds","_extent_js__WEBPACK_IMPORTED_MODULE_3__","minzoom","maxzoom","getAttributions","attributionExtent","FEET","PIXELS","USFEET","_tilegrid_TileGrid_js__WEBPACK_IMPORTED_MODULE_7__","getForProjection","getDefaultTileGrid","createForProjection","setDefaultTileGrid","getTileCoordCenter","extentFromProjection","worldsAway","getTileCoordForCoordAndZ","createXYZ","resolutionsFromExtent","opt_maxZoom","opt_tileSize","_tilegrid_common_js__WEBPACK_IMPORTED_MODULE_0__","_size_js__WEBPACK_IMPORTED_MODULE_1__","opt_corner","_extent_Corner_js__WEBPACK_IMPORTED_MODULE_3__","createForExtent","half","_proj_js__WEBPACK_IMPORTED_MODULE_6__","_proj_Units_js__WEBPACK_IMPORTED_MODULE_0__","code_","units_","extent_","worldExtent_","axisOrientation_","global_","canWrapX_","getPointResolutionFunc_","defaultTileGrid_","metersPerUnit_","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","setGetPointResolution","ReprojTile","targetProj","targetTileGrid","getTileFunction","opt_errorThreshold","opt_renderEdges","Tile","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","targetExtent","maxTargetExtent","maxSourceExtent","limitedTargetExtent","sourceProjExtent","reproj","isFinite","errorThresholdInPixels","triangulation_","Triangulation","getTriangles","getZForResolution","sourceExtent","calculateSourceExtent","sourceRange","srcX","srcY","unlistenSources_","reproject_","sources","getTileSize","leftToLoad","sourceListenKey","reproj_Tile","TileImage","UrlTile","defaultTileLoadFunction","tileClass","ImageTile","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","renderReprojectionEdges_","imageTile","src","canExpireCache","tileCache","expireCache","usedTiles","usedTileCache","getTileCacheForProjection","getGutter","ol_proj","getGutterInternal","getOpaque","thisProj","projKey","ol_tilegrid","TileCache","highWaterMark","createTile_","urlTileCoord","getTileCoordForTileUrlFunction","tileUrl","tileOptions","handleTileChange","tileCoordKey","tilecoord","newTile","getTilePixelRatio","getTileInternal","interimTile","refreshInterimChain","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","ReprojImage","getImageFunction","targetProj_","maxSourceExtent_","targetResolution_","targetExtent_","sourceImage_","sourcePixelRatio_","getPixelRatio","sourceListenerKey_","ImageState","ImageBase","unlistenSource_","sourceState","defaultImageLoadFunction","ImageSourceEventType","ImageSourceEvent","ImageSource","Source","reprojectedImage_","reprojectedRevision_","findNearestResolution","dispose","getImageInternal","handleImageChange","PJD_3PARAM","PJD_7PARAM","PJD_WGS84","PJD_NODATUM","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","PrimeMeridian_exports","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","to_meter","us-ft","ignoredChar","match","testkey","lkey","projString","defData","paramName","paramVal","paramOutname","self","paramObj","v","reduce","params","datum","rf","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","lonc","longc","x_0","y_0","k_0","k0","r_a","R_A","zone","south","utmSouth","towgs84","datum_params","unit","from_greenwich","pm","nadgrids","datumCode","axis","substr","txt","Parser","NEUTRAL","whitespace","latin","keyword","endThings","digets","Error","level","place","root","stack","currentObject","mapit","thing","newObj","sExpr","convert","readCharicter","neutral","quoted","afterquote","number","word","afterItem","newObjects","wkt_parser_D2R","d2r","wkt_parser","wkt","lisp","projName","local","PROJECTION","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","ellps","outName","inName","rename","cleanWKT","defs","that","def","EPSG","ESRI","IAU2000","console","WGS84","GOOGLE","lib_defs","codeWords","parseCode","testObj","testDef","some","testWKT","testProj","msfnz","eccent","sinphi","cosphi","con","sign","adjust_lon","tsfnz","phi","com","phi2z","ts","dphi","eccnth","identity","pt","projs","init","es","lat","names","projections_names","projStore","Ellipsoid_exports","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","Datum_exports","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","lib_datum","ep2","datum_type","srsCode","json","ourProj","datumDef","sphere_","deriveConstants_sphere","ecc","eccentricity","datumObj","Proj","checkParams","compareDatums","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","geodeticToGeocentric","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","X","Y","Z","geocentricToGeodetic","adjust_axis","denorm","xin","yin","zin","toPoint","checkSanity","checkCoord","checkNotWGS","datum_transform","core_wgs84","transformer","from","to","transformedArray","checkProj","oProj","core","fromProj","toProj","coord","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","mgrs_A","I","O","mgrs_V","mgrs_Z","mgrs","mgrs_forward","UTMtoLL","decode","toUpperCase","bottom","mgrs_toPoint","ll","accuracy","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","row","parm","colOrigin","rowOrigin","colInt","rowInt","rollover","getLetter100kID","get100kID","encode","N","T","C","A","M","LongOriginRad","ZoneNumber","Lat","Long","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","LetterDesignator","getLetterDesignator","LLtoUTM","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","topRight","mgrsString","testChar","hunK","sb","substring","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","warn","fromMGRS","mgrsStr","toMGRS","lib_Point","C08","pj_enfn","en","pj_mlfn","sphi","cphi","pj_inv_mlfn","arg","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","cs","tq","ml","tan_phi","ds","g","temp","asin","sinh","hypot","asinhy","log1py","gatg","pp","B","cos_2B","h1","h2","clens","arg_r","hr","hr1","hr2","clens_cmplx","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","hi1","hi","etmerc","cgb","cbg","utg","gtu","np","Qn","Zb","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","adjust_zone","dependsOn","srat","esinp","gauss_MAX_ITER","gauss","rc","phic0","ratexp","K","sterea","sinc0","cosc0","R2","title","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phit","eccen","somerc","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","R","b0","k1","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","omerc","no_off","no_rot","bl","fl","t0","dl","t1","t2","hl","jl","pl","dlon12","dlon10","gamma0","uc","us","vs","ql","sl","tl","vl","ul","POSITIVE_INFINITY","qp","sp","tp","vp","up","lcc","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","f0","rh1","krovak","s45","s90","fi0","alfa","uq","u0","n0","s0","ro0","ad","gfi","u","deltav","eps","ro","czech","fi1","ok","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","asq","cl","ml1","phi1","nl1","rl1","tl1","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","S_POLE","N_POLE","EQUIT","OBLIQ","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","sinph0","cosph0","coslam","sinlam","q","sinb","cosb","phi0","cCe","sCe","ab","cosz","sinz","beta","authlat","asinz","aea","sin_po","cos_po","qs1","qs2","t3","qs0","ns0","qs","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","cea","eqc","dlat","poly_MAX_ITER","poly","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu_MAX_ITER","sinu","C_y","C_x","V","moll","delta_theta","eqdc","ml2","vandg","sinth","costh","gsq","msq","xx","yy","xys","c3","m1","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","H","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","F","ortho","FACE_ENUM","FRONT","BACK","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_fwd_equat_face_theta","qsc_shift_lon_origin","slon","qsc","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","defaultDatum","version","proj4_package","proj4","proj4_projs","_uri_js__WEBPACK_IMPORTED_MODULE_13__","TileWMS","transparent","_source_TileImage_js__WEBPACK_IMPORTED_MODULE_9__","params_","v13_","serverType_","tmpExtent_","updateV13_","setKey","getKeyForParams_","_util_js__WEBPACK_IMPORTED_MODULE_1__","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","getTileCoordForCoordAndResolution","_size_js__WEBPACK_IMPORTED_MODULE_8__","tmpSize","_reproj_js__WEBPACK_IMPORTED_MODULE_7__","baseParams","SERVICE","_common_js__WEBPACK_IMPORTED_MODULE_0__","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","getRequestUrl_","getParams","_source_WMSServerType_js__WEBPACK_IMPORTED_MODULE_10__","GEOSERVER","dpi","MAPSERVER","CARMENTA_SERVER","QGIS","_math_js__WEBPACK_IMPORTED_MODULE_5__","_tilecoord_js__WEBPACK_IMPORTED_MODULE_11__","fixedTileUrlFunction","updateParams","_string_js__WEBPACK_IMPORTED_MODULE_12__","_style_Style_js__WEBPACK_IMPORTED_MODULE_25__","Mode","DrawEventType","DrawEvent","_events_Event_js__WEBPACK_IMPORTED_MODULE_8__","Draw","_interaction_Pointer_js__WEBPACK_IMPORTED_MODULE_21__","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","source_","features_","snapTolerance_","snapTolerance","type_","mode_","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_13__","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","opt_geometry","_geom_Circle_js__WEBPACK_IMPORTED_MODULE_12__","squaredLength","_coordinate_js__WEBPACK_IMPORTED_MODULE_6__","setCenterAndRadius","_geom_Point_js__WEBPACK_IMPORTED_MODULE_19__","_geom_LineString_js__WEBPACK_IMPORTED_MODULE_14__","_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_20__","concat","geometryFunction_","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","_layer_Vector_js__WEBPACK_IMPORTED_MODULE_23__","_source_Vector_js__WEBPACK_IMPORTED_MODULE_24__","getDefaultStyleFunction","_events_condition_js__WEBPACK_IMPORTED_MODULE_9__","freehandCondition_","freehand","freehandCondition","_events_js__WEBPACK_IMPORTED_MODULE_7__","_Object_js__WEBPACK_IMPORTED_MODULE_5__","_interaction_Property_js__WEBPACK_IMPORTED_MODULE_22__","updateState_","_events_EventType_js__WEBPACK_IMPORTED_MODULE_1__","move","_MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_3__","pass","clearTimeout","addToDrawing_","handlePointerMove_","_pointer_MouseSource_js__WEBPACK_IMPORTED_MODULE_18__","startDrawing_","_MapBrowserPointerEvent_js__WEBPACK_IMPORTED_MODULE_4__","circleMode","finishDrawing","atFinish_","abortDrawing_","createRegularPolygon","createBox","_extent_js__WEBPACK_IMPORTED_MODULE_10__","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","updateSketchFeatures_","last","sketchLineGeom","removeLastPoint","sketchFeature","_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_16__","_geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_15__","_geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_17__","sketchFeatures","overlaySource","_source_State_js__WEBPACK_IMPORTED_MODULE_8__","_layer_Base_js__WEBPACK_IMPORTED_MODULE_4__","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","_events_js__WEBPACK_IMPORTED_MODULE_0__","_layer_Property_js__WEBPACK_IMPORTED_MODULE_5__","SOURCE","handleSourcePropertyChange_","setSource","visibleAtResolution","visible","_util_js__WEBPACK_IMPORTED_MODULE_2__","getLayersArray","getLayerStatesArray","opt_states","states","getLayerState","getSourceState","handleSourceChange_","_render_EventType_js__WEBPACK_IMPORTED_MODULE_7__","PRECOMPOSE","layerStatesArray","layerStates","EventTarget","_Disposable_js__WEBPACK_IMPORTED_MODULE_1__","pendingRemovals_","dispatching_","listeners_","propagate","pendingRemovals","_functions_js__WEBPACK_IMPORTED_MODULE_3__","_events_js__WEBPACK_IMPORTED_MODULE_2__","opt_type","_math_js__WEBPACK_IMPORTED_MODULE_9__","_geom_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_6__","appendPoint","multiPoint","getPoint","_geom_Point_js__WEBPACK_IMPORTED_MODULE_5__","getPoints","points","_geom_flat_simplify_js__WEBPACK_IMPORTED_MODULE_12__","appendLineString","_geom_flat_closest_js__WEBPACK_IMPORTED_MODULE_7__","opt_interpolate","_geom_flat_interpolate_js__WEBPACK_IMPORTED_MODULE_10__","_geom_flat_inflate_js__WEBPACK_IMPORTED_MODULE_9__","getLineString","_geom_LineString_js__WEBPACK_IMPORTED_MODULE_5__","getLineStrings","midpoints","midpoint","simplifiedMultiLineString","_geom_flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_11__","_geom_flat_deflate_js__WEBPACK_IMPORTED_MODULE_8__","_math_js__WEBPACK_IMPORTED_MODULE_1__","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","fromString","rgb","fromNamed","hasAlpha","normalize","fromStringInternal_","asArray","_source_XYZ_js__WEBPACK_IMPORTED_MODULE_2__","ATTRIBUTIONS","_source_OSM_js__WEBPACK_IMPORTED_MODULE_1__","LayerConfig","terrain","terrain-background","terrain-labels","terrain-lines","toner-background","toner","toner-hybrid","toner-labels","toner-lines","toner-lite","watercolor","ProviderConfig","Stamen","provider","providerConfig","layerConfig","_style_Stroke_js__WEBPACK_IMPORTED_MODULE_4__","Style","geometry_","defaultGeometryFunction","renderer_","stroke_","zIndex_","toFunction","getZIndex","getRenderer","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","setZIndex","defaultStyles","createDefaultStyle","_style_Fill_js__WEBPACK_IMPORTED_MODULE_3__","_style_Circle_js__WEBPACK_IMPORTED_MODULE_2__","createEditingStyle","white","blue","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_4__","_events_EventTarget_js__WEBPACK_IMPORTED_MODULE_3__","transition_","transitionStarts_","getInterimTile","_TileState_js__WEBPACK_IMPORTED_MODULE_1__","getTileCoord","getAlpha","time","inTransition","endTransition","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","POSTCOMPOSE","_render_ReplayType_js__WEBPACK_IMPORTED_MODULE_0__","ORDER","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","_tilecoord_js__WEBPACK_IMPORTED_MODULE_2__","createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","nullTileUrlFunction","expandUrl","startCharCode","stopCharCode","stop","ENABLE_RASTER_REPROJECTION","ERROR_THRESHOLD","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","appendPolygon","newEndss","_geom_flat_area_js__WEBPACK_IMPORTED_MODULE_8__","flatCenters","_geom_flat_center_js__WEBPACK_IMPORTED_MODULE_9__","getInteriorPoints","_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_5__","simplifiedEndss","simplifiedMultiPolygon","getPolygon","prevEnds","_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_6__","getPolygons","lastEnds","_style_TextPlacement_js__WEBPACK_IMPORTED_MODULE_1__","font_","textAlign_","textBaseline_","_style_Fill_js__WEBPACK_IMPORTED_MODULE_0__","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","padding_","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setScale","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","deflateMultiCoordinatesArray","coordinatesss","opt_endss","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","opt_coordinatesss","_transform_js__WEBPACK_IMPORTED_MODULE_7__","Geometry","extentRevision_","getClosestPoint","opt_closestPoint","_proj_Units_js__WEBPACK_IMPORTED_MODULE_6__","inCoordinates","outCoordinates","pixelExtent","projectedExtent","_geom_flat_transform_js__WEBPACK_IMPORTED_MODULE_4__","linearRingIsClockwise","edge","linearRingIsOriented","isClockwise","linearRingsAreOriented","orientLinearRings","orientLinearRingsArray","_xml_js__WEBPACK_IMPORTED_MODULE_4__","XMLFeature","xmlSerializer_","XMLSerializer","_format_Feature_js__WEBPACK_IMPORTED_MODULE_2__","_format_FormatType_js__WEBPACK_IMPORTED_MODULE_3__","XML","readFeatureFromDocument","readFeatureFromNode","doc","readFeaturesFromDocument","ELEMENT_NODE","readGeometryFromDocument","readProjectionFromDocument","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","_render_ReplayType_js__WEBPACK_IMPORTED_MODULE_3__","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","getImageState","_ImageState_js__WEBPACK_IMPORTED_MODULE_1__","imageReplay","textReplay","lineStringReplay","polygonReplay","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","imageState","unlistenImageChange","listenImageChange","renderGeometry","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_2__","getGeometries","renderFeatureInternal","LAYERGROUP","SIZE","TARGET","VIEW","_extent_js__WEBPACK_IMPORTED_MODULE_7__","Overlay","_Object_js__WEBPACK_IMPORTED_MODULE_2__","insertFirst","_css_js__WEBPACK_IMPORTED_MODULE_4__","autoPan","autoPanAnimation","autoPanMargin","rendered","bottom_","left_","right_","top_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","_OverlayPositioning_js__WEBPACK_IMPORTED_MODULE_3__","setPosition","getElement","getOffset","getPosition","getPositioning","_dom_js__WEBPACK_IMPORTED_MODULE_5__","_MapEventType_js__WEBPACK_IMPORTED_MODULE_1__","updatePixelPosition","container","getOverlayContainer","insertBefore","panIntoView","mapRect","getRect","overlayRect","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","pageXOffset","pageYOffset","setVisible","display","isRendered","mapSize","updateRenderedPosition","CENTER_RIGHT","BOTTOM_CENTER","CENTER_CENTER","TOP_CENTER","CENTER_LEFT","getOptions","_color_js__WEBPACK_IMPORTED_MODULE_0__","asColorLike","CanvasPattern","CanvasGradient","isColorLike","FRACTION","_MapBrowserEvent_js__WEBPACK_IMPORTED_MODULE_1__","MapBrowserPointerEvent","opt_dragging","opt_frameState","_style_Style_js__WEBPACK_IMPORTED_MODULE_12__","SelectEventType","SELECT","SelectEvent","selected","deselected","Select","_interaction_Interaction_js__WEBPACK_IMPORTED_MODULE_8__","_events_condition_js__WEBPACK_IMPORTED_MODULE_5__","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","_functions_js__WEBPACK_IMPORTED_MODULE_6__","hitTolerance_","featureOverlay","_layer_Vector_js__WEBPACK_IMPORTED_MODULE_9__","_source_Vector_js__WEBPACK_IMPORTED_MODULE_11__","_array_js__WEBPACK_IMPORTED_MODULE_2__","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_7__","layerFilter","featureOverlay_","layers","layerFilter_","featureLayerAssociation_","_events_js__WEBPACK_IMPORTED_MODULE_3__","_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_1__","addFeature_","removeFeature_","toggle","_obj_js__WEBPACK_IMPORTED_MODULE_10__","forEachFeatureAtPixel","addFeatureLayerAssociation_","removeFeatureLayerAssociation_","getHitTolerance","setHitTolerance","currentMap","selectedFeatures","unskipFeature","skipFeature","WMTSRequestEncoding","KVP","REST","optionsFromCapabilities","WMTS_WMTS","version_","dimensions_","dimensions","layer_","matrixSet_","matrixSet","tileurlfunction","requestEncoding_","requestEncoding","tilematrixset","Service","Request","Version","Format","createFromWMTSTemplate_","localContext","TileMatrix","getMatrixId","TileCol","TileRow","getKeyForDimensions_","wmtsCap","config","ol_array","elt","tileMatrixSets","supportedCRS","proj1","proj2","matrixLimits","matrixSets","matrixSetObj","projConfig","wgs84BoundingBox","wgs84ProjectionExtent","WMTS","gets","encodings","setUrls","setTileUrlFunction","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","_xml_js__WEBPACK_IMPORTED_MODULE_26__","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_IMAGE_SCALE_MULTIPLIER","DEFAULT_FILL_STYLE","DEFAULT_NO_IMAGE_STYLE","DEFAULT_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","DEFAULT_STROKE_STYLE","DEFAULT_TEXT_STYLE","DEFAULT_STYLE","DEFAULT_STYLE_ARRAY","KML","_format_XMLFeature_js__WEBPACK_IMPORTED_MODULE_6__","_style_Fill_js__WEBPACK_IMPORTED_MODULE_19__","_style_IconAnchorUnits_js__WEBPACK_IMPORTED_MODULE_21__","_style_Icon_js__WEBPACK_IMPORTED_MODULE_20__","anchorOrigin","_style_IconOrigin_js__WEBPACK_IMPORTED_MODULE_22__","anchorXUnits","anchorYUnits","_style_Stroke_js__WEBPACK_IMPORTED_MODULE_23__","_style_Text_js__WEBPACK_IMPORTED_MODULE_25__","_style_Style_js__WEBPACK_IMPORTED_MODULE_24__","_proj_js__WEBPACK_IMPORTED_MODULE_18__","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","GX_NAMESPACE_URIS","NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","pixels","insetPixels","createNameStyleFunction","foundStyle","textOffset","imageSize","getImageSize","imageScale","foundText","createFeatureStyleFunction","styleUrl","sharedStyles","nameStyle","drawName","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_10__","findStyle","styleValue","readColor","hexColor","readFlatCoordinates","re","readURI","baseURI","location","href","URL","readScale","_format_xsd_js__WEBPACK_IMPORTED_MODULE_7__","STYLE_MAP_PARSERS","Pair","pairObject","PAIR_PARSERS","readStyleMapValue","ICON_STYLE_PARSERS","Icon","iconObject","ICON_PARSERS","heading","hotSpot","xunits","yunits","LABEL_STYLE_PARSERS","LINE_STYLE_PARSERS","POLY_STYLE_PARSERS","outline","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","GX_MULTITRACK_GEOMETRY_PARSERS","Track","readGxTrack","GX_TRACK_PARSERS","when","whens","gxTrackObject","_geom_LineString_js__WEBPACK_IMPORTED_MODULE_11__","_geom_GeometryLayout_js__WEBPACK_IMPORTED_MODULE_9__","GEOMETRY_FLAT_COORDINATES_PARSERS","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","extrude","tessellate","altitudeMode","_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_16__","MULTI_GEOMETRY_PARSERS","MultiGeometry","readMultiGeometry","_geom_GeometryCollection_js__WEBPACK_IMPORTED_MODULE_8__","multiGeometry","homogeneous","_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_13__","setCommonGeometryProperties","_geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_12__","_geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_14__","_asserts_js__WEBPACK_IMPORTED_MODULE_3__","_geom_Point_js__WEBPACK_IMPORTED_MODULE_15__","FLAT_LINEAR_RINGS_PARSERS","innerBoundaryIs","flatLinearRing","INNER_BOUNDARY_IS_PARSERS","outerBoundaryIs","OUTER_BOUNDARY_IS_PARSERS","STYLE_PARSERS","IconStyle","styleObject","IconObject","drawIcon","_math_js__WEBPACK_IMPORTED_MODULE_17__","offsetOrigin","LabelStyle","LineStyle","PolyStyle","readStyle","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DATA_PARSERS","displayName","EXTENDED_DATA_PARSERS","Data","featureObject","SchemaData","SCHEMA_DATA_PARSERS","extendedDataParser","REGION_PARSERS","LatLonAltBox","LAT_LON_ALT_BOX_PARSERS","regionObject","Lod","LOD_PARSERS","lodObject","regionParser","SimpleData","minAltitude","maxAltitude","north","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","NETWORK_LINK_PARSERS","ExtendedData","Region","Link","LINK_PARSERS","address","description","phoneNumber","visibility","PLACEMARK_PARSERS","StyleMap","styleMapValue","placemarkObject","MultiTrack","writeColorTextNode","rgba","_color_js__WEBPACK_IMPORTED_MODULE_4__","abgr","hex","readDocumentOrFolder_","Folder","Placemark","readPlacemark_","readSharedStyle_","readSharedStyleMap_","_Feature_js__WEBPACK_IMPORTED_MODULE_1__","_format_Feature_js__WEBPACK_IMPORTED_MODULE_5__","styleUri","fs","readName","readNameFromDocument","readNameFromNode","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","EXTENDEDDATA_NODE_SERIALIZERS","pair","setAttribute","DOCUMENT_SERIALIZERS","writePlacemark","DOCUMENT_NODE_FACTORY","DATA_NODE_FACTORY","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","icon","vec2","writeScaleTextNode","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","GEOMETRY_TYPE_TO_NODENAME","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","factory","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","namesAndValues","STYLE_SEQUENCE","STYLE_SERIALIZERS","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","outerRing","POLY_STYLE_SERIALIZERS","COLOR_NODE_FACTORY","getSrc","iconImageSize","iconProperties","KML_SEQUENCE","KML_SERIALIZERS","kml","xmlnsUri","setAttributeNS","TileGrid","_array_js__WEBPACK_IMPORTED_MODULE_3__","origins","origin_","origins_","_extent_js__WEBPACK_IMPORTED_MODULE_4__","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","sizes","_TileRange_js__WEBPACK_IMPORTED_MODULE_2__","calculateTileRanges_","tmpTileCoord","forEachTileCoord","forEachTileCoordParentTileRange","opt_tileRange","tileCoordExtent","getTileCoordChildTileRange","getTileRangeExtent","_size_js__WEBPACK_IMPORTED_MODULE_6__","getTileCoordForXYAndZ_","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordResolution","fullTileRanges","_extent_js__WEBPACK_IMPORTED_MODULE_0__","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","appendParams","keyParams","encodeURIComponent","padNumber","opt_precision","numberString","compareVersions","v1","v2","s1","n1","n2","HYBRID","_style_Image_js__WEBPACK_IMPORTED_MODULE_6__","RegularShape","checksums_","hitDetectionCanvas_","radius_","radius1","radius2_","radius2","size_","imageSize_","hitDetectionImageSize_","atlasManager_","atlasManager","render_","getRadius2","setOpacity","getHitDetectionImageSize","_ImageState_js__WEBPACK_IMPORTED_MODULE_4__","_render_canvas_js__WEBPACK_IMPORTED_MODULE_5__","_colorlike_js__WEBPACK_IMPORTED_MODULE_1__","renderOptions","_dom_js__WEBPACK_IMPORTED_MODULE_2__","draw_","createHitDetectionCanvas_","hasCustomHitDetectionImage","renderHitDetectionCallback","drawHitDetectionCanvas_","getChecksum","info","hitImage","angle0","radiusC","strokeChecksum","fillChecksum","checksum","VectorImageTile","sourceRevision","sourceTiles","context_","replayState_","sourceRevision_","loadListenerKeys_","sourceTileListenerKeys_","sourceZ","useLoadedOnly","loadCount","sourceTileKey","consumers","finishLoading_","tileKey","errorSourceTiles","uid","loaded","empty","defaultLoadFunction","featureloader","onLoad","onError","VectorTile","replayGroups_","tileLoadFunction_","DEFAULT_EXTENT","setFeatures","ol_VectorTile","VectorTile_VectorTile","tileGrids_","ol_VectorImageTile","_Projection_js__WEBPACK_IMPORTED_MODULE_2__","register","projCodes","_proj_js__WEBPACK_IMPORTED_MODULE_0__","code1","code2","_transforms_js__WEBPACK_IMPORTED_MODULE_1__","douglasPeucker","simplifiedOffset","markers","first","maxSquaredDistance","douglasPeuckerArray","snap","quantize","quantizeArray","quantizeMultiArray","Stroke","color_","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","checksum_","setColor","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","_events_EventType_js__WEBPACK_IMPORTED_MODULE_3__","Observable","_events_EventTarget_js__WEBPACK_IMPORTED_MODULE_2__","revision_","unByKey","on","once","un","_tilegrid_js__WEBPACK_IMPORTED_MODULE_9__","TileSource","_source_Source_js__WEBPACK_IMPORTED_MODULE_7__","opaque_","tilePixelRatio_","_TileCache_js__WEBPACK_IMPORTED_MODULE_2__","key_","forEachLoadedTile","covered","_tilecoord_js__WEBPACK_IMPORTED_MODULE_8__","_TileState_js__WEBPACK_IMPORTED_MODULE_3__","refresh","useTile","TileSourceEvent","drawGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","opt_declutterGroup","_color_js__WEBPACK_IMPORTED_MODULE_1__","Fill","disable","createSnapToN","createSnapToZero","opt_tolerance","EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","_transform_js__WEBPACK_IMPORTED_MODULE_8__","CanvasTileLayerRenderer","tileLayer","_canvas_IntermediateCanvas_js__WEBPACK_IMPORTED_MODULE_7__","oversampling_","newTiles_","_extent_js__WEBPACK_IMPORTED_MODULE_6__","tmpTileRange_","imageTransform_","isDrawableTile_","tileState","viewResolution","viewCenter","tileSource","oversampling","imageExtent","tilesToDrawByZ","findLoadedTiles","createLoadedTileFinder","hints","animatingOrInteracting","_ViewHint_js__WEBPACK_IMPORTED_MODULE_4__","tmpTileRange","childTileRange","renderedResolution","tilePixelSize","currentScale","currentTilePixelSize","tileGutter","tilesToDraw","drawTileImage","coordinateToCanvasPixelTransform","updateUsedTiles","manageTilePyramid","scheduleExpireCache","alphaChanged","getImageTransform","ImageWMS","_source_Image_js__WEBPACK_IMPORTED_MODULE_10__","crossOrigin_","imageLoadFunction_","imageLoadFunction","ratio_","GETFEATUREINFO_IMAGE_SIZE","_proj_js__WEBPACK_IMPORTED_MODULE_8__","_reproj_js__WEBPACK_IMPORTED_MODULE_9__","_obj_js__WEBPACK_IMPORTED_MODULE_7__","imageResolution","viewWidth","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","_Image_js__WEBPACK_IMPORTED_MODULE_2__","_events_js__WEBPACK_IMPORTED_MODULE_4__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_5__","getImageLoadFunction","_source_WMSServerType_js__WEBPACK_IMPORTED_MODULE_11__","setImageLoadFunction","setUrl","_layer_VectorTileRenderType_js__WEBPACK_IMPORTED_MODULE_5__","_layer_Vector_js__WEBPACK_IMPORTED_MODULE_4__","_obj_js__WEBPACK_IMPORTED_MODULE_3__","RBush","opt_maxEntries","rbush_","rbush__WEBPACK_IMPORTED_MODULE_1___default","items_","items","search","forEach_","rbush","TileEventType","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","setTileLoadFunction","opt_key","pruneExceptNewestZ","_proj_js__WEBPACK_IMPORTED_MODULE_3__","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","enlargeClipPoint","centroidX","centroidY","dX","dY","triangulation","_dom_js__WEBPACK_IMPORTED_MODULE_0__","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","triangle","v0","u1","u2","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","_math_js__WEBPACK_IMPORTED_MODULE_2__","p0","_geom_flat_simplify_js__WEBPACK_IMPORTED_MODULE_9__","_geom_flat_area_js__WEBPACK_IMPORTED_MODULE_5__","simplifiedLinearRing","MOVESTART","MOVEEND","_functions_js__WEBPACK_IMPORTED_MODULE_0__","Disposable","disposed_","_events_EventTarget_js__WEBPACK_IMPORTED_MODULE_1__","MapRenderer","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","expireIconCache","_style_IconImageCache_js__WEBPACK_IMPORTED_MODULE_7__","expire","sortByZIndex","state1","state2","constructors","getLayerRendererConstructors","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","removeLayerRenderers","removeLayerRendererByKey_","thisArg2","translatedCoordinate","_layer_Layer_js__WEBPACK_IMPORTED_MODULE_6__","layerRenderer","getLayerRenderer","forEachLayerAtPixel","hasFeatureAtCoordinate","_functions_js__WEBPACK_IMPORTED_MODULE_5__","layerKey","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","renderFrame","removeUnusedLayerRenderers_","scheduleExpireIconCache","postRenderFunctions","scheduleRemoveUnusedLayerRenderers","DEFAULT_TILE_SIZE","DEFAULT_MAX_ZOOM","read","readFromDocument","readFromNode","readHref","NAMESPACE_URI","_format_FormatType_js__WEBPACK_IMPORTED_MODULE_2__","TextFeature","_format_Feature_js__WEBPACK_IMPORTED_MODULE_1__","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","opt_geometries","_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_4__","geometries_","listenGeometriesChange_","cloneGeometries","clonedGeometries","unlistenGeometriesChange_","geometryCollection","setGeometries","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_5__","JSONFeature","getObject","stringify","TileRange","contains","containsTileRange","_source_State_js__WEBPACK_IMPORTED_MODULE_4__","attributions_","adaptAttributions_","state_","wrapX_","attributionLike","interpolatePoint","pointX","pointY","cumulativeLengths","lineStringCoordinateAtM","lo","m0","lineStringsCoordinateAtM","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","_events_Event_js__WEBPACK_IMPORTED_MODULE_1__","MapEvent","RenderFeature","flatCoordinates_","flatMidpoints_","properties_","interiorpoint","render_Feature","MVT","featureClass_","featureClass","layerName_","layerName","layers_","layersPBFReader","tag","pbf","readVarint","pos","readFields","layerPBFReader","readFloat","readDouble","readVarint64","readSVarint","featurePBFReader","readRawFeature","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","geom","prevEndIndex","orient","GeometryLayout","FormatType","pbf_default","pbfLayers","pbfLayer","setLayers","OWS","PARSERS","ServiceIdentification","SERVICE_IDENTIFICATION_PARSERS","ServiceProvider","SERVICE_PROVIDER_PARSERS","OperationsMetadata","OPERATIONS_METADATA_PARSERS","ADDRESS_PARSERS","DeliveryPoint","xsd","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","ALLOWED_VALUES_PARSERS","Value","CONSTRAINT_PARSERS","AllowedValues","CONTACT_INFO_PARSERS","Phone","PHONE_PARSERS","Address","DCP_PARSERS","HTTP","HTTP_PARSERS","Get","XLink","REQUEST_METHOD_PARSERS","Post","OPERATION_PARSERS","DCP","Operation","Voice","Facsimile","Constraint","SERVICE_CONTACT_PARSERS","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","owsObject","format_OWS","WMTSCapabilities","owsParser_","WMTSCapabilities_NAMESPACE_URIS","OWS_NAMESPACE_URIS","WMTSCapabilities_PARSERS","Contents","CONTENTS_PARSERS","LAYER_PARSERS","TileMatrixSet","TMS_PARSERS","isDefault","TileMatrixSetLink","TMS_LINKS_PARSERS","Dimension","DIMENSION_PARSERS","ResourceURL","resourceType","WGS84BoundingBox","WGS84_BBOX_READERS","Identifier","LegendURL","legend","TileMatrixSetLimits","TMS_LIMITS_LIST_PARSERS","TileMatrixLimits","TMS_LIMITS_PARSERS","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","LowerCorner","readCoordinates","UpperCorner","WellKnownScaleSet","TM_PARSERS","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","WMTSCapabilityObject","WebGLShader","isAnimated","Shader","WebGLFragment","webgl","Fragment","WebGLVertex","Vertex","fragment","vertex","defaultshader_Locations","program","u_projectionMatrix","getUniformLocation","u_offsetScaleMatrix","u_offsetRotateMatrix","u_lineWidth","u_pixelRatio","u_opacity","u_fillColor","u_strokeColor","u_size","a_position","getAttribLocation","a_instruction","a_radius","fromTransform","mat4","WebGLReplay","projectionMatrix_","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","indices","indicesBuffer","startIndices","startIndicesFeature","verticesBuffer","getDeleteResourcesFunction","setUpProgram","shutDownProgram","locations","drawReplay","hitDetection","drawHitDetectionReplayOneByOne","drawHitDetectionReplay","oneByOne","drawHitDetectionReplayAll","DEPTH_BUFFER_BIT","getGL","tmpStencil","tmpStencilFunc","tmpStencilMaskVal","tmpStencilRef","tmpStencilMask","tmpStencilOpFail","tmpStencilOpPass","tmpStencilOpZFail","isEnabled","STENCIL_FUNC","STENCIL_VALUE_MASK","STENCIL_REF","STENCIL_WRITEMASK","STENCIL_FAIL","STENCIL_PASS_DEPTH_PASS","STENCIL_PASS_DEPTH_FAIL","enable","STENCIL_BUFFER_BIT","stencilMask","stencilFunc","ALWAYS","stencilOp","KEEP","REPLACE","NOTEQUAL","bindBuffer","projectionMatrix","offsetScaleMatrix","offsetRotateMatrix","uniformMatrix4fv","uniform1f","drawElements","elementType","hasOESElementIndexUint","numItems","offsetInBytes","DEFAULT_FILLSTYLE","DEFAULT_LINEDASH","DEFAULT_STROKESTYLE","EPSILON","triangleIsCounterClockwise","BufferUsage","WebGLBuffer","opt_arr","opt_usage","arr_","usage_","getUsage","Buffer","WebGLCircleReplay","defaultLocations_","styles_","styleIndices_","fillColor","strokeColor","numVertices","numIndices","lastState","deleteBuffer","getProgram","useProgram","enableVertexAttribArray","vertexAttribPointer","uniform2fv","disableVertexAttribArray","nextStyle","setFillStyle_","drawReplaySkipping_","groupStart","featureUid","featureIndex","featureStart","uniform4fv","CircleReplay","defaultshader_fragment","defaultshader_vertex","texturereplay_defaultshader_Locations","u_image","a_texCoord","a_offsets","a_opacity","a_rotateWithView","ContextEventType","WebGLContext","gl_","bufferCache_","shaderCache_","programCache_","currentProgram_","hitDetectionFramebuffer_","hitDetectionTexture_","hitDetectionRenderbuffer_","getExtension","handleWebGLContextLost","handleWebGLContextRestored","createTextureInternal","opt_wrapS","opt_wrapT","texture","createTexture","bindTexture","texParameteri","createEmptyTexture","texImage2D","buf","bufferKey","bufferCacheEntry","createBuffer","arrayBuffer","Float32Array","Uint32Array","Uint16Array","bufferData","isContextLost","deleteProgram","deleteShader","deleteFramebuffer","deleteRenderbuffer","deleteTexture","getCanvas","getHitDetectionFramebuffer","initHitDetectionFramebuffer_","getShader","shaderObject","shaderKey","shader","createShader","shaderSource","compileShader","fragmentShaderObject","vertexShaderObject","programKey","createProgram","attachShader","linkProgram","framebuffer","createFramebuffer","bindFramebuffer","renderbuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferTexture2D","framebufferRenderbuffer","DEPTH_ATTACHMENT","Context","WebGLTextureReplay","groupIndices","hitDetectionGroupIndices","defaultLocations","textures","getTextures","drawCoordinates","createTextures","images","texturePerImage","getHitDetectionTextures","drawReplaySkipping","groupEnd","hitDetectionTextures","opt_all","TextureReplay","WebGLImageReplay","images_","hitDetectionImages_","textures_","hitDetectionTextures_","currentImage","lineStringIsClosed","flat_area","linestringreplay_defaultshader_fragment","linestringreplay_defaultshader_vertex","linestringreplay_defaultshader_Locations","u_miterLimit","u_color","a_lastPos","a_nextPos","a_direction","WebGLLineStringReplay","startCoords","lastSign","addVertices_","product","isValid_","firstP","lastP","indexCount","drawPolygonCoordinates","holeFlatCoordinates","setPolygonStyle","opt_index","getCurrentIndex","tmpDepthFunc","DEPTH_FUNC","tmpDepthMask","DEPTH_WRITEMASK","depthMask","depthFunc","polygonreplay_defaultshader_fragment","polygonreplay_defaultshader_vertex","polygonreplay_defaultshader_Locations","LinkedList","opt_circular","first_","last_","head_","circular_","length_","insertItem","next","head","removeItem","firstItem","lastItem","nextItem","getNextItem","prevItem","getPrevItem","getCurrItem","setFirstItem","list","structs_LinkedList","WebGLPolygonReplay","rtree","processFlatCoordinates_","maxCoords","getMaxCoords_","holeLists","holeList","classifyPoints_","currList","currItem","getIntersections_","bridgeHole_","triangulate_","clockwise","segments","createPoint_","insertItem_","seg","ccw","pointsReclassified","reflex","removeItem_","hole","holeMaxX","listMaxX","bestPoint","p5","minDist","intersectingSegments","currSeg","calculateIntersection_","dist","pointsInTriangle","getPointsInTriangle_","currPoint","currTheta","p0Bridge","p1Bridge","simple","isSimple_","clipEars_","resolveSelfIntersections_","splitPolygon_","isClockwise_","processedEars","variableCriterion","diagonalIsInside_","opt_touch","resolvedIntersections","breakCond","intersections","newPolygon","newRtree","opt_rtree","opt_reflex","segmentsInExtent","denom","ub","p1IsLeftOf","p1IsRightOf","p3IsLeftOf","p3IsRightOf","p1InCone","p3InCone","currIndex","currLineIndex","holes","holeFlatCoords","lineDeleter","nullStrokeStyle","WebGLTextReplay","measureCanvas_","atlases_","currAtlas_","glyphAtlas","textSize","getTextSize_","currX","currY","charArr","charInfo","atlas","getInfo","drawText_","textHeight","str","sum","curr","addCharToAtlas_","mCtx","ctx","textFillStyleColor","textStrokeStyleColor","getAtlas_","calculateHash_","AtlasManager","space","HIT_DETECTION_SIZE","WebGLReplayGroup","replayHitDetection_","Uint8Array","readPixels","webgl_ReplayGroup","WebGLImmediateRenderer","center_","imageStyle_","fillStyle_","strokeStyle_","textStyle_","Immediate","defaultmapshader_fragment","defaultmapshader_vertex","defaultmapshader_Locations","u_texCoordMatrix","u_texture","WebGLLayerRenderer","arrayBuffer_","framebufferDimension","texCoordMatrix","postRenderFunction","dispatchComposeEvent_","uniform1i","getTexCoordMatrix","getProjectionMatrix","getTexture","drawArrays","composeEvent","webgl_Layer","WebGLImageLayerRenderer","imageLayer","hitCanvasContext_","hitTransformationMatrix_","createTexture_","imageElement","imageSource","renderedExtent","loadImage","updateProjectionMatrix_","canvasWidth","canvasHeight","canvasExtentWidth","canvasExtentHeight","getHitTransformationMatrix_","pixelOnFrameBuffer","mapCoordTransform","projectionMatrixInv","WebGLMapRenderer","css","clipTileCanvasWidth_","clipTileCanvasHeight_","clipTileContext_","renderedVisible_","antialias","depth","preserveDrawingBuffer","stencil","textureCache_","LRUCache","focus_","tileTextureQueue_","tileCenter","loadNextTileTexture_","bindTileTexture","textureCacheFrameMarkerCount_","initializeGL_","magFilter","minFilter","textureCacheEntry","clipTileCanvas","clipTileContext","vectorContext","expireCache_","peekLast","peekLastKey","getTileTextureQueue","renderers","activeTexture","blendFuncSeparate","isTileTextureLoaded","layerStatesToDraw","layer_Layer","State","clearColor","viewport","webgl_Map","tilelayershader_fragment","tilelayershader_vertex","tilelayershader_Locations","u_tileOffset","WebGLTileLayerRenderer","fragmentShader_","vertexShader_","locations_","renderArrayBuffer_","renderedTileRange_","renderedFramebufferExtent_","ol_size","tilePixelResolution","framebufferExtent","tileRangeSize","maxDimension","framebufferExtentDimension","allTilesLoaded","drawable","fullyLoaded","tileTextureQueue","pixelOnMapScaled","pixelOnFrameBufferScaled","WebGLVectorLayerRenderer","layerState_","scissor","WebGLMap","_tilegrid_TileGrid_js__WEBPACK_IMPORTED_MODULE_3__","WMTSTileGrid","matrixIds_","matrixIds","createFromCapabilitiesMatrixSet","opt_matrixLimits","switchOriginXY","matrixAvailable","elt_ml","tileWidth","tileHeight","getMatrixIds","_extent_js__WEBPACK_IMPORTED_MODULE_5__","ImageWrapper","_ImageBase_js__WEBPACK_IMPORTED_MODULE_1__","_ImageState_js__WEBPACK_IMPORTED_MODULE_2__","src_","imageListenerKeys_","handleImageError_","unlistenImage_","handleImageLoad_","RenderEvent","opt_vectorContext","opt_context","opt_glContext","glContext","_flat_segments_js__WEBPACK_IMPORTED_MODULE_2__","intersectsLineString","coordinatesExtent","point1","point2","intersectsLineStringArray","intersectsLinearRingArray","_flat_contains_js__WEBPACK_IMPORTED_MODULE_1__","intersectsLinearRing","intersectsLinearRingMultiArray","twiceArea","linearRingss","_transform_js__WEBPACK_IMPORTED_MODULE_19__","RasterEventType","RasterOperationType","RasterSourceEvent","_events_Event_js__WEBPACK_IMPORTED_MODULE_5__","RasterSource","worker_","operationType_","operationType","threads_","threads","renderers_","createRenderers","rr","_events_EventType_js__WEBPACK_IMPORTED_MODULE_6__","tileQueue_","_TileQueue_js__WEBPACK_IMPORTED_MODULE_2__","requestedFrameState_","renderedImageCanvas_","frameState_","tileQueue","wantedTiles","_source_Image_js__WEBPACK_IMPORTED_MODULE_16__","operation","setOperation","lib","opt_lib","pixelworks_lib_index__WEBPACK_IMPORTED_MODULE_7__","imageOps","queue","updateFrameState_","_extent_js__WEBPACK_IMPORTED_MODULE_8__","allSourcesReady_","ready","_source_State_js__WEBPACK_IMPORTED_MODULE_17__","processSources_","loadMoreTiles","imageDatas","process","onWorkerComplete_","_dom_js__WEBPACK_IMPORTED_MODULE_3__","_ImageCanvas_js__WEBPACK_IMPORTED_MODULE_1__","putImageData","sharedContext","_source_Tile_js__WEBPACK_IMPORTED_MODULE_18__","_layer_Tile_js__WEBPACK_IMPORTED_MODULE_12__","_renderer_canvas_TileLayer_js__WEBPACK_IMPORTED_MODULE_15__","createTileRenderer","_layer_Image_js__WEBPACK_IMPORTED_MODULE_11__","_renderer_canvas_ImageLayer_js__WEBPACK_IMPORTED_MODULE_14__","createImageRenderer","_layer_Layer_js__WEBPACK_IMPORTED_MODULE_10__","_LayerType_js__WEBPACK_IMPORTED_MODULE_9__","DEFAULT_RADIUS","opt_radius","deltaLatBy2","deltaLonBy2","getLengthInternal","getAreaInternal","bearing","lon1","dByR","_pointer_EventSource_js__WEBPACK_IMPORTED_MODULE_1__","MouseSource","mousedown","mousemove","mouseup","mouseover","mouseout","pointerMap","lastTouches","POINTER_ID","POINTER_TYPE","prepareEvent","inEvent","cloneEvent","pd","isEventSimulatedFromTouch_","lts","cancel","down","cleanupMouse","enterOver","leaveOut","DEFAULT_WMS_VERSION","CanvasLayerRenderer","_Layer_js__WEBPACK_IMPORTED_MODULE_7__","transform_","topLeft","bottomRight","bottomLeft","opt_transform","_render_canvas_Immediate_js__WEBPACK_IMPORTED_MODULE_6__","_render_Event_js__WEBPACK_IMPORTED_MODULE_3__","forEachLayerAtCoordinate","_render_EventType_js__WEBPACK_IMPORTED_MODULE_4__","_transform_js__WEBPACK_IMPORTED_MODULE_6__","IntermediateCanvasRenderer","_canvas_Layer_js__WEBPACK_IMPORTED_MODULE_5__","imageTransform","dw","dh","_functions_js__WEBPACK_IMPORTED_MODULE_4__","_coordinate_js__WEBPACK_IMPORTED_MODULE_1__","opt_errback","opt_callbackParam","script","cleanup","async","timer","getElementsByTagName","opt_highWaterMark","count_","entries_","oldest_","newest_","value_","newer","older","peekFirstKey","setSize","getInteriorPointOfArray","flatCentersOffset","maxSegmentLength","getInteriorPointsOfMultiArray","_style_Style_js__WEBPACK_IMPORTED_MODULE_20__","ModifyEventType","MODIFYSTART","MODIFYEND","ModifyEvent","mapBrowserPointerEvent","_events_Event_js__WEBPACK_IMPORTED_MODULE_9__","Modify","_interaction_Pointer_js__WEBPACK_IMPORTED_MODULE_15__","_events_condition_js__WEBPACK_IMPORTED_MODULE_11__","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexFeature_","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","rBush_","_structs_RBush_js__WEBPACK_IMPORTED_MODULE_19__","pixelTolerance_","pixelTolerance","snappedToVertex_","changingFeature_","dragSegments_","_layer_Vector_js__WEBPACK_IMPORTED_MODULE_16__","_source_Vector_js__WEBPACK_IMPORTED_MODULE_17__","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","_events_js__WEBPACK_IMPORTED_MODULE_8__","_source_VectorEventType_js__WEBPACK_IMPORTED_MODULE_18__","handleSourceAdd_","handleSourceRemove_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","CIRCLE_CENTER_INDEX","CIRCLE_CIRCUMFERENCE_INDEX","compareIndexes","handlePointerAtPixel_","pixelCoordinate","vertexFeature","insertVertices","vertexExtent","_extent_js__WEBPACK_IMPORTED_MODULE_12__","segmentDataMatches","componentSegments","segmentDataMatch","closestVertex","closestOnSegmentData","_coordinate_js__WEBPACK_IMPORTED_MODULE_7__","willModifyFeatures_","insertVertex_","dragSegment","segmentData","setRadius","setGeometryCoordinates_","createOrUpdateVertexFeature_","centerSegmentData","featureSegments","circumferenceSegmentData","_MapBrowserPointerEvent_js__WEBPACK_IMPORTED_MODULE_5__","_MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_4__","removePoint","pointDistanceToSegmentDataSquared","pointCoordinates","distanceToCenterSquared","distanceToCircumference","_events_EventType_js__WEBPACK_IMPORTED_MODULE_10__","removeFeatureSegmentData_","rBush","nodesToRemove","rings","kk","_Feature_js__WEBPACK_IMPORTED_MODULE_3__","_geom_Point_js__WEBPACK_IMPORTED_MODULE_14__","sortByDistance","nodes","closestSegment","vertexPixel","vertexSegments","pixel1","pixel2","squaredDist1","squaredDist2","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","dragSegments","segmentsByFeature","component","newIndex","deleted","_array_js__WEBPACK_IMPORTED_MODULE_6__","RenderBox","element_","startPixel_","endPixel_","startPixel","endPixel","setPixels","createOrUpdateGeometry","Box","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","DragBoxEvent","box_","minArea_","minArea","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","GeolocationProperty","Geolocation","position_","watchId_","handleProjectionChanged_","handleTrackingChanged_","trackingOptions","setTrackingOptions","setTracking","tracking","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","altitude","altitudeAccuracy","longitude","latitude","projectedPosition","speed","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getSpeed","_transform_js__WEBPACK_IMPORTED_MODULE_10__","CanvasImmediateRenderer","_VectorContext_js__WEBPACK_IMPORTED_MODULE_8__","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageSnapToPixel_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","_geom_flat_transform_js__WEBPACK_IMPORTED_MODULE_6__","localTransform","setContextFillState_","setContextStrokeState_","setContextTextState_","moveToLineTo_","close","drawRings_","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","_has_js__WEBPACK_IMPORTED_MODULE_7__","contextTextState","_canvas_js__WEBPACK_IMPORTED_MODULE_9__","_colorlike_js__WEBPACK_IMPORTED_MODULE_2__","imageAnchor","imageImage","imageOrigin","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","ImageCanvas","opt_loader","error_","getError","handleLoad_","default","quickselect","maxEntries","_maxEntries","_minEntries","_initFormat","findItem","equalsFn","calcBBox","toBBox","distBBox","children","destNode","createNode","leaf","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","enlargedArea","intersectionArea","multiSelect","_all","childBBox","nodesToSearch","_build","_splitRoot","tmpNode","_insert","goingUp","path","indexes","_condense","compareMinX","compareMinY","toJSON","fromJSON","right2","right3","N2","_chooseSubtree","targetNode","enlargement","minEnlargement","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","bbox1","bbox2","overlap","minOverlap","_allDistMargin","leftBBox","rightBBox","siblings","compareArr","Function","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerEventHandler_","PointerEventHandler","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","isMoving_","dragging","ol_MapBrowserEventHandler","optionsInternal","keyboardEventTarget","layerGroup","Group","overlays","MapProperty","createOptionsInternal","maxTilesLoading_","maxTilesLoading","loadTilesWhileAnimating_","loadTilesWhileAnimating","loadTilesWhileInteracting_","loadTilesWhileInteracting","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","overlayEvents","events_EventType","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","TileQueue","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","CollectionEventType","addOverlayInternal_","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","getLayers","addOverlay","overlay","getOverlays","getFeaturesAtPixel","hasFeatureAtPixel","getEventCoordinate","getEventPixel","eventPosition","changedTouches","getTarget","getOverlayById","tileSourceKey","MapBrowserEvent","interactionsArray","handlePostRender","maxTotalLoading","maxNewLoads","getTilesLoading","targetElement","updateSize","handleViewPropertyChanged_","ObjectEventType","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","pixelResolution","MapEventType","setLayerGroup","setView","computedStyle","_proj_js__WEBPACK_IMPORTED_MODULE_10__","TopoJSON","_format_JSONFeature_js__WEBPACK_IMPORTED_MODULE_3__","transformVertex","_geom_Point_js__WEBPACK_IMPORTED_MODULE_8__","arcs","concatenateArcs","_geom_LineString_js__WEBPACK_IMPORTED_MODULE_4__","_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_9__","_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_6__","_geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_5__","polyArray","ringCoords","_geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_7__","readFeaturesFromGeometryCollection","readFeatureFromGeometry","transformArc","topoJSONTopology","transformArcs","topoJSONFeatures","objectName","_Tile_js__WEBPACK_IMPORTED_MODULE_1__","getBlankImage","fillRect","_TileState_js__WEBPACK_IMPORTED_MODULE_2__","naturalWidth","naturalHeight","_source_State_js__WEBPACK_IMPORTED_MODULE_7__","LayerRenderer","handleImageChange_","opt_tileCallback","ImageStyle","setRotateWithView","setSnapToPixel","BaseLayer","_layer_Property_js__WEBPACK_IMPORTED_MODULE_2__","_math_js__WEBPACK_IMPORTED_MODULE_3__","setMaxResolution","setMinResolution","zindex","_interaction_Pointer_js__WEBPACK_IMPORTED_MODULE_4__","constrainResolution_","lastDistance_","lastScaleDelta_","scaleDelta","newResolution","_interaction_Interaction_js__WEBPACK_IMPORTED_MODULE_3__","_ViewHint_js__WEBPACK_IMPORTED_MODULE_1__","_math_js__WEBPACK_IMPORTED_MODULE_7__","TRACKPAD","_interaction_Interaction_js__WEBPACK_IMPORTED_MODULE_6__","timeout_","timeout","useAnchor_","useAnchor","_events_condition_js__WEBPACK_IMPORTED_MODULE_2__","lastAnchor_","startTime_","timeoutId_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","wheelEvent","_has_js__WEBPACK_IMPORTED_MODULE_5__","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","decrementInteractingHint_","rebound","_easing_js__WEBPACK_IMPORTED_MODULE_3__","timeLeft","handleWheelZoom_","setMouseAnchor","MsSource","MSPointerDown","msPointerDown","MSPointerMove","msPointerMove","MSPointerUp","msPointerUp","MSPointerOut","msPointerOut","MSPointerOver","msPointerOver","MSPointerCancel","msPointerCancel","MSGotPointerCapture","msGotPointerCapture","MSLostPointerCapture","msLostPointerCapture","POINTER_TYPES","prepareEvent_","makeEvent","pointer_MsSource","NativeSource","pointerdown","pointerDown","pointermove","pointerup","pointerUp","pointerout","pointerOut","pointerover","pointerOver","pointercancel","pointerCancel","gotpointercapture","gotPointerCapture","lostpointercapture","lostPointerCapture","fireNativeEvent","pointer_NativeSource","PointerEvent","opt_eventDict","eventDict","buttons","getButtons_","pressure","getPressure_","bubbles","cancelable","detail","screenX","screenY","relatedTarget","tiltX","tiltY","hwTimestamp","HAS_BUTTONS","which","ev","MouseEvent","pointer_PointerEvent","TouchSource","mouseSource","touchstart","touchmove","touchend","touchcancel","firstTouchId_","clickCount_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","setPrimaryTouch_","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","resetClickCountHandler_","touchToPointer_","webkitRadiusX","radiusX","webkitRadiusY","radiusY","webkitForce","force","processTouches_","inFunction","touches","pointer","findTouch_","touchList","searchId","vacuumTouches_","cancelOut_","dedupSynthMouse_","overDown_","outTarget","over","enter","moveOverOut_","outEvent","upOut_","leave","cleanUpPointer_","lt","pointer_TouchSource","eventMap_","eventSourceList_","registerSources","CLONE_PROPS","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","eventName","ol_events","eventCopy","fireEvent","contains_","contained","inType","wrapMouseEvent","_xml_js__WEBPACK_IMPORTED_MODULE_8__","_format_GMLBase_js__WEBPACK_IMPORTED_MODULE_3__","GML2","readFlatCoordinates_","containerSrs","_proj_js__WEBPACK_IMPORTED_MODULE_7__","coordsGroups","readBox_","BOX_PARSERS_","innerBoundaryIsParser_","outerBoundaryIsParser_","GEOMETRY_NODE_FACTORY_","multiSurface","surface","multiCurve","writeFeatureElement","writeGeometryElement","_format_xsd_js__WEBPACK_IMPORTED_MODULE_4__","writeCurveOrLineString_","createCoordinatesNode_","writeCoordinates_","writeCurveSegments_","writeLineStringOrCurveMember_","line","writeMultiCurveOrLineString_","hasZ","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","GEOMETRY_SERIALIZERS_","getCoords_","writeSurfaceOrPolygon_","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","exteriorWritten","writeRing_","writeLinearRing_","opt_srsName","opt_hasZ","writePoint_","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writePointMember_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","ENVELOPE_SERIALIZERS_","MULTIGEOMETRY_TO_MEMBER_NODENAME","MultiCurve","MultiSurface","Curve","Surface","Envelope","curveMember","surfaceMember","lowerCorner","upperCorner","IconImageCache","cache_","cacheSize_","maxCacheSize_","iconImage","maxCacheSize","shared","_source_State_js__WEBPACK_IMPORTED_MODULE_11__","layerRendererConstructors","CanvasMapRenderer","_Map_js__WEBPACK_IMPORTED_MODULE_10__","_css_js__WEBPACK_IMPORTED_MODULE_3__","_transform_js__WEBPACK_IMPORTED_MODULE_0__","_render_canvas_Immediate_js__WEBPACK_IMPORTED_MODULE_9__","_render_Event_js__WEBPACK_IMPORTED_MODULE_6__","_render_canvas_js__WEBPACK_IMPORTED_MODULE_8__","_layer_Layer_js__WEBPACK_IMPORTED_MODULE_5__","numLayers","ctor","_transform_js__WEBPACK_IMPORTED_MODULE_11__","CanvasImageLayerRenderer","_canvas_IntermediateCanvas_js__WEBPACK_IMPORTED_MODULE_10__","skippedFeatures_","vectorRenderer_","_LayerType_js__WEBPACK_IMPORTED_MODULE_3__","_Map_js__WEBPACK_IMPORTED_MODULE_9__","_layer_VectorRenderType_js__WEBPACK_IMPORTED_MODULE_7__","vectorRenderer","_reproj_common_js__WEBPACK_IMPORTED_MODULE_0__","skippedFeatures","imageFrameState","_obj_js__WEBPACK_IMPORTED_MODULE_8__","newSkippedFeatures","_ImageCanvas_js__WEBPACK_IMPORTED_MODULE_2__","_array_js__WEBPACK_IMPORTED_MODULE_5__","imagePixelRatio","_structs_RBush_js__WEBPACK_IMPORTED_MODULE_14__","Snap","_interaction_Pointer_js__WEBPACK_IMPORTED_MODULE_10__","_functions_js__WEBPACK_IMPORTED_MODULE_7__","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","sortByDistance_","deltaA","_coordinate_js__WEBPACK_IMPORTED_MODULE_3__","deltaB","snapTo","snapped","featuresToUpdate","_obj_js__WEBPACK_IMPORTED_MODULE_11__","updateFeature_","opt_listen","feature_uid","segmentWriter","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","_source_Vector_js__WEBPACK_IMPORTED_MODULE_12__","opt_unlisten","unregister","_source_VectorEventType_js__WEBPACK_IMPORTED_MODULE_13__","lowerLeft","upperRight","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_8__","snappedToVertex","isCircle","getRadiusSquared_","circleExtent","_interaction_Pointer_js__WEBPACK_IMPORTED_MODULE_5__","DragRotateAndZoom","_events_condition_js__WEBPACK_IMPORTED_MODULE_3__","lastMagnitude_","magnitude","_rotationconstraint_js__WEBPACK_IMPORTED_MODULE_1__","angleDelta","_ViewHint_js__WEBPACK_IMPORTED_MODULE_2__","_MapEvent_js__WEBPACK_IMPORTED_MODULE_1__","LayerGroup","_layer_Base_js__WEBPACK_IMPORTED_MODULE_9__","layersListenerKeys_","listenerKeys_","handleLayersChanged_","handleLayerChange_","handleLayersAdd_","handleLayersRemove_","layersArray","_ObjectEventType_js__WEBPACK_IMPORTED_MODULE_4__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_7__","collectionEvent","ownLayerState","LEADING_DIGITS","ScaleLine","innerElement_","viewState_","minWidth_","minWidth","renderedWidth_","renderedHTML_","_control_Control_js__WEBPACK_IMPORTED_MODULE_3__","handleUnitsChanged_","setUnits","mapEvent","updateElement_","pointResolutionUnits","nominalCount","suffix","metersPerDegree","html","innerHTML","IconImage","imageState_","tainting_","determineTainting_","dispatchChangeEvent_","replaceColor_","imgData","normalizedAnchor_","anchorOrigin_","IconOrigin","anchorXUnits_","IconAnchorUnits","anchorYUnits_","img","imgSize","ol_color","iconImage_","offset_","offsetOrigin_","style_Image","geodesic_line","geoA","geoB","geoStack","fractionStack","fractions","geoM","fracA","fracB","fracM","maxIterations","INTERVALS","Graticule","postcomposeListenerKey_","maxLat_","maxLon_","minLat_","minLon_","maxLatP_","maxLonP_","minLatP_","minLonP_","targetSize_","targetSize","maxLines_","maxLines","meridians_","parallels_","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","meridiansLabels_","parallelsLabels_","showLabels","lonLabelFormatter_","lonLabelFormatter","ol_coordinate","latLabelFormatter_","latLabelFormatter","lonLabelPosition_","lonLabelPosition","latLabelPosition_","latLabelPosition","lonLabelStyle_","lonLabelStyle","latLabelStyle_","latLabelStyle","addMeridian_","minLat","maxLat","getMeridian_","textPoint","getMeridianPoint_","clampedBottom","clampedTop","addParallel_","minLon","maxLon","getParallel_","getParallelPoint_","clampedLeft","clampedRight","createGraticule_","getInterval_","centerLonLat","centerLon","centerLat","cnt","validExtent","frac","meridian","getMeridians","lon2","parallel","getParallels","handlePostCompose_","labelData","updateProjectionInfo_","worldExtentP","MousePosition","_control_Control_js__WEBPACK_IMPORTED_MODULE_4__","coordinateFormat","setCoordinateFormat","undefinedHTML_","undefinedHTML","renderOnMouseOut_","mapProjection_","lastMouseMovePixel_","updateHTML_","getCoordinateFormat","handleMouseMove","handleMouseOut","_render_canvas_Immediate_js__WEBPACK_IMPORTED_MODULE_2__","toContext","_has_js__WEBPACK_IMPORTED_MODULE_0__","_transform_js__WEBPACK_IMPORTED_MODULE_1__","_geom_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_13__","TokenType","Lexer","index_","isAlpha_","isNumeric_","opt_decimal","isWhiteSpace_","nextChar_","nextToken","token","readNumber_","readText_","scientificNotation","lexer","lexer_","token_","layout_","_geom_GeometryLayout_js__WEBPACK_IMPORTED_MODULE_6__","consume_","isTokenType","isMatch","parseGeometry_","parseGeometryLayout_","dimToken","dimInfo","parseGeometryCollectionText_","isEmptyGeometry_","formatErrorMessage_","parsePointText_","parsePoint_","parseLineStringText_","parsePointList_","parsePolygonText_","parseLineStringTextList_","parseMultiPointText_","parsePointTextList_","parseMultiLineStringText_","parseMultiPolygonText_","parsePolygonTextList_","WKT","_format_TextFeature_js__WEBPACK_IMPORTED_MODULE_3__","splitCollection_","splitCollection","encodePointGeometry","encodeLineStringGeometry","encodePolygonGeometry","GeometryEncoder","components","geoms","enc","geometryEncoder","encodeGeometryLayout","parse_","GeometryConstructor","LINESTRING","_geom_LineString_js__WEBPACK_IMPORTED_MODULE_7__","MULTIPOINT","MULTILINESTRING","MULTIPOLYGON","GeometryParser","geomType","_geom_GeometryCollection_js__WEBPACK_IMPORTED_MODULE_4__","_geom_Point_js__WEBPACK_IMPORTED_MODULE_13__","getGeometryLayout","_geom_LineString_js__WEBPACK_IMPORTED_MODULE_8__","paths","_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_14__","_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_11__","_geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_10__","_geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_12__","esriJSON","hasZM","getHasZM","hasM","EsriJSON","_format_JSONFeature_js__WEBPACK_IMPORTED_MODULE_5__","flatRing","outerRings","_geom_flat_deflate_js__WEBPACK_IMPORTED_MODULE_15__","matched","containsHole","_geom_LinearRing_js__WEBPACK_IMPORTED_MODULE_9__","convertRings","_obj_js__WEBPACK_IMPORTED_MODULE_17__","_format_Feature_js__WEBPACK_IMPORTED_MODULE_4__","esriJSONFeature","idField","attributes","esriJSONFeatures","objectIdFieldName","esriJSONObject","spatialReference","wkid","_source_Image_js__WEBPACK_IMPORTED_MODULE_8__","Static","_Image_js__WEBPACK_IMPORTED_MODULE_1__","targetWidth","errorThreshold","sourceProj_","transformInvCache","transformInv","transformInv_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","centerSrc","bc","bcSrc","da","daSrc","abSrc","cd","cdSrc","_structs_LRUCache_js__WEBPACK_IMPORTED_MODULE_1__","_format_FormatType_js__WEBPACK_IMPORTED_MODULE_1__","loadFeaturesXhr","success","failure","xhr","responseType","onload","responseXML","onerror","lineStringLength","DragAndDropEventType","DragAndDropEvent","file","opt_features","DragAndDrop","_interaction_Interaction_js__WEBPACK_IMPORTED_MODULE_5__","formatConstructors_","formatConstructors","dropListenKeys_","handleDrop","files","dataTransfer","reader","FileReader","handleResult_","readAsText","handleStop","dropEffect","formatConstructor","tryReadFeatures_","registerListeners_","dropArea","unregisterListeners_","ret","_structs_PriorityQueue_js__WEBPACK_IMPORTED_MODULE_4__","tilePriorityFunction","tileChangeCallback","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","newLoads","abortedTiles","AssertionError","message","IGCZ","IGC","altitudeMode_","B_RECORD_RE","H_RECORD_RE","HFDTE_RECORD_RE","NEWLINE_RE","year","month","day","lastDateTime","hour","minute","second","UTC","_xml_js__WEBPACK_IMPORTED_MODULE_11__","GPX","readExtensions_","readExtensions","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","_format_xsd_js__WEBPACK_IMPORTED_MODULE_5__","RTE_PARSERS","cmt","desc","link","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","layoutOptions","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","writeLink","writeWptType","RTEPT_TYPE_SEQUENCE","TRK_SEQUENCE","TRK_SERIALIZERS","geometryLayout","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","GPX_NODE_FACTORY","GPX_SERIALIZERS","applyLayoutOptions","_geom_Point_js__WEBPACK_IMPORTED_MODULE_9__","handleReadExtensions_","extensionsNode","featureReader","gpx","Atlas","space_","emptyBlocks_","renderCallback","block","split_","newBlock1","newBlock2","updateBlocks_","args","style_Atlas","currentSize_","initialSize","maxSize_","maxSize","currentHitSize_","hitAtlases_","getInfo_","hitInfo","mergeInfos_","atlases","opt_renderHitCallback","add_","renderHitCallback","isHitAtlas","_layer_Layer_js__WEBPACK_IMPORTED_MODULE_7__","Attribution","ulElement_","collapsed_","collapsed","collapsible_","collapsible","tipLabel","collapseLabel","collapseLabel_","label_","activeLabel","handleClick_","cssClasses","_control_Control_js__WEBPACK_IMPORTED_MODULE_2__","renderedAttributions_","getSourceAttributions_","lookup","visibleAttributions","attributionGetter","handleToggle_","classList","getCollapsible","setCollapsible","setCollapsed","getCollapsed","getChangeType","changeType","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","requestFullscreen","FullScreen","cssClassName_","labelNode_","labelActive","labelActiveNode_","isFullScreen","_css_js__WEBPACK_IMPORTED_MODULE_2__","isFullScreenSupported","_control_Control_js__WEBPACK_IMPORTED_MODULE_1__","keys_","mozFullScreenEnabled","msFullscreenEnabled","fullscreenEnabled","webkitIsFullScreen","mozFullScreen","msFullscreenElement","fullscreenElement","requestFullScreen","handleFullScreen_","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","mozRequestFullScreenWithKeys","Element","ALLOW_KEYBOARD_INPUT","requestFullScreenWithKeys","handleFullScreenChange_","Pbf","ieee754","ArrayBuffer","isView","Varint","Fixed64","Bytes","Fixed32","readPackedEnd","toNum","isSigned","makeRoomForExtraLength","startPos","extraLen","realloc","writePackedVarint","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","readInt32","destroy","readField","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readVarintRemainder","b3","bytesPerSequence","readUtf8","readBytes","subarray","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","writeUtf8","writeBytes","writeRawMessage","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","Processor","_source_Vector_js__WEBPACK_IMPORTED_MODULE_8__","Cluster","_geom_Point_js__WEBPACK_IMPORTED_MODULE_7__","cluster","setDistance","mapDistance","clustered","neighbors","neighbor","createCluster","_extent_js__WEBPACK_IMPORTED_MODULE_16__","OverviewMap","_events_js__WEBPACK_IMPORTED_MODULE_14__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_15__","ovmapDiv_","ovmap_","_Map_js__WEBPACK_IMPORTED_MODULE_2__","ovmap","boxSizing","boxOverlay_","_Overlay_js__WEBPACK_IMPORTED_MODULE_7__","_OverlayPositioning_js__WEBPACK_IMPORTED_MODULE_8__","_css_js__WEBPACK_IMPORTED_MODULE_12__","_control_Control_js__WEBPACK_IMPORTED_MODULE_10__","scope","overlayBox","mousePosition","computeDesiredMousePosition","endMoving","validateExtent_","updateBox_","oldMap","oldView","unbindView_","_ObjectEventType_js__WEBPACK_IMPORTED_MODULE_6__","handleMapPropertyChange_","bindView_","resetExtent_","_MapProperty_js__WEBPACK_IMPORTED_MODULE_4__","newView","_ViewProperty_js__WEBPACK_IMPORTED_MODULE_9__","handleRotationChanged_","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","steps","MAX_RATIO","ovresolution","rotateBottomLeft","calculateCoordinateRotate_","coordinateRotate","_coordinate_js__WEBPACK_IMPORTED_MODULE_11__","_dom_js__WEBPACK_IMPORTED_MODULE_13__","_MapEventType_js__WEBPACK_IMPORTED_MODULE_3__","getOverviewMap","Rotate","callResetNorth_","resetNorth","autoHide_","autoHide","msTransform","webkitTransform","resetNorth_","control_Rotate","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","zoomByDelta_","control_Zoom","zoomOptions","rotateOptions","attributionOptions","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","hasImageData","ImageData","_","newImageData","createImageData","createMinion","workerHasImageData","newWorkerImageData","buffers","meta","numBuffers","numBytes","byteLength","Uint8ClampedArray","arrays","createWorker","onMessage","blob","Blob","createObjectURL","worker","Worker","_imageOps","workers","_onWorkerMessage","minion","postMessage","createFauxWorker","_workers","_queue","_maxQueueLength","_running","_dataLookup","_job","inputs","_enqueue","_dispatch","_destroyed","job","slices","_resolveJob","swap","defaultCompare","quickselectStep","sd","newLeft","newRight","_style_RegularShape_js__WEBPACK_IMPORTED_MODULE_1__","CircleStyle"],"mappings":"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","file":"common.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// run deferred modules from other chunks\n \tcheckDeferredModules();\n","/**\n * @module ol/util\n */\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function module:ol.inherits\n * @api\n */\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {number} The unique ID for the object.\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = ++uidCounter_);\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '5.0.2';\n","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array.<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @return {module:ol/extent~Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array.<number>} xs Xs.\n * @param {Array.<number>} ys Ys.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @private\n * @return {module:ol/extent~Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {module:ol/extent~Extent} extent Extent to clone.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @return {module:ol/extent/Relationship} The relationship (bitwise compare with\n *     module:ol/extent/Relationship~Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {module:ol/extent~Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} rings Rings.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {module:ol/extent~Extent} extent1 The extent to be modified.\n * @param {module:ol/extent~Extent} extent2 The extent that will be included in the first.\n * @return {module:ol/extent~Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} rings Rings.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(this:T, module:ol/coordinate~Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  let val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/extent/Corner} corner Corner.\n * @return {module:ol/coordinate~Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return (\n    /** @type {!module:ol/coordinate~Coordinate} */ (coordinate)\n  );\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  const dx = resolution * size[0] / 2;\n  const dy = resolution * size[1] / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @param {module:ol/extent~Extent=} opt_extent Optional extent to populate with intersection.\n * @return {module:ol/extent~Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @return {module:ol/size~Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @param {module:ol/coordinate~Coordinate} start Segment start coordinate.\n * @param {module:ol/coordinate~Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/proj~TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  const coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  const xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  const ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((module:ol/coordinate~Coordinate|undefined)): (module:ol/coordinate~Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/centerconstraint~Type} The constraint.\n */\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {module:ol/coordinate~Coordinate=} center Center.\n     * @return {module:ol/coordinate~Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          clamp(center[0], extent[0], extent[2]),\n          clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate=} center Center.\n * @return {module:ol/coordinate~Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/View\n */\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {getUid, inherits} from './util.js';\nimport {UNDEFINED} from './functions.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\nimport {inAndOut} from './easing.js';\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport SimpleGeometry from './geom/SimpleGeometry.js';\nimport {clamp, modulo} from './math.js';\nimport {assign} from './obj.js';\nimport {createProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\n\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {module:ol/coordinate~Coordinate} [sourceCenter]\n * @property {module:ol/coordinate~Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [sourceRotation]\n * @property {module:ol/coordinate~Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n\n/**\n * @typedef {Object} Constraints\n * @property {module:ol/centerconstraint~Type} center\n * @property {module:ol/resolutionconstraint~Type} resolution\n * @property {module:ol/rotationconstraint~Type} rotation\n */\n\n\n/**\n * @typedef {Object} FitOptions\n * @property {module:ol/size~Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array.<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\n * the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n\n/**\n * @typedef {Object} ViewOptions\n * @property {module:ol/coordinate~Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {module:ol/extent~Extent} [extent] The extent that constrains the\n * center, in other words, center cannot be set outside this extent.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array.<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view. The initial\n * resolution is determined using the {@link #constrainResolution} method.\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\n * resolution constraint.\n */\n\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {module:ol/coordinate~Coordinate|undefined} center The center of the view at the end of\n * the animation.\n * @property {number|undefined} zoom The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number|undefined} resolution The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number|undefined} rotation The rotation of the view at the end of\n * the animation.\n * @property {module:ol/coordinate~Coordinate|undefined} anchor Optional anchor to remained fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {module:ol/coordinate~Coordinate} center\n * @property {module:ol/proj/Projection} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But a View object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/View~ViewOptions=} opt_options View options.\n * @api\n */\nconst View = function(opt_options) {\n  BaseObject.call(this);\n\n  const options = assign({}, opt_options);\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.hints_ = [0, 0];\n\n  /**\n   * @private\n   * @type {Array.<Array.<module:ol/View~Animation>>}\n   */\n  this.animations_ = [];\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.updateAnimationKey_;\n\n  this.updateAnimations_ = this.updateAnimations_.bind(this);\n\n  /**\n   * @private\n   * @const\n   * @type {module:ol/proj/Projection}\n   */\n  this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n  this.applyOptions_(options);\n};\n\ninherits(View, BaseObject);\n\n\n/**\n * Set up the view with the given options.\n * @param {module:ol/View~ViewOptions} options View options.\n */\nView.prototype.applyOptions_ = function(options) {\n\n  /**\n   * @type {Object.<string, *>}\n   */\n  const properties = {};\n  properties[ViewProperty.CENTER] = options.center !== undefined ?\n    options.center : null;\n\n  const resolutionConstraintInfo = createResolutionConstraint(options);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n  /**\n   * @private\n   * @type {Array.<number>|undefined}\n   */\n  this.resolutions_ = options.resolutions;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n  const centerConstraint = createCenterConstraint(options);\n  const resolutionConstraint = resolutionConstraintInfo.constraint;\n  const rotationConstraint = createRotationConstraint(options);\n\n  /**\n   * @private\n   * @type {module:ol/View~Constraints}\n   */\n  this.constraints_ = {\n    center: centerConstraint,\n    resolution: resolutionConstraint,\n    rotation: rotationConstraint\n  };\n\n  if (options.resolution !== undefined) {\n    properties[ViewProperty.RESOLUTION] = options.resolution;\n  } else if (options.zoom !== undefined) {\n    properties[ViewProperty.RESOLUTION] = this.constrainResolution(\n      this.maxResolution_, options.zoom - this.minZoom_);\n\n    if (this.resolutions_) { // in case map zoom is out of min/max zoom range\n      properties[ViewProperty.RESOLUTION] = clamp(\n        Number(this.getResolution() || properties[ViewProperty.RESOLUTION]),\n        this.minResolution_, this.maxResolution_);\n    }\n  }\n  properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\n  this.setProperties(properties);\n\n  /**\n   * @private\n   * @type {module:ol/View~ViewOptions}\n   */\n  this.options_ = options;\n\n};\n\n/**\n * Get an updated version of the view options used to construct the view.  The\n * current resolution (or zoom), center, and rotation are applied to any stored\n * options.  The provided options can be used to apply new min/max zoom or\n * resolution limits.\n * @param {module:ol/View~ViewOptions} newOptions New options to be applied.\n * @return {module:ol/View~ViewOptions} New options updated with the current view state.\n */\nView.prototype.getUpdatedOptions_ = function(newOptions) {\n  const options = assign({}, this.options_);\n\n  // preserve resolution (or zoom)\n  if (options.resolution !== undefined) {\n    options.resolution = this.getResolution();\n  } else {\n    options.zoom = this.getZoom();\n  }\n\n  // preserve center\n  options.center = this.getCenter();\n\n  // preserve rotation\n  options.rotation = this.getRotation();\n\n  return assign({}, options, newOptions);\n};\n\n\n/**\n * Animate the view.  The view's center, zoom (or resolution), and rotation\n * can be animated for smooth transitions between view states.  For example,\n * to animate the view to a new zoom level:\n *\n *     view.animate({zoom: view.getZoom() + 1});\n *\n * By default, the animation lasts one second and uses in-and-out easing.  You\n * can customize this behavior by including `duration` (in milliseconds) and\n * `easing` options (see {@link module:ol/easing}).\n *\n * To chain together multiple animations, call the method with multiple\n * animation objects.  For example, to first zoom and then pan:\n *\n *     view.animate({zoom: 10}, {center: [0, 0]});\n *\n * If you provide a function as the last argument to the animate method, it\n * will get called at the end of an animation series.  The callback will be\n * called with `true` if the animation series completed on its own or `false`\n * if it was cancelled.\n *\n * Animations are cancelled by user interactions (e.g. dragging the map) or by\n * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n * (or another method that calls one of these).\n *\n * @param {...(module:ol/View~AnimationOptions|function(boolean))} var_args Animation\n *     options.  Multiple animations can be run in series by passing multiple\n *     options objects.  To run multiple animations in parallel, call the method\n *     multiple times.  An optional callback can be provided as a final\n *     argument.  The callback will be called with a boolean indicating whether\n *     the animation completed without being cancelled.\n * @api\n */\nView.prototype.animate = function(var_args) {\n  let animationCount = arguments.length;\n  let callback;\n  if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n    callback = arguments[animationCount - 1];\n    --animationCount;\n  }\n  if (!this.isDef()) {\n    // if view properties are not yet set, shortcut to the final state\n    const state = arguments[animationCount - 1];\n    if (state.center) {\n      this.setCenter(state.center);\n    }\n    if (state.zoom !== undefined) {\n      this.setZoom(state.zoom);\n    }\n    if (state.rotation !== undefined) {\n      this.setRotation(state.rotation);\n    }\n    if (callback) {\n      setTimeout(function() {\n        callback(true);\n      }, 0);\n    }\n    return;\n  }\n  let start = Date.now();\n  let center = this.getCenter().slice();\n  let resolution = this.getResolution();\n  let rotation = this.getRotation();\n  const series = [];\n  for (let i = 0; i < animationCount; ++i) {\n    const options = /** @type {module:ol/View~AnimationOptions} */ (arguments[i]);\n\n    const animation = /** @type {module:ol/View~Animation} */ ({\n      start: start,\n      complete: false,\n      anchor: options.anchor,\n      duration: options.duration !== undefined ? options.duration : 1000,\n      easing: options.easing || inAndOut\n    });\n\n    if (options.center) {\n      animation.sourceCenter = center;\n      animation.targetCenter = options.center;\n      center = animation.targetCenter;\n    }\n\n    if (options.zoom !== undefined) {\n      animation.sourceResolution = resolution;\n      animation.targetResolution = this.constrainResolution(\n        this.maxResolution_, options.zoom - this.minZoom_, 0);\n      resolution = animation.targetResolution;\n    } else if (options.resolution) {\n      animation.sourceResolution = resolution;\n      animation.targetResolution = options.resolution;\n      resolution = animation.targetResolution;\n    }\n\n    if (options.rotation !== undefined) {\n      animation.sourceRotation = rotation;\n      const delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n      animation.targetRotation = rotation + delta;\n      rotation = animation.targetRotation;\n    }\n\n    animation.callback = callback;\n\n    // check if animation is a no-op\n    if (isNoopAnimation(animation)) {\n      animation.complete = true;\n      // we still push it onto the series for callback handling\n    } else {\n      start += animation.duration;\n    }\n    series.push(animation);\n  }\n  this.animations_.push(series);\n  this.setHint(ViewHint.ANIMATING, 1);\n  this.updateAnimations_();\n};\n\n\n/**\n * Determine if the view is being animated.\n * @return {boolean} The view is being animated.\n * @api\n */\nView.prototype.getAnimating = function() {\n  return this.hints_[ViewHint.ANIMATING] > 0;\n};\n\n\n/**\n * Determine if the user is interacting with the view, such as panning or zooming.\n * @return {boolean} The view is being interacted with.\n * @api\n */\nView.prototype.getInteracting = function() {\n  return this.hints_[ViewHint.INTERACTING] > 0;\n};\n\n\n/**\n * Cancel any ongoing animations.\n * @api\n */\nView.prototype.cancelAnimations = function() {\n  this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n  for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n    const series = this.animations_[i];\n    if (series[0].callback) {\n      series[0].callback(false);\n    }\n  }\n  this.animations_.length = 0;\n};\n\n/**\n * Update all animations.\n */\nView.prototype.updateAnimations_ = function() {\n  if (this.updateAnimationKey_ !== undefined) {\n    cancelAnimationFrame(this.updateAnimationKey_);\n    this.updateAnimationKey_ = undefined;\n  }\n  if (!this.getAnimating()) {\n    return;\n  }\n  const now = Date.now();\n  let more = false;\n  for (let i = this.animations_.length - 1; i >= 0; --i) {\n    const series = this.animations_[i];\n    let seriesComplete = true;\n    for (let j = 0, jj = series.length; j < jj; ++j) {\n      const animation = series[j];\n      if (animation.complete) {\n        continue;\n      }\n      const elapsed = now - animation.start;\n      let fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n      if (fraction >= 1) {\n        animation.complete = true;\n        fraction = 1;\n      } else {\n        seriesComplete = false;\n      }\n      const progress = animation.easing(fraction);\n      if (animation.sourceCenter) {\n        const x0 = animation.sourceCenter[0];\n        const y0 = animation.sourceCenter[1];\n        const x1 = animation.targetCenter[0];\n        const y1 = animation.targetCenter[1];\n        const x = x0 + progress * (x1 - x0);\n        const y = y0 + progress * (y1 - y0);\n        this.set(ViewProperty.CENTER, [x, y]);\n      }\n      if (animation.sourceResolution && animation.targetResolution) {\n        const resolution = progress === 1 ?\n          animation.targetResolution :\n          animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n        if (animation.anchor) {\n          this.set(ViewProperty.CENTER,\n            this.calculateCenterZoom(resolution, animation.anchor));\n        }\n        this.set(ViewProperty.RESOLUTION, resolution);\n      }\n      if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n        const rotation = progress === 1 ?\n          modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n          animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n        if (animation.anchor) {\n          this.set(ViewProperty.CENTER,\n            this.calculateCenterRotate(rotation, animation.anchor));\n        }\n        this.set(ViewProperty.ROTATION, rotation);\n      }\n      more = true;\n      if (!animation.complete) {\n        break;\n      }\n    }\n    if (seriesComplete) {\n      this.animations_[i] = null;\n      this.setHint(ViewHint.ANIMATING, -1);\n      const callback = series[0].callback;\n      if (callback) {\n        setTimeout(function() {\n          callback(true);\n        }, 0);\n      }\n    }\n  }\n  // prune completed series\n  this.animations_ = this.animations_.filter(Boolean);\n  if (more && this.updateAnimationKey_ === undefined) {\n    this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n  }\n};\n\n/**\n * @param {number} rotation Target rotation.\n * @param {module:ol/coordinate~Coordinate} anchor Rotation anchor.\n * @return {module:ol/coordinate~Coordinate|undefined} Center for rotation and anchor.\n */\nView.prototype.calculateCenterRotate = function(rotation, anchor) {\n  let center;\n  const currentCenter = this.getCenter();\n  if (currentCenter !== undefined) {\n    center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n    rotateCoordinate(center, rotation - this.getRotation());\n    addCoordinate(center, anchor);\n  }\n  return center;\n};\n\n\n/**\n * @param {number} resolution Target resolution.\n * @param {module:ol/coordinate~Coordinate} anchor Zoom anchor.\n * @return {module:ol/coordinate~Coordinate|undefined} Center for resolution and anchor.\n */\nView.prototype.calculateCenterZoom = function(resolution, anchor) {\n  let center;\n  const currentCenter = this.getCenter();\n  const currentResolution = this.getResolution();\n  if (currentCenter !== undefined && currentResolution !== undefined) {\n    const x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n    const y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n    center = [x, y];\n  }\n  return center;\n};\n\n\n/**\n * @private\n * @return {module:ol/size~Size} Viewport size or `[100, 100]` when no viewport is found.\n */\nView.prototype.getSizeFromViewport_ = function() {\n  const size = [100, 100];\n  const selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n  const element = document.querySelector(selector);\n  if (element) {\n    const metrics = getComputedStyle(element);\n    size[0] = parseInt(metrics.width, 10);\n    size[1] = parseInt(metrics.height, 10);\n  }\n  return size;\n};\n\n\n/**\n * Get the constrained center of this view.\n * @param {module:ol/coordinate~Coordinate|undefined} center Center.\n * @return {module:ol/coordinate~Coordinate|undefined} Constrained center.\n * @api\n */\nView.prototype.constrainCenter = function(center) {\n  return this.constraints_.center(center);\n};\n\n\n/**\n * Get the constrained resolution of this view.\n * @param {number|undefined} resolution Resolution.\n * @param {number=} opt_delta Delta. Default is `0`.\n * @param {number=} opt_direction Direction. Default is `0`.\n * @return {number|undefined} Constrained resolution.\n * @api\n */\nView.prototype.constrainResolution = function(resolution, opt_delta, opt_direction) {\n  const delta = opt_delta || 0;\n  const direction = opt_direction || 0;\n  return this.constraints_.resolution(resolution, delta, direction);\n};\n\n\n/**\n * Get the constrained rotation of this view.\n * @param {number|undefined} rotation Rotation.\n * @param {number=} opt_delta Delta. Default is `0`.\n * @return {number|undefined} Constrained rotation.\n * @api\n */\nView.prototype.constrainRotation = function(rotation, opt_delta) {\n  const delta = opt_delta || 0;\n  return this.constraints_.rotation(rotation, delta);\n};\n\n\n/**\n * Get the view center.\n * @return {module:ol/coordinate~Coordinate|undefined} The center of the view.\n * @observable\n * @api\n */\nView.prototype.getCenter = function() {\n  return (\n    /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(ViewProperty.CENTER))\n  );\n};\n\n\n/**\n * @return {module:ol/View~Constraints} Constraints.\n */\nView.prototype.getConstraints = function() {\n  return this.constraints_;\n};\n\n\n/**\n * @param {Array.<number>=} opt_hints Destination array.\n * @return {Array.<number>} Hint.\n */\nView.prototype.getHints = function(opt_hints) {\n  if (opt_hints !== undefined) {\n    opt_hints[0] = this.hints_[0];\n    opt_hints[1] = this.hints_[1];\n    return opt_hints;\n  } else {\n    return this.hints_.slice();\n  }\n};\n\n\n/**\n * Calculate the extent for the current view state and the passed size.\n * The size is the pixel dimensions of the box into which the calculated extent\n * should fit. In most cases you want to get the extent of the entire map,\n * that is `map.getSize()`.\n * @param {module:ol/size~Size=} opt_size Box pixel size. If not provided, the size of the\n * first map that uses this view will be used.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nView.prototype.calculateExtent = function(opt_size) {\n  const size = opt_size || this.getSizeFromViewport_();\n  const center = /** @type {!module:ol/coordinate~Coordinate} */ (this.getCenter());\n  assert(center, 1); // The view center is not defined\n  const resolution = /** @type {!number} */ (this.getResolution());\n  assert(resolution !== undefined, 2); // The view resolution is not defined\n  const rotation = /** @type {!number} */ (this.getRotation());\n  assert(rotation !== undefined, 3); // The view rotation is not defined\n\n  return getForViewAndSize(center, resolution, rotation, size);\n};\n\n\n/**\n * Get the maximum resolution of the view.\n * @return {number} The maximum resolution of the view.\n * @api\n */\nView.prototype.getMaxResolution = function() {\n  return this.maxResolution_;\n};\n\n\n/**\n * Get the minimum resolution of the view.\n * @return {number} The minimum resolution of the view.\n * @api\n */\nView.prototype.getMinResolution = function() {\n  return this.minResolution_;\n};\n\n\n/**\n * Get the maximum zoom level for the view.\n * @return {number} The maximum zoom level.\n * @api\n */\nView.prototype.getMaxZoom = function() {\n  return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n};\n\n\n/**\n * Set a new maximum zoom level for the view.\n * @param {number} zoom The maximum zoom level.\n * @api\n */\nView.prototype.setMaxZoom = function(zoom) {\n  this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n};\n\n\n/**\n * Get the minimum zoom level for the view.\n * @return {number} The minimum zoom level.\n * @api\n */\nView.prototype.getMinZoom = function() {\n  return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n};\n\n\n/**\n * Set a new minimum zoom level for the view.\n * @param {number} zoom The minimum zoom level.\n * @api\n */\nView.prototype.setMinZoom = function(zoom) {\n  this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n};\n\n\n/**\n * Get the view projection.\n * @return {module:ol/proj/Projection} The projection of the view.\n * @api\n */\nView.prototype.getProjection = function() {\n  return this.projection_;\n};\n\n\n/**\n * Get the view resolution.\n * @return {number|undefined} The resolution of the view.\n * @observable\n * @api\n */\nView.prototype.getResolution = function() {\n  return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n};\n\n\n/**\n * Get the resolutions for the view. This returns the array of resolutions\n * passed to the constructor of the View, or undefined if none were given.\n * @return {Array.<number>|undefined} The resolutions of the view.\n * @api\n */\nView.prototype.getResolutions = function() {\n  return this.resolutions_;\n};\n\n\n/**\n * Get the resolution for a provided extent (in map units) and size (in pixels).\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/size~Size=} opt_size Box pixel size.\n * @return {number} The resolution at which the provided extent will render at\n *     the given size.\n * @api\n */\nView.prototype.getResolutionForExtent = function(extent, opt_size) {\n  const size = opt_size || this.getSizeFromViewport_();\n  const xResolution = getWidth(extent) / size[0];\n  const yResolution = getHeight(extent) / size[1];\n  return Math.max(xResolution, yResolution);\n};\n\n\n/**\n * Return a function that returns a value between 0 and 1 for a\n * resolution. Exponential scaling is assumed.\n * @param {number=} opt_power Power.\n * @return {function(number): number} Resolution for value function.\n */\nView.prototype.getResolutionForValueFunction = function(opt_power) {\n  const power = opt_power || 2;\n  const maxResolution = this.maxResolution_;\n  const minResolution = this.minResolution_;\n  const max = Math.log(maxResolution / minResolution) / Math.log(power);\n  return (\n    /**\n     * @param {number} value Value.\n     * @return {number} Resolution.\n     */\n    function(value) {\n      const resolution = maxResolution / Math.pow(power, value * max);\n      return resolution;\n    });\n};\n\n\n/**\n * Get the view rotation.\n * @return {number} The rotation of the view in radians.\n * @observable\n * @api\n */\nView.prototype.getRotation = function() {\n  return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n};\n\n\n/**\n * Return a function that returns a resolution for a value between\n * 0 and 1. Exponential scaling is assumed.\n * @param {number=} opt_power Power.\n * @return {function(number): number} Value for resolution function.\n */\nView.prototype.getValueForResolutionFunction = function(opt_power) {\n  const power = opt_power || 2;\n  const maxResolution = this.maxResolution_;\n  const minResolution = this.minResolution_;\n  const max = Math.log(maxResolution / minResolution) / Math.log(power);\n  return (\n    /**\n     * @param {number} resolution Resolution.\n     * @return {number} Value.\n     */\n    function(resolution) {\n      const value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n      return value;\n    });\n};\n\n\n/**\n * @return {module:ol/View~State} View state.\n */\nView.prototype.getState = function() {\n  const center = /** @type {module:ol/coordinate~Coordinate} */ (this.getCenter());\n  const projection = this.getProjection();\n  const resolution = /** @type {number} */ (this.getResolution());\n  const rotation = this.getRotation();\n  return (\n    /** @type {module:ol/View~State} */ ({\n      center: center.slice(),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      rotation: rotation,\n      zoom: this.getZoom()\n    })\n  );\n};\n\n\n/**\n * Get the current zoom level.  If you configured your view with a resolutions\n * array (this is rare), this method may return non-integer zoom levels (so\n * the zoom level is not safe to use as an index into a resolutions array).\n * @return {number|undefined} Zoom.\n * @api\n */\nView.prototype.getZoom = function() {\n  let zoom;\n  const resolution = this.getResolution();\n  if (resolution !== undefined) {\n    zoom = this.getZoomForResolution(resolution);\n  }\n  return zoom;\n};\n\n\n/**\n * Get the zoom level for a resolution.\n * @param {number} resolution The resolution.\n * @return {number|undefined} The zoom level for the provided resolution.\n * @api\n */\nView.prototype.getZoomForResolution = function(resolution) {\n  let offset = this.minZoom_ || 0;\n  let max, zoomFactor;\n  if (this.resolutions_) {\n    const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n    offset = nearest;\n    max = this.resolutions_[nearest];\n    if (nearest == this.resolutions_.length - 1) {\n      zoomFactor = 2;\n    } else {\n      zoomFactor = max / this.resolutions_[nearest + 1];\n    }\n  } else {\n    max = this.maxResolution_;\n    zoomFactor = this.zoomFactor_;\n  }\n  return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n};\n\n\n/**\n * Get the resolution for a zoom level.\n * @param {number} zoom Zoom level.\n * @return {number} The view resolution for the provided zoom level.\n * @api\n */\nView.prototype.getResolutionForZoom = function(zoom) {\n  return /** @type {number} */ (this.constrainResolution(\n    this.maxResolution_, zoom - this.minZoom_, 0));\n};\n\n\n/**\n * Fit the given geometry or extent based on the given map size and border.\n * The size is pixel dimensions of the box to fit the extent into.\n * In most cases you will want to use the map size, that is `map.getSize()`.\n * Takes care of the map angle.\n * @param {module:ol/geom/SimpleGeometry|module:ol/extent~Extent} geometryOrExtent The geometry or\n *     extent to fit the view to.\n * @param {module:ol/View~FitOptions=} opt_options Options.\n * @api\n */\nView.prototype.fit = function(geometryOrExtent, opt_options) {\n  const options = opt_options || {};\n  let size = options.size;\n  if (!size) {\n    size = this.getSizeFromViewport_();\n  }\n  /** @type {module:ol/geom/SimpleGeometry} */\n  let geometry;\n  if (!(geometryOrExtent instanceof SimpleGeometry)) {\n    assert(Array.isArray(geometryOrExtent),\n      24); // Invalid extent or geometry provided as `geometry`\n    assert(!isEmpty(geometryOrExtent),\n      25); // Cannot fit empty extent provided as `geometry`\n    geometry = polygonFromExtent(geometryOrExtent);\n  } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n    geometryOrExtent = geometryOrExtent.getExtent();\n    geometry = polygonFromExtent(geometryOrExtent);\n    geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n  } else {\n    geometry = geometryOrExtent;\n  }\n\n  const padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n  const constrainResolution = options.constrainResolution !== undefined ?\n    options.constrainResolution : true;\n  const nearest = options.nearest !== undefined ? options.nearest : false;\n  let minResolution;\n  if (options.minResolution !== undefined) {\n    minResolution = options.minResolution;\n  } else if (options.maxZoom !== undefined) {\n    minResolution = this.constrainResolution(\n      this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n  } else {\n    minResolution = 0;\n  }\n  const coords = geometry.getFlatCoordinates();\n\n  // calculate rotated extent\n  const rotation = this.getRotation();\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let minRotX = +Infinity;\n  let minRotY = +Infinity;\n  let maxRotX = -Infinity;\n  let maxRotY = -Infinity;\n  const stride = geometry.getStride();\n  for (let i = 0, ii = coords.length; i < ii; i += stride) {\n    const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n    const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n    minRotX = Math.min(minRotX, rotX);\n    minRotY = Math.min(minRotY, rotY);\n    maxRotX = Math.max(maxRotX, rotX);\n    maxRotY = Math.max(maxRotY, rotY);\n  }\n\n  // calculate resolution\n  let resolution = this.getResolutionForExtent(\n    [minRotX, minRotY, maxRotX, maxRotY],\n    [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n  resolution = isNaN(resolution) ? minResolution :\n    Math.max(resolution, minResolution);\n  if (constrainResolution) {\n    let constrainedResolution = this.constrainResolution(resolution, 0, 0);\n    if (!nearest && constrainedResolution < resolution) {\n      constrainedResolution = this.constrainResolution(\n        constrainedResolution, -1, 0);\n    }\n    resolution = constrainedResolution;\n  }\n\n  // calculate center\n  sinAngle = -sinAngle; // go back to original rotation\n  let centerRotX = (minRotX + maxRotX) / 2;\n  let centerRotY = (minRotY + maxRotY) / 2;\n  centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n  centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n  const centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n  const centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n  const center = [centerX, centerY];\n  const callback = options.callback ? options.callback : UNDEFINED;\n\n  if (options.duration !== undefined) {\n    this.animate({\n      resolution: resolution,\n      center: center,\n      duration: options.duration,\n      easing: options.easing\n    }, callback);\n  } else {\n    this.setResolution(resolution);\n    this.setCenter(center);\n    setTimeout(callback.bind(undefined, true), 0);\n  }\n};\n\n\n/**\n * Center on coordinate and view position.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/size~Size} size Box pixel size.\n * @param {module:ol~Pixel} position Position on the view to center on.\n * @api\n */\nView.prototype.centerOn = function(coordinate, size, position) {\n  // calculate rotated position\n  const rotation = this.getRotation();\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  const resolution = this.getResolution();\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  this.setCenter([centerX, centerY]);\n};\n\n\n/**\n * @return {boolean} Is defined.\n */\nView.prototype.isDef = function() {\n  return !!this.getCenter() && this.getResolution() !== undefined;\n};\n\n\n/**\n * Rotate the view around a given coordinate.\n * @param {number} rotation New rotation value for the view.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor The rotation center.\n * @api\n */\nView.prototype.rotate = function(rotation, opt_anchor) {\n  if (opt_anchor !== undefined) {\n    const center = this.calculateCenterRotate(rotation, opt_anchor);\n    this.setCenter(center);\n  }\n  this.setRotation(rotation);\n};\n\n\n/**\n * Set the center of the current view.\n * @param {module:ol/coordinate~Coordinate|undefined} center The center of the view.\n * @observable\n * @api\n */\nView.prototype.setCenter = function(center) {\n  this.set(ViewProperty.CENTER, center);\n  if (this.getAnimating()) {\n    this.cancelAnimations();\n  }\n};\n\n\n/**\n * @param {module:ol/ViewHint} hint Hint.\n * @param {number} delta Delta.\n * @return {number} New value.\n */\nView.prototype.setHint = function(hint, delta) {\n  this.hints_[hint] += delta;\n  this.changed();\n  return this.hints_[hint];\n};\n\n\n/**\n * Set the resolution for this view.\n * @param {number|undefined} resolution The resolution of the view.\n * @observable\n * @api\n */\nView.prototype.setResolution = function(resolution) {\n  this.set(ViewProperty.RESOLUTION, resolution);\n  if (this.getAnimating()) {\n    this.cancelAnimations();\n  }\n};\n\n\n/**\n * Set the rotation for this view.\n * @param {number} rotation The rotation of the view in radians.\n * @observable\n * @api\n */\nView.prototype.setRotation = function(rotation) {\n  this.set(ViewProperty.ROTATION, rotation);\n  if (this.getAnimating()) {\n    this.cancelAnimations();\n  }\n};\n\n\n/**\n * Zoom to a specific zoom level.\n * @param {number} zoom Zoom level.\n * @api\n */\nView.prototype.setZoom = function(zoom) {\n  this.setResolution(this.getResolutionForZoom(zoom));\n};\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {module:ol/centerconstraint~Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    return createExtent(options.extent);\n  } else {\n    return centerNone;\n  }\n}\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {{constraint: module:ol/resolutionconstraint~Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom = options.minZoom !== undefined ?\n    options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = createSnapToResolutions(\n      resolutions);\n  } else {\n    // calculate the default min and max resolution\n    const projection = createProjection(options.projection, 'EPSG:3857');\n    const extent = projection.getExtent();\n    const size = !extent ?\n      // use an extent that can fit the whole world if need be\n      360 * METERS_PER_UNIT[Units.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(getWidth(extent), getHeight(extent));\n\n    const defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution = defaultMaxResolution / Math.pow(\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    resolutionConstraint = createSnapToPower(\n      zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n}\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {module:ol/View~Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\n */\n\n\n/**\n * @param {Array.<number>} resolutions Resolutions.\n * @return {module:ol/resolutionconstraint~Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        let z = linearFindNearest(resolutions, resolution, direction);\n        z = clamp(z + delta, 0, resolutions.length - 1);\n        const index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          const power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {module:ol/resolutionconstraint~Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        const offset = -direction / 2 + 0.5;\n        const oldLevel = Math.floor(\n          Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        let newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n}\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array.<Array.<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  const result = [];\n\n  // Keep text upright\n  const reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  const numChars = text.length;\n\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let segmentM = 0;\n  let segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  let chunk = '';\n  let chunkLength = 0;\n  let data, index, previousAngle;\n  for (let i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    const char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    const charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    const charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    const segmentPos = charM - segmentM;\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    const interpolate = segmentPos / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n","/**\n * @module ol/render/canvas/Replay\n */\nimport {getUid, inherits} from '../../util.js';\nimport {UNDEFINED} from '../../functions.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship, createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, extendCoordinate, intersects} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {isEmpty} from '../../obj.js';\nimport VectorContext from '../VectorContext.js';\nimport {drawImage, resetTransform, defaultPadding, defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/VectorContext}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasReplay = function(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  VectorContext.call(this);\n\n  /**\n   * @type {?}\n   */\n  this.declutterTree = declutterTree;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.tolerance = tolerance;\n\n  /**\n   * @protected\n   * @const\n   * @type {module:ol/extent~Extent}\n   */\n  this.maxExtent = maxExtent;\n\n  /**\n   * @protected\n   * @type {boolean}\n   */\n  this.overlaps = overlaps;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.pixelRatio = pixelRatio;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxLineWidth = 0;\n\n  /**\n   * @protected\n   * @const\n   * @type {number}\n   */\n  this.resolution = resolution;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.alignFill_;\n\n  /**\n   * @private\n   * @type {Array.<*>}\n   */\n  this.beginGeometryInstruction1_ = null;\n\n  /**\n   * @private\n   * @type {Array.<*>}\n   */\n  this.beginGeometryInstruction2_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.bufferedMaxExtent_ = null;\n\n  /**\n   * @protected\n   * @type {Array.<*>}\n   */\n  this.instructions = [];\n\n  /**\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.coordinates = [];\n\n  /**\n   * @private\n   * @type {!Object.<number,module:ol/coordinate~Coordinate|Array.<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>>}\n   */\n  this.coordinateCache_ = {};\n\n  /**\n   * @private\n   * @type {!module:ol/transform~Transform}\n   */\n  this.renderedTransform_ = createTransform();\n\n  /**\n   * @protected\n   * @type {Array.<*>}\n   */\n  this.hitDetectionInstructions = [];\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.pixelCoordinates_ = null;\n\n  /**\n   * @protected\n   * @type {module:ol/render/canvas~FillStrokeState}\n   */\n  this.state = /** @type {module:ol/render/canvas~FillStrokeState} */ ({});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.viewRotation_ = 0;\n\n};\n\ninherits(CanvasReplay, VectorContext);\n\n\n/**\n * @type {module:ol/extent~Extent}\n */\nconst tmpExtent = createEmpty();\n\n\n/**\n * @type {!module:ol/transform~Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/coordinate~Coordinate} p1 1st point of the background box.\n * @param {module:ol/coordinate~Coordinate} p2 2nd point of the background box.\n * @param {module:ol/coordinate~Coordinate} p3 3rd point of the background box.\n * @param {module:ol/coordinate~Coordinate} p4 4th point of the background box.\n * @param {Array.<*>} fillInstruction Fill instruction.\n * @param {Array.<*>} strokeInstruction Stroke instruction.\n */\nCanvasReplay.prototype.replayTextBackground_ = function(context, p1, p2, p3, p4,\n  fillInstruction, strokeInstruction) {\n  context.beginPath();\n  context.moveTo.apply(context, p1);\n  context.lineTo.apply(context, p2);\n  context.lineTo.apply(context, p3);\n  context.lineTo.apply(context, p4);\n  context.lineTo.apply(context, p1);\n  if (fillInstruction) {\n    this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n    this.fill_(context);\n  }\n  if (strokeInstruction) {\n    this.setStrokeStyle_(context, /** @type {Array.<*>} */ (strokeInstruction));\n    context.stroke();\n  }\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} anchorX Anchor X.\n * @param {number} anchorY Anchor Y.\n * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n * @param {number} height Height.\n * @param {number} opacity Opacity.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} rotation Rotation.\n * @param {number} scale Scale.\n * @param {boolean} snapToPixel Snap to pixel.\n * @param {number} width Width.\n * @param {Array.<number>} padding Padding.\n * @param {Array.<*>} fillInstruction Fill instruction.\n * @param {Array.<*>} strokeInstruction Stroke instruction.\n */\nCanvasReplay.prototype.replayImage_ = function(context, x, y, image,\n  anchorX, anchorY, declutterGroup, height, opacity, originX, originY,\n  rotation, scale, snapToPixel, width, padding, fillInstruction, strokeInstruction) {\n  const fillStroke = fillInstruction || strokeInstruction;\n  anchorX *= scale;\n  anchorY *= scale;\n  x -= anchorX;\n  y -= anchorY;\n\n  const w = (width + originX > image.width) ? image.width - originX : width;\n  const h = (height + originY > image.height) ? image.height - originY : height;\n  const boxW = padding[3] + w * scale + padding[1];\n  const boxH = padding[0] + h * scale + padding[2];\n  const boxX = x - padding[3];\n  const boxY = y - padding[0];\n\n  /** @type {module:ol/coordinate~Coordinate} */\n  let p1;\n  /** @type {module:ol/coordinate~Coordinate} */\n  let p2;\n  /** @type {module:ol/coordinate~Coordinate} */\n  let p3;\n  /** @type {module:ol/coordinate~Coordinate} */\n  let p4;\n  if (fillStroke || rotation !== 0) {\n    p1 = [boxX, boxY];\n    p2 = [boxX + boxW, boxY];\n    p3 = [boxX + boxW, boxY + boxH];\n    p4 = [boxX, boxY + boxH];\n  }\n\n  let transform = null;\n  if (rotation !== 0) {\n    const centerX = x + anchorX;\n    const centerY = y + anchorY;\n    transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n    createOrUpdateEmpty(tmpExtent);\n    extendCoordinate(tmpExtent, applyTransform(tmpTransform, p1));\n    extendCoordinate(tmpExtent, applyTransform(tmpTransform, p2));\n    extendCoordinate(tmpExtent, applyTransform(tmpTransform, p3));\n    extendCoordinate(tmpExtent, applyTransform(tmpTransform, p4));\n  } else {\n    createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n  }\n  const canvas = context.canvas;\n  const strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n  const intersects =\n      tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n      tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n  if (snapToPixel) {\n    x = Math.round(x);\n    y = Math.round(y);\n  }\n\n  if (declutterGroup) {\n    if (!intersects && declutterGroup[4] == 1) {\n      return;\n    }\n    extend(declutterGroup, tmpExtent);\n    const declutterArgs = intersects ?\n      [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n      null;\n    if (declutterArgs && fillStroke) {\n      declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n    }\n    declutterGroup.push(declutterArgs);\n  } else if (intersects) {\n    if (fillStroke) {\n      this.replayTextBackground_(context, p1, p2, p3, p4,\n        /** @type {Array.<*>} */ (fillInstruction),\n        /** @type {Array.<*>} */ (strokeInstruction));\n    }\n    drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n  }\n};\n\n\n/**\n * @protected\n * @param {Array.<number>} dashArray Dash array.\n * @return {Array.<number>} Dash array with pixel ratio applied\n */\nCanvasReplay.prototype.applyPixelRatio = function(dashArray) {\n  const pixelRatio = this.pixelRatio;\n  return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n    return dash * pixelRatio;\n  });\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {boolean} closed Last input coordinate equals first.\n * @param {boolean} skipFirst Skip first coordinate.\n * @protected\n * @return {number} My end.\n */\nCanvasReplay.prototype.appendFlatCoordinates = function(flatCoordinates, offset, end, stride, closed, skipFirst) {\n\n  let myEnd = this.coordinates.length;\n  const extent = this.getBufferedMaxExtent();\n  if (skipFirst) {\n    offset += stride;\n  }\n  const lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const nextCoord = [NaN, NaN];\n  let skipped = true;\n\n  let i, lastRel, nextRel;\n  for (i = offset + stride; i < end; i += stride) {\n    nextCoord[0] = flatCoordinates[i];\n    nextCoord[1] = flatCoordinates[i + 1];\n    nextRel = coordinateRelationship(extent, nextCoord);\n    if (nextRel !== lastRel) {\n      if (skipped) {\n        this.coordinates[myEnd++] = lastCoord[0];\n        this.coordinates[myEnd++] = lastCoord[1];\n      }\n      this.coordinates[myEnd++] = nextCoord[0];\n      this.coordinates[myEnd++] = nextCoord[1];\n      skipped = false;\n    } else if (nextRel === Relationship.INTERSECTING) {\n      this.coordinates[myEnd++] = nextCoord[0];\n      this.coordinates[myEnd++] = nextCoord[1];\n      skipped = false;\n    } else {\n      skipped = true;\n    }\n    lastCoord[0] = nextCoord[0];\n    lastCoord[1] = nextCoord[1];\n    lastRel = nextRel;\n  }\n\n  // Last coordinate equals first or only one point to append:\n  if ((closed && skipped) || i === offset + stride) {\n    this.coordinates[myEnd++] = lastCoord[0];\n    this.coordinates[myEnd++] = lastCoord[1];\n  }\n  return myEnd;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<number>} replayEnds Replay ends.\n * @return {number} Offset.\n */\nCanvasReplay.prototype.drawCustomCoordinates_ = function(flatCoordinates, offset, ends, stride, replayEnds) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const replayEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n    replayEnds.push(replayEnd);\n    offset = end;\n  }\n  return offset;\n};\n\n\n/**\n * @inheritDoc.\n */\nCanvasReplay.prototype.drawCustom = function(geometry, feature, renderer) {\n  this.beginGeometry(geometry, feature);\n  const type = geometry.getType();\n  const stride = geometry.getStride();\n  const replayBegin = this.coordinates.length;\n  let flatCoordinates, replayEnd, replayEnds, replayEndss;\n  let offset;\n  if (type == GeometryType.MULTI_POLYGON) {\n    geometry = /** @type {module:ol/geom/MultiPolygon} */ (geometry);\n    flatCoordinates = geometry.getOrientedFlatCoordinates();\n    replayEndss = [];\n    const endss = geometry.getEndss();\n    offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const myEnds = [];\n      offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n      replayEndss.push(myEnds);\n    }\n    this.instructions.push([CanvasInstruction.CUSTOM,\n      replayBegin, replayEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n  } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n    replayEnds = [];\n    flatCoordinates = (type == GeometryType.POLYGON) ?\n      /** @type {module:ol/geom/Polygon} */ (geometry).getOrientedFlatCoordinates() :\n      geometry.getFlatCoordinates();\n    offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n      /** @type {module:ol/geom/Polygon|module:ol/geom/MultiLineString} */ (geometry).getEnds(),\n      stride, replayEnds);\n    this.instructions.push([CanvasInstruction.CUSTOM,\n      replayBegin, replayEnds, geometry, renderer, inflateCoordinatesArray]);\n  } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n    flatCoordinates = geometry.getFlatCoordinates();\n    replayEnd = this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    this.instructions.push([CanvasInstruction.CUSTOM,\n      replayBegin, replayEnd, geometry, renderer, inflateCoordinates]);\n  } else if (type == GeometryType.POINT) {\n    flatCoordinates = geometry.getFlatCoordinates();\n    this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    replayEnd = this.coordinates.length;\n    this.instructions.push([CanvasInstruction.CUSTOM,\n      replayBegin, replayEnd, geometry, renderer]);\n  }\n  this.endGeometry(geometry, feature);\n};\n\n\n/**\n * @protected\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nCanvasReplay.prototype.beginGeometry = function(geometry, feature) {\n  this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n  this.instructions.push(this.beginGeometryInstruction1_);\n  this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n  this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n};\n\n\n/**\n * @private\n * @param {CanvasRenderingContext2D} context Context.\n */\nCanvasReplay.prototype.fill_ = function(context) {\n  if (this.alignFill_) {\n    const origin = applyTransform(this.renderedTransform_, [0, 0]);\n    const repeatSize = 512 * this.pixelRatio;\n    context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n    context.rotate(this.viewRotation_);\n  }\n  context.fill();\n  if (this.alignFill_) {\n    context.setTransform.apply(context, resetTransform);\n  }\n};\n\n\n/**\n * @private\n * @param {CanvasRenderingContext2D} context Context.\n * @param {Array.<*>} instruction Instruction.\n */\nCanvasReplay.prototype.setStrokeStyle_ = function(context, instruction) {\n  context.strokeStyle = /** @type {module:ol/colorlike~ColorLike} */ (instruction[1]);\n  context.lineWidth = /** @type {number} */ (instruction[2]);\n  context.lineCap = /** @type {string} */ (instruction[3]);\n  context.lineJoin = /** @type {string} */ (instruction[4]);\n  context.miterLimit = /** @type {number} */ (instruction[5]);\n  if (CANVAS_LINE_DASH) {\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array.<number>} */ (instruction[6]));\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nCanvasReplay.prototype.renderDeclutter_ = function(declutterGroup, feature) {\n  if (declutterGroup && declutterGroup.length > 5) {\n    const groupCount = declutterGroup[4];\n    if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n      /** @type {module:ol/structs/RBush~Entry} */\n      const box = {\n        minX: /** @type {number} */ (declutterGroup[0]),\n        minY: /** @type {number} */ (declutterGroup[1]),\n        maxX: /** @type {number} */ (declutterGroup[2]),\n        maxY: /** @type {number} */ (declutterGroup[3]),\n        value: feature\n      };\n      if (!this.declutterTree.collides(box)) {\n        this.declutterTree.insert(box);\n        for (let j = 5, jj = declutterGroup.length; j < jj; ++j) {\n          const declutterData = /** @type {Array} */ (declutterGroup[j]);\n          if (declutterData) {\n            if (declutterData.length > 11) {\n              this.replayTextBackground_(declutterData[0],\n                declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                declutterData[11], declutterData[12]);\n            }\n            drawImage.apply(undefined, declutterData);\n          }\n        }\n      }\n      declutterGroup.length = 5;\n      createOrUpdateEmpty(declutterGroup);\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *     to skip.\n * @param {Array.<*>} instructions Instructions array.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined}\n *     featureCallback Feature callback.\n * @param {module:ol/extent~Extent=} opt_hitExtent Only check features that intersect this\n *     extent.\n * @return {T|undefined} Callback result.\n * @template T\n */\nCanvasReplay.prototype.replay_ = function(\n  context, transform, skippedFeaturesHash,\n  instructions, featureCallback, opt_hitExtent) {\n  /** @type {Array.<number>} */\n  let pixelCoordinates;\n  if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n    pixelCoordinates = this.pixelCoordinates_;\n  } else {\n    if (!this.pixelCoordinates_) {\n      this.pixelCoordinates_ = [];\n    }\n    pixelCoordinates = transform2D(\n      this.coordinates, 0, this.coordinates.length, 2,\n      transform, this.pixelCoordinates_);\n    transformSetFromArray(this.renderedTransform_, transform);\n  }\n  const skipFeatures = !isEmpty(skippedFeaturesHash);\n  let i = 0; // instruction index\n  const ii = instructions.length; // end of instructions\n  let d = 0; // data index\n  let dd; // end of per-instruction data\n  let anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\n  let pendingFill = 0;\n  let pendingStroke = 0;\n  let lastFillInstruction = null;\n  let lastStrokeInstruction = null;\n  const coordinateCache = this.coordinateCache_;\n  const viewRotation = this.viewRotation_;\n\n  const state = /** @type {module:ol/render~State} */ ({\n    context: context,\n    pixelRatio: this.pixelRatio,\n    resolution: this.resolution,\n    rotation: viewRotation\n  });\n\n  // When the batch size gets too big, performance decreases. 200 is a good\n  // balance between batch size and number of fill/stroke instructions.\n  const batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n  let /** @type {module:ol/Feature|module:ol/render/Feature} */ feature;\n  let x, y;\n  while (i < ii) {\n    const instruction = instructions[i];\n    const type = /** @type {module:ol/render/canvas/Instruction} */ (instruction[0]);\n    switch (type) {\n      case CanvasInstruction.BEGIN_GEOMETRY:\n        feature = /** @type {module:ol/Feature|module:ol/render/Feature} */ (instruction[1]);\n        if ((skipFeatures &&\n            skippedFeaturesHash[getUid(feature).toString()]) ||\n            !feature.getGeometry()) {\n          i = /** @type {number} */ (instruction[2]);\n        } else if (opt_hitExtent !== undefined && !intersects(\n          opt_hitExtent, feature.getGeometry().getExtent())) {\n          i = /** @type {number} */ (instruction[2]) + 1;\n        } else {\n          ++i;\n        }\n        break;\n      case CanvasInstruction.BEGIN_PATH:\n        if (pendingFill > batchSize) {\n          this.fill_(context);\n          pendingFill = 0;\n        }\n        if (pendingStroke > batchSize) {\n          context.stroke();\n          pendingStroke = 0;\n        }\n        if (!pendingFill && !pendingStroke) {\n          context.beginPath();\n          prevX = prevY = NaN;\n        }\n        ++i;\n        break;\n      case CanvasInstruction.CIRCLE:\n        d = /** @type {number} */ (instruction[1]);\n        const x1 = pixelCoordinates[d];\n        const y1 = pixelCoordinates[d + 1];\n        const x2 = pixelCoordinates[d + 2];\n        const y2 = pixelCoordinates[d + 3];\n        const dx = x2 - x1;\n        const dy = y2 - y1;\n        const r = Math.sqrt(dx * dx + dy * dy);\n        context.moveTo(x1 + r, y1);\n        context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n        ++i;\n        break;\n      case CanvasInstruction.CLOSE_PATH:\n        context.closePath();\n        ++i;\n        break;\n      case CanvasInstruction.CUSTOM:\n        d = /** @type {number} */ (instruction[1]);\n        dd = instruction[2];\n        const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (instruction[3]);\n        const renderer = instruction[4];\n        const fn = instruction.length == 6 ? instruction[5] : undefined;\n        state.geometry = geometry;\n        state.feature = feature;\n        if (!(i in coordinateCache)) {\n          coordinateCache[i] = [];\n        }\n        const coords = coordinateCache[i];\n        if (fn) {\n          fn(pixelCoordinates, d, dd, 2, coords);\n        } else {\n          coords[0] = pixelCoordinates[d];\n          coords[1] = pixelCoordinates[d + 1];\n          coords.length = 2;\n        }\n        renderer(coords, state);\n        ++i;\n        break;\n      case CanvasInstruction.DRAW_IMAGE:\n        d = /** @type {number} */ (instruction[1]);\n        dd = /** @type {number} */ (instruction[2]);\n        image =  /** @type {HTMLCanvasElement|HTMLVideoElement|Image} */\n            (instruction[3]);\n        // Remaining arguments in DRAW_IMAGE are in alphabetical order\n        anchorX = /** @type {number} */ (instruction[4]);\n        anchorY = /** @type {number} */ (instruction[5]);\n        declutterGroup = featureCallback ? null : /** @type {module:ol/render/canvas~DeclutterGroup} */ (instruction[6]);\n        const height = /** @type {number} */ (instruction[7]);\n        const opacity = /** @type {number} */ (instruction[8]);\n        const originX = /** @type {number} */ (instruction[9]);\n        const originY = /** @type {number} */ (instruction[10]);\n        const rotateWithView = /** @type {boolean} */ (instruction[11]);\n        let rotation = /** @type {number} */ (instruction[12]);\n        const scale = /** @type {number} */ (instruction[13]);\n        const snapToPixel = /** @type {boolean} */ (instruction[14]);\n        const width = /** @type {number} */ (instruction[15]);\n\n        let padding, backgroundFill, backgroundStroke;\n        if (instruction.length > 16) {\n          padding = /** @type {Array.<number>} */ (instruction[16]);\n          backgroundFill = /** @type {boolean} */ (instruction[17]);\n          backgroundStroke = /** @type {boolean} */ (instruction[18]);\n        } else {\n          padding = defaultPadding;\n          backgroundFill = backgroundStroke = false;\n        }\n\n        if (rotateWithView) {\n          rotation += viewRotation;\n        }\n        for (; d < dd; d += 2) {\n          this.replayImage_(context,\n            pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n            declutterGroup, height, opacity, originX, originY, rotation, scale,\n            snapToPixel, width, padding,\n            backgroundFill ? /** @type {Array.<*>} */ (lastFillInstruction) : null,\n            backgroundStroke ? /** @type {Array.<*>} */ (lastStrokeInstruction) : null);\n        }\n        this.renderDeclutter_(declutterGroup, feature);\n        ++i;\n        break;\n      case CanvasInstruction.DRAW_CHARS:\n        const begin = /** @type {number} */ (instruction[1]);\n        const end = /** @type {number} */ (instruction[2]);\n        const baseline = /** @type {number} */ (instruction[3]);\n        declutterGroup = featureCallback ? null : /** @type {module:ol/render/canvas~DeclutterGroup} */ (instruction[4]);\n        const overflow = /** @type {number} */ (instruction[5]);\n        const fillKey = /** @type {string} */ (instruction[6]);\n        const maxAngle = /** @type {number} */ (instruction[7]);\n        const measure = /** @type {function(string):number} */ (instruction[8]);\n        const offsetY = /** @type {number} */ (instruction[9]);\n        const strokeKey = /** @type {string} */ (instruction[10]);\n        const strokeWidth =  /** @type {number} */ (instruction[11]);\n        const text = /** @type {string} */ (instruction[12]);\n        const textKey = /** @type {string} */ (instruction[13]);\n        const textScale = /** @type {number} */ (instruction[14]);\n\n        const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n        const textLength = measure(text);\n        if (overflow || textLength <= pathLength) {\n          const textAlign = /** @type {module:ol~render} */ (this).textStates[textKey].textAlign;\n          const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n          const parts = drawTextOnPath(\n            pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\n          if (parts) {\n            let c, cc, chars, label, part;\n            if (strokeKey) {\n              for (c = 0, cc = parts.length; c < cc; ++c) {\n                part = parts[c]; // x, y, anchorX, rotation, chunk\n                chars = /** @type {string} */ (part[4]);\n                label = /** @type {module:ol~render} */ (this).getImage(chars, textKey, '', strokeKey);\n                anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                this.replayImage_(context,\n                  /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                  anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                  /** @type {number} */ (part[3]), textScale, false, label.width,\n                  defaultPadding, null, null);\n              }\n            }\n            if (fillKey) {\n              for (c = 0, cc = parts.length; c < cc; ++c) {\n                part = parts[c]; // x, y, anchorX, rotation, chunk\n                chars = /** @type {string} */ (part[4]);\n                label = /** @type {module:ol~render} */ (this).getImage(chars, textKey, fillKey, '');\n                anchorX = /** @type {number} */ (part[2]);\n                anchorY = baseline * label.height - offsetY;\n                this.replayImage_(context,\n                  /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                  anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                  /** @type {number} */ (part[3]), textScale, false, label.width,\n                  defaultPadding, null, null);\n              }\n            }\n          }\n        }\n        this.renderDeclutter_(declutterGroup, feature);\n        ++i;\n        break;\n      case CanvasInstruction.END_GEOMETRY:\n        if (featureCallback !== undefined) {\n          feature = /** @type {module:ol/Feature|module:ol/render/Feature} */ (instruction[1]);\n          const result = featureCallback(feature);\n          if (result) {\n            return result;\n          }\n        }\n        ++i;\n        break;\n      case CanvasInstruction.FILL:\n        if (batchSize) {\n          pendingFill++;\n        } else {\n          this.fill_(context);\n        }\n        ++i;\n        break;\n      case CanvasInstruction.MOVE_TO_LINE_TO:\n        d = /** @type {number} */ (instruction[1]);\n        dd = /** @type {number} */ (instruction[2]);\n        x = pixelCoordinates[d];\n        y = pixelCoordinates[d + 1];\n        roundX = (x + 0.5) | 0;\n        roundY = (y + 0.5) | 0;\n        if (roundX !== prevX || roundY !== prevY) {\n          context.moveTo(x, y);\n          prevX = roundX;\n          prevY = roundY;\n        }\n        for (d += 2; d < dd; d += 2) {\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n            context.lineTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n        }\n        ++i;\n        break;\n      case CanvasInstruction.SET_FILL_STYLE:\n        lastFillInstruction = instruction;\n        this.alignFill_ = instruction[2];\n\n        if (pendingFill) {\n          this.fill_(context);\n          pendingFill = 0;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n        }\n\n        context.fillStyle = /** @type {module:ol/colorlike~ColorLike} */ (instruction[1]);\n        ++i;\n        break;\n      case CanvasInstruction.SET_STROKE_STYLE:\n        lastStrokeInstruction = instruction;\n        if (pendingStroke) {\n          context.stroke();\n          pendingStroke = 0;\n        }\n        this.setStrokeStyle_(context, /** @type {Array.<*>} */ (instruction));\n        ++i;\n        break;\n      case CanvasInstruction.STROKE:\n        if (batchSize) {\n          pendingStroke++;\n        } else {\n          context.stroke();\n        }\n        ++i;\n        break;\n      default:\n        ++i; // consume the instruction anyway, to avoid an infinite loop\n        break;\n    }\n  }\n  if (pendingFill) {\n    this.fill_(context);\n  }\n  if (pendingStroke) {\n    context.stroke();\n  }\n  return undefined;\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *     to skip.\n */\nCanvasReplay.prototype.replay = function(\n  context, transform, viewRotation, skippedFeaturesHash) {\n  this.viewRotation_ = viewRotation;\n  this.replay_(context, transform,\n    skippedFeaturesHash, this.instructions, undefined, undefined);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *     to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T=} opt_featureCallback\n *     Feature callback.\n * @param {module:ol/extent~Extent=} opt_hitExtent Only check features that intersect this\n *     extent.\n * @return {T|undefined} Callback result.\n * @template T\n */\nCanvasReplay.prototype.replayHitDetection = function(\n  context, transform, viewRotation, skippedFeaturesHash,\n  opt_featureCallback, opt_hitExtent) {\n  this.viewRotation_ = viewRotation;\n  return this.replay_(context, transform, skippedFeaturesHash,\n    this.hitDetectionInstructions, opt_featureCallback, opt_hitExtent);\n};\n\n\n/**\n * Reverse the hit detection instructions.\n */\nCanvasReplay.prototype.reverseHitDetectionInstructions = function() {\n  const hitDetectionInstructions = this.hitDetectionInstructions;\n  // step 1 - reverse array\n  hitDetectionInstructions.reverse();\n  // step 2 - reverse instructions within geometry blocks\n  let i;\n  const n = hitDetectionInstructions.length;\n  let instruction;\n  let type;\n  let begin = -1;\n  for (i = 0; i < n; ++i) {\n    instruction = hitDetectionInstructions[i];\n    type = /** @type {module:ol/render/canvas/Instruction} */ (instruction[0]);\n    if (type == CanvasInstruction.END_GEOMETRY) {\n      begin = i;\n    } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n      instruction[2] = i;\n      reverseSubArray(this.hitDetectionInstructions, begin, i);\n      begin = -1;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasReplay.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  const state = this.state;\n  if (fillStyle) {\n    const fillStyleColor = fillStyle.getColor();\n    state.fillStyle = asColorLike(fillStyleColor ?\n      fillStyleColor : defaultFillStyle);\n  } else {\n    state.fillStyle = undefined;\n  }\n  if (strokeStyle) {\n    const strokeStyleColor = strokeStyle.getColor();\n    state.strokeStyle = asColorLike(strokeStyleColor ?\n      strokeStyleColor : defaultStrokeStyle);\n    const strokeStyleLineCap = strokeStyle.getLineCap();\n    state.lineCap = strokeStyleLineCap !== undefined ?\n      strokeStyleLineCap : defaultLineCap;\n    const strokeStyleLineDash = strokeStyle.getLineDash();\n    state.lineDash = strokeStyleLineDash ?\n      strokeStyleLineDash.slice() : defaultLineDash;\n    const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n    state.lineDashOffset = strokeStyleLineDashOffset ?\n      strokeStyleLineDashOffset : defaultLineDashOffset;\n    const strokeStyleLineJoin = strokeStyle.getLineJoin();\n    state.lineJoin = strokeStyleLineJoin !== undefined ?\n      strokeStyleLineJoin : defaultLineJoin;\n    const strokeStyleWidth = strokeStyle.getWidth();\n    state.lineWidth = strokeStyleWidth !== undefined ?\n      strokeStyleWidth : defaultLineWidth;\n    const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n    state.miterLimit = strokeStyleMiterLimit !== undefined ?\n      strokeStyleMiterLimit : defaultMiterLimit;\n\n    if (state.lineWidth > this.maxLineWidth) {\n      this.maxLineWidth = state.lineWidth;\n      // invalidate the buffered max extent cache\n      this.bufferedMaxExtent_ = null;\n    }\n  } else {\n    state.strokeStyle = undefined;\n    state.lineCap = undefined;\n    state.lineDash = null;\n    state.lineDashOffset = undefined;\n    state.lineJoin = undefined;\n    state.lineWidth = undefined;\n    state.miterLimit = undefined;\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @return {Array.<*>} Fill instruction.\n */\nCanvasReplay.prototype.createFill = function(state, geometry) {\n  const fillStyle = state.fillStyle;\n  const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n  if (typeof fillStyle !== 'string') {\n    // Fill is a pattern or gradient - align it!\n    fillInstruction.push(true);\n  }\n  return fillInstruction;\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n */\nCanvasReplay.prototype.applyStroke = function(state) {\n  this.instructions.push(this.createStroke(state));\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n * @return {Array.<*>} Stroke instruction.\n */\nCanvasReplay.prototype.createStroke = function(state) {\n  return [\n    CanvasInstruction.SET_STROKE_STYLE,\n    state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n    state.lineJoin, state.miterLimit,\n    this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n  ];\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n * @param {function(this:module:ol/render/canvas/Replay, module:ol/render/canvas~FillStrokeState, (module:ol/geom/Geometry|module:ol/render/Feature)):Array.<*>} createFill Create fill.\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n */\nCanvasReplay.prototype.updateFillStyle = function(state, createFill, geometry) {\n  const fillStyle = state.fillStyle;\n  if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n    if (fillStyle !== undefined) {\n      this.instructions.push(createFill.call(this, state, geometry));\n    }\n    state.currentFillStyle = fillStyle;\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n * @param {function(this:module:ol/render/canvas/Replay, module:ol/render/canvas~FillStrokeState)} applyStroke Apply stroke.\n */\nCanvasReplay.prototype.updateStrokeStyle = function(state, applyStroke) {\n  const strokeStyle = state.strokeStyle;\n  const lineCap = state.lineCap;\n  const lineDash = state.lineDash;\n  const lineDashOffset = state.lineDashOffset;\n  const lineJoin = state.lineJoin;\n  const lineWidth = state.lineWidth;\n  const miterLimit = state.miterLimit;\n  if (state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit) {\n    if (strokeStyle !== undefined) {\n      applyStroke.call(this, state);\n    }\n    state.currentStrokeStyle = strokeStyle;\n    state.currentLineCap = lineCap;\n    state.currentLineDash = lineDash;\n    state.currentLineDashOffset = lineDashOffset;\n    state.currentLineJoin = lineJoin;\n    state.currentLineWidth = lineWidth;\n    state.currentMiterLimit = miterLimit;\n  }\n};\n\n\n/**\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nCanvasReplay.prototype.endGeometry = function(geometry, feature) {\n  this.beginGeometryInstruction1_[2] = this.instructions.length;\n  this.beginGeometryInstruction1_ = null;\n  this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n  this.beginGeometryInstruction2_ = null;\n  const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n  this.instructions.push(endGeometryInstruction);\n  this.hitDetectionInstructions.push(endGeometryInstruction);\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nCanvasReplay.prototype.finish = UNDEFINED;\n\n\n/**\n * Get the buffered rendering extent.  Rendering will be clipped to the extent\n * provided to the constructor.  To account for symbolizers that may intersect\n * this extent, we calculate a buffered extent (e.g. based on stroke width).\n * @return {module:ol/extent~Extent} The buffered rendering extent.\n * @protected\n */\nCanvasReplay.prototype.getBufferedMaxExtent = function() {\n  if (!this.bufferedMaxExtent_) {\n    this.bufferedMaxExtent_ = clone(this.maxExtent);\n    if (this.maxLineWidth > 0) {\n      const width = this.resolution * (this.maxLineWidth + 1) / 2;\n      buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n    }\n  }\n  return this.bufferedMaxExtent_;\n};\nexport default CanvasReplay;\n","/**\n * @module ol/render/canvas/ImageReplay\n */\nimport {inherits} from '../../util.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/canvas/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasImageReplay = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  CanvasReplay.call(this,\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n  /**\n   * @private\n   * @type {module:ol/render/canvas~DeclutterGroup}\n   */\n  this.declutterGroup_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|HTMLVideoElement|Image}\n   */\n  this.hitDetectionImage_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|HTMLVideoElement|Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.anchorX_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.anchorY_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.height_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.opacity_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.originX_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.originY_ = undefined;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = undefined;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.snapToPixel_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = undefined;\n\n};\n\ninherits(CanvasImageReplay, CanvasReplay);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n * @return {number} My end.\n */\nCanvasImageReplay.prototype.drawCoordinates_ = function(flatCoordinates, offset, end, stride) {\n  return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageReplay.prototype.drawPoint = function(pointGeometry, feature) {\n  if (!this.image_) {\n    return;\n  }\n  this.beginGeometry(pointGeometry, feature);\n  const flatCoordinates = pointGeometry.getFlatCoordinates();\n  const stride = pointGeometry.getStride();\n  const myBegin = this.coordinates.length;\n  const myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n  this.instructions.push([\n    CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_ * this.pixelRatio, this.snapToPixel_, this.width_\n  ]);\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_, this.snapToPixel_, this.width_\n  ]);\n  this.endGeometry(pointGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageReplay.prototype.drawMultiPoint = function(multiPointGeometry, feature) {\n  if (!this.image_) {\n    return;\n  }\n  this.beginGeometry(multiPointGeometry, feature);\n  const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n  const stride = multiPointGeometry.getStride();\n  const myBegin = this.coordinates.length;\n  const myEnd = this.drawCoordinates_(\n    flatCoordinates, 0, flatCoordinates.length, stride);\n  this.instructions.push([\n    CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_ * this.pixelRatio, this.snapToPixel_, this.width_\n  ]);\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_, this.snapToPixel_, this.width_\n  ]);\n  this.endGeometry(multiPointGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageReplay.prototype.finish = function() {\n  this.reverseHitDetectionInstructions();\n  // FIXME this doesn't really protect us against further calls to draw*Geometry\n  this.anchorX_ = undefined;\n  this.anchorY_ = undefined;\n  this.hitDetectionImage_ = null;\n  this.image_ = null;\n  this.height_ = undefined;\n  this.scale_ = undefined;\n  this.opacity_ = undefined;\n  this.originX_ = undefined;\n  this.originY_ = undefined;\n  this.rotateWithView_ = undefined;\n  this.rotation_ = undefined;\n  this.snapToPixel_ = undefined;\n  this.width_ = undefined;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageReplay.prototype.setImageStyle = function(imageStyle, declutterGroup) {\n  const anchor = imageStyle.getAnchor();\n  const size = imageStyle.getSize();\n  const hitDetectionImage = imageStyle.getHitDetectionImage(1);\n  const image = imageStyle.getImage(1);\n  const origin = imageStyle.getOrigin();\n  this.anchorX_ = anchor[0];\n  this.anchorY_ = anchor[1];\n  this.declutterGroup_ = /** @type {module:ol/render/canvas~DeclutterGroup} */ (declutterGroup);\n  this.hitDetectionImage_ = hitDetectionImage;\n  this.image_ = image;\n  this.height_ = size[1];\n  this.opacity_ = imageStyle.getOpacity();\n  this.originX_ = origin[0];\n  this.originY_ = origin[1];\n  this.rotateWithView_ = imageStyle.getRotateWithView();\n  this.rotation_ = imageStyle.getRotation();\n  this.scale_ = imageStyle.getScale();\n  this.snapToPixel_ = imageStyle.getSnapToPixel();\n  this.width_ = size[0];\n};\nexport default CanvasImageReplay;\n","/**\n * @module ol/render/canvas/LineStringReplay\n */\nimport {inherits} from '../../util.js';\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/canvas/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasLineStringReplay = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  CanvasReplay.call(this,\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n};\n\ninherits(CanvasLineStringReplay, CanvasReplay);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n * @return {number} end.\n */\nCanvasLineStringReplay.prototype.drawFlatCoordinates_ = function(flatCoordinates, offset, end, stride) {\n  const myBegin = this.coordinates.length;\n  const myEnd = this.appendFlatCoordinates(\n    flatCoordinates, offset, end, stride, false, false);\n  const moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n  this.instructions.push(moveToLineToInstruction);\n  this.hitDetectionInstructions.push(moveToLineToInstruction);\n  return end;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasLineStringReplay.prototype.drawLineString = function(lineStringGeometry, feature) {\n  const state = this.state;\n  const strokeStyle = state.strokeStyle;\n  const lineWidth = state.lineWidth;\n  if (strokeStyle === undefined || lineWidth === undefined) {\n    return;\n  }\n  this.updateStrokeStyle(state, this.applyStroke);\n  this.beginGeometry(lineStringGeometry, feature);\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.SET_STROKE_STYLE,\n    state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n    state.miterLimit, state.lineDash, state.lineDashOffset\n  ], beginPathInstruction);\n  const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n  const stride = lineStringGeometry.getStride();\n  this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n  this.hitDetectionInstructions.push(strokeInstruction);\n  this.endGeometry(lineStringGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasLineStringReplay.prototype.drawMultiLineString = function(multiLineStringGeometry, feature) {\n  const state = this.state;\n  const strokeStyle = state.strokeStyle;\n  const lineWidth = state.lineWidth;\n  if (strokeStyle === undefined || lineWidth === undefined) {\n    return;\n  }\n  this.updateStrokeStyle(state, this.applyStroke);\n  this.beginGeometry(multiLineStringGeometry, feature);\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.SET_STROKE_STYLE,\n    state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n    state.miterLimit, state.lineDash, state.lineDashOffset\n  ], beginPathInstruction);\n  const ends = multiLineStringGeometry.getEnds();\n  const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n  const stride = multiLineStringGeometry.getStride();\n  let offset = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n  }\n  this.hitDetectionInstructions.push(strokeInstruction);\n  this.endGeometry(multiLineStringGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasLineStringReplay.prototype.finish = function() {\n  const state = this.state;\n  if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n    this.instructions.push(strokeInstruction);\n  }\n  this.reverseHitDetectionInstructions();\n  this.state = null;\n};\n\n\n/**\n * @inheritDoc.\n */\nCanvasLineStringReplay.prototype.applyStroke = function(state) {\n  if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n    this.instructions.push(strokeInstruction);\n    state.lastStroke = this.coordinates.length;\n  }\n  state.lastStroke = 0;\n  CanvasReplay.prototype.applyStroke.call(this, state);\n  this.instructions.push(beginPathInstruction);\n};\nexport default CanvasLineStringReplay;\n","/**\n * @module ol/render/canvas/PolygonReplay\n */\nimport {inherits} from '../../util.js';\nimport {asString} from '../../color.js';\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\n\n/**\n * @constructor\n * @extends {module:ol/render/canvas/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasPolygonReplay = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  CanvasReplay.call(this,\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n};\n\ninherits(CanvasPolygonReplay, CanvasReplay);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @private\n * @return {number} End.\n */\nCanvasPolygonReplay.prototype.drawFlatCoordinatess_ = function(flatCoordinates, offset, ends, stride) {\n  const state = this.state;\n  const fill = state.fillStyle !== undefined;\n  const stroke = state.strokeStyle != undefined;\n  const numEnds = ends.length;\n  this.instructions.push(beginPathInstruction);\n  this.hitDetectionInstructions.push(beginPathInstruction);\n  for (let i = 0; i < numEnds; ++i) {\n    const end = ends[i];\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n    const moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    if (stroke) {\n      // Performance optimization: only call closePath() when we have a stroke.\n      // Otherwise the ring is closed already (see appendFlatCoordinates above).\n      this.instructions.push(closePathInstruction);\n      this.hitDetectionInstructions.push(closePathInstruction);\n    }\n    offset = end;\n  }\n  if (fill) {\n    this.instructions.push(fillInstruction);\n    this.hitDetectionInstructions.push(fillInstruction);\n  }\n  if (stroke) {\n    this.instructions.push(strokeInstruction);\n    this.hitDetectionInstructions.push(strokeInstruction);\n  }\n  return offset;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasPolygonReplay.prototype.drawCircle = function(circleGeometry, feature) {\n  const state = this.state;\n  const fillStyle = state.fillStyle;\n  const strokeStyle = state.strokeStyle;\n  if (fillStyle === undefined && strokeStyle === undefined) {\n    return;\n  }\n  this.setFillStrokeStyles_(circleGeometry);\n  this.beginGeometry(circleGeometry, feature);\n  if (state.fillStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_FILL_STYLE,\n      asString(defaultFillStyle)\n    ]);\n  }\n  if (state.strokeStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ]);\n  }\n  const flatCoordinates = circleGeometry.getFlatCoordinates();\n  const stride = circleGeometry.getStride();\n  const myBegin = this.coordinates.length;\n  this.appendFlatCoordinates(\n    flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n  const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n  this.instructions.push(beginPathInstruction, circleInstruction);\n  this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n  this.hitDetectionInstructions.push(fillInstruction);\n  if (state.fillStyle !== undefined) {\n    this.instructions.push(fillInstruction);\n  }\n  if (state.strokeStyle !== undefined) {\n    this.instructions.push(strokeInstruction);\n    this.hitDetectionInstructions.push(strokeInstruction);\n  }\n  this.endGeometry(circleGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasPolygonReplay.prototype.drawPolygon = function(polygonGeometry, feature) {\n  const state = this.state;\n  const fillStyle = state.fillStyle;\n  const strokeStyle = state.strokeStyle;\n  if (fillStyle === undefined && strokeStyle === undefined) {\n    return;\n  }\n  this.setFillStrokeStyles_(polygonGeometry);\n  this.beginGeometry(polygonGeometry, feature);\n  if (state.fillStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_FILL_STYLE,\n      asString(defaultFillStyle)\n    ]);\n  }\n  if (state.strokeStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ]);\n  }\n  const ends = polygonGeometry.getEnds();\n  const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n  const stride = polygonGeometry.getStride();\n  this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n  this.endGeometry(polygonGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasPolygonReplay.prototype.drawMultiPolygon = function(multiPolygonGeometry, feature) {\n  const state = this.state;\n  const fillStyle = state.fillStyle;\n  const strokeStyle = state.strokeStyle;\n  if (fillStyle === undefined && strokeStyle === undefined) {\n    return;\n  }\n  this.setFillStrokeStyles_(multiPolygonGeometry);\n  this.beginGeometry(multiPolygonGeometry, feature);\n  if (state.fillStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_FILL_STYLE,\n      asString(defaultFillStyle)\n    ]);\n  }\n  if (state.strokeStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ]);\n  }\n  const endss = multiPolygonGeometry.getEndss();\n  const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n  const stride = multiPolygonGeometry.getStride();\n  let offset = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n  }\n  this.endGeometry(multiPolygonGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasPolygonReplay.prototype.finish = function() {\n  this.reverseHitDetectionInstructions();\n  this.state = null;\n  // We want to preserve topology when drawing polygons.  Polygons are\n  // simplified using quantization and point elimination. However, we might\n  // have received a mix of quantized and non-quantized geometries, so ensure\n  // that all are quantized by quantizing all coordinates in the batch.\n  const tolerance = this.tolerance;\n  if (tolerance !== 0) {\n    const coordinates = this.coordinates;\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      coordinates[i] = snap(coordinates[i], tolerance);\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n */\nCanvasPolygonReplay.prototype.setFillStrokeStyles_ = function(geometry) {\n  const state = this.state;\n  const fillStyle = state.fillStyle;\n  if (fillStyle !== undefined) {\n    this.updateFillStyle(state, this.createFill, geometry);\n  }\n  if (state.strokeStyle !== undefined) {\n    this.updateStrokeStyle(state, this.applyStroke);\n  }\n};\nexport default CanvasPolygonReplay;\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array.<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextReplay\n */\nimport {getUid, inherits} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {labelCache, measureTextWidth, defaultTextAlign, measureTextHeight, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/canvas/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasTextReplay = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  CanvasReplay.call(this,\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n  /**\n   * @private\n   * @type {module:ol/render/canvas~DeclutterGroup}\n   */\n  this.declutterGroup_;\n\n  /**\n   * @private\n   * @type {Array.<HTMLCanvasElement>}\n   */\n  this.labels_ = null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.text_ = '';\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetY_ = 0;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.textRotateWithView_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textRotation_ = 0;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~FillState}\n   */\n  this.textFillState_ = null;\n\n  /**\n   * @type {!Object.<string, module:ol/render/canvas~FillState>}\n   */\n  this.fillStates = {};\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~StrokeState}\n   */\n  this.textStrokeState_ = null;\n\n  /**\n   * @type {!Object.<string, module:ol/render/canvas~StrokeState>}\n   */\n  this.strokeStates = {};\n\n  /**\n   * @private\n   * @type {module:ol/render/canvas~TextState}\n   */\n  this.textState_ = /** @type {module:ol/render/canvas~TextState} */ ({});\n\n  /**\n   * @type {!Object.<string, module:ol/render/canvas~TextState>}\n   */\n  this.textStates = {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.textKey_ = '';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.fillKey_ = '';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.strokeKey_ = '';\n\n  /**\n   * @private\n   * @type {Object.<string, Object.<string, number>>}\n   */\n  this.widths_ = {};\n\n  labelCache.prune();\n\n};\n\ninherits(CanvasTextReplay, CanvasReplay);\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array.<string>} lines Lines to measure.\n * @param {Array.<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\n/**\n * @inheritDoc\n */\nCanvasTextReplay.prototype.drawText = function(geometry, feature) {\n  const fillState = this.textFillState_;\n  const strokeState = this.textStrokeState_;\n  const textState = this.textState_;\n  if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n    return;\n  }\n\n  let begin = this.coordinates.length;\n\n  const geometryType = geometry.getType();\n  let flatCoordinates = null;\n  let end = 2;\n  let stride = 2;\n  let i, ii;\n\n  if (textState.placement === TextPlacement.LINE) {\n    if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n      return;\n    }\n    let ends;\n    flatCoordinates = geometry.getFlatCoordinates();\n    stride = geometry.getStride();\n    if (geometryType == GeometryType.LINE_STRING) {\n      ends = [flatCoordinates.length];\n    } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n      ends = geometry.getEnds();\n    } else if (geometryType == GeometryType.POLYGON) {\n      ends = geometry.getEnds().slice(0, 1);\n    } else if (geometryType == GeometryType.MULTI_POLYGON) {\n      const endss = geometry.getEndss();\n      ends = [];\n      for (i = 0, ii = endss.length; i < ii; ++i) {\n        ends.push(endss[i][0]);\n      }\n    }\n    this.beginGeometry(geometry, feature);\n    const textAlign = textState.textAlign;\n    let flatOffset = 0;\n    let flatEnd;\n    for (let o = 0, oo = ends.length; o < oo; ++o) {\n      if (textAlign == undefined) {\n        const range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n        flatOffset = range[0];\n        flatEnd = range[1];\n      } else {\n        flatEnd = ends[o];\n      }\n      for (i = flatOffset; i < flatEnd; i += stride) {\n        this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n      }\n      end = this.coordinates.length;\n      flatOffset = ends[o];\n      this.drawChars_(begin, end, this.declutterGroup_);\n      begin = end;\n    }\n    this.endGeometry(geometry, feature);\n\n  } else {\n    const label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\n    const width = label.width / this.pixelRatio;\n    switch (geometryType) {\n      case GeometryType.POINT:\n      case GeometryType.MULTI_POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        end = flatCoordinates.length;\n        break;\n      case GeometryType.LINE_STRING:\n        flatCoordinates = /** @type {module:ol/geom/LineString} */ (geometry).getFlatMidpoint();\n        break;\n      case GeometryType.CIRCLE:\n        flatCoordinates = /** @type {module:ol/geom/Circle} */ (geometry).getCenter();\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        flatCoordinates = /** @type {module:ol/geom/MultiLineString} */ (geometry).getFlatMidpoints();\n        end = flatCoordinates.length;\n        break;\n      case GeometryType.POLYGON:\n        flatCoordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getFlatInteriorPoint();\n        if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\n          return;\n        }\n        stride = 3;\n        break;\n      case GeometryType.MULTI_POLYGON:\n        const interiorPoints = /** @type {module:ol/geom/MultiPolygon} */ (geometry).getFlatInteriorPoints();\n        flatCoordinates = [];\n        for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n          if (textState.overflow || interiorPoints[i + 2] / this.resolution >= width) {\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n        }\n        end = flatCoordinates.length;\n        if (end == 0) {\n          return;\n        }\n        break;\n      default:\n    }\n    end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n    if (textState.backgroundFill || textState.backgroundStroke) {\n      this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n      if (textState.backgroundFill) {\n        this.updateFillStyle(this.state, this.createFill, geometry);\n        this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\n      }\n      if (textState.backgroundStroke) {\n        this.updateStrokeStyle(this.state, this.applyStroke);\n        this.hitDetectionInstructions.push(this.createStroke(this.state));\n      }\n    }\n    this.beginGeometry(geometry, feature);\n    this.drawTextImage_(label, begin, end);\n    this.endGeometry(geometry, feature);\n  }\n};\n\n\n/**\n * @param {string} text Text.\n * @param {string} textKey Text style key.\n * @param {string} fillKey Fill style key.\n * @param {string} strokeKey Stroke style key.\n * @return {HTMLCanvasElement} Image.\n */\nCanvasTextReplay.prototype.getImage = function(text, textKey, fillKey, strokeKey) {\n  let label;\n  const key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n  if (!labelCache.containsKey(key)) {\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\n    const fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\n    const textState = this.textStates[textKey] || this.textState_;\n    const pixelRatio = this.pixelRatio;\n    const scale = textState.scale * pixelRatio;\n    const align =  TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    const strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = (width + strokeWidth);\n    const context = createCanvasContext2D(\n      Math.ceil(renderWidth * scale),\n      Math.ceil((height + strokeWidth) * scale));\n    label = context.canvas;\n    labelCache.set(key, label);\n    if (scale != 1) {\n      context.scale(scale, scale);\n    }\n    context.font = textState.font;\n    if (strokeKey) {\n      context.strokeStyle = strokeState.strokeStyle;\n      context.lineWidth = strokeWidth;\n      context.lineCap = strokeState.lineCap;\n      context.lineJoin = strokeState.lineJoin;\n      context.miterLimit = strokeState.miterLimit;\n      if (CANVAS_LINE_DASH && strokeState.lineDash.length) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n    }\n    if (fillKey) {\n      context.fillStyle = fillState.fillStyle;\n    }\n    context.textBaseline = 'middle';\n    context.textAlign = 'center';\n    const leftRight = (0.5 - align);\n    const x = align * label.width / scale + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n      }\n    }\n  }\n  return labelCache.get(key);\n};\n\n\n/**\n * @private\n * @param {HTMLCanvasElement} label Label.\n * @param {number} begin Begin.\n * @param {number} end End.\n */\nCanvasTextReplay.prototype.drawTextImage_ = function(label, begin, end) {\n  const textState = this.textState_;\n  const strokeState = this.textStrokeState_;\n  const pixelRatio = this.pixelRatio;\n  const align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n  const baseline = TEXT_ALIGN[textState.textBaseline];\n  const strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n  const anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n  const anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n  this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n    label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n    this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n    1, true, label.width,\n    textState.padding == defaultPadding ?\n      defaultPadding : textState.padding.map(function(p) {\n        return p * pixelRatio;\n      }),\n    !!textState.backgroundFill, !!textState.backgroundStroke\n  ]);\n  this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n    label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n    this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n    1 / pixelRatio, true, label.width, textState.padding,\n    !!textState.backgroundFill, !!textState.backgroundStroke\n  ]);\n};\n\n\n/**\n * @private\n * @param {number} begin Begin.\n * @param {number} end End.\n * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n */\nCanvasTextReplay.prototype.drawChars_ = function(begin, end, declutterGroup) {\n  const strokeState = this.textStrokeState_;\n  const textState = this.textState_;\n  const fillState = this.textFillState_;\n\n  const strokeKey = this.strokeKey_;\n  if (strokeState) {\n    if (!(strokeKey in this.strokeStates)) {\n      this.strokeStates[strokeKey] = /** @type {module:ol/render/canvas~StrokeState} */ ({\n        strokeStyle: strokeState.strokeStyle,\n        lineCap: strokeState.lineCap,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineWidth: strokeState.lineWidth,\n        lineJoin: strokeState.lineJoin,\n        miterLimit: strokeState.miterLimit,\n        lineDash: strokeState.lineDash\n      });\n    }\n  }\n  const textKey = this.textKey_;\n  if (!(this.textKey_ in this.textStates)) {\n    this.textStates[this.textKey_] = /** @type {module:ol/render/canvas~TextState} */ ({\n      font: textState.font,\n      textAlign: textState.textAlign || defaultTextAlign,\n      scale: textState.scale\n    });\n  }\n  const fillKey = this.fillKey_;\n  if (fillState) {\n    if (!(fillKey in this.fillStates)) {\n      this.fillStates[fillKey] = /** @type {module:ol/render/canvas~FillState} */ ({\n        fillStyle: fillState.fillStyle\n      });\n    }\n  }\n\n  const pixelRatio = this.pixelRatio;\n  const baseline = TEXT_ALIGN[textState.textBaseline];\n\n  const offsetY = this.textOffsetY_ * pixelRatio;\n  const text = this.text_;\n  const font = textState.font;\n  const textScale = textState.scale;\n  const strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n  let widths = this.widths_[font];\n  if (!widths) {\n    this.widths_[font] = widths = {};\n  }\n  this.instructions.push([CanvasInstruction.DRAW_CHARS,\n    begin, end, baseline, declutterGroup,\n    textState.overflow, fillKey, textState.maxAngle,\n    function(text) {\n      let width = widths[text];\n      if (!width) {\n        width = widths[text] = measureTextWidth(font, text);\n      }\n      return width * textScale * pixelRatio;\n    },\n    offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n  ]);\n  this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n    begin, end, baseline, declutterGroup,\n    textState.overflow, fillKey, textState.maxAngle,\n    function(text) {\n      let width = widths[text];\n      if (!width) {\n        width = widths[text] = measureTextWidth(font, text);\n      }\n      return width * textScale;\n    },\n    offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n  ]);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasTextReplay.prototype.setTextStyle = function(textStyle, declutterGroup) {\n  let textState, fillState, strokeState;\n  if (!textStyle) {\n    this.text_ = '';\n  } else {\n    this.declutterGroup_ = /** @type {module:ol/render/canvas~DeclutterGroup} */ (declutterGroup);\n\n    const textFillStyle = textStyle.getFill();\n    if (!textFillStyle) {\n      fillState = this.textFillState_ = null;\n    } else {\n      fillState = this.textFillState_;\n      if (!fillState) {\n        fillState = this.textFillState_ = /** @type {module:ol/render/canvas~FillState} */ ({});\n      }\n      fillState.fillStyle = asColorLike(\n        textFillStyle.getColor() || defaultFillStyle);\n    }\n\n    const textStrokeStyle = textStyle.getStroke();\n    if (!textStrokeStyle) {\n      strokeState = this.textStrokeState_ = null;\n    } else {\n      strokeState = this.textStrokeState_;\n      if (!strokeState) {\n        strokeState = this.textStrokeState_ = /** @type {module:ol/render/canvas~StrokeState} */ ({});\n      }\n      const lineDash = textStrokeStyle.getLineDash();\n      const lineDashOffset = textStrokeStyle.getLineDashOffset();\n      const lineWidth = textStrokeStyle.getWidth();\n      const miterLimit = textStrokeStyle.getMiterLimit();\n      strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n      strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n      strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n      strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n      strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n      strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n      strokeState.strokeStyle = asColorLike(\n        textStrokeStyle.getColor() || defaultStrokeStyle);\n    }\n\n    textState = this.textState_;\n    const font = textStyle.getFont() || defaultFont;\n    checkFont(font);\n    const textScale = textStyle.getScale();\n    textState.overflow = textStyle.getOverflow();\n    textState.font = font;\n    textState.maxAngle = textStyle.getMaxAngle();\n    textState.placement = textStyle.getPlacement();\n    textState.textAlign = textStyle.getTextAlign();\n    textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n    textState.backgroundFill = textStyle.getBackgroundFill();\n    textState.backgroundStroke = textStyle.getBackgroundStroke();\n    textState.padding = textStyle.getPadding() || defaultPadding;\n    textState.scale = textScale === undefined ? 1 : textScale;\n\n    const textOffsetX = textStyle.getOffsetX();\n    const textOffsetY = textStyle.getOffsetY();\n    const textRotateWithView = textStyle.getRotateWithView();\n    const textRotation = textStyle.getRotation();\n    this.text_ = textStyle.getText() || '';\n    this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n    this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n    this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n    this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n    this.strokeKey_ = strokeState ?\n      (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n      strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n      strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n      '';\n    this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n    this.fillKey_ = fillState ?\n      (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n      '';\n  }\n};\nexport default CanvasTextReplay;\n","/**\n * @module ol/render/canvas/ReplayGroup\n */\nimport {inherits} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport ReplayType from '../ReplayType.js';\nimport CanvasReplay from '../canvas/Replay.js';\nimport CanvasImageReplay from '../canvas/ImageReplay.js';\nimport CanvasLineStringReplay from '../canvas/LineStringReplay.js';\nimport CanvasPolygonReplay from '../canvas/PolygonReplay.js';\nimport CanvasTextReplay from '../canvas/TextReplay.js';\nimport {ORDER} from '../replay.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @type {Object.<module:ol/render/ReplayType,\n *                function(new: module:ol/render/canvas/Replay, number, module:ol/extent~Extent,\n *                number, number, boolean, Array.<module:ol/render/canvas~DeclutterGroup>)>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': CanvasPolygonReplay,\n  'Default': CanvasReplay,\n  'Image': CanvasImageReplay,\n  'LineString': CanvasLineStringReplay,\n  'Polygon': CanvasPolygonReplay,\n  'Text': CanvasTextReplay\n};\n\n\n/**\n * @constructor\n * @extends {module:ol/render/ReplayGroup}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay group can have overlapping geometries.\n * @param {?} declutterTree Declutter tree\n * for declutter processing in postrender.\n * @param {number=} opt_renderBuffer Optional rendering buffer.\n * @struct\n */\nconst CanvasReplayGroup = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree, opt_renderBuffer) {\n  ReplayGroup.call(this);\n\n  /**\n   * Declutter tree.\n   * @private\n   */\n  this.declutterTree_ = declutterTree;\n\n  /**\n   * @type {module:ol/render/canvas~DeclutterGroup}\n   * @private\n   */\n  this.declutterGroup_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.tolerance_ = tolerance;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.maxExtent_ = maxExtent;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overlaps_ = overlaps;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.resolution_ = resolution;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.renderBuffer_ = opt_renderBuffer;\n\n  /**\n   * @private\n   * @type {!Object.<string, !Object.<module:ol/render/ReplayType, module:ol/render/canvas/Replay>>}\n   */\n  this.replaysByZIndex_ = {};\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.hitDetectionTransform_ = createTransform();\n};\n\ninherits(CanvasReplayGroup, ReplayGroup);\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object.<number, Array.<Array.<(boolean|undefined)>>>}\n */\nconst circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array.<Array.<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  let i;\n  const radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array.<Array.<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  const arraySize = radius * 2 + 1;\n  const arr = new Array(arraySize);\n  for (let i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  let x = radius;\n  let y = 0;\n  let error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object.<string, Array.<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n */\nexport function replayDeclutter(declutterReplays, context, rotation) {\n  const zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  const skippedFeatureUids = {};\n  for (let z = 0, zz = zs.length; z < zz; ++z) {\n    const replayData = declutterReplays[zs[z].toString()];\n    for (let i = 0, ii = replayData.length; i < ii;) {\n      const replay = replayData[i++];\n      const transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids);\n    }\n  }\n}\n\n\n/**\n * @param {boolean} group Group with previous replay.\n * @return {module:ol/render/canvas~DeclutterGroup} Declutter instruction group.\n */\nCanvasReplayGroup.prototype.addDeclutter = function(group) {\n  let declutter = null;\n  if (this.declutterTree_) {\n    if (group) {\n      declutter = this.declutterGroup_;\n      /** @type {number} */ (declutter[4])++;\n    } else {\n      declutter = this.declutterGroup_ = createEmpty();\n      declutter.push(1);\n    }\n  }\n  return declutter;\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n */\nCanvasReplayGroup.prototype.clip = function(context, transform) {\n  const flatClipCoords = this.getClipCoords(transform);\n  context.beginPath();\n  context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n  context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n  context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n  context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n  context.clip();\n};\n\n\n/**\n * @param {Array.<module:ol/render/ReplayType>} replays Replays.\n * @return {boolean} Has replays of the provided types.\n */\nCanvasReplayGroup.prototype.hasReplays = function(replays) {\n  for (const zIndex in this.replaysByZIndex_) {\n    const candidates = this.replaysByZIndex_[zIndex];\n    for (let i = 0, ii = replays.length; i < ii; ++i) {\n      if (replays[i] in candidates) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nCanvasReplayGroup.prototype.finish = function() {\n  for (const zKey in this.replaysByZIndex_) {\n    const replays = this.replaysByZIndex_[zKey];\n    for (const replayKey in replays) {\n      replays[replayKey].finish();\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T} callback Feature callback.\n * @param {Object.<string, module:ol/render/canvas~DeclutterGroup>} declutterReplays Declutter replays.\n * @return {T|undefined} Callback result.\n * @template T\n */\nCanvasReplayGroup.prototype.forEachFeatureAtCoordinate = function(\n  coordinate, resolution, rotation, hitTolerance, skippedFeaturesHash, callback, declutterReplays) {\n\n  hitTolerance = Math.round(hitTolerance);\n  const contextSize = hitTolerance * 2 + 1;\n  const transform = composeTransform(this.hitDetectionTransform_,\n    hitTolerance + 0.5, hitTolerance + 0.5,\n    1 / resolution, -1 / resolution,\n    -rotation,\n    -coordinate[0], -coordinate[1]);\n  const context = this.hitDetectionContext_;\n\n  if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n    context.canvas.width = contextSize;\n    context.canvas.height = contextSize;\n  } else {\n    context.clearRect(0, 0, contextSize, contextSize);\n  }\n\n  /**\n   * @type {module:ol/extent~Extent}\n   */\n  let hitExtent;\n  if (this.renderBuffer_ !== undefined) {\n    hitExtent = createEmpty();\n    extendCoordinate(hitExtent, coordinate);\n    buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n  }\n\n  const mask = getCircleArray(hitTolerance);\n  let declutteredFeatures;\n  if (this.declutterTree_) {\n    declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n      return entry.value;\n    });\n  }\n\n  let replayType;\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @return {?} Callback result.\n   */\n  function featureCallback(feature) {\n    const imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n    for (let i = 0; i < contextSize; i++) {\n      for (let j = 0; j < contextSize; j++) {\n        if (mask[i][j]) {\n          if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n            let result;\n            if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\n                declutteredFeatures.indexOf(feature) !== -1) {\n              result = callback(feature);\n            }\n            if (result) {\n              return result;\n            } else {\n              context.clearRect(0, 0, contextSize, contextSize);\n              return undefined;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /** @type {Array.<number>} */\n  const zs = Object.keys(this.replaysByZIndex_).map(Number);\n  zs.sort(numberSafeCompareFunction);\n\n  let i, j, replays, replay, result;\n  for (i = zs.length - 1; i >= 0; --i) {\n    const zIndexKey = zs[i].toString();\n    replays = this.replaysByZIndex_[zIndexKey];\n    for (j = ORDER.length - 1; j >= 0; --j) {\n      replayType = ORDER[j];\n      replay = replays[replayType];\n      if (replay !== undefined) {\n        if (declutterReplays &&\n            (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n          const declutter = declutterReplays[zIndexKey];\n          if (!declutter) {\n            declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n          } else {\n            declutter.push(replay, transform.slice(0));\n          }\n        } else {\n          result = replay.replayHitDetection(context, transform, rotation,\n            skippedFeaturesHash, featureCallback, hitExtent);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {module:ol/transform~Transform} transform Transform.\n * @return {Array.<number>} Clip coordinates.\n */\nCanvasReplayGroup.prototype.getClipCoords = function(transform) {\n  const maxExtent = this.maxExtent_;\n  const minX = maxExtent[0];\n  const minY = maxExtent[1];\n  const maxX = maxExtent[2];\n  const maxY = maxExtent[3];\n  const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n  transform2D(\n    flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n  return flatClipCoords;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasReplayGroup.prototype.getReplay = function(zIndex, replayType) {\n  const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n  let replays = this.replaysByZIndex_[zIndexKey];\n  if (replays === undefined) {\n    replays = {};\n    this.replaysByZIndex_[zIndexKey] = replays;\n  }\n  let replay = replays[replayType];\n  if (replay === undefined) {\n    const Constructor = BATCH_CONSTRUCTORS[replayType];\n    replay = new Constructor(this.tolerance_, this.maxExtent_,\n      this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n    replays[replayType] = replay;\n  }\n  return replay;\n};\n\n\n/**\n * @return {Object.<string, Object.<module:ol/render/ReplayType, module:ol/render/canvas/Replay>>} Replays.\n */\nCanvasReplayGroup.prototype.getReplays = function() {\n  return this.replaysByZIndex_;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasReplayGroup.prototype.isEmpty = function() {\n  return isEmpty(this.replaysByZIndex_);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {Array.<module:ol/render/ReplayType>=} opt_replayTypes Ordered replay types to replay.\n *     Default is {@link module:ol/render/replay~ORDER}\n * @param {Object.<string, module:ol/render/canvas~DeclutterGroup>=} opt_declutterReplays Declutter replays.\n */\nCanvasReplayGroup.prototype.replay = function(context,\n  transform, viewRotation, skippedFeaturesHash, opt_replayTypes, opt_declutterReplays) {\n\n  /** @type {Array.<number>} */\n  const zs = Object.keys(this.replaysByZIndex_).map(Number);\n  zs.sort(numberSafeCompareFunction);\n\n  // setup clipping so that the parts of over-simplified geometries are not\n  // visible outside the current extent when panning\n  context.save();\n  this.clip(context, transform);\n\n  const replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\n  let i, ii, j, jj, replays, replay;\n  for (i = 0, ii = zs.length; i < ii; ++i) {\n    const zIndexKey = zs[i].toString();\n    replays = this.replaysByZIndex_[zIndexKey];\n    for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n      const replayType = replayTypes[j];\n      replay = replays[replayType];\n      if (replay !== undefined) {\n        if (opt_declutterReplays &&\n            (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n          const declutter = opt_declutterReplays[zIndexKey];\n          if (!declutter) {\n            opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n          } else {\n            declutter.push(replay, transform.slice(0));\n          }\n        } else {\n          replay.replay(context, transform, viewRotation, skippedFeaturesHash);\n        }\n      }\n    }\n  }\n\n  context.restore();\n};\n\nexport default CanvasReplayGroup;\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid, inherits} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup from '../../render/canvas/ReplayGroup.js';\nimport CanvasLayerRenderer from '../canvas/Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\n\n/**\n * @constructor\n * @extends {module:ol/renderer/canvas/Layer}\n * @param {module:ol/layer/Vector} vectorLayer Vector layer.\n * @api\n */\nconst CanvasVectorLayerRenderer = function(vectorLayer) {\n\n  CanvasLayerRenderer.call(this, vectorLayer);\n\n  /**\n   * Declutter tree.\n   * @private\n   */\n  this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.dirty_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedResolution_ = NaN;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.renderedExtent_ = createEmpty();\n\n  /**\n   * @private\n   * @type {function(module:ol/Feature, module:ol/Feature): number|null}\n   */\n  this.renderedRenderOrder_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/render/canvas/ReplayGroup}\n   */\n  this.replayGroup_ = null;\n\n  /**\n   * A new replay group had to be created by `prepareFrame()`\n   * @type {boolean}\n   */\n  this.replayGroupChanged = true;\n\n  /**\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context = createCanvasContext2D();\n\n  listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n};\n\ninherits(CanvasVectorLayerRenderer, CanvasLayerRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/VectorLayer} The layer renderer.\n */\nCanvasVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorLayerRenderer(/** @type {module:ol/layer/Vector} */ (layer));\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorLayerRenderer.prototype.disposeInternal = function() {\n  unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n  CanvasLayerRenderer.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n */\nCanvasVectorLayerRenderer.prototype.compose = function(context, frameState, layerState) {\n  const extent = frameState.extent;\n  const pixelRatio = frameState.pixelRatio;\n  const skippedFeatureUids = layerState.managed ?\n    frameState.skippedFeatureUids : {};\n  const viewState = frameState.viewState;\n  const projection = viewState.projection;\n  const rotation = viewState.rotation;\n  const projectionExtent = projection.getExtent();\n  const vectorSource = /** @type {module:ol/source/Vector} */ (this.getLayer().getSource());\n\n  let transform = this.getTransform(frameState, 0);\n\n  // clipped rendering if layer extent is set\n  const clipExtent = layerState.extent;\n  const clipped = clipExtent !== undefined;\n  if (clipped) {\n    this.clip(context, frameState,  /** @type {module:ol/extent~Extent} */ (clipExtent));\n  }\n  const replayGroup = this.replayGroup_;\n  if (replayGroup && !replayGroup.isEmpty()) {\n    if (this.declutterTree_) {\n      this.declutterTree_.clear();\n    }\n    const layer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n    let drawOffsetX = 0;\n    let drawOffsetY = 0;\n    let replayContext;\n    const transparentLayer = layerState.opacity !== 1;\n    const hasRenderListeners = layer.hasListener(RenderEventType.RENDER);\n    if (transparentLayer || hasRenderListeners) {\n      let drawWidth = context.canvas.width;\n      let drawHeight = context.canvas.height;\n      if (rotation) {\n        const drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n        drawOffsetX = (drawSize - drawWidth) / 2;\n        drawOffsetY = (drawSize - drawHeight) / 2;\n        drawWidth = drawHeight = drawSize;\n      }\n      // resize and clear\n      this.context.canvas.width = drawWidth;\n      this.context.canvas.height = drawHeight;\n      replayContext = this.context;\n    } else {\n      replayContext = context;\n    }\n\n    const alpha = replayContext.globalAlpha;\n    if (!transparentLayer) {\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      replayContext.globalAlpha = layerState.opacity;\n    }\n\n    if (replayContext != context) {\n      replayContext.translate(drawOffsetX, drawOffsetY);\n    }\n\n    const width = frameState.size[0] * pixelRatio;\n    const height = frameState.size[1] * pixelRatio;\n    rotateAtOffset(replayContext, -rotation,\n      width / 2, height / 2);\n    replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n    if (vectorSource.getWrapX() && projection.canWrapX() &&\n        !containsExtent(projectionExtent, extent)) {\n      let startX = extent[0];\n      const worldWidth = getWidth(projectionExtent);\n      let world = 0;\n      let offsetX;\n      while (startX < projectionExtent[0]) {\n        --world;\n        offsetX = worldWidth * world;\n        transform = this.getTransform(frameState, offsetX);\n        replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n        startX += worldWidth;\n      }\n      world = 0;\n      startX = extent[2];\n      while (startX > projectionExtent[2]) {\n        ++world;\n        offsetX = worldWidth * world;\n        transform = this.getTransform(frameState, offsetX);\n        replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n        startX -= worldWidth;\n      }\n    }\n    rotateAtOffset(replayContext, rotation,\n      width / 2, height / 2);\n\n    if (replayContext != context) {\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (transparentLayer) {\n        const mainContextAlpha = context.globalAlpha;\n        context.globalAlpha = layerState.opacity;\n        context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        context.globalAlpha = mainContextAlpha;\n      } else {\n        context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n      }\n      replayContext.translate(-drawOffsetX, -drawOffsetY);\n    }\n\n    if (!transparentLayer) {\n      replayContext.globalAlpha = alpha;\n    }\n  }\n\n  if (clipped) {\n    context.restore();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorLayerRenderer.prototype.composeFrame = function(frameState, layerState, context) {\n  const transform = this.getTransform(frameState, 0);\n  this.preCompose(context, frameState, transform);\n  this.compose(context, frameState, layerState);\n  this.postCompose(context, frameState, layerState, transform);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  if (!this.replayGroup_) {\n    return undefined;\n  } else {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n    /** @type {!Object.<string, boolean>} */\n    const features = {};\n    const result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        const key = getUid(feature).toString();\n        if (!(key in features)) {\n          features[key] = true;\n          return callback.call(thisArg, feature, layer);\n        }\n      }, null);\n    return result;\n  }\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n */\nCanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function(event) {\n  const layer = this.getLayer();\n  if (layer.getVisible() && this.replayGroup_) {\n    layer.changed();\n  }\n};\n\n\n/**\n * Handle changes in image style state.\n * @param {module:ol/events/Event} event Image style change event.\n * @private\n */\nCanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function(event) {\n  this.renderIfReadyAndVisible();\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {\n  const vectorLayer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n  const vectorSource = vectorLayer.getSource();\n\n  const animating = frameState.viewHints[ViewHint.ANIMATING];\n  const interacting = frameState.viewHints[ViewHint.INTERACTING];\n  const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n  const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n  if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)) {\n    return true;\n  }\n\n  const frameStateExtent = frameState.extent;\n  const viewState = frameState.viewState;\n  const projection = viewState.projection;\n  const resolution = viewState.resolution;\n  const pixelRatio = frameState.pixelRatio;\n  const vectorLayerRevision = vectorLayer.getRevision();\n  const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n  let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n  if (vectorLayerRenderOrder === undefined) {\n    vectorLayerRenderOrder = defaultRenderOrder;\n  }\n\n  const extent = buffer(frameStateExtent,\n    vectorLayerRenderBuffer * resolution);\n  const projectionExtent = viewState.projection.getExtent();\n\n  if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)) {\n    // For the replay group, we need an extent that intersects the real world\n    // (-180° to +180°). To support geometries in a coordinate range from -540°\n    // to +540°, we add at least 1 world width on each side of the projection\n    // extent. If the viewport is wider than the world, we need to add half of\n    // the viewport width to make sure we cover the whole viewport.\n    const worldWidth = getWidth(projectionExtent);\n    const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n    extent[0] = projectionExtent[0] - gutter;\n    extent[2] = projectionExtent[2] + gutter;\n  }\n\n  if (!this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.renderedExtent_, extent)) {\n    this.replayGroupChanged = false;\n    return true;\n  }\n\n  this.replayGroup_ = null;\n\n  this.dirty_ = false;\n\n  const replayGroup = new CanvasReplayGroup(\n    getRenderTolerance(resolution, pixelRatio), extent, resolution,\n    pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n  vectorSource.loadFeatures(extent, resolution, projection);\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @this {module:ol/renderer/canvas/VectorLayer}\n   */\n  const render = function(feature) {\n    let styles;\n    const styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n    if (styleFunction) {\n      styles = styleFunction(feature, resolution);\n    }\n    if (styles) {\n      const dirty = this.renderFeature(\n        feature, resolution, pixelRatio, styles, replayGroup);\n      this.dirty_ = this.dirty_ || dirty;\n    }\n  }.bind(this);\n  if (vectorLayerRenderOrder) {\n    /** @type {Array.<module:ol/Feature>} */\n    const features = [];\n    vectorSource.forEachFeatureInExtent(extent,\n      /**\n       * @param {module:ol/Feature} feature Feature.\n       */\n      function(feature) {\n        features.push(feature);\n      }, this);\n    features.sort(vectorLayerRenderOrder);\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n  } else {\n    vectorSource.forEachFeatureInExtent(extent, render, this);\n  }\n  replayGroup.finish();\n\n  this.renderedResolution_ = resolution;\n  this.renderedRevision_ = vectorLayerRevision;\n  this.renderedRenderOrder_ = vectorLayerRenderOrder;\n  this.renderedExtent_ = extent;\n  this.replayGroup_ = replayGroup;\n\n  this.replayGroupChanged = true;\n  return true;\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {(module:ol/style/Style|Array.<module:ol/style/Style>)} styles The style or array of styles.\n * @param {module:ol/render/canvas/ReplayGroup} replayGroup Replay group.\n * @return {boolean} `true` if an image is loading.\n */\nCanvasVectorLayerRenderer.prototype.renderFeature = function(feature, resolution, pixelRatio, styles, replayGroup) {\n  if (!styles) {\n    return false;\n  }\n  let loading = false;\n  if (Array.isArray(styles)) {\n    for (let i = 0, ii = styles.length; i < ii; ++i) {\n      loading = renderFeature(\n        replayGroup, feature, styles[i],\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this) || loading;\n    }\n  } else {\n    loading = renderFeature(\n      replayGroup, feature, styles,\n      getSquaredRenderTolerance(resolution, pixelRatio),\n      this.handleStyleImageChange_, this);\n  }\n  return loading;\n};\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport {getUid, inherits} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileState from '../../TileState.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport {equivalent as equivalentProjection} from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/ReplayType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\nimport {ORDER} from '../../render/replay.js';\nimport CanvasTileLayerRenderer from '../canvas/TileLayer.js';\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  reset as resetTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\n\n\n/**\n * @type {!Object.<string, Array.<module:ol/render/ReplayType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n\n\n/**\n * @type {!Object.<string, Array.<module:ol/render/ReplayType>>}\n */\nconst VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': ORDER\n};\n\n\n/**\n * @constructor\n * @extends {module:ol/renderer/canvas/TileLayer}\n * @param {module:ol/layer/VectorTile} layer VectorTile layer.\n * @api\n */\nconst CanvasVectorTileLayerRenderer = function(layer) {\n\n  /**\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context = null;\n\n  CanvasTileLayerRenderer.call(this, layer);\n\n  /**\n   * Declutter tree.\n   * @private\n   */\n  this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.dirty_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedLayerRevision_;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.tmpTransform_ = createTransform();\n\n  // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n  this.zDirection = layer.getRenderMode() == VectorTileRenderType.VECTOR ? 1 : 0;\n\n  listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n};\n\ninherits(CanvasVectorTileLayerRenderer, CanvasTileLayerRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/VectorTileLayer} The layer renderer.\n */\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorTileLayerRenderer(/** @type {module:ol/layer/VectorTile} */ (layer));\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.disposeInternal = function() {\n  unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n  CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.getTile = function(z, x, y, pixelRatio, projection) {\n  const tile = CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection);\n  if (tile.getState() === TileState.LOADED) {\n    this.createReplayGroup_(tile, pixelRatio, projection);\n    if (this.context) {\n      this.renderTileImage_(tile, pixelRatio, projection);\n    }\n  }\n  return tile;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {\n  const layer = this.getLayer();\n  const layerRevision = layer.getRevision();\n  if (this.renderedLayerRevision_ != layerRevision) {\n    this.renderedTiles.length = 0;\n    const renderMode = layer.getRenderMode();\n    if (!this.context && renderMode != VectorTileRenderType.VECTOR) {\n      this.context = createCanvasContext2D();\n    }\n    if (this.context && renderMode == VectorTileRenderType.VECTOR) {\n      this.context = null;\n    }\n  }\n  this.renderedLayerRevision_ = layerRevision;\n  return CanvasTileLayerRenderer.prototype.prepareFrame.apply(this, arguments);\n};\n\n\n/**\n * @param {module:ol/VectorImageTile} tile Tile.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @private\n */\nCanvasVectorTileLayerRenderer.prototype.createReplayGroup_ = function(tile, pixelRatio, projection) {\n  const layer = this.getLayer();\n  const revision = layer.getRevision();\n  const renderOrder = /** @type {module:ol/render~OrderFunction} */ (layer.getRenderOrder()) || null;\n\n  const replayState = tile.getReplayState(layer);\n  if (!replayState.dirty && replayState.renderedRevision == revision &&\n      replayState.renderedRenderOrder == renderOrder) {\n    return;\n  }\n\n  const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n  const sourceTileGrid = source.getTileGrid();\n  const tileGrid = source.getTileGridForProjection(projection);\n  const resolution = tileGrid.getResolution(tile.tileCoord[0]);\n  const tileExtent = tile.extent;\n\n  const zIndexKeys = {};\n  for (let t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n    const sourceTile = tile.getTile(tile.tileKeys[t]);\n    if (sourceTile.getState() != TileState.LOADED) {\n      continue;\n    }\n\n    const sourceTileCoord = sourceTile.tileCoord;\n    const sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n    const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n    const bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n      buffer(sharedExtent, layer.getRenderBuffer() * resolution, this.tmpExtent);\n    const tileProjection = sourceTile.getProjection();\n    let reproject = false;\n    if (!equivalentProjection(projection, tileProjection)) {\n      reproject = true;\n      sourceTile.setProjection(projection);\n    }\n    replayState.dirty = false;\n    const replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\n      pixelRatio, source.getOverlaps(), this.declutterTree_, layer.getRenderBuffer());\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @this {module:ol/renderer/canvas/VectorTileLayer}\n     */\n    const render = function(feature) {\n      let styles;\n      const styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        const dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n        replayState.dirty = replayState.dirty || dirty;\n      }\n    };\n\n    const features = sourceTile.getFeatures();\n    if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n      features.sort(renderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      if (reproject) {\n        if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n          // projected tile extent\n          tileProjection.setWorldExtent(sourceTileExtent);\n          // tile extent in tile pixel space\n          tileProjection.setExtent(sourceTile.getExtent());\n        }\n        feature.getGeometry().transform(tileProjection, projection);\n      }\n      if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n        render.call(this, feature);\n      }\n    }\n    replayGroup.finish();\n    for (const r in replayGroup.getReplays()) {\n      zIndexKeys[r] = true;\n    }\n    sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n  }\n  replayState.renderedRevision = revision;\n  replayState.renderedRenderOrder = renderOrder;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  const resolution = frameState.viewState.resolution;\n  const rotation = frameState.viewState.rotation;\n  hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n  const layer = this.getLayer();\n  /** @type {!Object.<string, boolean>} */\n  const features = {};\n\n  /** @type {Array.<module:ol/VectorImageTile>} */\n  const renderedTiles = this.renderedTiles;\n\n  let bufferedExtent, found;\n  let i, ii, replayGroup;\n  for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n    const tile = renderedTiles[i];\n    bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\n    if (!containsCoordinate(bufferedExtent, coordinate)) {\n      continue;\n    }\n    for (let t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n      const sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n      found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          const key = getUid(feature).toString();\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n    }\n  }\n  return found;\n};\n\n\n/**\n * @param {module:ol/VectorTile} tile Tile.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @return {module:ol/transform~Transform} transform Transform.\n * @private\n */\nCanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function(tile, frameState) {\n  const layer = this.getLayer();\n  const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n  const tileGrid = source.getTileGrid();\n  const tileCoord = tile.tileCoord;\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  const viewState = frameState.viewState;\n  const pixelRatio = frameState.pixelRatio;\n  const renderResolution = viewState.resolution / pixelRatio;\n  const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n  const center = viewState.center;\n  const origin = getTopLeft(tileExtent);\n  const size = frameState.size;\n  const offsetX = Math.round(pixelRatio * size[0] / 2);\n  const offsetY = Math.round(pixelRatio * size[1] / 2);\n  return composeTransform(this.tmpTransform_,\n    offsetX, offsetY,\n    tileResolution / renderResolution, tileResolution / renderResolution,\n    viewState.rotation,\n    (origin[0] - center[0]) / tileResolution,\n    (center[1] - origin[1]) / tileResolution);\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n */\nCanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function(event) {\n  const layer = this.getLayer();\n  if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n    layer.changed();\n  }\n};\n\n\n/**\n * Handle changes in image style state.\n * @param {module:ol/events/Event} event Image style change event.\n * @private\n */\nCanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function(event) {\n  this.renderIfReadyAndVisible();\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.postCompose = function(context, frameState, layerState) {\n  const layer = this.getLayer();\n  const renderMode = layer.getRenderMode();\n  if (renderMode != VectorTileRenderType.IMAGE) {\n    const declutterReplays = layer.getDeclutter() ? {} : null;\n    const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n    const replayTypes = VECTOR_REPLAYS[renderMode];\n    const pixelRatio = frameState.pixelRatio;\n    const rotation = frameState.viewState.rotation;\n    const size = frameState.size;\n    let offsetX, offsetY;\n    if (rotation) {\n      offsetX = Math.round(pixelRatio * size[0] / 2);\n      offsetY = Math.round(pixelRatio * size[1] / 2);\n      rotateAtOffset(context, -rotation, offsetX, offsetY);\n    }\n    if (declutterReplays) {\n      this.declutterTree_.clear();\n    }\n    const tiles = this.renderedTiles;\n    const tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n    const clips = [];\n    const zs = [];\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = /** @type {module:ol/VectorImageTile} */ (tiles[i]);\n      if (tile.getState() == TileState.ABORT) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n      const worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tile.extent[0];\n      let transform = undefined;\n      for (let t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n        const sourceTile = tile.getTile(tile.tileKeys[t]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        const replayGroup = sourceTile.getReplayGroup(layer, tileCoord.toString());\n        if (renderMode != VectorTileRenderType.VECTOR && !replayGroup.hasReplays(replayTypes)) {\n          continue;\n        }\n        if (!transform) {\n          transform = this.getTransform(frameState, worldOffset);\n        }\n        const currentZ = sourceTile.tileCoord[0];\n        const currentClip = replayGroup.getClipCoords(transform);\n        context.save();\n        context.globalAlpha = layerState.opacity;\n        // Create a clip mask for regions in this low resolution tile that are\n        // already filled by a higher resolution tile\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          const clip = clips[j];\n          if (currentZ < zs[j]) {\n            context.beginPath();\n            // counter-clockwise (outer ring) for current tile\n            context.moveTo(currentClip[0], currentClip[1]);\n            context.lineTo(currentClip[2], currentClip[3]);\n            context.lineTo(currentClip[4], currentClip[5]);\n            context.lineTo(currentClip[6], currentClip[7]);\n            // clockwise (inner ring) for higher resolution tile\n            context.moveTo(clip[6], clip[7]);\n            context.lineTo(clip[4], clip[5]);\n            context.lineTo(clip[2], clip[3]);\n            context.lineTo(clip[0], clip[1]);\n            context.clip();\n          }\n        }\n        replayGroup.replay(context, transform, rotation, {}, replayTypes, declutterReplays);\n        context.restore();\n        clips.push(currentClip);\n        zs.push(currentZ);\n      }\n    }\n    if (declutterReplays) {\n      replayDeclutter(declutterReplays, context, rotation);\n    }\n    if (rotation) {\n      rotateAtOffset(context, rotation,\n        /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n    }\n  }\n  CanvasTileLayerRenderer.prototype.postCompose.apply(this, arguments);\n};\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {(module:ol/style/Style|Array.<module:ol/style/Style>)} styles The style or array of styles.\n * @param {module:ol/render/canvas/ReplayGroup} replayGroup Replay group.\n * @return {boolean} `true` if an image is loading.\n */\nCanvasVectorTileLayerRenderer.prototype.renderFeature = function(feature, squaredTolerance, styles, replayGroup) {\n  if (!styles) {\n    return false;\n  }\n  let loading = false;\n  if (Array.isArray(styles)) {\n    for (let i = 0, ii = styles.length; i < ii; ++i) {\n      loading = renderFeature(\n        replayGroup, feature, styles[i], squaredTolerance,\n        this.handleStyleImageChange_, this) || loading;\n    }\n  } else {\n    loading = renderFeature(\n      replayGroup, feature, styles, squaredTolerance,\n      this.handleStyleImageChange_, this);\n  }\n  return loading;\n};\n\n\n/**\n * @param {module:ol/VectorImageTile} tile Tile.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @private\n */\nCanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function(\n  tile, pixelRatio, projection) {\n  const layer = this.getLayer();\n  const replayState = tile.getReplayState(layer);\n  const revision = layer.getRevision();\n  const replays = IMAGE_REPLAYS[layer.getRenderMode()];\n  if (replays && replayState.renderedTileRevision !== revision) {\n    replayState.renderedTileRevision = revision;\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n    const tileGrid = source.getTileGridForProjection(projection);\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext(layer);\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    for (let i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n      const sourceTile = tile.getTile(tile.tileKeys[i]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const pixelScale = pixelRatio / resolution;\n      const transform = resetTransform(this.tmpTransform_);\n      scaleTransform(transform, pixelScale, -pixelScale);\n      translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n      const replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n      replayGroup.replay(context, transform, 0, {}, replays);\n    }\n  }\n};\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/Map\n */\nimport {inherits} from './util.js';\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control/util.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport CanvasImageLayerRenderer from './renderer/canvas/ImageLayer.js';\nimport CanvasMapRenderer from './renderer/canvas/Map.js';\nimport CanvasTileLayerRenderer from './renderer/canvas/TileLayer.js';\nimport CanvasVectorLayerRenderer from './renderer/canvas/VectorLayer.js';\nimport CanvasVectorTileLayerRenderer from './renderer/canvas/VectorTileLayer.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @constructor\n * @extends {module:ol/PluggableMap}\n * @param {module:ol/PluggableMap~MapOptions} options Map options.\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nconst Map = function(options) {\n  options = assign({}, options);\n  if (!options.controls) {\n    options.controls = defaultControls();\n  }\n  if (!options.interactions) {\n    options.interactions = defaultInteractions();\n  }\n\n  PluggableMap.call(this, options);\n};\n\ninherits(Map, PluggableMap);\n\nMap.prototype.createRenderer = function() {\n  const renderer = new CanvasMapRenderer(this);\n  renderer.registerLayerRenderers([\n    CanvasImageLayerRenderer,\n    CanvasTileLayerRenderer,\n    CanvasVectorLayerRenderer,\n    CanvasVectorTileLayerRenderer\n  ]);\n  return renderer;\n};\n\nexport default Map;\n","/**\n * @module ol/layer/Tile\n */\nimport {inherits} from '../util.js';\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport TileProperty from '../layer/TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {module:ol/source/Tile} [source] Source for this layer.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @constructor\n * @extends {module:ol/layer/Layer}\n * @fires module:ol/render/Event~RenderEvent\n * @param {module:ol/layer/Tile~Options=} opt_options Tile layer options.\n * @api\n */\nconst TileLayer = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const baseOptions = assign({}, options);\n\n  delete baseOptions.preload;\n  delete baseOptions.useInterimTilesOnError;\n  Layer.call(this,  /** @type {module:ol/layer/Layer~Options} */ (baseOptions));\n\n  this.setPreload(options.preload !== undefined ? options.preload : 0);\n  this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n    options.useInterimTilesOnError : true);\n\n  /**\n   * The layer type.\n   * @protected\n   * @type {module:ol/LayerType}\n   */\n  this.type = LayerType.TILE;\n\n};\n\ninherits(TileLayer, Layer);\n\n\n/**\n * Return the level as number to which we will preload tiles up to.\n * @return {number} The level to preload tiles up to.\n * @observable\n * @api\n */\nTileLayer.prototype.getPreload = function() {\n  return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n};\n\n\n/**\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\n * @function\n * @return {module:ol/source/Tile} Source.\n * @api\n */\nTileLayer.prototype.getSource;\n\n\n/**\n * Set the level as number to which we will preload tiles up to.\n * @param {number} preload The level to preload tiles up to.\n * @observable\n * @api\n */\nTileLayer.prototype.setPreload = function(preload) {\n  this.set(TileProperty.PRELOAD, preload);\n};\n\n\n/**\n * Whether we use interim tiles on error.\n * @return {boolean} Use interim tiles on error.\n * @observable\n * @api\n */\nTileLayer.prototype.getUseInterimTilesOnError = function() {\n  return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n};\n\n\n/**\n * Set whether we use interim tiles on error.\n * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n * @observable\n * @api\n */\nTileLayer.prototype.setUseInterimTilesOnError = function(useInterimTilesOnError) {\n  this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n};\nexport default TileLayer;\n","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../util.js';\nimport XYZ from '../source/XYZ.js';\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {module:ol/source/XYZ}\n * @param {module:ol/source/OSM~Options=} [opt_options] Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\nexport default OSM;\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n\n/**\n * When using {@link module:ol/xml~makeChildAppender} or\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node\n */\n\n\n/**\n * @typedef {function(Node, Array.<*>)} Parser\n */\n\n\n/**\n * @typedef {function(Node, *, Array.<*>)} Serializer\n */\n\n\n/**\n * This document should be used when creating nodes for XML serializations. This\n * document is also used by {@link module:ol/xml~createElementNS}\n * @const\n * @type {Document}\n */\nexport const DOCUMENT = document.implementation.createDocument('', '', null);\n\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI = 'http://www.w3.org/2001/XMLSchema-instance';\n\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Node} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return DOCUMENT.createElementNS(namespaceURI, qualifiedName);\n}\n\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array.<string>} accumulator Accumulator.\n * @private\n * @return {Array.<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (node.nodeType == Node.CDATA_SECTION_NODE ||\n      node.nodeType == Node.TEXT_NODE) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n\n/**\n * @param {?} value Value.\n * @return {boolean} Is document.\n */\nexport function isDocument(value) {\n  return value instanceof Document;\n}\n\n\n/**\n * @param {?} value Value.\n * @return {boolean} Is node.\n */\nexport function isNode(value) {\n  return value instanceof Node;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array.<*>): (Array.<*>|undefined)}\n *     valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        const array = /** @type {Array.<*>} */ (objectStack[objectStack.length - 1]);\n        extend(array, value);\n      }\n    }\n  );\n}\n\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array.<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        const array = /** @type {Array.<*>} */ (objectStack[objectStack.length - 1]);\n        array.push(value);\n      }\n    });\n}\n\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array.<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    });\n}\n\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Node, Array.<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        const property = opt_property !== undefined ? opt_property : node.localName;\n        let array;\n        if (property in object) {\n          array = object[property];\n        } else {\n          array = object[property] = [];\n        }\n        array.push(value);\n      }\n    });\n}\n\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Node, Array.<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        const property = opt_property !== undefined ? opt_property : node.localName;\n        object[property] = value;\n      }\n    });\n}\n\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array.<*>)}\n *     nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {module:ol/xml~Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n  return function(node, value, objectStack) {\n    nodeWriter.call(opt_this !== undefined ? opt_this : this, node, value, objectStack);\n    const parent = /** @type {module:ol/xml~NodeStackItem} */ (objectStack[objectStack.length - 1]);\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Node, V, Array.<*>)}\n *     nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {module:ol/xml~Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n  let serializersNS, nodeFactory;\n  return function(node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string=} opt_nodeName Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string=} opt_namespaceURI Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array.<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n  const fixedNodeName = opt_nodeName;\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array.<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node} Node.\n     */\n    function(value, objectStack, opt_nodeName) {\n      const context = /** @type {module:ol/xml~NodeStackItem} */ (objectStack[objectStack.length - 1]);\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = opt_nodeName;\n      }\n\n      const namespaceURI = opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object.<string, V>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array.<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array.<V>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n * @template V\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array.<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object.<string, T>=} opt_structureNS Namespaced structure to add to.\n * @return {Object.<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n  /**\n   * @type {Object.<string, T>}\n   */\n  const structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object.<string, Object.<string, module:ol/xml~Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(opt_this, n, objectStack);\n      }\n    }\n  }\n}\n\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object.<string, Object.<string, module:ol/xml~Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, opt_this) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, opt_this);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object.<string, Object.<string, module:ol/xml~Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array.<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array.<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array.<*>} objectStack Node stack.\n * @param {Array.<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n  const length = (opt_keys !== undefined ? opt_keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(opt_this !== undefined ? opt_this : this, value, objectStack,\n        opt_keys !== undefined ? opt_keys[i] : undefined);\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName]\n          .call(opt_this, node, value, objectStack);\n      }\n    }\n  }\n}\n\n\n/**\n * @param {O} object Object.\n * @param {Object.<string, Object.<string, module:ol/xml~Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array.<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array.<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array.<*>} objectStack Node stack.\n * @param {Array.<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(object, serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, DOCUMENT} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, (bool) ? '1' : '0');\n}\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(DOCUMENT.createCDATASection(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      padNumber(date.getUTCDate(), 2) + 'T' +\n      padNumber(date.getUTCHours(), 2) + ':' +\n      padNumber(date.getUTCMinutes(), 2) + ':' +\n      padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport {inherits} from '../util.js';\nimport {cosh} from '../math.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport const EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n *\n * @constructor\n * @extends {module:ol/proj/Projection}\n * @param {string} code Code.\n */\nfunction EPSG3857Projection(code) {\n  Projection.call(this, {\n    code: code,\n    units: Units.METERS,\n    extent: EXTENT,\n    global: true,\n    worldExtent: WORLD_EXTENT,\n    getPointResolution: function(resolution, point) {\n      return resolution / cosh(point[1] / RADIUS);\n    }\n  });\n}\ninherits(EPSG3857Projection, Projection);\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array.<module:ol/proj/Projection>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array.<number>} input Input array of coordinate values.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array.<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  const halfSize = HALF_SIZE;\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    let y = RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array.<number>} input Input array of coordinate values.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array.<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport {inherits} from '../util.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n *\n * @constructor\n * @extends {module:ol/proj/Projection}\n * @param {string} code Code.\n * @param {string=} opt_axisOrientation Axis orientation.\n */\nfunction EPSG4326Projection(code, opt_axisOrientation) {\n  Projection.call(this, {\n    code: code,\n    units: Units.DEGREES,\n    extent: EXTENT,\n    axisOrientation: opt_axisOrientation,\n    global: true,\n    metersPerUnit: METERS_PER_UNIT,\n    worldExtent: EXTENT\n  });\n}\ninherits(EPSG4326Projection, Projection);\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array.<module:ol/proj/Projection>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object.<string, module:ol/proj/Projection>}\n */\nlet cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {module:ol/proj/Projection} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {module:ol/proj/Projection} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the {@link http://proj4js.org/}\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * {@link https://epsg.io/}, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {module:ol/proj/Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array.<number>, Array.<number>=, number=): Array.<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\n\n/**\n * @param {Array.<number>} input Input coordinate array.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array.<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array.<number>} input Input coordinate array.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array.<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {module:ol/proj/Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array.<module:ol/proj/Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {module:ol/proj~ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {module:ol/proj/Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  let projection = null;\n  if (projectionLike instanceof Projection) {\n    projection = projectionLike;\n  } else if (typeof projectionLike === 'string') {\n    const code = projectionLike;\n    projection = projections.get(code);\n  }\n  return projection;\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {module:ol/proj~ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {module:ol/coordinate~Coordinate} point Point to find adjusted resolution at.\n * @param {module:ol/proj/Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    const units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      let vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      const metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array.<module:ol/proj/Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array.<module:ol/proj/Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array.<module:ol/proj/Projection>} projections2 Projections with equal\n *     meaning.\n * @param {module:ol/proj~TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {module:ol/proj~TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {module:ol/proj/Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {module:ol/proj/Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {module:ol/proj/Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} coordTransform Coordinate\n *     transform.\n * @return {module:ol/proj~TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array.<number>} input Input.\n     * @param {Array.<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array.<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {module:ol/proj~ProjectionLike} source Source projection.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {module:ol/proj~ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {module:ol/coordinate~Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {module:ol/coordinate~Coordinate} coordinate Projected coordinate.\n * @param {module:ol/proj~ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {module:ol/coordinate~Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {module:ol/proj/Projection} projection1 Projection 1.\n * @param {module:ol/proj/Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {module:ol/proj/Projection} sourceProjection Source Projection object.\n * @param {module:ol/proj/Projection} destinationProjection Destination Projection\n *     object.\n * @return {module:ol/proj~TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {module:ol/proj~ProjectionLike} source Source.\n * @param {module:ol/proj~ProjectionLike} destination Destination.\n * @return {module:ol/proj~TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/proj~ProjectionLike} source Source projection-like.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection-like.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {module:ol/extent~Extent} extent The extent to transform.\n * @param {module:ol/proj~ProjectionLike} source Source projection-like.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection-like.\n * @return {module:ol/extent~Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {module:ol/coordinate~Coordinate} point Point.\n * @param {module:ol/proj/Projection} sourceProjection Source projection.\n * @param {module:ol/proj/Projection} destinationProjection Destination projection.\n * @return {module:ol/coordinate~Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  const transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {module:ol/events~ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {module:ol/events~ListenerFunction} listener\n * @property {EventTarget|module:ol/events/EventTarget} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function(module:ol/events/Event)|function(module:ol/events/Event): boolean} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {module:ol/events~EventsKey} listenerObj Listener object.\n * @return {module:ol/events~ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  const boundListener = function(evt) {\n    const listener = listenerObj.listener;\n    const bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!module:ol/events~EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {module:ol/events~EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  let listenerObj;\n  for (let i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array.<module:ol/events~EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  const listenerMap = target.ol_lm;\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.  If one does not exist on the target, it is\n * created.\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @return {!Object.<string, Array.<module:ol/events~EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target) {\n  let listenerMap = target.ol_lm;\n  if (!listenerMap) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  const listeners = getListeners(target, type);\n  if (listeners) {\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      target.removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    const listenerMap = target.ol_lm;\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        delete target.ol_lm;\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {module:ol/events~EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  const listenerMap = getListenerMap(target);\n  let listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  let listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {module:ol/events~EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    target.addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {module:ol/events~EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  const listeners = getListeners(target, type);\n  if (listeners) {\n    const listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {module:ol/events~EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.boundListener);\n    const listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      const i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  const listenerMap = getListenerMap(target);\n  for (const type in listenerMap) {\n    removeListeners(target, type);\n  }\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n","/**\n * @module ol/webgl\n */\n\n\n/**\n * Constants taken from goog.webgl\n */\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ONE = 1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const SRC_ALPHA = 0x0302;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const COLOR_ATTACHMENT0 = 0x8CE0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const COLOR_BUFFER_BIT = 0x00004000;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TRIANGLES = 0x0004;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TRIANGLE_STRIP = 0x0005;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ONE_MINUS_SRC_ALPHA = 0x0303;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const STREAM_DRAW = 0x88E0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const STATIC_DRAW = 0x88E4;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DYNAMIC_DRAW = 0x88E8;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const CULL_FACE = 0x0B44;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const BLEND = 0x0BE2;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const STENCIL_TEST = 0x0B90;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEPTH_TEST = 0x0B71;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const SCISSOR_TEST = 0x0C11;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const RGBA = 0x1908;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const FRAGMENT_SHADER = 0x8B30;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const VERTEX_SHADER = 0x8B31;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const LINK_STATUS = 0x8B82;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const LINEAR = 0x2601;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_MAG_FILTER = 0x2800;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_MIN_FILTER = 0x2801;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_WRAP_S = 0x2802;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_WRAP_T = 0x2803;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_2D = 0x0DE1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE0 = 0x84C0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const CLAMP_TO_EDGE = 0x812F;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const COMPILE_STATUS = 0x8B81;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const FRAMEBUFFER = 0x8D40;\n\n\n/** end of goog.webgl constants\n */\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst CONTEXT_IDS = [\n  'experimental-webgl',\n  'webgl',\n  'webkit-3d',\n  'moz-webgl'\n];\n\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n\n/**\n * Include debuggable shader sources.  Default is `true`. This should be set to\n * `false` for production builds.\n * @type {boolean}\n */\nexport const DEBUG = true;\n\n\n/**\n * The maximum supported WebGL texture size in pixels. If WebGL is not\n * supported, the value is set to `undefined`.\n * @type {number|undefined}\n */\nlet MAX_TEXTURE_SIZE; // value is set below\n\n\n/**\n * List of supported WebGL extensions.\n * @type {Array.<string>}\n */\nlet EXTENSIONS; // value is set below\n\n\n/**\n * True if both OpenLayers and browser support WebGL.\n * @const ol/has.WEBGL\n * @type {boolean}\n * @api\n */\nlet HAS = false;\n\n//TODO Remove side effects\nif (typeof window !== 'undefined' && 'WebGLRenderingContext' in window) {\n  try {\n    const canvas = /** @type {HTMLCanvasElement} */ (document.createElement('CANVAS'));\n    const gl = getContext(canvas, {failIfMajorPerformanceCaveat: true});\n    if (gl) {\n      HAS = true;\n      MAX_TEXTURE_SIZE = /** @type {number} */ (gl.getParameter(gl.MAX_TEXTURE_SIZE));\n      EXTENSIONS = gl.getSupportedExtensions();\n    }\n  } catch (e) {\n    // pass\n  }\n}\n\nexport {HAS, MAX_TEXTURE_SIZE, EXTENSIONS};\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n","/**\n * @module ol/source/Vector\n */\n\nimport {getUid, inherits} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, UNDEFINED} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty, getValues} from '../obj.js';\nimport Source from '../source/Source.js';\nimport SourceState from '../source/State.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(module:ol/extent~Extent, number): Array.<module:ol/extent~Extent>} LoadingStrategy\n * @api\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type Type.\n * @param {module:ol/Feature=} opt_feature Feature.\n */\nexport const VectorSourceEvent = function(type, opt_feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being added or removed.\n   * @type {module:ol/Feature|undefined}\n   * @api\n   */\n  this.feature = opt_feature;\n\n};\ninherits(VectorSourceEvent, Event);\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {Array.<module:ol/Feature>|module:ol/Collection.<module:ol/Feature>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {module:ol/format/Feature} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {module:ol/featureloader~FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {module:ol/source/Vector~LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|module:ol/featureloader~FeatureUrlfunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlfunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @constructor\n * @extends {module:ol/source/Source}\n * @fires ol/source/Vector~VectorSourceEvent\n * @param {module:ol/source/Vector~Options=} opt_options Vector source options.\n * @api\n */\nconst VectorSource = function(opt_options) {\n\n  const options = opt_options || {};\n\n  Source.call(this, {\n    attributions: options.attributions,\n    projection: undefined,\n    state: SourceState.READY,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true\n  });\n\n  /**\n   * @private\n   * @type {module:ol/featureloader~FeatureLoader}\n   */\n  this.loader_ = UNDEFINED;\n\n  /**\n   * @private\n   * @type {module:ol/format/Feature|undefined}\n   */\n  this.format_ = options.format;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n  /**\n   * @private\n   * @type {string|module:ol/featureloader~FeatureUrlFunction|undefined}\n   */\n  this.url_ = options.url;\n\n  if (options.loader !== undefined) {\n    this.loader_ = options.loader;\n  } else if (this.url_ !== undefined) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    // create a XHR feature loader for \"url\" and \"format\"\n    this.loader_ = xhr(this.url_, /** @type {module:ol/format/Feature} */ (this.format_));\n  }\n\n  /**\n   * @private\n   * @type {module:ol/source/Vector~LoadingStrategy}\n   */\n  this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n\n  const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n  /**\n   * @private\n   * @type {module:ol/structs/RBush.<module:ol/Feature>}\n   */\n  this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n  /**\n   * @private\n   * @type {module:ol/structs/RBush.<{extent: module:ol/extent~Extent}>}\n   */\n  this.loadedExtentsRtree_ = new RBush();\n\n  /**\n   * @private\n   * @type {!Object.<string, module:ol/Feature>}\n   */\n  this.nullGeometryFeatures_ = {};\n\n  /**\n   * A lookup of features by id (the return from feature.getId()).\n   * @private\n   * @type {!Object.<string, module:ol/Feature>}\n   */\n  this.idIndex_ = {};\n\n  /**\n   * A lookup of features without id (keyed by getUid(feature)).\n   * @private\n   * @type {!Object.<string, module:ol/Feature>}\n   */\n  this.undefIdIndex_ = {};\n\n  /**\n   * @private\n   * @type {Object.<string, Array.<module:ol/events~EventsKey>>}\n   */\n  this.featureChangeKeys_ = {};\n\n  /**\n   * @private\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   */\n  this.featuresCollection_ = null;\n\n  let collection, features;\n  if (options.features instanceof Collection) {\n    collection = options.features;\n    features = collection.getArray();\n  } else if (Array.isArray(options.features)) {\n    features = options.features;\n  }\n  if (!useSpatialIndex && collection === undefined) {\n    collection = new Collection(features);\n  }\n  if (features !== undefined) {\n    this.addFeaturesInternal(features);\n  }\n  if (collection !== undefined) {\n    this.bindFeaturesCollection_(collection);\n  }\n\n};\n\ninherits(VectorSource, Source);\n\n\n/**\n * Add a single feature to the source.  If you want to add a batch of features\n * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n * instead. A feature will not be added to the source if feature with\n * the same id is already there. The reason for this behavior is to avoid\n * feature duplication when using bbox or tile loading strategies.\n * @param {module:ol/Feature} feature Feature to add.\n * @api\n */\nVectorSource.prototype.addFeature = function(feature) {\n  this.addFeatureInternal(feature);\n  this.changed();\n};\n\n\n/**\n * Add a feature without firing a `change` event.\n * @param {module:ol/Feature} feature Feature.\n * @protected\n */\nVectorSource.prototype.addFeatureInternal = function(feature) {\n  const featureKey = getUid(feature).toString();\n\n  if (!this.addToIndex_(featureKey, feature)) {\n    return;\n  }\n\n  this.setupChangeEvents_(featureKey, feature);\n\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const extent = geometry.getExtent();\n    if (this.featuresRtree_) {\n      this.featuresRtree_.insert(extent, feature);\n    }\n  } else {\n    this.nullGeometryFeatures_[featureKey] = feature;\n  }\n\n  this.dispatchEvent(\n    new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n};\n\n\n/**\n * @param {string} featureKey Unique identifier for the feature.\n * @param {module:ol/Feature} feature The feature.\n * @private\n */\nVectorSource.prototype.setupChangeEvents_ = function(featureKey, feature) {\n  this.featureChangeKeys_[featureKey] = [\n    listen(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this),\n    listen(feature, ObjectEventType.PROPERTYCHANGE,\n      this.handleFeatureChange_, this)\n  ];\n};\n\n\n/**\n * @param {string} featureKey Unique identifier for the feature.\n * @param {module:ol/Feature} feature The feature.\n * @return {boolean} The feature is \"valid\", in the sense that it is also a\n *     candidate for insertion into the Rtree.\n * @private\n */\nVectorSource.prototype.addToIndex_ = function(featureKey, feature) {\n  let valid = true;\n  const id = feature.getId();\n  if (id !== undefined) {\n    if (!(id.toString() in this.idIndex_)) {\n      this.idIndex_[id.toString()] = feature;\n    } else {\n      valid = false;\n    }\n  } else {\n    assert(!(featureKey in this.undefIdIndex_),\n      30); // The passed `feature` was already added to the source\n    this.undefIdIndex_[featureKey] = feature;\n  }\n  return valid;\n};\n\n\n/**\n * Add a batch of features to the source.\n * @param {Array.<module:ol/Feature>} features Features to add.\n * @api\n */\nVectorSource.prototype.addFeatures = function(features) {\n  this.addFeaturesInternal(features);\n  this.changed();\n};\n\n\n/**\n * Add features without firing a `change` event.\n * @param {Array.<module:ol/Feature>} features Features.\n * @protected\n */\nVectorSource.prototype.addFeaturesInternal = function(features) {\n  const extents = [];\n  const newFeatures = [];\n  const geometryFeatures = [];\n\n  for (let i = 0, length = features.length; i < length; i++) {\n    const feature = features[i];\n    const featureKey = getUid(feature).toString();\n    if (this.addToIndex_(featureKey, feature)) {\n      newFeatures.push(feature);\n    }\n  }\n\n  for (let i = 0, length = newFeatures.length; i < length; i++) {\n    const feature = newFeatures[i];\n    const featureKey = getUid(feature).toString();\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      extents.push(extent);\n      geometryFeatures.push(feature);\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n  }\n  if (this.featuresRtree_) {\n    this.featuresRtree_.load(extents, geometryFeatures);\n  }\n\n  for (let i = 0, length = newFeatures.length; i < length; i++) {\n    this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n  }\n};\n\n\n/**\n * @param {!module:ol/Collection.<module:ol/Feature>} collection Collection.\n * @private\n */\nVectorSource.prototype.bindFeaturesCollection_ = function(collection) {\n  let modifyingCollection = false;\n  listen(this, VectorEventType.ADDFEATURE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        collection.push(evt.feature);\n        modifyingCollection = false;\n      }\n    });\n  listen(this, VectorEventType.REMOVEFEATURE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        collection.remove(evt.feature);\n        modifyingCollection = false;\n      }\n    });\n  listen(collection, CollectionEventType.ADD,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        this.addFeature(/** @type {module:ol/Feature} */ (evt.element));\n        modifyingCollection = false;\n      }\n    }, this);\n  listen(collection, CollectionEventType.REMOVE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        this.removeFeature(/** @type {module:ol/Feature} */ (evt.element));\n        modifyingCollection = false;\n      }\n    }, this);\n  this.featuresCollection_ = collection;\n};\n\n\n/**\n * Remove all features from the source.\n * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector~VectorSourceEvent#removefeature} events.\n * @api\n */\nVectorSource.prototype.clear = function(opt_fast) {\n  if (opt_fast) {\n    for (const featureId in this.featureChangeKeys_) {\n      const keys = this.featureChangeKeys_[featureId];\n      keys.forEach(unlistenByKey);\n    }\n    if (!this.featuresCollection_) {\n      this.featureChangeKeys_ = {};\n      this.idIndex_ = {};\n      this.undefIdIndex_ = {};\n    }\n  } else {\n    if (this.featuresRtree_) {\n      this.featuresRtree_.forEach(this.removeFeatureInternal, this);\n      for (const id in this.nullGeometryFeatures_) {\n        this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n      }\n    }\n  }\n  if (this.featuresCollection_) {\n    this.featuresCollection_.clear();\n  }\n\n  if (this.featuresRtree_) {\n    this.featuresRtree_.clear();\n  }\n  this.loadedExtentsRtree_.clear();\n  this.nullGeometryFeatures_ = {};\n\n  const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n  this.dispatchEvent(clearEvent);\n  this.changed();\n};\n\n\n/**\n * Iterate through all features on the source, calling the provided callback\n * with each one.  If the callback returns any \"truthy\" value, iteration will\n * stop and the function will return the same value.\n * Note: this function only iterate through the feature that have a defined geometry.\n *\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     on the source.  Return a truthy value to stop iteration.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeature = function(callback) {\n  if (this.featuresRtree_) {\n    return this.featuresRtree_.forEach(callback);\n  } else if (this.featuresCollection_) {\n    return this.featuresCollection_.forEach(callback);\n  }\n};\n\n\n/**\n * Iterate through all features whose geometries contain the provided\n * coordinate, calling the callback with each feature.  If the callback returns\n * a \"truthy\" value, iteration will stop and the function will return the same\n * value.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose goemetry contains the provided coordinate.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n */\nVectorSource.prototype.forEachFeatureAtCoordinateDirect = function(coordinate, callback) {\n  const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n  return this.forEachFeatureInExtent(extent, function(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry.intersectsCoordinate(coordinate)) {\n      return callback(feature);\n    } else {\n      return undefined;\n    }\n  });\n};\n\n\n/**\n * Iterate through all features whose bounding box intersects the provided\n * extent (note that the feature's geometry may not intersect the extent),\n * calling the callback with each feature.  If the callback returns a \"truthy\"\n * value, iteration will stop and the function will return the same value.\n *\n * If you are interested in features whose geometry intersects an extent, call\n * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n *\n * When `useSpatialIndex` is set to false, this method will loop through all\n * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose bounding box intersects the provided extent.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeatureInExtent = function(extent, callback) {\n  if (this.featuresRtree_) {\n    return this.featuresRtree_.forEachInExtent(extent, callback);\n  } else if (this.featuresCollection_) {\n    return this.featuresCollection_.forEach(callback);\n  }\n};\n\n\n/**\n * Iterate through all features whose geometry intersects the provided extent,\n * calling the callback with each feature.  If the callback returns a \"truthy\"\n * value, iteration will stop and the function will return the same value.\n *\n * If you only want to test for bounding box intersection, call the\n * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose geometry intersects the provided extent.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeatureIntersectingExtent = function(extent, callback) {\n  return this.forEachFeatureInExtent(extent,\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    function(feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsExtent(extent)) {\n        const result = callback(feature);\n        if (result) {\n          return result;\n        }\n      }\n    });\n};\n\n\n/**\n * Get the features collection associated with this source. Will be `null`\n * unless the source was configured with `useSpatialIndex` set to `false`, or\n * with an {@link module:ol/Collection} as `features`.\n * @return {module:ol/Collection.<module:ol/Feature>} The collection of features.\n * @api\n */\nVectorSource.prototype.getFeaturesCollection = function() {\n  return this.featuresCollection_;\n};\n\n\n/**\n * Get all features on the source in random order.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeatures = function() {\n  let features;\n  if (this.featuresCollection_) {\n    features = this.featuresCollection_.getArray();\n  } else if (this.featuresRtree_) {\n    features = this.featuresRtree_.getAll();\n    if (!isEmpty(this.nullGeometryFeatures_)) {\n      extend(features, getValues(this.nullGeometryFeatures_));\n    }\n  }\n  return (\n    /** @type {Array.<module:ol/Feature>} */ (features)\n  );\n};\n\n\n/**\n * Get all features whose geometry intersects the provided coordinate.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeaturesAtCoordinate = function(coordinate) {\n  const features = [];\n  this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n    features.push(feature);\n  });\n  return features;\n};\n\n\n/**\n * Get all features in the provided extent.  Note that this returns an array of\n * all features intersecting the given extent in random order (so it may include\n * features whose geometries do not intersect the extent).\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeaturesInExtent = function(extent) {\n  return this.featuresRtree_.getInExtent(extent);\n};\n\n\n/**\n * Get the closest feature to the provided coordinate.\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {function(module:ol/Feature):boolean=} opt_filter Feature filter function.\n *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n *     and it should return a boolean value. By default, no filtering is made.\n * @return {module:ol/Feature} Closest feature.\n * @api\n */\nVectorSource.prototype.getClosestFeatureToCoordinate = function(coordinate, opt_filter) {\n  // Find the closest feature using branch and bound.  We start searching an\n  // infinite extent, and find the distance from the first feature found.  This\n  // becomes the closest feature.  We then compute a smaller extent which any\n  // closer feature must intersect.  We continue searching with this smaller\n  // extent, trying to find a closer feature.  Every time we find a closer\n  // feature, we update the extent being searched so that any even closer\n  // feature must intersect it.  We continue until we run out of features.\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let closestFeature = null;\n  const closestPoint = [NaN, NaN];\n  let minSquaredDistance = Infinity;\n  const extent = [-Infinity, -Infinity, Infinity, Infinity];\n  const filter = opt_filter ? opt_filter : TRUE;\n  this.featuresRtree_.forEachInExtent(extent,\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     */\n    function(feature) {\n      if (filter(feature)) {\n        const geometry = feature.getGeometry();\n        const previousMinSquaredDistance = minSquaredDistance;\n        minSquaredDistance = geometry.closestPointXY(\n          x, y, closestPoint, minSquaredDistance);\n        if (minSquaredDistance < previousMinSquaredDistance) {\n          closestFeature = feature;\n          // This is sneaky.  Reduce the extent that it is currently being\n          // searched while the R-Tree traversal using this same extent object\n          // is still in progress.  This is safe because the new extent is\n          // strictly contained by the old extent.\n          const minDistance = Math.sqrt(minSquaredDistance);\n          extent[0] = x - minDistance;\n          extent[1] = y - minDistance;\n          extent[2] = x + minDistance;\n          extent[3] = y + minDistance;\n        }\n      }\n    });\n  return closestFeature;\n};\n\n\n/**\n * Get the extent of the features currently in the source.\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent. If provided, no new extent\n *     will be created. Instead, that extent's coordinates will be overwritten.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nVectorSource.prototype.getExtent = function(opt_extent) {\n  return this.featuresRtree_.getExtent(opt_extent);\n};\n\n\n/**\n * Get a feature by its identifier (the value returned by feature.getId()).\n * Note that the index treats string and numeric identifiers as the same.  So\n * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n *\n * @param {string|number} id Feature identifier.\n * @return {module:ol/Feature} The feature (or `null` if not found).\n * @api\n */\nVectorSource.prototype.getFeatureById = function(id) {\n  const feature = this.idIndex_[id.toString()];\n  return feature !== undefined ? feature : null;\n};\n\n\n/**\n * Get the format associated with this source.\n *\n * @return {module:ol/format/Feature|undefined} The feature format.\n * @api\n */\nVectorSource.prototype.getFormat = function() {\n  return this.format_;\n};\n\n\n/**\n * @return {boolean} The source can have overlapping geometries.\n */\nVectorSource.prototype.getOverlaps = function() {\n  return this.overlaps_;\n};\n\n\n/**\n * @override\n */\nVectorSource.prototype.getResolutions = function() {};\n\n\n/**\n * Get the url associated with this source.\n *\n * @return {string|module:ol/featureloader~FeatureUrlFunction|undefined} The url.\n * @api\n */\nVectorSource.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n * @private\n */\nVectorSource.prototype.handleFeatureChange_ = function(event) {\n  const feature = /** @type {module:ol/Feature} */ (event.target);\n  const featureKey = getUid(feature).toString();\n  const geometry = feature.getGeometry();\n  if (!geometry) {\n    if (!(featureKey in this.nullGeometryFeatures_)) {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n  } else {\n    const extent = geometry.getExtent();\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.update(extent, feature);\n      }\n    }\n  }\n  const id = feature.getId();\n  if (id !== undefined) {\n    const sid = id.toString();\n    if (featureKey in this.undefIdIndex_) {\n      delete this.undefIdIndex_[featureKey];\n      this.idIndex_[sid] = feature;\n    } else {\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    }\n  } else {\n    if (!(featureKey in this.undefIdIndex_)) {\n      this.removeFromIdIndex_(feature);\n      this.undefIdIndex_[featureKey] = feature;\n    }\n  }\n  this.changed();\n  this.dispatchEvent(new VectorSourceEvent(\n    VectorEventType.CHANGEFEATURE, feature));\n};\n\n/**\n * Returns true if the feature is contained within the source.\n * @param {module:ol/Feature} feature Feature.\n * @return {boolean} Has feature.\n * @api\n */\nVectorSource.prototype.hasFeature = function(feature) {\n  const id = feature.getId();\n  if (id !== undefined) {\n    return id in this.idIndex_;\n  } else {\n    const featureKey = getUid(feature).toString();\n    return featureKey in this.undefIdIndex_;\n  }\n};\n\n/**\n * @return {boolean} Is empty.\n */\nVectorSource.prototype.isEmpty = function() {\n  return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n};\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {module:ol/proj/Projection} projection Projection.\n */\nVectorSource.prototype.loadFeatures = function(extent, resolution, projection) {\n  const loadedExtentsRtree = this.loadedExtentsRtree_;\n  const extentsToLoad = this.strategy_(extent, resolution);\n  for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n    const extentToLoad = extentsToLoad[i];\n    const alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n      /**\n       * @param {{extent: module:ol/extent~Extent}} object Object.\n       * @return {boolean} Contains.\n       */\n      function(object) {\n        return containsExtent(object.extent, extentToLoad);\n      });\n    if (!alreadyLoaded) {\n      this.loader_.call(this, extentToLoad, resolution, projection);\n      loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n    }\n  }\n};\n\n\n/**\n * Remove an extent from the list of loaded extents.\n * @param {module:ol/extent~Extent} extent Extent.\n * @api\n */\nVectorSource.prototype.removeLoadedExtent = function(extent) {\n  const loadedExtentsRtree = this.loadedExtentsRtree_;\n  let obj;\n  loadedExtentsRtree.forEachInExtent(extent, function(object) {\n    if (equals(object.extent, extent)) {\n      obj = object;\n      return true;\n    }\n  });\n  if (obj) {\n    loadedExtentsRtree.remove(obj);\n  }\n};\n\n\n/**\n * Remove a single feature from the source.  If you want to remove all features\n * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n * instead.\n * @param {module:ol/Feature} feature Feature to remove.\n * @api\n */\nVectorSource.prototype.removeFeature = function(feature) {\n  const featureKey = getUid(feature).toString();\n  if (featureKey in this.nullGeometryFeatures_) {\n    delete this.nullGeometryFeatures_[featureKey];\n  } else {\n    if (this.featuresRtree_) {\n      this.featuresRtree_.remove(feature);\n    }\n  }\n  this.removeFeatureInternal(feature);\n  this.changed();\n};\n\n\n/**\n * Remove feature without firing a `change` event.\n * @param {module:ol/Feature} feature Feature.\n * @protected\n */\nVectorSource.prototype.removeFeatureInternal = function(feature) {\n  const featureKey = getUid(feature).toString();\n  this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n  delete this.featureChangeKeys_[featureKey];\n  const id = feature.getId();\n  if (id !== undefined) {\n    delete this.idIndex_[id.toString()];\n  } else {\n    delete this.undefIdIndex_[featureKey];\n  }\n  this.dispatchEvent(new VectorSourceEvent(\n    VectorEventType.REMOVEFEATURE, feature));\n};\n\n\n/**\n * Remove a feature from the id index.  Called internally when the feature id\n * may have changed.\n * @param {module:ol/Feature} feature The feature.\n * @return {boolean} Removed the feature from the index.\n * @private\n */\nVectorSource.prototype.removeFromIdIndex_ = function(feature) {\n  let removed = false;\n  for (const id in this.idIndex_) {\n    if (this.idIndex_[id] === feature) {\n      delete this.idIndex_[id];\n      removed = true;\n      break;\n    }\n  }\n  return removed;\n};\n\n\n/**\n * Set the new loader of the source. The next loadFeatures call will use the\n * new loader.\n * @param {module:ol/featureloader~FeatureLoader} loader The loader to set.\n * @api\n */\nVectorSource.prototype.setLoader = function(loader) {\n  this.loader_ = loader;\n};\n\nexport default VectorSource;\n","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n *\n * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  const output = Object(target);\n  for (let i = 1, ii = arguments.length; i < ii; ++i) {\n    const source = arguments[i];\n    if (source !== undefined && source !== null) {\n      for (const key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  const values = [];\n  for (const property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array.<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low  = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array.<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array.<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array.<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to modify.\n * @param {!Array.<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<*>} arr The array to sort (modifies original).\n * @param {Function} compareFnc Comparison function.\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array.<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array.<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array.<number>} Transform\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {module:ol/transform~Transform}\n */\nconst tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!module:ol/transform~Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @return {!module:ol/transform~Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!module:ol/transform~Transform} transform1 Transform parameters of matrix 1.\n * @param {!module:ol/transform~Transform} transform2 Transform parameters of matrix 2.\n * @return {!module:ol/transform~Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!module:ol/transform~Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!module:ol/transform~Transform} transform1 Matrix to set transform to.\n * @param {!module:ol/transform~Transform} transform2 Matrix to set transform from.\n * @return {!module:ol/transform~Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {module:ol/transform~Transform} transform The transformation.\n * @param {module:ol/coordinate~Coordinate|module:ol~Pixel} coordinate The coordinate to transform.\n * @return {module:ol/coordinate~Coordinate|module:ol~Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!module:ol/transform~Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!module:ol/transform~Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n\n/**\n * Applies translation to the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!module:ol/transform~Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!module:ol/transform~Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!module:ol/transform~Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n\n/**\n * Invert the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @return {!module:ol/transform~Transform} Inverse of the transform.\n */\nexport function invert(transform) {\n  const det = determinant(transform);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = transform[0];\n  const b = transform[1];\n  const c = transform[2];\n  const d = transform[3];\n  const e = transform[4];\n  const f = transform[5];\n\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n\n  return transform;\n}\n\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!module:ol/transform~Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh  = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      const y = Math.exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array.<Array.<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array.<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n","/**\n * @module ol/Feature\n */\nimport {assert} from './asserts.js';\nimport {listen, unlisten, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport {inherits} from './util.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport Geometry from './geom/Geometry.js';\nimport Style from './style/Style.js';\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/geom/Geometry|Object.<string, *>=} opt_geometryOrProperties\n * You may pass a Geometry object directly, or an object literal containing\n * properties. If you pass an object literal, you may include a Geometry\n * associated with a `geometry` key.\n * @api\n */\nconst Feature = function(opt_geometryOrProperties) {\n\n  BaseObject.call(this);\n\n  /**\n   * @private\n   * @type {number|string|undefined}\n   */\n  this.id_ = undefined;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.geometryName_ = 'geometry';\n\n  /**\n   * User provided style.\n   * @private\n   * @type {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n   */\n  this.style_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Style~StyleFunction|undefined}\n   */\n  this.styleFunction_ = undefined;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.geometryChangeKey_ = null;\n\n  listen(\n    this, getChangeEventType(this.geometryName_),\n    this.handleGeometryChanged_, this);\n\n  if (opt_geometryOrProperties !== undefined) {\n    if (opt_geometryOrProperties instanceof Geometry ||\n        !opt_geometryOrProperties) {\n      const geometry = opt_geometryOrProperties;\n      this.setGeometry(geometry);\n    } else {\n      /** @type {Object.<string, *>} */\n      const properties = opt_geometryOrProperties;\n      this.setProperties(properties);\n    }\n  }\n};\n\ninherits(Feature, BaseObject);\n\n\n/**\n * Clone this feature. If the original feature has a geometry it\n * is also cloned. The feature id is not set in the clone.\n * @return {module:ol/Feature} The clone.\n * @api\n */\nFeature.prototype.clone = function() {\n  const clone = new Feature(this.getProperties());\n  clone.setGeometryName(this.getGeometryName());\n  const geometry = this.getGeometry();\n  if (geometry) {\n    clone.setGeometry(geometry.clone());\n  }\n  const style = this.getStyle();\n  if (style) {\n    clone.setStyle(style);\n  }\n  return clone;\n};\n\n\n/**\n * Get the feature's default geometry.  A feature may have any number of named\n * geometries.  The \"default\" geometry (the one that is rendered by default) is\n * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n * @return {module:ol/geom/Geometry|undefined} The default geometry for the feature.\n * @api\n * @observable\n */\nFeature.prototype.getGeometry = function() {\n  return (\n    /** @type {module:ol/geom/Geometry|undefined} */ (this.get(this.geometryName_))\n  );\n};\n\n\n/**\n * Get the feature identifier.  This is a stable identifier for the feature and\n * is either set when reading data from a remote source or set explicitly by\n * calling {@link module:ol/Feature~Feature#setId}.\n * @return {number|string|undefined} Id.\n * @api\n */\nFeature.prototype.getId = function() {\n  return this.id_;\n};\n\n\n/**\n * Get the name of the feature's default geometry.  By default, the default\n * geometry is named `geometry`.\n * @return {string} Get the property name associated with the default geometry\n *     for this feature.\n * @api\n */\nFeature.prototype.getGeometryName = function() {\n  return this.geometryName_;\n};\n\n\n/**\n * Get the feature's style. Will return what was provided to the\n * {@link module:ol/Feature~Feature#setStyle} method.\n * @return {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} The feature style.\n * @api\n */\nFeature.prototype.getStyle = function() {\n  return this.style_;\n};\n\n\n/**\n * Get the feature's style function.\n * @return {module:ol/style/Style~StyleFunction|undefined} Return a function\n * representing the current style of this feature.\n * @api\n */\nFeature.prototype.getStyleFunction = function() {\n  return this.styleFunction_;\n};\n\n\n/**\n * @private\n */\nFeature.prototype.handleGeometryChange_ = function() {\n  this.changed();\n};\n\n\n/**\n * @private\n */\nFeature.prototype.handleGeometryChanged_ = function() {\n  if (this.geometryChangeKey_) {\n    unlistenByKey(this.geometryChangeKey_);\n    this.geometryChangeKey_ = null;\n  }\n  const geometry = this.getGeometry();\n  if (geometry) {\n    this.geometryChangeKey_ = listen(geometry,\n      EventType.CHANGE, this.handleGeometryChange_, this);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the default geometry for the feature.  This will update the property\n * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n * @param {module:ol/geom/Geometry|undefined} geometry The new geometry.\n * @api\n * @observable\n */\nFeature.prototype.setGeometry = function(geometry) {\n  this.set(this.geometryName_, geometry);\n};\n\n\n/**\n * Set the style for the feature.  This can be a single style object, an array\n * of styles, or a function that takes a resolution and returns an array of\n * styles. If it is `null` the feature has no style (a `null` style).\n * @param {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} style Style for this feature.\n * @api\n * @fires module:ol/events/Event~Event#event:change\n */\nFeature.prototype.setStyle = function(style) {\n  this.style_ = style;\n  this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n  this.changed();\n};\n\n\n/**\n * Set the feature id.  The feature id is considered stable and may be used when\n * requesting features or comparing identifiers returned from a remote source.\n * The feature id can be used with the\n * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n * @param {number|string|undefined} id The feature id.\n * @api\n * @fires module:ol/events/Event~Event#event:change\n */\nFeature.prototype.setId = function(id) {\n  this.id_ = id;\n  this.changed();\n};\n\n\n/**\n * Set the property name to be used when getting the feature's default geometry.\n * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n * this name will be returned.\n * @param {string} name The property name of the default geometry.\n * @api\n */\nFeature.prototype.setGeometryName = function(name) {\n  unlisten(\n    this, getChangeEventType(this.geometryName_),\n    this.handleGeometryChanged_, this);\n  this.geometryName_ = name;\n  listen(\n    this, getChangeEventType(this.geometryName_),\n    this.handleGeometryChanged_, this);\n  this.handleGeometryChanged_();\n};\n\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of module:ol/style/Style or single style objects wrapped\n * in a new feature style function.\n * @param {module:ol/style/Style~StyleFunction|!Array.<module:ol/style/Style>|!module:ol/style/Style} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {module:ol/style/Style~StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array.<module:ol/style/Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(obj instanceof Style,\n        41); // Expected an `module:ol/style/Style~Style` or an array of `module:ol/style/Style~Style`\n      styles = [obj];\n    }\n    return function() {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {module:ol/colorlike~ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {module:ol/colorlike~ColorLike} [currentFillStyle]\n * @property {module:ol/colorlike~ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array.<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {module:ol/colorlike~ColorLike} [fillStyle]\n * @property {module:ol/colorlike~ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array.<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array.<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {module:ol/colorlike~ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array.<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport const defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nexport const defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport const defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {module:ol/structs/LRUCache.<HTMLCanvasElement>}\n * @api\n */\nexport const labelCache = new LRUCache();\n\n\n/**\n * @type {!Object.<string, number>}\n */\nexport const checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n\n/**\n * @type {!Object.<string, number>}\n */\nexport const textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const checkFont = (function() {\n  const retries = 60;\n  const checked = checkedFonts;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  function isAvailable(font) {\n    const context = getMeasureContext();\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      context.font = size + referenceFont;\n      referenceWidth = context.measureText(text).width;\n      if (font != referenceFont) {\n        context.font = size + font + ',' + referenceFont;\n        const width = context.measureText(text).width;\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    return available;\n  }\n\n  function check() {\n    let done = true;\n    for (const font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    const fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (let i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      const fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {module:ol/size~Size} Measurement.\n */\nexport const measureTextHeight = (function() {\n  let span;\n  const heights = textHeights;\n  return function(font) {\n    let height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  const measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport const resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  let alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {undefined} Nothing.\n */\nexport function UNDEFINED() {}\n","/**\n * @module ol/geom/Point\n */\nimport {inherits} from '../util.js';\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinate} from '../geom/flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {module:ol/coordinate~Coordinate} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Point = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(Point, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/Point} Clone.\n * @override\n * @api\n */\nPoint.prototype.clone = function() {\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return point;\n};\n\n\n/**\n * @inheritDoc\n */\nPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  const flatCoordinates = this.flatCoordinates;\n  const squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n  if (squaredDistance < minSquaredDistance) {\n    const stride = this.stride;\n    for (let i = 0; i < stride; ++i) {\n      closestPoint[i] = flatCoordinates[i];\n    }\n    closestPoint.length = stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * Return the coordinate of the point.\n * @return {module:ol/coordinate~Coordinate} Coordinates.\n * @override\n * @api\n */\nPoint.prototype.getCoordinates = function() {\n  return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n};\n\n\n/**\n * @inheritDoc\n */\nPoint.prototype.computeExtent = function(extent) {\n  return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPoint.prototype.getType = function() {\n  return GeometryType.POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPoint.prototype.intersectsExtent = function(extent) {\n  return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default Point;\n","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  const canvas = /** @type {HTMLCanvasElement} */ (document.createElement('CANVAS'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!Element} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!Element} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n","/**\n * @module ol/format/GeoJSON\n */\n// TODO: serialize dataProjection as crs member when writing\n// see https://github.com/openlayers/openlayers/issues/2078\n\nimport {inherits} from '../util.js';\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport JSONFeature from '../format/JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/proj~ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {module:ol/proj~ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @constructor\n * @extends {module:ol/format/JSONFeature}\n * @param {module:ol/format/GeoJSON~Options=} opt_options Options.\n * @api\n */\nconst GeoJSON = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  JSONFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.dataProjection = getProjection(\n    options.dataProjection ?\n      options.dataProjection : 'EPSG:4326');\n\n  if (options.featureProjection) {\n    this.defaultFeatureProjection = getProjection(options.featureProjection);\n  }\n\n  /**\n   * Name of the geometry attribute for features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * Look for the geometry name in the feature GeoJSON\n   * @type {boolean|undefined}\n   * @private\n   */\n  this.extractGeometryName_ = options.extractGeometryName;\n\n};\n\ninherits(GeoJSON, JSONFeature);\n\n\n/**\n * @const\n * @type {Object.<string, function(GeoJSONObject): module:ol/geom/Geometry>}\n */\nconst GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry,\n  'GeometryCollection': readGeometryCollectionGeometry\n};\n\n\n/**\n * @const\n * @type {Object.<string, function(module:ol/geom/Geometry, module:ol/format/Feature~WriteOptions=): (GeoJSONGeometry|GeoJSONGeometryCollection)>}\n */\nconst GEOMETRY_WRITERS = {\n  'Point': writePointGeometry,\n  'LineString': writeLineStringGeometry,\n  'Polygon': writePolygonGeometry,\n  'MultiPoint': writeMultiPointGeometry,\n  'MultiLineString': writeMultiLineStringGeometry,\n  'MultiPolygon': writeMultiPolygonGeometry,\n  'GeometryCollection': writeGeometryCollectionGeometry,\n  'Circle': writeEmptyGeometryCollectionGeometry\n};\n\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/Geometry} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n  const geometryReader = GEOMETRY_READERS[object.type];\n  return (\n    /** @type {module:ol/geom/Geometry} */ (transformWithOptions(geometryReader(object), false, opt_options))\n  );\n}\n\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  const geometries = object.geometries.map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {module:ol/geom/Geometry} geometry Geometry.\n     */\n    function(geometry) {\n      return readGeometry(geometry, opt_options);\n    });\n  return new GeometryCollection(geometries);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object.coordinates);\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry|GeoJSONGeometryCollection} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  const geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n  return geometryWriter(/** @type {module:ol/geom/Geometry} */ (\n    transformWithOptions(geometry, true, opt_options)), opt_options);\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @return {GeoJSONGeometryCollection} Empty GeoJSON geometry collection.\n */\nfunction writeEmptyGeometryCollectionGeometry(geometry) {\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: []\n  });\n}\n\n\n/**\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  const geometries = geometry.getGeometriesArray().map(function(geometry) {\n    const options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: geometries\n  });\n}\n\n\n/**\n * @param {module:ol/geom/LineString} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'LineString',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {module:ol/geom/MultiLineString} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {module:ol/geom/MultiPoint} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n}\n\n\n/**\n * @param {module:ol/geom/Point} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Point',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {module:ol/geom/Polygon} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n}\n\n\n/**\n * Read a feature from a GeoJSON Feature source.  Only works for Feature or\n * geometry types.  Use {@link module:ol/format/GeoJSON#readFeatures} to read\n * FeatureCollection source. If feature at source has an id, it will be used\n * as Feature id by calling {@link module:ol/Feature#setId} internally.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/Feature} Feature.\n * @api\n */\nGeoJSON.prototype.readFeature;\n\n\n/**\n * Read all features from a GeoJSON source.  Works for all GeoJSON types.\n * If the source includes only geometries, features will be created with those\n * geometries.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nGeoJSON.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readFeatureFromObject = function(object, opt_options) {\n  /**\n   * @type {GeoJSONFeature}\n   */\n  let geoJSONFeature = null;\n  if (object.type === 'Feature') {\n    geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n  } else {\n    geoJSONFeature = /** @type {GeoJSONFeature} */ ({\n      type: 'Feature',\n      geometry: /** @type {GeoJSONGeometry|GeoJSONGeometryCollection} */ (object)\n    });\n  }\n\n  const geometry = readGeometry(geoJSONFeature.geometry, opt_options);\n  const feature = new Feature();\n  if (this.geometryName_) {\n    feature.setGeometryName(this.geometryName_);\n  } else if (this.extractGeometryName_ && geoJSONFeature.geometry_name !== undefined) {\n    feature.setGeometryName(geoJSONFeature.geometry_name);\n  }\n  feature.setGeometry(geometry);\n  if (geoJSONFeature.id !== undefined) {\n    feature.setId(geoJSONFeature.id);\n  }\n  if (geoJSONFeature.properties) {\n    feature.setProperties(geoJSONFeature.properties);\n  }\n  return feature;\n};\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readFeaturesFromObject = function(object, opt_options) {\n  const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n  /** @type {Array.<module:ol/Feature>} */\n  let features = null;\n  if (geoJSONObject.type === 'FeatureCollection') {\n    const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n    features = [];\n    const geoJSONFeatures = geoJSONFeatureCollection.features;\n    for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n      features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n    }\n  } else {\n    features = [this.readFeatureFromObject(object, opt_options)];\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a GeoJSON source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/Geometry} Geometry.\n * @api\n */\nGeoJSON.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readGeometryFromObject = function(object, opt_options) {\n  return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n};\n\n\n/**\n * Read the projection from a GeoJSON source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {module:ol/proj/Projection} Projection.\n * @api\n */\nGeoJSON.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readProjectionFromObject = function(object) {\n  const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n  const crs = geoJSONObject.crs;\n  let projection;\n  if (crs) {\n    if (crs.type == 'name') {\n      projection = getProjection(crs.properties.name);\n    } else {\n      assert(false, 36); // Unknown SRS type\n    }\n  } else {\n    projection = this.dataProjection;\n  }\n  return (\n    /** @type {module:ol/proj/Projection} */ (projection)\n  );\n};\n\n\n/**\n * Encode a feature as a GeoJSON Feature string.\n *\n * @function\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeature;\n\n\n/**\n * Encode a feature as a GeoJSON Feature object.\n *\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONFeature} Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeatureObject = function(feature, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n\n  const object = /** @type {GeoJSONFeature} */ ({\n    'type': 'Feature'\n  });\n  const id = feature.getId();\n  if (id !== undefined) {\n    object.id = id;\n  }\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    object.geometry = writeGeometry(geometry, opt_options);\n  } else {\n    object.geometry = null;\n  }\n  const properties = feature.getProperties();\n  delete properties[feature.getGeometryName()];\n  if (!isEmpty(properties)) {\n    object.properties = properties;\n  } else {\n    object.properties = null;\n  }\n  return object;\n};\n\n\n/**\n * Encode an array of features as GeoJSON.\n *\n * @function\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @api\n */\nGeoJSON.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features as a GeoJSON object.\n *\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONFeatureCollection} GeoJSON Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeaturesObject = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const objects = [];\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    objects.push(this.writeFeatureObject(features[i], opt_options));\n  }\n  return /** @type {GeoJSONFeatureCollection} */ ({\n    type: 'FeatureCollection',\n    features: objects\n  });\n};\n\n\n/**\n * Encode a geometry as a GeoJSON string.\n *\n * @function\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @api\n */\nGeoJSON.prototype.writeGeometry;\n\n\n/**\n * Encode a geometry as a GeoJSON object.\n *\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeGeometryObject = function(geometry, opt_options) {\n  return writeGeometry(geometry, this.adaptOptions(opt_options));\n};\nexport default GeoJSON;\n","/**\n * @module ol/layer/Vector\n */\nimport {inherits} from '../util.js';\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport VectorRenderType from '../layer/VectorRenderType.js';\nimport {assign} from '../obj.js';\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {module:ol/layer/VectorRenderType|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {module:ol/source/Vector} [source] Source.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during animations. This means that no\n * vectors will be shown clipped, but the setting will have a performance impact for large\n * amounts of vector data. When set to `false`, batches will be recreated when no animation\n * is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during interactions. See also\n * `updateWhileAnimating`.\n */\n\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport const RenderType = {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @constructor\n * @extends {module:ol/layer/Layer}\n * @fires module:ol/render/Event~RenderEvent\n * @param {module:ol/layer/Vector~Options=} opt_options Options.\n * @api\n */\nconst VectorLayer = function(opt_options) {\n  const options = opt_options ?\n    opt_options : /** @type {module:ol/layer/Vector~Options} */ ({});\n\n  const baseOptions = assign({}, options);\n\n  delete baseOptions.style;\n  delete baseOptions.renderBuffer;\n  delete baseOptions.updateWhileAnimating;\n  delete baseOptions.updateWhileInteracting;\n  Layer.call(this, /** @type {module:ol/layer/Layer~Options} */ (baseOptions));\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.renderBuffer_ = options.renderBuffer !== undefined ?\n    options.renderBuffer : 100;\n\n  /**\n   * User provided style.\n   * @type {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n   * @private\n   */\n  this.style_ = null;\n\n  /**\n   * Style function for use within the library.\n   * @type {module:ol/style/Style~StyleFunction|undefined}\n   * @private\n   */\n  this.styleFunction_ = undefined;\n\n  this.setStyle(options.style);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n    options.updateWhileAnimating : false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n    options.updateWhileInteracting : false;\n\n  /**\n   * @private\n   * @type {module:ol/layer/VectorTileRenderType|string}\n   */\n  this.renderMode_ = options.renderMode || VectorRenderType.VECTOR;\n\n  /**\n   * The layer type.\n   * @protected\n   * @type {module:ol/LayerType}\n   */\n  this.type = LayerType.VECTOR;\n\n};\n\ninherits(VectorLayer, Layer);\n\n\n/**\n * @return {boolean} Declutter.\n */\nVectorLayer.prototype.getDeclutter = function() {\n  return this.declutter_;\n};\n\n\n/**\n * @param {boolean} declutter Declutter.\n */\nVectorLayer.prototype.setDeclutter = function(declutter) {\n  this.declutter_ = declutter;\n};\n\n\n/**\n * @return {number|undefined} Render buffer.\n */\nVectorLayer.prototype.getRenderBuffer = function() {\n  return this.renderBuffer_;\n};\n\n\n/**\n * @return {function(module:ol/Feature, module:ol/Feature): number|null|undefined} Render\n *     order.\n */\nVectorLayer.prototype.getRenderOrder = function() {\n  return (\n    /** @type {module:ol/render~OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\n  );\n};\n\n\n/**\n * Return the associated {@link module:ol/source/Vector vectorsource} of the layer.\n * @function\n * @return {module:ol/source/Vector} Source.\n * @api\n */\nVectorLayer.prototype.getSource;\n\n\n/**\n * Get the style for features.  This returns whatever was passed to the `style`\n * option at construction or to the `setStyle` method.\n * @return {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n *     Layer style.\n * @api\n */\nVectorLayer.prototype.getStyle = function() {\n  return this.style_;\n};\n\n\n/**\n * Get the style function.\n * @return {module:ol/style/Style~StyleFunction|undefined} Layer style function.\n * @api\n */\nVectorLayer.prototype.getStyleFunction = function() {\n  return this.styleFunction_;\n};\n\n\n/**\n * @return {boolean} Whether the rendered layer should be updated while\n *     animating.\n */\nVectorLayer.prototype.getUpdateWhileAnimating = function() {\n  return this.updateWhileAnimating_;\n};\n\n\n/**\n * @return {boolean} Whether the rendered layer should be updated while\n *     interacting.\n */\nVectorLayer.prototype.getUpdateWhileInteracting = function() {\n  return this.updateWhileInteracting_;\n};\n\n\n/**\n * @param {module:ol/render~OrderFunction|null|undefined} renderOrder\n *     Render order.\n */\nVectorLayer.prototype.setRenderOrder = function(renderOrder) {\n  this.set(Property.RENDER_ORDER, renderOrder);\n};\n\n\n/**\n * Set the style for features.  This can be a single style object, an array\n * of styles, or a function that takes a feature and resolution and returns\n * an array of styles. If it is `undefined` the default style is used. If\n * it is `null` the layer has no style (a `null` style), so only features\n * that have their own styles will be rendered in the layer. See\n * {@link module:ol/style} for information on the default style.\n * @param {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction|null|undefined}\n *     style Layer style.\n * @api\n */\nVectorLayer.prototype.setStyle = function(style) {\n  this.style_ = style !== undefined ? style : createDefaultStyle;\n  this.styleFunction_ = style === null ?\n    undefined : toStyleFunction(this.style_);\n  this.changed();\n};\n\n\n/**\n * @return {module:ol/layer/VectorRenderType|string} The render mode.\n */\nVectorLayer.prototype.getRenderMode = function() {\n  return this.renderMode_;\n};\n\n\nexport default VectorLayer;\n","/**\n * @module ol/Object\n */\nimport {getUid, inherits} from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of\n * this type.\n *\n * @param {string} type The event type.\n * @param {string} key The property name.\n * @param {*} oldValue The old value for `key`.\n * @extends {module:ol/events/Event}\n * @constructor\n */\nconst ObjectEvent = function(type, key, oldValue) {\n  Event.call(this, type);\n\n  /**\n   * The name of the property whose value is changing.\n   * @type {string}\n   * @api\n   */\n  this.key = key;\n\n  /**\n   * The old value. To get the new value use `e.target.get(e.key)` where\n   * `e` is the event object.\n   * @type {*}\n   * @api\n   */\n  this.oldValue = oldValue;\n\n};\ninherits(ObjectEvent, Event);\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @constructor\n * @extends {module:ol/Observable}\n * @param {Object.<string, *>=} opt_values An object with key-value pairs.\n * @fires module:ol/Object~ObjectEvent\n * @api\n */\nconst BaseObject = function(opt_values) {\n  Observable.call(this);\n\n  // Call {@link module:ol~getUid} to ensure that the order of objects' ids is\n  // the same as the order in which they were created.  This also helps to\n  // ensure that object properties are always added in the same order, which\n  // helps many JavaScript engines generate faster code.\n  getUid(this);\n\n  /**\n   * @private\n   * @type {!Object.<string, *>}\n   */\n  this.values_ = {};\n\n  if (opt_values !== undefined) {\n    this.setProperties(opt_values);\n  }\n};\n\ninherits(BaseObject, Observable);\n\n\n/**\n * @type {Object.<string, string>}\n */\nconst changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\n/**\n * Gets a value.\n * @param {string} key Key name.\n * @return {*} Value.\n * @api\n */\nBaseObject.prototype.get = function(key) {\n  let value;\n  if (this.values_.hasOwnProperty(key)) {\n    value = this.values_[key];\n  }\n  return value;\n};\n\n\n/**\n * Get a list of object property names.\n * @return {Array.<string>} List of property names.\n * @api\n */\nBaseObject.prototype.getKeys = function() {\n  return Object.keys(this.values_);\n};\n\n\n/**\n * Get an object of all property names and values.\n * @return {Object.<string, *>} Object.\n * @api\n */\nBaseObject.prototype.getProperties = function() {\n  return assign({}, this.values_);\n};\n\n\n/**\n * @param {string} key Key name.\n * @param {*} oldValue Old value.\n */\nBaseObject.prototype.notify = function(key, oldValue) {\n  let eventType;\n  eventType = getChangeEventType(key);\n  this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  eventType = ObjectEventType.PROPERTYCHANGE;\n  this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n};\n\n\n/**\n * Sets a value.\n * @param {string} key Key name.\n * @param {*} value Value.\n * @param {boolean=} opt_silent Update without triggering an event.\n * @api\n */\nBaseObject.prototype.set = function(key, value, opt_silent) {\n  if (opt_silent) {\n    this.values_[key] = value;\n  } else {\n    const oldValue = this.values_[key];\n    this.values_[key] = value;\n    if (oldValue !== value) {\n      this.notify(key, oldValue);\n    }\n  }\n};\n\n\n/**\n * Sets a collection of key-value pairs.  Note that this changes any existing\n * properties and adds new ones (it does not remove any existing properties).\n * @param {Object.<string, *>} values Values.\n * @param {boolean=} opt_silent Update without triggering an event.\n * @api\n */\nBaseObject.prototype.setProperties = function(values, opt_silent) {\n  for (const key in values) {\n    this.set(key, values[key], opt_silent);\n  }\n};\n\n\n/**\n * Unsets a property.\n * @param {string} key Key name.\n * @param {boolean=} opt_silent Unset without triggering an event.\n * @api\n */\nBaseObject.prototype.unset = function(key, opt_silent) {\n  if (key in this.values_) {\n    const oldValue = this.values_[key];\n    delete this.values_[key];\n    if (!opt_silent) {\n      this.notify(key, oldValue);\n    }\n  }\n};\n\n\nexport default BaseObject;\n","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array.<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((module:ol/coordinate~Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/coordinate~Coordinate} delta Delta.\n * @return {module:ol/coordinate~Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @param {module:ol/geom/Circle} circle The circle.\n * @return {module:ol/coordinate~Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + r * dx / d;\n  const y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @param {Array.<module:ol/coordinate~Coordinate>} segment The two coordinates\n * of the segment.\n * @return {module:ol/coordinate~Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {module:ol/coordinate~Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {module:ol/coordinate~CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coord1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coord1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate of the point.\n * @param {Array.<module:ol/coordinate~Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n","/**\n * @module ol/geom/LineString\n */\nimport {inherits} from '../util.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from '../geom/flat/interpolate.js';\nimport {intersectsLineString} from '../geom/flat/intersectsextent.js';\nimport {lineStringLength} from '../geom/flat/length.js';\nimport {forEach as forEachSegment} from '../geom/flat/segments.js';\nimport {douglasPeucker} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst LineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.flatMidpoint_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatMidpointRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(LineString, SimpleGeometry);\n\n\n/**\n * Append the passed coordinate to the coordinates of the linestring.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @api\n */\nLineString.prototype.appendCoordinate = function(coordinate) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = coordinate.slice();\n  } else {\n    extend(this.flatCoordinates, coordinate);\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/LineString} Clone.\n * @override\n * @api\n */\nLineString.prototype.clone = function() {\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return lineString;\n};\n\n\n/**\n * @inheritDoc\n */\nLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestPoint(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Iterate over each segment, calling the provided callback.\n * If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n *\n * @param {function(this: S, module:ol/coordinate~Coordinate, module:ol/coordinate~Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T,S\n * @api\n */\nLineString.prototype.forEachSegment = function(callback) {\n  return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate) {\n  if (this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  return lineStringCoordinateAtM(this.flatCoordinates, 0,\n    this.flatCoordinates.length, this.stride, m, extrapolate);\n};\n\n\n/**\n * Return the coordinates of the linestring.\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n * @override\n * @api\n */\nLineString.prototype.getCoordinates = function() {\n  return inflateCoordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the coordinate at the provided fraction along the linestring.\n * The `fraction` is a number between 0 and 1, where 0 is the start of the\n * linestring and 1 is the end.\n * @param {number} fraction Fraction.\n * @param {module:ol/coordinate~Coordinate=} opt_dest Optional coordinate whose values will\n *     be modified. If not provided, a new coordinate will be returned.\n * @return {module:ol/coordinate~Coordinate} Coordinate of the interpolated point.\n * @api\n */\nLineString.prototype.getCoordinateAt = function(fraction, opt_dest) {\n  return interpolatePoint(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    fraction, opt_dest);\n};\n\n\n/**\n * Return the length of the linestring on projected plane.\n * @return {number} Length (on projected plane).\n * @api\n */\nLineString.prototype.getLength = function() {\n  return lineStringLength(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoint.\n */\nLineString.prototype.getFlatMidpoint = function() {\n  if (this.flatMidpointRevision_ != this.getRevision()) {\n    this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n    this.flatMidpointRevision_ = this.getRevision();\n  }\n  return this.flatMidpoint_;\n};\n\n\n/**\n * @inheritDoc\n */\nLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    squaredTolerance, simplifiedFlatCoordinates, 0);\n  const simplifiedLineString = new LineString(null);\n  simplifiedLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates);\n  return simplifiedLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nLineString.prototype.getType = function() {\n  return GeometryType.LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nLineString.prototype.intersectsExtent = function(extent) {\n  return intersectsLineString(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    extent);\n};\n\n\n/**\n * Set the coordinates of the linestring.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default LineString;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3\n};\n","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * @see {@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface}\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/EventTarget~EventTarget}.\n *\n * @constructor\n * @param {string} type Type.\n */\nconst Event = function(type) {\n\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n  this.type = type;\n\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n  this.target = null;\n\n};\n\n\n/**\n * Stop event propagation.\n * @function\n * @api\n */\nEvent.prototype.preventDefault =\n\n  /**\n   * Stop event propagation.\n   * @function\n   * @api\n   */\n  Event.prototype.stopPropagation = function() {\n    this.propagationStopped = true;\n  };\n\n\n/**\n * @param {Event|module:ol/events/Event} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|module:ol/events/Event} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, module:ol/MapBrowserEvent): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {module:ol/MapBrowserEvent} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @function\n * @api\n */\nexport const always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @function\n * @api\n */\nexport const never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function(mapBrowserEvent) {\n  const target = mapBrowserEvent.originalEvent.target;\n  const tagName = target.tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function(mapBrowserEvent) {\n  assert(mapBrowserEvent.pointerEvent, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return (\n    /** @type {module:ol/MapBrowserEvent} */ (mapBrowserEvent).pointerEvent.pointerType == 'mouse'\n  );\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * @see http://www.w3.org/TR/pointerevents/#button-states\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function(mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.pointerEvent;\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/geom/Polygon\n */\nimport {inherits} from '../util.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from '../geom/flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {linearRingsContainsXY} from '../geom/flat/contains.js';\nimport {deflateCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateCoordinatesArray} from '../geom/flat/inflate.js';\nimport {getInteriorPointOfArray} from '../geom/flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from '../geom/flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from '../geom/flat/orient.js';\nimport {quantizeArray} from '../geom/flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Array of linear\n *     rings that define the polygon. The first linear ring of the array\n *     defines the outer-boundary or surface of the polygon. Each subsequent\n *     linear ring defines a hole in the surface of the polygon. A linear ring\n *     is an array of vertices' coordinates where the first coordinate and the\n *     last are equivalent.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Polygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointRevision_ = -1;\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.flatInteriorPoint_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(Polygon, SimpleGeometry);\n\n\n/**\n * Append the passed linear ring to this polygon.\n * @param {module:ol/geom/LinearRing} linearRing Linear ring.\n * @api\n */\nPolygon.prototype.appendLinearRing = function(linearRing) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/Polygon} Clone.\n * @override\n * @api\n */\nPolygon.prototype.clone = function() {\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return polygon;\n};\n\n\n/**\n * @inheritDoc\n */\nPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestArrayPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nPolygon.prototype.containsXY = function(x, y) {\n  return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the polygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nPolygon.prototype.getArea = function() {\n  return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinates.\n * @override\n * @api\n */\nPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    orientLinearRings(\n      flatCoordinates, 0, this.ends_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return inflateCoordinatesArray(\n    flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nPolygon.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * @return {Array.<number>} Interior point.\n */\nPolygon.prototype.getFlatInteriorPoint = function() {\n  if (this.flatInteriorPointRevision_ != this.getRevision()) {\n    const flatCenter = getCenter(this.getExtent());\n    this.flatInteriorPoint_ = getInteriorPointOfArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n      flatCenter, 0);\n    this.flatInteriorPointRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoint_;\n};\n\n\n/**\n * Return an interior point of the polygon.\n * @return {module:ol/geom/Point} Interior point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n * @api\n */\nPolygon.prototype.getInteriorPoint = function() {\n  return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n};\n\n\n/**\n * Return the number of rings of the polygon,  this includes the exterior\n * ring and any interior rings.\n *\n * @return {number} Number of rings.\n * @api\n */\nPolygon.prototype.getLinearRingCount = function() {\n  return this.ends_.length;\n};\n\n\n/**\n * Return the Nth linear ring of the polygon geometry. Return `null` if the\n * given index is out of range.\n * The exterior linear ring is available at index `0` and the interior rings\n * at index `1` and beyond.\n *\n * @param {number} index Index.\n * @return {module:ol/geom/LinearRing} Linear ring.\n * @api\n */\nPolygon.prototype.getLinearRing = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const linearRing = new LinearRing(null);\n  linearRing.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return linearRing;\n};\n\n\n/**\n * Return the linear rings of the polygon.\n * @return {Array.<module:ol/geom/LinearRing>} Linear rings.\n * @api\n */\nPolygon.prototype.getLinearRings = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const linearRings = [];\n  let offset = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const linearRing = new LinearRing(null);\n    linearRing.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    linearRings.push(linearRing);\n    offset = end;\n  }\n  return linearRings;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (linearRingIsOriented(\n      flatCoordinates, 0, this.ends_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          orientLinearRings(\n            this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = quantizeArray(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedPolygon = new Polygon(null);\n  simplifiedPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedPolygon;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPolygon.prototype.getType = function() {\n  return GeometryType.POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPolygon.prototype.intersectsExtent = function(extent) {\n  return intersectsLinearRingArray(\n    this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the polygon.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {module:ol/coordinate~Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {module:ol/geom/Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(GeometryLayout.XY, flatCoordinates, [flatCoordinates.length]);\n  return polygon;\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {module:ol/extent~Extent} extent The extent.\n * @return {module:ol/geom/Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    GeometryLayout.XY, flatCoordinates, [flatCoordinates.length]);\n  return polygon;\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {module:ol/geom/Circle} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {module:ol/geom/Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const polygon = new Polygon(null, layout);\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i++) {\n    flatCoordinates[i] = 0;\n  }\n  const ends = [flatCoordinates.length];\n  polygon.setFlatCoordinates(layout, flatCoordinates, ends);\n  makeRegular(polygon, circle.getCenter(), circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n * @param {module:ol/coordinate~Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const layout = polygon.getLayout();\n  const stride = polygon.getStride();\n  const ends = polygon.getEnds();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.setFlatCoordinates(layout, flatCoordinates, ends);\n}\n","/**\n * @module ol/render/ReplayType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n","/**\n * @module ol/interaction/Pointer\n */\nimport {inherits} from '../util.js';\nimport {FALSE, UNDEFINED} from '../functions.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport Interaction from '../interaction/Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleDragEvent = UNDEFINED;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Capture dragging.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleUpEvent = FALSE;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Capture dragging.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleDownEvent = FALSE;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleMoveEvent = UNDEFINED;\n\n\n/**\n * @typedef {Object} Options\n * @property {(function(module:ol/MapBrowserPointerEvent):boolean)} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {(function(module:ol/MapBrowserPointerEvent))} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {(function(module:ol/MapBrowserEvent):boolean)} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {(function(module:ol/MapBrowserPointerEvent))} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {(function(module:ol/MapBrowserPointerEvent):boolean)} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n *\n * @constructor\n * @param {module:ol/interaction/Pointer~Options=} opt_options Options.\n * @extends {module:ol/interaction/Interaction}\n * @api\n */\nconst PointerInteraction = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  Interaction.call(this, {\n    handleEvent: options.handleEvent || handleEvent\n  });\n\n  /**\n   * @type {function(module:ol/MapBrowserPointerEvent):boolean}\n   * @private\n   */\n  this.handleDownEvent_ = options.handleDownEvent ?\n    options.handleDownEvent : handleDownEvent;\n\n  /**\n   * @type {function(module:ol/MapBrowserPointerEvent)}\n   * @private\n   */\n  this.handleDragEvent_ = options.handleDragEvent ?\n    options.handleDragEvent : handleDragEvent;\n\n  /**\n   * @type {function(module:ol/MapBrowserPointerEvent)}\n   * @private\n   */\n  this.handleMoveEvent_ = options.handleMoveEvent ?\n    options.handleMoveEvent : handleMoveEvent;\n\n  /**\n   * @type {function(module:ol/MapBrowserPointerEvent):boolean}\n   * @private\n   */\n  this.handleUpEvent_ = options.handleUpEvent ?\n    options.handleUpEvent : handleUpEvent;\n\n  /**\n   * @type {boolean}\n   * @protected\n   */\n  this.handlingDownUpSequence = false;\n\n  /**\n   * @type {!Object.<string, module:ol/pointer/PointerEvent>}\n   * @private\n   */\n  this.trackedPointers_ = {};\n\n  /**\n   * @type {Array.<module:ol/pointer/PointerEvent>}\n   * @protected\n   */\n  this.targetPointers = [];\n\n};\n\ninherits(PointerInteraction, Interaction);\n\n\n/**\n * @param {Array.<module:ol/pointer/PointerEvent>} pointerEvents List of events.\n * @return {module:ol~Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @private\n */\nPointerInteraction.prototype.updateTrackedPointers_ = function(mapBrowserEvent) {\n  if (isPointerDraggingEvent(mapBrowserEvent)) {\n    const event = mapBrowserEvent.pointerEvent;\n\n    const id = event.pointerId.toString();\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n      delete this.trackedPointers_[id];\n    } else if (mapBrowserEvent.type ==\n        MapBrowserEventType.POINTERDOWN) {\n      this.trackedPointers_[id] = event;\n    } else if (id in this.trackedPointers_) {\n      // update only when there was a pointerdown event for this pointer\n      this.trackedPointers_[id] = event;\n    }\n    this.targetPointers = getValues(this.trackedPointers_);\n  }\n};\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n * detected.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Pointer}\n * @api\n */\nexport function handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n\n  let stopEvent = false;\n  this.updateTrackedPointers_(mapBrowserEvent);\n  if (this.handlingDownUpSequence) {\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n      this.handleDragEvent_(mapBrowserEvent);\n    } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n      const handledUp = this.handleUpEvent_(mapBrowserEvent);\n      this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n    }\n  } else {\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n      const handled = this.handleDownEvent_(mapBrowserEvent);\n      this.handlingDownUpSequence = handled;\n      stopEvent = this.shouldStopEvent(handled);\n    } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n      this.handleMoveEvent_(mapBrowserEvent);\n    }\n  }\n  return !stopEvent;\n}\n\n\n/**\n * This method is used to determine if \"down\" events should be propagated to\n * other interactions or should be stopped.\n *\n * The method receives the return code of the \"handleDownEvent\" function.\n *\n * By default this function is the \"identity\" function. It's overridden in\n * child classes.\n *\n * @param {boolean} handled Was the event handled by the interaction?\n * @return {boolean} Should the event be stopped?\n * @protected\n */\nPointerInteraction.prototype.shouldStopEvent = function(handled) {\n  return handled;\n};\n\nexport default PointerInteraction;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n","/**\n * @module ol/format/Feature\n */\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, equivalent as equivalentProjection, transformExtent} from '../proj.js';\n\n\n/**\n * @typedef {Object} ReadOptions\n * @property {module:ol/proj~ProjectionLike} dataProjection Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {module:ol/extent~Extent} extent Tile extent of the tile being read. This is only used and\n * required for {@link module:ol/format/MVT}.\n * @property {module:ol/proj~ProjectionLike} featureProjection Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n\n/**\n * @typedef {Object} WriteOptions\n * @property {module:ol/proj~ProjectionLike} dataProjection Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {module:ol/proj~ProjectionLike} featureProjection Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @constructor\n * @abstract\n * @api\n */\nconst FeatureFormat = function() {\n\n  /**\n   * @protected\n   * @type {module:ol/proj/Projection}\n   */\n  this.dataProjection = null;\n\n  /**\n   * @protected\n   * @type {module:ol/proj/Projection}\n   */\n  this.defaultFeatureProjection = null;\n\n};\n\n\n/**\n * Adds the data projection to the read options.\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n * @return {module:ol/format/Feature~ReadOptions|undefined} Options.\n * @protected\n */\nFeatureFormat.prototype.getReadOptions = function(source, opt_options) {\n  let options;\n  if (opt_options) {\n    options = {\n      dataProjection: opt_options.dataProjection ?\n        opt_options.dataProjection : this.readProjection(source),\n      featureProjection: opt_options.featureProjection\n    };\n  }\n  return this.adaptOptions(options);\n};\n\n\n/**\n * Sets the `dataProjection` on the options, if no `dataProjection`\n * is set.\n * @param {module:ol/format/Feature~WriteOptions|module:ol/format/Feature~ReadOptions|undefined} options\n *     Options.\n * @protected\n * @return {module:ol/format/Feature~WriteOptions|module:ol/format/Feature~ReadOptions|undefined}\n *     Updated options.\n */\nFeatureFormat.prototype.adaptOptions = function(options) {\n  return assign({\n    dataProjection: this.dataProjection,\n    featureProjection: this.defaultFeatureProjection\n  }, options);\n};\n\n\n/**\n * Get the extent from the source of the last {@link readFeatures} call.\n * @return {module:ol/extent~Extent} Tile extent.\n */\nFeatureFormat.prototype.getLastExtent = function() {\n  return null;\n};\n\n\n/**\n * @abstract\n * @return {module:ol/format/FormatType} Format.\n */\nFeatureFormat.prototype.getType = function() {};\n\n\n/**\n * Read a single feature from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/Feature} Feature.\n */\nFeatureFormat.prototype.readFeature = function(source, opt_options) {};\n\n\n/**\n * Read all features from a source.\n *\n * @abstract\n * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {Array.<module:ol/Feature>} Features.\n */\nFeatureFormat.prototype.readFeatures = function(source, opt_options) {};\n\n\n/**\n * Read a single geometry from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/Geometry} Geometry.\n */\nFeatureFormat.prototype.readGeometry = function(source, opt_options) {};\n\n\n/**\n * Read the projection from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @return {module:ol/proj/Projection} Projection.\n */\nFeatureFormat.prototype.readProjection = function(source) {};\n\n\n/**\n * Encode a feature in this format.\n *\n * @abstract\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeature = function(feature, opt_options) {};\n\n\n/**\n * Encode an array of features in this format.\n *\n * @abstract\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeatures = function(features, opt_options) {};\n\n\n/**\n * Write a single geometry in this format.\n *\n * @abstract\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeGeometry = function(geometry, opt_options) {};\n\nexport default FeatureFormat;\n\n/**\n * @param {module:ol/geom/Geometry|module:ol/extent~Extent} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(module:ol/format/Feature~WriteOptions|module:ol/format/Feature~ReadOptions)=} opt_options\n *     Options.\n * @return {module:ol/geom/Geometry|module:ol/extent~Extent} Transformed geometry.\n */\nexport function transformWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options ?\n    getProjection(opt_options.featureProjection) : null;\n  const dataProjection = opt_options ?\n    getProjection(opt_options.dataProjection) : null;\n  /**\n   * @type {module:ol/geom/Geometry|module:ol/extent~Extent}\n   */\n  let transformed;\n  if (featureProjection && dataProjection &&\n      !equivalentProjection(featureProjection, dataProjection)) {\n    if (geometry instanceof Geometry) {\n      transformed = (write ? geometry.clone() : geometry).transform(\n        write ? featureProjection : dataProjection,\n        write ? dataProjection : featureProjection);\n    } else {\n      // FIXME this is necessary because GML treats extents\n      // as geometries\n      transformed = transformExtent(\n        geometry,\n        dataProjection,\n        featureProjection);\n    }\n  } else {\n    transformed = geometry;\n  }\n  if (write && opt_options && opt_options.decimals !== undefined) {\n    const power = Math.pow(10, opt_options.decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array.<number>} coordinates Coordinates.\n     * @return {Array.<number>} Transformed coordinates.\n     */\n    const transform = function(coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = transformed.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport {inherits} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(module:ol/MapBrowserEvent):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return).\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n *\n * @constructor\n * @param {module:ol/interaction/Interaction~InteractionOptions} options Options.\n * @extends {module:ol/Object}\n * @api\n */\nconst Interaction = function(options) {\n\n  BaseObject.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/PluggableMap}\n   */\n  this.map_ = null;\n\n  this.setActive(true);\n\n  /**\n   * @type {function(module:ol/MapBrowserEvent):boolean}\n   */\n  this.handleEvent = options.handleEvent;\n\n};\n\ninherits(Interaction, BaseObject);\n\n\n/**\n * Return whether the interaction is currently active.\n * @return {boolean} `true` if the interaction is active, `false` otherwise.\n * @observable\n * @api\n */\nInteraction.prototype.getActive = function() {\n  return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n};\n\n\n/**\n * Get the map associated with this interaction.\n * @return {module:ol/PluggableMap} Map.\n * @api\n */\nInteraction.prototype.getMap = function() {\n  return this.map_;\n};\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @observable\n * @api\n */\nInteraction.prototype.setActive = function(active) {\n  this.set(InteractionProperty.ACTIVE, active);\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {module:ol/PluggableMap} map Map.\n */\nInteraction.prototype.setMap = function(map) {\n  this.map_ = map;\n};\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {module:ol/coordinate~Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenter();\n  if (currentCenter) {\n    const center = view.constrainCenter(\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    const currentRotation = view.getRotation();\n    const currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentResolution = view.getResolution();\n  let resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    const resolutions = view.getResolutions();\n    resolution = clamp(\n      resolution,\n      view.getMinResolution() || resolutions[resolutions.length - 1],\n      view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    const currentCenter = view.getCenter();\n    let center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    const currentResolution = view.getResolution();\n    const currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        const center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n}\n\nexport default Interaction;\n","/**\n * @module ol/source/BingMaps\n */\nimport {inherits} from '../util.js';\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from '../source/State.js';\nimport TileImage from '../source/TileImage.js';\nimport {createOrUpdate, quadKey} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=2048] Cache size.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at http://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n *\n * @constructor\n * @extends {module:ol/source/TileImage}\n * @param {module:ol/source/BingMaps~Options=} options Bing Maps options.\n * @api\n */\nconst BingMaps = function(options) {\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : false;\n\n  TileImage.call(this, {\n    cacheSize: options.cacheSize,\n    crossOrigin: 'anonymous',\n    opaque: true,\n    projection: getProjection('EPSG:3857'),\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    state: SourceState.LOADING,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: this.hidpi_ ? 2 : 1,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.apiKey_ = options.key;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.imagerySet_ = options.imagerySet;\n\n  const url = 'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n      this.imagerySet_ +\n      '?uriScheme=https&include=ImageryProviders&key=' + this.apiKey_ +\n      '&c=' + this.culture_;\n\n  requestJSONP(url, this.handleImageryMetadataResponse.bind(this), undefined,\n    'jsonp');\n\n};\n\ninherits(BingMaps, TileImage);\n\n\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nconst TOS_ATTRIBUTION = '<a class=\"ol-attribution-bing-tos\" ' +\n      'href=\"https://www.microsoft.com/maps/product/terms.html\">' +\n      'Terms of Use</a>';\n\n\n/**\n * Get the api key used for this source.\n *\n * @return {string} The api key.\n * @api\n */\nBingMaps.prototype.getApiKey = function() {\n  return this.apiKey_;\n};\n\n\n/**\n * Get the imagery set associated with this source.\n *\n * @return {string} The imagery set.\n * @api\n */\nBingMaps.prototype.getImagerySet = function() {\n  return this.imagerySet_;\n};\n\n\n/**\n * @param {BingMapsImageryMetadataResponse} response Response.\n */\nBingMaps.prototype.handleImageryMetadataResponse = function(response) {\n  if (response.statusCode != 200 ||\n      response.statusDescription != 'OK' ||\n      response.authenticationResultCode != 'ValidCredentials' ||\n      response.resourceSets.length != 1 ||\n      response.resourceSets[0].resources.length != 1) {\n    this.setState(SourceState.ERROR);\n    return;\n  }\n\n  const resource = response.resourceSets[0].resources[0];\n  const maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n\n  const sourceProjection = this.getProjection();\n  const extent = extentFromProjection(sourceProjection);\n  const tileSize = resource.imageWidth == resource.imageHeight ?\n    resource.imageWidth : [resource.imageWidth, resource.imageHeight];\n  const tileGrid = createXYZ({\n    extent: extent,\n    minZoom: resource.zoomMin,\n    maxZoom: maxZoom,\n    tileSize: tileSize / (this.hidpi_ ? 2 : 1)\n  });\n  this.tileGrid = tileGrid;\n\n  const culture = this.culture_;\n  const hidpi = this.hidpi_;\n  this.tileUrlFunction = createFromTileUrlFunctions(\n    resource.imageUrlSubdomains.map(function(subdomain) {\n      const quadKeyTileCoord = [0, 0, 0];\n      const imageUrl = resource.imageUrl\n        .replace('{subdomain}', subdomain)\n        .replace('{culture}', culture);\n      return (\n        /**\n         * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n         * @param {number} pixelRatio Pixel ratio.\n         * @param {module:ol/proj/Projection} projection Projection.\n         * @return {string|undefined} Tile URL.\n         */\n        function(tileCoord, pixelRatio, projection) {\n          if (!tileCoord) {\n            return undefined;\n          } else {\n            createOrUpdate(tileCoord[0], tileCoord[1], -tileCoord[2] - 1, quadKeyTileCoord);\n            let url = imageUrl;\n            if (hidpi) {\n              url += '&dpi=d1&device=mobile';\n            }\n            return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\n          }\n        }\n      );\n    }));\n\n  if (resource.imageryProviders) {\n    const transform = getTransformFromProjections(\n      getProjection('EPSG:4326'), this.getProjection());\n\n    this.setAttributions(function(frameState) {\n      const attributions = [];\n      const zoom = frameState.viewState.zoom;\n      resource.imageryProviders.map(function(imageryProvider) {\n        let intersecting = false;\n        const coverageAreas = imageryProvider.coverageAreas;\n        for (let i = 0, ii = coverageAreas.length; i < ii; ++i) {\n          const coverageArea = coverageAreas[i];\n          if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\n            const bbox = coverageArea.bbox;\n            const epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n            const extent = applyTransform(epsg4326Extent, transform);\n            if (intersects(extent, frameState.extent)) {\n              intersecting = true;\n              break;\n            }\n          }\n        }\n        if (intersecting) {\n          attributions.push(imageryProvider.attribution);\n        }\n      });\n\n      attributions.push(TOS_ATTRIBUTION);\n      return attributions;\n    });\n  }\n\n  this.setState(SourceState.READY);\n};\nexport default BingMaps;\n","/**\n * @module ol/css\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object.<string>} The font families (or null if the input spec is invalid).\n */\nexport const getFontFamilies = (function() {\n  let style;\n  const cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      const family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\n","/**\n * @module ol/has\n */\n\nconst ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\nexport const CANVAS_LINE_DASH = function() {\n  let has = false;\n  try {\n    has = !!document.createElement('CANVAS').getContext('2d').setLineDash;\n  } catch (e) {\n    // pass\n  }\n  return has;\n}();\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport const GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport const TOUCH = 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport const POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport const MSPOINTER = !!(navigator.msPointerEnabled);\n\n\nexport {HAS as WEBGL} from './webgl.js';\n","/**\n * @module ol/source/State\n */\n\n/**\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n * @enum {string}\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../util.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {getAllTextContent, getAttributeNS, makeArrayPusher, makeReplacer, parseNode, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {string}\n */\nexport const GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * @typedef {Object} Options\n * @property {Object.<string, string>|string} [featureNS] Feature\n * namespace. If not defined will be derived from GML. If multiple\n * feature types have been configured which come from different feature\n * namespaces, this will be an object with the keys being the prefixes used\n * in the entries of featureType array. The values of the object will be the\n * feature namespaces themselves. So for instance there might be a featureType\n * item `topp:states` in the `featureType` array and then there will be a key\n * `topp` in the featureNS object with value `http://www.openplans.org/topp`.\n * @property {Array.<string>|string} [featureType] Feature type(s) to parse.\n * If multiple feature types need to be configured\n * which come from different feature namespaces, `featureNS` will be an object\n * with the keys being the prefixes used in the entries of featureType array.\n * The values of the object will be the feature namespaces themselves.\n * So for instance there might be a featureType item `topp:states` and then\n * there will be a key named `topp` in the featureNS object with value\n * `http://www.openplans.org/topp`.\n * @property {string} srsName srsName to use when writing geometries.\n * @property {boolean} [surface=false] Write gml:Surface instead of gml:Polygon\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [curve=false] Write gml:Curve instead of gml:LineString\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [multiCurve=true] Write gml:MultiCurve instead of gml:MultiLineString.\n * Since the latter is deprecated in GML 3.\n * @property {boolean} [multiSurface=true] Write gml:multiSurface instead of\n * gml:MultiPolygon. Since the latter is deprecated in GML 3.\n * @property {string} [schemaLocation] Optional schemaLocation to use when\n * writing out the GML, this will override the default provided.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes GML2 and GML3.\n *\n * @constructor\n * @abstract\n * @param {module:ol/format/GMLBase~Options=} opt_options\n *     Optional configuration object.\n * @extends {module:ol/format/XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {module:ol/format/GMLBase~Options} */ (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLNS] = {\n    'featureMember': makeReplacer(GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': makeReplacer(GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n */\nconst ONLY_WHITESPACE_RE = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<module:ol/Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (let i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (let i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                makeArrayPusher(this.readFeatureElement, this) :\n                makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {module:ol/geom/Geometry} */\n  const geometry = pushParseAndPop(null, this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {module:ol/geom/Geometry} */ (transformWithOptions(geometry, false, context))\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') || getAttributeNS(node, GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = getAllTextContent(n, false);\n      if (ONLY_WHITESPACE_RE.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<module:ol/geom/LineString>} */\n  const lineStrings = pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<module:ol/geom/Polygon>} */\n  const polygons = pushParseAndPop([], this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  parseNode(this.POINTMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  parseNode(this.LINESTRINGMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  parseNode(this.POLYGONMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return pushParseAndPop(null, this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser_),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName : node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @constructor\n * @param {number} decay Rate of decay (must be negative).\n * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n * @param {number} delay Delay to consider to calculate the kinetic\n *     initial values (milliseconds).\n * @struct\n * @api\n */\nconst Kinetic = function(decay, minVelocity, delay) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.decay_ = decay;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minVelocity_ = minVelocity;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delay_ = delay;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.points_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.initialVelocity_ = 0;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nKinetic.prototype.begin = function() {\n  this.points_.length = 0;\n  this.angle_ = 0;\n  this.initialVelocity_ = 0;\n};\n\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n */\nKinetic.prototype.update = function(x, y) {\n  this.points_.push(x, y, Date.now());\n};\n\n\n/**\n * @return {boolean} Whether we should do kinetic animation.\n */\nKinetic.prototype.end = function() {\n  if (this.points_.length < 6) {\n    // at least 2 points are required (i.e. there must be at least 6 elements\n    // in the array)\n    return false;\n  }\n  const delay = Date.now() - this.delay_;\n  const lastIndex = this.points_.length - 3;\n  if (this.points_[lastIndex + 2] < delay) {\n    // the last tracked point is too old, which means that the user stopped\n    // panning before releasing the map\n    return false;\n  }\n\n  // get the first point which still falls into the delay time\n  let firstIndex = lastIndex - 3;\n  while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n    firstIndex -= 3;\n  }\n\n  const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n  // we don't want a duration of 0 (divide by zero)\n  // we also make sure the user panned for a duration of at least one frame\n  // (1/60s) to compute sane displacement values\n  if (duration < 1000 / 60) {\n    return false;\n  }\n\n  const dx = this.points_[lastIndex] - this.points_[firstIndex];\n  const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n  this.angle_ = Math.atan2(dy, dx);\n  this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n  return this.initialVelocity_ > this.minVelocity_;\n};\n\n\n/**\n * @return {number} Total distance travelled (pixels).\n */\nKinetic.prototype.getDistance = function() {\n  return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n};\n\n\n/**\n * @return {number} Angle of the kinetic panning animation (radians).\n */\nKinetic.prototype.getAngle = function() {\n  return this.angle_;\n};\nexport default Kinetic;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport {inherits} from '../util.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @param {module:ol/interaction/DoubleClickZoom~Options=} opt_options Options.\n * @api\n */\nconst DoubleClickZoom = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delta_ = options.delta ? options.delta : 1;\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n};\n\ninherits(DoubleClickZoom, Interaction);\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  const browserEvent = mapBrowserEvent.originalEvent;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    const map = mapBrowserEvent.map;\n    const anchor = mapBrowserEvent.coordinate;\n    const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    const view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/DragPan\n */\nimport {inherits} from '../util.js';\nimport ViewHint from '../ViewHint.js';\nimport {scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {module:ol/Kinetic} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/DragPan~Options=} opt_options Options.\n * @api\n */\nconst DragPan = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {module:ol/Kinetic|undefined}\n   */\n  this.kinetic_ = options.kinetic;\n\n  /**\n   * @type {module:ol~Pixel}\n   */\n  this.lastCentroid = null;\n\n  /**\n   * @type {number}\n   */\n  this.lastPointersCount_;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.noKinetic_ = false;\n\n};\n\ninherits(DragPan, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  const targetPointers = this.targetPointers;\n  const centroid = centroidFromPointers(targetPointers);\n  if (targetPointers.length == this.lastPointersCount_) {\n    if (this.kinetic_) {\n      this.kinetic_.update(centroid[0], centroid[1]);\n    }\n    if (this.lastCentroid) {\n      const deltaX = this.lastCentroid[0] - centroid[0];\n      const deltaY = centroid[1] - this.lastCentroid[1];\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      let center = [deltaX, deltaY];\n      scaleCoordinate(center, view.getResolution());\n      rotateCoordinate(center, view.getRotation());\n      addCoordinate(center, view.getCenter());\n      center = view.constrainCenter(center);\n      view.setCenter(center);\n    }\n  } else if (this.kinetic_) {\n    // reset so we don't overestimate the kinetic energy after\n    // after one finger down, tiny drag, second finger down\n    this.kinetic_.begin();\n  }\n  this.lastCentroid = centroid;\n  this.lastPointersCount_ = targetPointers.length;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  if (this.targetPointers.length === 0) {\n    if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n      const distance = this.kinetic_.getDistance();\n      const angle = this.kinetic_.getAngle();\n      const center = /** @type {!module:ol/coordinate~Coordinate} */ (view.getCenter());\n      const centerpx = map.getPixelFromCoordinate(center);\n      const dest = map.getCoordinateFromPixel([\n        centerpx[0] - distance * Math.cos(angle),\n        centerpx[1] - distance * Math.sin(angle)\n      ]);\n      view.animate({\n        center: view.constrainCenter(dest),\n        duration: 500,\n        easing: easeOut\n      });\n    }\n    view.setHint(ViewHint.INTERACTING, -1);\n    return false;\n  } else {\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    this.lastCentroid = null;\n    if (!this.handlingDownUpSequence) {\n      view.setHint(ViewHint.INTERACTING, 1);\n    }\n    // stop any current animation\n    if (view.getAnimating()) {\n      view.setCenter(mapBrowserEvent.frameState.viewState.center);\n    }\n    if (this.kinetic_) {\n      this.kinetic_.begin();\n    }\n    // No kinetic as soon as more than one pointer on the screen is\n    // detected. This is to prevent nasty pans after pinch.\n    this.noKinetic_ = this.targetPointers.length > 1;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nDragPan.prototype.shouldStopEvent = FALSE;\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport {inherits} from '../util.js';\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/DragRotate~Options=} opt_options Options.\n * @api\n */\nconst DragRotate = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastAngle_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n};\n\ninherits(DragRotate, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  if (view.getConstraints().rotation === disable) {\n    return;\n  }\n  const size = map.getSize();\n  const offset = mapBrowserEvent.pixel;\n  const theta =\n      Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n  if (this.lastAngle_ !== undefined) {\n    const delta = theta - this.lastAngle_;\n    const rotation = view.getRotation();\n    rotateWithoutConstraints(view, rotation - delta);\n  }\n  this.lastAngle_ = theta;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n  const rotation = view.getRotation();\n  rotate(view, rotation, undefined, this.duration_);\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n    const map = mapBrowserEvent.map;\n    map.getView().setHint(ViewHint.INTERACTING, 1);\n    this.lastAngle_ = undefined;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nDragRotate.prototype.shouldStopEvent = FALSE;\nexport default DragRotate;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport {inherits} from '../util.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from '../interaction/DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n *\n * @constructor\n * @extends {module:ol/interaction/DragBox}\n * @param {module:ol/interaction/DragZoom~Options=} opt_options Options.\n * @api\n */\nconst DragZoom = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const condition = options.condition ? options.condition : shiftKeyOnly;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.out_ = options.out !== undefined ? options.out : false;\n\n  DragBox.call(this, {\n    condition: condition,\n    className: options.className || 'ol-dragzoom'\n  });\n\n};\n\ninherits(DragZoom, DragBox);\n\n\n/**\n * @inheritDoc\n */\nDragZoom.prototype.onBoxEnd = function() {\n  const map = this.getMap();\n\n  const view = /** @type {!module:ol/View} */ (map.getView());\n\n  const size = /** @type {!module:ol/size~Size} */ (map.getSize());\n\n  let extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    const mapExtent = view.calculateExtent(size);\n    const boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    const factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  const resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  let center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n\n};\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {inherits} from '../util.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @param {module:ol/interaction/KeyboardPan~Options=} opt_options Options.\n * @api\n */\nconst KeyboardPan = function(opt_options) {\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @param {module:ol/MapBrowserEvent} mapBrowserEvent Browser event.\n   * @return {boolean} Combined condition result.\n   */\n  this.defaultCondition_ = function(mapBrowserEvent) {\n    return noModifierKeys(mapBrowserEvent) &&\n      targetNotEditable(mapBrowserEvent);\n  };\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition !== undefined ?\n    options.condition : this.defaultCondition_;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelDelta_ = options.pixelDelta !== undefined ?\n    options.pixelDelta : 128;\n\n};\n\ninherits(KeyboardPan, Interaction);\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    const keyEvent = mapBrowserEvent.originalEvent;\n    const keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      let deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      const delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport {inherits} from '../util.js';\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link moudle:ol/interaction/KeyboardPan~KeyboardPan}.\n *\n * @constructor\n * @param {module:ol/interaction/KeyboardZoom~Options=} opt_options Options.\n * @extends {module:ol/interaction/Interaction}\n * @api\n */\nconst KeyboardZoom = function(opt_options) {\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delta_ = options.delta ? options.delta : 1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n};\n\ninherits(KeyboardZoom, Interaction);\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    const keyEvent = mapBrowserEvent.originalEvent;\n    const charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      const map = mapBrowserEvent.map;\n      const delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport {inherits} from '../util.js';\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/PinchRotate~Options=} opt_options Options.\n * @api\n */\nconst PinchRotate = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.anchor_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastAngle_ = undefined;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotating_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotationDelta_ = 0.0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n};\n\ninherits(PinchRotate, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  let rotationDelta = 0.0;\n\n  const touch0 = this.targetPointers[0];\n  const touch1 = this.targetPointers[1];\n\n  // angle between touches\n  const angle = Math.atan2(\n    touch1.clientY - touch0.clientY,\n    touch1.clientX - touch0.clientX);\n\n  if (this.lastAngle_ !== undefined) {\n    const delta = angle - this.lastAngle_;\n    this.rotationDelta_ += delta;\n    if (!this.rotating_ &&\n        Math.abs(this.rotationDelta_) > this.threshold_) {\n      this.rotating_ = true;\n    }\n    rotationDelta = delta;\n  }\n  this.lastAngle_ = angle;\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  if (view.getConstraints().rotation === disable) {\n    return;\n  }\n\n  // rotate anchor point.\n  // FIXME: should be the intersection point between the lines:\n  //     touch0,touch1 and previousTouch0,previousTouch1\n  const viewportPosition = map.getViewport().getBoundingClientRect();\n  const centroid = centroidFromPointers(this.targetPointers);\n  centroid[0] -= viewportPosition.left;\n  centroid[1] -= viewportPosition.top;\n  this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n  // rotate\n  if (this.rotating_) {\n    const rotation = view.getRotation();\n    map.render();\n    rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (this.targetPointers.length < 2) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    if (this.rotating_) {\n      const rotation = view.getRotation();\n      rotate(view, rotation, this.anchor_, this.duration_);\n    }\n    return false;\n  } else {\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length >= 2) {\n    const map = mapBrowserEvent.map;\n    this.anchor_ = null;\n    this.lastAngle_ = undefined;\n    this.rotating_ = false;\n    this.rotationDelta_ = 0.0;\n    if (!this.handlingDownUpSequence) {\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nPinchRotate.prototype.shouldStopEvent = FALSE;\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the wheel/trackpad or pinch gesture ends.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\n * mousewheel zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. The default set of\n * interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {module:ol/interaction/Interaction~DefaultsOptions=} opt_options\n * Defaults options.\n * @return {module:ol/Collection.<module:ol/interaction/Interaction>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      kinetic: kinetic\n    }));\n  }\n\n  const pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../util.js';\nimport TileImage from '../source/TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {boolean} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|module:ol/size~Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array.<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {module:ol/source/TileImage}\n * @param {module:ol/source/XYZ~Options=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    createXYZ({\n      extent: extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n","/**\n * @module ol/control/Control\n */\nimport {inherits} from '../util.js';\nimport {UNDEFINED} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Element} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(module:ol/MapEvent)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {Element|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/control/Control~Options} options Control options.\n * @api\n */\nconst Control = function(options) {\n\n  BaseObject.call(this);\n\n  /**\n   * @protected\n   * @type {Element}\n   */\n  this.element = options.element ? options.element : null;\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.target_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/PluggableMap}\n   */\n  this.map_ = null;\n\n  /**\n   * @protected\n   * @type {!Array.<module:ol/events~EventsKey>}\n   */\n  this.listenerKeys = [];\n\n  /**\n   * @type {function(module:ol/MapEvent)}\n   */\n  this.render = options.render ? options.render : UNDEFINED;\n\n  if (options.target) {\n    this.setTarget(options.target);\n  }\n\n};\n\ninherits(Control, BaseObject);\n\n\n/**\n * @inheritDoc\n */\nControl.prototype.disposeInternal = function() {\n  removeNode(this.element);\n  BaseObject.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Get the map associated with this control.\n * @return {module:ol/PluggableMap} Map.\n * @api\n */\nControl.prototype.getMap = function() {\n  return this.map_;\n};\n\n\n/**\n * Remove the control from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {module:ol/PluggableMap} map Map.\n * @api\n */\nControl.prototype.setMap = function(map) {\n  if (this.map_) {\n    removeNode(this.element);\n  }\n  for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n    unlistenByKey(this.listenerKeys[i]);\n  }\n  this.listenerKeys.length = 0;\n  this.map_ = map;\n  if (this.map_) {\n    const target = this.target_ ?\n      this.target_ : map.getOverlayContainerStopEvent();\n    target.appendChild(this.element);\n    if (this.render !== UNDEFINED) {\n      this.listenerKeys.push(listen(map,\n        MapEventType.POSTRENDER, this.render, this));\n    }\n    map.render();\n  }\n};\n\n\n/**\n * This function is used to set a target element for the control. It has no\n * effect if it is called after the control has been added to the map (i.e.\n * after `setMap` is called on the control). If no `target` is set in the\n * options passed to the control constructor and if `setTarget` is not called\n * then the control is added to the map's overlay container.\n * @param {Element|string} target Target.\n * @api\n */\nControl.prototype.setTarget = function(target) {\n  this.target_ = typeof target === 'string' ?\n    document.getElementById(target) :\n    target;\n};\nexport default Control;\n","/**\n * @module ol/Collection\n */\nimport {inherits} from './util.js';\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/CollectionEventType} type Type.\n * @param {*=} opt_element Element.\n */\nexport const CollectionEvent = function(type, opt_element) {\n\n  Event.call(this, type);\n\n  /**\n   * The element that is added to or removed from the collection.\n   * @type {*}\n   * @api\n   */\n  this.element = opt_element;\n\n};\n\ninherits(CollectionEvent, Event);\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @constructor\n * @extends {module:ol/Object}\n * @fires module:ol/Collection~CollectionEvent\n * @param {Array.<T>=} opt_array Array.\n * @param {module:ol/Collection~Options=} opt_options Collection options.\n * @template T\n * @api\n */\nconst Collection = function(opt_array, opt_options) {\n\n  BaseObject.call(this);\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.unique_ = !!options.unique;\n\n  /**\n   * @private\n   * @type {!Array.<T>}\n   */\n  this.array_ = opt_array ? opt_array : [];\n\n  if (this.unique_) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      this.assertUnique_(this.array_[i], i);\n    }\n  }\n\n  this.updateLength_();\n\n};\n\ninherits(Collection, BaseObject);\n\n\n/**\n * Remove all elements from the collection.\n * @api\n */\nCollection.prototype.clear = function() {\n  while (this.getLength() > 0) {\n    this.pop();\n  }\n};\n\n\n/**\n * Add elements to the collection.  This pushes each item in the provided array\n * to the end of the collection.\n * @param {!Array.<T>} arr Array.\n * @return {module:ol/Collection.<T>} This collection.\n * @api\n */\nCollection.prototype.extend = function(arr) {\n  for (let i = 0, ii = arr.length; i < ii; ++i) {\n    this.push(arr[i]);\n  }\n  return this;\n};\n\n\n/**\n * Iterate over each element, calling the provided callback.\n * @param {function(T, number, Array.<T>): *} f The function to call\n *     for every element. This function takes 3 arguments (the element, the\n *     index and the array). The return value is ignored.\n * @api\n */\nCollection.prototype.forEach = function(f) {\n  const array = this.array_;\n  for (let i = 0, ii = array.length; i < ii; ++i) {\n    f(array[i], i, array);\n  }\n};\n\n\n/**\n * Get a reference to the underlying Array object. Warning: if the array\n * is mutated, no events will be dispatched by the collection, and the\n * collection's \"length\" property won't be in sync with the actual length\n * of the array.\n * @return {!Array.<T>} Array.\n * @api\n */\nCollection.prototype.getArray = function() {\n  return this.array_;\n};\n\n\n/**\n * Get the element at the provided index.\n * @param {number} index Index.\n * @return {T} Element.\n * @api\n */\nCollection.prototype.item = function(index) {\n  return this.array_[index];\n};\n\n\n/**\n * Get the length of this collection.\n * @return {number} The length of the array.\n * @observable\n * @api\n */\nCollection.prototype.getLength = function() {\n  return /** @type {number} */ (this.get(Property.LENGTH));\n};\n\n\n/**\n * Insert an element at the provided index.\n * @param {number} index Index.\n * @param {T} elem Element.\n * @api\n */\nCollection.prototype.insertAt = function(index, elem) {\n  if (this.unique_) {\n    this.assertUnique_(elem);\n  }\n  this.array_.splice(index, 0, elem);\n  this.updateLength_();\n  this.dispatchEvent(\n    new CollectionEvent(CollectionEventType.ADD, elem));\n};\n\n\n/**\n * Remove the last element of the collection and return it.\n * Return `undefined` if the collection is empty.\n * @return {T|undefined} Element.\n * @api\n */\nCollection.prototype.pop = function() {\n  return this.removeAt(this.getLength() - 1);\n};\n\n\n/**\n * Insert the provided element at the end of the collection.\n * @param {T} elem Element.\n * @return {number} New length of the collection.\n * @api\n */\nCollection.prototype.push = function(elem) {\n  if (this.unique_) {\n    this.assertUnique_(elem);\n  }\n  const n = this.getLength();\n  this.insertAt(n, elem);\n  return this.getLength();\n};\n\n\n/**\n * Remove the first occurrence of an element from the collection.\n * @param {T} elem Element.\n * @return {T|undefined} The removed element or undefined if none found.\n * @api\n */\nCollection.prototype.remove = function(elem) {\n  const arr = this.array_;\n  for (let i = 0, ii = arr.length; i < ii; ++i) {\n    if (arr[i] === elem) {\n      return this.removeAt(i);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Remove the element at the provided index and return it.\n * Return `undefined` if the collection does not contain this index.\n * @param {number} index Index.\n * @return {T|undefined} Value.\n * @api\n */\nCollection.prototype.removeAt = function(index) {\n  const prev = this.array_[index];\n  this.array_.splice(index, 1);\n  this.updateLength_();\n  this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n  return prev;\n};\n\n\n/**\n * Set the element at the provided index.\n * @param {number} index Index.\n * @param {T} elem Element.\n * @api\n */\nCollection.prototype.setAt = function(index, elem) {\n  const n = this.getLength();\n  if (index < n) {\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev));\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem));\n  } else {\n    for (let j = n; j < index; ++j) {\n      this.insertAt(j, undefined);\n    }\n    this.insertAt(index, elem);\n  }\n};\n\n\n/**\n * @private\n */\nCollection.prototype.updateLength_ = function() {\n  this.set(Property.LENGTH, this.array_.length);\n};\n\n\n/**\n * @private\n * @param {T} elem Element.\n * @param {number=} opt_except Optional index to ignore.\n */\nCollection.prototype.assertUnique_ = function(elem, opt_except) {\n  for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n    if (this.array_[i] === elem && i !== opt_except) {\n      throw new AssertionError(58);\n    }\n  }\n};\n\nexport default Collection;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {inherits} from '../util.js';\nimport {FALSE} from '../functions.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from '../geom/flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/geom/Geometry}\n * @api\n */\nconst SimpleGeometry = function() {\n\n  Geometry.call(this);\n\n  /**\n   * @protected\n   * @type {module:ol/geom/GeometryLayout}\n   */\n  this.layout = GeometryLayout.XY;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.stride = 2;\n\n  /**\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.flatCoordinates = null;\n\n};\n\ninherits(SimpleGeometry, Geometry);\n\n\n/**\n * @param {number} stride Stride.\n * @return {module:ol/geom/GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {module:ol/geom/GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @inheritDoc\n */\nSimpleGeometry.prototype.containsXY = FALSE;\n\n\n/**\n * @inheritDoc\n */\nSimpleGeometry.prototype.computeExtent = function(extent) {\n  return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n    0, this.flatCoordinates.length, this.stride, extent);\n};\n\n\n/**\n * @abstract\n * @return {Array} Coordinates.\n */\nSimpleGeometry.prototype.getCoordinates = function() {};\n\n\n/**\n * Return the first coordinate of the geometry.\n * @return {module:ol/coordinate~Coordinate} First coordinate.\n * @api\n */\nSimpleGeometry.prototype.getFirstCoordinate = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Flat coordinates.\n */\nSimpleGeometry.prototype.getFlatCoordinates = function() {\n  return this.flatCoordinates;\n};\n\n\n/**\n * Return the last coordinate of the geometry.\n * @return {module:ol/coordinate~Coordinate} Last point.\n * @api\n */\nSimpleGeometry.prototype.getLastCoordinate = function() {\n  return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n};\n\n\n/**\n * Return the {@link module:ol/geom/GeometryLayout~GeometryLayout layout} of the geometry.\n * @return {module:ol/geom/GeometryLayout} Layout.\n * @api\n */\nSimpleGeometry.prototype.getLayout = function() {\n  return this.layout;\n};\n\n\n/**\n * @inheritDoc\n */\nSimpleGeometry.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  // If squaredTolerance is negative or if we know that simplification will not\n  // have any effect then just return this.\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  const key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    const simplifiedGeometry =\n        this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      this.simplifiedGeometryCache[key] = simplifiedGeometry;\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @param {number} squaredTolerance Squared tolerance.\n * @return {module:ol/geom/SimpleGeometry} Simplified geometry.\n * @protected\n */\nSimpleGeometry.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  return this;\n};\n\n\n/**\n * @return {number} Stride.\n */\nSimpleGeometry.prototype.getStride = function() {\n  return this.stride;\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @protected\n */\nSimpleGeometry.prototype.setFlatCoordinatesInternal = function(layout, flatCoordinates) {\n  this.stride = getStrideForLayout(layout);\n  this.layout = layout;\n  this.flatCoordinates = flatCoordinates;\n};\n\n\n/**\n * @abstract\n * @param {Array} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n */\nSimpleGeometry.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout|undefined} layout Layout.\n * @param {Array} coordinates Coordinates.\n * @param {number} nesting Nesting.\n * @protected\n */\nSimpleGeometry.prototype.setLayout = function(layout, coordinates, nesting) {\n  /** @type {number} */\n  let stride;\n  if (layout) {\n    stride = getStrideForLayout(layout);\n  } else {\n    for (let i = 0; i < nesting; ++i) {\n      if (coordinates.length === 0) {\n        this.layout = GeometryLayout.XY;\n        this.stride = 2;\n        return;\n      } else {\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n    }\n    stride = coordinates.length;\n    layout = getLayoutForStride(stride);\n  }\n  this.layout = layout;\n  this.stride = stride;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nSimpleGeometry.prototype.applyTransform = function(transformFn) {\n  if (this.flatCoordinates) {\n    transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nSimpleGeometry.prototype.rotate = function(angle, anchor) {\n  const flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    const stride = this.getStride();\n    rotate(\n      flatCoordinates, 0, flatCoordinates.length,\n      stride, angle, anchor, flatCoordinates);\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nSimpleGeometry.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  let sy = opt_sy;\n  if (sy === undefined) {\n    sy = sx;\n  }\n  let anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  const flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    const stride = this.getStride();\n    scale(\n      flatCoordinates, 0, flatCoordinates.length,\n      stride, sx, sy, anchor, flatCoordinates);\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nSimpleGeometry.prototype.translate = function(deltaX, deltaY) {\n  const flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    const stride = this.getStride();\n    translate(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      deltaX, deltaY, flatCoordinates);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} simpleGeometry Simple geometry.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z`, `x`, and `y`. `z` is the zoom level.\n * @typedef {Array.<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Tile coordinate.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {module:ol/tilecoord~TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {module:ol/tilecoord~TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  const z = tileCoord[0];\n  const digits = new Array(z);\n  let mask = 1 << (z - 1);\n  let i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {!module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const extent = tileGrid.getExtent();\n  let tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array.<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {module:ol/size~Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {module:ol/size~Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {module:ol/size~Size} size Size.\n * @param {number} ratio Ratio.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `module:ol/size~Size` array for the passed in number (meaning: square) or\n * `module:ol/size~Size` array.\n * (meaning: non-square),\n * @param {number|module:ol/size~Size} size Width and height.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/LayerType\n */\n\n/**\n * A layer type used when creating layer renderers.\n * @enum {string}\n */\nexport default {\n  IMAGE: 'IMAGE',\n  TILE: 'TILE',\n  VECTOR_TILE: 'VECTOR_TILE',\n  VECTOR: 'VECTOR'\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array.<number>} anchor Rotation anchor point.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array.<number>} anchor Scale anchor point.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection~CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection~CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * @see http://mapbox.com/developers/api/\n */\n\nimport {inherits} from '../util.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from '../source/State.js';\nimport TileImage from '../source/TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {boolean} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {tileJSON} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n *\n * @constructor\n * @extends {module:ol/source/TileImage}\n * @param {module:ol/source/TileJSON~Options=} options TileJSON options.\n * @api\n */\nconst TileJSON = function(options) {\n\n  /**\n   * @type {TileJSON}\n   * @private\n   */\n  this.tileJSON_ = null;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    projection: getProjection('EPSG:3857'),\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    state: SourceState.LOADING,\n    tileLoadFunction: options.tileLoadFunction,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  if (options.url) {\n    if (options.jsonp) {\n      requestJSONP(options.url, this.handleTileJSONResponse.bind(this),\n        this.handleTileJSONError.bind(this));\n    } else {\n      const client = new XMLHttpRequest();\n      client.addEventListener('load', this.onXHRLoad_.bind(this));\n      client.addEventListener('error', this.onXHRError_.bind(this));\n      client.open('GET', options.url);\n      client.send();\n    }\n  } else if (options.tileJSON) {\n    this.handleTileJSONResponse(options.tileJSON);\n  } else {\n    assert(false, 51); // Either `url` or `tileJSON` options must be provided\n  }\n\n};\n\ninherits(TileJSON, TileImage);\n\n\n/**\n * @private\n * @param {Event} event The load event.\n */\nTileJSON.prototype.onXHRLoad_ = function(event) {\n  const client = /** @type {XMLHttpRequest} */ (event.target);\n  // status will be 0 for file:// urls\n  if (!client.status || client.status >= 200 && client.status < 300) {\n    let response;\n    try {\n      response = /** @type {TileJSON} */(JSON.parse(client.responseText));\n    } catch (err) {\n      this.handleTileJSONError();\n      return;\n    }\n    this.handleTileJSONResponse(response);\n  } else {\n    this.handleTileJSONError();\n  }\n};\n\n\n/**\n * @private\n * @param {Event} event The error event.\n */\nTileJSON.prototype.onXHRError_ = function(event) {\n  this.handleTileJSONError();\n};\n\n\n/**\n * @return {TileJSON} The tilejson object.\n * @api\n */\nTileJSON.prototype.getTileJSON = function() {\n  return this.tileJSON_;\n};\n\n\n/**\n * @protected\n * @param {TileJSON} tileJSON Tile JSON.\n */\nTileJSON.prototype.handleTileJSONResponse = function(tileJSON) {\n\n  const epsg4326Projection = getProjection('EPSG:4326');\n\n  const sourceProjection = this.getProjection();\n  let extent;\n  if (tileJSON.bounds !== undefined) {\n    const transform = getTransformFromProjections(\n      epsg4326Projection, sourceProjection);\n    extent = applyTransform(tileJSON.bounds, transform);\n  }\n\n  const minZoom = tileJSON.minzoom || 0;\n  const maxZoom = tileJSON.maxzoom || 22;\n  const tileGrid = createXYZ({\n    extent: extentFromProjection(sourceProjection),\n    maxZoom: maxZoom,\n    minZoom: minZoom\n  });\n  this.tileGrid = tileGrid;\n\n  this.tileUrlFunction = createFromTemplates(tileJSON.tiles, tileGrid);\n\n  if (tileJSON.attribution !== undefined && !this.getAttributions()) {\n    const attributionExtent = extent !== undefined ?\n      extent : epsg4326Projection.getExtent();\n\n    this.setAttributions(function(frameState) {\n      if (intersects(attributionExtent, frameState.extent)) {\n        return [tileJSON.attribution];\n      }\n      return null;\n    });\n\n  }\n  this.tileJSON_ = tileJSON;\n  this.setState(SourceState.READY);\n\n};\n\n\n/**\n * @protected\n */\nTileJSON.prototype.handleTileJSONError = function() {\n  this.setState(SourceState.ERROR);\n};\nexport default TileJSON;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object.<module:ol/proj/Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {assign} from './obj.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/tilegrid/TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {module:ol/extent/Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!module:ol/tilegrid/TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|module:ol/size~Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {module:ol/tilegrid~XYZOptions=} opt_options Tile grid options.\n * @return {!module:ol/tilegrid/TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const options = /** @type {module:ol/tilegrid/TileGrid~Options} */ ({});\n  assign(options, opt_options !== undefined ?\n    opt_options : /** @type {module:ol/tilegrid~XYZOptions} */ ({}));\n  if (options.extent === undefined) {\n    options.extent = getProjection('EPSG:3857').getExtent();\n  }\n  options.resolutions = resolutionsFromExtent(\n    options.extent, options.maxZoom, options.tileSize);\n  delete options.maxZoom;\n\n  return new TileGrid(options);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array.<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  const maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  const maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {module:ol/extent/Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!module:ol/tilegrid/TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from '../proj/Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {module:ol/proj/Units|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {module:ol/extent~Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {module:ol/extent~Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, module:ol/coordinate~Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{module:ol/coordinate~Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use proj4js, aliases can be added using `proj4.defs()`; see\n * [documentation](https://github.com/proj4js/proj4js). To set an alternative\n * namespace for proj4, use {@link module:ol/proj~setProj4}.\n *\n * @constructor\n * @param {module:ol/proj/Projection~Options} options Projection options.\n * @struct\n * @api\n */\nconst Projection = function(options) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this.code_ = options.code;\n\n  /**\n   * Units of projected coordinates. When set to `TILE_PIXELS`, a\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\n   * tile.\n   * @private\n   * @type {module:ol/proj/Units}\n   */\n  this.units_ = /** @type {module:ol/proj/Units} */ (options.units);\n\n  /**\n   * Validity extent of the projection in projected coordinates. For projections\n   * with `TILE_PIXELS` units, this is the extent of the tile in\n   * tile pixel space.\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = options.extent !== undefined ? options.extent : null;\n\n  /**\n   * Extent of the world in EPSG:4326. For projections with\n   * `TILE_PIXELS` units, this is the extent of the tile in\n   * projected coordinate space.\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.worldExtent_ = options.worldExtent !== undefined ?\n    options.worldExtent : null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.axisOrientation_ = options.axisOrientation !== undefined ?\n    options.axisOrientation : 'enu';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.global_ = options.global !== undefined ? options.global : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.canWrapX_ = !!(this.global_ && this.extent_);\n\n  /**\n   * @private\n   * @type {function(number, module:ol/coordinate~Coordinate):number|undefined}\n   */\n  this.getPointResolutionFunc_ = options.getPointResolution;\n\n  /**\n   * @private\n   * @type {module:ol/tilegrid/TileGrid}\n   */\n  this.defaultTileGrid_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.metersPerUnit_ = options.metersPerUnit;\n};\n\n\n/**\n * @return {boolean} The projection is suitable for wrapping the x-axis\n */\nProjection.prototype.canWrapX = function() {\n  return this.canWrapX_;\n};\n\n\n/**\n * Get the code for this projection, e.g. 'EPSG:4326'.\n * @return {string} Code.\n * @api\n */\nProjection.prototype.getCode = function() {\n  return this.code_;\n};\n\n\n/**\n * Get the validity extent for this projection.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nProjection.prototype.getExtent = function() {\n  return this.extent_;\n};\n\n\n/**\n * Get the units of this projection.\n * @return {module:ol/proj/Units} Units.\n * @api\n */\nProjection.prototype.getUnits = function() {\n  return this.units_;\n};\n\n\n/**\n * Get the amount of meters per unit of this projection.  If the projection is\n * not configured with `metersPerUnit` or a units identifier, the return is\n * `undefined`.\n * @return {number|undefined} Meters.\n * @api\n */\nProjection.prototype.getMetersPerUnit = function() {\n  return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n};\n\n\n/**\n * Get the world extent for this projection.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nProjection.prototype.getWorldExtent = function() {\n  return this.worldExtent_;\n};\n\n\n/**\n * Get the axis orientation of this projection.\n * Example values are:\n * enu - the default easting, northing, elevation.\n * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n *     or south orientated transverse mercator.\n * wnu - westing, northing, up - some planetary coordinate systems have\n *     \"west positive\" coordinate systems\n * @return {string} Axis orientation.\n * @api\n */\nProjection.prototype.getAxisOrientation = function() {\n  return this.axisOrientation_;\n};\n\n\n/**\n * Is this projection a global projection which spans the whole world?\n * @return {boolean} Whether the projection is global.\n * @api\n */\nProjection.prototype.isGlobal = function() {\n  return this.global_;\n};\n\n\n/**\n* Set if the projection is a global projection which spans the whole world\n* @param {boolean} global Whether the projection is global.\n* @api\n*/\nProjection.prototype.setGlobal = function(global) {\n  this.global_ = global;\n  this.canWrapX_ = !!(global && this.extent_);\n};\n\n\n/**\n * @return {module:ol/tilegrid/TileGrid} The default tile grid.\n */\nProjection.prototype.getDefaultTileGrid = function() {\n  return this.defaultTileGrid_;\n};\n\n\n/**\n * @param {module:ol/tilegrid/TileGrid} tileGrid The default tile grid.\n */\nProjection.prototype.setDefaultTileGrid = function(tileGrid) {\n  this.defaultTileGrid_ = tileGrid;\n};\n\n\n/**\n * Set the validity extent for this projection.\n * @param {module:ol/extent~Extent} extent Extent.\n * @api\n */\nProjection.prototype.setExtent = function(extent) {\n  this.extent_ = extent;\n  this.canWrapX_ = !!(this.global_ && extent);\n};\n\n\n/**\n * Set the world extent for this projection.\n * @param {module:ol/extent~Extent} worldExtent World extent\n *     [minlon, minlat, maxlon, maxlat].\n * @api\n */\nProjection.prototype.setWorldExtent = function(worldExtent) {\n  this.worldExtent_ = worldExtent;\n};\n\n\n/**\n * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n * for this projection.\n * @param {function(number, module:ol/coordinate~Coordinate):number} func Function\n * @api\n */\nProjection.prototype.setGetPointResolution = function(func) {\n  this.getPointResolutionFunc_ = func;\n};\n\n\n/**\n * Get the custom point resolution function for this projection (if set).\n * @return {function(number, module:ol/coordinate~Coordinate):number|undefined} The custom point\n * resolution function (if set).\n */\nProjection.prototype.getPointResolutionFunc = function() {\n  return this.getPointResolutionFunc_;\n};\nexport default Projection;\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\nimport {inherits} from '../util.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from '../reproj/Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : module:ol/Tile} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n * @constructor\n * @extends {module:ol/Tile}\n * @param {module:ol/proj/Projection} sourceProj Source projection.\n * @param {module:ol/tilegrid/TileGrid} sourceTileGrid Source tile grid.\n * @param {module:ol/proj/Projection} targetProj Target projection.\n * @param {module:ol/tilegrid/TileGrid} targetTileGrid Target tile grid.\n * @param {module:ol/tilecoord~TileCoord} tileCoord Coordinate of the tile.\n * @param {module:ol/tilecoord~TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} gutter Gutter of the source tiles.\n * @param {module:ol/reproj/Tile~FunctionType} getTileFunction\n *     Function returning source tiles (z, x, y, pixelRatio).\n * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n */\nconst ReprojTile = function(sourceProj, sourceTileGrid,\n  targetProj, targetTileGrid, tileCoord, wrappedTileCoord,\n  pixelRatio, gutter, getTileFunction,\n  opt_errorThreshold, opt_renderEdges) {\n  Tile.call(this, tileCoord, TileState.IDLE);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = gutter;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/tilegrid/TileGrid}\n   */\n  this.sourceTileGrid_ = sourceTileGrid;\n\n  /**\n   * @private\n   * @type {module:ol/tilegrid/TileGrid}\n   */\n  this.targetTileGrid_ = targetTileGrid;\n\n  /**\n   * @private\n   * @type {module:ol/tilecoord~TileCoord}\n   */\n  this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n  /**\n   * @private\n   * @type {!Array.<module:ol/Tile>}\n   */\n  this.sourceTiles_ = [];\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.sourcesListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.sourceZ_ = 0;\n\n  const targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n  const maxTargetExtent = this.targetTileGrid_.getExtent();\n  let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n  const limitedTargetExtent = maxTargetExtent ?\n    getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n  if (getArea(limitedTargetExtent) === 0) {\n    // Tile is completely outside range -> EMPTY\n    // TODO: is it actually correct that the source even creates the tile ?\n    this.state = TileState.EMPTY;\n    return;\n  }\n\n  const sourceProjExtent = sourceProj.getExtent();\n  if (sourceProjExtent) {\n    if (!maxSourceExtent) {\n      maxSourceExtent = sourceProjExtent;\n    } else {\n      maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n    }\n  }\n\n  const targetResolution = targetTileGrid.getResolution(\n    this.wrappedTileCoord_[0]);\n\n  const targetCenter = getCenter(limitedTargetExtent);\n  const sourceResolution = calculateSourceResolution(\n    sourceProj, targetProj, targetCenter, targetResolution);\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    // invalid sourceResolution -> EMPTY\n    // probably edges of the projections when no extent is defined\n    this.state = TileState.EMPTY;\n    return;\n  }\n\n  const errorThresholdInPixels = opt_errorThreshold !== undefined ?\n    opt_errorThreshold : ERROR_THRESHOLD;\n\n  /**\n   * @private\n   * @type {!module:ol/reproj/Triangulation}\n   */\n  this.triangulation_ = new Triangulation(\n    sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n    sourceResolution * errorThresholdInPixels);\n\n  if (this.triangulation_.getTriangles().length === 0) {\n    // no valid triangles -> EMPTY\n    this.state = TileState.EMPTY;\n    return;\n  }\n\n  this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n  let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n  if (maxSourceExtent) {\n    if (sourceProj.canWrapX()) {\n      sourceExtent[1] = clamp(\n        sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n      sourceExtent[3] = clamp(\n        sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n    } else {\n      sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n    }\n  }\n\n  if (!getArea(sourceExtent)) {\n    this.state = TileState.EMPTY;\n  } else {\n    const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n      sourceExtent, this.sourceZ_);\n\n    for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n      for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n        const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n        if (tile) {\n          this.sourceTiles_.push(tile);\n        }\n      }\n    }\n\n    if (this.sourceTiles_.length === 0) {\n      this.state = TileState.EMPTY;\n    }\n  }\n};\n\ninherits(ReprojTile, Tile);\n\n\n/**\n * @inheritDoc\n */\nReprojTile.prototype.disposeInternal = function() {\n  if (this.state == TileState.LOADING) {\n    this.unlistenSources_();\n  }\n  Tile.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Get the HTML Canvas element for this tile.\n * @return {HTMLCanvasElement} Canvas.\n */\nReprojTile.prototype.getImage = function() {\n  return this.canvas_;\n};\n\n\n/**\n * @private\n */\nReprojTile.prototype.reproject_ = function() {\n  const sources = [];\n  this.sourceTiles_.forEach(function(tile, i, arr) {\n    if (tile && tile.getState() == TileState.LOADED) {\n      sources.push({\n        extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n        image: tile.getImage()\n      });\n    }\n  }.bind(this));\n  this.sourceTiles_.length = 0;\n\n  if (sources.length === 0) {\n    this.state = TileState.ERROR;\n  } else {\n    const z = this.wrappedTileCoord_[0];\n    const size = this.targetTileGrid_.getTileSize(z);\n    const width = typeof size === 'number' ? size : size[0];\n    const height = typeof size === 'number' ? size : size[1];\n    const targetResolution = this.targetTileGrid_.getResolution(z);\n    const sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_);\n    this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n      sourceResolution, this.sourceTileGrid_.getExtent(),\n      targetResolution, targetExtent, this.triangulation_, sources,\n      this.gutter_, this.renderEdges_);\n\n    this.state = TileState.LOADED;\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nReprojTile.prototype.load = function() {\n  if (this.state == TileState.IDLE) {\n    this.state = TileState.LOADING;\n    this.changed();\n\n    let leftToLoad = 0;\n\n    this.sourcesListenerKeys_ = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      const state = tile.getState();\n      if (state == TileState.IDLE || state == TileState.LOADING) {\n        leftToLoad++;\n\n        const sourceListenKey = listen(tile, EventType.CHANGE,\n          function(e) {\n            const state = tile.getState();\n            if (state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY) {\n              unlistenByKey(sourceListenKey);\n              leftToLoad--;\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          }, this);\n        this.sourcesListenerKeys_.push(sourceListenKey);\n      }\n    }.bind(this));\n\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      const state = tile.getState();\n      if (state == TileState.IDLE) {\n        tile.load();\n      }\n    });\n\n    if (leftToLoad === 0) {\n      setTimeout(this.reproject_.bind(this), 0);\n    }\n  }\n};\n\n\n/**\n * @private\n */\nReprojTile.prototype.unlistenSources_ = function() {\n  this.sourcesListenerKeys_.forEach(unlistenByKey);\n  this.sourcesListenerKeys_ = null;\n};\nexport default ReprojTile;\n","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid, inherits} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from '../source/UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {boolean} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/source/State} [state] Source state.\n * @property {module:ol/ImageTile~TileClass} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array.<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @constructor\n * @fires module:ol/source/Tile~TileSourceEvent\n * @extends {module:ol/source/UrlTile}\n * @param {module:ol/source/TileImage~Options=} options Image tile options.\n * @api\n */\nconst TileImage = function(options) {\n\n  UrlTile.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    extent: options.extent,\n    opaque: options.opaque,\n    projection: options.projection,\n    state: options.state,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction ?\n      options.tileLoadFunction : defaultTileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX,\n    transition: options.transition\n  });\n\n  /**\n   * @protected\n   * @type {?string}\n   */\n  this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @protected\n   * @type {function(new: module:ol/ImageTile, module:ol/tilecoord~TileCoord, module:ol/TileState, string,\n   *        ?string, module:ol/Tile~LoadFunction, module:ol/Tile~Options=)}\n   */\n  this.tileClass = options.tileClass !== undefined ?\n    options.tileClass : ImageTile;\n\n  /**\n   * @protected\n   * @type {!Object.<string, module:ol/TileCache>}\n   */\n  this.tileCacheForProjection = {};\n\n  /**\n   * @protected\n   * @type {!Object.<string, module:ol/tilegrid/TileGrid>}\n   */\n  this.tileGridForProjection = {};\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderReprojectionEdges_ = false;\n};\n\ninherits(TileImage, UrlTile);\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.canExpireCache = function() {\n  if (!ENABLE_RASTER_REPROJECTION) {\n    return UrlTile.prototype.canExpireCache.call(this);\n  }\n  if (this.tileCache.canExpireCache()) {\n    return true;\n  } else {\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.expireCache = function(projection, usedTiles) {\n  if (!ENABLE_RASTER_REPROJECTION) {\n    UrlTile.prototype.expireCache.call(this, projection, usedTiles);\n    return;\n  }\n  const usedTileCache = this.getTileCacheForProjection(projection);\n\n  this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n  for (const id in this.tileCacheForProjection) {\n    const tileCache = this.tileCacheForProjection[id];\n    tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getGutter = function(projection) {\n  if (ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n    return 0;\n  } else {\n    return this.getGutterInternal();\n  }\n};\n\n\n/**\n * @protected\n * @return {number} Gutter.\n */\nTileImage.prototype.getGutterInternal = function() {\n  return 0;\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getOpaque = function(projection) {\n  if (ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n    return false;\n  } else {\n    return UrlTile.prototype.getOpaque.call(this, projection);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getTileGridForProjection = function(projection) {\n  if (!ENABLE_RASTER_REPROJECTION) {\n    return UrlTile.prototype.getTileGridForProjection.call(this, projection);\n  }\n  const thisProj = this.getProjection();\n  if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n    return this.tileGrid;\n  } else {\n    const projKey = getUid(projection).toString();\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n    }\n    return (\n      /** @type {!module:ol/tilegrid/TileGrid} */ (this.tileGridForProjection[projKey])\n    );\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getTileCacheForProjection = function(projection) {\n  if (!ENABLE_RASTER_REPROJECTION) {\n    return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\n  }\n  const thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n    return this.tileCache;\n  } else {\n    const projKey = getUid(projection).toString();\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n};\n\n\n/**\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {string} key The key set on the tile.\n * @return {!module:ol/Tile} Tile.\n * @private\n */\nTileImage.prototype.createTile_ = function(z, x, y, pixelRatio, projection, key) {\n  const tileCoord = [z, x, y];\n  const urlTileCoord = this.getTileCoordForTileUrlFunction(\n    tileCoord, projection);\n  const tileUrl = urlTileCoord ?\n    this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n  const tile = new this.tileClass(\n    tileCoord,\n    tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n    tileUrl !== undefined ? tileUrl : '',\n    this.crossOrigin,\n    this.tileLoadFunction,\n    this.tileOptions);\n  tile.key = key;\n  listen(tile, EventType.CHANGE,\n    this.handleTileChange, this);\n  return tile;\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getTile = function(z, x, y, pixelRatio, projection) {\n  const sourceProjection = /** @type {!module:ol/proj/Projection} */ (this.getProjection());\n  if (!ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n  } else {\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = /** @type {!module:ol/Tile} */ (cache.get(tileCoordKey));\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    } else {\n      const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n      const targetTileGrid = this.getTileGridForProjection(projection);\n      const wrappedTileCoord =\n          this.getTileCoordForTileUrlFunction(tileCoord, projection);\n      const newTile = new ReprojTile(\n        sourceProjection, sourceTileGrid,\n        projection, targetTileGrid,\n        tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n        this.getGutterInternal(),\n        function(z, x, y, pixelRatio) {\n          return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n        }.bind(this), this.reprojectionErrorThreshold_,\n        this.renderReprojectionEdges_);\n      newTile.key = key;\n\n      if (tile) {\n        newTile.interimTile = tile;\n        newTile.refreshInterimChain();\n        cache.replace(tileCoordKey, newTile);\n      } else {\n        cache.set(tileCoordKey, newTile);\n      }\n      return newTile;\n    }\n  }\n};\n\n\n/**\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {number} pixelRatio Pixel ratio.\n * @param {!module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/Tile} Tile.\n * @protected\n */\nTileImage.prototype.getTileInternal = function(z, x, y, pixelRatio, projection) {\n  let tile = null;\n  const tileCoordKey = getKeyZXY(z, x, y);\n  const key = this.getKey();\n  if (!this.tileCache.containsKey(tileCoordKey)) {\n    tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n    this.tileCache.set(tileCoordKey, tile);\n  } else {\n    tile = this.tileCache.get(tileCoordKey);\n    if (tile.key != key) {\n      // The source's params changed. If the tile has an interim tile and if we\n      // can use it then we use it. Otherwise we create a new tile.  In both\n      // cases we attempt to assign an interim tile to the new tile.\n      const interimTile = tile;\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n      //make the new tile the head of the list,\n      if (interimTile.getState() == TileState.IDLE) {\n        //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n        tile.interimTile = interimTile.interimTile;\n      } else {\n        tile.interimTile = interimTile;\n      }\n      tile.refreshInterimChain();\n      this.tileCache.replace(tileCoordKey, tile);\n    }\n  }\n  return tile;\n};\n\n\n/**\n * Sets whether to render reprojection edges or not (usually for debugging).\n * @param {boolean} render Render the edges.\n * @api\n */\nTileImage.prototype.setRenderReprojectionEdges = function(render) {\n  if (!ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render) {\n    return;\n  }\n  this.renderReprojectionEdges_ = render;\n  for (const id in this.tileCacheForProjection) {\n    this.tileCacheForProjection[id].clear();\n  }\n  this.changed();\n};\n\n\n/**\n * Sets the tile grid to use when reprojecting the tiles to the given\n * projection instead of the default tile grid for the projection.\n *\n * This can be useful when the default tile grid cannot be created\n * (e.g. projection has no extent defined) or\n * for optimization reasons (custom tile size, resolutions, ...).\n *\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @param {module:ol/tilegrid/TileGrid} tilegrid Tile grid to use for the projection.\n * @api\n */\nTileImage.prototype.setTileGridForProjection = function(projection, tilegrid) {\n  if (ENABLE_RASTER_REPROJECTION) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj).toString();\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  imageTile.getImage().src = src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\nimport {inherits} from '../util.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getCenter, getIntersection, getHeight, getWidth} from '../extent.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from '../reproj/Triangulation.js';\n\n\n/**\n * @typedef {function(module:ol/extent~Extent, number, number) : module:ol/ImageBase} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n *\n * @constructor\n * @extends {module:ol/ImageBase}\n * @param {module:ol/proj/Projection} sourceProj Source projection (of the data).\n * @param {module:ol/proj/Projection} targetProj Target projection.\n * @param {module:ol/extent~Extent} targetExtent Target extent.\n * @param {number} targetResolution Target resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/reproj/Image~FunctionType} getImageFunction\n *     Function returning source images (extent, resolution, pixelRatio).\n */\nconst ReprojImage = function(sourceProj, targetProj,\n  targetExtent, targetResolution, pixelRatio, getImageFunction) {\n\n  /**\n   * @private\n   * @type {module:ol/proj/Projection}\n   */\n  this.targetProj_ = targetProj;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.maxSourceExtent_ = sourceProj.getExtent();\n  const maxTargetExtent = targetProj.getExtent();\n\n  const limitedTargetExtent = maxTargetExtent ?\n    getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n  const targetCenter = getCenter(limitedTargetExtent);\n  const sourceResolution = calculateSourceResolution(\n    sourceProj, targetProj, targetCenter, targetResolution);\n\n  const errorThresholdInPixels = ERROR_THRESHOLD;\n\n  /**\n   * @private\n   * @type {!module:ol/reproj/Triangulation}\n   */\n  this.triangulation_ = new Triangulation(\n    sourceProj, targetProj, limitedTargetExtent, this.maxSourceExtent_,\n    sourceResolution * errorThresholdInPixels);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.targetResolution_ = targetResolution;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.targetExtent_ = targetExtent;\n\n  const sourceExtent = this.triangulation_.calculateSourceExtent();\n\n  /**\n   * @private\n   * @type {module:ol/ImageBase}\n   */\n  this.sourceImage_ =\n      getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.sourcePixelRatio_ =\n      this.sourceImage_ ? this.sourceImage_.getPixelRatio() : 1;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.sourceListenerKey_ = null;\n\n\n  let state = ImageState.LOADED;\n\n  if (this.sourceImage_) {\n    state = ImageState.IDLE;\n  }\n\n  ImageBase.call(this, targetExtent, targetResolution, this.sourcePixelRatio_, state);\n};\n\ninherits(ReprojImage, ImageBase);\n\n\n/**\n * @inheritDoc\n */\nReprojImage.prototype.disposeInternal = function() {\n  if (this.state == ImageState.LOADING) {\n    this.unlistenSource_();\n  }\n  ImageBase.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\nReprojImage.prototype.getImage = function() {\n  return this.canvas_;\n};\n\n\n/**\n * @return {module:ol/proj/Projection} Projection.\n */\nReprojImage.prototype.getProjection = function() {\n  return this.targetProj_;\n};\n\n\n/**\n * @private\n */\nReprojImage.prototype.reproject_ = function() {\n  const sourceState = this.sourceImage_.getState();\n  if (sourceState == ImageState.LOADED) {\n    const width = getWidth(this.targetExtent_) / this.targetResolution_;\n    const height = getHeight(this.targetExtent_) / this.targetResolution_;\n\n    this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_,\n      this.sourceImage_.getResolution(), this.maxSourceExtent_,\n      this.targetResolution_, this.targetExtent_, this.triangulation_, [{\n        extent: this.sourceImage_.getExtent(),\n        image: this.sourceImage_.getImage()\n      }], 0);\n  }\n  this.state = sourceState;\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nReprojImage.prototype.load = function() {\n  if (this.state == ImageState.IDLE) {\n    this.state = ImageState.LOADING;\n    this.changed();\n\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n      this.reproject_();\n    } else {\n      this.sourceListenerKey_ = listen(this.sourceImage_,\n        EventType.CHANGE, function(e) {\n          const sourceState = this.sourceImage_.getState();\n          if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n            this.unlistenSource_();\n            this.reproject_();\n          }\n        }, this);\n      this.sourceImage_.load();\n    }\n  }\n};\n\n\n/**\n * @private\n */\nReprojImage.prototype.unlistenSource_ = function() {\n  unlistenByKey(/** @type {!module:ol/events~EventsKey} */ (this.sourceListenerKey_));\n  this.sourceListenerKey_ = null;\n};\nexport default ReprojImage;\n","/**\n * @module ol/source/Image\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {inherits} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport {linearFindNearest} from '../array.js';\nimport Event from '../events/Event.js';\nimport {equals} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from '../source/Source.js';\n\n\n/**\n * @enum {string}\n */\nconst ImageSourceEventType = {\n\n  /**\n   * Triggered when an image starts loading.\n   * @event ol/source/Image~ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event ol/source/Image~ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event ol/source/Image~ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror'\n\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type Type.\n * @param {module:ol/Image} image The image.\n */\nconst ImageSourceEvent = function(type, image) {\n\n  Event.call(this, type);\n\n  /**\n   * The image related to the event.\n   * @type {module:ol/Image}\n   * @api\n   */\n  this.image = image;\n\n};\ninherits(ImageSourceEvent, Event);\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {module:ol/extent~Extent} [extent]\n * @property {module:ol/proj~ProjectionLike} projection\n * @property {Array.<number>} [resolutions]\n * @property {module:ol/source/State} [state]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/source/Source}\n * @param {module:ol/source/Image~Options} options Single image source options.\n * @api\n */\nconst ImageSource = function(options) {\n  Source.call(this, {\n    attributions: options.attributions,\n    extent: options.extent,\n    projection: options.projection,\n    state: options.state\n  });\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.resolutions_ = options.resolutions !== undefined ?\n    options.resolutions : null;\n\n\n  /**\n   * @private\n   * @type {module:ol/reproj/Image}\n   */\n  this.reprojectedImage_ = null;\n\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.reprojectedRevision_ = 0;\n};\n\ninherits(ImageSource, Source);\n\n\n/**\n * @return {Array.<number>} Resolutions.\n * @override\n */\nImageSource.prototype.getResolutions = function() {\n  return this.resolutions_;\n};\n\n\n/**\n * @protected\n * @param {number} resolution Resolution.\n * @return {number} Resolution.\n */\nImageSource.prototype.findNearestResolution = function(resolution) {\n  if (this.resolutions_) {\n    const idx = linearFindNearest(this.resolutions_, resolution, 0);\n    resolution = this.resolutions_[idx];\n  }\n  return resolution;\n};\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/ImageBase} Single image.\n */\nImageSource.prototype.getImage = function(extent, resolution, pixelRatio, projection) {\n  const sourceProjection = this.getProjection();\n  if (!ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)) {\n    if (sourceProjection) {\n      projection = sourceProjection;\n    }\n    return this.getImageInternal(extent, resolution, pixelRatio, projection);\n  } else {\n    if (this.reprojectedImage_) {\n      if (this.reprojectedRevision_ == this.getRevision() &&\n          equivalent(\n            this.reprojectedImage_.getProjection(), projection) &&\n          this.reprojectedImage_.getResolution() == resolution &&\n          equals(this.reprojectedImage_.getExtent(), extent)) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new ReprojImage(\n      sourceProjection, projection, extent, resolution, pixelRatio,\n      function(extent, resolution, pixelRatio) {\n        return this.getImageInternal(extent, resolution,\n          pixelRatio, sourceProjection);\n      }.bind(this));\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n};\n\n\n/**\n * @abstract\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/ImageBase} Single image.\n * @protected\n */\nImageSource.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {};\n\n\n/**\n * Handle image change events.\n * @param {module:ol/events/Event} event Event.\n * @protected\n */\nImageSource.prototype.handleImageChange = function(event) {\n  const image = /** @type {module:ol/Image} */ (event.target);\n  switch (image.getState()) {\n    case ImageState.LOADING:\n      this.dispatchEvent(\n        new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART,\n          image));\n      break;\n    case ImageState.LOADED:\n      this.dispatchEvent(\n        new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND,\n          image));\n      break;\n    case ImageState.ERROR:\n      this.dispatchEvent(\n        new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR,\n          image));\n      break;\n    default:\n      // pass\n  }\n};\n\n\n/**\n * Default image load function for image sources that use module:ol/Image~Image image\n * instances.\n * @param {module:ol/Image} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  image.getImage().src = src;\n}\n\n\nexport default ImageSource;\n","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert, 10;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\n var codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS']; \nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      return wkt(code);\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n","import {PJD_3PARAM, PJD_7PARAM, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","import {PJD_3PARAM, PJD_7PARAM, PJD_NODATUM} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n  // Do we need to go through geocentric coordinates?\n  if (source.es === dest.es && source.a === dest.a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source.es, source.a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  return geocentricToGeodetic(point, dest.es, dest.a, dest.b);\n\n}\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if ((Latitude < -HALF_PI) || (Latitude > HALF_PI)) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return null;\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      t = 'x';\n    }\n    else if (i === 1) {\n      v = yin;\n      t = 'y';\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R\n    };\n  }\n  else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords);\n    if (coords.length === 3) {\n      return [transformedArray.x, transformedArray.y, transformedArray.z];\n    }\n    else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  }\n  else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if (key === 'x' || key === 'y') {\n        return;\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  }\n  else {\n    obj = {\n      forward: function(coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function(coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;\n","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (this.es === undefined || this.es <= 0) {\n    throw new Error('incorrect elliptical usage');\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (0.5 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {EPSLN, HALF_PI, FORTPI} from '../constants/values';\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n}\n\nexport function inverse(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.phi0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.phi0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c / Math.sin(c);\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      lat = Math.atan((1 - this.es * F * this.sin_p12 / Math.sin(psi)) * Math.tan(psi) / (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport version from \"./version\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = version;\nincludedProjections(proj4);\nexport default proj4;\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n}","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {toSize, buffer as bufferSize, scale as scaleSize} from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\nimport {compareVersions} from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {Object.<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See http://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {boolean} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/ImageTile~TileClass} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~TileClass}.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used..\n * @property {module:ol/source/WMSServerType|string} [serverType]\n * The type of the remote WMS server. Currently only used when `hidpi` is\n * `true`.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array.<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {module:ol/source/TileImage}\n * @param {module:ol/source/TileWMS~Options=} [opt_options] Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {module:ol/source/WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {module:ol/source/WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/size~Size} tileSize Tile size.\n * @param {module:ol/extent~Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(tileCoordHash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n","/**\n * @module ol/interaction/Draw\n */\nimport {inherits} from '../util.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {getChangeEventType} from '../Object.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {noModifierKeys, always, shiftKeyOnly} from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport {POINTER_TYPE} from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/geom/GeometryType} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * Destination collection for the drawn features.\n * @property {module:ol/source/Vector} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {module:ol/events/condition~Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style for sketch features.\n * @property {module:ol/interaction/Draw~GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {module:ol/events/condition~Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry as\n * arguments, and returns a geometry. The optional existing geometry is the\n * geometry that is returned when the function is called without a second\n * argument.\n * @typedef {function(!Array.<module:ol/coordinate~Coordinate>, module:ol/geom/SimpleGeometry=):\n *     module:ol/geom/SimpleGeometry} GeometryFunction\n */\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nconst Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event module:ol/interaction/Draw~DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event module:ol/interaction/Draw~DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/interaction/Draw~DrawEventType} type Type.\n * @param {module:ol/Feature} feature The feature drawn.\n */\nconst DrawEvent = function(type, feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being drawn.\n   * @type {module:ol/Feature}\n   * @api\n   */\n  this.feature = feature;\n\n};\n\ninherits(DrawEvent, Event);\n\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @fires module:ol/interaction/Draw~DrawEvent\n * @param {module:ol/interaction/Draw~Options} options Options.\n * @api\n */\nconst Draw = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleEvent: handleEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandle_ = false;\n\n  /**\n   * @type {module:ol~Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.downTimeout_;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.lastDragTime_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.freehand_ = false;\n\n  /**\n   * Target source for drawn features.\n   * @type {module:ol/source/Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * Target collection for drawn features.\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * Pixel distance for snapping.\n   * @type {number}\n   * @private\n   */\n  this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n  /**\n   * Geometry type.\n   * @type {module:ol/geom/GeometryType}\n   * @private\n   */\n  this.type_ = /** @type {module:ol/geom/GeometryType} */ (options.type);\n\n  /**\n   * Drawing mode (derived from geometry type.\n   * @type {module:ol/interaction/Draw~Mode}\n   * @private\n   */\n  this.mode_ = getMode(this.type_);\n\n  /**\n   * Stop click, singleclick, and doubleclick events from firing during drawing.\n   * Default is `false`.\n   * @type {boolean}\n   * @private\n   */\n  this.stopClick_ = !!options.stopClick;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.mode_ === Mode.POLYGON ? 3 : 2);\n\n  /**\n   * The number of points that can be drawn before a polygon ring or line string\n   * is finished. The default is no restriction.\n   * @type {number}\n   * @private\n   */\n  this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n  /**\n   * A function to decide if a potential finish coordinate is permissible\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n  let geometryFunction = options.geometryFunction;\n  if (!geometryFunction) {\n    if (this.type_ === GeometryType.CIRCLE) {\n      /**\n       * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates\n       *     The coordinates.\n       * @param {module:ol/geom/SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {module:ol/geom/SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        const circle = opt_geometry ? /** @type {module:ol/geom/Circle} */ (opt_geometry) :\n          new Circle([NaN, NaN]);\n        const squaredLength = squaredCoordinateDistance(\n          coordinates[0], coordinates[1]);\n        circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n        return circle;\n      };\n    } else {\n      let Constructor;\n      const mode = this.mode_;\n      if (mode === Mode.POINT) {\n        Constructor = Point;\n      } else if (mode === Mode.LINE_STRING) {\n        Constructor = LineString;\n      } else if (mode === Mode.POLYGON) {\n        Constructor = Polygon;\n      }\n      /**\n       * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates\n       *     The coordinates.\n       * @param {module:ol/geom/SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {module:ol/geom/SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        let geometry = opt_geometry;\n        if (geometry) {\n          if (mode === Mode.POLYGON) {\n            if (coordinates[0].length) {\n              // Add a closing coordinate to match the first\n              geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            } else {\n              geometry.setCoordinates([]);\n            }\n          } else {\n            geometry.setCoordinates(coordinates);\n          }\n        } else {\n          geometry = new Constructor(coordinates);\n        }\n        return geometry;\n      };\n    }\n  }\n\n  /**\n   * @type {module:ol/interaction/Draw~GeometryFunction}\n   * @private\n   */\n  this.geometryFunction_ = geometryFunction;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n  /**\n   * Finish coordinate for the feature (first point for polygons, last point for\n   * linestrings).\n   * @type {module:ol/coordinate~Coordinate}\n   * @private\n   */\n  this.finishCoordinate_ = null;\n\n  /**\n   * Sketch feature.\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Sketch coordinates. Used when drawing a line or polygon.\n   * @type {module:ol/coordinate~Coordinate|Array.<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>}\n   * @private\n   */\n  this.sketchCoords_ = null;\n\n  /**\n   * Sketch line. Used when drawing polygon.\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.sketchLine_ = null;\n\n  /**\n   * Sketch line coordinates. Used when drawing a polygon or circle.\n   * @type {Array.<module:ol/coordinate~Coordinate>}\n   * @private\n   */\n  this.sketchLineCoords_ = null;\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = options.clickTolerance ?\n    options.clickTolerance * options.clickTolerance : 36;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {module:ol/layer/Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      getDefaultStyleFunction(),\n    updateWhileInteracting: true\n  });\n\n  /**\n   * Name of the geometry attribute for newly created features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.freehandCondition_;\n  if (options.freehand) {\n    this.freehandCondition_ = always;\n  } else {\n    this.freehandCondition_ = options.freehandCondition ?\n      options.freehandCondition : shiftKeyOnly;\n  }\n\n  listen(this,\n    getChangeEventType(InteractionProperty.ACTIVE),\n    this.updateState_, this);\n\n};\n\ninherits(Draw, PointerInteraction);\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.setMap = function(map) {\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {module:ol/MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Draw}\n * @api\n */\nexport function handleEvent(event) {\n  if (event.originalEvent.type === EventType.CONTEXTMENU) {\n    // Avoid context menu for long taps when drawing on mobile\n    event.preventDefault();\n  }\n  this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n  let move = event.type === MapBrowserEventType.POINTERMOVE;\n  let pass = true;\n  if (this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n    const now = Date.now();\n    if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n      this.downPx_ = event.pixel;\n      this.shouldHandle_ = !this.freehand_;\n      move = true;\n    } else {\n      this.lastDragTime_ = undefined;\n    }\n    if (this.shouldHandle_ && this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n  }\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (move) {\n    pass = event.type === MapBrowserEventType.POINTERMOVE;\n    if (pass && this.freehand_) {\n      pass = this.handlePointerMove_(event);\n    } else if (event.pointerEvent.pointerType == POINTER_TYPE ||\n        (event.type === MapBrowserEventType.POINTERDRAG && !this.downTimeout_)) {\n      this.handlePointerMove_(event);\n    }\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n\n  return handlePointerEvent.call(this, event) && pass;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Draw}\n */\nfunction handleDownEvent(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(function() {\n      this.handlePointerMove_(new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, event.frameState));\n    }.bind(this), this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Draw}\n */\nfunction handleUpEvent(event) {\n  let pass = true;\n\n  if (this.downTimeout_) {\n    clearTimeout(this.downTimeout_);\n    this.downTimeout_ = undefined;\n  }\n\n  this.handlePointerMove_(event);\n\n  const circleMode = this.mode_ === Mode.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Mode.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n}\n\n\n/**\n * Handle move events.\n * @param {module:ol/MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nDraw.prototype.handlePointerMove_ = function(event) {\n  if (this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n      (this.freehand_ && !this.shouldHandle_))) {\n    const downPx = this.downPx_;\n    const clickPx = event.pixel;\n    const dx = downPx[0] - clickPx[0];\n    const dy = downPx[1] - clickPx[1];\n    const squaredDistance = dx * dx + dy * dy;\n    this.shouldHandle_ = this.freehand_ ?\n      squaredDistance > this.squaredClickTolerance_ :\n      squaredDistance <= this.squaredClickTolerance_;\n    if (!this.shouldHandle_) {\n      return true;\n    }\n  }\n\n  if (this.finishCoordinate_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * Determine if an event is within the snapping tolerance of the start coord.\n * @param {module:ol/MapBrowserEvent} event Event.\n * @return {boolean} The event is within the snapping tolerance of the start.\n * @private\n */\nDraw.prototype.atFinish_ = function(event) {\n  let at = false;\n  if (this.sketchFeature_) {\n    let potentiallyDone = false;\n    let potentiallyFinishCoordinates = [this.finishCoordinate_];\n    if (this.mode_ === Mode.LINE_STRING) {\n      potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      potentiallyDone = this.sketchCoords_[0].length >\n          this.minPoints_;\n      potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n        this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n    }\n    if (potentiallyDone) {\n      const map = event.map;\n      for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n        const finishCoordinate = potentiallyFinishCoordinates[i];\n        const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n        const pixel = event.pixel;\n        const dx = pixel[0] - finishPixel[0];\n        const dy = pixel[1] - finishPixel[1];\n        const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n        at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n        if (at) {\n          this.finishCoordinate_ = finishCoordinate;\n          break;\n        }\n      }\n    }\n  }\n  return at;\n};\n\n\n/**\n * @param {module:ol/MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (!this.sketchPoint_) {\n    this.sketchPoint_ = new Feature(new Point(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = /** @type {module:ol/geom/Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Start the drawing.\n * @param {module:ol/MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.finishCoordinate_ = start;\n  if (this.mode_ === Mode.POINT) {\n    this.sketchCoords_ = start.slice();\n  } else if (this.mode_ === Mode.POLYGON) {\n    this.sketchCoords_ = [[start.slice(), start.slice()]];\n    this.sketchLineCoords_ = this.sketchCoords_[0];\n  } else {\n    this.sketchCoords_ = [start.slice(), start.slice()];\n  }\n  if (this.sketchLineCoords_) {\n    this.sketchLine_ = new Feature(\n      new LineString(this.sketchLineCoords_));\n  }\n  const geometry = this.geometryFunction_(this.sketchCoords_);\n  this.sketchFeature_ = new Feature();\n  if (this.geometryName_) {\n    this.sketchFeature_.setGeometryName(this.geometryName_);\n  }\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {module:ol/MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.modifyDrawing_ = function(event) {\n  let coordinate = event.coordinate;\n  const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, last;\n  if (this.mode_ === Mode.POINT) {\n    last = this.sketchCoords_;\n  } else if (this.mode_ === Mode.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    last = coordinates[coordinates.length - 1];\n    if (this.atFinish_(event)) {\n      // snap to finish\n      coordinate = this.finishCoordinate_.slice();\n    }\n  } else {\n    coordinates = this.sketchCoords_;\n    last = coordinates[coordinates.length - 1];\n  }\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  this.geometryFunction_(/** @type {!Array.<module:ol/coordinate~Coordinate>} */ (this.sketchCoords_), geometry);\n  if (this.sketchPoint_) {\n    const sketchPointGeom = /** @type {module:ol/geom/Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinate);\n  }\n  let sketchLineGeom;\n  if (geometry instanceof Polygon &&\n      this.mode_ !== Mode.POLYGON) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature(new LineString(null));\n    }\n    const ring = geometry.getLinearRing(0);\n    sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setFlatCoordinates(\n      ring.getLayout(), ring.getFlatCoordinates());\n  } else if (this.sketchLineCoords_) {\n    sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n  }\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Add a new coordinate to the drawing.\n * @param {module:ol/MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.addToDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let done;\n  let coordinates;\n  if (this.mode_ === Mode.LINE_STRING) {\n    this.finishCoordinate_ = coordinate.slice();\n    coordinates = this.sketchCoords_;\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Mode.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    if (done) {\n      this.finishCoordinate_ = coordinates[0];\n    }\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n  this.updateSketchFeatures_();\n  if (done) {\n    this.finishDrawing();\n  }\n};\n\n\n/**\n * Remove last point of the feature currently being drawn.\n * @api\n */\nDraw.prototype.removeLastPoint = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n  const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, sketchLineGeom;\n  if (this.mode_ === Mode.LINE_STRING) {\n    coordinates = this.sketchCoords_;\n    coordinates.splice(-2, 1);\n    this.geometryFunction_(coordinates, geometry);\n    if (coordinates.length >= 2) {\n      this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n    }\n  } else if (this.mode_ === Mode.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    coordinates.splice(-2, 1);\n    sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(coordinates);\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n\n  if (coordinates.length === 0) {\n    this.finishCoordinate_ = null;\n  }\n\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n * dispatched before inserting the feature.\n * @api\n */\nDraw.prototype.finishDrawing = function() {\n  const sketchFeature = this.abortDrawing_();\n  if (!sketchFeature) {\n    return;\n  }\n  let coordinates = this.sketchCoords_;\n  const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (sketchFeature.getGeometry());\n  if (this.mode_ === Mode.LINE_STRING) {\n    // remove the redundant last point\n    coordinates.pop();\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Mode.POLYGON) {\n    // remove the redundant last point in ring\n    coordinates[0].pop();\n    this.geometryFunction_(coordinates, geometry);\n    coordinates = geometry.getCoordinates();\n  }\n\n  // cast multi-part geometries\n  if (this.type_ === GeometryType.MULTI_POINT) {\n    sketchFeature.setGeometry(new MultiPoint([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n    sketchFeature.setGeometry(new MultiLineString([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n    sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n  }\n\n  // First dispatch event to allow full set up of feature\n  this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n  // Then insert feature\n  if (this.features_) {\n    this.features_.push(sketchFeature);\n  }\n  if (this.source_) {\n    this.source_.addFeature(sketchFeature);\n  }\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {module:ol/Feature} The sketch feature (or null if none).\n * @private\n */\nDraw.prototype.abortDrawing_ = function() {\n  this.finishCoordinate_ = null;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * Extend an existing geometry by adding additional points. This only works\n * on features with `LineString` geometries, where the interaction will\n * extend lines by adding points to the end of the coordinates array.\n * @param {!module:ol/Feature} feature Feature to be extended.\n * @api\n */\nDraw.prototype.extend = function(feature) {\n  const geometry = feature.getGeometry();\n  const lineString = /** @type {module:ol/geom/LineString} */ (geometry);\n  this.sketchFeature_ = feature;\n  this.sketchCoords_ = lineString.getCoordinates();\n  const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n  this.finishCoordinate_ = last.slice();\n  this.sketchCoords_.push(last.slice());\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nDraw.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchLine_) {\n    sketchFeatures.push(this.sketchLine_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n};\n\n\n/**\n * @private\n */\nDraw.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `module:ol/geom/Circle~Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {module:ol/interaction/Draw~GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function(coordinates, opt_geometry) {\n    const center = coordinates[0];\n    const end = coordinates[1];\n    const radius = Math.sqrt(\n      squaredCoordinateDistance(center, end));\n    const geometry = opt_geometry ? /** @type {module:ol/geom/Polygon} */ (opt_geometry) :\n      fromCircle(new Circle(center), opt_sides);\n    const angle = opt_angle ? opt_angle :\n      Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n    makeRegular(geometry, center, radius, angle);\n    return geometry;\n  };\n}\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {module:ol/interaction/Draw~GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return (\n    function(coordinates, opt_geometry) {\n      const extent = boundingExtent(coordinates);\n      const geometry = opt_geometry || new Polygon(null);\n      geometry.setCoordinates([[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]]);\n      return geometry;\n    }\n  );\n}\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {module:ol/geom/GeometryType} type Geometry type.\n * @return {module:ol/interaction/Draw~Mode} Drawing mode.\n */\nfunction getMode(type) {\n  let mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Mode.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Mode.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Mode.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Mode.CIRCLE;\n  }\n  return (\n    /** @type {!module:ol/interaction/Draw~Mode} */ (mode)\n  );\n}\n\n\nexport default Draw;\n","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getUid, inherits} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from '../layer/Base.js';\nimport LayerProperty from '../layer/Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/source/Source} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {module:ol/layer/Layer} layer\n * @property {number} opacity\n * @property {module:ol/source/Source~State} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {module:ol/extent~Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/layer/Base}\n * @fires module:ol/render/Event~RenderEvent\n * @param {module:ol/layer/Layer~Options} options Layer options.\n * @api\n */\nconst Layer = function(options) {\n\n  const baseOptions = assign({}, options);\n  delete baseOptions.source;\n\n  BaseLayer.call(this, /** @type {module:ol/layer/Base~Options} */ (baseOptions));\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.mapPrecomposeKey_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.mapRenderKey_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.sourceChangeKey_ = null;\n\n  if (options.map) {\n    this.setMap(options.map);\n  }\n\n  listen(this,\n    getChangeEventType(LayerProperty.SOURCE),\n    this.handleSourcePropertyChange_, this);\n\n  const source = options.source ? options.source : null;\n  this.setSource(source);\n};\n\ninherits(Layer, BaseLayer);\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n}\n\n\n/**\n * @inheritDoc\n */\nLayer.prototype.getLayersArray = function(opt_array) {\n  const array = opt_array ? opt_array : [];\n  array.push(this);\n  return array;\n};\n\n\n/**\n * @inheritDoc\n */\nLayer.prototype.getLayerStatesArray = function(opt_states) {\n  const states = opt_states ? opt_states : [];\n  states.push(this.getLayerState());\n  return states;\n};\n\n\n/**\n * Get the layer source.\n * @return {module:ol/source/Source} The layer source (or `null` if not yet set).\n * @observable\n * @api\n */\nLayer.prototype.getSource = function() {\n  const source = this.get(LayerProperty.SOURCE);\n  return (\n    /** @type {module:ol/source/Source} */ (source) || null\n  );\n};\n\n\n/**\n  * @inheritDoc\n  */\nLayer.prototype.getSourceState = function() {\n  const source = this.getSource();\n  return !source ? SourceState.UNDEFINED : source.getState();\n};\n\n\n/**\n * @private\n */\nLayer.prototype.handleSourceChange_ = function() {\n  this.changed();\n};\n\n\n/**\n * @private\n */\nLayer.prototype.handleSourcePropertyChange_ = function() {\n  if (this.sourceChangeKey_) {\n    unlistenByKey(this.sourceChangeKey_);\n    this.sourceChangeKey_ = null;\n  }\n  const source = this.getSource();\n  if (source) {\n    this.sourceChangeKey_ = listen(source,\n      EventType.CHANGE, this.handleSourceChange_, this);\n  }\n  this.changed();\n};\n\n\n/**\n * Sets the layer to be rendered on top of other layers on a map. The map will\n * not manage this layer in its layers collection, and the callback in\n * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n * is useful for temporary layers. To remove an unmanaged layer from the map,\n * use `#setMap(null)`.\n *\n * To add the layer to a map and have it managed by the map, use\n * {@link module:ol/Map#addLayer} instead.\n * @param {module:ol/PluggableMap} map Map.\n * @api\n */\nLayer.prototype.setMap = function(map) {\n  if (this.mapPrecomposeKey_) {\n    unlistenByKey(this.mapPrecomposeKey_);\n    this.mapPrecomposeKey_ = null;\n  }\n  if (!map) {\n    this.changed();\n  }\n  if (this.mapRenderKey_) {\n    unlistenByKey(this.mapRenderKey_);\n    this.mapRenderKey_ = null;\n  }\n  if (map) {\n    this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n      const layerState = this.getLayerState();\n      layerState.managed = false;\n      layerState.zIndex = Infinity;\n      evt.frameState.layerStatesArray.push(layerState);\n      evt.frameState.layerStates[getUid(this)] = layerState;\n    }, this);\n    this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n    this.changed();\n  }\n};\n\n\n/**\n * Set the layer source.\n * @param {module:ol/source/Source} source The layer source.\n * @observable\n * @api\n */\nLayer.prototype.setSource = function(source) {\n  this.set(LayerProperty.SOURCE, source);\n};\nexport default Layer;\n","/**\n * @module ol/events/EventTarget\n */\nimport {inherits} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {UNDEFINED} from '../functions.js';\nimport Event from '../events/Event.js';\n\n\n/**\n * @typedef {EventTarget|module:ol/events/EventTarget} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * @see {@link https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget}\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n *\n * @constructor\n * @extends {module:ol/Disposable}\n */\nconst EventTarget = function() {\n\n  Disposable.call(this);\n\n  /**\n   * @private\n   * @type {!Object.<string, number>}\n   */\n  this.pendingRemovals_ = {};\n\n  /**\n   * @private\n   * @type {!Object.<string, number>}\n   */\n  this.dispatching_ = {};\n\n  /**\n   * @private\n   * @type {!Object.<string, Array.<module:ol/events~ListenerFunction>>}\n   */\n  this.listeners_ = {};\n\n};\n\ninherits(EventTarget, Disposable);\n\n\n/**\n * @param {string} type Type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n */\nEventTarget.prototype.addEventListener = function(type, listener) {\n  let listeners = this.listeners_[type];\n  if (!listeners) {\n    listeners = this.listeners_[type] = [];\n  }\n  if (listeners.indexOf(listener) === -1) {\n    listeners.push(listener);\n  }\n};\n\n\n/**\n * @param {{type: string,\n *     target: (EventTarget|module:ol/events/EventTarget|undefined)}|module:ol/events/Event|\n *     string} event Event or event type.\n * @return {boolean|undefined} `false` if anyone called preventDefault on the\n *     event object or if any of the listeners returned false.\n */\nEventTarget.prototype.dispatchEvent = function(event) {\n  const evt = typeof event === 'string' ? new Event(event) : event;\n  const type = evt.type;\n  evt.target = this;\n  const listeners = this.listeners_[type];\n  let propagate;\n  if (listeners) {\n    if (!(type in this.dispatching_)) {\n      this.dispatching_[type] = 0;\n      this.pendingRemovals_[type] = 0;\n    }\n    ++this.dispatching_[type];\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    --this.dispatching_[type];\n    if (this.dispatching_[type] === 0) {\n      let pendingRemovals = this.pendingRemovals_[type];\n      delete this.pendingRemovals_[type];\n      while (pendingRemovals--) {\n        this.removeEventListener(type, UNDEFINED);\n      }\n      delete this.dispatching_[type];\n    }\n    return propagate;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nEventTarget.prototype.disposeInternal = function() {\n  unlistenAll(this);\n};\n\n\n/**\n * Get the listeners for a specified event type. Listeners are returned in the\n * order that they will be called in.\n *\n * @param {string} type Type.\n * @return {Array.<module:ol/events~ListenerFunction>} Listeners.\n */\nEventTarget.prototype.getListeners = function(type) {\n  return this.listeners_[type];\n};\n\n\n/**\n * @param {string=} opt_type Type. If not provided,\n *     `true` will be returned if this EventTarget has any listeners.\n * @return {boolean} Has listeners.\n */\nEventTarget.prototype.hasListener = function(opt_type) {\n  return opt_type ?\n    opt_type in this.listeners_ :\n    Object.keys(this.listeners_).length > 0;\n};\n\n\n/**\n * @param {string} type Type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n */\nEventTarget.prototype.removeEventListener = function(type, listener) {\n  const listeners = this.listeners_[type];\n  if (listeners) {\n    const index = listeners.indexOf(listener);\n    if (type in this.pendingRemovals_) {\n      // make listener a no-op, and remove later in #dispatchEvent()\n      listeners[index] = UNDEFINED;\n      ++this.pendingRemovals_[type];\n    } else {\n      listeners.splice(index, 1);\n      if (listeners.length === 0) {\n        delete this.listeners_[type];\n      }\n    }\n  }\n};\nexport default EventTarget;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../util.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {module:ol/geom/Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (let j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return inflateCoordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {module:ol/geom/Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<module:ol/geom/Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<module:ol/geom/Point>} */\n  const points = [];\n  for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const x = flatCoordinates[i];\n    const y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../util.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateCoordinatesArray} from '../geom/flat/inflate.js';\nimport {interpolatePoint, lineStringsCoordinateAtM} from '../geom/flat/interpolate.js';\nimport {intersectsLineStringArray} from '../geom/flat/intersectsextent.js';\nimport {douglasPeuckerArray} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {module:ol/geom/LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestArrayPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return inflateCoordinatesArray(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {module:ol/geom/LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<module:ol/geom/LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<module:ol/geom/LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = interpolatePoint(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = douglasPeuckerArray(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return intersectsLineStringArray(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<module:ol/geom/LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array.<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {module:ol/color~Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {module:ol/color~Color} Color.\n */\nexport const fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    const MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object.<string, module:ol/color~Color>}\n     */\n    const cache = {};\n\n    /**\n     * @type {number}\n     */\n    let cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {module:ol/color~Color} Color.\n       */\n      function(s) {\n        let color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            let i = 0;\n            for (const key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {module:ol/color~Color|string} color Color.\n * @return {module:ol/color~Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(/** @type {string} */ (color));\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {module:ol/color~Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return (\n    /** @type {module:ol/color~Color} */ (color)\n  );\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {module:ol/color~Color} color Color.\n * @return {module:ol/color~Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {module:ol/color~Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n","/**\n * @module ol/source/Stamen\n */\nimport {inherits} from '../util.js';\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from '../source/OSM.js';\nimport XYZ from '../source/XYZ.js';\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst ATTRIBUTIONS = [\n  'Map tiles by <a href=\"https://stamen.com/\">Stamen Design</a>, ' +\n        'under <a href=\"https://creativecommons.org/licenses/by/3.0/\">CC BY' +\n        ' 3.0</a>.',\n  OSM_ATTRIBUTION\n];\n\n\n/**\n * @type {Object.<string, {extension: string, opaque: boolean}>}\n */\nconst LayerConfig = {\n  'terrain': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-background': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'terrain-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-background': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner-hybrid': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lite': {\n    extension: 'png',\n    opaque: true\n  },\n  'watercolor': {\n    extension: 'jpg',\n    opaque: true\n  }\n};\n\n\n/**\n * @type {Object.<string, {minZoom: number, maxZoom: number}>}\n */\nconst ProviderConfig = {\n  'terrain': {\n    minZoom: 4,\n    maxZoom: 18\n  },\n  'toner': {\n    minZoom: 0,\n    maxZoom: 20\n  },\n  'watercolor': {\n    minZoom: 1,\n    maxZoom: 16\n  }\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=2048] Cache size.\n * @property {string} [layer] Layer.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {boolean} [opaque] Whether the layer is opaque.\n * @property {boolean} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n *\n * @constructor\n * @extends {module:ol/source/XYZ}\n * @param {module:ol/source/Stamen~Options=} options Stamen options.\n * @api\n */\nconst Stamen = function(options) {\n  const i = options.layer.indexOf('-');\n  const provider = i == -1 ? options.layer : options.layer.slice(0, i);\n  const providerConfig = ProviderConfig[provider];\n\n  const layerConfig = LayerConfig[options.layer];\n\n  const url = options.url !== undefined ? options.url :\n    'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' + options.layer +\n      '/{z}/{x}/{y}.' + layerConfig.extension;\n\n  XYZ.call(this, {\n    attributions: ATTRIBUTIONS,\n    cacheSize: options.cacheSize,\n    crossOrigin: 'anonymous',\n    maxZoom: options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n    minZoom: options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n    opaque: layerConfig.opaque,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n};\n\ninherits(Stamen, XYZ);\n\nexport default Stamen;\n","/**\n * @module ol/style/Style\n */\n\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport {assert} from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from '../style/Circle.js';\nimport Fill from '../style/Fill.js';\nimport Stroke from '../style/Stroke.js';\n\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function((module:ol/Feature|module:ol/render/Feature), number):\n *     (module:ol/style/Style|Array.<module:ol/style/Style>)} StyleFunction\n */\n\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function((module:ol/Feature|module:ol/render/Feature)):\n *     (module:ol/geom/Geometry|module:ol/render/Feature|undefined)} GeometryFunction\n */\n\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((module:ol/coordinate~Coordinate|Array<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>),module:ol/render~State)}\n * RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {module:ol/style/Image} [image] Image style.\n * @property {module:ol/style/Style~RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/Text} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * @constructor\n * @struct\n * @param {module:ol/style/Style~Options=} opt_options Style options.\n * @api\n */\nconst Style = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction}\n   */\n  this.geometry_ = null;\n\n  /**\n   * @private\n   * @type {!module:ol/style/Style~GeometryFunction}\n   */\n  this.geometryFunction_ = defaultGeometryFunction;\n\n  if (options.geometry !== undefined) {\n    this.setGeometry(options.geometry);\n  }\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n     * @private\n     * @type {module:ol/style/Image}\n     */\n  this.image_ = options.image !== undefined ? options.image : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Style~RenderFunction|null}\n   */\n  this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Text}\n   */\n  this.text_ = options.text !== undefined ? options.text : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zIndex_ = options.zIndex;\n\n};\n\n\n/**\n * Clones the style.\n * @return {module:ol/style/Style} The cloned style.\n * @api\n */\nStyle.prototype.clone = function() {\n  let geometry = this.getGeometry();\n  if (geometry && geometry.clone) {\n    geometry = geometry.clone();\n  }\n  return new Style({\n    geometry: geometry,\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    image: this.getImage() ? this.getImage().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    text: this.getText() ? this.getText().clone() : undefined,\n    zIndex: this.getZIndex()\n  });\n};\n\n\n/**\n * Get the custom renderer function that was configured with\n * {@link #setRenderer} or the `renderer` constructor option.\n * @return {module:ol/style/Style~RenderFunction|null} Custom renderer function.\n * @api\n */\nStyle.prototype.getRenderer = function() {\n  return this.renderer_;\n};\n\n\n/**\n * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n * and `image` options of the style will be ignored.\n * @param {module:ol/style/Style~RenderFunction|null} renderer Custom renderer function.\n * @api\n */\nStyle.prototype.setRenderer = function(renderer) {\n  this.renderer_ = renderer;\n};\n\n\n/**\n * Get the geometry to be rendered.\n * @return {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction}\n * Feature property or geometry or function that returns the geometry that will\n * be rendered with this style.\n * @api\n */\nStyle.prototype.getGeometry = function() {\n  return this.geometry_;\n};\n\n\n/**\n * Get the function used to generate a geometry for rendering.\n * @return {!module:ol/style/Style~GeometryFunction} Function that is called with a feature\n * and returns the geometry to render instead of the feature's geometry.\n * @api\n */\nStyle.prototype.getGeometryFunction = function() {\n  return this.geometryFunction_;\n};\n\n\n/**\n * Get the fill style.\n * @return {module:ol/style/Fill} Fill style.\n * @api\n */\nStyle.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Set the fill style.\n * @param {module:ol/style/Fill} fill Fill style.\n * @api\n */\nStyle.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Get the image style.\n * @return {module:ol/style/Image} Image style.\n * @api\n */\nStyle.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Set the image style.\n * @param {module:ol/style/Image} image Image style.\n * @api\n */\nStyle.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Get the stroke style.\n * @return {module:ol/style/Stroke} Stroke style.\n * @api\n */\nStyle.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Set the stroke style.\n * @param {module:ol/style/Stroke} stroke Stroke style.\n * @api\n */\nStyle.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Get the text style.\n * @return {module:ol/style/Text} Text style.\n * @api\n */\nStyle.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Set the text style.\n * @param {module:ol/style/Text} text Text style.\n * @api\n */\nStyle.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Get the z-index for the style.\n * @return {number|undefined} ZIndex.\n * @api\n */\nStyle.prototype.getZIndex = function() {\n  return this.zIndex_;\n};\n\n\n/**\n * Set a geometry that is rendered instead of the feature's geometry.\n *\n * @param {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction} geometry\n *     Feature property or geometry or function returning a geometry to render\n *     for this style.\n * @api\n */\nStyle.prototype.setGeometry = function(geometry) {\n  if (typeof geometry === 'function') {\n    this.geometryFunction_ = geometry;\n  } else if (typeof geometry === 'string') {\n    this.geometryFunction_ = function(feature) {\n      return (\n        /** @type {module:ol/geom/Geometry} */ (feature.get(geometry))\n      );\n    };\n  } else if (!geometry) {\n    this.geometryFunction_ = defaultGeometryFunction;\n  } else if (geometry !== undefined) {\n    this.geometryFunction_ = function() {\n      return (\n        /** @type {module:ol/geom/Geometry} */ (geometry)\n      );\n    };\n  }\n  this.geometry_ = geometry;\n};\n\n\n/**\n * Set the z-index.\n *\n * @param {number|undefined} zIndex ZIndex.\n * @api\n */\nStyle.prototype.setZIndex = function(zIndex) {\n  this.zIndex_ = zIndex;\n};\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of module:ol/style/Style or single style objects wrapped in a\n * new style function.\n * @param {module:ol/style/Style~StyleFunction|Array.<module:ol/style/Style>|module:ol/style/Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {module:ol/style/Style~StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array.<module:ol/style/Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(obj instanceof Style,\n        41); // Expected an `module:ol/style/Style~Style` or an array of `module:ol/style/Style~Style`\n      styles = [obj];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n\n/**\n * @type {Array.<module:ol/style/Style>}\n */\nlet defaultStyles = null;\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/style/Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (module:ol/style/Circle~CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return defaultStyles;\n}\n\n\n/**\n * Default styles for editing features.\n * @return {Object.<module:ol/geom/GeometryType, Array.<module:ol/style/Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object.<module:ol/geom/GeometryType, Array.<module:ol/style/Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_POLYGON] =\n      styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] =\n      styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING]\n      );\n\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[GeometryType.MULTI_POINT] =\n      styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING],\n        styles[GeometryType.POINT]\n      );\n\n  return styles;\n}\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature to get the geometry for.\n * @return {module:ol/geom/Geometry|module:ol/render/Feature|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/Tile\n */\nimport {inherits} from './util.js';\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments.\n *\n * @typedef {function(module:ol/Tile, string)} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(module:ol/tilecoord~TileCoord, number,\n *           module:ol/proj/Projection): (string|undefined)} UrlFunction\n * @api\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/events/EventTarget}\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileState} state State.\n * @param {module:ol/Tile~Options=} opt_options Tile options.\n */\nconst Tile = function(tileCoord, state, opt_options) {\n  EventTarget.call(this);\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {module:ol/tilecoord~TileCoord}\n   */\n  this.tileCoord = tileCoord;\n\n  /**\n   * @protected\n   * @type {module:ol/TileState}\n   */\n  this.state = state;\n\n  /**\n   * An \"interim\" tile for this tile. The interim tile may be used while this\n   * one is loading, for \"smooth\" transitions when changing params/dimensions\n   * on the source.\n   * @type {module:ol/Tile}\n   */\n  this.interimTile = null;\n\n  /**\n   * A key assigned to the tile. This is used by the tile source to determine\n   * if this tile can effectively be used, or if a new tile should be created\n   * and this one be used as an interim tile for this new tile.\n   * @type {string}\n   */\n  this.key = '';\n\n  /**\n   * The duration for the opacity transition.\n   * @type {number}\n   */\n  this.transition_ = options.transition === undefined ? 250 : options.transition;\n\n  /**\n   * Lookup of start times for rendering transitions.  If the start time is\n   * equal to -1, the transition is complete.\n   * @type {Object.<number, number>}\n   */\n  this.transitionStarts_ = {};\n\n};\n\ninherits(Tile, EventTarget);\n\n\n/**\n * @protected\n */\nTile.prototype.changed = function() {\n  this.dispatchEvent(EventType.CHANGE);\n};\n\n\n/**\n * @return {string} Key.\n */\nTile.prototype.getKey = function() {\n  return this.key + '/' + this.tileCoord;\n};\n\n/**\n * Get the interim tile most suitable for rendering using the chain of interim\n * tiles. This corresponds to the  most recent tile that has been loaded, if no\n * such tile exists, the original tile is returned.\n * @return {!module:ol/Tile} Best tile for rendering.\n */\nTile.prototype.getInterimTile = function() {\n  if (!this.interimTile) {\n    //empty chain\n    return this;\n  }\n  let tile = this.interimTile;\n\n  // find the first loaded tile and return it. Since the chain is sorted in\n  // decreasing order of creation time, there is no need to search the remainder\n  // of the list (all those tiles correspond to older requests and will be\n  // cleaned up by refreshInterimChain)\n  do {\n    if (tile.getState() == TileState.LOADED) {\n      return tile;\n    }\n    tile = tile.interimTile;\n  } while (tile);\n\n  // we can not find a better tile\n  return this;\n};\n\n/**\n * Goes through the chain of interim tiles and discards sections of the chain\n * that are no longer relevant.\n */\nTile.prototype.refreshInterimChain = function() {\n  if (!this.interimTile) {\n    return;\n  }\n\n  let tile = this.interimTile;\n  let prev = this;\n\n  do {\n    if (tile.getState() == TileState.LOADED) {\n      //we have a loaded tile, we can discard the rest of the list\n      //we would could abort any LOADING tile request\n      //older than this tile (i.e. any LOADING tile following this entry in the chain)\n      tile.interimTile = null;\n      break;\n    } else if (tile.getState() == TileState.LOADING) {\n      //keep this LOADING tile any loaded tiles later in the chain are\n      //older than this tile, so we're still interested in the request\n      prev = tile;\n    } else if (tile.getState() == TileState.IDLE) {\n      //the head of the list is the most current tile, we don't need\n      //to start any other requests for this chain\n      prev.interimTile = tile.interimTile;\n    } else {\n      prev = tile;\n    }\n    tile = prev.interimTile;\n  } while (tile);\n};\n\n/**\n * Get the tile coordinate for this tile.\n * @return {module:ol/tilecoord~TileCoord} The tile coordinate.\n * @api\n */\nTile.prototype.getTileCoord = function() {\n  return this.tileCoord;\n};\n\n\n/**\n * @return {module:ol/TileState} State.\n */\nTile.prototype.getState = function() {\n  return this.state;\n};\n\n/**\n * @param {module:ol/TileState} state State.\n */\nTile.prototype.setState = function(state) {\n  this.state = state;\n  this.changed();\n};\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @abstract\n * @api\n */\nTile.prototype.load = function() {};\n\n/**\n * Get the alpha value for rendering.\n * @param {number} id An id for the renderer.\n * @param {number} time The render frame time.\n * @return {number} A number between 0 and 1.\n */\nTile.prototype.getAlpha = function(id, time) {\n  if (!this.transition_) {\n    return 1;\n  }\n\n  let start = this.transitionStarts_[id];\n  if (!start) {\n    start = time;\n    this.transitionStarts_[id] = start;\n  } else if (start === -1) {\n    return 1;\n  }\n\n  const delta = time - start + (1000 / 60); // avoid rendering at 0\n  if (delta >= this.transition_) {\n    return 1;\n  }\n  return easeIn(delta / this.transition_);\n};\n\n/**\n * Determine if a tile is in an alpha transition.  A tile is considered in\n * transition if tile.getAlpha() has not yet been called or has been called\n * and returned 1.\n * @param {number} id An id for the renderer.\n * @return {boolean} The tile is in transition.\n */\nTile.prototype.inTransition = function(id) {\n  if (!this.transition_) {\n    return false;\n  }\n  return this.transitionStarts_[id] !== -1;\n};\n\n/**\n * Mark a transition as complete.\n * @param {number} id An id for the renderer.\n */\nTile.prototype.endTransition = function(id) {\n  if (this.transition_) {\n    this.transitionStarts_[id] = -1;\n  }\n};\nexport default Tile;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#render\n   * @api\n   */\n  RENDER: 'render'\n};\n","/**\n * @module ol/layer/Image\n */\nimport {inherits} from '../util.js';\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {module:ol/source/Image} [source] Source for this layer.\n */\n\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @constructor\n * @extends {module:ol/layer/Layer}\n * @fires module:ol/render/Event~RenderEvent\n * @param {module:ol/layer/Image~Options=} opt_options Layer options.\n * @api\n */\nconst ImageLayer = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n  Layer.call(this,  /** @type {module:ol/layer/Layer~Options} */ (options));\n\n  /**\n   * The layer type.\n   * @protected\n   * @type {module:ol/LayerType}\n   */\n  this.type = LayerType.IMAGE;\n\n};\n\ninherits(ImageLayer, Layer);\n\n\n/**\n * Return the associated {@link module:ol/source/Image source} of the image layer.\n * @function\n * @return {module:ol/source/Image} Source.\n * @api\n */\nImageLayer.prototype.getSource;\nexport default ImageLayer;\n","/**\n * @module ol/render/replay\n */\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * @const\n * @type {Array.<module:ol/render/ReplayType>}\n */\nexport const ORDER = [\n  ReplayType.POLYGON,\n  ReplayType.CIRCLE,\n  ReplayType.LINE_STRING,\n  ReplayType.IMAGE,\n  ReplayType.TEXT,\n  ReplayType.DEFAULT\n];\n\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, function() {\n            const y = -tileCoord[2] - 1;\n            return y.toString();\n          })\n          .replace(dashYRegEx, function() {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() + tileCoord[2];\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array.<string>} templates Templates.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array.<module:ol/Tile~UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array.<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../util.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from '../geom/flat/area.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {linearRingssContainsXY} from '../geom/flat/contains.js';\nimport {deflateMultiCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from '../geom/flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from '../geom/flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from '../geom/flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRingsArray} from '../geom/flat/orient.js';\nimport {quantizeMultiArray} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {module:ol/geom/Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestMultiArrayPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    orientLinearRingsArray(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return inflateMultiCoordinatesArray(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = linearRingssCenter(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n * @return {module:ol/geom/MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (linearRingsAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          orientLinearRingsArray(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = quantizeMultiArray(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {module:ol/geom/Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<module:ol/geom/Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return intersectsLinearRingMultiArray(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<module:ol/geom/Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font}. Default is '10px sans-serif'\n * @property {number} [maxAngle] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {module:ol/style/TextPlacement|string} [placement] Text placement.\n * @property {number} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {module:ol/style/Fill} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/Fill} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {module:ol/style/Stroke} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array.<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {module:ol/style/Text~Options=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: DEFAULT_FILL_COLOR});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {module:ol/style/TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * Clones the style.\n * @return {module:ol/style/Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {module:ol/style/TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {module:ol/style/Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {module:ol/style/Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {module:ol/style/Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {module:ol/style/Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {module:ol/style/TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {module:ol/style/Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {module:ol/style/Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {module:ol/style/Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {module:ol/style/Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array.<number>=} opt_ends Ends.\n * @return {Array.<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array.<Array.<number>>=} opt_endss Endss.\n * @return {Array.<Array.<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array.<module:ol/coordinate~Coordinate>=} opt_coordinates Coordinates.\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  const coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport {inherits} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {FALSE} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/Object}\n * @api\n */\nconst Geometry = function() {\n\n  BaseObject.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = createEmpty();\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.extentRevision_ = -1;\n\n  /**\n   * @protected\n   * @type {Object.<string, module:ol/geom/Geometry>}\n   */\n  this.simplifiedGeometryCache = {};\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.simplifiedGeometryRevision = 0;\n\n};\n\ninherits(Geometry, BaseObject);\n\n\n/**\n * @type {module:ol/transform~Transform}\n */\nconst tmpTransform = createTransform();\n\n\n/**\n * Make a complete copy of the geometry.\n * @abstract\n * @return {!module:ol/geom/Geometry} Clone.\n */\nGeometry.prototype.clone = function() {};\n\n\n/**\n * @abstract\n * @param {number} x X.\n * @param {number} y Y.\n * @param {module:ol/coordinate~Coordinate} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @return {number} Minimum squared distance.\n */\nGeometry.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {};\n\n\n/**\n * Return the closest point of the geometry to the passed point as\n * {@link module:ol/coordinate~Coordinate coordinate}.\n * @param {module:ol/coordinate~Coordinate} point Point.\n * @param {module:ol/coordinate~Coordinate=} opt_closestPoint Closest point.\n * @return {module:ol/coordinate~Coordinate} Closest point.\n * @api\n */\nGeometry.prototype.getClosestPoint = function(point, opt_closestPoint) {\n  const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n  this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n  return closestPoint;\n};\n\n\n/**\n * Returns true if this geometry includes the specified coordinate. If the\n * coordinate is on the boundary of the geometry, returns false.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {boolean} Contains coordinate.\n * @api\n */\nGeometry.prototype.intersectsCoordinate = function(coordinate) {\n  return this.containsXY(coordinate[0], coordinate[1]);\n};\n\n\n/**\n * @abstract\n * @param {module:ol/extent~Extent} extent Extent.\n * @protected\n * @return {module:ol/extent~Extent} extent Extent.\n */\nGeometry.prototype.computeExtent = function(extent) {};\n\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nGeometry.prototype.containsXY = FALSE;\n\n\n/**\n * Get the extent of the geometry.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} extent Extent.\n * @api\n */\nGeometry.prototype.getExtent = function(opt_extent) {\n  if (this.extentRevision_ != this.getRevision()) {\n    this.extent_ = this.computeExtent(this.extent_);\n    this.extentRevision_ = this.getRevision();\n  }\n  return returnOrUpdate(this.extent_, opt_extent);\n};\n\n\n/**\n * Rotate the geometry around a given coordinate. This modifies the geometry\n * coordinates in place.\n * @abstract\n * @param {number} angle Rotation angle in radians.\n * @param {module:ol/coordinate~Coordinate} anchor The rotation center.\n * @api\n */\nGeometry.prototype.rotate = function(angle, anchor) {};\n\n\n/**\n * Scale the geometry (with an optional origin).  This modifies the geometry\n * coordinates in place.\n * @abstract\n * @param {number} sx The scaling factor in the x-direction.\n * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n *     sx).\n * @param {module:ol/coordinate~Coordinate=} opt_anchor The scale origin (defaults to the center\n *     of the geometry extent).\n * @api\n */\nGeometry.prototype.scale = function(sx, opt_sy, opt_anchor) {};\n\n\n/**\n * Create a simplified version of this geometry.  For linestrings, this uses\n * the the {@link\n * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n * Douglas Peucker} algorithm.  For polygons, a quantization-based\n * simplification is used to preserve topology.\n * @function\n * @param {number} tolerance The tolerance distance for simplification.\n * @return {module:ol/geom/Geometry} A new, simplified version of the original\n *     geometry.\n * @api\n */\nGeometry.prototype.simplify = function(tolerance) {\n  return this.getSimplifiedGeometry(tolerance * tolerance);\n};\n\n\n/**\n * Create a simplified version of this geometry using the Douglas Peucker\n * algorithm.\n * @see https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n * @abstract\n * @param {number} squaredTolerance Squared tolerance.\n * @return {module:ol/geom/Geometry} Simplified geometry.\n */\nGeometry.prototype.getSimplifiedGeometry = function(squaredTolerance) {};\n\n\n/**\n * Get the type of this geometry.\n * @abstract\n * @return {module:ol/geom/GeometryType} Geometry type.\n */\nGeometry.prototype.getType = function() {};\n\n\n/**\n * Apply a transform function to each coordinate of the geometry.\n * The geometry is modified in place.\n * If you do not want the geometry modified in place, first `clone()` it and\n * then use this function on the clone.\n * @abstract\n * @param {module:ol/proj~TransformFunction} transformFn Transform.\n */\nGeometry.prototype.applyTransform = function(transformFn) {};\n\n\n/**\n * Test if the geometry and the passed extent intersect.\n * @abstract\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} `true` if the geometry and the extent intersect.\n */\nGeometry.prototype.intersectsExtent = function(extent) {};\n\n\n/**\n * Translate the geometry.  This modifies the geometry coordinates in place.  If\n * instead you want a new geometry, first `clone()` this geometry.\n * @abstract\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n */\nGeometry.prototype.translate = function(deltaX, deltaY) {};\n\n\n/**\n * Transform each coordinate of the geometry from one coordinate reference\n * system to another. The geometry is modified in place.\n * For example, a line will be transformed to a line and a circle to a circle.\n * If you do not want the geometry modified in place, first `clone()` it and\n * then use this function on the clone.\n *\n * @param {module:ol/proj~ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {module:ol/proj~ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {module:ol/geom/Geometry} This geometry.  Note that original geometry is\n *     modified in place.\n * @api\n */\nGeometry.prototype.transform = function(source, destination) {\n  source = getProjection(source);\n  const transformFn = source.getUnits() == Units.TILE_PIXELS ?\n    function(inCoordinates, outCoordinates, stride) {\n      const pixelExtent = source.getExtent();\n      const projectedExtent = source.getWorldExtent();\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(tmpTransform,\n        projectedExtent[0], projectedExtent[3],\n        scale, -scale, 0,\n        0, 0);\n      transform2D(inCoordinates, 0, inCoordinates.length, stride,\n        tmpTransform, outCoordinates);\n      return getTransform(source, destination)(inCoordinates, outCoordinates, stride);\n    } :\n    getTransform(source, destination);\n  this.applyTransform(transformFn);\n  return this;\n};\nexport default Geometry;\n","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from '../flat/reverse.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    const reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../util.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport {isDocument, isNode, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/format/Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (isDocument(source)) {\n    return this.readFeatureFromDocument(/** @type {Document} */ (source), opt_options);\n  } else if (isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n * @return {module:ol/Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n * @return {module:ol/Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<module:ol/Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(doc, opt_options) {\n  /** @type {Array.<module:ol/Feature>} */\n  const features = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<module:ol/Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n * @protected\n * @return {module:ol/geom/Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n * @protected\n * @return {module:ol/geom/Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {module:ol/proj/Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.dataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {module:ol/proj/Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.dataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object.<module:ol/geom/GeometryType,\n *                function(module:ol/render/ReplayGroup, module:ol/geom/Geometry,\n *                         module:ol/style/Style, Object)>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature1 Feature 1.\n * @param {module:ol/Feature|module:ol/render/Feature} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return getUid(feature1) - getUid(feature2);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Circle} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n\n  return loading;\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom(/** @type {module:ol/geom/SimpleGeometry} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/LineString|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Point|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n","/**\n * @module ol/Overlay\n */\nimport {inherits} from './util.js';\nimport MapEventType from './MapEventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {removeNode, removeChildren, outerWidth, outerHeight} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {containsExtent} from './extent.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {Element} [element] The overlay element.\n * @property {Array.<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {module:ol/coordinate~Coordinate} [position] The overlay position\n * in map projection.\n * @property {module:ol/OverlayPositioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\n * calling `setPosition`, so that the overlay is entirely visible in the current\n * viewport.\n * @property {module:ol/Overlay~PanOptions} [autoPanAnimation] The\n * animation options used to pan the overlay into view. This animation is only\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\n * customize the animation.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning'\n};\n\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/Overlay~Options} options Overlay options.\n * @api\n */\nconst Overlay = function(options) {\n\n  BaseObject.call(this);\n\n  /**\n   * @protected\n   * @type {module:ol/Overlay~Options}\n   */\n  this.options = options;\n\n  /**\n   * @protected\n   * @type {number|string|undefined}\n   */\n  this.id = options.id;\n\n  /**\n   * @protected\n   * @type {boolean}\n   */\n  this.insertFirst = options.insertFirst !== undefined ?\n    options.insertFirst : true;\n\n  /**\n   * @protected\n   * @type {boolean}\n   */\n  this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n  /**\n   * @protected\n   * @type {Element}\n   */\n  this.element = document.createElement('DIV');\n  this.element.className = options.className !== undefined ?\n    options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\n  this.element.style.position = 'absolute';\n\n  /**\n   * @protected\n   * @type {boolean}\n   */\n  this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\n\n  /**\n   * @protected\n   * @type {module:ol/Overlay~PanOptions}\n   */\n  this.autoPanAnimation = options.autoPanAnimation || /** @type {module:ol/Overlay~PanOptions} */ ({});\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.autoPanMargin = options.autoPanMargin !== undefined ?\n    options.autoPanMargin : 20;\n\n  /**\n   * @protected\n   * @type {{bottom_: string,\n   *         left_: string,\n   *         right_: string,\n   *         top_: string,\n   *         visible: boolean}}\n   */\n  this.rendered = {\n    bottom_: '',\n    left_: '',\n    right_: '',\n    top_: '',\n    visible: true\n  };\n\n  /**\n   * @protected\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.mapPostrenderListenerKey = null;\n\n  listen(\n    this, getChangeEventType(Property.ELEMENT),\n    this.handleElementChanged, this);\n\n  listen(\n    this, getChangeEventType(Property.MAP),\n    this.handleMapChanged, this);\n\n  listen(\n    this, getChangeEventType(Property.OFFSET),\n    this.handleOffsetChanged, this);\n\n  listen(\n    this, getChangeEventType(Property.POSITION),\n    this.handlePositionChanged, this);\n\n  listen(\n    this, getChangeEventType(Property.POSITIONING),\n    this.handlePositioningChanged, this);\n\n  if (options.element !== undefined) {\n    this.setElement(options.element);\n  }\n\n  this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n  this.setPositioning(options.positioning !== undefined ?\n    /** @type {module:ol/OverlayPositioning} */ (options.positioning) :\n    OverlayPositioning.TOP_LEFT);\n\n  if (options.position !== undefined) {\n    this.setPosition(options.position);\n  }\n\n};\n\ninherits(Overlay, BaseObject);\n\n\n/**\n * Get the DOM element of this overlay.\n * @return {Element|undefined} The Element containing the overlay.\n * @observable\n * @api\n */\nOverlay.prototype.getElement = function() {\n  return /** @type {Element|undefined} */ (this.get(Property.ELEMENT));\n};\n\n\n/**\n * Get the overlay identifier which is set on constructor.\n * @return {number|string|undefined} Id.\n * @api\n */\nOverlay.prototype.getId = function() {\n  return this.id;\n};\n\n\n/**\n * Get the map associated with this overlay.\n * @return {module:ol/PluggableMap|undefined} The map that the\n * overlay is part of.\n * @observable\n * @api\n */\nOverlay.prototype.getMap = function() {\n  return (\n    /** @type {module:ol/PluggableMap|undefined} */ (this.get(Property.MAP))\n  );\n};\n\n\n/**\n * Get the offset of this overlay.\n * @return {Array.<number>} The offset.\n * @observable\n * @api\n */\nOverlay.prototype.getOffset = function() {\n  return /** @type {Array.<number>} */ (this.get(Property.OFFSET));\n};\n\n\n/**\n * Get the current position of this overlay.\n * @return {module:ol/coordinate~Coordinate|undefined} The spatial point that the overlay is\n *     anchored at.\n * @observable\n * @api\n */\nOverlay.prototype.getPosition = function() {\n  return (\n    /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(Property.POSITION))\n  );\n};\n\n\n/**\n * Get the current positioning of this overlay.\n * @return {module:ol/OverlayPositioning} How the overlay is positioned\n *     relative to its point on the map.\n * @observable\n * @api\n */\nOverlay.prototype.getPositioning = function() {\n  return (\n    /** @type {module:ol/OverlayPositioning} */ (this.get(Property.POSITIONING))\n  );\n};\n\n\n/**\n * @protected\n */\nOverlay.prototype.handleElementChanged = function() {\n  removeChildren(this.element);\n  const element = this.getElement();\n  if (element) {\n    this.element.appendChild(element);\n  }\n};\n\n\n/**\n * @protected\n */\nOverlay.prototype.handleMapChanged = function() {\n  if (this.mapPostrenderListenerKey) {\n    removeNode(this.element);\n    unlistenByKey(this.mapPostrenderListenerKey);\n    this.mapPostrenderListenerKey = null;\n  }\n  const map = this.getMap();\n  if (map) {\n    this.mapPostrenderListenerKey = listen(map,\n      MapEventType.POSTRENDER, this.render, this);\n    this.updatePixelPosition();\n    const container = this.stopEvent ?\n      map.getOverlayContainerStopEvent() : map.getOverlayContainer();\n    if (this.insertFirst) {\n      container.insertBefore(this.element, container.childNodes[0] || null);\n    } else {\n      container.appendChild(this.element);\n    }\n  }\n};\n\n\n/**\n * @protected\n */\nOverlay.prototype.render = function() {\n  this.updatePixelPosition();\n};\n\n\n/**\n * @protected\n */\nOverlay.prototype.handleOffsetChanged = function() {\n  this.updatePixelPosition();\n};\n\n\n/**\n * @protected\n */\nOverlay.prototype.handlePositionChanged = function() {\n  this.updatePixelPosition();\n  if (this.get(Property.POSITION) && this.autoPan) {\n    this.panIntoView();\n  }\n};\n\n\n/**\n * @protected\n */\nOverlay.prototype.handlePositioningChanged = function() {\n  this.updatePixelPosition();\n};\n\n\n/**\n * Set the DOM element to be associated with this overlay.\n * @param {Element|undefined} element The Element containing the overlay.\n * @observable\n * @api\n */\nOverlay.prototype.setElement = function(element) {\n  this.set(Property.ELEMENT, element);\n};\n\n\n/**\n * Set the map to be associated with this overlay.\n * @param {module:ol/PluggableMap|undefined} map The map that the\n * overlay is part of.\n * @observable\n * @api\n */\nOverlay.prototype.setMap = function(map) {\n  this.set(Property.MAP, map);\n};\n\n\n/**\n * Set the offset for this overlay.\n * @param {Array.<number>} offset Offset.\n * @observable\n * @api\n */\nOverlay.prototype.setOffset = function(offset) {\n  this.set(Property.OFFSET, offset);\n};\n\n\n/**\n * Set the position for this overlay. If the position is `undefined` the\n * overlay is hidden.\n * @param {module:ol/coordinate~Coordinate|undefined} position The spatial point that the overlay\n *     is anchored at.\n * @observable\n * @api\n */\nOverlay.prototype.setPosition = function(position) {\n  this.set(Property.POSITION, position);\n};\n\n\n/**\n * Pan the map so that the overlay is entirely visible in the current viewport\n * (if necessary).\n * @protected\n */\nOverlay.prototype.panIntoView = function() {\n  const map = this.getMap();\n\n  if (!map || !map.getTargetElement()) {\n    return;\n  }\n\n  const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n  const element = /** @type {!Element} */ (this.getElement());\n  const overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\n\n  const margin = this.autoPanMargin;\n  if (!containsExtent(mapRect, overlayRect)) {\n    // the overlay is not completely inside the viewport, so pan the map\n    const offsetLeft = overlayRect[0] - mapRect[0];\n    const offsetRight = mapRect[2] - overlayRect[2];\n    const offsetTop = overlayRect[1] - mapRect[1];\n    const offsetBottom = mapRect[3] - overlayRect[3];\n\n    const delta = [0, 0];\n    if (offsetLeft < 0) {\n      // move map to the left\n      delta[0] = offsetLeft - margin;\n    } else if (offsetRight < 0) {\n      // move map to the right\n      delta[0] = Math.abs(offsetRight) + margin;\n    }\n    if (offsetTop < 0) {\n      // move map up\n      delta[1] = offsetTop - margin;\n    } else if (offsetBottom < 0) {\n      // move map down\n      delta[1] = Math.abs(offsetBottom) + margin;\n    }\n\n    if (delta[0] !== 0 || delta[1] !== 0) {\n      const center = /** @type {module:ol/coordinate~Coordinate} */ (map.getView().getCenter());\n      const centerPx = map.getPixelFromCoordinate(center);\n      const newCenterPx = [\n        centerPx[0] + delta[0],\n        centerPx[1] + delta[1]\n      ];\n\n      map.getView().animate({\n        center: map.getCoordinateFromPixel(newCenterPx),\n        duration: this.autoPanAnimation.duration,\n        easing: this.autoPanAnimation.easing\n      });\n    }\n  }\n};\n\n\n/**\n * Get the extent of an element relative to the document\n * @param {Element|undefined} element The element.\n * @param {module:ol/size~Size|undefined} size The size of the element.\n * @return {module:ol/extent~Extent} The extent.\n * @protected\n */\nOverlay.prototype.getRect = function(element, size) {\n  const box = element.getBoundingClientRect();\n  const offsetX = box.left + window.pageXOffset;\n  const offsetY = box.top + window.pageYOffset;\n  return [\n    offsetX,\n    offsetY,\n    offsetX + size[0],\n    offsetY + size[1]\n  ];\n};\n\n\n/**\n * Set the positioning for this overlay.\n * @param {module:ol/OverlayPositioning} positioning how the overlay is\n *     positioned relative to its point on the map.\n * @observable\n * @api\n */\nOverlay.prototype.setPositioning = function(positioning) {\n  this.set(Property.POSITIONING, positioning);\n};\n\n\n/**\n * Modify the visibility of the element.\n * @param {boolean} visible Element visibility.\n * @protected\n */\nOverlay.prototype.setVisible = function(visible) {\n  if (this.rendered.visible !== visible) {\n    this.element.style.display = visible ? '' : 'none';\n    this.rendered.visible = visible;\n  }\n};\n\n\n/**\n * Update pixel position.\n * @protected\n */\nOverlay.prototype.updatePixelPosition = function() {\n  const map = this.getMap();\n  const position = this.getPosition();\n  if (!map || !map.isRendered() || !position) {\n    this.setVisible(false);\n    return;\n  }\n\n  const pixel = map.getPixelFromCoordinate(position);\n  const mapSize = map.getSize();\n  this.updateRenderedPosition(pixel, mapSize);\n};\n\n\n/**\n * @param {module:ol~Pixel} pixel The pixel location.\n * @param {module:ol/size~Size|undefined} mapSize The map size.\n * @protected\n */\nOverlay.prototype.updateRenderedPosition = function(pixel, mapSize) {\n  const style = this.element.style;\n  const offset = this.getOffset();\n\n  const positioning = this.getPositioning();\n\n  this.setVisible(true);\n\n  let offsetX = offset[0];\n  let offsetY = offset[1];\n  if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n      positioning == OverlayPositioning.CENTER_RIGHT ||\n      positioning == OverlayPositioning.TOP_RIGHT) {\n    if (this.rendered.left_ !== '') {\n      this.rendered.left_ = style.left = '';\n    }\n    const right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\n    if (this.rendered.right_ != right) {\n      this.rendered.right_ = style.right = right;\n    }\n  } else {\n    if (this.rendered.right_ !== '') {\n      this.rendered.right_ = style.right = '';\n    }\n    if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n        positioning == OverlayPositioning.CENTER_CENTER ||\n        positioning == OverlayPositioning.TOP_CENTER) {\n      offsetX -= this.element.offsetWidth / 2;\n    }\n    const left = Math.round(pixel[0] + offsetX) + 'px';\n    if (this.rendered.left_ != left) {\n      this.rendered.left_ = style.left = left;\n    }\n  }\n  if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.BOTTOM_RIGHT) {\n    if (this.rendered.top_ !== '') {\n      this.rendered.top_ = style.top = '';\n    }\n    const bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\n    if (this.rendered.bottom_ != bottom) {\n      this.rendered.bottom_ = style.bottom = bottom;\n    }\n  } else {\n    if (this.rendered.bottom_ !== '') {\n      this.rendered.bottom_ = style.bottom = '';\n    }\n    if (positioning == OverlayPositioning.CENTER_LEFT ||\n        positioning == OverlayPositioning.CENTER_CENTER ||\n        positioning == OverlayPositioning.CENTER_RIGHT) {\n      offsetY -= this.element.offsetHeight / 2;\n    }\n    const top = Math.round(pixel[1] + offsetY) + 'px';\n    if (this.rendered.top_ != top) {\n      this.rendered.top_ = style.top = top;\n    }\n  }\n};\n\n\n/**\n * returns the options this Overlay has been created with\n * @return {module:ol/Overlay~Options} overlay options\n */\nOverlay.prototype.getOptions = function() {\n  return this.options;\n};\n\nexport default Overlay;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @return {module:ol/colorlike~ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (isColorLike(color)) {\n    return /** @type {string|CanvasPattern|CanvasGradient} */ (color);\n  } else {\n    return toString(/** @type {module:ol/color~Color} */ (color));\n  }\n}\n\n\n/**\n * @param {?} color The value that is potentially an {@link ol/colorlike~ColorLike}.\n * @return {boolean} The color is an {@link ol/colorlike~ColorLike}.\n */\nexport function isColorLike(color) {\n  return (\n    typeof color === 'string' ||\n    color instanceof CanvasPattern ||\n    color instanceof CanvasGradient\n  );\n}\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  FRACTION: 'fraction',\n  PIXELS: 'pixels'\n};\n","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport {inherits} from './util.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\n/**\n * @constructor\n * @extends {module:ol/MapBrowserEvent}\n * @param {string} type Event type.\n * @param {module:ol/PluggableMap} map Map.\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @param {boolean=} opt_dragging Is the map currently being dragged?\n * @param {?module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n */\nconst MapBrowserPointerEvent = function(type, map, pointerEvent, opt_dragging,\n  opt_frameState) {\n\n  MapBrowserEvent.call(this, type, map, pointerEvent.originalEvent, opt_dragging,\n    opt_frameState);\n\n  /**\n   * @const\n   * @type {module:ol/pointer/PointerEvent}\n   */\n  this.pointerEvent = pointerEvent;\n\n};\n\ninherits(MapBrowserPointerEvent, MapBrowserEvent);\nexport default MapBrowserPointerEvent;\n","/**\n * @module ol/interaction/Select\n */\nimport {getUid, inherits} from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {extend, includes} from '../array.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {singleClick, never, shiftKeyOnly, pointerMove} from '../events/condition.js';\nimport {TRUE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from '../interaction/Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clear} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select'\n};\n\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function((module:ol/Feature|module:ol/render/Feature), module:ol/layer/Layer):\n *     boolean} FilterFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array.<module:ol/layer/Layer>|function(module:ol/layer/Layer): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}).\n * @property {module:ol/events/condition~Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {module:ol/events/condition~Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {module:ol/interaction/Select~FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the selection\n * overlay.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n *\n * @param {SelectEventType} type The event type.\n * @param {Array.<module:ol/Feature>} selected Selected features.\n * @param {Array.<module:ol/Feature>} deselected Deselected features.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Associated\n *     {@link module:ol/MapBrowserEvent}.\n * @extends {module:ol/events/Event}\n * @constructor\n */\nconst SelectEvent = function(type, selected, deselected, mapBrowserEvent) {\n  Event.call(this, type);\n\n  /**\n   * Selected features array.\n   * @type {Array.<module:ol/Feature>}\n   * @api\n   */\n  this.selected = selected;\n\n  /**\n   * Deselected features array.\n   * @type {Array.<module:ol/Feature>}\n   * @api\n   */\n  this.deselected = deselected;\n\n  /**\n   * Associated {@link module:ol/MapBrowserEvent}.\n   * @type {module:ol/MapBrowserEvent}\n   * @api\n   */\n  this.mapBrowserEvent = mapBrowserEvent;\n};\n\ninherits(SelectEvent, Event);\n\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @param {module:ol/interaction/Select~Options=} opt_options Options.\n * @fires SelectEvent\n * @api\n */\nconst Select = function(opt_options) {\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : singleClick;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multi_ = options.multi ? options.multi : false;\n\n  /**\n   * @private\n   * @type {module:ol/interaction/Select~FilterFunction}\n   */\n  this.filter_ = options.filter ? options.filter : TRUE;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n  const featureOverlay = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      features: options.features,\n      wrapX: options.wrapX\n    }),\n    style: options.style ? options.style :\n      getDefaultStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @private\n   * @type {module:ol/layer/Vector}\n   */\n  this.featureOverlay_ = featureOverlay;\n\n  /** @type {function(module:ol/layer/Layer): boolean} */\n  let layerFilter;\n  if (options.layers) {\n    if (typeof options.layers === 'function') {\n      layerFilter = options.layers;\n    } else {\n      const layers = options.layers;\n      layerFilter = function(layer) {\n        return includes(layers, layer);\n      };\n    }\n  } else {\n    layerFilter = TRUE;\n  }\n\n  /**\n   * @private\n   * @type {function(module:ol/layer/Layer): boolean}\n   */\n  this.layerFilter_ = layerFilter;\n\n  /**\n   * An association between selected feature (key)\n   * and layer (value)\n   * @private\n   * @type {Object.<number, module:ol/layer/Layer>}\n   */\n  this.featureLayerAssociation_ = {};\n\n  const features = this.featureOverlay_.getSource().getFeaturesCollection();\n  listen(features, CollectionEventType.ADD,\n    this.addFeature_, this);\n  listen(features, CollectionEventType.REMOVE,\n    this.removeFeature_, this);\n\n};\n\ninherits(Select, Interaction);\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/layer/Layer} layer Layer.\n * @private\n */\nSelect.prototype.addFeatureLayerAssociation_ = function(feature, layer) {\n  const key = getUid(feature);\n  this.featureLayerAssociation_[key] = layer;\n};\n\n\n/**\n * Get the selected features.\n * @return {module:ol/Collection.<module:ol/Feature>} Features collection.\n * @api\n */\nSelect.prototype.getFeatures = function() {\n  return this.featureOverlay_.getSource().getFeaturesCollection();\n};\n\n\n/**\n * Returns the Hit-detection tolerance.\n * @returns {number} Hit tolerance in pixels.\n * @api\n */\nSelect.prototype.getHitTolerance = function() {\n  return this.hitTolerance_;\n};\n\n\n/**\n * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n * the (last) selected feature. Note that this will not work with any\n * programmatic method like pushing features to\n * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature\n * @return {module:ol/layer/Vector} Layer.\n * @api\n */\nSelect.prototype.getLayer = function(feature) {\n  const key = getUid(feature);\n  return (\n    /** @type {module:ol/layer/Vector} */ (this.featureLayerAssociation_[key])\n  );\n};\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n * selected state of features.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Select}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  const add = this.addCondition_(mapBrowserEvent);\n  const remove = this.removeCondition_(mapBrowserEvent);\n  const toggle = this.toggleCondition_(mapBrowserEvent);\n  const set = !add && !remove && !toggle;\n  const map = mapBrowserEvent.map;\n  const features = this.featureOverlay_.getSource().getFeaturesCollection();\n  const deselected = [];\n  const selected = [];\n  if (set) {\n    // Replace the currently selected feature(s) with the feature(s) at the\n    // pixel, or clear the selected feature(s) if there is no feature at\n    // the pixel.\n    clear(this.featureLayerAssociation_);\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @param {module:ol/layer/Layer} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            selected.push(feature);\n            this.addFeatureLayerAssociation_(feature, layer);\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (let i = features.getLength() - 1; i >= 0; --i) {\n      const feature = features.item(i);\n      const index = selected.indexOf(feature);\n      if (index > -1) {\n        // feature is already selected\n        selected.splice(index, 1);\n      } else {\n        features.remove(feature);\n        deselected.push(feature);\n      }\n    }\n    if (selected.length !== 0) {\n      features.extend(selected);\n    }\n  } else {\n    // Modify the currently selected feature(s).\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @param {module:ol/layer/Layer} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\n              selected.push(feature);\n              this.addFeatureLayerAssociation_(feature, layer);\n            } else if ((remove || toggle) && includes(features.getArray(), feature)) {\n              deselected.push(feature);\n              this.removeFeatureLayerAssociation_(feature);\n            }\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (let j = deselected.length - 1; j >= 0; --j) {\n      features.remove(deselected[j]);\n    }\n    features.extend(selected);\n  }\n  if (selected.length > 0 || deselected.length > 0) {\n    this.dispatchEvent(\n      new SelectEvent(SelectEventType.SELECT,\n        selected, deselected, mapBrowserEvent));\n  }\n  return pointerMove(mapBrowserEvent);\n}\n\n\n/**\n * Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @api\n */\nSelect.prototype.setHitTolerance = function(hitTolerance) {\n  this.hitTolerance_ = hitTolerance;\n};\n\n\n/**\n * Remove the interaction from its current map, if any,  and attach it to a new\n * map, if any. Pass `null` to just remove the interaction from the current map.\n * @param {module:ol/PluggableMap} map Map.\n * @override\n * @api\n */\nSelect.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const selectedFeatures =\n      this.featureOverlay_.getSource().getFeaturesCollection();\n  if (currentMap) {\n    selectedFeatures.forEach(currentMap.unskipFeature.bind(currentMap));\n  }\n  Interaction.prototype.setMap.call(this, map);\n  this.featureOverlay_.setMap(map);\n  if (map) {\n    selectedFeatures.forEach(map.skipFeature.bind(map));\n  }\n};\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n\n  return function(feature, resolution) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nSelect.prototype.addFeature_ = function(evt) {\n  const map = this.getMap();\n  if (map) {\n    map.skipFeature(/** @type {module:ol/Feature} */ (evt.element));\n  }\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nSelect.prototype.removeFeature_ = function(evt) {\n  const map = this.getMap();\n  if (map) {\n    map.unskipFeature(/** @type {module:ol/Feature} */ (evt.element));\n  }\n};\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @private\n */\nSelect.prototype.removeFeatureLayerAssociation_ = function(feature) {\n  const key = getUid(feature);\n  delete this.featureLayerAssociation_[key];\n};\n\n\nexport default Select;\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right'\n};\n","/**\n * @module ol/source/WMTSRequestEncoding\n */\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nexport default {\n  KVP: 'KVP',  // see spec §8\n  REST: 'REST' // see spec §10\n};\n","/**\n * @module ol/source/WMTS\n */\nimport {inherits} from '../util.js';\nimport {expandUrl, createFromTileUrlFunctions, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {find, findIndex, includes} from '../array.js';\nimport {containsExtent} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, equivalent, transformExtent} from '../proj.js';\nimport TileImage from '../source/TileImage.js';\nimport WMTSRequestEncoding from '../source/WMTSRequestEncoding.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {module:ol/tilegrid/WMTS} tileGrid Tile grid.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {boolean} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/source/WMTSRequestEncoding|string} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {module:ol/ImageTile~TileClass} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [version='image/jpeg'] Image format.\n * @property {string} [format='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array.<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n *\n * @constructor\n * @extends {module:ol/source/TileImage}\n * @param {module:ol/source/WMTS~Options=} options WMTS options.\n * @api\n */\nconst WMTS = function(options) {\n\n  // TODO: add support for TileMatrixLimits\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.dimensions_ = options.dimensions !== undefined ? options.dimensions : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.layer_ = options.layer;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.matrixSet_ = options.matrixSet;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.style_ = options.style;\n\n  let urls = options.urls;\n  if (urls === undefined && options.url !== undefined) {\n    urls = expandUrl(options.url);\n  }\n\n  // FIXME: should we guess this requestEncoding from options.url(s)\n  //        structure? that would mean KVP only if a template is not provided.\n\n  /**\n   * @private\n   * @type {module:ol/source/WMTSRequestEncoding}\n   */\n  this.requestEncoding_ = options.requestEncoding !== undefined ?\n    /** @type {module:ol/source/WMTSRequestEncoding} */ (options.requestEncoding) :\n    WMTSRequestEncoding.KVP;\n\n  const requestEncoding = this.requestEncoding_;\n\n  // FIXME: should we create a default tileGrid?\n  // we could issue a getCapabilities xhr to retrieve missing configuration\n  const tileGrid = options.tileGrid;\n\n  // context property names are lower case to allow for a case insensitive\n  // replacement as some services use different naming conventions\n  const context = {\n    'layer': this.layer_,\n    'style': this.style_,\n    'tilematrixset': this.matrixSet_\n  };\n\n  if (requestEncoding == WMTSRequestEncoding.KVP) {\n    assign(context, {\n      'Service': 'WMTS',\n      'Request': 'GetTile',\n      'Version': this.version_,\n      'Format': this.format_\n    });\n  }\n\n  const dimensions = this.dimensions_;\n\n  /**\n   * @param {string} template Template.\n   * @return {module:ol/Tile~UrlFunction} Tile URL function.\n   * @private\n   */\n  this.createFromWMTSTemplate_ = function(template) {\n\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n\n    template = (requestEncoding == WMTSRequestEncoding.KVP) ?\n      appendParams(template, context) :\n      template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n        return (p.toLowerCase() in context) ? context[p.toLowerCase()] : m;\n      });\n\n    return (\n      /**\n       * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {module:ol/proj/Projection} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function(tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        } else {\n          const localContext = {\n            'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n            'TileCol': tileCoord[1],\n            'TileRow': -tileCoord[2] - 1\n          };\n          assign(localContext, dimensions);\n          let url = template;\n          if (requestEncoding == WMTSRequestEncoding.KVP) {\n            url = appendParams(url, localContext);\n          } else {\n            url = url.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n              return localContext[p];\n            });\n          }\n          return url;\n        }\n      }\n    );\n  };\n\n  const tileUrlFunction = (urls && urls.length > 0) ?\n    createFromTileUrlFunctions(urls.map(this.createFromWMTSTemplate_)) : nullTileUrlFunction;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: tileUrlFunction,\n    urls: urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : false,\n    transition: options.transition\n  });\n\n  this.setKey(this.getKeyForDimensions_());\n\n};\n\ninherits(WMTS, TileImage);\n\n/**\n * Set the URLs to use for requests.\n * URLs may contain OCG conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n * @override\n */\nWMTS.prototype.setUrls = function(urls) {\n  this.urls = urls;\n  const key = urls.join('\\n');\n  this.setTileUrlFunction(this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) :\n    createFromTileUrlFunctions(urls.map(this.createFromWMTSTemplate_.bind(this))), key);\n};\n\n/**\n * Get the dimensions, i.e. those passed to the constructor through the\n * \"dimensions\" option, and possibly updated using the updateDimensions\n * method.\n * @return {!Object} Dimensions.\n * @api\n */\nWMTS.prototype.getDimensions = function() {\n  return this.dimensions_;\n};\n\n\n/**\n * Return the image format of the WMTS source.\n * @return {string} Format.\n * @api\n */\nWMTS.prototype.getFormat = function() {\n  return this.format_;\n};\n\n\n/**\n * Return the layer of the WMTS source.\n * @return {string} Layer.\n * @api\n */\nWMTS.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * Return the matrix set of the WMTS source.\n * @return {string} MatrixSet.\n * @api\n */\nWMTS.prototype.getMatrixSet = function() {\n  return this.matrixSet_;\n};\n\n\n/**\n * Return the request encoding, either \"KVP\" or \"REST\".\n * @return {module:ol/source/WMTSRequestEncoding} Request encoding.\n * @api\n */\nWMTS.prototype.getRequestEncoding = function() {\n  return this.requestEncoding_;\n};\n\n\n/**\n * Return the style of the WMTS source.\n * @return {string} Style.\n * @api\n */\nWMTS.prototype.getStyle = function() {\n  return this.style_;\n};\n\n\n/**\n * Return the version of the WMTS source.\n * @return {string} Version.\n * @api\n */\nWMTS.prototype.getVersion = function() {\n  return this.version_;\n};\n\n\n/**\n * @private\n * @return {string} The key for the current dimensions.\n */\nWMTS.prototype.getKeyForDimensions_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.dimensions_) {\n    res[i++] = key + '-' + this.dimensions_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * Update the dimensions.\n * @param {Object} dimensions Dimensions.\n * @api\n */\nWMTS.prototype.updateDimensions = function(dimensions) {\n  assign(this.dimensions_, dimensions);\n  this.setKey(this.getKeyForDimensions_());\n};\n\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {?module:ol/source/WMTS~Options} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = find(layers, function(elt, index, array) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (l === null) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          const tileMatrixSet = find(tileMatrixSets, function(el) {\n            return el['Identifier'] == elt['TileMatrixSet'];\n          });\n          const supportedCRS = tileMatrixSet['SupportedCRS'];\n          const proj1 = getProjection(supportedCRS.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n                getProjection(supportedCRS);\n          const proj2 = getProjection(config['projection']);\n          if (proj1 && proj2) {\n            return equivalent(proj1, proj2);\n          } else {\n            return supportedCRS == config['projection'];\n          }\n        });\n    } else {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          return elt['TileMatrixSet'] == config['matrixSet'];\n        });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet = /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits = /** @type {Array.<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = findIndex(l['Style'], function(elt, index, array) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    } else {\n      return elt['isDefault'];\n    }\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function(elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = find(matrixSets, function(elt, index, array) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n        getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  const wgs84BoundingBox = l['WGS84BoundingBox'];\n  let extent, wrapX;\n  if (wgs84BoundingBox !== undefined) {\n    const wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    wrapX = (wgs84BoundingBox[0] == wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] == wgs84ProjectionExtent[2]);\n    extent = transformExtent(\n      wgs84BoundingBox, 'EPSG:4326', projection);\n    const projectionExtent = projection.getExtent();\n    if (projectionExtent) {\n      // If possible, do a sanity check on the extent - it should never be\n      // bigger than the validity extent of the projection of a matrix set.\n      if (!containsExtent(projectionExtent, extent)) {\n        extent = undefined;\n      }\n    }\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(matrixSetObj, extent, matrixLimits);\n\n  /** @type {!Array.<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if ('OperationsMetadata' in wmtsCap && 'GetTile' in wmtsCap['OperationsMetadata']) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = find(gets[i]['Constraint'], function(element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === WMTSRequestEncoding.KVP) {\n          if (includes(encodings, WMTSRequestEncoding.KVP)) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = WMTSRequestEncoding.KVP;\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = WMTSRequestEncoding.REST;\n    l['ResourceURL'].forEach(function(element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin']\n  };\n}\n\nexport default WMTS;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/format/KML\n */\nimport {inherits} from '../util.js';\nimport Feature from '../Feature.js';\nimport {extend, includes} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {readDecimal, readBoolean, readString, writeStringTextNode, writeCDATASection, writeDecimalTextNode, writeBooleanTextNode} from '../format/xsd.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {toRadians} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport {createElementNS, getAllTextContent, isDocument, isNode, makeArrayExtender,\n  makeArrayPusher, makeChildAppender, makeObjectPropertySetter,\n  makeReplacer, makeSequence, makeSimpleNodeFactory, makeStructureNS,\n  OBJECT_PROPERTY_NODE_FACTORY, parse, parseNode, pushParseAndPop,\n  pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x\n * @property {module:ol/style/IconAnchorUnits} xunits\n * @property {number} y\n * @property {module:ol/style/IconAnchorUnits} yunits\n * @property {module:ol/style/IconOrigin} origin\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array.<number>} flatCoordinates\n * @property {Array.<number>} whens\n */\n\n/**\n * @type {module:ol/color~Color}\n */\nlet DEFAULT_COLOR;\n\n/**\n * @type {module:ol/style/Fill}\n */\nlet DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {module:ol/style/Fill} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {module:ol/size~Size}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {module:ol/style/IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {module:ol/style/IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {module:ol/size~Size}\n */\nlet DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nlet DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {number}\n */\nlet DEFAULT_IMAGE_SCALE_MULTIPLIER;\n\n/**\n * @type {module:ol/style/Image}\n */\nlet DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {module:ol/style/Image} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nlet DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {module:ol/style/Stroke}\n */\nlet DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {module:ol/style/Stroke} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {module:ol/style/Stroke}\n */\nlet DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {module:ol/style/Text}\n */\nlet DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {module:ol/style/Text} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {module:ol/style/Style}\n */\nlet DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {module:ol/style/Style} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array.<module:ol/style/Style>}\n */\nlet DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array.<module:ol/style/Style>} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\n\nfunction createStyleDefaults() {\n\n  DEFAULT_COLOR = [255, 255, 255, 1];\n\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR\n  });\n\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2]; // FIXME maybe [8, 32] ?\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n\n  DEFAULT_IMAGE_STYLE_SRC =\n      'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  DEFAULT_IMAGE_SCALE_MULTIPLIER = 0.5;\n\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: DEFAULT_IMAGE_SCALE_MULTIPLIER,\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC\n  });\n\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1\n  });\n\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8\n  });\n\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0\n  });\n\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n\n}\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array.<module:ol/style/Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @constructor\n * @extends {module:ol/format/XMLFeature}\n * @param {module:ol/format/KML~Options=} opt_options Options.\n * @api\n */\nconst KML = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  if (!DEFAULT_STYLE_ARRAY) {\n    createStyleDefaults();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  this.dataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @private\n   * @type {Array.<module:ol/style/Style>}\n   */\n  this.defaultStyle_ = options.defaultStyle ?\n    options.defaultStyle : DEFAULT_STYLE_ARRAY;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.extractStyles_ = options.extractStyles !== undefined ?\n    options.extractStyles : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.writeStyles_ = options.writeStyles !== undefined ?\n    options.writeStyles : true;\n\n  /**\n   * @private\n   * @type {!Object.<string, (Array.<module:ol/style/Style>|string)>}\n   */\n  this.sharedStyles_ = {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.showPointNames_ = options.showPointNames !== undefined ?\n    options.showPointNames : true;\n\n};\n\ninherits(KML, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst GX_NAMESPACE_URIS = [\n  'http://www.google.com/kml/ext/2.2'\n];\n\n\n/**\n * @const\n * @type {Array.<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n\n/**\n * @type {Object.<string, module:ol/style/IconAnchorUnits>}\n */\nconst ICON_ANCHOR_UNITS_MAP = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS\n};\n\n\n/**\n * @param {module:ol/style/Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {module:ol/style/Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  let textStyle = null;\n  const textOffset = [0, 0];\n  let textAlign = 'start';\n  if (foundStyle.getImage()) {\n    let imageSize = foundStyle.getImage().getImageSize();\n    if (imageSize === null) {\n      imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n    if (imageSize.length == 2) {\n      const imageScale = foundStyle.getImage().getScale();\n      // Offset the label to be centered to the right of the icon, if there is\n      // one.\n      textOffset[0] = imageScale * imageSize[0] / 2;\n      textOffset[1] = -imageScale * imageSize[1] / 2;\n      textAlign = 'left';\n    }\n  }\n  if (foundStyle.getText() !== null) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    const foundText = foundStyle.getText();\n    textStyle = foundText.clone();\n    textStyle.setFont(foundText.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(foundText.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(foundText.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(foundText.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    text: textStyle\n  });\n  return nameStyle;\n}\n\n\n/**\n * @param {Array.<module:ol/style/Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array.<module:ol/style/Style>} defaultStyle Default style.\n * @param {!Object.<string, (Array.<module:ol/style/Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {module:ol/style/Style~StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(style, styleUrl, defaultStyle, sharedStyles, showPointNames) {\n\n  return (\n    /**\n     * @param {module:ol/Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array.<module:ol/style/Style>} Style.\n     */\n    function(feature, resolution) {\n      let drawName = showPointNames;\n      /** @type {module:ol/style/Style|undefined} */\n      let nameStyle;\n      let name = '';\n      if (drawName) {\n        const geometry = feature.getGeometry();\n        if (geometry) {\n          drawName = geometry.getType() === GeometryType.POINT;\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (feature.get('name'));\n        drawName = drawName && name;\n      }\n\n      if (style) {\n        if (drawName) {\n          nameStyle = createNameStyleFunction(style[0], name);\n          return style.concat(nameStyle);\n        }\n        return style;\n      }\n      if (styleUrl) {\n        const foundStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n        if (drawName) {\n          nameStyle = createNameStyleFunction(foundStyle[0], name);\n          return foundStyle.concat(nameStyle);\n        }\n        return foundStyle;\n      }\n      if (drawName) {\n        nameStyle = createNameStyleFunction(defaultStyle[0], name);\n        return defaultStyle.concat(nameStyle);\n      }\n      return defaultStyle;\n    }\n  );\n}\n\n\n/**\n * @param {Array.<module:ol/style/Style>|string|undefined} styleValue Style value.\n * @param {Array.<module:ol/style/Style>} defaultStyle Default style.\n * @param {!Object.<string, (Array.<module:ol/style/Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array.<module:ol/style/Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\n    // defined in the same document.  Add a leading `#` if it enables to find\n    // a style.\n    if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n      styleValue = '#' + styleValue;\n    }\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {module:ol/color~Color|undefined} Color.\n */\nfunction readColor(node) {\n  const s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255\n    ];\n\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  let s = getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  const re =\n      /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  const s = getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {module:ol/format/KML~Vec2} Vec2.\n */\nfunction readVec2(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin\n  };\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst STYLE_MAP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Pair': pairDataParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<module:ol/style/Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined,\n    STYLE_MAP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst ICON_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Icon': makeObjectPropertySetter(readIcon),\n    'heading': makeObjectPropertySetter(readDecimal),\n    'hotSpot': makeObjectPropertySetter(readVec2),\n    'scale': makeObjectPropertySetter(readScale)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = pushParseAndPop(\n    {}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n  let src;\n  const href = /** @type {string|undefined} */\n      (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  let anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  const hotSpot = /** @type {module:ol/format/KML~Vec2|undefined} */\n      (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === DEFAULT_IMAGE_STYLE_SRC) {\n    anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n    anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n    anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */\n      (IconObject['x']);\n  const y = /** @type {number|undefined} */\n      (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */\n      (IconObject['w']);\n  const h = /** @type {number|undefined} */\n      (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */\n      (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  let scale = /** @type {number|undefined} */\n      (object['scale']);\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n      if (scale === undefined) {\n        scale = DEFAULT_IMAGE_SCALE_MULTIPLIER;\n      }\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: 'anonymous', // FIXME should this be configurable?\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: src\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst LABEL_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'scale': makeObjectPropertySetter(readScale)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop(\n    {}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color: /** @type {module:ol/color~Color} */\n          ('color' in object ? object['color'] : DEFAULT_COLOR)\n    }),\n    scale: /** @type {number|undefined} */\n        (object['scale'])\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst LINE_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'width': makeObjectPropertySetter(readDecimal)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = pushParseAndPop(\n    {}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color: /** @type {module:ol/color~Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst POLY_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'fill': makeObjectPropertySetter(readBoolean),\n    'outline': makeObjectPropertySetter(readBoolean)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop(\n    {}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color: /** @type {module:ol/color~Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR)\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline = /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst FLAT_LINEAR_RING_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null,\n    FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  const gxTrackObject = /** @type {module:ol/format/KML~GxTrackObject} */\n      (objectStack[objectStack.length - 1]);\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const s = getAllTextContent(node, false);\n  const re =\n      /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(\n  GX_NAMESPACE_URIS, {\n    'Track': makeArrayPusher(readGxTrack)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  const lineStrings = pushParseAndPop([],\n    GX_MULTITRACK_GEOMETRY_PARSERS, node, objectStack);\n  if (!lineStrings) {\n    return undefined;\n  }\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setLineStrings(lineStrings);\n  return multiLineString;\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst GX_TRACK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'when': whenParser\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'coord': gxCoordParser\n    }));\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  const gxTrackObject = pushParseAndPop(\n    /** @type {module:ol/format/KML~GxTrackObject} */ ({\n      flatCoordinates: [],\n      whens: []\n    }), GX_TRACK_PARSERS, node, objectStack);\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const whens = gxTrackObject.whens;\n  for (let i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii; ++i) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(GeometryLayout.XYZM, flatCoordinates);\n  return lineString;\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst ICON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI)\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'x': makeObjectPropertySetter(readDecimal),\n      'y': makeObjectPropertySetter(readDecimal),\n      'w': makeObjectPropertySetter(readDecimal),\n      'h': makeObjectPropertySetter(readDecimal)\n    }));\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  const iconObject = pushParseAndPop(\n    {}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(null,\n    GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'extrude': makeObjectPropertySetter(readBoolean),\n    'tessellate': makeObjectPropertySetter(readBoolean),\n    'altitudeMode': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  const properties = pushParseAndPop({},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  const flatCoordinates =\n      readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    lineString.setProperties(properties);\n    return lineString;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  const properties = pushParseAndPop({},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  const flatCoordinates =\n      readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates,\n      [flatCoordinates.length]);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst MULTI_GEOMETRY_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LineString': makeArrayPusher(readLineString),\n    'LinearRing': makeArrayPusher(readLinearRing),\n    'MultiGeometry': makeArrayPusher(readMultiGeometry),\n    'Point': makeArrayPusher(readPoint),\n    'Polygon': makeArrayPusher(readPolygon)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/Geometry} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  const geometries = pushParseAndPop([],\n    MULTI_GEOMETRY_PARSERS, node, objectStack);\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  /** @type {module:ol/geom/Geometry} */\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry;\n  for (let i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == GeometryType.POINT) {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (let i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(null);\n      multiGeometry.setFlatCoordinates(layout, flatCoordinates);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(null);\n      multiGeometry.setLineStrings(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(null);\n      multiGeometry.setPolygons(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return (\n    /** @type {module:ol/geom/Geometry} */ (multiGeometry)\n  );\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  const properties = pushParseAndPop({},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  const flatCoordinates =\n      readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    point.setProperties(properties);\n    return point;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'innerBoundaryIs': innerBoundaryIsParser,\n    'outerBoundaryIs': outerBoundaryIsParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  const properties = pushParseAndPop(/** @type {Object<string,*>} */ ({}),\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  const flatLinearRings = pushParseAndPop([null],\n    FLAT_LINEAR_RINGS_PARSERS, node, objectStack);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    for (let i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates, ends);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'IconStyle': iconStyleParser,\n    'LabelStyle': labelStyleParser,\n    'LineStyle': lineStyleParser,\n    'PolyStyle': polyStyleParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<module:ol/style/Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  const styleObject = pushParseAndPop(\n    {}, STYLE_PARSERS, node, objectStack);\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle = /** @type {module:ol/style/Fill} */\n      ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : DEFAULT_FILL_STYLE);\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle = /** @type {module:ol/style/Image} */\n      ('imageStyle' in styleObject ?\n        styleObject['imageStyle'] : DEFAULT_IMAGE_STYLE);\n  if (imageStyle == DEFAULT_NO_IMAGE_STYLE) {\n    imageStyle = undefined;\n  }\n  const textStyle = /** @type {module:ol/style/Text} */\n      ('textStyle' in styleObject ?\n        styleObject['textStyle'] : DEFAULT_TEXT_STYLE);\n  let strokeStyle = /** @type {module:ol/style/Stroke} */\n      ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : DEFAULT_STROKE_STYLE);\n  const outline = /** @type {boolean|undefined} */\n      (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    strokeStyle = null;\n  }\n  return [new Style({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n  })];\n}\n\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {module:ol/geom/MultiPoint|module:ol/geom/MultiLineString|module:ol/geom/MultiPolygon}\n *     multiGeometry A multi-geometry.\n * @param {Array.<module:ol/geom/Geometry>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = hasTessellate = hasAltitudeMode = false;\n  for (let i = 0; i < ii; ++i) {\n    const geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst DATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'displayName': makeObjectPropertySetter(readString),\n    'value': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  const featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst EXTENDED_DATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Data': dataParser,\n    'SchemaData': schemaDataParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst REGION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LatLonAltBox': latLonAltBoxParser,\n    'Lod': lodParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst PAIR_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Style': makeObjectPropertySetter(readStyle),\n    'key': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  const pairObject = pushParseAndPop(\n    {}, PAIR_PARSERS, node, objectStack);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */\n      (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */\n        (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const Style = /** @type {module:ol/style/Style} */\n        (pairObject['Style']);\n    if (Style) {\n      objectStack[objectStack.length - 1] = Style;\n    }\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  const styleMapValue = readStyleMapValue(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst SCHEMA_DATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'SimpleData': simpleDataParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = readString(node);\n    const featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    featureObject[name] = data;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst LAT_LON_ALT_BOX_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'altitudeMode': makeObjectPropertySetter(readString),\n    'minAltitude': makeObjectPropertySetter(readDecimal),\n    'maxAltitude': makeObjectPropertySetter(readDecimal),\n    'north': makeObjectPropertySetter(readDecimal),\n    'south': makeObjectPropertySetter(readDecimal),\n    'east': makeObjectPropertySetter(readDecimal),\n    'west': makeObjectPropertySetter(readDecimal)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  const object = pushParseAndPop({}, LAT_LON_ALT_BOX_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north'])\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst LOD_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'minLodPixels': makeObjectPropertySetter(readDecimal),\n    'maxLodPixels': makeObjectPropertySetter(readDecimal),\n    'minFadeExtent': makeObjectPropertySetter(readDecimal),\n    'maxFadeExtent': makeObjectPropertySetter(readDecimal)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  const object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst INNER_BOUNDARY_IS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(undefined,\n    INNER_BOUNDARY_IS_PARSERS, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(undefined,\n    OUTER_BOUNDARY_IS_PARSERS, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst NETWORK_LINK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'Link': linkParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'visibility': makeObjectPropertySetter(readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst LINK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  const gxTrackObject = /** @type {module:ol/format/KML~GxTrackObject} */\n      (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst PLACEMARK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(\n      readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(\n      readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(\n      readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(\n      readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(\n      readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI),\n    'visibility': makeObjectPropertySetter(readBoolean)\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'MultiTrack': makeObjectPropertySetter(\n        readGxMultiTrack, 'geometry'),\n      'Track': makeObjectPropertySetter(\n        readGxTrack, 'geometry')\n    }\n  ));\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<module:ol/Feature>|undefined} Features.\n */\nKML.prototype.readDocumentOrFolder_ = function(node, objectStack) {\n  // FIXME use scope somehow\n  const parsersNS = makeStructureNS(\n    NAMESPACE_URIS, {\n      'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this)\n    });\n  /** @type {Array.<module:ol/Feature>} */\n  const features = pushParseAndPop([], parsersNS, node, objectStack, this);\n  if (features) {\n    return features;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {module:ol/Feature|undefined} Feature.\n */\nKML.prototype.readPlacemark_ = function(node, objectStack) {\n  const object = pushParseAndPop({'geometry': null},\n    PLACEMARK_PARSERS, node, objectStack);\n  if (!object) {\n    return undefined;\n  }\n  const feature = new Feature();\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    feature.setId(id);\n  }\n  const options = /** @type {module:ol/format/Feature~ReadOptions} */ (objectStack[0]);\n\n  const geometry = object['geometry'];\n  if (geometry) {\n    transformWithOptions(geometry, false, options);\n  }\n  feature.setGeometry(geometry);\n  delete object['geometry'];\n\n  if (this.extractStyles_) {\n    const style = object['Style'];\n    const styleUrl = object['styleUrl'];\n    const styleFunction = createFeatureStyleFunction(\n      style, styleUrl, this.defaultStyle_, this.sharedStyles_,\n      this.showPointNames_);\n    feature.setStyle(styleFunction);\n  }\n  delete object['Style'];\n  // we do not remove the styleUrl property from the object, so it\n  // gets stored on feature when setProperties is called\n\n  feature.setProperties(object);\n\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyle_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    const style = readStyle(node, objectStack);\n    if (style) {\n      let styleUri;\n      let baseURI = node.baseURI;\n      if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n      }\n      if (baseURI) {\n        const url = new URL('#' + id, baseURI);\n        styleUri = url.href;\n      } else {\n        styleUri = '#' + id;\n      }\n      this.sharedStyles_[styleUri] = style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyleMap_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id === null) {\n    return;\n  }\n  const styleMapValue = readStyleMapValue(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  let styleUri;\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL('#' + id, baseURI);\n    styleUri = url.href;\n  } else {\n    styleUri = '#' + id;\n  }\n  this.sharedStyles_[styleUri] = styleMapValue;\n};\n\n\n/**\n * Read the first feature from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/Feature} Feature.\n * @api\n */\nKML.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return null;\n  }\n  const feature = this.readPlacemark_(\n    node, [this.getReadOptions(node, opt_options)]);\n  if (feature) {\n    return feature;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Read all features from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nKML.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return [];\n  }\n  let features;\n  const localName = node.localName;\n  if (localName == 'Document' || localName == 'Folder') {\n    features = this.readDocumentOrFolder_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      return features;\n    } else {\n      return [];\n    }\n  } else if (localName == 'Placemark') {\n    const feature = this.readPlacemark_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (feature) {\n      return [feature];\n    } else {\n      return [];\n    }\n  } else if (localName == 'kml') {\n    features = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const fs = this.readFeaturesFromNode(n, opt_options);\n      if (fs) {\n        extend(features, fs);\n      }\n    }\n    return features;\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * Read the name of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {string|undefined} Name.\n * @api\n */\nKML.prototype.readName = function(source) {\n  if (isDocument(source)) {\n    return this.readNameFromDocument(/** @type {Document} */ (source));\n  } else if (isNode(source)) {\n    return this.readNameFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = parse(source);\n    return this.readNameFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromNode = function(node) {\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n        n.localName == 'name') {\n      return readString(n);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'Placemark' ||\n         localName == 'kml')) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Read the network links of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Network links.\n * @api\n */\nKML.prototype.readNetworkLinks = function(source) {\n  const networkLinks = [];\n  if (isDocument(source)) {\n    extend(networkLinks, this.readNetworkLinksFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (isNode(source)) {\n    extend(networkLinks, this.readNetworkLinksFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = parse(source);\n    extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromDocument = function(doc) {\n  const networkLinks = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromNode = function(node) {\n  const networkLinks = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n        n.localName == 'NetworkLink') {\n      const obj = pushParseAndPop({}, NETWORK_LINK_PARSERS,\n        n, []);\n      networkLinks.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * Read the regions of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Regions.\n * @api\n */\nKML.prototype.readRegion = function(source) {\n  const regions = [];\n  if (isDocument(source)) {\n    extend(regions, this.readRegionFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (isNode(source)) {\n    extend(regions, this.readRegionFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = parse(source);\n    extend(regions, this.readRegionFromDocument(doc));\n  }\n  return regions;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Region.\n */\nKML.prototype.readRegionFromDocument = function(doc) {\n  const regions = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Region.\n * @api\n */\nKML.prototype.readRegionFromNode = function(node) {\n  const regions = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n        n.localName == 'Region') {\n      const obj = pushParseAndPop({}, REGION_PARSERS,\n        n, []);\n      regions.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * Read the projection from a KML source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {module:ol/proj/Projection} Projection.\n * @api\n */\nKML.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {module:ol/color~Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  const rgba = asArray(color);\n  const opacity = (rgba.length == 4) ? rgba[3] : 1;\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (let i = 0; i < 4; ++i) {\n    const hex = parseInt(abgr[i], 10).toString(16);\n    abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array.<number>} coordinates Coordinates.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == GeometryLayout.XY ||\n      layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ ||\n      layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (let d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (let i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (let d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Data': makeChildAppender(writeDataNode),\n    'value': makeChildAppender(writeDataNodeValue),\n    'displayName': makeChildAppender(writeDataNodeName)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst DOCUMENT_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Placemark': makeChildAppender(writePlacemark)\n  });\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nconst DOCUMENT_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {Array.<*>} objectStack Object stack.\n * @this {module:ol/format/KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(context, DOCUMENT_SERIALIZERS,\n    DOCUMENT_NODE_FACTORY, features, objectStack, undefined,\n    this);\n}\n\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n */\nconst DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n      DATA_NODE_FACTORY, [{name: names[i], value: values[i]}], objectStack);\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst ICON_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'href'\n  ],\n  makeStructureNS(GX_NAMESPACE_URIS, [\n    'x', 'y', 'w', 'h'\n  ]));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst ICON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'href': makeChildAppender(writeStringTextNode)\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'x': makeChildAppender(writeDecimalTextNode),\n      'y': makeChildAppender(writeDecimalTextNode),\n      'w': makeChildAppender(writeDecimalTextNode),\n      'h': makeChildAppender(writeDecimalTextNode)\n    }));\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nconst GX_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0],\n    'gx:' + opt_nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  let values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(context,\n    ICON_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n  orderedKeys =\n      ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(context, ICON_SERIALIZERS,\n    GX_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst ICON_STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'scale', 'heading', 'Icon', 'hotSpot'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst ICON_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Icon': makeChildAppender(writeIcon),\n    'heading': makeChildAppender(writeDecimalTextNode),\n    'hotSpot': makeChildAppender(writeVec2),\n    'scale': makeChildAppender(writeScaleTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Icon} style Icon style.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {module:ol/format/KML~Vec2} */ hotSpot = {\n        x: anchor[0],\n        xunits: IconAnchorUnits.PIXELS,\n        y: size[1] - anchor[1],\n        yunits: IconAnchorUnits.PIXELS\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  const scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, ICON_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst LABEL_STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'color', 'scale'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst LABEL_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'scale': makeChildAppender(writeScaleTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Text} style style.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys =\n      LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, LABEL_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst LINE_STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'color', 'width'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst LINE_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'width': makeChildAppender(writeDecimalTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Stroke} style style.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': style.getWidth()\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, LINE_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nconst GEOMETRY_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(parentNode.namespaceURI,\n      GEOMETRY_TYPE_TO_NODENAME[/** @type {module:ol/geom/Geometry} */ (value).getType()]);\n  }\n};\n\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LineString': makeChildAppender(\n      writePrimitiveGeometry),\n    'Point': makeChildAppender(\n      writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'GeometryCollection': makeChildAppender(\n      writeMultiGeometry)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {module:ol/xml~NodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array.<module:ol/geom/Geometry>} */\n  let geometries;\n  /** @type {function(*, Array.<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\n    geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_POINT) {\n    geometries = /** @type {module:ol/geom/MultiPoint} */ (geometry).getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\n    geometries =\n        (/** @type {module:ol/geom/MultiLineString} */ (geometry)).getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_POLYGON) {\n    geometries =\n        (/** @type {module:ol/geom/MultiPolygon} */ (geometry)).getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  pushSerializeAndPop(context,\n    MULTI_GEOMETRY_SERIALIZERS, factory,\n    geometries, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst BOUNDARY_IS_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LinearRing': makeChildAppender(\n      writePrimitiveGeometry)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LinearRing} linearRing Linear ring.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(context,\n    BOUNDARY_IS_SERIALIZERS,\n    LINEAR_RING_NODE_FACTORY, [linearRing], objectStack);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst PLACEMARK_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ExtendedData': makeChildAppender(writeExtendedData),\n    'MultiGeometry': makeChildAppender(writeMultiGeometry),\n    'LineString': makeChildAppender(writePrimitiveGeometry),\n    'LinearRing': makeChildAppender(writePrimitiveGeometry),\n    'Point': makeChildAppender(writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'Style': makeChildAppender(writeStyle),\n    'address': makeChildAppender(writeStringTextNode),\n    'description': makeChildAppender(writeStringTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'open': makeChildAppender(writeBooleanTextNode),\n    'phoneNumber': makeChildAppender(writeStringTextNode),\n    'styleUrl': makeChildAppender(writeStringTextNode),\n    'visibility': makeChildAppender(writeBooleanTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst PLACEMARK_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n    'styleUrl', 'Style'\n  ]);\n\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n */\nconst EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n * @this {module:ol/format/KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', feature.getId());\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {'address': 1, 'description': 1, 'name': 1, 'open': 1,\n    'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1};\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {}).sort().filter(function(v) {\n    return !filter[v];\n  });\n\n  if (keys.length > 0) {\n    const sequence = makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\n      EXTENDEDDATA_NODE_FACTORY, [namesAndValues], objectStack);\n  }\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction(feature, 0);\n    if (styles) {\n      const style = Array.isArray(styles) ? styles[0] : styles;\n      if (this.writeStyles_) {\n        properties['Style'] = style;\n      }\n      const textStyle = style.getText();\n      if (textStyle) {\n        properties['name'] = textStyle.getText();\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n\n  // serialize geometry\n  const options = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[0]);\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformWithOptions(geometry, true, options);\n  }\n  pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\n    GEOMETRY_NODE_FACTORY, [geometry], objectStack);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'extrude': makeChildAppender(writeBooleanTextNode),\n    'tessellate': makeChildAppender(writeBooleanTextNode),\n    'altitudeMode': makeChildAppender(writeStringTextNode),\n    'coordinates': makeChildAppender(writeCoordinatesTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, PRIMITIVE_GEOMETRY_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst POLYGON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'outerBoundaryIs': makeChildAppender(\n      writeBoundaryIs),\n    'innerBoundaryIs': makeChildAppender(\n      writeBoundaryIs)\n  });\n\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Polygon} polygon Polygon.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  // inner rings\n  pushSerializeAndPop(context,\n    POLYGON_SERIALIZERS,\n    INNER_BOUNDARY_NODE_FACTORY,\n    linearRings, objectStack);\n  // outer ring\n  pushSerializeAndPop(context,\n    POLYGON_SERIALIZERS,\n    OUTER_BOUNDARY_NODE_FACTORY,\n    [outerRing], objectStack);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst POLY_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode)\n  });\n\n\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst COLOR_NODE_FACTORY = makeSimpleNodeFactory('color');\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Fill} style Style.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(context, POLY_STYLE_SERIALIZERS,\n    COLOR_NODE_FACTORY, [style.getColor()], objectStack);\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node,\n    Math.round(scale * 1e6) / 1e6);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'IconStyle': makeChildAppender(writeIconStyle),\n    'LabelStyle': makeChildAppender(writeLabelStyle),\n    'LineStyle': makeChildAppender(writeLineStyle),\n    'PolyStyle': makeChildAppender(writePolyStyle)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Style} style Style.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeStyle(node, style, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  if (imageStyle instanceof Icon) {\n    properties['IconStyle'] = imageStyle;\n  }\n  if (textStyle) {\n    properties['LabelStyle'] = textStyle;\n  }\n  if (strokeStyle) {\n    properties['LineStyle'] = strokeStyle;\n  }\n  if (fillStyle) {\n    properties['PolyStyle'] = fillStyle;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the Vec2 to.\n * @param {module:ol/format/KML~Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', vec2.x);\n  node.setAttribute('y', vec2.y);\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst KML_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'Document', 'Placemark'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst KML_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Document': makeChildAppender(writeDocument),\n    'Placemark': makeChildAppender(writePlacemark)\n  });\n\n\n/**\n * Encode an array of features in the KML format. GeometryCollections, MultiPoints,\n * MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @function\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nKML.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the KML format as an XML node. GeometryCollections,\n * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nKML.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n  kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n  kml.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: kml};\n  const properties = {};\n  if (features.length > 1) {\n    properties['Document'] = features;\n  } else if (features.length == 1) {\n    properties['Placemark'] = features[0];\n  }\n  const orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, KML_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys,\n    this);\n  return kml;\n};\n\nexport default KML;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {module:ol/coordinate~Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array.<module:ol/coordinate~Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array.<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array.<module:ol/size~Size>} [sizes] Sizes.\n * @property {number|module:ol/size~Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array.<module:ol/size~Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n *\n * @constructor\n * @param {module:ol/tilegrid/TileGrid~Options} options Tile grid options.\n * @struct\n * @api\n */\nconst TileGrid = function(options) {\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n  /**\n   * @private\n   * @type {!Array.<number>}\n   */\n  this.resolutions_ = options.resolutions;\n  assert(isSorted(this.resolutions_, function(a, b) {\n    return b - a;\n  }, true), 17); // `resolutions` must be sorted in descending order\n\n\n  // check if we've got a consistent zoom factor and origin\n  let zoomFactor;\n  if (!options.origins) {\n    for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n      if (!zoomFactor) {\n        zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n      } else {\n        if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n          zoomFactor = undefined;\n          break;\n        }\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zoomFactor_ = zoomFactor;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxZoom = this.resolutions_.length - 1;\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.origin_ = options.origin !== undefined ? options.origin : null;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/coordinate~Coordinate>}\n   */\n  this.origins_ = null;\n  if (options.origins !== undefined) {\n    this.origins_ = options.origins;\n    assert(this.origins_.length == this.resolutions_.length,\n      20); // Number of `origins` and `resolutions` must be equal\n  }\n\n  const extent = options.extent;\n\n  if (extent !== undefined &&\n      !this.origin_ && !this.origins_) {\n    this.origin_ = getTopLeft(extent);\n  }\n\n  assert(\n    (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n    18); // Either `origin` or `origins` must be configured, never both\n\n  /**\n   * @private\n   * @type {Array.<number|module:ol/size~Size>}\n   */\n  this.tileSizes_ = null;\n  if (options.tileSizes !== undefined) {\n    this.tileSizes_ = options.tileSizes;\n    assert(this.tileSizes_.length == this.resolutions_.length,\n      19); // Number of `tileSizes` and `resolutions` must be equal\n  }\n\n  /**\n   * @private\n   * @type {number|module:ol/size~Size}\n   */\n  this.tileSize_ = options.tileSize !== undefined ?\n    options.tileSize :\n    !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n  assert(\n    (!this.tileSize_ && this.tileSizes_) ||\n      (this.tileSize_ && !this.tileSizes_),\n    22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = extent !== undefined ? extent : null;\n\n\n  /**\n   * @private\n   * @type {Array.<module:ol/TileRange>}\n   */\n  this.fullTileRanges_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n  if (options.sizes !== undefined) {\n    this.fullTileRanges_ = options.sizes.map(function(size, z) {\n      const tileRange = new TileRange(\n        Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n        Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n      return tileRange;\n    }, this);\n  } else if (extent) {\n    this.calculateTileRanges_(extent);\n  }\n\n};\n\n\n/**\n * @private\n * @type {module:ol/tilecoord~TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n\n/**\n * Call a function with each tile coordinate for a given extent and zoom level.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} zoom Integer zoom level.\n * @param {function(module:ol/tilecoord~TileCoord)} callback Function called with each tile coordinate.\n * @api\n */\nTileGrid.prototype.forEachTileCoord = function(extent, zoom, callback) {\n  const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n  for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n    for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n      callback([zoom, i, j]);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {function(this: T, number, module:ol/TileRange): boolean} callback Callback.\n * @param {T=} opt_this The object to use as `this` in `callback`.\n * @param {module:ol/TileRange=} opt_tileRange Temporary module:ol/TileRange object.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {boolean} Callback succeeded.\n * @template T\n */\nTileGrid.prototype.forEachTileCoordParentTileRange = function(tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n  let tileRange, x, y;\n  let tileCoordExtent = null;\n  let z = tileCoord[0] - 1;\n  if (this.zoomFactor_ === 2) {\n    x = tileCoord[1];\n    y = tileCoord[2];\n  } else {\n    tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n  }\n  while (z >= this.minZoom) {\n    if (this.zoomFactor_ === 2) {\n      x = Math.floor(x / 2);\n      y = Math.floor(y / 2);\n      tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n    } else {\n      tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    }\n    if (callback.call(opt_this, z, tileRange)) {\n      return true;\n    }\n    --z;\n  }\n  return false;\n};\n\n\n/**\n * Get the extent for this tile grid, if it was configured.\n * @return {module:ol/extent~Extent} Extent.\n */\nTileGrid.prototype.getExtent = function() {\n  return this.extent_;\n};\n\n\n/**\n * Get the maximum zoom level for the grid.\n * @return {number} Max zoom.\n * @api\n */\nTileGrid.prototype.getMaxZoom = function() {\n  return this.maxZoom;\n};\n\n\n/**\n * Get the minimum zoom level for the grid.\n * @return {number} Min zoom.\n * @api\n */\nTileGrid.prototype.getMinZoom = function() {\n  return this.minZoom;\n};\n\n\n/**\n * Get the origin for the grid at the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {module:ol/coordinate~Coordinate} Origin.\n * @api\n */\nTileGrid.prototype.getOrigin = function(z) {\n  if (this.origin_) {\n    return this.origin_;\n  } else {\n    return this.origins_[z];\n  }\n};\n\n\n/**\n * Get the resolution for the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {number} Resolution.\n * @api\n */\nTileGrid.prototype.getResolution = function(z) {\n  return this.resolutions_[z];\n};\n\n\n/**\n * Get the list of resolutions for the tile grid.\n * @return {Array.<number>} Resolutions.\n * @api\n */\nTileGrid.prototype.getResolutions = function() {\n  return this.resolutions_;\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileRange=} opt_tileRange Temporary module:ol/TileRange object.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {module:ol/TileRange} Tile range.\n */\nTileGrid.prototype.getTileCoordChildTileRange = function(tileCoord, opt_tileRange, opt_extent) {\n  if (tileCoord[0] < this.maxZoom) {\n    if (this.zoomFactor_ === 2) {\n      const minX = tileCoord[1] * 2;\n      const minY = tileCoord[2] * 2;\n      return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n    }\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    return this.getTileRangeForExtentAndZ(\n      tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n  }\n  return null;\n};\n\n\n/**\n * Get the extent for a tile range.\n * @param {number} z Integer zoom level.\n * @param {module:ol/TileRange} tileRange Tile range.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {module:ol/extent~Extent} Extent.\n */\nTileGrid.prototype.getTileRangeExtent = function(z, tileRange, opt_extent) {\n  const origin = this.getOrigin(z);\n  const resolution = this.getResolution(z);\n  const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n  const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n  const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n  const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n  const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n\n/**\n * Get a tile range for the given extent and integer zoom level.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} z Integer zoom level.\n * @param {module:ol/TileRange=} opt_tileRange Temporary tile range object.\n * @return {module:ol/TileRange} Tile range.\n */\nTileGrid.prototype.getTileRangeForExtentAndZ = function(extent, z, opt_tileRange) {\n  const tileCoord = tmpTileCoord;\n  this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n  const minX = tileCoord[1];\n  const minY = tileCoord[2];\n  this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n  return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {module:ol/coordinate~Coordinate} Tile center.\n */\nTileGrid.prototype.getTileCoordCenter = function(tileCoord) {\n  const origin = this.getOrigin(tileCoord[0]);\n  const resolution = this.getResolution(tileCoord[0]);\n  const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  return [\n    origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n    origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\n  ];\n};\n\n\n/**\n * Get the extent of a tile coordinate.\n *\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/extent~Extent=} opt_extent Temporary extent object.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nTileGrid.prototype.getTileCoordExtent = function(tileCoord, opt_extent) {\n  const origin = this.getOrigin(tileCoord[0]);\n  const resolution = this.getResolution(tileCoord[0]);\n  const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n  const minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n  const maxX = minX + tileSize[0] * resolution;\n  const maxY = minY + tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n\n/**\n * Get the tile coordinate for the given map coordinate and resolution.  This\n * method considers that coordinates that intersect tile boundaries should be\n * assigned the higher tile coordinate.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Destination module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndResolution = function(coordinate, resolution, opt_tileCoord) {\n  return this.getTileCoordForXYAndResolution_(\n    coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n};\n\n\n/**\n * Note that this method should not be called for resolutions that correspond\n * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} resolution Resolution (for a non-integer zoom level).\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *     intersections go to the higher tile coordinate, let edge intersections\n *     go to the lower tile coordinate.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Temporary module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndResolution_ = function(\n  x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n  const z = this.getZForResolution(resolution);\n  const scale = resolution / this.getResolution(z);\n  const origin = this.getOrigin(z);\n  const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  const adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  const yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  let tileCoordX = scale * xFromOrigin / tileSize[0];\n  let tileCoordY = scale * yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n\n/**\n * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n * they should have separate implementations.  This method is for integer zoom\n * levels.  The other method should only be called for resolutions corresponding\n * to non-integer zoom levels.\n * @param {number} x Map x coordinate.\n * @param {number} y Map y coordinate.\n * @param {number} z Integer zoom level.\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *     intersections go to the higher tile coordinate, let edge intersections\n *     go to the lower tile coordinate.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Temporary module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndZ_ = function(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n  const origin = this.getOrigin(z);\n  const resolution = this.getResolution(z);\n  const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  const adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  const yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  let tileCoordX = xFromOrigin / tileSize[0];\n  let tileCoordY = yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n\n/**\n * Get a tile coordinate given a map coordinate and zoom level.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} z Zoom level.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Destination module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndZ = function(coordinate, z, opt_tileCoord) {\n  return this.getTileCoordForXYAndZ_(\n    coordinate[0], coordinate[1], z, false, opt_tileCoord);\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {number} Tile resolution.\n */\nTileGrid.prototype.getTileCoordResolution = function(tileCoord) {\n  return this.resolutions_[tileCoord[0]];\n};\n\n\n/**\n * Get the tile size for a zoom level. The type of the return value matches the\n * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n * get an `module:ol/size~Size`, run the result through `module:ol/size~Size.toSize()`.\n * @param {number} z Z.\n * @return {number|module:ol/size~Size} Tile size.\n * @api\n */\nTileGrid.prototype.getTileSize = function(z) {\n  if (this.tileSize_) {\n    return this.tileSize_;\n  } else {\n    return this.tileSizes_[z];\n  }\n};\n\n\n/**\n * @param {number} z Zoom level.\n * @return {module:ol/TileRange} Extent tile range for the specified zoom level.\n */\nTileGrid.prototype.getFullTileRange = function(z) {\n  if (!this.fullTileRanges_) {\n    return null;\n  } else {\n    return this.fullTileRanges_[z];\n  }\n};\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number=} opt_direction If 0, the nearest resolution will be used.\n *     If 1, the nearest lower resolution will be used. If -1, the nearest\n *     higher resolution will be used. Default is 0.\n * @return {number} Z.\n * @api\n */\nTileGrid.prototype.getZForResolution = function(resolution, opt_direction) {\n  const z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n  return clamp(z, this.minZoom, this.maxZoom);\n};\n\n\n/**\n * @param {!module:ol/extent~Extent} extent Extent for this tile grid.\n * @private\n */\nTileGrid.prototype.calculateTileRanges_ = function(extent) {\n  const length = this.resolutions_.length;\n  const fullTileRanges = new Array(length);\n  for (let z = this.minZoom; z < length; ++z) {\n    fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n  }\n  this.fullTileRanges_ = fullTileRanges;\n};\nexport default TileGrid;\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  const outside = forEachCorner(extent,\n    /**\n     * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event ol/source/Vector~VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event ol/source/Vector~VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event ol/source/Vector~VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event ol/source/Vector~VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n","/**\n * @module ol/uri\n */\n\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function(k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  const numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n","/**\n * @module ol/style/RegularShape\n */\nimport {inherits} from '../util.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {CANVAS_LINE_DASH} from '../has.js';\nimport ImageState from '../ImageState.js';\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\nimport ImageStyle from '../style/Image.js';\n\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {boolean} [snapToPixel=true] If `true` integral numbers of pixels are used as the X and Y pixel coordinate\n * when drawing the shape in the output canvas. If `false` fractional numbers may be used. Using `true` allows for\n * \"sharp\" rendering (no blur), while using `false` allows for \"accurate\" rendering. Note that accuracy is important if\n * the shape's position is animated. Without it, the shape may jitter noticeably.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {module:ol/style/AtlasManager} [atlasManager] The atlas manager to use for this symbol. When\n * using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given, the\n * symbol is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @typedef {Object} RenderOptions\n * @property {module:ol/colorlike~ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array.<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n *\n * @constructor\n * @param {module:ol/style/RegularShape~Options} options Options.\n * @extends {module:ol/style/Image}\n * @api\n */\nconst RegularShape = function(options) {\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.checksums_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.hitDetectionCanvas_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.origin_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.points_ = options.points;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n    options.radius : options.radius1);\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.radius2_ = options.radius2;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.anchor_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.size_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.imageSize_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.hitDetectionImageSize_ = null;\n\n  /**\n   * @protected\n   * @type {module:ol/style/AtlasManager|undefined}\n   */\n  this.atlasManager_ = options.atlasManager;\n\n  this.render_(this.atlasManager_);\n\n  /**\n   * @type {boolean}\n   */\n  const snapToPixel = options.snapToPixel !== undefined ?\n    options.snapToPixel : true;\n\n  /**\n   * @type {boolean}\n   */\n  const rotateWithView = options.rotateWithView !== undefined ?\n    options.rotateWithView : false;\n\n  ImageStyle.call(this, {\n    opacity: 1,\n    rotateWithView: rotateWithView,\n    rotation: options.rotation !== undefined ? options.rotation : 0,\n    scale: 1,\n    snapToPixel: snapToPixel\n  });\n};\n\ninherits(RegularShape, ImageStyle);\n\n\n/**\n * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n * @return {module:ol/style/RegularShape} The cloned style.\n * @api\n */\nRegularShape.prototype.clone = function() {\n  const style = new RegularShape({\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    points: this.getPoints(),\n    radius: this.getRadius(),\n    radius2: this.getRadius2(),\n    angle: this.getAngle(),\n    snapToPixel: this.getSnapToPixel(),\n    stroke: this.getStroke() ?  this.getStroke().clone() : undefined,\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    atlasManager: this.atlasManager_\n  });\n  style.setOpacity(this.getOpacity());\n  style.setScale(this.getScale());\n  return style;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nRegularShape.prototype.getAnchor = function() {\n  return this.anchor_;\n};\n\n\n/**\n * Get the angle used in generating the shape.\n * @return {number} Shape's rotation in radians.\n * @api\n */\nRegularShape.prototype.getAngle = function() {\n  return this.angle_;\n};\n\n\n/**\n * Get the fill style for the shape.\n * @return {module:ol/style/Fill} Fill style.\n * @api\n */\nRegularShape.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.getHitDetectionImage = function(pixelRatio) {\n  return this.hitDetectionCanvas_;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nRegularShape.prototype.getImage = function(pixelRatio) {\n  return this.canvas_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.getImageSize = function() {\n  return this.imageSize_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.getHitDetectionImageSize = function() {\n  return this.hitDetectionImageSize_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.getImageState = function() {\n  return ImageState.LOADED;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nRegularShape.prototype.getOrigin = function() {\n  return this.origin_;\n};\n\n\n/**\n * Get the number of points for generating the shape.\n * @return {number} Number of points for stars and regular polygons.\n * @api\n */\nRegularShape.prototype.getPoints = function() {\n  return this.points_;\n};\n\n\n/**\n * Get the (primary) radius for the shape.\n * @return {number} Radius.\n * @api\n */\nRegularShape.prototype.getRadius = function() {\n  return this.radius_;\n};\n\n\n/**\n * Get the secondary radius for the shape.\n * @return {number|undefined} Radius2.\n * @api\n */\nRegularShape.prototype.getRadius2 = function() {\n  return this.radius2_;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nRegularShape.prototype.getSize = function() {\n  return this.size_;\n};\n\n\n/**\n * Get the stroke style for the shape.\n * @return {module:ol/style/Stroke} Stroke style.\n * @api\n */\nRegularShape.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.listenImageChange = function(listener, thisArg) {};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.load = function() {};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.unlistenImageChange = function(listener, thisArg) {};\n\n\n/**\n * @protected\n * @param {module:ol/style/AtlasManager|undefined} atlasManager An atlas manager.\n */\nRegularShape.prototype.render_ = function(atlasManager) {\n  let imageSize;\n  let lineCap = '';\n  let lineJoin = '';\n  let miterLimit = 0;\n  let lineDash = null;\n  let lineDashOffset = 0;\n  let strokeStyle;\n  let strokeWidth = 0;\n\n  if (this.stroke_) {\n    strokeStyle = this.stroke_.getColor();\n    if (strokeStyle === null) {\n      strokeStyle = defaultStrokeStyle;\n    }\n    strokeStyle = asColorLike(strokeStyle);\n    strokeWidth = this.stroke_.getWidth();\n    if (strokeWidth === undefined) {\n      strokeWidth = defaultLineWidth;\n    }\n    lineDash = this.stroke_.getLineDash();\n    lineDashOffset = this.stroke_.getLineDashOffset();\n    if (!CANVAS_LINE_DASH) {\n      lineDash = null;\n      lineDashOffset = 0;\n    }\n    lineJoin = this.stroke_.getLineJoin();\n    if (lineJoin === undefined) {\n      lineJoin = defaultLineJoin;\n    }\n    lineCap = this.stroke_.getLineCap();\n    if (lineCap === undefined) {\n      lineCap = defaultLineCap;\n    }\n    miterLimit = this.stroke_.getMiterLimit();\n    if (miterLimit === undefined) {\n      miterLimit = defaultMiterLimit;\n    }\n  }\n\n  let size = 2 * (this.radius_ + strokeWidth) + 1;\n\n  /** @type {module:ol/style/RegularShape~RenderOptions} */\n  const renderOptions = {\n    strokeStyle: strokeStyle,\n    strokeWidth: strokeWidth,\n    size: size,\n    lineCap: lineCap,\n    lineDash: lineDash,\n    lineDashOffset: lineDashOffset,\n    lineJoin: lineJoin,\n    miterLimit: miterLimit\n  };\n\n  if (atlasManager === undefined) {\n    // no atlas manager is used, create a new canvas\n    const context = createCanvasContext2D(size, size);\n    this.canvas_ = context.canvas;\n\n    // canvas.width and height are rounded to the closest integer\n    size = this.canvas_.width;\n    imageSize = size;\n\n    this.draw_(renderOptions, context, 0, 0);\n\n    this.createHitDetectionCanvas_(renderOptions);\n  } else {\n    // an atlas manager is used, add the symbol to an atlas\n    size = Math.round(size);\n\n    const hasCustomHitDetectionImage = !this.fill_;\n    let renderHitDetectionCallback;\n    if (hasCustomHitDetectionImage) {\n      // render the hit-detection image into a separate atlas image\n      renderHitDetectionCallback =\n          this.drawHitDetectionCanvas_.bind(this, renderOptions);\n    }\n\n    const id = this.getChecksum();\n    const info = atlasManager.add(\n      id, size, size, this.draw_.bind(this, renderOptions),\n      renderHitDetectionCallback);\n\n    this.canvas_ = info.image;\n    this.origin_ = [info.offsetX, info.offsetY];\n    imageSize = info.image.width;\n\n    if (hasCustomHitDetectionImage) {\n      this.hitDetectionCanvas_ = info.hitImage;\n      this.hitDetectionImageSize_ =\n          [info.hitImage.width, info.hitImage.height];\n    } else {\n      this.hitDetectionCanvas_ = this.canvas_;\n      this.hitDetectionImageSize_ = [imageSize, imageSize];\n    }\n  }\n\n  this.anchor_ = [size / 2, size / 2];\n  this.size_ = [size, size];\n  this.imageSize_ = [imageSize, imageSize];\n};\n\n\n/**\n * @private\n * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n * @param {CanvasRenderingContext2D} context The rendering context.\n * @param {number} x The origin for the symbol (x).\n * @param {number} y The origin for the symbol (y).\n */\nRegularShape.prototype.draw_ = function(renderOptions, context, x, y) {\n  let i, angle0, radiusC;\n  // reset transform\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  // then move to (x, y)\n  context.translate(x, y);\n\n  context.beginPath();\n\n  let points = this.points_;\n  if (points === Infinity) {\n    context.arc(\n      renderOptions.size / 2, renderOptions.size / 2,\n      this.radius_, 0, 2 * Math.PI, true);\n  } else {\n    const radius2 = (this.radius2_ !== undefined) ? this.radius2_\n      : this.radius_;\n    if (radius2 !== this.radius_) {\n      points = 2 * points;\n    }\n    for (i = 0; i <= points; i++) {\n      angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n      radiusC = i % 2 === 0 ? this.radius_ : radius2;\n      context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n        renderOptions.size / 2 + radiusC * Math.sin(angle0));\n    }\n  }\n\n\n  if (this.fill_) {\n    let color = this.fill_.getColor();\n    if (color === null) {\n      color = defaultFillStyle;\n    }\n    context.fillStyle = asColorLike(color);\n    context.fill();\n  }\n  if (this.stroke_) {\n    context.strokeStyle = renderOptions.strokeStyle;\n    context.lineWidth = renderOptions.strokeWidth;\n    if (renderOptions.lineDash) {\n      context.setLineDash(renderOptions.lineDash);\n      context.lineDashOffset = renderOptions.lineDashOffset;\n    }\n    context.lineCap = renderOptions.lineCap;\n    context.lineJoin = renderOptions.lineJoin;\n    context.miterLimit = renderOptions.miterLimit;\n    context.stroke();\n  }\n  context.closePath();\n};\n\n\n/**\n * @private\n * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n */\nRegularShape.prototype.createHitDetectionCanvas_ = function(renderOptions) {\n  this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n  if (this.fill_) {\n    this.hitDetectionCanvas_ = this.canvas_;\n    return;\n  }\n\n  // if no fill style is set, create an extra hit-detection image with a\n  // default fill style\n  const context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n  this.hitDetectionCanvas_ = context.canvas;\n\n  this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n};\n\n\n/**\n * @private\n * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n * @param {CanvasRenderingContext2D} context The context.\n * @param {number} x The origin for the symbol (x).\n * @param {number} y The origin for the symbol (y).\n */\nRegularShape.prototype.drawHitDetectionCanvas_ = function(renderOptions, context, x, y) {\n  // reset transform\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  // then move to (x, y)\n  context.translate(x, y);\n\n  context.beginPath();\n\n  let points = this.points_;\n  if (points === Infinity) {\n    context.arc(\n      renderOptions.size / 2, renderOptions.size / 2,\n      this.radius_, 0, 2 * Math.PI, true);\n  } else {\n    const radius2 = (this.radius2_ !== undefined) ? this.radius2_\n      : this.radius_;\n    if (radius2 !== this.radius_) {\n      points = 2 * points;\n    }\n    let i, radiusC, angle0;\n    for (i = 0; i <= points; i++) {\n      angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n      radiusC = i % 2 === 0 ? this.radius_ : radius2;\n      context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n        renderOptions.size / 2 + radiusC * Math.sin(angle0));\n    }\n  }\n\n  context.fillStyle = defaultFillStyle;\n  context.fill();\n  if (this.stroke_) {\n    context.strokeStyle = renderOptions.strokeStyle;\n    context.lineWidth = renderOptions.strokeWidth;\n    if (renderOptions.lineDash) {\n      context.setLineDash(renderOptions.lineDash);\n      context.lineDashOffset = renderOptions.lineDashOffset;\n    }\n    context.stroke();\n  }\n  context.closePath();\n};\n\n\n/**\n * @return {string} The checksum.\n */\nRegularShape.prototype.getChecksum = function() {\n  const strokeChecksum = this.stroke_ ?\n    this.stroke_.getChecksum() : '-';\n  const fillChecksum = this.fill_ ?\n    this.fill_.getChecksum() : '-';\n\n  const recalculate = !this.checksums_ ||\n      (strokeChecksum != this.checksums_[1] ||\n      fillChecksum != this.checksums_[2] ||\n      this.radius_ != this.checksums_[3] ||\n      this.radius2_ != this.checksums_[4] ||\n      this.angle_ != this.checksums_[5] ||\n      this.points_ != this.checksums_[6]);\n\n  if (recalculate) {\n    const checksum = 'r' + strokeChecksum + fillChecksum +\n        (this.radius_ !== undefined ? this.radius_.toString() : '-') +\n        (this.radius2_ !== undefined ? this.radius2_.toString() : '-') +\n        (this.angle_ !== undefined ? this.angle_.toString() : '-') +\n        (this.points_ !== undefined ? this.points_.toString() : '-');\n    this.checksums_ = [checksum, strokeChecksum, fillChecksum,\n      this.radius_, this.radius2_, this.angle_, this.points_];\n  }\n\n  return this.checksums_[0];\n};\nexport default RegularShape;\n","/**\n * @module ol/VectorImageTile\n */\nimport {getUid, inherits} from './util.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {getHeight, getIntersection, getWidth} from './extent.js';\nimport EventType from './events/EventType.js';\nimport {loadFeaturesXhr} from './featureloader.js';\nimport {UNDEFINED} from './functions.js';\n\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty\n * @property {null|module:ol/render~OrderFunction} renderedRenderOrder\n * @property {number} renderedTileRevision\n * @property {number} renderedRevision\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/Tile}\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileState} state State.\n * @param {number} sourceRevision Source revision.\n * @param {module:ol/format/Feature} format Feature format.\n * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n * @param {module:ol/tilecoord~TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n * @param {module:ol/Tile~UrlFunction} tileUrlFunction Tile url function.\n * @param {module:ol/tilegrid/TileGrid} sourceTileGrid Tile grid of the source.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid of the renderer.\n * @param {Object.<string, module:ol/VectorTile>} sourceTiles Source tiles.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {function(new: module:ol/VectorTile, module:ol/tilecoord~TileCoord, module:ol/TileState, string,\n *     module:ol/format/Feature, module:ol/Tile~LoadFunction)} tileClass Class to\n *     instantiate for source tiles.\n * @param {function(this: module:ol/source/VectorTile, module:ol/events/Event)} handleTileChange\n *     Function to call when a source tile's state changes.\n * @param {number} zoom Integer zoom to render the tile for.\n */\nconst VectorImageTile = function(tileCoord, state, sourceRevision, format,\n  tileLoadFunction, urlTileCoord, tileUrlFunction, sourceTileGrid, tileGrid,\n  sourceTiles, pixelRatio, projection, tileClass, handleTileChange, zoom) {\n\n  Tile.call(this, tileCoord, state, {transition: 0});\n\n  /**\n   * @private\n   * @type {!Object.<string, CanvasRenderingContext2D>}\n   */\n  this.context_ = {};\n\n  /**\n   * @private\n   * @type {module:ol/featureloader~FeatureLoader}\n   */\n  this.loader_;\n\n  /**\n   * @private\n   * @type {!Object.<string, module:ol/VectorImageTile~ReplayState>}\n   */\n  this.replayState_ = {};\n\n  /**\n   * @private\n   * @type {Object.<string, module:ol/VectorTile>}\n   */\n  this.sourceTiles_ = sourceTiles;\n\n  /**\n   * Keys of source tiles used by this tile. Use with {@link #getTile}.\n   * @type {Array.<string>}\n   */\n  this.tileKeys = [];\n\n  /**\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent = null;\n\n  /**\n   * @type {number}\n   */\n  this.sourceRevision_ = sourceRevision;\n\n  /**\n   * @type {module:ol/tilecoord~TileCoord}\n   */\n  this.wrappedTileCoord = urlTileCoord;\n\n  /**\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.loadListenerKeys_ = [];\n\n  /**\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.sourceTileListenerKeys_ = [];\n\n  if (urlTileCoord) {\n    const extent = this.extent = tileGrid.getTileCoordExtent(urlTileCoord);\n    const resolution = tileGrid.getResolution(zoom);\n    const sourceZ = sourceTileGrid.getZForResolution(resolution);\n    const useLoadedOnly = zoom != tileCoord[0];\n    let loadCount = 0;\n    sourceTileGrid.forEachTileCoord(extent, sourceZ, function(sourceTileCoord) {\n      let sharedExtent = getIntersection(extent,\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord));\n      const sourceExtent = sourceTileGrid.getExtent();\n      if (sourceExtent) {\n        sharedExtent = getIntersection(sharedExtent, sourceExtent, sharedExtent);\n      }\n      if (getWidth(sharedExtent) / resolution >= 0.5 &&\n          getHeight(sharedExtent) / resolution >= 0.5) {\n        // only include source tile if overlap is at least 1 pixel\n        ++loadCount;\n        const sourceTileKey = sourceTileCoord.toString();\n        let sourceTile = sourceTiles[sourceTileKey];\n        if (!sourceTile && !useLoadedOnly) {\n          const tileUrl = tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n          sourceTile = sourceTiles[sourceTileKey] = new tileClass(sourceTileCoord,\n            tileUrl == undefined ? TileState.EMPTY : TileState.IDLE,\n            tileUrl == undefined ? '' : tileUrl,\n            format, tileLoadFunction);\n          this.sourceTileListenerKeys_.push(\n            listen(sourceTile, EventType.CHANGE, handleTileChange));\n        }\n        if (sourceTile && (!useLoadedOnly || sourceTile.getState() == TileState.LOADED)) {\n          sourceTile.consumers++;\n          this.tileKeys.push(sourceTileKey);\n        }\n      }\n    }.bind(this));\n\n    if (useLoadedOnly && loadCount == this.tileKeys.length) {\n      this.finishLoading_();\n    }\n\n    if (zoom <= tileCoord[0] && this.state != TileState.LOADED) {\n      while (zoom > tileGrid.getMinZoom()) {\n        const tile = new VectorImageTile(tileCoord, state, sourceRevision,\n          format, tileLoadFunction, urlTileCoord, tileUrlFunction,\n          sourceTileGrid, tileGrid, sourceTiles, pixelRatio, projection,\n          tileClass, UNDEFINED, --zoom);\n        if (tile.state == TileState.LOADED) {\n          this.interimTile = tile;\n          break;\n        }\n      }\n    }\n  }\n\n};\n\ninherits(VectorImageTile, Tile);\n\n\n/**\n * @inheritDoc\n */\nVectorImageTile.prototype.disposeInternal = function() {\n  this.state = TileState.ABORT;\n  this.changed();\n  if (this.interimTile) {\n    this.interimTile.dispose();\n  }\n\n  for (let i = 0, ii = this.tileKeys.length; i < ii; ++i) {\n    const sourceTileKey = this.tileKeys[i];\n    const sourceTile = this.getTile(sourceTileKey);\n    sourceTile.consumers--;\n    if (sourceTile.consumers == 0) {\n      delete this.sourceTiles_[sourceTileKey];\n      sourceTile.dispose();\n    }\n  }\n  this.tileKeys.length = 0;\n  this.sourceTiles_ = null;\n  this.loadListenerKeys_.forEach(unlistenByKey);\n  this.loadListenerKeys_.length = 0;\n  this.sourceTileListenerKeys_.forEach(unlistenByKey);\n  this.sourceTileListenerKeys_.length = 0;\n  Tile.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @param {module:ol/layer/Layer} layer Layer.\n * @return {CanvasRenderingContext2D} The rendering context.\n */\nVectorImageTile.prototype.getContext = function(layer) {\n  const key = getUid(layer).toString();\n  if (!(key in this.context_)) {\n    this.context_[key] = createCanvasContext2D();\n  }\n  return this.context_[key];\n};\n\n\n/**\n * Get the Canvas for this tile.\n * @param {module:ol/layer/Layer} layer Layer.\n * @return {HTMLCanvasElement} Canvas.\n */\nVectorImageTile.prototype.getImage = function(layer) {\n  return this.getReplayState(layer).renderedTileRevision == -1 ?\n    null : this.getContext(layer).canvas;\n};\n\n\n/**\n * @param {module:ol/layer/Layer} layer Layer.\n * @return {module:ol/VectorImageTile~ReplayState} The replay state.\n */\nVectorImageTile.prototype.getReplayState = function(layer) {\n  const key = getUid(layer).toString();\n  if (!(key in this.replayState_)) {\n    this.replayState_[key] = {\n      dirty: false,\n      renderedRenderOrder: null,\n      renderedRevision: -1,\n      renderedTileRevision: -1\n    };\n  }\n  return this.replayState_[key];\n};\n\n\n/**\n * @inheritDoc\n */\nVectorImageTile.prototype.getKey = function() {\n  return this.tileKeys.join('/') + '-' + this.sourceRevision_;\n};\n\n\n/**\n * @param {string} tileKey Key (tileCoord) of the source tile.\n * @return {module:ol/VectorTile} Source tile.\n */\nVectorImageTile.prototype.getTile = function(tileKey) {\n  return this.sourceTiles_[tileKey];\n};\n\n\n/**\n * @inheritDoc\n */\nVectorImageTile.prototype.load = function() {\n  // Source tiles with LOADED state - we just count them because once they are\n  // loaded, we're no longer listening to state changes.\n  let leftToLoad = 0;\n  // Source tiles with ERROR state - we track them because they can still have\n  // an ERROR state after another load attempt.\n  const errorSourceTiles = {};\n\n  if (this.state == TileState.IDLE) {\n    this.setState(TileState.LOADING);\n  }\n  if (this.state == TileState.LOADING) {\n    this.tileKeys.forEach(function(sourceTileKey) {\n      const sourceTile = this.getTile(sourceTileKey);\n      if (sourceTile.state == TileState.IDLE) {\n        sourceTile.setLoader(this.loader_);\n        sourceTile.load();\n      }\n      if (sourceTile.state == TileState.LOADING) {\n        const key = listen(sourceTile, EventType.CHANGE, function(e) {\n          const state = sourceTile.getState();\n          if (state == TileState.LOADED ||\n              state == TileState.ERROR) {\n            const uid = getUid(sourceTile);\n            if (state == TileState.ERROR) {\n              errorSourceTiles[uid] = true;\n            } else {\n              --leftToLoad;\n              delete errorSourceTiles[uid];\n            }\n            if (leftToLoad - Object.keys(errorSourceTiles).length == 0) {\n              this.finishLoading_();\n            }\n          }\n        }.bind(this));\n        this.loadListenerKeys_.push(key);\n        ++leftToLoad;\n      }\n    }.bind(this));\n  }\n  if (leftToLoad - Object.keys(errorSourceTiles).length == 0) {\n    setTimeout(this.finishLoading_.bind(this), 0);\n  }\n};\n\n\n/**\n * @private\n */\nVectorImageTile.prototype.finishLoading_ = function() {\n  let loaded = this.tileKeys.length;\n  let empty = 0;\n  for (let i = loaded - 1; i >= 0; --i) {\n    const state = this.getTile(this.tileKeys[i]).getState();\n    if (state != TileState.LOADED) {\n      --loaded;\n    }\n    if (state == TileState.EMPTY) {\n      ++empty;\n    }\n  }\n  if (loaded == this.tileKeys.length) {\n    this.loadListenerKeys_.forEach(unlistenByKey);\n    this.loadListenerKeys_.length = 0;\n    this.setState(TileState.LOADED);\n  } else {\n    this.setState(empty == this.tileKeys.length ? TileState.EMPTY : TileState.ERROR);\n  }\n};\n\nexport default VectorImageTile;\n\n/**\n * Sets the loader for a tile.\n * @param {module:ol/VectorTile} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  const loader = loadFeaturesXhr(url, tile.getFormat(), tile.onLoad.bind(tile), tile.onError.bind(tile));\n  tile.setLoader(loader);\n}\n","/**\n * @module ol/VectorTile\n */\nimport {getUid, inherits} from './util.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(new: module:ol/VectorTile, module:ol/tilecoord~TileCoord,\n * module:ol/TileState, string, ?string, module:ol/Tile~LoadFunction)} TileClass\n * @api\n */\n\n/**\n * @constructor\n * @extends {module:ol/Tile}\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileState} state State.\n * @param {string} src Data source url.\n * @param {module:ol/format/Feature} format Feature format.\n * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n * @param {module:ol/Tile~Options=} opt_options Tile options.\n */\nconst VectorTile = function(tileCoord, state, src, format, tileLoadFunction, opt_options) {\n\n  Tile.call(this, tileCoord, state, opt_options);\n\n  /**\n   * @type {number}\n   */\n  this.consumers = 0;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/format/Feature}\n   */\n  this.format_ = format;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/Feature>}\n   */\n  this.features_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/featureloader~FeatureLoader}\n   */\n  this.loader_;\n\n  /**\n   * Data projection\n   * @private\n   * @type {module:ol/proj/Projection}\n   */\n  this.projection_ = null;\n\n  /**\n   * @private\n   * @type {Object.<string, module:ol/render/ReplayGroup>}\n   */\n  this.replayGroups_ = {};\n\n  /**\n   * @private\n   * @type {module:ol/Tile~LoadFunction}\n   */\n  this.tileLoadFunction_ = tileLoadFunction;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.url_ = src;\n\n};\n\ninherits(VectorTile, Tile);\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nconst DEFAULT_EXTENT = [0, 0, 4096, 4096];\n\n\n/**\n * @inheritDoc\n */\nVectorTile.prototype.disposeInternal = function() {\n  this.features_ = null;\n  this.replayGroups_ = {};\n  this.state = TileState.ABORT;\n  this.changed();\n  Tile.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Gets the extent of the vector tile.\n * @return {module:ol/extent~Extent} The extent.\n * @api\n */\nVectorTile.prototype.getExtent = function() {\n  return this.extent_ || DEFAULT_EXTENT;\n};\n\n\n/**\n * Get the feature format assigned for reading this tile's features.\n * @return {module:ol/format/Feature} Feature format.\n * @api\n */\nVectorTile.prototype.getFormat = function() {\n  return this.format_;\n};\n\n\n/**\n * Get the features for this tile. Geometries will be in the projection returned\n * by {@link module:ol/VectorTile~VectorTile#getProjection}.\n * @return {Array.<module:ol/Feature|module:ol/render/Feature>} Features.\n * @api\n */\nVectorTile.prototype.getFeatures = function() {\n  return this.features_;\n};\n\n\n/**\n * @inheritDoc\n */\nVectorTile.prototype.getKey = function() {\n  return this.url_;\n};\n\n\n/**\n * Get the feature projection of features returned by\n * {@link module:ol/VectorTile~VectorTile#getFeatures}.\n * @return {module:ol/proj/Projection} Feature projection.\n * @api\n */\nVectorTile.prototype.getProjection = function() {\n  return this.projection_;\n};\n\n\n/**\n * @param {module:ol/layer/Layer} layer Layer.\n * @param {string} key Key.\n * @return {module:ol/render/ReplayGroup} Replay group.\n */\nVectorTile.prototype.getReplayGroup = function(layer, key) {\n  return this.replayGroups_[getUid(layer) + ',' + key];\n};\n\n\n/**\n * @inheritDoc\n */\nVectorTile.prototype.load = function() {\n  if (this.state == TileState.IDLE) {\n    this.setState(TileState.LOADING);\n    this.tileLoadFunction_(this, this.url_);\n    this.loader_(null, NaN, null);\n  }\n};\n\n\n/**\n * Handler for successful tile load.\n * @param {Array.<module:ol/Feature>} features The loaded features.\n * @param {module:ol/proj/Projection} dataProjection Data projection.\n * @param {module:ol/extent~Extent} extent Extent.\n */\nVectorTile.prototype.onLoad = function(features, dataProjection, extent) {\n  this.setProjection(dataProjection);\n  this.setFeatures(features);\n  this.setExtent(extent);\n};\n\n\n/**\n * Handler for tile load errors.\n */\nVectorTile.prototype.onError = function() {\n  this.setState(TileState.ERROR);\n};\n\n\n/**\n * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s\n * `tileLoadFunction`. Sets the extent of the vector tile. This is only required\n * for tiles in projections with `tile-pixels` as units. The extent should be\n * set to `[0, 0, tilePixelSize, tilePixelSize]`, where `tilePixelSize` is\n * calculated by multiplying the tile size with the tile pixel ratio. For\n * sources using {@link module:ol/format/MVT~MVT} as feature format, the\n * {@link module:ol/format/MVT~MVT#getLastExtent} method will return the correct\n * extent. The default is `[0, 0, 4096, 4096]`.\n * @param {module:ol/extent~Extent} extent The extent.\n * @api\n */\nVectorTile.prototype.setExtent = function(extent) {\n  this.extent_ = extent;\n};\n\n\n/**\n * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n * Sets the features for the tile.\n * @param {Array.<module:ol/Feature>} features Features.\n * @api\n */\nVectorTile.prototype.setFeatures = function(features) {\n  this.features_ = features;\n  this.setState(TileState.LOADED);\n};\n\n\n/**\n * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n * Sets the projection of the features that were added with\n * {@link module:ol/VectorTile~VectorTile#setFeatures}.\n * @param {module:ol/proj/Projection} projection Feature projection.\n * @api\n */\nVectorTile.prototype.setProjection = function(projection) {\n  this.projection_ = projection;\n};\n\n\n/**\n * @param {module:ol/layer/Layer} layer Layer.\n * @param {string} key Key.\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n */\nVectorTile.prototype.setReplayGroup = function(layer, key, replayGroup) {\n  this.replayGroups_[getUid(layer) + ',' + key] = replayGroup;\n};\n\n\n/**\n * Set the feature loader for reading this tile's features.\n * @param {module:ol/featureloader~FeatureLoader} loader Feature loader.\n * @api\n */\nVectorTile.prototype.setLoader = function(loader) {\n  this.loader_ = loader;\n};\n\nexport default VectorTile;\n","/**\n * @module ol/source/VectorTile\n */\nimport {inherits} from '../util.js';\nimport TileState from '../TileState.js';\nimport VectorImageTile, {defaultLoadFunction} from '../VectorImageTile.js';\nimport Tile from '../VectorTile.js';\nimport {toSize} from '../size.js';\nimport UrlTile from '../source/UrlTile.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection, createForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=128] Cache size.\n * @property {module:ol/format/Feature} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {module:ol/source/State} [state] Source state.\n * @property {module:ol/VectorTile~TileClass} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level.\n * @property {number} [minZoom] Optional min zoom level.\n * @property {number|module:ol/size~Size} [tileSize=512] Optional tile size.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function() {\n *     var data = // ... fetch data\n *     var format = tile.getFormat();\n *     tile.setProjection(format.readProjection(data));\n *     tile.setFeatures(format.readFeatures(data, {\n *       // featureProjection is not required for ol/format/MVT\n *       featureProjection: map.getView().getProjection()\n *     }));\n *     // the line below is only required for ol/format/MVT\n *     tile.setExtent(format.getLastExtent());\n *   };\n * });\n * ```\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array.<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n */\n\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTile}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector} for vector sources that are suitable for feature\n * editing.\n *\n * @constructor\n * @fires module:ol/source/Tile~TileSourceEvent\n * @extends {module:ol/source/UrlTile}\n * @param {module:ol/source/VectorTile~Options=} options Vector tile options.\n * @api\n */\nconst VectorTile = function(options) {\n  const projection = options.projection || 'EPSG:3857';\n\n  const extent = options.extent || extentFromProjection(projection);\n\n  const tileGrid = options.tileGrid || createXYZ({\n    extent: extent,\n    maxZoom: options.maxZoom || 22,\n    minZoom: options.minZoom,\n    tileSize: options.tileSize || 512\n  });\n\n  UrlTile.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize !== undefined ? options.cacheSize : 128,\n    extent: extent,\n    opaque: false,\n    projection: projection,\n    state: options.state,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction ? options.tileLoadFunction : defaultLoadFunction,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX === undefined ? true : options.wrapX,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {module:ol/format/Feature}\n   */\n  this.format_ = options.format ? options.format : null;\n\n  /**\n     * @private\n     * @type {Object.<string, module:ol/VectorTile>}\n     */\n  this.sourceTiles_ = {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n  /**\n     * @protected\n     * @type {function(new: module:ol/VectorTile, module:ol/tilecoord~TileCoord, module:ol/TileState, string,\n     *        module:ol/format/Feature, module:ol/Tile~LoadFunction)}\n     */\n  this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n  /**\n   * @private\n   * @type {Object.<string, module:ol/tilegrid/TileGrid>}\n   */\n  this.tileGrids_ = {};\n\n};\n\ninherits(VectorTile, UrlTile);\n\n\n/**\n * @return {boolean} The source can have overlapping geometries.\n */\nVectorTile.prototype.getOverlaps = function() {\n  return this.overlaps_;\n};\n\n/**\n * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n * @api\n */\nVectorTile.prototype.clear = function() {\n  this.tileCache.clear();\n  this.sourceTiles_ = {};\n};\n\n/**\n * @inheritDoc\n */\nVectorTile.prototype.getTile = function(z, x, y, pixelRatio, projection) {\n  const tileCoordKey = getKeyZXY(z, x, y);\n  if (this.tileCache.containsKey(tileCoordKey)) {\n    return (\n      /** @type {!module:ol/Tile} */ (this.tileCache.get(tileCoordKey))\n    );\n  } else {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord, projection);\n    const tile = new VectorImageTile(\n      tileCoord,\n      urlTileCoord !== null ? TileState.IDLE : TileState.EMPTY,\n      this.getRevision(),\n      this.format_, this.tileLoadFunction, urlTileCoord, this.tileUrlFunction,\n      this.tileGrid, this.getTileGridForProjection(projection),\n      this.sourceTiles_, pixelRatio, projection, this.tileClass,\n      this.handleTileChange.bind(this), tileCoord[0]);\n\n    this.tileCache.set(tileCoordKey, tile);\n    return tile;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nVectorTile.prototype.getTileGridForProjection = function(projection) {\n  const code = projection.getCode();\n  let tileGrid = this.tileGrids_[code];\n  if (!tileGrid) {\n    // A tile grid that matches the tile size of the source tile grid is more\n    // likely to have 1:1 relationships between source tiles and rendered tiles.\n    const sourceTileGrid = this.tileGrid;\n    tileGrid = this.tileGrids_[code] = createForProjection(projection, undefined,\n      sourceTileGrid ? sourceTileGrid.getTileSize(sourceTileGrid.getMinZoom()) : undefined);\n  }\n  return tileGrid;\n};\n\n\n/**\n * @inheritDoc\n */\nVectorTile.prototype.getTilePixelRatio = function(pixelRatio) {\n  return pixelRatio;\n};\n\n\n/**\n * @inheritDoc\n */\nVectorTile.prototype.getTilePixelSize = function(z, pixelRatio, projection) {\n  const tileGrid = this.getTileGridForProjection(projection);\n  const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n  return [Math.round(tileSize[0] * pixelRatio), Math.round(tileSize[1] * pixelRatio)];\n};\nexport default VectorTile;\n","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array.<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array.<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  const simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array.<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array.<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<Array.<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<Array.<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/style/Stroke\n */\nimport {getUid} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/color~Color|module:ol/colorlike~ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array.<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n *\n * @constructor\n * @param {module:ol/style/Stroke~Options=} opt_options Options.\n * @api\n */\nconst Stroke = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {module:ol/color~Color|module:ol/colorlike~ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineCap_ = options.lineCap;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lineDashOffset_ = options.lineDashOffset;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineJoin_ = options.lineJoin;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.miterLimit_ = options.miterLimit;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = options.width;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Clones the style.\n * @return {module:ol/style/Stroke} The cloned style.\n * @api\n */\nStroke.prototype.clone = function() {\n  const color = this.getColor();\n  return new Stroke({\n    color: (color && color.slice) ? color.slice() : color || undefined,\n    lineCap: this.getLineCap(),\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n    lineDashOffset: this.getLineDashOffset(),\n    lineJoin: this.getLineJoin(),\n    miterLimit: this.getMiterLimit(),\n    width: this.getWidth()\n  });\n};\n\n\n/**\n * Get the stroke color.\n * @return {module:ol/color~Color|module:ol/colorlike~ColorLike} Color.\n * @api\n */\nStroke.prototype.getColor = function() {\n  return this.color_;\n};\n\n\n/**\n * Get the line cap type for the stroke.\n * @return {string|undefined} Line cap.\n * @api\n */\nStroke.prototype.getLineCap = function() {\n  return this.lineCap_;\n};\n\n\n/**\n * Get the line dash style for the stroke.\n * @return {Array.<number>} Line dash.\n * @api\n */\nStroke.prototype.getLineDash = function() {\n  return this.lineDash_;\n};\n\n\n/**\n * Get the line dash offset for the stroke.\n * @return {number|undefined} Line dash offset.\n * @api\n */\nStroke.prototype.getLineDashOffset = function() {\n  return this.lineDashOffset_;\n};\n\n\n/**\n * Get the line join type for the stroke.\n * @return {string|undefined} Line join.\n * @api\n */\nStroke.prototype.getLineJoin = function() {\n  return this.lineJoin_;\n};\n\n\n/**\n * Get the miter limit for the stroke.\n * @return {number|undefined} Miter limit.\n * @api\n */\nStroke.prototype.getMiterLimit = function() {\n  return this.miterLimit_;\n};\n\n\n/**\n * Get the stroke width.\n * @return {number|undefined} Width.\n * @api\n */\nStroke.prototype.getWidth = function() {\n  return this.width_;\n};\n\n\n/**\n * Set the color.\n *\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @api\n */\nStroke.prototype.setColor = function(color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line cap.\n *\n * @param {string|undefined} lineCap Line cap.\n * @api\n */\nStroke.prototype.setLineCap = function(lineCap) {\n  this.lineCap_ = lineCap;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line dash.\n *\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n * property will have no visual effect in these browsers.\n *\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n *\n * @param {Array.<number>} lineDash Line dash.\n * @api\n */\nStroke.prototype.setLineDash = function(lineDash) {\n  this.lineDash_ = lineDash;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line dash offset.\n *\n * @param {number|undefined} lineDashOffset Line dash offset.\n * @api\n */\nStroke.prototype.setLineDashOffset = function(lineDashOffset) {\n  this.lineDashOffset_ = lineDashOffset;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line join.\n *\n * @param {string|undefined} lineJoin Line join.\n * @api\n */\nStroke.prototype.setLineJoin = function(lineJoin) {\n  this.lineJoin_ = lineJoin;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the miter limit.\n *\n * @param {number|undefined} miterLimit Miter limit.\n * @api\n */\nStroke.prototype.setMiterLimit = function(miterLimit) {\n  this.miterLimit_ = miterLimit;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the width.\n *\n * @param {number|undefined} width Width.\n * @api\n */\nStroke.prototype.setWidth = function(width) {\n  this.width_ = width;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * @return {string} The checksum.\n */\nStroke.prototype.getChecksum = function() {\n  if (this.checksum_ === undefined) {\n    this.checksum_ = 's';\n    if (this.color_) {\n      if (typeof this.color_ === 'string') {\n        this.checksum_ += this.color_;\n      } else {\n        this.checksum_ += getUid(this.color_).toString();\n      }\n    } else {\n      this.checksum_ += '-';\n    }\n    this.checksum_ += ',' +\n        (this.lineCap_ !== undefined ?\n          this.lineCap_.toString() : '-') + ',' +\n        (this.lineDash_ ?\n          this.lineDash_.toString() : '-') + ',' +\n        (this.lineDashOffset_ !== undefined ?\n          this.lineDashOffset_ : '-') + ',' +\n        (this.lineJoin_ !== undefined ?\n          this.lineJoin_ : '-') + ',' +\n        (this.miterLimit_ !== undefined ?\n          this.miterLimit_.toString() : '-') + ',' +\n        (this.width_ !== undefined ?\n          this.width_.toString() : '-');\n  }\n\n  return this.checksum_;\n};\nexport default Stroke;\n","/**\n * @module ol/Observable\n */\nimport {inherits} from './util.js';\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @constructor\n * @extends {module:ol/events/EventTarget}\n * @fires module:ol/events/Event~Event\n * @struct\n * @api\n */\nconst Observable = function() {\n\n  EventTarget.call(this);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.revision_ = 0;\n\n};\n\ninherits(Observable, EventTarget);\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {module:ol/events~EventsKey} */ (key));\n  }\n}\n\n\n/**\n * Increases the revision counter and dispatches a 'change' event.\n * @api\n */\nObservable.prototype.changed = function() {\n  ++this.revision_;\n  this.dispatchEvent(EventType.CHANGE);\n};\n\n\n/**\n * Dispatches an event and calls all listeners listening for events\n * of this type. The event parameter can either be a string or an\n * Object with a `type` property.\n *\n * @param {{type: string,\n *     target: (EventTarget|module:ol/events/EventTarget|undefined)}|\n *     module:ol/events/Event|string} event Event object.\n * @function\n * @api\n */\nObservable.prototype.dispatchEvent;\n\n\n/**\n * Get the version number for this object.  Each time the object is modified,\n * its version number will be incremented.\n * @return {number} Revision.\n * @api\n */\nObservable.prototype.getRevision = function() {\n  return this.revision_;\n};\n\n\n/**\n * Listen for a certain type of event.\n * @param {string|Array.<string>} type The event type or array of event types.\n * @param {function(?): ?} listener The listener function.\n * @return {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on = function(type, listener) {\n  if (Array.isArray(type)) {\n    const len = type.length;\n    const keys = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      keys[i] = listen(this, type[i], listener);\n    }\n    return keys;\n  } else {\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n};\n\n\n/**\n * Listen once for a certain type of event.\n * @param {string|Array.<string>} type The event type or array of event types.\n * @param {function(?): ?} listener The listener function.\n * @return {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once = function(type, listener) {\n  if (Array.isArray(type)) {\n    const len = type.length;\n    const keys = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      keys[i] = listenOnce(this, type[i], listener);\n    }\n    return keys;\n  } else {\n    return listenOnce(this, /** @type {string} */ (type), listener);\n  }\n};\n\n\n/**\n * Unlisten for a certain type of event.\n * @param {string|Array.<string>} type The event type or array of event types.\n * @param {function(?): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un = function(type, listener) {\n  if (Array.isArray(type)) {\n    for (let i = 0, ii = type.length; i < ii; ++i) {\n      unlisten(this, type[i], listener);\n    }\n    return;\n  } else {\n    unlisten(this, /** @type {string} */ (type), listener);\n  }\n};\nexport default Observable;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object~ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n","/**\n * @module ol/source/Tile\n */\nimport {inherits} from '../util.js';\nimport {UNDEFINED} from '../functions.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from '../source/Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {number} [cacheSize]\n * @property {module:ol/extent~Extent} [extent]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {module:ol/proj~ProjectionLike} [projection]\n * @property {module:ol/source/State} [state]\n * @property {module:ol/tilegrid/TileGrid} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/source/Source}\n * @param {module:ol/source/Tile~Options=} options SourceTile source options.\n * @api\n */\nconst TileSource = function(options) {\n\n  Source.call(this, {\n    attributions: options.attributions,\n    extent: options.extent,\n    projection: options.projection,\n    state: options.state,\n    wrapX: options.wrapX\n  });\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n    options.tilePixelRatio : 1;\n\n  /**\n   * @protected\n   * @type {module:ol/tilegrid/TileGrid}\n   */\n  this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n  /**\n   * @protected\n   * @type {module:ol/TileCache}\n   */\n  this.tileCache = new TileCache(options.cacheSize);\n\n  /**\n   * @protected\n   * @type {module:ol/size~Size}\n   */\n  this.tmpSize = [0, 0];\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.key_ = '';\n\n  /**\n   * @protected\n   * @type {module:ol/Tile~Options}\n   */\n  this.tileOptions = {transition: options.transition};\n\n};\n\ninherits(TileSource, Source);\n\n\n/**\n * @return {boolean} Can expire cache.\n */\nTileSource.prototype.canExpireCache = function() {\n  return this.tileCache.canExpireCache();\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {!Object.<string, module:ol/TileRange>} usedTiles Used tiles.\n */\nTileSource.prototype.expireCache = function(projection, usedTiles) {\n  const tileCache = this.getTileCacheForProjection(projection);\n  if (tileCache) {\n    tileCache.expireCache(usedTiles);\n  }\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {number} z Zoom level.\n * @param {module:ol/TileRange} tileRange Tile range.\n * @param {function(module:ol/Tile):(boolean|undefined)} callback Called with each\n *     loaded tile.  If the callback returns `false`, the tile will not be\n *     considered loaded.\n * @return {boolean} The tile range is fully covered with loaded tiles.\n */\nTileSource.prototype.forEachLoadedTile = function(projection, z, tileRange, callback) {\n  const tileCache = this.getTileCacheForProjection(projection);\n  if (!tileCache) {\n    return false;\n  }\n\n  let covered = true;\n  let tile, tileCoordKey, loaded;\n  for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n    for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n      tileCoordKey = getKeyZXY(z, x, y);\n      loaded = false;\n      if (tileCache.containsKey(tileCoordKey)) {\n        tile = /** @type {!module:ol/Tile} */ (tileCache.get(tileCoordKey));\n        loaded = tile.getState() === TileState.LOADED;\n        if (loaded) {\n          loaded = (callback(tile) !== false);\n        }\n      }\n      if (!loaded) {\n        covered = false;\n      }\n    }\n  }\n  return covered;\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {number} Gutter.\n */\nTileSource.prototype.getGutter = function(projection) {\n  return 0;\n};\n\n\n/**\n * Return the key to be used for all tiles in the source.\n * @return {string} The key for all tiles.\n * @protected\n */\nTileSource.prototype.getKey = function() {\n  return this.key_;\n};\n\n\n/**\n * Set the value to be used as the key for all tiles in the source.\n * @param {string} key The key for tiles.\n * @protected\n */\nTileSource.prototype.setKey = function(key) {\n  if (this.key_ !== key) {\n    this.key_ = key;\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {boolean} Opaque.\n */\nTileSource.prototype.getOpaque = function(projection) {\n  return this.opaque_;\n};\n\n\n/**\n * @inheritDoc\n */\nTileSource.prototype.getResolutions = function() {\n  return this.tileGrid.getResolutions();\n};\n\n\n/**\n * @abstract\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/Tile} Tile.\n */\nTileSource.prototype.getTile = function(z, x, y, pixelRatio, projection) {};\n\n\n/**\n * Return the tile grid of the tile source.\n * @return {module:ol/tilegrid/TileGrid} Tile grid.\n * @api\n */\nTileSource.prototype.getTileGrid = function() {\n  return this.tileGrid;\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/tilegrid/TileGrid} Tile grid.\n */\nTileSource.prototype.getTileGridForProjection = function(projection) {\n  if (!this.tileGrid) {\n    return getTileGridForProjection(projection);\n  } else {\n    return this.tileGrid;\n  }\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/TileCache} Tile cache.\n * @protected\n */\nTileSource.prototype.getTileCacheForProjection = function(projection) {\n  const thisProj = this.getProjection();\n  if (thisProj && !equivalent(thisProj, projection)) {\n    return null;\n  } else {\n    return this.tileCache;\n  }\n};\n\n\n/**\n * Get the tile pixel ratio for this source. Subclasses may override this\n * method, which is meant to return a supported pixel ratio that matches the\n * provided `pixelRatio` as close as possible.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Tile pixel ratio.\n */\nTileSource.prototype.getTilePixelRatio = function(pixelRatio) {\n  return this.tilePixelRatio_;\n};\n\n\n/**\n * @param {number} z Z.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/size~Size} Tile size.\n */\nTileSource.prototype.getTilePixelSize = function(z, pixelRatio, projection) {\n  const tileGrid = this.getTileGridForProjection(projection);\n  const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n  const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n  if (tilePixelRatio == 1) {\n    return tileSize;\n  } else {\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n};\n\n\n/**\n * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n * is outside the resolution and extent range of the tile grid, `null` will be\n * returned.\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/proj/Projection=} opt_projection Projection.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n *     null if no tile URL should be created for the passed `tileCoord`.\n */\nTileSource.prototype.getTileCoordForTileUrlFunction = function(tileCoord, opt_projection) {\n  const projection = opt_projection !== undefined ?\n    opt_projection : this.getProjection();\n  const tileGrid = this.getTileGridForProjection(projection);\n  if (this.getWrapX() && projection.isGlobal()) {\n    tileCoord = wrapX(tileGrid, tileCoord, projection);\n  }\n  return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n};\n\n\n/**\n * @inheritDoc\n */\nTileSource.prototype.refresh = function() {\n  this.tileCache.clear();\n  this.changed();\n};\n\n\n/**\n * Marks a tile coord as being used, without triggering a load.\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {module:ol/proj/Projection} projection Projection.\n */\nTileSource.prototype.useTile = UNDEFINED;\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type Type.\n * @param {module:ol/Tile} tile The tile.\n */\nexport const TileSourceEvent = function(type, tile) {\n\n  Event.call(this, type);\n\n  /**\n   * The tile related to the event.\n   * @type {module:ol/Tile}\n   * @api\n   */\n  this.tile = tile;\n\n};\ninherits(TileSourceEvent, Event);\n\nexport default TileSource;\n","/**\n * @module ol/render/VectorContext\n */\n/**\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @constructor\n * @abstract\n * @struct\n * @api\n */\nconst VectorContext = function() {\n};\n\n\n/**\n * Render a geometry with a custom renderer.\n *\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {Function} renderer Renderer.\n */\nVectorContext.prototype.drawCustom = function(geometry, feature, renderer) {};\n\n\n/**\n * Render a geometry.\n *\n * @param {module:ol/geom/Geometry} geometry The geometry to render.\n */\nVectorContext.prototype.drawGeometry = function(geometry) {};\n\n\n/**\n * Set the rendering style.\n *\n * @param {module:ol/style/Style} style The rendering style.\n */\nVectorContext.prototype.setStyle = function(style) {};\n\n\n/**\n * @param {module:ol/geom/Circle} circleGeometry Circle geometry.\n * @param {module:ol/Feature} feature Feature.\n */\nVectorContext.prototype.drawCircle = function(circleGeometry, feature) {};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n */\nVectorContext.prototype.drawFeature = function(feature, style) {};\n\n\n/**\n * @param {module:ol/geom/GeometryCollection} geometryCollectionGeometry Geometry\n *     collection.\n * @param {module:ol/Feature} feature Feature.\n */\nVectorContext.prototype.drawGeometryCollection = function(geometryCollectionGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/LineString|module:ol/render/Feature} lineStringGeometry Line string geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawLineString = function(lineStringGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} multiLineStringGeometry MultiLineString geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiLineString = function(multiLineStringGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} multiPointGeometry MultiPoint geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiPoint = function(multiPointGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/MultiPolygon} multiPolygonGeometry MultiPolygon geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiPolygon = function(multiPolygonGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/Point|module:ol/render/Feature} pointGeometry Point geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawPoint = function(pointGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} polygonGeometry Polygon geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawPolygon = function(polygonGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawText = function(geometry, feature) {};\n\n\n/**\n * @param {module:ol/style/Fill} fillStyle Fill style.\n * @param {module:ol/style/Stroke} strokeStyle Stroke style.\n */\nVectorContext.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {};\n\n\n/**\n * @param {module:ol/style/Image} imageStyle Image style.\n * @param {module:ol/render/canvas~DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setImageStyle = function(imageStyle, opt_declutterGroup) {};\n\n\n/**\n * @param {module:ol/style/Text} textStyle Text style.\n * @param {module:ol/render/canvas~DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setTextStyle = function(textStyle, opt_declutterGroup) {};\nexport default VectorContext;\n","/**\n * @module ol/style/Fill\n */\nimport {getUid} from '../util.js';\nimport {asString} from '../color.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/color~Color|module:ol/colorlike~ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n\n/**\n * @classdesc\n * Set fill style for vector features.\n *\n * @constructor\n * @param {module:ol/style/Fill~Options=} opt_options Options.\n * @api\n */\nconst Fill = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {module:ol/color~Color|module:ol/colorlike~ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n * @return {module:ol/style/Fill} The cloned style.\n * @api\n */\nFill.prototype.clone = function() {\n  const color = this.getColor();\n  return new Fill({\n    color: (color && color.slice) ? color.slice() : color || undefined\n  });\n};\n\n\n/**\n * Get the fill color.\n * @return {module:ol/color~Color|module:ol/colorlike~ColorLike} Color.\n * @api\n */\nFill.prototype.getColor = function() {\n  return this.color_;\n};\n\n\n/**\n * Set the color.\n *\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @api\n */\nFill.prototype.setColor = function(color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * @return {string} The checksum.\n */\nFill.prototype.getChecksum = function() {\n  if (this.checksum_ === undefined) {\n    if (\n      this.color_ instanceof CanvasPattern ||\n        this.color_ instanceof CanvasGradient\n    ) {\n      this.checksum_ = getUid(this.color_).toString();\n    } else {\n      this.checksum_ = 'f' + (this.color_ ? asString(this.color_) : '-');\n    }\n  }\n\n  return this.checksum_;\n};\nexport default Fill;\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n","/**\n * @module ol/pointer/EventSource\n */\n/**\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @param {!Object.<string, function(Event)>} mapping Event mapping.\n * @constructor\n */\nconst EventSource = function(dispatcher, mapping) {\n  /**\n   * @type {module:ol/pointer/PointerEventHandler}\n   */\n  this.dispatcher = dispatcher;\n\n  /**\n   * @private\n   * @const\n   * @type {!Object.<string, function(Event)>}\n   */\n  this.mapping_ = mapping;\n};\n\n\n/**\n * List of events supported by this source.\n * @return {Array.<string>} Event names\n */\nEventSource.prototype.getEvents = function() {\n  return Object.keys(this.mapping_);\n};\n\n\n/**\n * Returns the handler that should handle a given event type.\n * @param {string} eventType The event type.\n * @return {function(Event)} Handler\n */\nEventSource.prototype.getHandlerForEvent = function(eventType) {\n  return this.mapping_[eventType];\n};\nexport default EventSource;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid, inherits} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, createEmpty, equals, getIntersection, isEmpty} from '../../extent.js';\nimport IntermediateCanvasRenderer from '../canvas/IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @constructor\n * @extends {module:ol/renderer/canvas/IntermediateCanvas}\n * @param {module:ol/layer/Tile|module:ol/layer/VectorTile} tileLayer Tile layer.\n * @api\n */\nconst CanvasTileLayerRenderer = function(tileLayer) {\n\n  IntermediateCanvasRenderer.call(this, tileLayer);\n\n  /**\n   * @protected\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context = this.context === null ? null : createCanvasContext2D();\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.oversampling_;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.renderedExtent_ = null;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.renderedRevision;\n\n  /**\n   * @protected\n   * @type {!Array.<module:ol/Tile>}\n   */\n  this.renderedTiles = [];\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.newTiles_ = false;\n\n  /**\n   * @protected\n   * @type {module:ol/extent~Extent}\n   */\n  this.tmpExtent = createEmpty();\n\n  /**\n   * @private\n   * @type {module:ol/TileRange}\n   */\n  this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.imageTransform_ = createTransform();\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.zDirection = 0;\n\n};\n\ninherits(CanvasTileLayerRenderer, IntermediateCanvasRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/TileLayer} The layer renderer.\n */\nCanvasTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasTileLayerRenderer(/** @type {module:ol/layer/Tile} */ (layer));\n};\n\n\n/**\n * @private\n * @param {module:ol/Tile} tile Tile.\n * @return {boolean} Tile is drawable.\n */\nCanvasTileLayerRenderer.prototype.isDrawableTile_ = function(tile) {\n  const tileState = tile.getState();\n  const useInterimTilesOnError = this.getLayer().getUseInterimTilesOnError();\n  return tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      tileState == TileState.ERROR && !useInterimTilesOnError;\n};\n\n\n/**\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/Tile} Tile.\n */\nCanvasTileLayerRenderer.prototype.getTile = function(z, x, y, pixelRatio, projection) {\n  const layer = this.getLayer();\n  const source = /** @type {module:ol/source/Tile} */ (layer.getSource());\n  let tile = source.getTile(z, x, y, pixelRatio, projection);\n  if (tile.getState() == TileState.ERROR) {\n    if (!layer.getUseInterimTilesOnError()) {\n      // When useInterimTilesOnError is false, we consider the error tile as loaded.\n      tile.setState(TileState.LOADED);\n    } else if (layer.getPreload() > 0) {\n      // Preloaded tiles for lower resolutions might have finished loading.\n      this.newTiles_ = true;\n    }\n  }\n  if (!this.isDrawableTile_(tile)) {\n    tile = tile.getInterimTile();\n  }\n  return tile;\n};\n\n/**\n * @inheritDoc\n */\nCanvasTileLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {\n\n  const pixelRatio = frameState.pixelRatio;\n  const size = frameState.size;\n  const viewState = frameState.viewState;\n  const projection = viewState.projection;\n  const viewResolution = viewState.resolution;\n  const viewCenter = viewState.center;\n\n  const tileLayer = this.getLayer();\n  const tileSource = /** @type {module:ol/source/Tile} */ (tileLayer.getSource());\n  const sourceRevision = tileSource.getRevision();\n  const tileGrid = tileSource.getTileGridForProjection(projection);\n  const z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n  const tileResolution = tileGrid.getResolution(z);\n  let oversampling = Math.round(viewResolution / tileResolution) || 1;\n  let extent = frameState.extent;\n\n  if (layerState.extent !== undefined) {\n    extent = getIntersection(extent, layerState.extent);\n  }\n  if (isEmpty(extent)) {\n    // Return false to prevent the rendering of the layer.\n    return false;\n  }\n\n  const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  const imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n\n  const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n  /**\n   * @type {Object.<number, Object.<string, module:ol/Tile>>}\n   */\n  const tilesToDrawByZ = {};\n  tilesToDrawByZ[z] = {};\n\n  const findLoadedTiles = this.createLoadedTileFinder(\n    tileSource, projection, tilesToDrawByZ);\n\n  const hints = frameState.viewHints;\n  const animatingOrInteracting = hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING];\n\n  const tmpExtent = this.tmpExtent;\n  const tmpTileRange = this.tmpTileRange_;\n  this.newTiles_ = false;\n  let tile, x, y;\n  for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n    for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n      if (Date.now() - frameState.time > 16 && animatingOrInteracting) {\n        continue;\n      }\n      tile = this.getTile(z, x, y, pixelRatio, projection);\n      if (this.isDrawableTile_(tile)) {\n        const uid = getUid(this);\n        if (tile.getState() == TileState.LOADED) {\n          tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n          const inTransition = tile.inTransition(uid);\n          if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n            this.newTiles_ = true;\n          }\n        }\n        if (tile.getAlpha(uid, frameState.time) === 1) {\n          // don't look for alt tiles if alpha is 1\n          continue;\n        }\n      }\n\n      const childTileRange = tileGrid.getTileCoordChildTileRange(\n        tile.tileCoord, tmpTileRange, tmpExtent);\n      let covered = false;\n      if (childTileRange) {\n        covered = findLoadedTiles(z + 1, childTileRange);\n      }\n      if (!covered) {\n        tileGrid.forEachTileCoordParentTileRange(\n          tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n      }\n\n    }\n  }\n\n  const renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n  if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\n    this.newTiles_ ||\n        !(this.renderedExtent_ && containsExtent(this.renderedExtent_, extent)) ||\n        this.renderedRevision != sourceRevision ||\n        oversampling != this.oversampling_ ||\n        !animatingOrInteracting && renderedResolution != this.renderedResolution\n  )) {\n\n    const context = this.context;\n    if (context) {\n      const tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n      const width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n      const height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n      const canvas = context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        this.oversampling_ = oversampling;\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        if (this.renderedExtent_ && !equals(imageExtent, this.renderedExtent_)) {\n          context.clearRect(0, 0, width, height);\n        }\n        oversampling = this.oversampling_;\n      }\n    }\n\n    this.renderedTiles.length = 0;\n    /** @type {Array.<number>} */\n    const zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(function(a, b) {\n      if (a === z) {\n        return 1;\n      } else if (b === z) {\n        return -1;\n      } else {\n        return a > b ? 1 : a < b ? -1 : 0;\n      }\n    });\n    let currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n    let tileExtent, tileGutter, tilesToDraw, w, h;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      currentZ = zs[i];\n      currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n      currentResolution = tileGrid.getResolution(currentZ);\n      currentScale = currentResolution / tileResolution;\n      tileGutter = tilePixelRatio * tileSource.getGutter(projection);\n      tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        tile = tilesToDraw[tileCoordKey];\n        tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n        x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n        y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n        w = currentTilePixelSize[0] * currentScale / oversampling;\n        h = currentTilePixelSize[1] * currentScale / oversampling;\n        this.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n        this.renderedTiles.push(tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n    this.renderedExtent_ = imageExtent;\n  }\n\n  const scale = this.renderedResolution / viewResolution;\n  const transform = composeTransform(this.imageTransform_,\n    pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n    scale, scale,\n    0,\n    (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\n    (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n  composeTransform(this.coordinateToCanvasPixelTransform,\n    pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n    pixelRatio / viewResolution, -pixelRatio / viewResolution,\n    0,\n    -viewCenter[0], -viewCenter[1]);\n\n\n  this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n  this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n    projection, extent, z, tileLayer.getPreload());\n  this.scheduleExpireCache(frameState, tileSource);\n\n  return this.renderedTiles.length > 0;\n};\n\n\n/**\n * @param {module:ol/Tile} tile Tile.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {number} x Left of the tile.\n * @param {number} y Top of the tile.\n * @param {number} w Width of the tile.\n * @param {number} h Height of the tile.\n * @param {number} gutter Tile gutter.\n * @param {boolean} transition Apply an alpha transition.\n */\nCanvasTileLayerRenderer.prototype.drawTileImage = function(tile, frameState, layerState, x, y, w, h, gutter, transition) {\n  const image = tile.getImage(this.getLayer());\n  if (!image) {\n    return;\n  }\n  const uid = getUid(this);\n  const alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n  if (alpha === 1 && !this.getLayer().getSource().getOpaque(frameState.viewState.projection)) {\n    this.context.clearRect(x, y, w, h);\n  }\n  const alphaChanged = alpha !== this.context.globalAlpha;\n  if (alphaChanged) {\n    this.context.save();\n    this.context.globalAlpha = alpha;\n  }\n  this.context.drawImage(image, gutter, gutter,\n    image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n  if (alphaChanged) {\n    this.context.restore();\n  }\n  if (alpha !== 1) {\n    frameState.animate = true;\n  } else if (transition) {\n    tile.endTransition(uid);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasTileLayerRenderer.prototype.getImage = function() {\n  const context = this.context;\n  return context ? context.canvas : null;\n};\n\n\n/**\n * @function\n * @return {module:ol/layer/Tile|module:ol/layer/VectorTile}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\n/**\n * @inheritDoc\n */\nCanvasTileLayerRenderer.prototype.getImageTransform = function() {\n  return this.imageTransform_;\n};\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../util.js';\nimport ImageWrapper from '../Image.js';\nimport {assert} from '../asserts.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport ImageSource, {defaultImageLoadFunction} from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport {compareVersions} from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {module:ol/source/WMSServerType|string} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver` or `qgis`. Only needed if `hidpi` is `true`.\n * @property {module:ol/Image~LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object.<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array.<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} url WMS service URL.\n */\n\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol/source/Image~ImageSourceEvent\n * @extends {module:ol/source/Image}\n * @param {module:ol/source/ImageWMS~Options=} [opt_options] ImageWMS options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {module:ol/Image~LoadFunction}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {module:ol/source/WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {module:ol/source/WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {module:ol/Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {module:ol/size~Size}\n */\nconst GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    GETFEATUREINFO_IMAGE_SIZE);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, GETFEATUREINFO_IMAGE_SIZE,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new ImageWrapper(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {module:ol/Image~LoadFunction} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/size~Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {module:ol/Image~LoadFunction} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n","/**\n * @module ol/layer/VectorTile\n */\nimport {inherits} from '../util.js';\nimport LayerType from '../LayerType.js';\nimport {assert} from '../asserts.js';\nimport TileProperty from '../layer/TileProperty.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorTileRenderType from '../layer/VectorTileRenderType.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport const RenderType = {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {module:ol/layer/VectorTileRenderType|string} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but point symbols and texts\n *    are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance than the other options.\n *\n * When `declutter` is set to `true`, `'hybrid'` will be used instead of `'image'`.\n * @property {module:ol/source/VectorTile} [source] Source.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority. When set to `true`, a `renderMode` of `'image'` will be overridden with\n * `'hybrid'`.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created.\n * @property {(module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction)} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @constructor\n * @extends {module:ol/layer/Vector}\n * @param {module:ol/layer/VectorTile~Options=} opt_options Options.\n * @api\n */\nconst VectorTileLayer = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  let renderMode = options.renderMode || VectorTileRenderType.HYBRID;\n  assert(renderMode == undefined ||\n      renderMode == VectorTileRenderType.IMAGE ||\n      renderMode == VectorTileRenderType.HYBRID ||\n      renderMode == VectorTileRenderType.VECTOR,\n  28); // `renderMode` must be `'image'`, `'hybrid'` or `'vector'`\n  if (options.declutter && renderMode == VectorTileRenderType.IMAGE) {\n    renderMode = VectorTileRenderType.HYBRID;\n  }\n  options.renderMode = renderMode;\n\n  const baseOptions = assign({}, options);\n\n  delete baseOptions.preload;\n  delete baseOptions.useInterimTilesOnError;\n  VectorLayer.call(this,  /** @type {module:ol/layer/Vector~Options} */ (baseOptions));\n\n  this.setPreload(options.preload ? options.preload : 0);\n  this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n    options.useInterimTilesOnError : true);\n\n  /**\n   * The layer type.\n   * @protected\n   * @type {module:ol/LayerType}\n   */\n  this.type = LayerType.VECTOR_TILE;\n\n};\n\ninherits(VectorTileLayer, VectorLayer);\n\n\n/**\n * Return the level as number to which we will preload tiles up to.\n * @return {number} The level to preload tiles up to.\n * @observable\n * @api\n */\nVectorTileLayer.prototype.getPreload = function() {\n  return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n};\n\n\n/**\n * Whether we use interim tiles on error.\n * @return {boolean} Use interim tiles on error.\n * @observable\n * @api\n */\nVectorTileLayer.prototype.getUseInterimTilesOnError = function() {\n  return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n};\n\n\n/**\n * Set the level as number to which we will preload tiles up to.\n * @param {number} preload The level to preload tiles up to.\n * @observable\n * @api\n */\nVectorTileLayer.prototype.setPreload = function(preload) {\n  this.set(TileProperty.PRELOAD, preload);\n};\n\n\n/**\n * Set whether we use interim tiles on error.\n * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n * @observable\n * @api\n */\nVectorTileLayer.prototype.setUseInterimTilesOnError = function(useInterimTilesOnError) {\n  this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n};\n\n\n/**\n * Return the associated {@link module:ol/source/VectorTile vectortilesource} of the layer.\n * @function\n * @return {module:ol/source/VectorTile} Source.\n * @api\n */\nVectorTileLayer.prototype.getSource;\nexport default VectorTileLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport {getUid} from '../util.js';\nimport rbush from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * Wrapper around the RBush by Vladimir Agafonkin.\n *\n * @constructor\n * @param {number=} opt_maxEntries Max entries.\n * @see https://github.com/mourner/rbush\n * @struct\n * @template T\n */\nconst RBush = function(opt_maxEntries) {\n\n  /**\n   * @private\n   */\n  this.rbush_ = rbush(opt_maxEntries, undefined);\n\n  /**\n   * A mapping between the objects added to this rbush wrapper\n   * and the objects that are actually added to the internal rbush.\n   * @private\n   * @type {Object.<number, module:ol/structs/RBush~Entry>}\n   */\n  this.items_ = {};\n\n};\n\n\n/**\n * Insert a value into the RBush.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.insert = function(extent, value) {\n  /** @type {module:ol/structs/RBush~Entry} */\n  const item = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3],\n    value: value\n  };\n\n  this.rbush_.insert(item);\n  this.items_[getUid(value)] = item;\n};\n\n\n/**\n * Bulk-insert values into the RBush.\n * @param {Array.<module:ol/extent~Extent>} extents Extents.\n * @param {Array.<T>} values Values.\n */\nRBush.prototype.load = function(extents, values) {\n  const items = new Array(values.length);\n  for (let i = 0, l = values.length; i < l; i++) {\n    const extent = extents[i];\n    const value = values[i];\n\n    /** @type {module:ol/structs/RBush~Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n    items[i] = item;\n    this.items_[getUid(value)] = item;\n  }\n  this.rbush_.load(items);\n};\n\n\n/**\n * Remove a value from the RBush.\n * @param {T} value Value.\n * @return {boolean} Removed.\n */\nRBush.prototype.remove = function(value) {\n  const uid = getUid(value);\n\n  // get the object in which the value was wrapped when adding to the\n  // internal rbush. then use that object to do the removal.\n  const item = this.items_[uid];\n  delete this.items_[uid];\n  return this.rbush_.remove(item) !== null;\n};\n\n\n/**\n * Update the extent of a value in the RBush.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.update = function(extent, value) {\n  const item = this.items_[getUid(value)];\n  const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n  if (!equals(bbox, extent)) {\n    this.remove(value);\n    this.insert(extent, value);\n  }\n};\n\n\n/**\n * Return all values in the RBush.\n * @return {Array.<T>} All.\n */\nRBush.prototype.getAll = function() {\n  const items = this.rbush_.all();\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Return all values in the given extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {Array.<T>} All in extent.\n */\nRBush.prototype.getInExtent = function(extent) {\n  /** @type {module:ol/structs/RBush~Entry} */\n  const bbox = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3]\n  };\n  const items = this.rbush_.search(bbox);\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Calls a callback function with each value in the tree.\n * If the callback returns a truthy value, this value is returned without\n * checking the rest of the tree.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach = function(callback, opt_this) {\n  return this.forEach_(this.getAll(), callback, opt_this);\n};\n\n\n/**\n * Calls a callback function with each value in the provided extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEachInExtent = function(extent, callback, opt_this) {\n  return this.forEach_(this.getInExtent(extent), callback, opt_this);\n};\n\n\n/**\n * @param {Array.<T>} values Values.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @private\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach_ = function(values, callback, opt_this) {\n  let result;\n  for (let i = 0, l = values.length; i < l; i++) {\n    result = callback.call(opt_this, values[i]);\n    if (result) {\n      return result;\n    }\n  }\n  return result;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nRBush.prototype.isEmpty = function() {\n  return isEmpty(this.items_);\n};\n\n\n/**\n * Remove all values from the RBush.\n */\nRBush.prototype.clear = function() {\n  this.rbush_.clear();\n  this.items_ = {};\n};\n\n\n/**\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nRBush.prototype.getExtent = function(opt_extent) {\n  // FIXME add getExtent() to rbush\n  const data = this.rbush_.data;\n  return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n};\n\n\n/**\n * @param {module:ol/structs/RBush} rbush R-Tree.\n */\nRBush.prototype.concat = function(rbush) {\n  this.rbush_.load(rbush.rbush_.all());\n  for (const i in rbush.items_) {\n    this.items_[i | 0] = rbush.items_[i | 0];\n  }\n};\nexport default RBush;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n","/**\n * @module ol/source/UrlTile\n */\nimport {getUid, inherits} from '../util.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from '../source/Tile.js';\nimport TileEventType from '../source/TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {number} [cacheSize]\n * @property {module:ol/extent~Extent} [extent]\n * @property {boolean} [opaque]\n * @property {module:ol/proj~ProjectionLike} [projection]\n * @property {module:ol/source/State} [state]\n * @property {module:ol/tilegrid/TileGrid} [tileGrid]\n * @property {module:ol/Tile~LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array.<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @constructor\n * @abstract\n * @fires module:ol/source/TileEvent\n * @extends {module:ol/source/Tile}\n * @param {module:ol/source/UrlTile~Options=} options Image tile options.\n */\nconst UrlTile = function(options) {\n\n  TileSource.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    extent: options.extent,\n    opaque: options.opaque,\n    projection: options.projection,\n    state: options.state,\n    tileGrid: options.tileGrid,\n    tilePixelRatio: options.tilePixelRatio,\n    wrapX: options.wrapX,\n    transition: options.transition\n  });\n\n  /**\n   * @protected\n   * @type {module:ol/Tile~LoadFunction}\n   */\n  this.tileLoadFunction = options.tileLoadFunction;\n\n  /**\n   * @protected\n   * @type {module:ol/Tile~UrlFunction}\n   */\n  this.tileUrlFunction = this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) : nullTileUrlFunction;\n\n  /**\n   * @protected\n   * @type {!Array.<string>|null}\n   */\n  this.urls = null;\n\n  if (options.urls) {\n    this.setUrls(options.urls);\n  } else if (options.url) {\n    this.setUrl(options.url);\n  }\n  if (options.tileUrlFunction) {\n    this.setTileUrlFunction(options.tileUrlFunction);\n  }\n\n  /**\n   * @private\n   * @type {!Object.<number, boolean>}\n   */\n  this.tileLoadingKeys_ = {};\n\n};\n\ninherits(UrlTile, TileSource);\n\n\n/**\n * @type {module:ol/Tile~UrlFunction|undefined}\n * @protected\n */\nUrlTile.prototype.fixedTileUrlFunction;\n\n/**\n * Return the tile load function of the source.\n * @return {module:ol/Tile~LoadFunction} TileLoadFunction\n * @api\n */\nUrlTile.prototype.getTileLoadFunction = function() {\n  return this.tileLoadFunction;\n};\n\n\n/**\n * Return the tile URL function of the source.\n * @return {module:ol/Tile~UrlFunction} TileUrlFunction\n * @api\n */\nUrlTile.prototype.getTileUrlFunction = function() {\n  return this.tileUrlFunction;\n};\n\n\n/**\n * Return the URLs used for this source.\n * When a tileUrlFunction is used instead of url or urls,\n * null will be returned.\n * @return {!Array.<string>|null} URLs.\n * @api\n */\nUrlTile.prototype.getUrls = function() {\n  return this.urls;\n};\n\n\n/**\n * Handle tile change events.\n * @param {module:ol/events/Event} event Event.\n * @protected\n */\nUrlTile.prototype.handleTileChange = function(event) {\n  const tile = /** @type {module:ol/Tile} */ (event.target);\n  const uid = getUid(tile);\n  const tileState = tile.getState();\n  let type;\n  if (tileState == TileState.LOADING) {\n    this.tileLoadingKeys_[uid] = true;\n    type = TileEventType.TILELOADSTART;\n  } else if (uid in this.tileLoadingKeys_) {\n    delete this.tileLoadingKeys_[uid];\n    type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n      (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n        TileEventType.TILELOADEND : undefined;\n  }\n  if (type != undefined) {\n    this.dispatchEvent(new TileSourceEvent(type, tile));\n  }\n};\n\n\n/**\n * Set the tile load function of the source.\n * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n * @api\n */\nUrlTile.prototype.setTileLoadFunction = function(tileLoadFunction) {\n  this.tileCache.clear();\n  this.tileLoadFunction = tileLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the tile URL function of the source.\n * @param {module:ol/Tile~UrlFunction} tileUrlFunction Tile URL function.\n * @param {string=} opt_key Optional new tile key for the source.\n * @api\n */\nUrlTile.prototype.setTileUrlFunction = function(tileUrlFunction, opt_key) {\n  this.tileUrlFunction = tileUrlFunction;\n  this.tileCache.pruneExceptNewestZ();\n  if (typeof opt_key !== 'undefined') {\n    this.setKey(opt_key);\n  } else {\n    this.changed();\n  }\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string} url URL.\n * @api\n */\nUrlTile.prototype.setUrl = function(url) {\n  const urls = this.urls = expandUrl(url);\n  this.setTileUrlFunction(this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) :\n    createFromTemplates(urls, this.tileGrid), url);\n};\n\n\n/**\n * Set the URLs to use for requests.\n * @param {Array.<string>} urls URLs.\n * @api\n */\nUrlTile.prototype.setUrls = function(urls) {\n  this.urls = urls;\n  const key = urls.join('\\n');\n  this.setTileUrlFunction(this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) :\n    createFromTemplates(urls, this.tileGrid), key);\n};\n\n\n/**\n * @inheritDoc\n */\nUrlTile.prototype.useTile = function(z, x, y) {\n  const tileCoordKey = getKeyZXY(z, x, y);\n  if (this.tileCache.containsKey(tileCoordKey)) {\n    this.tileCache.get(tileCoordKey);\n  }\n};\nexport default UrlTile;\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object.<string, Object.<string, module:ol/proj~TransformFunction>>}\n */\nlet transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {module:ol/proj/Projection} source Source.\n * @param {module:ol/proj/Projection} destination Destination.\n * @param {module:ol/proj~TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {module:ol/proj/Projection} source Source projection.\n * @param {module:ol/proj/Projection} destination Destination projection.\n * @return {module:ol/proj~TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {module:ol/proj~TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/loadingstrategy\n */\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/extent~Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/extent~Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {function(module:ol/extent~Extent, number): Array.<module:ol/extent~Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {module:ol/extent~Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array.<module:ol/extent~Extent>} Extents.\n     */\n    function(extent, resolution) {\n      const z = tileGrid.getZForResolution(resolution);\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array.<module:ol/extent~Extent>} */\n      const extents = [];\n      /** @type {module:ol/tilecoord~TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {module:ol/proj/Projection} sourceProj Source projection.\n * @param {module:ol/proj/Projection} targetProj Target projection.\n * @param {module:ol/coordinate~Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {module:ol/coordinate~Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  const dX = x - centroidX;\n  const dY = y - centroidY;\n  const distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {module:ol/extent~Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {module:ol/extent~Extent} targetExtent Target extent.\n * @param {module:ol/reproj/Triangulation} triangulation\n * Calculated triangulation.\n * @param {Array.<{extent: module:ol/extent~Extent,\n *                 image: (HTMLCanvasElement|Image|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  const context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0], y0 = source[0][1];\n    let x1 = source[1][0], y1 = source[1][1];\n    let x2 = source[2][0], y2 = source[2][1];\n    const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    const centroidX = (u0 + u1 + u2) / 3;\n    const centroidY = (v0 + v1 + v2) / 3;\n    const p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    const p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    const p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport {inherits} from '../util.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {linearRing as linearRingArea} from '../geom/flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {douglasPeucker} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst LinearRing = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(LinearRing, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/LinearRing} Clone.\n * @override\n * @api\n */\nLinearRing.prototype.clone = function() {\n  const linearRing = new LinearRing(null);\n  linearRing.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return linearRing;\n};\n\n\n/**\n * @inheritDoc\n */\nLinearRing.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestPoint(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Return the area of the linear ring on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nLinearRing.prototype.getArea = function() {\n  return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the coordinates of the linear ring.\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n * @override\n * @api\n */\nLinearRing.prototype.getCoordinates = function() {\n  return inflateCoordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nLinearRing.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    squaredTolerance, simplifiedFlatCoordinates, 0);\n  const simplifiedLinearRing = new LinearRing(null);\n  simplifiedLinearRing.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates);\n  return simplifiedLinearRing;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nLinearRing.prototype.getType = function() {\n  return GeometryType.LINEAR_RING;\n};\n\n\n/**\n * @inheritDoc\n */\nLinearRing.prototype.intersectsExtent = function(extent) {};\n\n\n/**\n * Set the coordinates of the linear ring.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nLinearRing.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nLinearRing.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default LinearRing;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n","/**\n * @module ol/Disposable\n */\nimport {UNDEFINED} from './functions.js';\n\n/**\n * Objects that need to clean up after themselves.\n * @constructor\n */\nconst Disposable = function() {};\n\n/**\n * The object has already been disposed.\n * @type {boolean}\n * @private\n */\nDisposable.prototype.disposed_ = false;\n\n/**\n * Clean up.\n */\nDisposable.prototype.dispose = function() {\n  if (!this.disposed_) {\n    this.disposed_ = true;\n    this.disposeInternal();\n  }\n};\n\n/**\n * Extension point for disposable objects.\n * @protected\n */\nDisposable.prototype.disposeInternal = UNDEFINED;\nexport default Disposable;\n","/**\n * @module ol/ImageBase\n */\nimport {inherits} from './util.js';\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/events/EventTarget}\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/ImageState} state State.\n */\nconst ImageBase = function(extent, resolution, pixelRatio, state) {\n\n  EventTarget.call(this);\n\n  /**\n   * @protected\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @protected\n   * @type {number|undefined}\n   */\n  this.resolution = resolution;\n\n  /**\n   * @protected\n   * @type {module:ol/ImageState}\n   */\n  this.state = state;\n\n};\n\ninherits(ImageBase, EventTarget);\n\n\n/**\n * @protected\n */\nImageBase.prototype.changed = function() {\n  this.dispatchEvent(EventType.CHANGE);\n};\n\n\n/**\n * @return {module:ol/extent~Extent} Extent.\n */\nImageBase.prototype.getExtent = function() {\n  return this.extent;\n};\n\n\n/**\n * @abstract\n * @return {HTMLCanvasElement|Image|HTMLVideoElement} Image.\n */\nImageBase.prototype.getImage = function() {};\n\n\n/**\n * @return {number} PixelRatio.\n */\nImageBase.prototype.getPixelRatio = function() {\n  return this.pixelRatio_;\n};\n\n\n/**\n * @return {number} Resolution.\n */\nImageBase.prototype.getResolution = function() {\n  return /** @type {number} */ (this.resolution);\n};\n\n\n/**\n * @return {module:ol/ImageState} State.\n */\nImageBase.prototype.getState = function() {\n  return this.state;\n};\n\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\nImageBase.prototype.load = function() {};\n\nexport default ImageBase;\n","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n","/**\n * @module ol/renderer/Map\n */\nimport {getUid, inherits} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE, UNDEFINED} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\n\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/Disposable}\n * @param {module:ol/PluggableMap} map Map.\n * @struct\n */\nconst MapRenderer = function(map) {\n  Disposable.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/PluggableMap}\n   */\n  this.map_ = map;\n\n  /**\n   * @private\n   * @type {!Object.<string, module:ol/renderer/Layer>}\n   */\n  this.layerRenderers_ = {};\n\n  /**\n   * @private\n   * @type {Object.<string, module:ol/events~EventsKey>}\n   */\n  this.layerRendererListeners_ = {};\n\n  /**\n   * @private\n   * @type {Array.<module:ol/renderer/Layer>}\n   */\n  this.layerRendererConstructors_ = [];\n\n};\n\ninherits(MapRenderer, Disposable);\n\n\n/**\n * Register layer renderer constructors.\n * @param {Array.<module:ol/renderer/Layer>} constructors Layer renderers.\n */\nMapRenderer.prototype.registerLayerRenderers = function(constructors) {\n  this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n};\n\n\n/**\n * Get the registered layer renderer constructors.\n * @return {Array.<module:ol/renderer/Layer>} Registered layer renderers.\n */\nMapRenderer.prototype.getLayerRendererConstructors = function() {\n  return this.layerRendererConstructors_;\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @protected\n */\nMapRenderer.prototype.calculateMatrices2D = function(frameState) {\n  const viewState = frameState.viewState;\n  const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n  const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n  composeTransform(coordinateToPixelTransform,\n    frameState.size[0] / 2, frameState.size[1] / 2,\n    1 / viewState.resolution, -1 / viewState.resolution,\n    -viewState.rotation,\n    -viewState.center[0], -viewState.center[1]);\n\n  invertTransform(\n    transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n};\n\n\n/**\n * Removes all layer renderers.\n */\nMapRenderer.prototype.removeLayerRenderers = function() {\n  for (const key in this.layerRenderers_) {\n    this.removeLayerRendererByKey_(key).dispose();\n  }\n};\n\n\n/**\n * @param {module:ol/PluggableMap} map Map.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature),\n *     module:ol/layer/Layer): T} callback Feature callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n *     function, only layers which are visible and for which this function\n *     returns `true` will be tested for features.  By default, all visible\n *     layers will be tested.\n * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n * @return {T|undefined} Callback result.\n * @template S,T,U\n */\nMapRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg,\n  layerFilter, thisArg2) {\n  let result;\n  const viewState = frameState.viewState;\n  const viewResolution = viewState.resolution;\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @return {?} Callback result.\n   */\n  function forEachFeatureAtCoordinate(feature, layer) {\n    const key = getUid(feature).toString();\n    const managed = frameState.layerStates[getUid(layer)].managed;\n    if (!(key in frameState.skippedFeatureUids && !managed)) {\n      return callback.call(thisArg, feature, managed ? layer : null);\n    }\n  }\n\n  const projection = viewState.projection;\n\n  let translatedCoordinate = coordinate;\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    const x = coordinate[0];\n    if (x < projectionExtent[0] || x > projectionExtent[2]) {\n      const worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n      translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n    }\n  }\n\n  const layerStates = frameState.layerStatesArray;\n  const numLayers = layerStates.length;\n  let i;\n  for (i = numLayers - 1; i >= 0; --i) {\n    const layerState = layerStates[i];\n    const layer = layerState.layer;\n    if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n      const layerRenderer = this.getLayerRenderer(layer);\n      if (layer.getSource()) {\n        result = layerRenderer.forEachFeatureAtCoordinate(\n          layer.getSource().getWrapX() ? translatedCoordinate : coordinate,\n          frameState, hitTolerance, forEachFeatureAtCoordinate, thisArg);\n      }\n      if (result) {\n        return result;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @abstract\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n *     callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n *     function, only layers which are visible and for which this function\n *     returns `true` will be tested for features.  By default, all visible\n *     layers will be tested.\n * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n * @return {T|undefined} Callback result.\n * @template S,T,U\n */\nMapRenderer.prototype.forEachLayerAtPixel = function(pixel, frameState, hitTolerance, callback, thisArg,\n  layerFilter, thisArg2) {};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n *     function, only layers which are visible and for which this function\n *     returns `true` will be tested for features.  By default, all visible\n *     layers will be tested.\n * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n * @return {boolean} Is there a feature at the given coordinate?\n * @template U\n */\nMapRenderer.prototype.hasFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n  const hasFeature = this.forEachFeatureAtCoordinate(\n    coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n  return hasFeature !== undefined;\n};\n\n\n/**\n * @param {module:ol/layer/Layer} layer Layer.\n * @protected\n * @return {module:ol/renderer/Layer} Layer renderer.\n */\nMapRenderer.prototype.getLayerRenderer = function(layer) {\n  const layerKey = getUid(layer).toString();\n  if (layerKey in this.layerRenderers_) {\n    return this.layerRenderers_[layerKey];\n  } else {\n    let renderer;\n    for (let i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n      const candidate = this.layerRendererConstructors_[i];\n      if (candidate['handles'](layer)) {\n        renderer = candidate['create'](this, layer);\n        break;\n      }\n    }\n    if (renderer) {\n      this.layerRenderers_[layerKey] = renderer;\n      this.layerRendererListeners_[layerKey] = listen(renderer,\n        EventType.CHANGE, this.handleLayerRendererChange_, this);\n    } else {\n      throw new Error('Unable to create renderer for layer: ' + layer.getType());\n    }\n    return renderer;\n  }\n};\n\n\n/**\n * @param {string} layerKey Layer key.\n * @protected\n * @return {module:ol/renderer/Layer} Layer renderer.\n */\nMapRenderer.prototype.getLayerRendererByKey = function(layerKey) {\n  return this.layerRenderers_[layerKey];\n};\n\n\n/**\n * @protected\n * @return {Object.<string, module:ol/renderer/Layer>} Layer renderers.\n */\nMapRenderer.prototype.getLayerRenderers = function() {\n  return this.layerRenderers_;\n};\n\n\n/**\n * @return {module:ol/PluggableMap} Map.\n */\nMapRenderer.prototype.getMap = function() {\n  return this.map_;\n};\n\n\n/**\n * Handle changes in a layer renderer.\n * @private\n */\nMapRenderer.prototype.handleLayerRendererChange_ = function() {\n  this.map_.render();\n};\n\n\n/**\n * @param {string} layerKey Layer key.\n * @return {module:ol/renderer/Layer} Layer renderer.\n * @private\n */\nMapRenderer.prototype.removeLayerRendererByKey_ = function(layerKey) {\n  const layerRenderer = this.layerRenderers_[layerKey];\n  delete this.layerRenderers_[layerKey];\n\n  unlistenByKey(this.layerRendererListeners_[layerKey]);\n  delete this.layerRendererListeners_[layerKey];\n\n  return layerRenderer;\n};\n\n\n/**\n * Render.\n * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nMapRenderer.prototype.renderFrame = UNDEFINED;\n\n\n/**\n * @param {module:ol/PluggableMap} map Map.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @private\n */\nMapRenderer.prototype.removeUnusedLayerRenderers_ = function(map, frameState) {\n  for (const layerKey in this.layerRenderers_) {\n    if (!frameState || !(layerKey in frameState.layerStates)) {\n      this.removeLayerRendererByKey_(layerKey).dispose();\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @protected\n */\nMapRenderer.prototype.scheduleExpireIconCache = function(frameState) {\n  frameState.postRenderFunctions.push(/** @type {module:ol/PluggableMap~PostRenderFunction} */ (expireIconCache));\n};\n\n\n/**\n * @param {!module:ol/PluggableMap~FrameState} frameState Frame state.\n * @protected\n */\nMapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function(frameState) {\n  for (const layerKey in this.layerRenderers_) {\n    if (!(layerKey in frameState.layerStates)) {\n      frameState.postRenderFunctions.push(\n        /** @type {module:ol/PluggableMap~PostRenderFunction} */ (this.removeUnusedLayerRenderers_.bind(this))\n      );\n      return;\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/layer/Layer~State} state1 First layer state.\n * @param {module:ol/layer/Layer~State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/format/XML\n */\nimport {isDocument, isNode, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n","/**\n * @module ol/format/XLink\n */\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readHref(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n","/**\n * @module ol/format/TextFeature\n */\nimport {inherits} from '../util.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/format/Feature}\n */\nconst TextFeature = function() {\n  FeatureFormat.call(this);\n};\n\ninherits(TextFeature, FeatureFormat);\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nTextFeature.prototype.getType = function() {\n  return FormatType.TEXT;\n};\n\n\n/**\n * @inheritDoc\n */\nTextFeature.prototype.readFeature = function(source, opt_options) {\n  return this.readFeatureFromText(getText(source), this.adaptOptions(opt_options));\n};\n\n\n/**\n * @abstract\n * @param {string} text Text.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @protected\n * @return {module:ol/Feature} Feature.\n */\nTextFeature.prototype.readFeatureFromText = function(text, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nTextFeature.prototype.readFeatures = function(source, opt_options) {\n  return this.readFeaturesFromText(getText(source), this.adaptOptions(opt_options));\n};\n\n\n/**\n * @abstract\n * @param {string} text Text.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @protected\n * @return {Array.<module:ol/Feature>} Features.\n */\nTextFeature.prototype.readFeaturesFromText = function(text, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nTextFeature.prototype.readGeometry = function(source, opt_options) {\n  return this.readGeometryFromText(getText(source), this.adaptOptions(opt_options));\n};\n\n\n/**\n * @abstract\n * @param {string} text Text.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @protected\n * @return {module:ol/geom/Geometry} Geometry.\n */\nTextFeature.prototype.readGeometryFromText = function(text, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nTextFeature.prototype.readProjection = function(source) {\n  return this.readProjectionFromText(getText(source));\n};\n\n\n/**\n * @param {string} text Text.\n * @protected\n * @return {module:ol/proj/Projection} Projection.\n */\nTextFeature.prototype.readProjectionFromText = function(text) {\n  return this.dataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nTextFeature.prototype.writeFeature = function(feature, opt_options) {\n  return this.writeFeatureText(feature, this.adaptOptions(opt_options));\n};\n\n\n/**\n * @abstract\n * @param {module:ol/Feature} feature Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @protected\n * @return {string} Text.\n */\nTextFeature.prototype.writeFeatureText = function(feature, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nTextFeature.prototype.writeFeatures = function(features, opt_options) {\n  return this.writeFeaturesText(features, this.adaptOptions(opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @protected\n * @return {string} Text.\n */\nTextFeature.prototype.writeFeaturesText = function(features, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nTextFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  return this.writeGeometryText(geometry, this.adaptOptions(opt_options));\n};\n\n\n/**\n * @abstract\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @protected\n * @return {string} Text.\n */\nTextFeature.prototype.writeGeometryText = function(geometry, opt_options) {};\nexport default TextFeature;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport {inherits} from '../util.js';\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @constructor\n * @extends {module:ol/geom/Geometry}\n * @param {Array.<module:ol/geom/Geometry>=} opt_geometries Geometries.\n * @api\n */\nconst GeometryCollection = function(opt_geometries) {\n\n  Geometry.call(this);\n\n  /**\n   * @private\n   * @type {Array.<module:ol/geom/Geometry>}\n   */\n  this.geometries_ = opt_geometries ? opt_geometries : null;\n\n  this.listenGeometriesChange_();\n};\n\ninherits(GeometryCollection, Geometry);\n\n\n/**\n * @param {Array.<module:ol/geom/Geometry>} geometries Geometries.\n * @return {Array.<module:ol/geom/Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.unlistenGeometriesChange_ = function() {\n  if (!this.geometries_) {\n    return;\n  }\n  for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    unlisten(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.listenGeometriesChange_ = function() {\n  if (!this.geometries_) {\n    return;\n  }\n  for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    listen(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/GeometryCollection} Clone.\n * @override\n * @api\n */\nGeometryCollection.prototype.clone = function() {\n  const geometryCollection = new GeometryCollection(null);\n  geometryCollection.setGeometries(this.geometries_);\n  return geometryCollection;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    minSquaredDistance = geometries[i].closestPointXY(\n      x, y, closestPoint, minSquaredDistance);\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.containsXY = function(x, y) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].containsXY(x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.computeExtent = function(extent) {\n  createOrUpdateEmpty(extent);\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    extend(extent, geometries[i].getExtent());\n  }\n  return extent;\n};\n\n\n/**\n * Return the geometries that make up this geometry collection.\n * @return {Array.<module:ol/geom/Geometry>} Geometries.\n * @api\n */\nGeometryCollection.prototype.getGeometries = function() {\n  return cloneGeometries(this.geometries_);\n};\n\n\n/**\n * @return {Array.<module:ol/geom/Geometry>} Geometries.\n */\nGeometryCollection.prototype.getGeometriesArray = function() {\n  return this.geometries_;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  const key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.getType = function() {\n  return GeometryType.GEOMETRY_COLLECTION;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.intersectsExtent = function(extent) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].intersectsExtent(extent)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nGeometryCollection.prototype.isEmpty = function() {\n  return this.geometries_.length === 0;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.rotate = function(angle, anchor) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].rotate(angle, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  let anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].scale(sx, opt_sy, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the geometries that make up this geometry collection.\n * @param {Array.<module:ol/geom/Geometry>} geometries Geometries.\n * @api\n */\nGeometryCollection.prototype.setGeometries = function(geometries) {\n  this.setGeometriesArray(cloneGeometries(geometries));\n};\n\n\n/**\n * @param {Array.<module:ol/geom/Geometry>} geometries Geometries.\n */\nGeometryCollection.prototype.setGeometriesArray = function(geometries) {\n  this.unlistenGeometriesChange_();\n  this.geometries_ = geometries;\n  this.listenGeometriesChange_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.applyTransform = function(transformFn) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].applyTransform(transformFn);\n  }\n  this.changed();\n};\n\n\n/**\n * Translate the geometry.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @override\n * @api\n */\nGeometryCollection.prototype.translate = function(deltaX, deltaY) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].translate(deltaX, deltaY);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.disposeInternal = function() {\n  this.unlistenGeometriesChange_();\n  Geometry.prototype.disposeInternal.call(this);\n};\nexport default GeometryCollection;\n","/**\n * @module ol/format/JSONFeature\n */\nimport {inherits} from '../util.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/format/Feature}\n */\nconst JSONFeature = function() {\n  FeatureFormat.call(this);\n};\n\ninherits(JSONFeature, FeatureFormat);\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.getType = function() {\n  return FormatType.JSON;\n};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readFeature = function(source, opt_options) {\n  return this.readFeatureFromObject(\n    getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readFeatures = function(source, opt_options) {\n  return this.readFeaturesFromObject(\n    getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @protected\n * @return {module:ol/Feature} Feature.\n */\nJSONFeature.prototype.readFeatureFromObject = function(object, opt_options) {};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @protected\n * @return {Array.<module:ol/Feature>} Features.\n */\nJSONFeature.prototype.readFeaturesFromObject = function(object, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readGeometry = function(source, opt_options) {\n  return this.readGeometryFromObject(\n    getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @protected\n * @return {module:ol/geom/Geometry} Geometry.\n */\nJSONFeature.prototype.readGeometryFromObject = function(object, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readProjection = function(source) {\n  return this.readProjectionFromObject(getObject(source));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @protected\n * @return {module:ol/proj/Projection} Projection.\n */\nJSONFeature.prototype.readProjectionFromObject = function(object) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeFeature = function(feature, opt_options) {\n  return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeFeatureObject = function(feature, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeFeatures = function(features, opt_options) {\n  return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeFeaturesObject = function(features, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeGeometryObject = function(geometry, opt_options) {};\nexport default JSONFeature;\n","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n *\n * @constructor\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @struct\n */\nconst TileRange = function(minX, maxX, minY, maxY) {\n\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n\n  /**\n   * @type {number}\n   */\n  this.maxX = maxX;\n\n  /**\n   * @type {number}\n   */\n  this.minY = minY;\n\n  /**\n   * @type {number}\n   */\n  this.maxY = maxY;\n\n};\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {module:ol/TileRange=} tileRange TileRange.\n * @return {module:ol/TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\nTileRange.prototype.contains = function(tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\nTileRange.prototype.containsTileRange = function(tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n\n\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\nTileRange.prototype.containsXY = function(x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\nTileRange.prototype.equals = function(tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n */\nTileRange.prototype.extend = function(tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n\n\n/**\n * @return {number} Height.\n */\nTileRange.prototype.getHeight = function() {\n  return this.maxY - this.minY + 1;\n};\n\n\n/**\n * @return {module:ol/size~Size} Size.\n */\nTileRange.prototype.getSize = function() {\n  return [this.getWidth(), this.getHeight()];\n};\n\n\n/**\n * @return {number} Width.\n */\nTileRange.prototype.getWidth = function() {\n  return this.maxX - this.minX + 1;\n};\n\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Intersects.\n */\nTileRange.prototype.intersects = function(tileRange) {\n  return this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY;\n};\nexport default TileRange;\n","/**\n * @module ol/source/Source\n */\nimport {inherits} from '../util.js';\nimport {UNDEFINED} from '../functions.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(module:ol/PluggableMap~FrameState): (string|Array.<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array.<string>|module:ol/source/Source~Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {module:ol/proj~ProjectionLike} projection\n * @property {module:ol/source/State} [state]\n * @property {boolean} [wrapX]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/Object}\n * @param {module:ol/source/Source~Options} options Source options.\n * @api\n */\nconst Source = function(options) {\n\n  BaseObject.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/proj/Projection}\n   */\n  this.projection_ = getProjection(options.projection);\n\n  /**\n   * @private\n   * @type {?module:ol/source/Source~Attribution}\n   */\n  this.attributions_ = this.adaptAttributions_(options.attributions);\n\n  /**\n   * @private\n   * @type {module:ol/source/State}\n   */\n  this.state_ = options.state !== undefined ?\n    options.state : SourceState.READY;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n};\n\ninherits(Source, BaseObject);\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {module:ol/source/Source~AttributionLike|undefined} attributionLike The attribution option.\n * @return {?module:ol/source/Source~Attribution} An attribution function (or null).\n */\nSource.prototype.adaptAttributions_ = function(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function(frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function(frameState) {\n    return [attributionLike];\n  };\n};\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {Object.<string, boolean>} skippedFeatureUids Skipped feature uids.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T} callback Feature callback.\n * @return {T|undefined} Callback result.\n * @template T\n */\nSource.prototype.forEachFeatureAtCoordinate = UNDEFINED;\n\n\n/**\n * Get the attribution function for the source.\n * @return {?module:ol/source/Source~Attribution} Attribution function.\n */\nSource.prototype.getAttributions = function() {\n  return this.attributions_;\n};\n\n\n/**\n * Get the projection of the source.\n * @return {module:ol/proj/Projection} Projection.\n * @api\n */\nSource.prototype.getProjection = function() {\n  return this.projection_;\n};\n\n\n/**\n * @abstract\n * @return {Array.<number>|undefined} Resolutions.\n */\nSource.prototype.getResolutions = function() {};\n\n\n/**\n * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n * @return {module:ol/source/State} State.\n * @api\n */\nSource.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * @return {boolean|undefined} Wrap X.\n */\nSource.prototype.getWrapX = function() {\n  return this.wrapX_;\n};\n\n\n/**\n * Refreshes the source and finally dispatches a 'change' event.\n * @api\n */\nSource.prototype.refresh = function() {\n  this.changed();\n};\n\n\n/**\n * Set the attributions of the source.\n * @param {module:ol/source/Source~AttributionLike|undefined} attributions Attributions.\n *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n *     or `undefined`.\n * @api\n */\nSource.prototype.setAttributions = function(attributions) {\n  this.attributions_ = this.adaptAttributions_(attributions);\n  this.changed();\n};\n\n\n/**\n * Set the state of the source.\n * @param {module:ol/source/State} state State.\n * @protected\n */\nSource.prototype.setState = function(state) {\n  this.state_ = state;\n  this.changed();\n};\nexport default Source;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  let pointX = NaN;\n  let pointY = NaN;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] +\n        fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n        fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      const t = (target - cumulativeLengths[-index - 2]) /\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      const o = offset + (-index - 2) * stride;\n      pointX = lerp(\n        flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = lerp(\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\n      flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * @see http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * @see http://hg.python.org/cpython/file/2.7/Lib/heapq.py\n *\n * @constructor\n * @param {function(T): number} priorityFunction Priority function.\n * @param {function(T): string} keyFunction Key function.\n * @struct\n * @template T\n */\nconst PriorityQueue = function(priorityFunction, keyFunction) {\n\n  /**\n   * @type {function(T): number}\n   * @private\n   */\n  this.priorityFunction_ = priorityFunction;\n\n  /**\n   * @type {function(T): string}\n   * @private\n   */\n  this.keyFunction_ = keyFunction;\n\n  /**\n   * @type {Array.<T>}\n   * @private\n   */\n  this.elements_ = [];\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.priorities_ = [];\n\n  /**\n   * @type {!Object.<string, boolean>}\n   * @private\n   */\n  this.queuedElements_ = {};\n\n};\n\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.clear = function() {\n  this.elements_.length = 0;\n  this.priorities_.length = 0;\n  clear(this.queuedElements_);\n};\n\n\n/**\n * Remove and return the highest-priority element. O(log N).\n * @return {T} Element.\n */\nPriorityQueue.prototype.dequeue = function() {\n  const elements = this.elements_;\n  const priorities = this.priorities_;\n  const element = elements[0];\n  if (elements.length == 1) {\n    elements.length = 0;\n    priorities.length = 0;\n  } else {\n    elements[0] = elements.pop();\n    priorities[0] = priorities.pop();\n    this.siftUp_(0);\n  }\n  const elementKey = this.keyFunction_(element);\n  delete this.queuedElements_[elementKey];\n  return element;\n};\n\n\n/**\n * Enqueue an element. O(log N).\n * @param {T} element Element.\n * @return {boolean} The element was added to the queue.\n */\nPriorityQueue.prototype.enqueue = function(element) {\n  assert(!(this.keyFunction_(element) in this.queuedElements_),\n    31); // Tried to enqueue an `element` that was already added to the queue\n  const priority = this.priorityFunction_(element);\n  if (priority != DROP) {\n    this.elements_.push(element);\n    this.priorities_.push(priority);\n    this.queuedElements_[this.keyFunction_(element)] = true;\n    this.siftDown_(0, this.elements_.length - 1);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @return {number} Count.\n */\nPriorityQueue.prototype.getCount = function() {\n  return this.elements_.length;\n};\n\n\n/**\n * Gets the index of the left child of the node at the given index.\n * @param {number} index The index of the node to get the left child for.\n * @return {number} The index of the left child.\n * @private\n */\nPriorityQueue.prototype.getLeftChildIndex_ = function(index) {\n  return index * 2 + 1;\n};\n\n\n/**\n * Gets the index of the right child of the node at the given index.\n * @param {number} index The index of the node to get the right child for.\n * @return {number} The index of the right child.\n * @private\n */\nPriorityQueue.prototype.getRightChildIndex_ = function(index) {\n  return index * 2 + 2;\n};\n\n\n/**\n * Gets the index of the parent of the node at the given index.\n * @param {number} index The index of the node to get the parent for.\n * @return {number} The index of the parent.\n * @private\n */\nPriorityQueue.prototype.getParentIndex_ = function(index) {\n  return (index - 1) >> 1;\n};\n\n\n/**\n * Make this a heap. O(N).\n * @private\n */\nPriorityQueue.prototype.heapify_ = function() {\n  let i;\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n    this.siftUp_(i);\n  }\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nPriorityQueue.prototype.isEmpty = function() {\n  return this.elements_.length === 0;\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Is key queued.\n */\nPriorityQueue.prototype.isKeyQueued = function(key) {\n  return key in this.queuedElements_;\n};\n\n\n/**\n * @param {T} element Element.\n * @return {boolean} Is queued.\n */\nPriorityQueue.prototype.isQueued = function(element) {\n  return this.isKeyQueued(this.keyFunction_(element));\n};\n\n\n/**\n * @param {number} index The index of the node to move down.\n * @private\n */\nPriorityQueue.prototype.siftUp_ = function(index) {\n  const elements = this.elements_;\n  const priorities = this.priorities_;\n  const count = elements.length;\n  const element = elements[index];\n  const priority = priorities[index];\n  const startIndex = index;\n\n  while (index < (count >> 1)) {\n    const lIndex = this.getLeftChildIndex_(index);\n    const rIndex = this.getRightChildIndex_(index);\n\n    const smallerChildIndex = rIndex < count &&\n        priorities[rIndex] < priorities[lIndex] ?\n      rIndex : lIndex;\n\n    elements[index] = elements[smallerChildIndex];\n    priorities[index] = priorities[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n  this.siftDown_(startIndex, index);\n};\n\n\n/**\n * @param {number} startIndex The index of the root.\n * @param {number} index The index of the node to move up.\n * @private\n */\nPriorityQueue.prototype.siftDown_ = function(startIndex, index) {\n  const elements = this.elements_;\n  const priorities = this.priorities_;\n  const element = elements[index];\n  const priority = priorities[index];\n\n  while (index > startIndex) {\n    const parentIndex = this.getParentIndex_(index);\n    if (priorities[parentIndex] > priority) {\n      elements[index] = elements[parentIndex];\n      priorities[index] = priorities[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  elements[index] = element;\n  priorities[index] = priority;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.reprioritize = function() {\n  const priorityFunction = this.priorityFunction_;\n  const elements = this.elements_;\n  const priorities = this.priorities_;\n  let index = 0;\n  const n = elements.length;\n  let element, i, priority;\n  for (i = 0; i < n; ++i) {\n    element = elements[i];\n    priority = priorityFunction(element);\n    if (priority == DROP) {\n      delete this.queuedElements_[this.keyFunction_(element)];\n    } else {\n      priorities[index] = priority;\n      elements[index++] = element;\n    }\n  }\n  elements.length = index;\n  priorities.length = index;\n  this.heapify_();\n};\nexport default PriorityQueue;\n","/**\n * @module ol/MapEvent\n */\nimport {inherits} from './util.js';\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type Event type.\n * @param {module:ol/PluggableMap} map Map.\n * @param {?module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n */\nconst MapEvent = function(type, map, opt_frameState) {\n\n  Event.call(this, type);\n\n  /**\n   * The map where the event occurred.\n   * @type {module:ol/PluggableMap}\n   * @api\n   */\n  this.map = map;\n\n  /**\n   * The frame state at the time of the event.\n   * @type {?module:ol/PluggableMap~FrameState}\n   * @api\n   */\n  this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n};\n\ninherits(MapEvent, Event);\nexport default MapEvent;\n","/**\n * @module ol/render/Feature\n */\nimport {UNDEFINED} from '../functions.js';\nimport {extend} from '../array.js';\nimport {createOrUpdateFromCoordinate, createOrUpdateFromFlatCoordinates, getCenter, getHeight} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {getInteriorPointOfArray, getInteriorPointsOfMultiArray} from '../geom/flat/interiorpoint.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {get as getProjection} from '../proj.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n *\n * @constructor\n * @param {module:ol/geom/GeometryType} type Geometry type.\n * @param {Array.<number>} flatCoordinates Flat coordinates. These always need\n *     to be right-handed for polygons.\n * @param {Array.<number>|Array.<Array.<number>>} ends Ends or Endss.\n * @param {Object.<string, *>} properties Properties.\n * @param {number|string|undefined} id Feature id.\n */\nconst RenderFeature = function(type, flatCoordinates, ends, properties, id) {\n  /**\n   * @private\n   * @type {module:ol/extent~Extent|undefined}\n   */\n  this.extent_;\n\n  /**\n   * @private\n   * @type {number|string|undefined}\n   */\n  this.id_ = id;\n\n  /**\n   * @private\n   * @type {module:ol/geom/GeometryType}\n   */\n  this.type_ = type;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatCoordinates_ = flatCoordinates;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatMidpoints_ = null;\n\n  /**\n   * @private\n   * @type {Array.<number>|Array.<Array.<number>>}\n   */\n  this.ends_ = ends;\n\n  /**\n   * @private\n   * @type {Object.<string, *>}\n   */\n  this.properties_ = properties;\n\n};\n\n\n/**\n * @type {module:ol/transform~Transform}\n */\nconst tmpTransform = createTransform();\n\n\n/**\n * Get a feature property by its key.\n * @param {string} key Key\n * @return {*} Value for the requested key.\n * @api\n */\nRenderFeature.prototype.get = function(key) {\n  return this.properties_[key];\n};\n\n\n/**\n * @return {Array.<number>|Array.<Array.<number>>} Ends or endss.\n */\nRenderFeature.prototype.getEnds =\nRenderFeature.prototype.getEndss = function() {\n  return this.ends_;\n};\n\n\n/**\n * Get the extent of this feature's geometry.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nRenderFeature.prototype.getExtent = function() {\n  if (!this.extent_) {\n    this.extent_ = this.type_ === GeometryType.POINT ?\n      createOrUpdateFromCoordinate(this.flatCoordinates_) :\n      createOrUpdateFromFlatCoordinates(\n        this.flatCoordinates_, 0, this.flatCoordinates_.length, 2);\n\n  }\n  return this.extent_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nRenderFeature.prototype.getFlatInteriorPoint = function() {\n  if (!this.flatInteriorPoints_) {\n    const flatCenter = getCenter(this.getExtent());\n    this.flatInteriorPoints_ = getInteriorPointOfArray(\n      this.flatCoordinates_, 0, this.ends_, 2, flatCenter, 0);\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nRenderFeature.prototype.getFlatInteriorPoints = function() {\n  if (!this.flatInteriorPoints_) {\n    const flatCenters = linearRingssCenter(\n      this.flatCoordinates_, 0, this.ends_, 2);\n    this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n      this.flatCoordinates_, 0, this.ends_, 2, flatCenters);\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoint.\n */\nRenderFeature.prototype.getFlatMidpoint = function() {\n  if (!this.flatMidpoints_) {\n    this.flatMidpoints_ = interpolatePoint(\n      this.flatCoordinates_, 0, this.flatCoordinates_.length, 2, 0.5);\n  }\n  return this.flatMidpoints_;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nRenderFeature.prototype.getFlatMidpoints = function() {\n  if (!this.flatMidpoints_) {\n    this.flatMidpoints_ = [];\n    const flatCoordinates = this.flatCoordinates_;\n    let offset = 0;\n    const ends = this.ends_;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates, offset, end, 2, 0.5);\n      extend(this.flatMidpoints_, midpoint);\n      offset = end;\n    }\n  }\n  return this.flatMidpoints_;\n};\n\n/**\n * Get the feature identifier.  This is a stable identifier for the feature and\n * is set when reading data from a remote source.\n * @return {number|string|undefined} Id.\n * @api\n */\nRenderFeature.prototype.getId = function() {\n  return this.id_;\n};\n\n\n/**\n * @return {Array.<number>} Flat coordinates.\n */\nRenderFeature.prototype.getOrientedFlatCoordinates = function() {\n  return this.flatCoordinates_;\n};\n\n\n/**\n * @return {Array.<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n    RenderFeature.prototype.getOrientedFlatCoordinates;\n\n\n/**\n * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n * determining the geometry type in style function (see {@link #getType}).\n * @return {module:ol/render/Feature} Feature.\n * @api\n */\nRenderFeature.prototype.getGeometry = function() {\n  return this;\n};\n\n\n/**\n * Get the feature properties.\n * @return {Object.<string, *>} Feature properties.\n * @api\n */\nRenderFeature.prototype.getProperties = function() {\n  return this.properties_;\n};\n\n\n/**\n * Get the feature for working with its geometry.\n * @return {module:ol/render/Feature} Feature.\n */\nRenderFeature.prototype.getSimplifiedGeometry =\n    RenderFeature.prototype.getGeometry;\n\n\n/**\n * @return {number} Stride.\n */\nRenderFeature.prototype.getStride = function() {\n  return 2;\n};\n\n\n/**\n * @return {undefined}\n */\nRenderFeature.prototype.getStyleFunction = UNDEFINED;\n\n\n/**\n * Get the type of this feature's geometry.\n * @return {module:ol/geom/GeometryType} Geometry type.\n * @api\n */\nRenderFeature.prototype.getType = function() {\n  return this.type_;\n};\n\n/**\n * Transform geometry coordinates from tile pixel space to projected.\n * The SRS of the source and destination are expected to be the same.\n *\n * @param {module:ol/proj~ProjectionLike} source The current projection\n * @param {module:ol/proj~ProjectionLike} destination The desired projection.\n */\nRenderFeature.prototype.transform = function(source, destination) {\n  source = getProjection(source);\n  const pixelExtent = source.getExtent();\n  const projectedExtent = source.getWorldExtent();\n  const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n  composeTransform(tmpTransform,\n    projectedExtent[0], projectedExtent[3],\n    scale, -scale, 0,\n    0, 0);\n  transform2D(this.flatCoordinates_, 0, this.flatCoordinates_.length, 2,\n    tmpTransform, this.flatCoordinates_);\n};\nexport default RenderFeature;\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport {inherits} from '../util.js';\nimport {assert} from '../asserts.js';\nimport PBF from 'pbf';\nimport FeatureFormat, {transformWithOptions} from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {linearRingIsClockwise} from '../geom/flat/orient.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\nimport RenderFeature from '../render/Feature.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {function((module:ol/geom/Geometry|Object.<string,*>)=)|function(module:ol/geom/GeometryType,Array.<number>,(Array.<number>|Array.<Array.<number>>),Object.<string,*>,number)} [featureClass]\n * Class for features returned by {@link module:ol/format/MVT#readFeatures}. Set to\n * {@link module:ol/Feature~Feature} to get full editing and geometry support at the cost of\n * decreased rendering performance. The default is {@link module:ol/render/Feature~RenderFeature},\n * which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating\n * features.\n * @property {string} [layerName='layer'] Name of the feature attribute that\n * holds the layer name.\n * @property {Array.<string>} [layers] Layers to read features from. If not\n * provided, features will be read from all layers.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @constructor\n * @extends {module:ol/format/Feature}\n * @param {module:ol/format/MVT~Options=} opt_options Options.\n * @api\n */\nconst MVT = function(opt_options) {\n\n  FeatureFormat.call(this);\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {module:ol/proj/Projection}\n   */\n  this.dataProjection = new Projection({\n    code: '',\n    units: Units.TILE_PIXELS\n  });\n\n  /**\n   * @private\n   * @type {function((module:ol/geom/Geometry|Object.<string,*>)=)|\n   *     function(module:ol/geom/GeometryType,Array.<number>,\n   *         (Array.<number>|Array.<Array.<number>>),Object.<string,*>,number)}\n   */\n  this.featureClass_ = options.featureClass ?\n    options.featureClass : RenderFeature;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = null;\n\n};\n\ninherits(MVT, FeatureFormat);\n\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {Object} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: []\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {Object} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value = tag === 1 ? pbf.readString() :\n        tag === 2 ? pbf.readFloat() :\n          tag === 3 ? pbf.readDouble() :\n            tag === 4 ? pbf.readVarint64() :\n              tag === 5 ? pbf.readVarint() :\n                tag === 6 ? pbf.readSVarint() :\n                  tag === 7 ? pbf.readBoolean() : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {Object} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @suppress {missingProperties}\n * @param {Object} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {}\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n\n/**\n * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n * property.\n * @suppress {missingProperties}\n * @param {Object} pbf PBF.\n * @param {Object} feature Raw feature.\n * @param {Array.<number>} flatCoordinates Array to store flat coordinates in.\n * @param {Array.<number>} ends Array to store ends in.\n * @private\n */\nMVT.prototype.readRawGeometry_ = function(pbf, feature, flatCoordinates, ends) {\n  pbf.pos = feature.geometry;\n\n  const end = pbf.readVarint() + pbf.pos;\n  let cmd = 1;\n  let length = 0;\n  let x = 0;\n  let y = 0;\n  let coordsLen = 0;\n  let currentEnd = 0;\n\n  while (pbf.pos < end) {\n    if (!length) {\n      const cmdLen = pbf.readVarint();\n      cmd = cmdLen & 0x7;\n      length = cmdLen >> 3;\n    }\n\n    length--;\n\n    if (cmd === 1 || cmd === 2) {\n      x += pbf.readSVarint();\n      y += pbf.readSVarint();\n\n      if (cmd === 1) { // moveTo\n        if (coordsLen > currentEnd) {\n          ends.push(coordsLen);\n          currentEnd = coordsLen;\n        }\n      }\n\n      flatCoordinates.push(x, y);\n      coordsLen += 2;\n\n    } else if (cmd === 7) {\n\n      if (coordsLen > currentEnd) {\n        // close polygon\n        flatCoordinates.push(\n          flatCoordinates[currentEnd], flatCoordinates[currentEnd + 1]);\n        coordsLen += 2;\n      }\n\n    } else {\n      assert(false, 59); // Invalid command found in the PBF\n    }\n  }\n\n  if (coordsLen > currentEnd) {\n    ends.push(coordsLen);\n    currentEnd = coordsLen;\n  }\n\n};\n\n\n/**\n * @suppress {missingProperties}\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {module:ol/geom/GeometryType} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {module:ol/geom/GeometryType} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ?\n      GeometryType.POINT : GeometryType.MULTI_POINT;\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ?\n      GeometryType.LINE_STRING :\n      GeometryType.MULTI_LINE_STRING;\n  } else if (type === 3) {\n    geometryType = GeometryType.POLYGON;\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\n/**\n * @private\n * @param {Object} pbf PBF\n * @param {Object} rawFeature Raw Mapbox feature.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/Feature|module:ol/render/Feature} Feature.\n */\nMVT.prototype.createFeature_ = function(pbf, rawFeature, opt_options) {\n  const type = rawFeature.type;\n  if (type === 0) {\n    return null;\n  }\n\n  let feature;\n  const id = rawFeature.id;\n  const values = rawFeature.properties;\n  values[this.layerName_] = rawFeature.layer.name;\n\n  const flatCoordinates = [];\n  let ends = [];\n  this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n  const geometryType = getGeometryType(type, ends.length);\n\n  if (this.featureClass_ === RenderFeature) {\n    feature = new this.featureClass_(geometryType, flatCoordinates, ends, values, id);\n  } else {\n    let geom;\n    if (geometryType == GeometryType.POLYGON) {\n      const endss = [];\n      let offset = 0;\n      let prevEndIndex = 0;\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n          endss.push(ends.slice(prevEndIndex, i));\n          prevEndIndex = i;\n        }\n        offset = end;\n      }\n      if (endss.length > 1) {\n        ends = endss;\n        geom = new MultiPolygon(null);\n      } else {\n        geom = new Polygon(null);\n      }\n    } else {\n      geom = geometryType === GeometryType.POINT ? new Point(null) :\n        geometryType === GeometryType.LINE_STRING ? new LineString(null) :\n          geometryType === GeometryType.POLYGON ? new Polygon(null) :\n            geometryType === GeometryType.MULTI_POINT ? new MultiPoint (null) :\n              geometryType === GeometryType.MULTI_LINE_STRING ? new MultiLineString(null) :\n                null;\n    }\n    geom.setFlatCoordinates(GeometryLayout.XY, flatCoordinates, ends);\n    feature = new this.featureClass_();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    }\n    const geometry = transformWithOptions(geom, false, this.adaptOptions(opt_options));\n    feature.setGeometry(geometry);\n    feature.setId(id);\n    feature.setProperties(values);\n  }\n\n  return feature;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMVT.prototype.getLastExtent = function() {\n  return this.extent_;\n};\n\n\n/**\n * @inheritDoc\n */\nMVT.prototype.getType = function() {\n  return FormatType.ARRAY_BUFFER;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMVT.prototype.readFeatures = function(source, opt_options) {\n  const layers = this.layers_;\n\n  const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n  const pbfLayers = pbf.readFields(layersPBFReader, {});\n  /** @type {Array.<module:ol/Feature|module:ol/render/Feature>} */\n  const features = [];\n  for (const name in pbfLayers) {\n    if (layers && layers.indexOf(name) == -1) {\n      continue;\n    }\n    const pbfLayer = pbfLayers[name];\n\n    for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n      const rawFeature = readRawFeature(pbf, pbfLayer, i);\n      features.push(this.createFeature_(pbf, rawFeature));\n    }\n    this.extent_ = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n  }\n\n  return features;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMVT.prototype.readProjection = function(source) {\n  return this.dataProjection;\n};\n\n\n/**\n * Sets the layers that features will be read from.\n * @param {Array.<string>} layers Layers.\n * @api\n */\nMVT.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * Not implemented.\n * @override\n */\nMVT.prototype.readFeature = function() {};\n\n\n/**\n * Not implemented.\n * @override\n */\nMVT.prototype.readGeometry = function() {};\n\n\n/**\n * Not implemented.\n * @override\n */\nMVT.prototype.writeFeature = function() {};\n\n\n/**\n * Not implemented.\n * @override\n */\nMVT.prototype.writeGeometry = function() {};\n\n\n/**\n * Not implemented.\n * @override\n */\nMVT.prototype.writeFeatures = function() {};\nexport default MVT;\n","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../util.js';\nimport {readHref} from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport {readString} from '../format/xsd.js';\nimport {makeObjectPropertyPusher, makeObjectPropertySetter, makeStructureNS, pushParseAndPop} from '../xml.js';\n\n/**\n * @constructor\n * @extends {module:ol/format/XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @const\n * @type {Array.<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n    'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n    'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst ADDRESS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'DeliveryPoint': makeObjectPropertySetter(readString),\n    'City': makeObjectPropertySetter(readString),\n    'AdministrativeArea': makeObjectPropertySetter(readString),\n    'PostalCode': makeObjectPropertySetter(readString),\n    'Country': makeObjectPropertySetter(readString),\n    'ElectronicMailAddress': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst ALLOWED_VALUES_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Value': makeObjectPropertyPusher(readValue)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst CONSTRAINT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'AllowedValues': makeObjectPropertySetter(readAllowedValues)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst CONTACT_INFO_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Phone': makeObjectPropertySetter(readPhone),\n    'Address': makeObjectPropertySetter(readAddress)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst DCP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'HTTP': makeObjectPropertySetter(readHttp)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst HTTP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Get': makeObjectPropertyPusher(readGet),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst OPERATION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'DCP': makeObjectPropertySetter(readDcp)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst OPERATIONS_METADATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Operation': readOperation\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst PHONE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Voice': makeObjectPropertySetter(readString),\n    'Facsimile': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst REQUEST_METHOD_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Constraint': makeObjectPropertyPusher(readConstraint)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst SERVICE_CONTACT_PARSERS =\n    makeStructureNS(\n      NAMESPACE_URIS, {\n        'IndividualName': makeObjectPropertySetter(readString),\n        'PositionName': makeObjectPropertySetter(readString),\n        'ContactInfo': makeObjectPropertySetter(readContactInfo)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst SERVICE_IDENTIFICATION_PARSERS =\n    makeStructureNS(\n      NAMESPACE_URIS, {\n        'Abstract': makeObjectPropertySetter(readString),\n        'AccessConstraints': makeObjectPropertySetter(readString),\n        'Fees': makeObjectPropertySetter(readString),\n        'Title': makeObjectPropertySetter(readString),\n        'ServiceTypeVersion': makeObjectPropertySetter(readString),\n        'ServiceType': makeObjectPropertySetter(readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst SERVICE_PROVIDER_PARSERS =\n    makeStructureNS(\n      NAMESPACE_URIS, {\n        'ProviderName': makeObjectPropertySetter(readString),\n        'ProviderSite': makeObjectPropertySetter(readHref),\n        'ServiceContact': makeObjectPropertySetter(readServiceContact)\n      });\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = pushParseAndPop({},\n    PARSERS, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({},\n    ADDRESS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({},\n    ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({'name': name},\n    CONSTRAINT_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({},\n    CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({},\n    DCP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  const href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop({'href': href},\n    REQUEST_METHOD_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = pushParseAndPop({},\n    OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({},\n    OPERATIONS_METADATA_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({},\n    PHONE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop(\n    {}, SERVICE_IDENTIFICATION_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop(\n    {}, SERVICE_CONTACT_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop(\n    {}, SERVICE_PROVIDER_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\n\n\nexport default OWS;\n","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../util.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport {readHref} from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport {readString, readNonNegativeInteger, readDecimal} from '../format/xsd.js';\nimport {pushParseAndPop, makeStructureNS,\n  makeObjectPropertySetter, makeObjectPropertyPusher, makeArrayPusher} from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {module:ol/format/XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {module:ol/format/OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * @const\n * @type {Array.<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @type {Array.<null|string>}\n */\nconst OWS_NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Contents': makeObjectPropertySetter(readContents)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst CONTENTS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Layer': makeObjectPropertyPusher(readLayer),\n    'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readWgs84BoundingBox),\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst TMS_LINKS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TileMatrixSet': makeObjectPropertySetter(readString),\n    'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst TMS_LIMITS_LIST_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst TMS_LIMITS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TileMatrix': makeObjectPropertySetter(readString),\n    'MinTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n    'MinTileCol': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxTileCol': makeObjectPropertySetter(readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst DIMENSION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst WGS84_BBOX_READERS = makeStructureNS(\n  OWS_NAMESPACE_URIS, {\n    'LowerCorner': makeArrayPusher(readCoordinates),\n    'UpperCorner': makeArrayPusher(readCoordinates)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst TMS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst TM_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'TileHeight': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixHeight': makeObjectPropertySetter(readNonNegativeInteger)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = pushParseAndPop(WMTSCapabilityObject, PARSERS, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  const style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nfunction readWgs84BoundingBox(node, objectStack) {\n  const coordinates = pushParseAndPop([], WGS84_BBOX_READERS, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = readHref(node);\n  return legend;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n  const coordinates = readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\n\n\nexport default WMTSCapabilities;\n","/**\n * @module ol/webgl/Shader\n */\nimport {FALSE} from '../functions.js';\n\n/**\n * @constructor\n * @abstract\n * @param {string} source Source.\n * @struct\n */\nconst WebGLShader = function(source) {\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.source_ = source;\n\n};\n\n\n/**\n * @abstract\n * @return {number} Type.\n */\nWebGLShader.prototype.getType = function() {};\n\n\n/**\n * @return {string} Source.\n */\nWebGLShader.prototype.getSource = function() {\n  return this.source_;\n};\n\n\n/**\n * @return {boolean} Is animated?\n */\nWebGLShader.prototype.isAnimated = FALSE;\nexport default WebGLShader;\n","/**\n * @module ol/webgl/Fragment\n */\nimport {inherits} from '../util.js';\nimport {FRAGMENT_SHADER} from '../webgl.js';\nimport WebGLShader from '../webgl/Shader.js';\n\n/**\n * @constructor\n * @extends {module:ol/webgl/Shader}\n * @param {string} source Source.\n * @struct\n */\nconst WebGLFragment = function(source) {\n  WebGLShader.call(this, source);\n};\n\ninherits(WebGLFragment, WebGLShader);\n\n\n/**\n * @inheritDoc\n */\nWebGLFragment.prototype.getType = function() {\n  return FRAGMENT_SHADER;\n};\nexport default WebGLFragment;\n","/**\n * @module ol/webgl/Vertex\n */\nimport {inherits} from '../util.js';\nimport {VERTEX_SHADER} from '../webgl.js';\nimport WebGLShader from '../webgl/Shader.js';\n\n/**\n * @constructor\n * @extends {module:ol/webgl/Shader}\n * @param {string} source Source.\n * @struct\n */\nconst WebGLVertex = function(source) {\n  WebGLShader.call(this, source);\n};\n\ninherits(WebGLVertex, WebGLShader);\n\n\n/**\n * @inheritDoc\n */\nWebGLVertex.prototype.getType = function() {\n  return VERTEX_SHADER;\n};\nexport default WebGLVertex;\n","/**\n * @module ol/render/webgl/circlereplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport const fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_center;\\nvarying vec2 v_offset;\\nvarying float v_halfWidth;\\nvarying float v_pixelRatio;\\n\\n\\n\\nuniform float u_opacity;\\nuniform vec4 u_fillColor;\\nuniform vec4 u_strokeColor;\\nuniform vec2 u_size;\\n\\nvoid main(void) {\\n  vec2 windowCenter = vec2((v_center.x + 1.0) / 2.0 * u_size.x * v_pixelRatio,\\n      (v_center.y + 1.0) / 2.0 * u_size.y * v_pixelRatio);\\n  vec2 windowOffset = vec2((v_offset.x + 1.0) / 2.0 * u_size.x * v_pixelRatio,\\n      (v_offset.y + 1.0) / 2.0 * u_size.y * v_pixelRatio);\\n  float radius = length(windowCenter - windowOffset);\\n  float dist = length(windowCenter - gl_FragCoord.xy);\\n  if (dist > radius + v_halfWidth) {\\n    if (u_strokeColor.a == 0.0) {\\n      gl_FragColor = u_fillColor;\\n    } else {\\n      gl_FragColor = u_strokeColor;\\n    }\\n    gl_FragColor.a = gl_FragColor.a - (dist - (radius + v_halfWidth));\\n  } else if (u_fillColor.a == 0.0) {\\n    // Hooray, no fill, just stroke. We can use real antialiasing.\\n    gl_FragColor = u_strokeColor;\\n    if (dist < radius - v_halfWidth) {\\n      gl_FragColor.a = gl_FragColor.a - (radius - v_halfWidth - dist);\\n    }\\n  } else {\\n    gl_FragColor = u_fillColor;\\n    float strokeDist = radius - v_halfWidth;\\n    float antialias = 2.0 * v_pixelRatio;\\n    if (dist > strokeDist) {\\n      gl_FragColor = u_strokeColor;\\n    } else if (dist >= strokeDist - antialias) {\\n      float step = smoothstep(strokeDist - antialias, strokeDist, dist);\\n      gl_FragColor = mix(u_fillColor, u_strokeColor, step);\\n    }\\n  }\\n  gl_FragColor.a = gl_FragColor.a * u_opacity;\\n  if (gl_FragColor.a <= 0.0) {\\n    discard;\\n  }\\n}\\n' :\n  'precision mediump float;varying vec2 a;varying vec2 b;varying float c;varying float d;uniform float m;uniform vec4 n;uniform vec4 o;uniform vec2 p;void main(void){vec2 windowCenter=vec2((a.x+1.0)/2.0*p.x*d,(a.y+1.0)/2.0*p.y*d);vec2 windowOffset=vec2((b.x+1.0)/2.0*p.x*d,(b.y+1.0)/2.0*p.y*d);float radius=length(windowCenter-windowOffset);float dist=length(windowCenter-gl_FragCoord.xy);if(dist>radius+c){if(o.a==0.0){gl_FragColor=n;}else{gl_FragColor=o;}gl_FragColor.a=gl_FragColor.a-(dist-(radius+c));}else if(n.a==0.0){gl_FragColor=o;if(dist<radius-c){gl_FragColor.a=gl_FragColor.a-(radius-c-dist);}} else{gl_FragColor=n;float strokeDist=radius-c;float antialias=2.0*d;if(dist>strokeDist){gl_FragColor=o;}else if(dist>=strokeDist-antialias){float step=smoothstep(strokeDist-antialias,strokeDist,dist);gl_FragColor=mix(n,o,step);}} gl_FragColor.a=gl_FragColor.a*m;if(gl_FragColor.a<=0.0){discard;}}');\n\nexport const vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_center;\\nvarying vec2 v_offset;\\nvarying float v_halfWidth;\\nvarying float v_pixelRatio;\\n\\n\\nattribute vec2 a_position;\\nattribute float a_instruction;\\nattribute float a_radius;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\nuniform float u_lineWidth;\\nuniform float u_pixelRatio;\\n\\nvoid main(void) {\\n  mat4 offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  v_center = vec4(u_projectionMatrix * vec4(a_position, 0.0, 1.0)).xy;\\n  v_pixelRatio = u_pixelRatio;\\n  float lineWidth = u_lineWidth * u_pixelRatio;\\n  v_halfWidth = lineWidth / 2.0;\\n  if (lineWidth == 0.0) {\\n    lineWidth = 2.0 * u_pixelRatio;\\n  }\\n  vec2 offset;\\n  // Radius with anitaliasing (roughly).\\n  float radius = a_radius + 3.0 * u_pixelRatio;\\n  // Until we get gl_VertexID in WebGL, we store an instruction.\\n  if (a_instruction == 0.0) {\\n    // Offsetting the edges of the triangle by lineWidth / 2 is necessary, however\\n    // we should also leave some space for the antialiasing, thus we offset by lineWidth.\\n    offset = vec2(-1.0, 1.0);\\n  } else if (a_instruction == 1.0) {\\n    offset = vec2(-1.0, -1.0);\\n  } else if (a_instruction == 2.0) {\\n    offset = vec2(1.0, -1.0);\\n  } else {\\n    offset = vec2(1.0, 1.0);\\n  }\\n\\n  gl_Position = u_projectionMatrix * vec4(a_position + offset * radius, 0.0, 1.0) +\\n      offsetMatrix * vec4(offset * lineWidth, 0.0, 0.0);\\n  v_offset = vec4(u_projectionMatrix * vec4(a_position.x + a_radius, a_position.y,\\n      0.0, 1.0)).xy;\\n\\n  if (distance(v_center, v_offset) > 20000.0) {\\n    gl_Position = vec4(v_center, 0.0, 1.0);\\n  }\\n}\\n\\n\\n' :\n  'varying vec2 a;varying vec2 b;varying float c;varying float d;attribute vec2 e;attribute float f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;uniform float k;uniform float l;void main(void){mat4 offsetMatrix=i*j;a=vec4(h*vec4(e,0.0,1.0)).xy;d=l;float lineWidth=k*l;c=lineWidth/2.0;if(lineWidth==0.0){lineWidth=2.0*l;}vec2 offset;float radius=g+3.0*l;if(f==0.0){offset=vec2(-1.0,1.0);}else if(f==1.0){offset=vec2(-1.0,-1.0);}else if(f==2.0){offset=vec2(1.0,-1.0);}else{offset=vec2(1.0,1.0);}gl_Position=h*vec4(e+offset*radius,0.0,1.0)+offsetMatrix*vec4(offset*lineWidth,0.0,0.0);b=vec4(h*vec4(e.x+g,e.y,0.0,1.0)).xy;if(distance(a,b)>20000.0){gl_Position=vec4(a,0.0,1.0);}}');\n","/**\n * @module ol/render/webgl/circlereplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\n/**\n * @constructor\n * @param {WebGLRenderingContext} gl GL.\n * @param {WebGLProgram} program Program.\n * @struct\n */\nconst Locations = function(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_lineWidth = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_lineWidth' : 'k');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_pixelRatio = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_pixelRatio' : 'l');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'm');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_fillColor = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_fillColor' : 'n');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_strokeColor = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_strokeColor' : 'o');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_size = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_size' : 'p');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_instruction = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_instruction' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_radius = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_radius' : 'g');\n};\n\nexport default Locations;\n","/**\n * @module ol/vec/mat4\n */\n\n\n/**\n * @return {Array.<number>} 4x4 matrix representing a 3D identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n\n/**\n * @param {Array.<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {module:ol/transform~Transform} transform Transformation matrix.\n * @return {Array.<number>} 2D transformation matrix as flattened 4x4 matrix.\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n","/**\n * @module ol/render/webgl/Replay\n */\nimport {inherits} from '../../util.js';\nimport {getCenter} from '../../extent.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\nimport {create, fromTransform} from '../../vec/mat4.js';\nimport {ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, TRIANGLES,\n  UNSIGNED_INT, UNSIGNED_SHORT} from '../../webgl.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/render/VectorContext}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @struct\n */\nconst WebGLReplay = function(tolerance, maxExtent) {\n  VectorContext.call(this);\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.tolerance = tolerance;\n\n  /**\n   * @protected\n   * @const\n   * @type {module:ol/extent~Extent}\n   */\n  this.maxExtent = maxExtent;\n\n  /**\n   * The origin of the coordinate system for the point coordinates sent to\n   * the GPU. To eliminate jitter caused by precision problems in the GPU\n   * we use the \"Rendering Relative to Eye\" technique described in the \"3D\n   * Engine Design for Virtual Globes\" book.\n   * @protected\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.origin = getCenter(maxExtent);\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.projectionMatrix_ = createTransform();\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.offsetRotateMatrix_ = createTransform();\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.offsetScaleMatrix_ = createTransform();\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.tmpMat4_ = create();\n\n  /**\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.indices = [];\n\n  /**\n   * @protected\n   * @type {?module:ol/webgl/Buffer}\n   */\n  this.indicesBuffer = null;\n\n  /**\n   * Start index per feature (the index).\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.startIndices = [];\n\n  /**\n   * Start index per feature (the feature).\n   * @protected\n   * @type {Array.<module:ol/Feature|module:ol/render/Feature>}\n   */\n  this.startIndicesFeature = [];\n\n  /**\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.vertices = [];\n\n  /**\n   * @protected\n   * @type {?module:ol/webgl/Buffer}\n   */\n  this.verticesBuffer = null;\n\n  /**\n   * Optional parameter for PolygonReplay instances.\n   * @protected\n   * @type {module:ol/render/webgl/LineStringReplay|undefined}\n   */\n  this.lineStringReplay = undefined;\n\n};\n\ninherits(WebGLReplay, VectorContext);\n\n\n/**\n * @abstract\n * @param {module:ol/webgl/Context} context WebGL context.\n * @return {function()} Delete resources function.\n */\nWebGLReplay.prototype.getDeleteResourcesFunction = function(context) {};\n\n\n/**\n * @abstract\n * @param {module:ol/webgl/Context} context Context.\n */\nWebGLReplay.prototype.finish = function(context) {};\n\n\n/**\n * @abstract\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {module:ol/size~Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @return {module:ol/render/webgl/circlereplay/defaultshader/Locations|\n            module:ol/render/webgl/linestringreplay/defaultshader/Locations|\n            module:ol/render/webgl/polygonreplay/defaultshader/Locations|\n            module:ol/render/webgl/texturereplay/defaultshader/Locations} Locations.\n */\nWebGLReplay.prototype.setUpProgram = function(gl, context, size, pixelRatio) {};\n\n\n/**\n * @abstract\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/render/webgl/circlereplay/defaultshader/Locations|\n           module:ol/render/webgl/linestringreplay/defaultshader/Locations|\n           module:ol/render/webgl/polygonreplay/defaultshader/Locations|\n           module:ol/render/webgl/texturereplay/defaultshader/Locations} locations Locations.\n */\nWebGLReplay.prototype.shutDownProgram = function(gl, locations) {};\n\n\n/**\n * @abstract\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {boolean} hitDetection Hit detection mode.\n */\nWebGLReplay.prototype.drawReplay = function(gl, context, skippedFeaturesHash, hitDetection) {};\n\n\n/**\n * @abstract\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n * @param {module:ol/extent~Extent=} opt_hitExtent Hit extent: Only features intersecting this extent are checked.\n * @return {T|undefined} Callback result.\n * @template T\n */\nWebGLReplay.prototype.drawHitDetectionReplayOneByOne = function(gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {};\n\n\n/**\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n * @param {module:ol/extent~Extent=} opt_hitExtent Hit extent: Only features intersecting\n *  this extent are checked.\n * @return {T|undefined} Callback result.\n * @template T\n */\nWebGLReplay.prototype.drawHitDetectionReplay = function(gl, context, skippedFeaturesHash,\n  featureCallback, oneByOne, opt_hitExtent) {\n  if (!oneByOne) {\n    // draw all hit-detection features in \"once\" (by texture group)\n    return this.drawHitDetectionReplayAll(gl, context,\n      skippedFeaturesHash, featureCallback);\n  } else {\n    // draw hit-detection features one by one\n    return this.drawHitDetectionReplayOneByOne(gl, context,\n      skippedFeaturesHash, featureCallback, opt_hitExtent);\n  }\n};\n\n\n/**\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n * @return {T|undefined} Callback result.\n * @template T\n */\nWebGLReplay.prototype.drawHitDetectionReplayAll = function(gl, context, skippedFeaturesHash,\n  featureCallback) {\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n  this.drawReplay(gl, context, skippedFeaturesHash, true);\n\n  const result = featureCallback(null);\n  if (result) {\n    return result;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {module:ol/webgl/Context} context Context.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} opacity Global opacity.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n * @param {module:ol/extent~Extent=} opt_hitExtent Hit extent: Only features intersecting\n *  this extent are checked.\n * @return {T|undefined} Callback result.\n * @template T\n */\nWebGLReplay.prototype.replay = function(context,\n  center, resolution, rotation, size, pixelRatio,\n  opacity, skippedFeaturesHash,\n  featureCallback, oneByOne, opt_hitExtent) {\n  const gl = context.getGL();\n  let tmpStencil, tmpStencilFunc, tmpStencilMaskVal, tmpStencilRef, tmpStencilMask,\n      tmpStencilOpFail, tmpStencilOpPass, tmpStencilOpZFail;\n\n  if (this.lineStringReplay) {\n    tmpStencil = gl.isEnabled(gl.STENCIL_TEST);\n    tmpStencilFunc = gl.getParameter(gl.STENCIL_FUNC);\n    tmpStencilMaskVal = gl.getParameter(gl.STENCIL_VALUE_MASK);\n    tmpStencilRef = gl.getParameter(gl.STENCIL_REF);\n    tmpStencilMask = gl.getParameter(gl.STENCIL_WRITEMASK);\n    tmpStencilOpFail = gl.getParameter(gl.STENCIL_FAIL);\n    tmpStencilOpPass = gl.getParameter(gl.STENCIL_PASS_DEPTH_PASS);\n    tmpStencilOpZFail = gl.getParameter(gl.STENCIL_PASS_DEPTH_FAIL);\n\n    gl.enable(gl.STENCIL_TEST);\n    gl.clear(gl.STENCIL_BUFFER_BIT);\n    gl.stencilMask(255);\n    gl.stencilFunc(gl.ALWAYS, 1, 255);\n    gl.stencilOp(gl.KEEP, gl.KEEP, gl.REPLACE);\n\n    this.lineStringReplay.replay(context,\n      center, resolution, rotation, size, pixelRatio,\n      opacity, skippedFeaturesHash,\n      featureCallback, oneByOne, opt_hitExtent);\n\n    gl.stencilMask(0);\n    gl.stencilFunc(gl.NOTEQUAL, 1, 255);\n  }\n\n  context.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n\n  context.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n\n  const locations = this.setUpProgram(gl, context, size, pixelRatio);\n\n  // set the \"uniform\" values\n  const projectionMatrix = resetTransform(this.projectionMatrix_);\n  scaleTransform(projectionMatrix, 2 / (resolution * size[0]), 2 / (resolution * size[1]));\n  rotateTransform(projectionMatrix, -rotation);\n  translateTransform(projectionMatrix, -(center[0] - this.origin[0]), -(center[1] - this.origin[1]));\n\n  const offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n  scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n\n  const offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n  if (rotation !== 0) {\n    rotateTransform(offsetRotateMatrix, -rotation);\n  }\n\n  gl.uniformMatrix4fv(locations.u_projectionMatrix, false,\n    fromTransform(this.tmpMat4_, projectionMatrix));\n  gl.uniformMatrix4fv(locations.u_offsetScaleMatrix, false,\n    fromTransform(this.tmpMat4_, offsetScaleMatrix));\n  gl.uniformMatrix4fv(locations.u_offsetRotateMatrix, false,\n    fromTransform(this.tmpMat4_, offsetRotateMatrix));\n  gl.uniform1f(locations.u_opacity, opacity);\n\n  // draw!\n  let result;\n  if (featureCallback === undefined) {\n    this.drawReplay(gl, context, skippedFeaturesHash, false);\n  } else {\n    // draw feature by feature for the hit-detection\n    result = this.drawHitDetectionReplay(gl, context, skippedFeaturesHash,\n      featureCallback, oneByOne, opt_hitExtent);\n  }\n\n  // disable the vertex attrib arrays\n  this.shutDownProgram(gl, locations);\n\n  if (this.lineStringReplay) {\n    if (!tmpStencil) {\n      gl.disable(gl.STENCIL_TEST);\n    }\n    gl.clear(gl.STENCIL_BUFFER_BIT);\n    gl.stencilFunc(/** @type {number} */ (tmpStencilFunc),\n      /** @type {number} */ (tmpStencilRef), /** @type {number} */ (tmpStencilMaskVal));\n    gl.stencilMask(/** @type {number} */ (tmpStencilMask));\n    gl.stencilOp(/** @type {number} */ (tmpStencilOpFail),\n      /** @type {number} */ (tmpStencilOpZFail), /** @type {number} */ (tmpStencilOpPass));\n  }\n\n  return result;\n};\n\n/**\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {number} start Start index.\n * @param {number} end End index.\n */\nWebGLReplay.prototype.drawElements = function(\n  gl, context, start, end) {\n  const elementType = context.hasOESElementIndexUint ?\n    UNSIGNED_INT : UNSIGNED_SHORT;\n  const elementSize = context.hasOESElementIndexUint ? 4 : 2;\n\n  const numItems = end - start;\n  const offsetInBytes = start * elementSize;\n  gl.drawElements(TRIANGLES, numItems, elementType, offsetInBytes);\n};\nexport default WebGLReplay;\n","/**\n * @module ol/render/webgl\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport const DEFAULT_FONT = '10px sans-serif';\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport const DEFAULT_FILLSTYLE = [0.0, 0.0, 0.0, 1.0];\n\n\n/**\n * @const\n * @type {string}\n */\nexport const DEFAULT_LINECAP = 'round';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nexport const DEFAULT_LINEDASH = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEFAULT_LINEDASHOFFSET = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport const DEFAULT_LINEJOIN = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEFAULT_MITERLIMIT = 10;\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport const DEFAULT_STROKESTYLE = [0.0, 0.0, 0.0, 1.0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEFAULT_TEXTALIGN = 0.5;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEFAULT_TEXTBASELINE = 0.5;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEFAULT_LINEWIDTH = 1;\n\n/**\n * @const\n * @type {number}\n */\nexport const EPSILON = Number.EPSILON || 2.220446049250313e-16;\n\n/**\n * Calculates the orientation of a triangle based on the determinant method.\n * @param {number} x1 First X coordinate.\n * @param {number} y1 First Y coordinate.\n * @param {number} x2 Second X coordinate.\n * @param {number} y2 Second Y coordinate.\n * @param {number} x3 Third X coordinate.\n * @param {number} y3 Third Y coordinate.\n * @return {boolean|undefined} Triangle is clockwise.\n */\nexport const triangleIsCounterClockwise = function(x1, y1, x2, y2, x3, y3) {\n  const area = (x2 - x1) * (y3 - y1) - (x3 - x1) * (y2 - y1);\n  return (area <= EPSILON && area >= -EPSILON) ?\n    undefined : area > 0;\n};\n\n","/**\n * @module ol/webgl/Buffer\n */\nimport {STATIC_DRAW, STREAM_DRAW, DYNAMIC_DRAW} from '../webgl.js';\n\n/**\n * @enum {number}\n */\nconst BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW\n};\n\n/**\n * @constructor\n * @param {Array.<number>=} opt_arr Array.\n * @param {number=} opt_usage Usage.\n * @struct\n */\nconst WebGLBuffer = function(opt_arr, opt_usage) {\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.arr_ = opt_arr !== undefined ? opt_arr : [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.usage_ = opt_usage !== undefined ? opt_usage : BufferUsage.STATIC_DRAW;\n\n};\n\n\n/**\n * @return {Array.<number>} Array.\n */\nWebGLBuffer.prototype.getArray = function() {\n  return this.arr_;\n};\n\n\n/**\n * @return {number} Usage.\n */\nWebGLBuffer.prototype.getUsage = function() {\n  return this.usage_;\n};\n\nexport default WebGLBuffer;\n","/**\n * @module ol/render/webgl/CircleReplay\n */\nimport {getUid, inherits} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {intersects} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {translate} from '../../geom/flat/transform.js';\nimport {fragment, vertex} from '../webgl/circlereplay/defaultshader.js';\nimport Locations from '../webgl/circlereplay/defaultshader/Locations.js';\nimport WebGLReplay from '../webgl/Replay.js';\nimport {DEFAULT_LINEDASH, DEFAULT_LINEDASHOFFSET, DEFAULT_STROKESTYLE,\n  DEFAULT_FILLSTYLE, DEFAULT_LINEWIDTH} from '../webgl.js';\nimport {FLOAT} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/webgl/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @struct\n */\nconst WebGLCircleReplay = function(tolerance, maxExtent) {\n  WebGLReplay.call(this, tolerance, maxExtent);\n\n  /**\n   * @private\n   * @type {module:ol/render/webgl/circlereplay/defaultshader/Locations}\n   */\n  this.defaultLocations_ = null;\n\n  /**\n   * @private\n   * @type {Array.<Array.<Array.<number>|number>>}\n   */\n  this.styles_ = [];\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.styleIndices_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.radius_ = 0;\n\n  /**\n   * @private\n   * @type {{fillColor: (Array.<number>|null),\n   *         strokeColor: (Array.<number>|null),\n   *         lineDash: Array.<number>,\n   *         lineDashOffset: (number|undefined),\n   *         lineWidth: (number|undefined),\n   *         changed: boolean}|null}\n   */\n  this.state_ = {\n    fillColor: null,\n    strokeColor: null,\n    lineDash: null,\n    lineDashOffset: undefined,\n    lineWidth: undefined,\n    changed: false\n  };\n\n};\n\ninherits(WebGLCircleReplay, WebGLReplay);\n\n\n/**\n * @private\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nWebGLCircleReplay.prototype.drawCoordinates_ = function(\n  flatCoordinates, offset, end, stride) {\n  let numVertices = this.vertices.length;\n  let numIndices = this.indices.length;\n  let n = numVertices / 4;\n  let i, ii;\n  for (i = offset, ii = end; i < ii; i += stride) {\n    this.vertices[numVertices++] = flatCoordinates[i];\n    this.vertices[numVertices++] = flatCoordinates[i + 1];\n    this.vertices[numVertices++] = 0;\n    this.vertices[numVertices++] = this.radius_;\n\n    this.vertices[numVertices++] = flatCoordinates[i];\n    this.vertices[numVertices++] = flatCoordinates[i + 1];\n    this.vertices[numVertices++] = 1;\n    this.vertices[numVertices++] = this.radius_;\n\n    this.vertices[numVertices++] = flatCoordinates[i];\n    this.vertices[numVertices++] = flatCoordinates[i + 1];\n    this.vertices[numVertices++] = 2;\n    this.vertices[numVertices++] = this.radius_;\n\n    this.vertices[numVertices++] = flatCoordinates[i];\n    this.vertices[numVertices++] = flatCoordinates[i + 1];\n    this.vertices[numVertices++] = 3;\n    this.vertices[numVertices++] = this.radius_;\n\n    this.indices[numIndices++] = n;\n    this.indices[numIndices++] = n + 1;\n    this.indices[numIndices++] = n + 2;\n\n    this.indices[numIndices++] = n + 2;\n    this.indices[numIndices++] = n + 3;\n    this.indices[numIndices++] = n;\n\n    n += 4;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLCircleReplay.prototype.drawCircle = function(circleGeometry, feature) {\n  const radius = circleGeometry.getRadius();\n  const stride = circleGeometry.getStride();\n  if (radius) {\n    this.startIndices.push(this.indices.length);\n    this.startIndicesFeature.push(feature);\n    if (this.state_.changed) {\n      this.styleIndices_.push(this.indices.length);\n      this.state_.changed = false;\n    }\n\n    this.radius_ = radius;\n    let flatCoordinates = circleGeometry.getFlatCoordinates();\n    flatCoordinates = translate(flatCoordinates, 0, 2,\n      stride, -this.origin[0], -this.origin[1]);\n    this.drawCoordinates_(flatCoordinates, 0, 2, stride);\n  } else {\n    if (this.state_.changed) {\n      this.styles_.pop();\n      if (this.styles_.length) {\n        const lastState = this.styles_[this.styles_.length - 1];\n        this.state_.fillColor =  /** @type {Array.<number>} */ (lastState[0]);\n        this.state_.strokeColor = /** @type {Array.<number>} */ (lastState[1]);\n        this.state_.lineWidth = /** @type {number} */ (lastState[2]);\n        this.state_.changed = false;\n      }\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n **/\nWebGLCircleReplay.prototype.finish = function(context) {\n  // create, bind, and populate the vertices buffer\n  this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n  // create, bind, and populate the indices buffer\n  this.indicesBuffer = new WebGLBuffer(this.indices);\n\n  this.startIndices.push(this.indices.length);\n\n  //Clean up, if there is nothing to draw\n  if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n    this.styles_ = [];\n  }\n\n  this.vertices = null;\n  this.indices = null;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLCircleReplay.prototype.getDeleteResourcesFunction = function(context) {\n  // We only delete our stuff here. The shaders and the program may\n  // be used by other CircleReplay instances (for other layers). And\n  // they will be deleted when disposing of the module:ol/webgl/Context~WebGLContext\n  // object.\n  const verticesBuffer = this.verticesBuffer;\n  const indicesBuffer = this.indicesBuffer;\n  return function() {\n    context.deleteBuffer(verticesBuffer);\n    context.deleteBuffer(indicesBuffer);\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLCircleReplay.prototype.setUpProgram = function(gl, context, size, pixelRatio) {\n  // get the program\n  const program = context.getProgram(fragment, vertex);\n\n  // get the locations\n  let locations;\n  if (!this.defaultLocations_) {\n    locations = new Locations(gl, program);\n    this.defaultLocations_ = locations;\n  } else {\n    locations = this.defaultLocations_;\n  }\n\n  context.useProgram(program);\n\n  // enable the vertex attrib arrays\n  gl.enableVertexAttribArray(locations.a_position);\n  gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n    false, 16, 0);\n\n  gl.enableVertexAttribArray(locations.a_instruction);\n  gl.vertexAttribPointer(locations.a_instruction, 1, FLOAT,\n    false, 16, 8);\n\n  gl.enableVertexAttribArray(locations.a_radius);\n  gl.vertexAttribPointer(locations.a_radius, 1, FLOAT,\n    false, 16, 12);\n\n  // Enable renderer specific uniforms.\n  gl.uniform2fv(locations.u_size, size);\n  gl.uniform1f(locations.u_pixelRatio, pixelRatio);\n\n  return locations;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLCircleReplay.prototype.shutDownProgram = function(gl, locations) {\n  gl.disableVertexAttribArray(locations.a_position);\n  gl.disableVertexAttribArray(locations.a_instruction);\n  gl.disableVertexAttribArray(locations.a_radius);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLCircleReplay.prototype.drawReplay = function(gl, context, skippedFeaturesHash, hitDetection) {\n  if (!isEmpty(skippedFeaturesHash)) {\n    this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n  } else {\n    //Draw by style groups to minimize drawElements() calls.\n    let i, start, end, nextStyle;\n    end = this.startIndices[this.startIndices.length - 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      start = this.styleIndices_[i];\n      nextStyle = this.styles_[i];\n      this.setFillStyle_(gl, /** @type {Array.<number>} */ (nextStyle[0]));\n      this.setStrokeStyle_(gl, /** @type {Array.<number>} */ (nextStyle[1]),\n        /** @type {number} */ (nextStyle[2]));\n      this.drawElements(gl, context, start, end);\n      end = start;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLCircleReplay.prototype.drawHitDetectionReplayOneByOne = function(gl, context, skippedFeaturesHash,\n  featureCallback, opt_hitExtent) {\n  let i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex;\n  featureIndex = this.startIndices.length - 2;\n  end = this.startIndices[featureIndex + 1];\n  for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n    nextStyle = this.styles_[i];\n    this.setFillStyle_(gl, /** @type {Array.<number>} */ (nextStyle[0]));\n    this.setStrokeStyle_(gl, /** @type {Array.<number>} */ (nextStyle[1]),\n      /** @type {number} */ (nextStyle[2]));\n    groupStart = this.styleIndices_[i];\n\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      start = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid] === undefined &&\n          feature.getGeometry() &&\n          (opt_hitExtent === undefined || intersects(\n            /** @type {Array<number>} */ (opt_hitExtent),\n            feature.getGeometry().getExtent()))) {\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        this.drawElements(gl, context, start, end);\n\n        const result = featureCallback(feature);\n\n        if (result) {\n          return result;\n        }\n\n      }\n      featureIndex--;\n      end = start;\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {Object} skippedFeaturesHash Ids of features to skip.\n */\nWebGLCircleReplay.prototype.drawReplaySkipping_ = function(gl, context, skippedFeaturesHash) {\n  let i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex, featureStart;\n  featureIndex = this.startIndices.length - 2;\n  end = start = this.startIndices[featureIndex + 1];\n  for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n    nextStyle = this.styles_[i];\n    this.setFillStyle_(gl, /** @type {Array.<number>} */ (nextStyle[0]));\n    this.setStrokeStyle_(gl, /** @type {Array.<number>} */ (nextStyle[1]),\n      /** @type {number} */ (nextStyle[2]));\n    groupStart = this.styleIndices_[i];\n\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      featureStart = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid]) {\n        if (start !== end) {\n          this.drawElements(gl, context, start, end);\n        }\n        end = featureStart;\n      }\n      featureIndex--;\n      start = featureStart;\n    }\n    if (start !== end) {\n      this.drawElements(gl, context, start, end);\n    }\n    start = end = groupStart;\n  }\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {Array.<number>} color Color.\n */\nWebGLCircleReplay.prototype.setFillStyle_ = function(gl, color) {\n  gl.uniform4fv(this.defaultLocations_.u_fillColor, color);\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {Array.<number>} color Color.\n * @param {number} lineWidth Line width.\n */\nWebGLCircleReplay.prototype.setStrokeStyle_ = function(gl, color, lineWidth) {\n  gl.uniform4fv(this.defaultLocations_.u_strokeColor, color);\n  gl.uniform1f(this.defaultLocations_.u_lineWidth, lineWidth);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLCircleReplay.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  let strokeStyleColor, strokeStyleWidth;\n  if (strokeStyle) {\n    const strokeStyleLineDash = strokeStyle.getLineDash();\n    this.state_.lineDash = strokeStyleLineDash ?\n      strokeStyleLineDash : DEFAULT_LINEDASH;\n    const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n    this.state_.lineDashOffset = strokeStyleLineDashOffset ?\n      strokeStyleLineDashOffset : DEFAULT_LINEDASHOFFSET;\n    strokeStyleColor = strokeStyle.getColor();\n    if (!(strokeStyleColor instanceof CanvasGradient) &&\n        !(strokeStyleColor instanceof CanvasPattern)) {\n      strokeStyleColor = asArray(strokeStyleColor).map(function(c, i) {\n        return i != 3 ? c / 255 : c;\n      }) || DEFAULT_STROKESTYLE;\n    } else {\n      strokeStyleColor = DEFAULT_STROKESTYLE;\n    }\n    strokeStyleWidth = strokeStyle.getWidth();\n    strokeStyleWidth = strokeStyleWidth !== undefined ?\n      strokeStyleWidth : DEFAULT_LINEWIDTH;\n  } else {\n    strokeStyleColor = [0, 0, 0, 0];\n    strokeStyleWidth = 0;\n  }\n  let fillStyleColor = fillStyle ? fillStyle.getColor() : [0, 0, 0, 0];\n  if (!(fillStyleColor instanceof CanvasGradient) &&\n      !(fillStyleColor instanceof CanvasPattern)) {\n    fillStyleColor = asArray(fillStyleColor).map(function(c, i) {\n      return i != 3 ? c / 255 : c;\n    }) || DEFAULT_FILLSTYLE;\n  } else {\n    fillStyleColor = DEFAULT_FILLSTYLE;\n  }\n  if (!this.state_.strokeColor || !equals(this.state_.strokeColor, strokeStyleColor) ||\n      !this.state_.fillColor || !equals(this.state_.fillColor, fillStyleColor) ||\n      this.state_.lineWidth !== strokeStyleWidth) {\n    this.state_.changed = true;\n    this.state_.fillColor = fillStyleColor;\n    this.state_.strokeColor = strokeStyleColor;\n    this.state_.lineWidth = strokeStyleWidth;\n    this.styles_.push([fillStyleColor, strokeStyleColor, strokeStyleWidth]);\n  }\n};\nexport default WebGLCircleReplay;\n","/**\n * @module ol/render/webgl/texturereplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport const fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\nvarying float v_opacity;\\n\\nuniform float u_opacity;\\nuniform sampler2D u_image;\\n\\nvoid main(void) {\\n  vec4 texColor = texture2D(u_image, v_texCoord);\\n  gl_FragColor.rgb = texColor.rgb;\\n  float alpha = texColor.a * v_opacity * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;varying vec2 a;varying float b;uniform float k;uniform sampler2D l;void main(void){vec4 texColor=texture2D(l,a);gl_FragColor.rgb=texColor.rgb;float alpha=texColor.a*b*k;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\nexport const vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\nvarying float v_opacity;\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\nattribute vec2 a_offsets;\\nattribute float a_opacity;\\nattribute float a_rotateWithView;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\n\\nvoid main(void) {\\n  mat4 offsetMatrix = u_offsetScaleMatrix;\\n  if (a_rotateWithView == 1.0) {\\n    offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  }\\n  vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\\n  v_texCoord = a_texCoord;\\n  v_opacity = a_opacity;\\n}\\n\\n\\n' :\n  'varying vec2 a;varying float b;attribute vec2 c;attribute vec2 d;attribute vec2 e;attribute float f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;void main(void){mat4 offsetMatrix=i;if(g==1.0){offsetMatrix=i*j;}vec4 offsets=offsetMatrix*vec4(e,0.0,0.0);gl_Position=h*vec4(c,0.0,1.0)+offsets;a=d;b=f;}');\n","/**\n * @module ol/render/webgl/texturereplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\n/**\n * @constructor\n * @param {WebGLRenderingContext} gl GL.\n * @param {WebGLProgram} program Program.\n * @struct\n */\nconst Locations = function(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'k');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_image = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_image' : 'l');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'c');\n\n  /**\n   * @type {number}\n   */\n  this.a_texCoord = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_texCoord' : 'd');\n\n  /**\n   * @type {number}\n   */\n  this.a_offsets = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_offsets' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_opacity = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_opacity' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_rotateWithView = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_rotateWithView' : 'g');\n};\n\nexport default Locations;\n","/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored'\n};\n","/**\n * @module ol/webgl/Context\n */\nimport {getUid, inherits} from '../util.js';\nimport {EXTENSIONS as WEBGL_EXTENSIONS} from '../webgl.js';\nimport Disposable from '../Disposable.js';\nimport {includes} from '../array.js';\nimport {listen, unlistenAll} from '../events.js';\nimport {clear} from '../obj.js';\nimport {ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, TEXTURE_2D, TEXTURE_WRAP_S, TEXTURE_WRAP_T} from '../webgl.js';\nimport ContextEventType from '../webgl/ContextEventType.js';\n\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {module:ol/webgl/Buffer} buf\n * @property {WebGLBuffer} buffer\n */\n\n\n/**\n * @classdesc\n * A WebGL context for accessing low-level WebGL capabilities.\n *\n * @constructor\n * @extends {module:ol/Disposable}\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {WebGLRenderingContext} gl GL.\n */\nconst WebGLContext = function(canvas, gl) {\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = canvas;\n\n  /**\n   * @private\n   * @type {WebGLRenderingContext}\n   */\n  this.gl_ = gl;\n\n  /**\n   * @private\n   * @type {!Object.<string, module:ol/webgl/Context~BufferCacheEntry>}\n   */\n  this.bufferCache_ = {};\n\n  /**\n   * @private\n   * @type {!Object.<string, WebGLShader>}\n   */\n  this.shaderCache_ = {};\n\n  /**\n   * @private\n   * @type {!Object.<string, WebGLProgram>}\n   */\n  this.programCache_ = {};\n\n  /**\n   * @private\n   * @type {WebGLProgram}\n   */\n  this.currentProgram_ = null;\n\n  /**\n   * @private\n   * @type {WebGLFramebuffer}\n   */\n  this.hitDetectionFramebuffer_ = null;\n\n  /**\n   * @private\n   * @type {WebGLTexture}\n   */\n  this.hitDetectionTexture_ = null;\n\n  /**\n   * @private\n   * @type {WebGLRenderbuffer}\n   */\n  this.hitDetectionRenderbuffer_ = null;\n\n  /**\n   * @type {boolean}\n   */\n  this.hasOESElementIndexUint = includes(WEBGL_EXTENSIONS, 'OES_element_index_uint');\n\n  // use the OES_element_index_uint extension if available\n  if (this.hasOESElementIndexUint) {\n    gl.getExtension('OES_element_index_uint');\n  }\n\n  listen(this.canvas_, ContextEventType.LOST,\n    this.handleWebGLContextLost, this);\n  listen(this.canvas_, ContextEventType.RESTORED,\n    this.handleWebGLContextRestored, this);\n\n};\n\ninherits(WebGLContext, Disposable);\n\n\n/**\n * Just bind the buffer if it's in the cache. Otherwise create\n * the WebGL buffer, bind it, populate it, and add an entry to\n * the cache.\n * @param {number} target Target.\n * @param {module:ol/webgl/Buffer} buf Buffer.\n */\nWebGLContext.prototype.bindBuffer = function(target, buf) {\n  const gl = this.getGL();\n  const arr = buf.getArray();\n  const bufferKey = String(getUid(buf));\n  if (bufferKey in this.bufferCache_) {\n    const bufferCacheEntry = this.bufferCache_[bufferKey];\n    gl.bindBuffer(target, bufferCacheEntry.buffer);\n  } else {\n    const buffer = gl.createBuffer();\n    gl.bindBuffer(target, buffer);\n    let /** @type {ArrayBufferView} */ arrayBuffer;\n    if (target == ARRAY_BUFFER) {\n      arrayBuffer = new Float32Array(arr);\n    } else if (target == ELEMENT_ARRAY_BUFFER) {\n      arrayBuffer = this.hasOESElementIndexUint ?\n        new Uint32Array(arr) : new Uint16Array(arr);\n    }\n    gl.bufferData(target, arrayBuffer, buf.getUsage());\n    this.bufferCache_[bufferKey] = {\n      buf: buf,\n      buffer: buffer\n    };\n  }\n};\n\n\n/**\n * @param {module:ol/webgl/Buffer} buf Buffer.\n */\nWebGLContext.prototype.deleteBuffer = function(buf) {\n  const gl = this.getGL();\n  const bufferKey = String(getUid(buf));\n  const bufferCacheEntry = this.bufferCache_[bufferKey];\n  if (!gl.isContextLost()) {\n    gl.deleteBuffer(bufferCacheEntry.buffer);\n  }\n  delete this.bufferCache_[bufferKey];\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLContext.prototype.disposeInternal = function() {\n  unlistenAll(this.canvas_);\n  const gl = this.getGL();\n  if (!gl.isContextLost()) {\n    for (const key in this.bufferCache_) {\n      gl.deleteBuffer(this.bufferCache_[key].buffer);\n    }\n    for (const key in this.programCache_) {\n      gl.deleteProgram(this.programCache_[key]);\n    }\n    for (const key in this.shaderCache_) {\n      gl.deleteShader(this.shaderCache_[key]);\n    }\n    // delete objects for hit-detection\n    gl.deleteFramebuffer(this.hitDetectionFramebuffer_);\n    gl.deleteRenderbuffer(this.hitDetectionRenderbuffer_);\n    gl.deleteTexture(this.hitDetectionTexture_);\n  }\n};\n\n\n/**\n * @return {HTMLCanvasElement} Canvas.\n */\nWebGLContext.prototype.getCanvas = function() {\n  return this.canvas_;\n};\n\n\n/**\n * Get the WebGL rendering context\n * @return {WebGLRenderingContext} The rendering context.\n * @api\n */\nWebGLContext.prototype.getGL = function() {\n  return this.gl_;\n};\n\n\n/**\n * Get the frame buffer for hit detection.\n * @return {WebGLFramebuffer} The hit detection frame buffer.\n */\nWebGLContext.prototype.getHitDetectionFramebuffer = function() {\n  if (!this.hitDetectionFramebuffer_) {\n    this.initHitDetectionFramebuffer_();\n  }\n  return this.hitDetectionFramebuffer_;\n};\n\n\n/**\n * Get shader from the cache if it's in the cache. Otherwise, create\n * the WebGL shader, compile it, and add entry to cache.\n * @param {module:ol/webgl/Shader} shaderObject Shader object.\n * @return {WebGLShader} Shader.\n */\nWebGLContext.prototype.getShader = function(shaderObject) {\n  const shaderKey = String(getUid(shaderObject));\n  if (shaderKey in this.shaderCache_) {\n    return this.shaderCache_[shaderKey];\n  } else {\n    const gl = this.getGL();\n    const shader = gl.createShader(shaderObject.getType());\n    gl.shaderSource(shader, shaderObject.getSource());\n    gl.compileShader(shader);\n    this.shaderCache_[shaderKey] = shader;\n    return shader;\n  }\n};\n\n\n/**\n * Get the program from the cache if it's in the cache. Otherwise create\n * the WebGL program, attach the shaders to it, and add an entry to the\n * cache.\n * @param {module:ol/webgl/Fragment} fragmentShaderObject Fragment shader.\n * @param {module:ol/webgl/Vertex} vertexShaderObject Vertex shader.\n * @return {WebGLProgram} Program.\n */\nWebGLContext.prototype.getProgram = function(fragmentShaderObject, vertexShaderObject) {\n  const programKey = getUid(fragmentShaderObject) + '/' + getUid(vertexShaderObject);\n  if (programKey in this.programCache_) {\n    return this.programCache_[programKey];\n  } else {\n    const gl = this.getGL();\n    const program = gl.createProgram();\n    gl.attachShader(program, this.getShader(fragmentShaderObject));\n    gl.attachShader(program, this.getShader(vertexShaderObject));\n    gl.linkProgram(program);\n    this.programCache_[programKey] = program;\n    return program;\n  }\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nWebGLContext.prototype.handleWebGLContextLost = function() {\n  clear(this.bufferCache_);\n  clear(this.shaderCache_);\n  clear(this.programCache_);\n  this.currentProgram_ = null;\n  this.hitDetectionFramebuffer_ = null;\n  this.hitDetectionTexture_ = null;\n  this.hitDetectionRenderbuffer_ = null;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nWebGLContext.prototype.handleWebGLContextRestored = function() {\n};\n\n\n/**\n * Creates a 1x1 pixel framebuffer for the hit-detection.\n * @private\n */\nWebGLContext.prototype.initHitDetectionFramebuffer_ = function() {\n  const gl = this.gl_;\n  const framebuffer = gl.createFramebuffer();\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\n  const texture = createEmptyTexture(gl, 1, 1);\n  const renderbuffer = gl.createRenderbuffer();\n  gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\n  gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, 1, 1);\n  gl.framebufferTexture2D(\n    gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n  gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT,\n    gl.RENDERBUFFER, renderbuffer);\n\n  gl.bindTexture(gl.TEXTURE_2D, null);\n  gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n  this.hitDetectionFramebuffer_ = framebuffer;\n  this.hitDetectionTexture_ = texture;\n  this.hitDetectionRenderbuffer_ = renderbuffer;\n};\n\n\n/**\n * Use a program.  If the program is already in use, this will return `false`.\n * @param {WebGLProgram} program Program.\n * @return {boolean} Changed.\n * @api\n */\nWebGLContext.prototype.useProgram = function(program) {\n  if (program == this.currentProgram_) {\n    return false;\n  } else {\n    const gl = this.getGL();\n    gl.useProgram(program);\n    this.currentProgram_ = program;\n    return true;\n  }\n};\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\nfunction createTextureInternal(gl, opt_wrapS, opt_wrapT) {\n  const texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\n  if (opt_wrapS !== undefined) {\n    gl.texParameteri(\n      TEXTURE_2D, TEXTURE_WRAP_S, opt_wrapS);\n  }\n  if (opt_wrapT !== undefined) {\n    gl.texParameteri(\n      TEXTURE_2D, TEXTURE_WRAP_T, opt_wrapT);\n  }\n\n  return texture;\n}\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {number} width Width.\n * @param {number} height Height.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\nexport function createEmptyTexture(gl, width, height, opt_wrapS, opt_wrapT) {\n  const texture = createTextureInternal(gl, opt_wrapS, opt_wrapT);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n  return texture;\n}\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\nexport function createTexture(gl, image, opt_wrapS, opt_wrapT) {\n  const texture = createTextureInternal(gl, opt_wrapS, opt_wrapT);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n  return texture;\n}\n\nexport default WebGLContext;\n","/**\n * @module ol/render/webgl/TextureReplay\n */\nimport {getUid, inherits} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {fragment, vertex} from '../webgl/texturereplay/defaultshader.js';\nimport Locations from '../webgl/texturereplay/defaultshader/Locations.js';\nimport WebGLReplay from '../webgl/Replay.js';\nimport {CLAMP_TO_EDGE, FLOAT, TEXTURE_2D} from '../../webgl.js';\nimport {createTexture} from '../../webgl/Context.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/render/webgl/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @struct\n */\nconst WebGLTextureReplay = function(tolerance, maxExtent) {\n  WebGLReplay.call(this, tolerance, maxExtent);\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.anchorX = undefined;\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.anchorY = undefined;\n\n  /**\n   * @type {Array.<number>}\n   * @protected\n   */\n  this.groupIndices = [];\n\n  /**\n   * @type {Array.<number>}\n   * @protected\n   */\n  this.hitDetectionGroupIndices = [];\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.height = undefined;\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.imageHeight = undefined;\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.imageWidth = undefined;\n\n  /**\n   * @protected\n   * @type {module:ol/render/webgl/texturereplay/defaultshader/Locations}\n   */\n  this.defaultLocations = null;\n\n  /**\n   * @protected\n   * @type {number|undefined}\n   */\n  this.opacity = undefined;\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.originX = undefined;\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.originY = undefined;\n\n  /**\n   * @protected\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView = undefined;\n\n  /**\n   * @protected\n   * @type {number|undefined}\n   */\n  this.rotation = undefined;\n\n  /**\n   * @protected\n   * @type {number|undefined}\n   */\n  this.scale = undefined;\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.width = undefined;\n};\n\ninherits(WebGLTextureReplay, WebGLReplay);\n\n\n/**\n * @inheritDoc\n */\nWebGLTextureReplay.prototype.getDeleteResourcesFunction = function(context) {\n  const verticesBuffer = this.verticesBuffer;\n  const indicesBuffer = this.indicesBuffer;\n  const textures = this.getTextures(true);\n  const gl = context.getGL();\n  return function() {\n    if (!gl.isContextLost()) {\n      let i, ii;\n      for (i = 0, ii = textures.length; i < ii; ++i) {\n        gl.deleteTexture(textures[i]);\n      }\n    }\n    context.deleteBuffer(verticesBuffer);\n    context.deleteBuffer(indicesBuffer);\n  };\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} My end.\n * @protected\n */\nWebGLTextureReplay.prototype.drawCoordinates = function(flatCoordinates, offset, end, stride) {\n  const anchorX = /** @type {number} */ (this.anchorX);\n  const anchorY = /** @type {number} */ (this.anchorY);\n  const height = /** @type {number} */ (this.height);\n  const imageHeight = /** @type {number} */ (this.imageHeight);\n  const imageWidth = /** @type {number} */ (this.imageWidth);\n  const opacity = /** @type {number} */ (this.opacity);\n  const originX = /** @type {number} */ (this.originX);\n  const originY = /** @type {number} */ (this.originY);\n  const rotateWithView = this.rotateWithView ? 1.0 : 0.0;\n  // this.rotation_ is anti-clockwise, but rotation is clockwise\n  const rotation = /** @type {number} */ (-this.rotation);\n  const scale = /** @type {number} */ (this.scale);\n  const width = /** @type {number} */ (this.width);\n  const cos = Math.cos(rotation);\n  const sin = Math.sin(rotation);\n  let numIndices = this.indices.length;\n  let numVertices = this.vertices.length;\n  let i, n, offsetX, offsetY, x, y;\n  for (i = offset; i < end; i += stride) {\n    x = flatCoordinates[i] - this.origin[0];\n    y = flatCoordinates[i + 1] - this.origin[1];\n\n    // There are 4 vertices per [x, y] point, one for each corner of the\n    // rectangle we're going to draw. We'd use 1 vertex per [x, y] point if\n    // WebGL supported Geometry Shaders (which can emit new vertices), but that\n    // is not currently the case.\n    //\n    // And each vertex includes 8 values: the x and y coordinates, the x and\n    // y offsets used to calculate the position of the corner, the u and\n    // v texture coordinates for the corner, the opacity, and whether the\n    // the image should be rotated with the view (rotateWithView).\n\n    n = numVertices / 8;\n\n    // bottom-left corner\n    offsetX = -scale * anchorX;\n    offsetY = -scale * (height - anchorY);\n    this.vertices[numVertices++] = x;\n    this.vertices[numVertices++] = y;\n    this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n    this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n    this.vertices[numVertices++] = originX / imageWidth;\n    this.vertices[numVertices++] = (originY + height) / imageHeight;\n    this.vertices[numVertices++] = opacity;\n    this.vertices[numVertices++] = rotateWithView;\n\n    // bottom-right corner\n    offsetX = scale * (width - anchorX);\n    offsetY = -scale * (height - anchorY);\n    this.vertices[numVertices++] = x;\n    this.vertices[numVertices++] = y;\n    this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n    this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n    this.vertices[numVertices++] = (originX + width) / imageWidth;\n    this.vertices[numVertices++] = (originY + height) / imageHeight;\n    this.vertices[numVertices++] = opacity;\n    this.vertices[numVertices++] = rotateWithView;\n\n    // top-right corner\n    offsetX = scale * (width - anchorX);\n    offsetY = scale * anchorY;\n    this.vertices[numVertices++] = x;\n    this.vertices[numVertices++] = y;\n    this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n    this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n    this.vertices[numVertices++] = (originX + width) / imageWidth;\n    this.vertices[numVertices++] = originY / imageHeight;\n    this.vertices[numVertices++] = opacity;\n    this.vertices[numVertices++] = rotateWithView;\n\n    // top-left corner\n    offsetX = -scale * anchorX;\n    offsetY = scale * anchorY;\n    this.vertices[numVertices++] = x;\n    this.vertices[numVertices++] = y;\n    this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n    this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n    this.vertices[numVertices++] = originX / imageWidth;\n    this.vertices[numVertices++] = originY / imageHeight;\n    this.vertices[numVertices++] = opacity;\n    this.vertices[numVertices++] = rotateWithView;\n\n    this.indices[numIndices++] = n;\n    this.indices[numIndices++] = n + 1;\n    this.indices[numIndices++] = n + 2;\n    this.indices[numIndices++] = n;\n    this.indices[numIndices++] = n + 2;\n    this.indices[numIndices++] = n + 3;\n  }\n\n  return numVertices;\n};\n\n\n/**\n * @protected\n * @param {Array.<WebGLTexture>} textures Textures.\n * @param {Array.<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>} images Images.\n * @param {!Object.<string, WebGLTexture>} texturePerImage Texture cache.\n * @param {WebGLRenderingContext} gl Gl.\n */\nWebGLTextureReplay.prototype.createTextures = function(textures, images, texturePerImage, gl) {\n  let texture, image, uid, i;\n  const ii = images.length;\n  for (i = 0; i < ii; ++i) {\n    image = images[i];\n\n    uid = getUid(image).toString();\n    if (uid in texturePerImage) {\n      texture = texturePerImage[uid];\n    } else {\n      texture = createTexture(\n        gl, image, CLAMP_TO_EDGE, CLAMP_TO_EDGE);\n      texturePerImage[uid] = texture;\n    }\n    textures[i] = texture;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTextureReplay.prototype.setUpProgram = function(gl, context, size, pixelRatio) {\n  // get the program\n  const program = context.getProgram(fragment, vertex);\n\n  // get the locations\n  let locations;\n  if (!this.defaultLocations) {\n    locations = new Locations(gl, program);\n    this.defaultLocations = locations;\n  } else {\n    locations = this.defaultLocations;\n  }\n\n  // use the program (FIXME: use the return value)\n  context.useProgram(program);\n\n  // enable the vertex attrib arrays\n  gl.enableVertexAttribArray(locations.a_position);\n  gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n    false, 32, 0);\n\n  gl.enableVertexAttribArray(locations.a_offsets);\n  gl.vertexAttribPointer(locations.a_offsets, 2, FLOAT,\n    false, 32, 8);\n\n  gl.enableVertexAttribArray(locations.a_texCoord);\n  gl.vertexAttribPointer(locations.a_texCoord, 2, FLOAT,\n    false, 32, 16);\n\n  gl.enableVertexAttribArray(locations.a_opacity);\n  gl.vertexAttribPointer(locations.a_opacity, 1, FLOAT,\n    false, 32, 24);\n\n  gl.enableVertexAttribArray(locations.a_rotateWithView);\n  gl.vertexAttribPointer(locations.a_rotateWithView, 1, FLOAT,\n    false, 32, 28);\n\n  return locations;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTextureReplay.prototype.shutDownProgram = function(gl, locations) {\n  gl.disableVertexAttribArray(locations.a_position);\n  gl.disableVertexAttribArray(locations.a_offsets);\n  gl.disableVertexAttribArray(locations.a_texCoord);\n  gl.disableVertexAttribArray(locations.a_opacity);\n  gl.disableVertexAttribArray(locations.a_rotateWithView);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTextureReplay.prototype.drawReplay = function(gl, context, skippedFeaturesHash, hitDetection) {\n  const textures = hitDetection ? this.getHitDetectionTextures() : this.getTextures();\n  const groupIndices = hitDetection ? this.hitDetectionGroupIndices : this.groupIndices;\n\n  if (!isEmpty(skippedFeaturesHash)) {\n    this.drawReplaySkipping(gl, context, skippedFeaturesHash, textures, groupIndices);\n  } else {\n    let i, ii, start;\n    for (i = 0, ii = textures.length, start = 0; i < ii; ++i) {\n      gl.bindTexture(TEXTURE_2D, textures[i]);\n      const end = groupIndices[i];\n      this.drawElements(gl, context, start, end);\n      start = end;\n    }\n  }\n};\n\n\n/**\n * Draw the replay while paying attention to skipped features.\n *\n * This functions creates groups of features that can be drawn to together,\n * so that the number of `drawElements` calls is minimized.\n *\n * For example given the following texture groups:\n *\n *    Group 1: A B C\n *    Group 2: D [E] F G\n *\n * If feature E should be skipped, the following `drawElements` calls will be\n * made:\n *\n *    drawElements with feature A, B and C\n *    drawElements with feature D\n *    drawElements with feature F and G\n *\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *  to skip.\n * @param {Array.<WebGLTexture>} textures Textures.\n * @param {Array.<number>} groupIndices Texture group indices.\n */\nWebGLTextureReplay.prototype.drawReplaySkipping = function(gl, context, skippedFeaturesHash, textures,\n  groupIndices) {\n  let featureIndex = 0;\n\n  let i, ii;\n  for (i = 0, ii = textures.length; i < ii; ++i) {\n    gl.bindTexture(TEXTURE_2D, textures[i]);\n    const groupStart = (i > 0) ? groupIndices[i - 1] : 0;\n    const groupEnd = groupIndices[i];\n\n    let start = groupStart;\n    let end = groupStart;\n    while (featureIndex < this.startIndices.length &&\n        this.startIndices[featureIndex] <= groupEnd) {\n      const feature = this.startIndicesFeature[featureIndex];\n\n      const featureUid = getUid(feature).toString();\n      if (skippedFeaturesHash[featureUid] !== undefined) {\n        // feature should be skipped\n        if (start !== end) {\n          // draw the features so far\n          this.drawElements(gl, context, start, end);\n        }\n        // continue with the next feature\n        start = (featureIndex === this.startIndices.length - 1) ?\n          groupEnd : this.startIndices[featureIndex + 1];\n        end = start;\n      } else {\n        // the feature is not skipped, augment the end index\n        end = (featureIndex === this.startIndices.length - 1) ?\n          groupEnd : this.startIndices[featureIndex + 1];\n      }\n      featureIndex++;\n    }\n\n    if (start !== end) {\n      // draw the remaining features (in case there was no skipped feature\n      // in this texture group, all features of a group are drawn together)\n      this.drawElements(gl, context, start, end);\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTextureReplay.prototype.drawHitDetectionReplayOneByOne = function(gl, context, skippedFeaturesHash,\n  featureCallback, opt_hitExtent) {\n  let i, groupStart, start, end, feature, featureUid;\n  let featureIndex = this.startIndices.length - 1;\n  const hitDetectionTextures = this.getHitDetectionTextures();\n  for (i = hitDetectionTextures.length - 1; i >= 0; --i) {\n    gl.bindTexture(TEXTURE_2D, hitDetectionTextures[i]);\n    groupStart = (i > 0) ? this.hitDetectionGroupIndices[i - 1] : 0;\n    end = this.hitDetectionGroupIndices[i];\n\n    // draw all features for this texture group\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      start = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid] === undefined &&\n          feature.getGeometry() &&\n          (opt_hitExtent === undefined || intersects(\n            /** @type {Array<number>} */ (opt_hitExtent),\n            feature.getGeometry().getExtent()))) {\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        this.drawElements(gl, context, start, end);\n\n        const result = featureCallback(feature);\n        if (result) {\n          return result;\n        }\n      }\n\n      end = start;\n      featureIndex--;\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTextureReplay.prototype.finish = function(context) {\n  this.anchorX = undefined;\n  this.anchorY = undefined;\n  this.height = undefined;\n  this.imageHeight = undefined;\n  this.imageWidth = undefined;\n  this.indices = null;\n  this.opacity = undefined;\n  this.originX = undefined;\n  this.originY = undefined;\n  this.rotateWithView = undefined;\n  this.rotation = undefined;\n  this.scale = undefined;\n  this.vertices = null;\n  this.width = undefined;\n};\n\n\n/**\n * @abstract\n * @protected\n * @param {boolean=} opt_all Return hit detection textures with regular ones.\n * @returns {Array.<WebGLTexture>} Textures.\n */\nWebGLTextureReplay.prototype.getTextures = function(opt_all) {};\n\n\n/**\n * @abstract\n * @protected\n * @returns {Array.<WebGLTexture>} Textures.\n */\nWebGLTextureReplay.prototype.getHitDetectionTextures = function() {};\nexport default WebGLTextureReplay;\n","/**\n * @module ol/render/webgl/ImageReplay\n */\nimport {getUid, inherits} from '../../util.js';\nimport WebGLTextureReplay from '../webgl/TextureReplay.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/webgl/TextureReplay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @struct\n */\nconst WebGLImageReplay = function(tolerance, maxExtent) {\n  WebGLTextureReplay.call(this, tolerance, maxExtent);\n\n  /**\n   * @type {Array.<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>}\n   * @protected\n   */\n  this.images_ = [];\n\n  /**\n   * @type {Array.<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>}\n   * @protected\n   */\n  this.hitDetectionImages_ = [];\n\n  /**\n   * @type {Array.<WebGLTexture>}\n   * @private\n   */\n  this.textures_ = [];\n\n  /**\n   * @type {Array.<WebGLTexture>}\n   * @private\n   */\n  this.hitDetectionTextures_ = [];\n\n};\n\ninherits(WebGLImageReplay, WebGLTextureReplay);\n\n\n/**\n * @inheritDoc\n */\nWebGLImageReplay.prototype.drawMultiPoint = function(multiPointGeometry, feature) {\n  this.startIndices.push(this.indices.length);\n  this.startIndicesFeature.push(feature);\n  const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n  const stride = multiPointGeometry.getStride();\n  this.drawCoordinates(\n    flatCoordinates, 0, flatCoordinates.length, stride);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImageReplay.prototype.drawPoint = function(pointGeometry, feature) {\n  this.startIndices.push(this.indices.length);\n  this.startIndicesFeature.push(feature);\n  const flatCoordinates = pointGeometry.getFlatCoordinates();\n  const stride = pointGeometry.getStride();\n  this.drawCoordinates(\n    flatCoordinates, 0, flatCoordinates.length, stride);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImageReplay.prototype.finish = function(context) {\n  const gl = context.getGL();\n\n  this.groupIndices.push(this.indices.length);\n  this.hitDetectionGroupIndices.push(this.indices.length);\n\n  // create, bind, and populate the vertices buffer\n  this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n  const indices = this.indices;\n\n  // create, bind, and populate the indices buffer\n  this.indicesBuffer = new WebGLBuffer(indices);\n\n  // create textures\n  /** @type {Object.<string, WebGLTexture>} */\n  const texturePerImage = {};\n\n  this.createTextures(this.textures_, this.images_, texturePerImage, gl);\n\n  this.createTextures(this.hitDetectionTextures_, this.hitDetectionImages_,\n    texturePerImage, gl);\n\n  this.images_ = null;\n  this.hitDetectionImages_ = null;\n  WebGLTextureReplay.prototype.finish.call(this, context);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImageReplay.prototype.setImageStyle = function(imageStyle) {\n  const anchor = imageStyle.getAnchor();\n  const image = imageStyle.getImage(1);\n  const imageSize = imageStyle.getImageSize();\n  const hitDetectionImage = imageStyle.getHitDetectionImage(1);\n  const opacity = imageStyle.getOpacity();\n  const origin = imageStyle.getOrigin();\n  const rotateWithView = imageStyle.getRotateWithView();\n  const rotation = imageStyle.getRotation();\n  const size = imageStyle.getSize();\n  const scale = imageStyle.getScale();\n\n  let currentImage;\n  if (this.images_.length === 0) {\n    this.images_.push(image);\n  } else {\n    currentImage = this.images_[this.images_.length - 1];\n    if (getUid(currentImage) != getUid(image)) {\n      this.groupIndices.push(this.indices.length);\n      this.images_.push(image);\n    }\n  }\n\n  if (this.hitDetectionImages_.length === 0) {\n    this.hitDetectionImages_.push(hitDetectionImage);\n  } else {\n    currentImage =\n        this.hitDetectionImages_[this.hitDetectionImages_.length - 1];\n    if (getUid(currentImage) != getUid(hitDetectionImage)) {\n      this.hitDetectionGroupIndices.push(this.indices.length);\n      this.hitDetectionImages_.push(hitDetectionImage);\n    }\n  }\n\n  this.anchorX = anchor[0];\n  this.anchorY = anchor[1];\n  this.height = size[1];\n  this.imageHeight = imageSize[1];\n  this.imageWidth = imageSize[0];\n  this.opacity = opacity;\n  this.originX = origin[0];\n  this.originY = origin[1];\n  this.rotation = rotation;\n  this.rotateWithView = rotateWithView;\n  this.scale = scale;\n  this.width = size[0];\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImageReplay.prototype.getTextures = function(opt_all) {\n  return opt_all ? this.textures_.concat(this.hitDetectionTextures_) : this.textures_;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImageReplay.prototype.getHitDetectionTextures = function() {\n  return this.hitDetectionTextures_;\n};\nexport default WebGLImageReplay;\n","/**\n * @module ol/geom/flat/topology\n */\nimport {linearRing as linearRingArea} from '../flat/area.js';\n\n/**\n * Check if the linestring is a boundary.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} The linestring is a boundary.\n */\nexport function lineStringIsClosed(flatCoordinates, offset, end, stride) {\n  const lastCoord = end - stride;\n  if (flatCoordinates[offset] === flatCoordinates[lastCoord] &&\n      flatCoordinates[offset + 1] === flatCoordinates[lastCoord + 1] && (end - offset) / stride > 3) {\n    return !!linearRingArea(flatCoordinates, offset, end, stride);\n  }\n  return false;\n}\n","/**\n * @module ol/render/webgl/linestringreplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport const fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying float v_round;\\nvarying vec2 v_roundVertex;\\nvarying float v_halfWidth;\\n\\n\\n\\nuniform float u_opacity;\\nuniform vec4 u_color;\\nuniform vec2 u_size;\\nuniform float u_pixelRatio;\\n\\nvoid main(void) {\\n  if (v_round > 0.0) {\\n    vec2 windowCoords = vec2((v_roundVertex.x + 1.0) / 2.0 * u_size.x * u_pixelRatio,\\n        (v_roundVertex.y + 1.0) / 2.0 * u_size.y * u_pixelRatio);\\n    if (length(windowCoords - gl_FragCoord.xy) > v_halfWidth * u_pixelRatio) {\\n      discard;\\n    }\\n  }\\n  gl_FragColor = u_color;\\n  float alpha = u_color.a * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;varying float a;varying vec2 aVertex;varying float c;uniform float m;uniform vec4 n;uniform vec2 o;uniform float p;void main(void){if(a>0.0){vec2 windowCoords=vec2((aVertex.x+1.0)/2.0*o.x*p,(aVertex.y+1.0)/2.0*o.y*p);if(length(windowCoords-gl_FragCoord.xy)>c*p){discard;}} gl_FragColor=n;float alpha=n.a*m;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\nexport const vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying float v_round;\\nvarying vec2 v_roundVertex;\\nvarying float v_halfWidth;\\n\\n\\nattribute vec2 a_lastPos;\\nattribute vec2 a_position;\\nattribute vec2 a_nextPos;\\nattribute float a_direction;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\nuniform float u_lineWidth;\\nuniform float u_miterLimit;\\n\\nbool nearlyEquals(in float value, in float ref) {\\n  float epsilon = 0.000000000001;\\n  return value >= ref - epsilon && value <= ref + epsilon;\\n}\\n\\nvoid alongNormal(out vec2 offset, in vec2 nextP, in float turnDir, in float direction) {\\n  vec2 dirVect = nextP - a_position;\\n  vec2 normal = normalize(vec2(-turnDir * dirVect.y, turnDir * dirVect.x));\\n  offset = u_lineWidth / 2.0 * normal * direction;\\n}\\n\\nvoid miterUp(out vec2 offset, out float round, in bool isRound, in float direction) {\\n  float halfWidth = u_lineWidth / 2.0;\\n  vec2 tangent = normalize(normalize(a_nextPos - a_position) + normalize(a_position - a_lastPos));\\n  vec2 normal = vec2(-tangent.y, tangent.x);\\n  vec2 dirVect = a_nextPos - a_position;\\n  vec2 tmpNormal = normalize(vec2(-dirVect.y, dirVect.x));\\n  float miterLength = abs(halfWidth / dot(normal, tmpNormal));\\n  offset = normal * direction * miterLength;\\n  round = 0.0;\\n  if (isRound) {\\n    round = 1.0;\\n  } else if (miterLength > u_miterLimit + u_lineWidth) {\\n    offset = halfWidth * tmpNormal * direction;\\n  }\\n}\\n\\nbool miterDown(out vec2 offset, in vec4 projPos, in mat4 offsetMatrix, in float direction) {\\n  bool degenerate = false;\\n  vec2 tangent = normalize(normalize(a_nextPos - a_position) + normalize(a_position - a_lastPos));\\n  vec2 normal = vec2(-tangent.y, tangent.x);\\n  vec2 dirVect = a_lastPos - a_position;\\n  vec2 tmpNormal = normalize(vec2(-dirVect.y, dirVect.x));\\n  vec2 longOffset, shortOffset, longVertex;\\n  vec4 shortProjVertex;\\n  float halfWidth = u_lineWidth / 2.0;\\n  if (length(a_nextPos - a_position) > length(a_lastPos - a_position)) {\\n    longOffset = tmpNormal * direction * halfWidth;\\n    shortOffset = normalize(vec2(dirVect.y, -dirVect.x)) * direction * halfWidth;\\n    longVertex = a_nextPos;\\n    shortProjVertex = u_projectionMatrix * vec4(a_lastPos, 0.0, 1.0);\\n  } else {\\n    shortOffset = tmpNormal * direction * halfWidth;\\n    longOffset = normalize(vec2(dirVect.y, -dirVect.x)) * direction * halfWidth;\\n    longVertex = a_lastPos;\\n    shortProjVertex = u_projectionMatrix * vec4(a_nextPos, 0.0, 1.0);\\n  }\\n  //Intersection algorithm based on theory by Paul Bourke (http://paulbourke.net/geometry/pointlineplane/).\\n  vec4 p1 = u_projectionMatrix * vec4(longVertex, 0.0, 1.0) + offsetMatrix * vec4(longOffset, 0.0, 0.0);\\n  vec4 p2 = projPos + offsetMatrix * vec4(longOffset, 0.0, 0.0);\\n  vec4 p3 = shortProjVertex + offsetMatrix * vec4(-shortOffset, 0.0, 0.0);\\n  vec4 p4 = shortProjVertex + offsetMatrix * vec4(shortOffset, 0.0, 0.0);\\n  float denom = (p4.y - p3.y) * (p2.x - p1.x) - (p4.x - p3.x) * (p2.y - p1.y);\\n  float firstU = ((p4.x - p3.x) * (p1.y - p3.y) - (p4.y - p3.y) * (p1.x - p3.x)) / denom;\\n  float secondU = ((p2.x - p1.x) * (p1.y - p3.y) - (p2.y - p1.y) * (p1.x - p3.x)) / denom;\\n  float epsilon = 0.000000000001;\\n  if (firstU > epsilon && firstU < 1.0 - epsilon && secondU > epsilon && secondU < 1.0 - epsilon) {\\n    shortProjVertex.x = p1.x + firstU * (p2.x - p1.x);\\n    shortProjVertex.y = p1.y + firstU * (p2.y - p1.y);\\n    offset = shortProjVertex.xy;\\n    degenerate = true;\\n  } else {\\n    float miterLength = abs(halfWidth / dot(normal, tmpNormal));\\n    offset = normal * direction * miterLength;\\n  }\\n  return degenerate;\\n}\\n\\nvoid squareCap(out vec2 offset, out float round, in bool isRound, in vec2 nextP,\\n    in float turnDir, in float direction) {\\n  round = 0.0;\\n  vec2 dirVect = a_position - nextP;\\n  vec2 firstNormal = normalize(dirVect);\\n  vec2 secondNormal = vec2(turnDir * firstNormal.y * direction, -turnDir * firstNormal.x * direction);\\n  vec2 hypotenuse = normalize(firstNormal - secondNormal);\\n  vec2 normal = vec2(turnDir * hypotenuse.y * direction, -turnDir * hypotenuse.x * direction);\\n  float length = sqrt(v_halfWidth * v_halfWidth * 2.0);\\n  offset = normal * length;\\n  if (isRound) {\\n    round = 1.0;\\n  }\\n}\\n\\nvoid main(void) {\\n  bool degenerate = false;\\n  float direction = float(sign(a_direction));\\n  mat4 offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  vec2 offset;\\n  vec4 projPos = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\\n  bool round = nearlyEquals(mod(a_direction, 2.0), 0.0);\\n\\n  v_round = 0.0;\\n  v_halfWidth = u_lineWidth / 2.0;\\n  v_roundVertex = projPos.xy;\\n\\n  if (nearlyEquals(mod(a_direction, 3.0), 0.0) || nearlyEquals(mod(a_direction, 17.0), 0.0)) {\\n    alongNormal(offset, a_nextPos, 1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 5.0), 0.0) || nearlyEquals(mod(a_direction, 13.0), 0.0)) {\\n    alongNormal(offset, a_lastPos, -1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 23.0), 0.0)) {\\n    miterUp(offset, v_round, round, direction);\\n  } else if (nearlyEquals(mod(a_direction, 19.0), 0.0)) {\\n    degenerate = miterDown(offset, projPos, offsetMatrix, direction);\\n  } else if (nearlyEquals(mod(a_direction, 7.0), 0.0)) {\\n    squareCap(offset, v_round, round, a_nextPos, 1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 11.0), 0.0)) {\\n    squareCap(offset, v_round, round, a_lastPos, -1.0, direction);\\n  }\\n  if (!degenerate) {\\n    vec4 offsets = offsetMatrix * vec4(offset, 0.0, 0.0);\\n    gl_Position = projPos + offsets;\\n  } else {\\n    gl_Position = vec4(offset, 0.0, 1.0);\\n  }\\n}\\n\\n\\n' :\n  'varying float a;varying vec2 aVertex;varying float c;attribute vec2 d;attribute vec2 e;attribute vec2 f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;uniform float k;uniform float l;bool nearlyEquals(in float value,in float ref){float epsilon=0.000000000001;return value>=ref-epsilon&&value<=ref+epsilon;}void alongNormal(out vec2 offset,in vec2 nextP,in float turnDir,in float direction){vec2 dirVect=nextP-e;vec2 normal=normalize(vec2(-turnDir*dirVect.y,turnDir*dirVect.x));offset=k/2.0*normal*direction;}void miterUp(out vec2 offset,out float round,in bool isRound,in float direction){float halfWidth=k/2.0;vec2 tangent=normalize(normalize(f-e)+normalize(e-d));vec2 normal=vec2(-tangent.y,tangent.x);vec2 dirVect=f-e;vec2 tmpNormal=normalize(vec2(-dirVect.y,dirVect.x));float miterLength=abs(halfWidth/dot(normal,tmpNormal));offset=normal*direction*miterLength;round=0.0;if(isRound){round=1.0;}else if(miterLength>l+k){offset=halfWidth*tmpNormal*direction;}} bool miterDown(out vec2 offset,in vec4 projPos,in mat4 offsetMatrix,in float direction){bool degenerate=false;vec2 tangent=normalize(normalize(f-e)+normalize(e-d));vec2 normal=vec2(-tangent.y,tangent.x);vec2 dirVect=d-e;vec2 tmpNormal=normalize(vec2(-dirVect.y,dirVect.x));vec2 longOffset,shortOffset,longVertex;vec4 shortProjVertex;float halfWidth=k/2.0;if(length(f-e)>length(d-e)){longOffset=tmpNormal*direction*halfWidth;shortOffset=normalize(vec2(dirVect.y,-dirVect.x))*direction*halfWidth;longVertex=f;shortProjVertex=h*vec4(d,0.0,1.0);}else{shortOffset=tmpNormal*direction*halfWidth;longOffset=normalize(vec2(dirVect.y,-dirVect.x))*direction*halfWidth;longVertex=d;shortProjVertex=h*vec4(f,0.0,1.0);}vec4 p1=h*vec4(longVertex,0.0,1.0)+offsetMatrix*vec4(longOffset,0.0,0.0);vec4 p2=projPos+offsetMatrix*vec4(longOffset,0.0,0.0);vec4 p3=shortProjVertex+offsetMatrix*vec4(-shortOffset,0.0,0.0);vec4 p4=shortProjVertex+offsetMatrix*vec4(shortOffset,0.0,0.0);float denom=(p4.y-p3.y)*(p2.x-p1.x)-(p4.x-p3.x)*(p2.y-p1.y);float firstU=((p4.x-p3.x)*(p1.y-p3.y)-(p4.y-p3.y)*(p1.x-p3.x))/denom;float secondU=((p2.x-p1.x)*(p1.y-p3.y)-(p2.y-p1.y)*(p1.x-p3.x))/denom;float epsilon=0.000000000001;if(firstU>epsilon&&firstU<1.0-epsilon&&secondU>epsilon&&secondU<1.0-epsilon){shortProjVertex.x=p1.x+firstU*(p2.x-p1.x);shortProjVertex.y=p1.y+firstU*(p2.y-p1.y);offset=shortProjVertex.xy;degenerate=true;}else{float miterLength=abs(halfWidth/dot(normal,tmpNormal));offset=normal*direction*miterLength;}return degenerate;}void squareCap(out vec2 offset,out float round,in bool isRound,in vec2 nextP,in float turnDir,in float direction){round=0.0;vec2 dirVect=e-nextP;vec2 firstNormal=normalize(dirVect);vec2 secondNormal=vec2(turnDir*firstNormal.y*direction,-turnDir*firstNormal.x*direction);vec2 hypotenuse=normalize(firstNormal-secondNormal);vec2 normal=vec2(turnDir*hypotenuse.y*direction,-turnDir*hypotenuse.x*direction);float length=sqrt(c*c*2.0);offset=normal*length;if(isRound){round=1.0;}} void main(void){bool degenerate=false;float direction=float(sign(g));mat4 offsetMatrix=i*j;vec2 offset;vec4 projPos=h*vec4(e,0.0,1.0);bool round=nearlyEquals(mod(g,2.0),0.0);a=0.0;c=k/2.0;aVertex=projPos.xy;if(nearlyEquals(mod(g,3.0),0.0)||nearlyEquals(mod(g,17.0),0.0)){alongNormal(offset,f,1.0,direction);}else if(nearlyEquals(mod(g,5.0),0.0)||nearlyEquals(mod(g,13.0),0.0)){alongNormal(offset,d,-1.0,direction);}else if(nearlyEquals(mod(g,23.0),0.0)){miterUp(offset,a,round,direction);}else if(nearlyEquals(mod(g,19.0),0.0)){degenerate=miterDown(offset,projPos,offsetMatrix,direction);}else if(nearlyEquals(mod(g,7.0),0.0)){squareCap(offset,a,round,f,1.0,direction);}else if(nearlyEquals(mod(g,11.0),0.0)){squareCap(offset,a,round,d,-1.0,direction);}if(!degenerate){vec4 offsets=offsetMatrix*vec4(offset,0.0,0.0);gl_Position=projPos+offsets;}else{gl_Position=vec4(offset,0.0,1.0);}}');\n","/**\n * @module ol/render/webgl/linestringreplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\n/**\n * @constructor\n * @param {WebGLRenderingContext} gl GL.\n * @param {WebGLProgram} program Program.\n * @struct\n */\nconst Locations = function(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_lineWidth = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_lineWidth' : 'k');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_miterLimit = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_miterLimit' : 'l');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'm');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_color = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_color' : 'n');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_size = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_size' : 'o');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_pixelRatio = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_pixelRatio' : 'p');\n\n  /**\n   * @type {number}\n   */\n  this.a_lastPos = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_lastPos' : 'd');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_nextPos = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_nextPos' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_direction = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_direction' : 'g');\n};\n\nexport default Locations;\n","/**\n * @module ol/render/webgl/LineStringReplay\n */\nimport {getUid, inherits} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {intersects} from '../../extent.js';\nimport {linearRingIsClockwise} from '../../geom/flat/orient.js';\nimport {translate} from '../../geom/flat/transform.js';\nimport {lineStringIsClosed} from '../../geom/flat/topology.js';\nimport {isEmpty} from '../../obj.js';\nimport {DEFAULT_LINECAP, DEFAULT_LINEDASH, DEFAULT_LINEDASHOFFSET,\n  DEFAULT_LINEJOIN, DEFAULT_LINEWIDTH, DEFAULT_MITERLIMIT, DEFAULT_STROKESTYLE,\n  triangleIsCounterClockwise} from '../webgl.js';\nimport WebGLReplay from '../webgl/Replay.js';\nimport {fragment, vertex} from '../webgl/linestringreplay/defaultshader.js';\nimport Locations from '../webgl/linestringreplay/defaultshader/Locations.js';\nimport {FLOAT} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  ROUND: 2,\n  BEGIN_LINE: 3,\n  END_LINE: 5,\n  BEGIN_LINE_CAP: 7,\n  END_LINE_CAP: 11,\n  BEVEL_FIRST: 13,\n  BEVEL_SECOND: 17,\n  MITER_BOTTOM: 19,\n  MITER_TOP: 23\n};\n\n\n/**\n * @constructor\n * @extends {module:ol/render/webgl/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @struct\n */\nconst WebGLLineStringReplay = function(tolerance, maxExtent) {\n  WebGLReplay.call(this, tolerance, maxExtent);\n\n  /**\n   * @private\n   * @type {module:ol/render/webgl/linestringreplay/defaultshader/Locations}\n   */\n  this.defaultLocations_ = null;\n\n  /**\n   * @private\n   * @type {Array.<Array.<?>>}\n   */\n  this.styles_ = [];\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.styleIndices_ = [];\n\n  /**\n   * @private\n   * @type {{strokeColor: (Array.<number>|null),\n   *         lineCap: (string|undefined),\n   *         lineDash: Array.<number>,\n   *         lineDashOffset: (number|undefined),\n   *         lineJoin: (string|undefined),\n   *         lineWidth: (number|undefined),\n   *         miterLimit: (number|undefined),\n   *         changed: boolean}|null}\n   */\n  this.state_ = {\n    strokeColor: null,\n    lineCap: undefined,\n    lineDash: null,\n    lineDashOffset: undefined,\n    lineJoin: undefined,\n    lineWidth: undefined,\n    miterLimit: undefined,\n    changed: false\n  };\n\n};\n\ninherits(WebGLLineStringReplay, WebGLReplay);\n\n\n/**\n * Draw one segment.\n * @private\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nWebGLLineStringReplay.prototype.drawCoordinates_ = function(flatCoordinates, offset, end, stride) {\n\n  let i, ii;\n  let numVertices = this.vertices.length;\n  let numIndices = this.indices.length;\n  //To save a vertex, the direction of a point is a product of the sign (1 or -1), a prime from\n  //Instruction, and a rounding factor (1 or 2). If the product is even,\n  //we round it. If it is odd, we don't.\n  const lineJoin = this.state_.lineJoin === 'bevel' ? 0 :\n    this.state_.lineJoin === 'miter' ? 1 : 2;\n  const lineCap = this.state_.lineCap === 'butt' ? 0 :\n    this.state_.lineCap === 'square' ? 1 : 2;\n  const closed = lineStringIsClosed(flatCoordinates, offset, end, stride);\n  let startCoords, sign, n;\n  let lastIndex = numIndices;\n  let lastSign = 1;\n  //We need the adjacent vertices to define normals in joins. p0 = last, p1 = current, p2 = next.\n  let p0, p1, p2;\n\n  for (i = offset, ii = end; i < ii; i += stride) {\n\n    n = numVertices / 7;\n\n    p0 = p1;\n    p1 = p2 || [flatCoordinates[i], flatCoordinates[i + 1]];\n    //First vertex.\n    if (i === offset) {\n      p2 = [flatCoordinates[i + stride], flatCoordinates[i + stride + 1]];\n      if (end - offset === stride * 2 && equals(p1, p2)) {\n        break;\n      }\n      if (closed) {\n        //A closed line! Complete the circle.\n        p0 = [flatCoordinates[end - stride * 2],\n          flatCoordinates[end - stride * 2 + 1]];\n\n        startCoords = p2;\n      } else {\n        //Add the first two/four vertices.\n\n        if (lineCap) {\n          numVertices = this.addVertices_([0, 0], p1, p2,\n            lastSign * Instruction.BEGIN_LINE_CAP * lineCap, numVertices);\n\n          numVertices = this.addVertices_([0, 0], p1, p2,\n            -lastSign * Instruction.BEGIN_LINE_CAP * lineCap, numVertices);\n\n          this.indices[numIndices++] = n + 2;\n          this.indices[numIndices++] = n;\n          this.indices[numIndices++] = n + 1;\n\n          this.indices[numIndices++] = n + 1;\n          this.indices[numIndices++] = n + 3;\n          this.indices[numIndices++] = n + 2;\n\n        }\n\n        numVertices = this.addVertices_([0, 0], p1, p2,\n          lastSign * Instruction.BEGIN_LINE * (lineCap || 1), numVertices);\n\n        numVertices = this.addVertices_([0, 0], p1, p2,\n          -lastSign * Instruction.BEGIN_LINE * (lineCap || 1), numVertices);\n\n        lastIndex = numVertices / 7 - 1;\n\n        continue;\n      }\n    } else if (i === end - stride) {\n      //Last vertex.\n      if (closed) {\n        //Same as the first vertex.\n        p2 = startCoords;\n        break;\n      } else {\n        p0 = p0 || [0, 0];\n\n        numVertices = this.addVertices_(p0, p1, [0, 0],\n          lastSign * Instruction.END_LINE * (lineCap || 1), numVertices);\n\n        numVertices = this.addVertices_(p0, p1, [0, 0],\n          -lastSign * Instruction.END_LINE * (lineCap || 1), numVertices);\n\n        this.indices[numIndices++] = n;\n        this.indices[numIndices++] = lastIndex - 1;\n        this.indices[numIndices++] = lastIndex;\n\n        this.indices[numIndices++] = lastIndex;\n        this.indices[numIndices++] = n + 1;\n        this.indices[numIndices++] = n;\n\n        if (lineCap) {\n          numVertices = this.addVertices_(p0, p1, [0, 0],\n            lastSign * Instruction.END_LINE_CAP * lineCap, numVertices);\n\n          numVertices = this.addVertices_(p0, p1, [0, 0],\n            -lastSign * Instruction.END_LINE_CAP * lineCap, numVertices);\n\n          this.indices[numIndices++] = n + 2;\n          this.indices[numIndices++] = n;\n          this.indices[numIndices++] = n + 1;\n\n          this.indices[numIndices++] = n + 1;\n          this.indices[numIndices++] = n + 3;\n          this.indices[numIndices++] = n + 2;\n\n        }\n\n        break;\n      }\n    } else {\n      p2 = [flatCoordinates[i + stride], flatCoordinates[i + stride + 1]];\n    }\n\n    // We group CW and straight lines, thus the not so inituitive CCW checking function.\n    sign = triangleIsCounterClockwise(p0[0], p0[1], p1[0], p1[1], p2[0], p2[1])\n      ? -1 : 1;\n\n    numVertices = this.addVertices_(p0, p1, p2,\n      sign * Instruction.BEVEL_FIRST * (lineJoin || 1), numVertices);\n\n    numVertices = this.addVertices_(p0, p1, p2,\n      sign * Instruction.BEVEL_SECOND * (lineJoin || 1), numVertices);\n\n    numVertices = this.addVertices_(p0, p1, p2,\n      -sign * Instruction.MITER_BOTTOM * (lineJoin || 1), numVertices);\n\n    if (i > offset) {\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = lastIndex - 1;\n      this.indices[numIndices++] = lastIndex;\n\n      this.indices[numIndices++] = n + 2;\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = lastSign * sign > 0 ? lastIndex : lastIndex - 1;\n    }\n\n    this.indices[numIndices++] = n;\n    this.indices[numIndices++] = n + 2;\n    this.indices[numIndices++] = n + 1;\n\n    lastIndex = n + 2;\n    lastSign = sign;\n\n    //Add miter\n    if (lineJoin) {\n      numVertices = this.addVertices_(p0, p1, p2,\n        sign * Instruction.MITER_TOP * lineJoin, numVertices);\n\n      this.indices[numIndices++] = n + 1;\n      this.indices[numIndices++] = n + 3;\n      this.indices[numIndices++] = n;\n    }\n  }\n\n  if (closed) {\n    n = n || numVertices / 7;\n    sign = linearRingIsClockwise([p0[0], p0[1], p1[0], p1[1], p2[0], p2[1]], 0, 6, 2)\n      ? 1 : -1;\n\n    numVertices = this.addVertices_(p0, p1, p2,\n      sign * Instruction.BEVEL_FIRST * (lineJoin || 1), numVertices);\n\n    numVertices = this.addVertices_(p0, p1, p2,\n      -sign * Instruction.MITER_BOTTOM * (lineJoin || 1), numVertices);\n\n    this.indices[numIndices++] = n;\n    this.indices[numIndices++] = lastIndex - 1;\n    this.indices[numIndices++] = lastIndex;\n\n    this.indices[numIndices++] = n + 1;\n    this.indices[numIndices++] = n;\n    this.indices[numIndices++] = lastSign * sign > 0 ? lastIndex : lastIndex - 1;\n  }\n};\n\n/**\n * @param {Array.<number>} p0 Last coordinates.\n * @param {Array.<number>} p1 Current coordinates.\n * @param {Array.<number>} p2 Next coordinates.\n * @param {number} product Sign, instruction, and rounding product.\n * @param {number} numVertices Vertex counter.\n * @return {number} Vertex counter.\n * @private\n */\nWebGLLineStringReplay.prototype.addVertices_ = function(p0, p1, p2, product, numVertices) {\n  this.vertices[numVertices++] = p0[0];\n  this.vertices[numVertices++] = p0[1];\n  this.vertices[numVertices++] = p1[0];\n  this.vertices[numVertices++] = p1[1];\n  this.vertices[numVertices++] = p2[0];\n  this.vertices[numVertices++] = p2[1];\n  this.vertices[numVertices++] = product;\n\n  return numVertices;\n};\n\n/**\n * Check if the linestring can be drawn (i. e. valid).\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} The linestring can be drawn.\n * @private\n */\nWebGLLineStringReplay.prototype.isValid_ = function(flatCoordinates, offset, end, stride) {\n  const range = end - offset;\n  if (range < stride * 2) {\n    return false;\n  } else if (range === stride * 2) {\n    const firstP = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    const lastP = [flatCoordinates[offset + stride], flatCoordinates[offset + stride + 1]];\n    return !equals(firstP, lastP);\n  }\n\n  return true;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLLineStringReplay.prototype.drawLineString = function(lineStringGeometry, feature) {\n  let flatCoordinates = lineStringGeometry.getFlatCoordinates();\n  const stride = lineStringGeometry.getStride();\n  if (this.isValid_(flatCoordinates, 0, flatCoordinates.length, stride)) {\n    flatCoordinates = translate(flatCoordinates, 0, flatCoordinates.length,\n      stride, -this.origin[0], -this.origin[1]);\n    if (this.state_.changed) {\n      this.styleIndices_.push(this.indices.length);\n      this.state_.changed = false;\n    }\n    this.startIndices.push(this.indices.length);\n    this.startIndicesFeature.push(feature);\n    this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLLineStringReplay.prototype.drawMultiLineString = function(multiLineStringGeometry, feature) {\n  const indexCount = this.indices.length;\n  const ends = multiLineStringGeometry.getEnds();\n  ends.unshift(0);\n  const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n  const stride = multiLineStringGeometry.getStride();\n  let i, ii;\n  if (ends.length > 1) {\n    for (i = 1, ii = ends.length; i < ii; ++i) {\n      if (this.isValid_(flatCoordinates, ends[i - 1], ends[i], stride)) {\n        const lineString = translate(flatCoordinates, ends[i - 1], ends[i],\n          stride, -this.origin[0], -this.origin[1]);\n        this.drawCoordinates_(\n          lineString, 0, lineString.length, stride);\n      }\n    }\n  }\n  if (this.indices.length > indexCount) {\n    this.startIndices.push(indexCount);\n    this.startIndicesFeature.push(feature);\n    if (this.state_.changed) {\n      this.styleIndices_.push(indexCount);\n      this.state_.changed = false;\n    }\n  }\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} holeFlatCoordinates Hole flat coordinates.\n * @param {number} stride Stride.\n */\nWebGLLineStringReplay.prototype.drawPolygonCoordinates = function(\n  flatCoordinates, holeFlatCoordinates, stride) {\n  if (!lineStringIsClosed(flatCoordinates, 0, flatCoordinates.length, stride)) {\n    flatCoordinates.push(flatCoordinates[0]);\n    flatCoordinates.push(flatCoordinates[1]);\n  }\n  this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n  if (holeFlatCoordinates.length) {\n    let i, ii;\n    for (i = 0, ii = holeFlatCoordinates.length; i < ii; ++i) {\n      if (!lineStringIsClosed(holeFlatCoordinates[i], 0, holeFlatCoordinates[i].length, stride)) {\n        holeFlatCoordinates[i].push(holeFlatCoordinates[i][0]);\n        holeFlatCoordinates[i].push(holeFlatCoordinates[i][1]);\n      }\n      this.drawCoordinates_(holeFlatCoordinates[i], 0,\n        holeFlatCoordinates[i].length, stride);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {number=} opt_index Index count.\n */\nWebGLLineStringReplay.prototype.setPolygonStyle = function(feature, opt_index) {\n  const index = opt_index === undefined ? this.indices.length : opt_index;\n  this.startIndices.push(index);\n  this.startIndicesFeature.push(feature);\n  if (this.state_.changed) {\n    this.styleIndices_.push(index);\n    this.state_.changed = false;\n  }\n};\n\n\n/**\n * @return {number} Current index.\n */\nWebGLLineStringReplay.prototype.getCurrentIndex = function() {\n  return this.indices.length;\n};\n\n\n/**\n * @inheritDoc\n **/\nWebGLLineStringReplay.prototype.finish = function(context) {\n  // create, bind, and populate the vertices buffer\n  this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n  // create, bind, and populate the indices buffer\n  this.indicesBuffer = new WebGLBuffer(this.indices);\n\n  this.startIndices.push(this.indices.length);\n\n  //Clean up, if there is nothing to draw\n  if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n    this.styles_ = [];\n  }\n\n  this.vertices = null;\n  this.indices = null;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLLineStringReplay.prototype.getDeleteResourcesFunction = function(context) {\n  const verticesBuffer = this.verticesBuffer;\n  const indicesBuffer = this.indicesBuffer;\n  return function() {\n    context.deleteBuffer(verticesBuffer);\n    context.deleteBuffer(indicesBuffer);\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLLineStringReplay.prototype.setUpProgram = function(gl, context, size, pixelRatio) {\n  // get the program\n  const program = context.getProgram(fragment, vertex);\n\n  // get the locations\n  let locations;\n  if (!this.defaultLocations_) {\n    locations = new Locations(gl, program);\n    this.defaultLocations_ = locations;\n  } else {\n    locations = this.defaultLocations_;\n  }\n\n  context.useProgram(program);\n\n  // enable the vertex attrib arrays\n  gl.enableVertexAttribArray(locations.a_lastPos);\n  gl.vertexAttribPointer(locations.a_lastPos, 2, FLOAT,\n    false, 28, 0);\n\n  gl.enableVertexAttribArray(locations.a_position);\n  gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n    false, 28, 8);\n\n  gl.enableVertexAttribArray(locations.a_nextPos);\n  gl.vertexAttribPointer(locations.a_nextPos, 2, FLOAT,\n    false, 28, 16);\n\n  gl.enableVertexAttribArray(locations.a_direction);\n  gl.vertexAttribPointer(locations.a_direction, 1, FLOAT,\n    false, 28, 24);\n\n  // Enable renderer specific uniforms.\n  gl.uniform2fv(locations.u_size, size);\n  gl.uniform1f(locations.u_pixelRatio, pixelRatio);\n\n  return locations;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLLineStringReplay.prototype.shutDownProgram = function(gl, locations) {\n  gl.disableVertexAttribArray(locations.a_lastPos);\n  gl.disableVertexAttribArray(locations.a_position);\n  gl.disableVertexAttribArray(locations.a_nextPos);\n  gl.disableVertexAttribArray(locations.a_direction);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLLineStringReplay.prototype.drawReplay = function(gl, context, skippedFeaturesHash, hitDetection) {\n  //Save GL parameters.\n  const tmpDepthFunc = /** @type {number} */ (gl.getParameter(gl.DEPTH_FUNC));\n  const tmpDepthMask = /** @type {boolean} */ (gl.getParameter(gl.DEPTH_WRITEMASK));\n\n  if (!hitDetection) {\n    gl.enable(gl.DEPTH_TEST);\n    gl.depthMask(true);\n    gl.depthFunc(gl.NOTEQUAL);\n  }\n\n  if (!isEmpty(skippedFeaturesHash)) {\n    this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n  } else {\n    //Draw by style groups to minimize drawElements() calls.\n    let i, start, end, nextStyle;\n    end = this.startIndices[this.startIndices.length - 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      start = this.styleIndices_[i];\n      nextStyle = this.styles_[i];\n      this.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n      this.drawElements(gl, context, start, end);\n      gl.clear(gl.DEPTH_BUFFER_BIT);\n      end = start;\n    }\n  }\n  if (!hitDetection) {\n    gl.disable(gl.DEPTH_TEST);\n    gl.clear(gl.DEPTH_BUFFER_BIT);\n    //Restore GL parameters.\n    gl.depthMask(tmpDepthMask);\n    gl.depthFunc(tmpDepthFunc);\n  }\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {Object} skippedFeaturesHash Ids of features to skip.\n */\nWebGLLineStringReplay.prototype.drawReplaySkipping_ = function(gl, context, skippedFeaturesHash) {\n  let i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex, featureStart;\n  featureIndex = this.startIndices.length - 2;\n  end = start = this.startIndices[featureIndex + 1];\n  for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n    nextStyle = this.styles_[i];\n    this.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n    groupStart = this.styleIndices_[i];\n\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      featureStart = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid]) {\n        if (start !== end) {\n          this.drawElements(gl, context, start, end);\n          gl.clear(gl.DEPTH_BUFFER_BIT);\n        }\n        end = featureStart;\n      }\n      featureIndex--;\n      start = featureStart;\n    }\n    if (start !== end) {\n      this.drawElements(gl, context, start, end);\n      gl.clear(gl.DEPTH_BUFFER_BIT);\n    }\n    start = end = groupStart;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLLineStringReplay.prototype.drawHitDetectionReplayOneByOne = function(gl, context, skippedFeaturesHash,\n  featureCallback, opt_hitExtent) {\n  let i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex;\n  featureIndex = this.startIndices.length - 2;\n  end = this.startIndices[featureIndex + 1];\n  for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n    nextStyle = this.styles_[i];\n    this.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n    groupStart = this.styleIndices_[i];\n\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      start = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid] === undefined &&\n          feature.getGeometry() &&\n          (opt_hitExtent === undefined || intersects(\n            /** @type {Array<number>} */ (opt_hitExtent),\n            feature.getGeometry().getExtent()))) {\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        this.drawElements(gl, context, start, end);\n\n        const result = featureCallback(feature);\n\n        if (result) {\n          return result;\n        }\n\n      }\n      featureIndex--;\n      end = start;\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {Array.<number>} color Color.\n * @param {number} lineWidth Line width.\n * @param {number} miterLimit Miter limit.\n */\nWebGLLineStringReplay.prototype.setStrokeStyle_ = function(gl, color, lineWidth, miterLimit) {\n  gl.uniform4fv(this.defaultLocations_.u_color, color);\n  gl.uniform1f(this.defaultLocations_.u_lineWidth, lineWidth);\n  gl.uniform1f(this.defaultLocations_.u_miterLimit, miterLimit);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLLineStringReplay.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  const strokeStyleLineCap = strokeStyle.getLineCap();\n  this.state_.lineCap = strokeStyleLineCap !== undefined ?\n    strokeStyleLineCap : DEFAULT_LINECAP;\n  const strokeStyleLineDash = strokeStyle.getLineDash();\n  this.state_.lineDash = strokeStyleLineDash ?\n    strokeStyleLineDash : DEFAULT_LINEDASH;\n  const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n  this.state_.lineDashOffset = strokeStyleLineDashOffset ?\n    strokeStyleLineDashOffset : DEFAULT_LINEDASHOFFSET;\n  const strokeStyleLineJoin = strokeStyle.getLineJoin();\n  this.state_.lineJoin = strokeStyleLineJoin !== undefined ?\n    strokeStyleLineJoin : DEFAULT_LINEJOIN;\n  let strokeStyleColor = strokeStyle.getColor();\n  if (!(strokeStyleColor instanceof CanvasGradient) &&\n      !(strokeStyleColor instanceof CanvasPattern)) {\n    strokeStyleColor = asArray(strokeStyleColor).map(function(c, i) {\n      return i != 3 ? c / 255 : c;\n    }) || DEFAULT_STROKESTYLE;\n  } else {\n    strokeStyleColor = DEFAULT_STROKESTYLE;\n  }\n  let strokeStyleWidth = strokeStyle.getWidth();\n  strokeStyleWidth = strokeStyleWidth !== undefined ?\n    strokeStyleWidth : DEFAULT_LINEWIDTH;\n  let strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n  strokeStyleMiterLimit = strokeStyleMiterLimit !== undefined ?\n    strokeStyleMiterLimit : DEFAULT_MITERLIMIT;\n  if (!this.state_.strokeColor || !equals(this.state_.strokeColor, strokeStyleColor) ||\n      this.state_.lineWidth !== strokeStyleWidth || this.state_.miterLimit !== strokeStyleMiterLimit) {\n    this.state_.changed = true;\n    this.state_.strokeColor = strokeStyleColor;\n    this.state_.lineWidth = strokeStyleWidth;\n    this.state_.miterLimit = strokeStyleMiterLimit;\n    this.styles_.push([strokeStyleColor, strokeStyleWidth, strokeStyleMiterLimit]);\n  }\n};\n\nexport default WebGLLineStringReplay;\n","/**\n * @module ol/render/webgl/polygonreplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport const fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\n\\n\\n\\nuniform vec4 u_color;\\nuniform float u_opacity;\\n\\nvoid main(void) {\\n  gl_FragColor = u_color;\\n  float alpha = u_color.a * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;uniform vec4 e;uniform float f;void main(void){gl_FragColor=e;float alpha=e.a*f;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\nexport const vertex = new WebGLVertex(DEBUG_WEBGL ?\n  '\\n\\nattribute vec2 a_position;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\n\\nvoid main(void) {\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\\n}\\n\\n\\n' :\n  'attribute vec2 a;uniform mat4 b;uniform mat4 c;uniform mat4 d;void main(void){gl_Position=b*vec4(a,0.0,1.0);}');\n","/**\n * @module ol/render/webgl/polygonreplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\n/**\n * @constructor\n * @param {WebGLRenderingContext} gl GL.\n * @param {WebGLProgram} program Program.\n * @struct\n */\nconst Locations = function(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'b');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'c');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'd');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_color = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_color' : 'e');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'a');\n};\n\nexport default Locations;\n","/**\n * @module ol/structs/LinkedList\n */\n\n\n/**\n * @typedef {Object} Item\n * @property {module:ol/structs/LinkedList~Item} [prev]\n * @property {module:ol/structs/LinkedList~Item} [next]\n * @property {?} data\n */\n\n\n/**\n * Creates an empty linked list structure.\n *\n * @constructor\n * @struct\n * @param {boolean=} opt_circular The last item is connected to the first one,\n * and the first item to the last one. Default is true.\n */\nconst LinkedList = function(opt_circular) {\n\n  /**\n   * @private\n   * @type {module:ol/structs/LinkedList~Item|undefined}\n   */\n  this.first_;\n\n  /**\n   * @private\n   * @type {module:ol/structs/LinkedList~Item|undefined}\n   */\n  this.last_;\n\n  /**\n   * @private\n   * @type {module:ol/structs/LinkedList~Item|undefined}\n   */\n  this.head_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.circular_ = opt_circular === undefined ? true : opt_circular;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.length_ = 0;\n};\n\n/**\n * Inserts an item into the linked list right after the current one.\n *\n * @param {?} data Item data.\n */\nLinkedList.prototype.insertItem = function(data) {\n\n  /** @type {module:ol/structs/LinkedList~Item} */\n  const item = {\n    prev: undefined,\n    next: undefined,\n    data: data\n  };\n\n  const head = this.head_;\n\n  //Initialize the list.\n  if (!head) {\n    this.first_ = item;\n    this.last_ = item;\n    if (this.circular_) {\n      item.next = item;\n      item.prev = item;\n    }\n  } else {\n    //Link the new item to the adjacent ones.\n    const next = head.next;\n    item.prev = head;\n    item.next = next;\n    head.next = item;\n    if (next) {\n      next.prev = item;\n    }\n\n    if (head === this.last_) {\n      this.last_ = item;\n    }\n  }\n  this.head_ = item;\n  this.length_++;\n};\n\n/**\n * Removes the current item from the list. Sets the cursor to the next item,\n * if possible.\n */\nLinkedList.prototype.removeItem = function() {\n  const head = this.head_;\n  if (head) {\n    const next = head.next;\n    const prev = head.prev;\n    if (next) {\n      next.prev = prev;\n    }\n    if (prev) {\n      prev.next = next;\n    }\n    this.head_ = next || prev;\n\n    if (this.first_ === this.last_) {\n      this.head_ = undefined;\n      this.first_ = undefined;\n      this.last_ = undefined;\n    } else if (this.first_ === head) {\n      this.first_ = this.head_;\n    } else if (this.last_ === head) {\n      this.last_ = prev ? this.head_.prev : this.head_;\n    }\n    this.length_--;\n  }\n};\n\n/**\n * Sets the cursor to the first item, and returns the associated data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.firstItem = function() {\n  this.head_ = this.first_;\n  if (this.head_) {\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n* Sets the cursor to the last item, and returns the associated data.\n*\n* @return {?} Item data.\n*/\nLinkedList.prototype.lastItem = function() {\n  this.head_ = this.last_;\n  if (this.head_) {\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Sets the cursor to the next item, and returns the associated data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.nextItem = function() {\n  if (this.head_ && this.head_.next) {\n    this.head_ = this.head_.next;\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Returns the next item's data without moving the cursor.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.getNextItem = function() {\n  if (this.head_ && this.head_.next) {\n    return this.head_.next.data;\n  }\n  return undefined;\n};\n\n/**\n * Sets the cursor to the previous item, and returns the associated data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.prevItem = function() {\n  if (this.head_ && this.head_.prev) {\n    this.head_ = this.head_.prev;\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Returns the previous item's data without moving the cursor.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.getPrevItem = function() {\n  if (this.head_ && this.head_.prev) {\n    return this.head_.prev.data;\n  }\n  return undefined;\n};\n\n/**\n * Returns the current item's data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.getCurrItem = function() {\n  if (this.head_) {\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Sets the first item of the list. This only works for circular lists, and sets\n * the last item accordingly.\n */\nLinkedList.prototype.setFirstItem = function() {\n  if (this.circular_ && this.head_) {\n    this.first_ = this.head_;\n    this.last_ = this.head_.prev;\n  }\n};\n\n/**\n * Concatenates two lists.\n * @param {module:ol/structs/LinkedList} list List to merge into the current list.\n */\nLinkedList.prototype.concat = function(list) {\n  if (list.head_) {\n    if (this.head_) {\n      const end = this.head_.next;\n      this.head_.next = list.first_;\n      list.first_.prev = this.head_;\n      end.prev = list.last_;\n      list.last_.next = end;\n      this.length_ += list.length_;\n    } else {\n      this.head_ = list.head_;\n      this.first_ = list.first_;\n      this.last_ = list.last_;\n      this.length_ = list.length_;\n    }\n    list.head_ = undefined;\n    list.first_ = undefined;\n    list.last_ = undefined;\n    list.length_ = 0;\n  }\n};\n\n/**\n * Returns the current length of the list.\n *\n * @return {number} Length.\n */\nLinkedList.prototype.getLength = function() {\n  return this.length_;\n};\nexport default LinkedList;\n","/**\n * @module ol/render/webgl/PolygonReplay\n */\nimport {getUid, inherits} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {intersects} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {linearRingContainsXY} from '../../geom/flat/contains.js';\nimport {linearRingIsClockwise} from '../../geom/flat/orient.js';\nimport {translate} from '../../geom/flat/transform.js';\nimport {fragment, vertex} from '../webgl/polygonreplay/defaultshader.js';\nimport Locations from '../webgl/polygonreplay/defaultshader/Locations.js';\nimport WebGLLineStringReplay from '../webgl/LineStringReplay.js';\nimport WebGLReplay from '../webgl/Replay.js';\nimport {triangleIsCounterClockwise, EPSILON, DEFAULT_FILLSTYLE} from '../webgl.js';\nimport Stroke from '../../style/Stroke.js';\nimport LinkedList from '../../structs/LinkedList.js';\nimport RBush from '../../structs/RBush.js';\nimport {FLOAT} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n\n/**\n * @typedef {Object} PolygonVertex\n * @property {number} x\n * @property {number} y\n * @property {number} i\n * @property {boolean} [reflex]\n */\n\n/**\n * @typedef {Object} PolygonSegment\n * @property {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0\n * @property {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/render/webgl/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @struct\n */\nconst WebGLPolygonReplay = function(tolerance, maxExtent) {\n  WebGLReplay.call(this, tolerance, maxExtent);\n\n  this.lineStringReplay = new WebGLLineStringReplay(\n    tolerance, maxExtent);\n\n  /**\n   * @private\n   * @type {module:ol/render/webgl/polygonreplay/defaultshader/Locations}\n   */\n  this.defaultLocations_ = null;\n\n  /**\n   * @private\n   * @type {Array.<Array.<number>>}\n   */\n  this.styles_ = [];\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.styleIndices_ = [];\n\n  /**\n   * @private\n   * @type {{fillColor: (Array.<number>|null),\n   *         changed: boolean}|null}\n   */\n  this.state_ = {\n    fillColor: null,\n    changed: false\n  };\n\n};\n\ninherits(WebGLPolygonReplay, WebGLReplay);\n\n\n/**\n * Draw one polygon.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} holeFlatCoordinates Hole flat coordinates.\n * @param {number} stride Stride.\n * @private\n */\nWebGLPolygonReplay.prototype.drawCoordinates_ = function(\n  flatCoordinates, holeFlatCoordinates, stride) {\n  // Triangulate the polygon\n  const outerRing = new LinkedList();\n  const rtree = new RBush();\n  // Initialize the outer ring\n  this.processFlatCoordinates_(flatCoordinates, stride, outerRing, rtree, true);\n  const maxCoords = this.getMaxCoords_(outerRing);\n\n  // Eliminate holes, if there are any\n  if (holeFlatCoordinates.length) {\n    let i, ii;\n    const holeLists = [];\n    for (i = 0, ii = holeFlatCoordinates.length; i < ii; ++i) {\n      const holeList = {\n        list: new LinkedList(),\n        maxCoords: undefined,\n        rtree: new RBush()\n      };\n      holeLists.push(holeList);\n      this.processFlatCoordinates_(holeFlatCoordinates[i],\n        stride, holeList.list, holeList.rtree, false);\n      this.classifyPoints_(holeList.list, holeList.rtree, true);\n      holeList.maxCoords = this.getMaxCoords_(holeList.list);\n    }\n    holeLists.sort(function(a, b) {\n      return b.maxCoords[0] === a.maxCoords[0] ?\n        a.maxCoords[1] - b.maxCoords[1] : b.maxCoords[0] - a.maxCoords[0];\n    });\n    for (i = 0; i < holeLists.length; ++i) {\n      const currList = holeLists[i].list;\n      const start = currList.firstItem();\n      let currItem = start;\n      let intersection;\n      do {\n        //TODO: Triangulate holes when they intersect the outer ring.\n        if (this.getIntersections_(currItem, rtree).length) {\n          intersection = true;\n          break;\n        }\n        currItem = currList.nextItem();\n      } while (start !== currItem);\n      if (!intersection) {\n        if (this.bridgeHole_(currList, holeLists[i].maxCoords[0], outerRing, maxCoords[0], rtree)) {\n          rtree.concat(holeLists[i].rtree);\n          this.classifyPoints_(outerRing, rtree, false);\n        }\n      }\n    }\n  } else {\n    this.classifyPoints_(outerRing, rtree, false);\n  }\n  this.triangulate_(outerRing, rtree);\n};\n\n\n/**\n * Inserts flat coordinates in a linked list and adds them to the vertex buffer.\n * @private\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {module:ol/structs/LinkedList} list Linked list.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n * @param {boolean} clockwise Coordinate order should be clockwise.\n */\nWebGLPolygonReplay.prototype.processFlatCoordinates_ = function(\n  flatCoordinates, stride, list, rtree, clockwise) {\n  const isClockwise = linearRingIsClockwise(flatCoordinates,\n    0, flatCoordinates.length, stride);\n  let i, ii;\n  let n = this.vertices.length / 2;\n  /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n  let start;\n  /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n  let p0;\n  /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n  let p1;\n  const extents = [];\n  const segments = [];\n  if (clockwise === isClockwise) {\n    start = this.createPoint_(flatCoordinates[0], flatCoordinates[1], n++);\n    p0 = start;\n    for (i = stride, ii = flatCoordinates.length; i < ii; i += stride) {\n      p1 = this.createPoint_(flatCoordinates[i], flatCoordinates[i + 1], n++);\n      segments.push(this.insertItem_(p0, p1, list));\n      extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n        Math.max(p0.y, p1.y)]);\n      p0 = p1;\n    }\n    segments.push(this.insertItem_(p1, start, list));\n    extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n      Math.max(p0.y, p1.y)]);\n  } else {\n    const end = flatCoordinates.length - stride;\n    start = this.createPoint_(flatCoordinates[end], flatCoordinates[end + 1], n++);\n    p0 = start;\n    for (i = end - stride, ii = 0; i >= ii; i -= stride) {\n      p1 = this.createPoint_(flatCoordinates[i], flatCoordinates[i + 1], n++);\n      segments.push(this.insertItem_(p0, p1, list));\n      extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n        Math.max(p0.y, p1.y)]);\n      p0 = p1;\n    }\n    segments.push(this.insertItem_(p1, start, list));\n    extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n      Math.max(p0.y, p1.y)]);\n  }\n  rtree.load(extents, segments);\n};\n\n\n/**\n * Returns the rightmost coordinates of a polygon on the X axis.\n * @private\n * @param {module:ol/structs/LinkedList} list Polygons ring.\n * @return {Array.<number>} Max X coordinates.\n */\nWebGLPolygonReplay.prototype.getMaxCoords_ = function(list) {\n  const start = list.firstItem();\n  let seg = start;\n  let maxCoords = [seg.p0.x, seg.p0.y];\n\n  do {\n    seg = list.nextItem();\n    if (seg.p0.x > maxCoords[0]) {\n      maxCoords = [seg.p0.x, seg.p0.y];\n    }\n  } while (seg !== start);\n\n  return maxCoords;\n};\n\n\n/**\n * Classifies the points of a polygon list as convex, reflex. Removes collinear vertices.\n * @private\n * @param {module:ol/structs/LinkedList} list Polygon ring.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n * @param {boolean} ccw The orientation of the polygon is counter-clockwise.\n * @return {boolean} There were reclassified points.\n */\nWebGLPolygonReplay.prototype.classifyPoints_ = function(list, rtree, ccw) {\n  let start = list.firstItem();\n  let s0 = start;\n  let s1 = list.nextItem();\n  let pointsReclassified = false;\n  do {\n    const reflex = ccw ? triangleIsCounterClockwise(s1.p1.x,\n      s1.p1.y, s0.p1.x, s0.p1.y, s0.p0.x, s0.p0.y) :\n      triangleIsCounterClockwise(s0.p0.x, s0.p0.y, s0.p1.x,\n        s0.p1.y, s1.p1.x, s1.p1.y);\n    if (reflex === undefined) {\n      this.removeItem_(s0, s1, list, rtree);\n      pointsReclassified = true;\n      if (s1 === start) {\n        start = list.getNextItem();\n      }\n      s1 = s0;\n      list.prevItem();\n    } else if (s0.p1.reflex !== reflex) {\n      s0.p1.reflex = reflex;\n      pointsReclassified = true;\n    }\n    s0 = s1;\n    s1 = list.nextItem();\n  } while (s0 !== start);\n  return pointsReclassified;\n};\n\n\n/**\n * @private\n * @param {module:ol/structs/LinkedList} hole Linked list of the hole.\n * @param {number} holeMaxX Maximum X value of the hole.\n * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n * @param {number} listMaxX Maximum X value of the polygon.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n * @return {boolean} Bridging was successful.\n */\nWebGLPolygonReplay.prototype.bridgeHole_ = function(hole, holeMaxX,\n  list, listMaxX, rtree) {\n  let seg = hole.firstItem();\n  while (seg.p1.x !== holeMaxX) {\n    seg = hole.nextItem();\n  }\n\n  const p1 = seg.p1;\n  /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n  const p2 = {x: listMaxX, y: p1.y, i: -1};\n  let minDist = Infinity;\n  let i, ii, bestPoint;\n  /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n  let p5;\n\n  const intersectingSegments = this.getIntersections_({p0: p1, p1: p2}, rtree, true);\n  for (i = 0, ii = intersectingSegments.length; i < ii; ++i) {\n    const currSeg = intersectingSegments[i];\n    const intersection = this.calculateIntersection_(p1, p2, currSeg.p0,\n      currSeg.p1, true);\n    const dist = Math.abs(p1.x - intersection[0]);\n    if (dist < minDist && triangleIsCounterClockwise(p1.x, p1.y,\n      currSeg.p0.x, currSeg.p0.y, currSeg.p1.x, currSeg.p1.y) !== undefined) {\n      minDist = dist;\n      p5 = {x: intersection[0], y: intersection[1], i: -1};\n      seg = currSeg;\n    }\n  }\n  if (minDist === Infinity) {\n    return false;\n  }\n  bestPoint = seg.p1;\n\n  if (minDist > 0) {\n    const pointsInTriangle = this.getPointsInTriangle_(p1, p5, seg.p1, rtree);\n    if (pointsInTriangle.length) {\n      let theta = Infinity;\n      for (i = 0, ii = pointsInTriangle.length; i < ii; ++i) {\n        const currPoint = pointsInTriangle[i];\n        const currTheta = Math.atan2(p1.y - currPoint.y, p2.x - currPoint.x);\n        if (currTheta < theta || (currTheta === theta && currPoint.x < bestPoint.x)) {\n          theta = currTheta;\n          bestPoint = currPoint;\n        }\n      }\n    }\n  }\n\n  seg = list.firstItem();\n  while (seg.p1.x !== bestPoint.x || seg.p1.y !== bestPoint.y) {\n    seg = list.nextItem();\n  }\n\n  //We clone the bridge points as they can have different convexity.\n  const p0Bridge = {x: p1.x, y: p1.y, i: p1.i, reflex: undefined};\n  const p1Bridge = {x: seg.p1.x, y: seg.p1.y, i: seg.p1.i, reflex: undefined};\n\n  hole.getNextItem().p0 = p0Bridge;\n  this.insertItem_(p1, seg.p1, hole, rtree);\n  this.insertItem_(p1Bridge, p0Bridge, hole, rtree);\n  seg.p1 = p1Bridge;\n  hole.setFirstItem();\n  list.concat(hole);\n\n  return true;\n};\n\n\n/**\n * @private\n * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n */\nWebGLPolygonReplay.prototype.triangulate_ = function(list, rtree) {\n  let ccw = false;\n  let simple = this.isSimple_(list, rtree);\n\n  // Start clipping ears\n  while (list.getLength() > 3) {\n    if (simple) {\n      if (!this.clipEars_(list, rtree, simple, ccw)) {\n        if (!this.classifyPoints_(list, rtree, ccw)) {\n          // Due to the behavior of OL's PIP algorithm, the ear clipping cannot\n          // introduce touching segments. However, the original data may have some.\n          if (!this.resolveSelfIntersections_(list, rtree, true)) {\n            break;\n          }\n        }\n      }\n    } else {\n      if (!this.clipEars_(list, rtree, simple, ccw)) {\n        // We ran out of ears, try to reclassify.\n        if (!this.classifyPoints_(list, rtree, ccw)) {\n          // We have a bad polygon, try to resolve local self-intersections.\n          if (!this.resolveSelfIntersections_(list, rtree)) {\n            simple = this.isSimple_(list, rtree);\n            if (!simple) {\n              // We have a really bad polygon, try more time consuming methods.\n              this.splitPolygon_(list, rtree);\n              break;\n            } else {\n              ccw = !this.isClockwise_(list);\n              this.classifyPoints_(list, rtree, ccw);\n            }\n          }\n        }\n      }\n    }\n  }\n  if (list.getLength() === 3) {\n    let numIndices = this.indices.length;\n    this.indices[numIndices++] = list.getPrevItem().p0.i;\n    this.indices[numIndices++] = list.getCurrItem().p0.i;\n    this.indices[numIndices++] = list.getNextItem().p0.i;\n  }\n};\n\n\n/**\n * @private\n * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n * @param {boolean} simple The polygon is simple.\n * @param {boolean} ccw Orientation of the polygon is counter-clockwise.\n * @return {boolean} There were processed ears.\n */\nWebGLPolygonReplay.prototype.clipEars_ = function(list, rtree, simple, ccw) {\n  let numIndices = this.indices.length;\n  let start = list.firstItem();\n  let s0 = list.getPrevItem();\n  let s1 = start;\n  let s2 = list.nextItem();\n  let s3 = list.getNextItem();\n  let p0, p1, p2;\n  let processedEars = false;\n  do {\n    p0 = s1.p0;\n    p1 = s1.p1;\n    p2 = s2.p1;\n    if (p1.reflex === false) {\n      // We might have a valid ear\n      let variableCriterion;\n      if (simple) {\n        variableCriterion = this.getPointsInTriangle_(p0, p1, p2, rtree, true).length === 0;\n      } else {\n        variableCriterion = ccw ? this.diagonalIsInside_(s3.p1, p2, p1, p0,\n          s0.p0) : this.diagonalIsInside_(s0.p0, p0, p1, p2, s3.p1);\n      }\n      if ((simple || this.getIntersections_({p0: p0, p1: p2}, rtree).length === 0) &&\n          variableCriterion) {\n        //The diagonal is completely inside the polygon\n        if (simple || p0.reflex === false || p2.reflex === false ||\n            linearRingIsClockwise([s0.p0.x, s0.p0.y, p0.x,\n              p0.y, p1.x, p1.y, p2.x, p2.y, s3.p1.x, s3.p1.y], 0, 10, 2) === !ccw) {\n          //The diagonal is persumably valid, we have an ear\n          this.indices[numIndices++] = p0.i;\n          this.indices[numIndices++] = p1.i;\n          this.indices[numIndices++] = p2.i;\n          this.removeItem_(s1, s2, list, rtree);\n          if (s2 === start) {\n            start = s3;\n          }\n          processedEars = true;\n        }\n      }\n    }\n    // Else we have a reflex point.\n    s0 = list.getPrevItem();\n    s1 = list.getCurrItem();\n    s2 = list.nextItem();\n    s3 = list.getNextItem();\n  } while (s1 !== start && list.getLength() > 3);\n\n  return processedEars;\n};\n\n\n/**\n * @private\n * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n * @param {boolean=} opt_touch Resolve touching segments.\n * @return {boolean} There were resolved intersections.\n*/\nWebGLPolygonReplay.prototype.resolveSelfIntersections_ = function(\n  list, rtree, opt_touch) {\n  const start = list.firstItem();\n  list.nextItem();\n  let s0 = start;\n  let s1 = list.nextItem();\n  let resolvedIntersections = false;\n\n  do {\n    const intersection = this.calculateIntersection_(s0.p0, s0.p1, s1.p0, s1.p1,\n      opt_touch);\n    if (intersection) {\n      let breakCond = false;\n      const numVertices = this.vertices.length;\n      let numIndices = this.indices.length;\n      const n = numVertices / 2;\n      const seg = list.prevItem();\n      list.removeItem();\n      rtree.remove(seg);\n      breakCond = (seg === start);\n      let p;\n      if (opt_touch) {\n        if (intersection[0] === s0.p0.x && intersection[1] === s0.p0.y) {\n          list.prevItem();\n          p = s0.p0;\n          s1.p0 = p;\n          rtree.remove(s0);\n          breakCond = breakCond || (s0 === start);\n        } else {\n          p = s1.p1;\n          s0.p1 = p;\n          rtree.remove(s1);\n          breakCond = breakCond || (s1 === start);\n        }\n        list.removeItem();\n      } else {\n        p = this.createPoint_(intersection[0], intersection[1], n);\n        s0.p1 = p;\n        s1.p0 = p;\n        rtree.update([Math.min(s0.p0.x, s0.p1.x), Math.min(s0.p0.y, s0.p1.y),\n          Math.max(s0.p0.x, s0.p1.x), Math.max(s0.p0.y, s0.p1.y)], s0);\n        rtree.update([Math.min(s1.p0.x, s1.p1.x), Math.min(s1.p0.y, s1.p1.y),\n          Math.max(s1.p0.x, s1.p1.x), Math.max(s1.p0.y, s1.p1.y)], s1);\n      }\n\n      this.indices[numIndices++] = seg.p0.i;\n      this.indices[numIndices++] = seg.p1.i;\n      this.indices[numIndices++] = p.i;\n\n      resolvedIntersections = true;\n      if (breakCond) {\n        break;\n      }\n    }\n\n    s0 = list.getPrevItem();\n    s1 = list.nextItem();\n  } while (s0 !== start);\n  return resolvedIntersections;\n};\n\n\n/**\n * @private\n * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n * @return {boolean} The polygon is simple.\n */\nWebGLPolygonReplay.prototype.isSimple_ = function(list, rtree) {\n  const start = list.firstItem();\n  let seg = start;\n  do {\n    if (this.getIntersections_(seg, rtree).length) {\n      return false;\n    }\n    seg = list.nextItem();\n  } while (seg !== start);\n  return true;\n};\n\n\n/**\n * @private\n * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n * @return {boolean} Orientation is clockwise.\n */\nWebGLPolygonReplay.prototype.isClockwise_ = function(list) {\n  const length = list.getLength() * 2;\n  const flatCoordinates = new Array(length);\n  const start = list.firstItem();\n  let seg = start;\n  let i = 0;\n  do {\n    flatCoordinates[i++] = seg.p0.x;\n    flatCoordinates[i++] = seg.p0.y;\n    seg = list.nextItem();\n  } while (seg !== start);\n  return linearRingIsClockwise(flatCoordinates, 0, length, 2);\n};\n\n\n/**\n * @private\n * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n */\nWebGLPolygonReplay.prototype.splitPolygon_ = function(list, rtree) {\n  const start = list.firstItem();\n  let s0 = start;\n  do {\n    const intersections = this.getIntersections_(s0, rtree);\n    if (intersections.length) {\n      const s1 = intersections[0];\n      const n = this.vertices.length / 2;\n      const intersection = this.calculateIntersection_(s0.p0,\n        s0.p1, s1.p0, s1.p1);\n      const p = this.createPoint_(intersection[0], intersection[1], n);\n      const newPolygon = new LinkedList();\n      const newRtree = new RBush();\n      this.insertItem_(p, s0.p1, newPolygon, newRtree);\n      s0.p1 = p;\n      rtree.update([Math.min(s0.p0.x, p.x), Math.min(s0.p0.y, p.y),\n        Math.max(s0.p0.x, p.x), Math.max(s0.p0.y, p.y)], s0);\n      let currItem = list.nextItem();\n      while (currItem !== s1) {\n        this.insertItem_(currItem.p0, currItem.p1, newPolygon, newRtree);\n        rtree.remove(currItem);\n        list.removeItem();\n        currItem = list.getCurrItem();\n      }\n      this.insertItem_(s1.p0, p, newPolygon, newRtree);\n      s1.p0 = p;\n      rtree.update([Math.min(s1.p1.x, p.x), Math.min(s1.p1.y, p.y),\n        Math.max(s1.p1.x, p.x), Math.max(s1.p1.y, p.y)], s1);\n      this.classifyPoints_(list, rtree, false);\n      this.triangulate_(list, rtree);\n      this.classifyPoints_(newPolygon, newRtree, false);\n      this.triangulate_(newPolygon, newRtree);\n      break;\n    }\n    s0 = list.nextItem();\n  } while (s0 !== start);\n};\n\n\n/**\n * @private\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @param {number} i Index.\n * @return {module:ol/render/webgl/PolygonReplay~PolygonVertex} List item.\n */\nWebGLPolygonReplay.prototype.createPoint_ = function(x, y, i) {\n  let numVertices = this.vertices.length;\n  this.vertices[numVertices++] = x;\n  this.vertices[numVertices++] = y;\n  /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n  const p = {\n    x: x,\n    y: y,\n    i: i,\n    reflex: undefined\n  };\n  return p;\n};\n\n\n/**\n * @private\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0 First point of segment.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1 Second point of segment.\n * @param {module:ol/structs/LinkedList} list Polygon ring.\n * @param {module:ol/structs/RBush=} opt_rtree Insert the segment into the R-Tree.\n * @return {module:ol/render/webgl/PolygonReplay~PolygonSegment} segment.\n */\nWebGLPolygonReplay.prototype.insertItem_ = function(p0, p1, list, opt_rtree) {\n  const seg = {\n    p0: p0,\n    p1: p1\n  };\n  list.insertItem(seg);\n  if (opt_rtree) {\n    opt_rtree.insert([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y),\n      Math.max(p0.x, p1.x), Math.max(p0.y, p1.y)], seg);\n  }\n  return seg;\n};\n\n\n/**\n  * @private\n  * @param {module:ol/render/webgl/PolygonReplay~PolygonSegment} s0 Segment before the remove candidate.\n  * @param {module:ol/render/webgl/PolygonReplay~PolygonSegment} s1 Remove candidate segment.\n  * @param {module:ol/structs/LinkedList} list Polygon ring.\n  * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n  */\nWebGLPolygonReplay.prototype.removeItem_ = function(s0, s1, list, rtree) {\n  if (list.getCurrItem() === s1) {\n    list.removeItem();\n    s0.p1 = s1.p1;\n    rtree.remove(s1);\n    rtree.update([Math.min(s0.p0.x, s0.p1.x), Math.min(s0.p0.y, s0.p1.y),\n      Math.max(s0.p0.x, s0.p1.x), Math.max(s0.p0.y, s0.p1.y)], s0);\n  }\n};\n\n\n/**\n * @private\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0 First point.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1 Second point.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p2 Third point.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n * @param {boolean=} opt_reflex Only include reflex points.\n * @return {Array.<module:ol/render/webgl/PolygonReplay~PolygonVertex>} Points in the triangle.\n */\nWebGLPolygonReplay.prototype.getPointsInTriangle_ = function(p0, p1, p2, rtree, opt_reflex) {\n  const result = [];\n  const segmentsInExtent = rtree.getInExtent([Math.min(p0.x, p1.x, p2.x),\n    Math.min(p0.y, p1.y, p2.y), Math.max(p0.x, p1.x, p2.x), Math.max(p0.y,\n      p1.y, p2.y)]);\n  for (let i = 0, ii = segmentsInExtent.length; i < ii; ++i) {\n    for (const j in segmentsInExtent[i]) {\n      const p = segmentsInExtent[i][j];\n      if (typeof p === 'object' && (!opt_reflex || p.reflex)) {\n        if ((p.x !== p0.x || p.y !== p0.y) && (p.x !== p1.x || p.y !== p1.y) &&\n            (p.x !== p2.x || p.y !== p2.y) && result.indexOf(p) === -1 &&\n            linearRingContainsXY([p0.x, p0.y, p1.x, p1.y, p2.x, p2.y], 0, 6, 2, p.x, p.y)) {\n          result.push(p);\n        }\n      }\n    }\n  }\n  return result;\n};\n\n\n/**\n * @private\n * @param {module:ol/render/webgl/PolygonReplay~PolygonSegment} segment Segment.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n * @param {boolean=} opt_touch Touching segments should be considered an intersection.\n * @return {Array.<module:ol/render/webgl/PolygonReplay~PolygonSegment>} Intersecting segments.\n */\nWebGLPolygonReplay.prototype.getIntersections_ = function(segment, rtree, opt_touch) {\n  const p0 = segment.p0;\n  const p1 = segment.p1;\n  const segmentsInExtent = rtree.getInExtent([Math.min(p0.x, p1.x),\n    Math.min(p0.y, p1.y), Math.max(p0.x, p1.x), Math.max(p0.y, p1.y)]);\n  const result = [];\n  for (let i = 0, ii = segmentsInExtent.length; i < ii; ++i) {\n    const currSeg = segmentsInExtent[i];\n    if (segment !== currSeg && (opt_touch || currSeg.p0 !== p1 || currSeg.p1 !== p0) &&\n        this.calculateIntersection_(p0, p1, currSeg.p0, currSeg.p1, opt_touch)) {\n      result.push(currSeg);\n    }\n  }\n  return result;\n};\n\n\n/**\n * Line intersection algorithm by Paul Bourke.\n * @see http://paulbourke.net/geometry/pointlineplane/\n *\n * @private\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0 First point.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1 Second point.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p2 Third point.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p3 Fourth point.\n * @param {boolean=} opt_touch Touching segments should be considered an intersection.\n * @return {Array.<number>|undefined} Intersection coordinates.\n */\nWebGLPolygonReplay.prototype.calculateIntersection_ = function(p0, p1, p2, p3, opt_touch) {\n  const denom = (p3.y - p2.y) * (p1.x - p0.x) - (p3.x - p2.x) * (p1.y - p0.y);\n  if (denom !== 0) {\n    const ua = ((p3.x - p2.x) * (p0.y - p2.y) - (p3.y - p2.y) * (p0.x - p2.x)) / denom;\n    const ub = ((p1.x - p0.x) * (p0.y - p2.y) - (p1.y - p0.y) * (p0.x - p2.x)) / denom;\n    if ((!opt_touch && ua > EPSILON && ua < 1 - EPSILON &&\n        ub > EPSILON && ub < 1 - EPSILON) || (opt_touch &&\n        ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1)) {\n      return [p0.x + ua * (p1.x - p0.x), p0.y + ua * (p1.y - p0.y)];\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0 Point before the start of the diagonal.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1 Start point of the diagonal.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p2 Ear candidate.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p3 End point of the diagonal.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p4 Point after the end of the diagonal.\n * @return {boolean} Diagonal is inside the polygon.\n */\nWebGLPolygonReplay.prototype.diagonalIsInside_ = function(p0, p1, p2, p3, p4) {\n  if (p1.reflex === undefined || p3.reflex === undefined) {\n    return false;\n  }\n  const p1IsLeftOf = (p2.x - p3.x) * (p1.y - p3.y) > (p2.y - p3.y) * (p1.x - p3.x);\n  const p1IsRightOf = (p4.x - p3.x) * (p1.y - p3.y) < (p4.y - p3.y) * (p1.x - p3.x);\n  const p3IsLeftOf = (p0.x - p1.x) * (p3.y - p1.y) > (p0.y - p1.y) * (p3.x - p1.x);\n  const p3IsRightOf = (p2.x - p1.x) * (p3.y - p1.y) < (p2.y - p1.y) * (p3.x - p1.x);\n  const p1InCone = p3.reflex ? p1IsRightOf || p1IsLeftOf : p1IsRightOf && p1IsLeftOf;\n  const p3InCone = p1.reflex ? p3IsRightOf || p3IsLeftOf : p3IsRightOf && p3IsLeftOf;\n  return p1InCone && p3InCone;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLPolygonReplay.prototype.drawMultiPolygon = function(multiPolygonGeometry, feature) {\n  const endss = multiPolygonGeometry.getEndss();\n  const stride = multiPolygonGeometry.getStride();\n  const currIndex = this.indices.length;\n  const currLineIndex = this.lineStringReplay.getCurrentIndex();\n  const flatCoordinates = multiPolygonGeometry.getFlatCoordinates();\n  let i, ii, j, jj;\n  let start = 0;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (ends.length > 0) {\n      const outerRing = translate(flatCoordinates, start, ends[0],\n        stride, -this.origin[0], -this.origin[1]);\n      if (outerRing.length) {\n        const holes = [];\n        let holeFlatCoords;\n        for (j = 1, jj = ends.length; j < jj; ++j) {\n          if (ends[j] !== ends[j - 1]) {\n            holeFlatCoords = translate(flatCoordinates, ends[j - 1],\n              ends[j], stride, -this.origin[0], -this.origin[1]);\n            holes.push(holeFlatCoords);\n          }\n        }\n        this.lineStringReplay.drawPolygonCoordinates(outerRing, holes, stride);\n        this.drawCoordinates_(outerRing, holes, stride);\n      }\n    }\n    start = ends[ends.length - 1];\n  }\n  if (this.indices.length > currIndex) {\n    this.startIndices.push(currIndex);\n    this.startIndicesFeature.push(feature);\n    if (this.state_.changed) {\n      this.styleIndices_.push(currIndex);\n      this.state_.changed = false;\n    }\n  }\n  if (this.lineStringReplay.getCurrentIndex() > currLineIndex) {\n    this.lineStringReplay.setPolygonStyle(feature, currLineIndex);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLPolygonReplay.prototype.drawPolygon = function(polygonGeometry, feature) {\n  const ends = polygonGeometry.getEnds();\n  const stride = polygonGeometry.getStride();\n  if (ends.length > 0) {\n    const flatCoordinates = polygonGeometry.getFlatCoordinates().map(Number);\n    const outerRing = translate(flatCoordinates, 0, ends[0],\n      stride, -this.origin[0], -this.origin[1]);\n    if (outerRing.length) {\n      const holes = [];\n      let i, ii, holeFlatCoords;\n      for (i = 1, ii = ends.length; i < ii; ++i) {\n        if (ends[i] !== ends[i - 1]) {\n          holeFlatCoords = translate(flatCoordinates, ends[i - 1],\n            ends[i], stride, -this.origin[0], -this.origin[1]);\n          holes.push(holeFlatCoords);\n        }\n      }\n\n      this.startIndices.push(this.indices.length);\n      this.startIndicesFeature.push(feature);\n      if (this.state_.changed) {\n        this.styleIndices_.push(this.indices.length);\n        this.state_.changed = false;\n      }\n      this.lineStringReplay.setPolygonStyle(feature);\n\n      this.lineStringReplay.drawPolygonCoordinates(outerRing, holes, stride);\n      this.drawCoordinates_(outerRing, holes, stride);\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n **/\nWebGLPolygonReplay.prototype.finish = function(context) {\n  // create, bind, and populate the vertices buffer\n  this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n  // create, bind, and populate the indices buffer\n  this.indicesBuffer = new WebGLBuffer(this.indices);\n\n  this.startIndices.push(this.indices.length);\n\n  this.lineStringReplay.finish(context);\n\n  //Clean up, if there is nothing to draw\n  if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n    this.styles_ = [];\n  }\n\n  this.vertices = null;\n  this.indices = null;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLPolygonReplay.prototype.getDeleteResourcesFunction = function(context) {\n  const verticesBuffer = this.verticesBuffer;\n  const indicesBuffer = this.indicesBuffer;\n  const lineDeleter = this.lineStringReplay.getDeleteResourcesFunction(context);\n  return function() {\n    context.deleteBuffer(verticesBuffer);\n    context.deleteBuffer(indicesBuffer);\n    lineDeleter();\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLPolygonReplay.prototype.setUpProgram = function(gl, context, size, pixelRatio) {\n  // get the program\n  const program = context.getProgram(fragment, vertex);\n\n  // get the locations\n  let locations;\n  if (!this.defaultLocations_) {\n    locations = new Locations(gl, program);\n    this.defaultLocations_ = locations;\n  } else {\n    locations = this.defaultLocations_;\n  }\n\n  context.useProgram(program);\n\n  // enable the vertex attrib arrays\n  gl.enableVertexAttribArray(locations.a_position);\n  gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n    false, 8, 0);\n\n  return locations;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLPolygonReplay.prototype.shutDownProgram = function(gl, locations) {\n  gl.disableVertexAttribArray(locations.a_position);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLPolygonReplay.prototype.drawReplay = function(gl, context, skippedFeaturesHash, hitDetection) {\n  //Save GL parameters.\n  const tmpDepthFunc = /** @type {number} */ (gl.getParameter(gl.DEPTH_FUNC));\n  const tmpDepthMask = /** @type {boolean} */ (gl.getParameter(gl.DEPTH_WRITEMASK));\n\n  if (!hitDetection) {\n    gl.enable(gl.DEPTH_TEST);\n    gl.depthMask(true);\n    gl.depthFunc(gl.NOTEQUAL);\n  }\n\n  if (!isEmpty(skippedFeaturesHash)) {\n    this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n  } else {\n    //Draw by style groups to minimize drawElements() calls.\n    let i, start, end, nextStyle;\n    end = this.startIndices[this.startIndices.length - 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      start = this.styleIndices_[i];\n      nextStyle = this.styles_[i];\n      this.setFillStyle_(gl, nextStyle);\n      this.drawElements(gl, context, start, end);\n      end = start;\n    }\n  }\n  if (!hitDetection) {\n    gl.disable(gl.DEPTH_TEST);\n    gl.clear(gl.DEPTH_BUFFER_BIT);\n    //Restore GL parameters.\n    gl.depthMask(tmpDepthMask);\n    gl.depthFunc(tmpDepthFunc);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLPolygonReplay.prototype.drawHitDetectionReplayOneByOne = function(gl, context, skippedFeaturesHash,\n  featureCallback, opt_hitExtent) {\n  let i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex;\n  featureIndex = this.startIndices.length - 2;\n  end = this.startIndices[featureIndex + 1];\n  for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n    nextStyle = this.styles_[i];\n    this.setFillStyle_(gl, nextStyle);\n    groupStart = this.styleIndices_[i];\n\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      start = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid] === undefined &&\n          feature.getGeometry() &&\n          (opt_hitExtent === undefined || intersects(\n            /** @type {Array<number>} */ (opt_hitExtent),\n            feature.getGeometry().getExtent()))) {\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        this.drawElements(gl, context, start, end);\n\n        const result = featureCallback(feature);\n\n        if (result) {\n          return result;\n        }\n\n      }\n      featureIndex--;\n      end = start;\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {Object} skippedFeaturesHash Ids of features to skip.\n */\nWebGLPolygonReplay.prototype.drawReplaySkipping_ = function(gl, context, skippedFeaturesHash) {\n  let i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex, featureStart;\n  featureIndex = this.startIndices.length - 2;\n  end = start = this.startIndices[featureIndex + 1];\n  for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n    nextStyle = this.styles_[i];\n    this.setFillStyle_(gl, nextStyle);\n    groupStart = this.styleIndices_[i];\n\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      featureStart = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid]) {\n        if (start !== end) {\n          this.drawElements(gl, context, start, end);\n          gl.clear(gl.DEPTH_BUFFER_BIT);\n        }\n        end = featureStart;\n      }\n      featureIndex--;\n      start = featureStart;\n    }\n    if (start !== end) {\n      this.drawElements(gl, context, start, end);\n      gl.clear(gl.DEPTH_BUFFER_BIT);\n    }\n    start = end = groupStart;\n  }\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {Array.<number>} color Color.\n */\nWebGLPolygonReplay.prototype.setFillStyle_ = function(gl, color) {\n  gl.uniform4fv(this.defaultLocations_.u_color, color);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLPolygonReplay.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  let fillStyleColor = fillStyle ? fillStyle.getColor() : [0, 0, 0, 0];\n  if (!(fillStyleColor instanceof CanvasGradient) &&\n      !(fillStyleColor instanceof CanvasPattern)) {\n    fillStyleColor = asArray(fillStyleColor).map(function(c, i) {\n      return i != 3 ? c / 255 : c;\n    }) || DEFAULT_FILLSTYLE;\n  } else {\n    fillStyleColor = DEFAULT_FILLSTYLE;\n  }\n  if (!this.state_.fillColor || !equals(fillStyleColor, this.state_.fillColor)) {\n    this.state_.fillColor = fillStyleColor;\n    this.state_.changed = true;\n    this.styles_.push(fillStyleColor);\n  }\n  //Provide a null stroke style, if no strokeStyle is provided. Required for the draw interaction to work.\n  if (strokeStyle) {\n    this.lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n  } else {\n    const nullStrokeStyle = new Stroke({\n      color: [0, 0, 0, 0],\n      lineWidth: 0\n    });\n    this.lineStringReplay.setFillStrokeStyle(null, nullStrokeStyle);\n  }\n};\nexport default WebGLPolygonReplay;\n","/**\n * @module ol/render/webgl/TextReplay\n */\nimport {getUid, inherits} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {DEFAULT_FILLSTYLE, DEFAULT_FONT, DEFAULT_LINECAP, DEFAULT_LINEDASH,\n  DEFAULT_LINEDASHOFFSET, DEFAULT_LINEJOIN, DEFAULT_LINEWIDTH, DEFAULT_MITERLIMIT,\n  DEFAULT_STROKESTYLE, DEFAULT_TEXTALIGN, DEFAULT_TEXTBASELINE} from '../webgl.js';\nimport WebGLTextureReplay from '../webgl/TextureReplay.js';\nimport AtlasManager from '../../style/AtlasManager.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n/**\n * @typedef {Object} GlyphAtlas\n * @property {module:ol/style/AtlasManager} atlas\n * @property {Object.<string, number>} width\n * @property {number} height\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/render/webgl/TextureReplay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @struct\n */\nconst WebGLTextReplay = function(tolerance, maxExtent) {\n  WebGLTextureReplay.call(this, tolerance, maxExtent);\n\n  /**\n   * @private\n   * @type {Array.<HTMLCanvasElement>}\n   */\n  this.images_ = [];\n\n  /**\n   * @private\n   * @type {Array.<WebGLTexture>}\n   */\n  this.textures_ = [];\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.measureCanvas_ = createCanvasContext2D(0, 0).canvas;\n\n  /**\n   * @private\n   * @type {{strokeColor: (module:ol/colorlike~ColorLike|null),\n   *         lineCap: (string|undefined),\n   *         lineDash: Array.<number>,\n   *         lineDashOffset: (number|undefined),\n   *         lineJoin: (string|undefined),\n   *         lineWidth: number,\n   *         miterLimit: (number|undefined),\n   *         fillColor: (module:ol/colorlike~ColorLike|null),\n   *         font: (string|undefined),\n   *         scale: (number|undefined)}}\n   */\n  this.state_ = {\n    strokeColor: null,\n    lineCap: undefined,\n    lineDash: null,\n    lineDashOffset: undefined,\n    lineJoin: undefined,\n    lineWidth: 0,\n    miterLimit: undefined,\n    fillColor: null,\n    font: undefined,\n    scale: undefined\n  };\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.text_ = '';\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.textAlign_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.textBaseline_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.offsetX_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.offsetY_ = undefined;\n\n  /**\n   * @private\n   * @type {Object.<string, module:ol/render/webgl/TextReplay~GlyphAtlas>}\n   */\n  this.atlases_ = {};\n\n  /**\n   * @private\n   * @type {module:ol/render/webgl/TextReplay~GlyphAtlas|undefined}\n   */\n  this.currAtlas_ = undefined;\n\n  this.scale = 1;\n\n  this.opacity = 1;\n\n};\n\ninherits(WebGLTextReplay, WebGLTextureReplay);\n\n\n/**\n * @inheritDoc\n */\nWebGLTextReplay.prototype.drawText = function(geometry, feature) {\n  if (this.text_) {\n    let flatCoordinates = null;\n    const offset = 0;\n    let end = 2;\n    let stride = 2;\n    switch (geometry.getType()) {\n      case GeometryType.POINT:\n      case GeometryType.MULTI_POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        end = flatCoordinates.length;\n        stride = geometry.getStride();\n        break;\n      case GeometryType.CIRCLE:\n        flatCoordinates = /** @type {module:ol/geom/Circle} */ (geometry).getCenter();\n        break;\n      case GeometryType.LINE_STRING:\n        flatCoordinates = /** @type {module:ol/geom/LineString} */ (geometry).getFlatMidpoint();\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        flatCoordinates = /** @type {module:ol/geom/MultiLineString} */ (geometry).getFlatMidpoints();\n        end = flatCoordinates.length;\n        break;\n      case GeometryType.POLYGON:\n        flatCoordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getFlatInteriorPoint();\n        break;\n      case GeometryType.MULTI_POLYGON:\n        flatCoordinates = /** @type {module:ol/geom/MultiPolygon} */ (geometry).getFlatInteriorPoints();\n        end = flatCoordinates.length;\n        break;\n      default:\n    }\n    this.startIndices.push(this.indices.length);\n    this.startIndicesFeature.push(feature);\n\n    const glyphAtlas = this.currAtlas_;\n    const lines = this.text_.split('\\n');\n    const textSize = this.getTextSize_(lines);\n    let i, ii, j, jj, currX, currY, charArr, charInfo;\n    const anchorX = Math.round(textSize[0] * this.textAlign_ - this.offsetX_);\n    const anchorY = Math.round(textSize[1] * this.textBaseline_ - this.offsetY_);\n    const lineWidth = (this.state_.lineWidth / 2) * this.state_.scale;\n\n    for (i = 0, ii = lines.length; i < ii; ++i) {\n      currX = 0;\n      currY = glyphAtlas.height * i;\n      charArr = lines[i].split('');\n\n      for (j = 0, jj = charArr.length; j < jj; ++j) {\n        charInfo = glyphAtlas.atlas.getInfo(charArr[j]);\n\n        if (charInfo) {\n          const image = charInfo.image;\n\n          this.anchorX = anchorX - currX;\n          this.anchorY = anchorY - currY;\n          this.originX = j === 0 ? charInfo.offsetX - lineWidth : charInfo.offsetX;\n          this.originY = charInfo.offsetY;\n          this.height = glyphAtlas.height;\n          this.width = j === 0 || j === charArr.length - 1 ?\n            glyphAtlas.width[charArr[j]] + lineWidth : glyphAtlas.width[charArr[j]];\n          this.imageHeight = image.height;\n          this.imageWidth = image.width;\n\n          if (this.images_.length === 0) {\n            this.images_.push(image);\n          } else {\n            const currentImage = this.images_[this.images_.length - 1];\n            if (getUid(currentImage) != getUid(image)) {\n              this.groupIndices.push(this.indices.length);\n              this.images_.push(image);\n            }\n          }\n\n          this.drawText_(flatCoordinates, offset, end, stride);\n        }\n        currX += this.width;\n      }\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {Array.<string>} lines Label to draw split to lines.\n * @return {Array.<number>} Size of the label in pixels.\n */\nWebGLTextReplay.prototype.getTextSize_ = function(lines) {\n  const self = this;\n  const glyphAtlas = this.currAtlas_;\n  const textHeight = lines.length * glyphAtlas.height;\n  //Split every line to an array of chars, sum up their width, and select the longest.\n  const textWidth = lines.map(function(str) {\n    let sum = 0;\n    for (let i = 0, ii = str.length; i < ii; ++i) {\n      const curr = str[i];\n      if (!glyphAtlas.width[curr]) {\n        self.addCharToAtlas_(curr);\n      }\n      sum += glyphAtlas.width[curr] ? glyphAtlas.width[curr] : 0;\n    }\n    return sum;\n  }).reduce(function(max, curr) {\n    return Math.max(max, curr);\n  });\n\n  return [textWidth, textHeight];\n};\n\n\n/**\n * @private\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nWebGLTextReplay.prototype.drawText_ = function(flatCoordinates, offset, end, stride) {\n  for (let i = offset, ii = end; i < ii; i += stride) {\n    this.drawCoordinates(flatCoordinates, offset, end, stride);\n  }\n};\n\n\n/**\n * @private\n * @param {string} char Character.\n */\nWebGLTextReplay.prototype.addCharToAtlas_ = function(char) {\n  if (char.length === 1) {\n    const glyphAtlas = this.currAtlas_;\n    const state = this.state_;\n    const mCtx = this.measureCanvas_.getContext('2d');\n    mCtx.font = state.font;\n    const width = Math.ceil(mCtx.measureText(char).width * state.scale);\n\n    const info = glyphAtlas.atlas.add(char, width, glyphAtlas.height,\n      function(ctx, x, y) {\n        //Parameterize the canvas\n        ctx.font = /** @type {string} */ (state.font);\n        ctx.fillStyle = state.fillColor;\n        ctx.strokeStyle = state.strokeColor;\n        ctx.lineWidth = state.lineWidth;\n        ctx.lineCap = /*** @type {string} */ (state.lineCap);\n        ctx.lineJoin = /** @type {string} */ (state.lineJoin);\n        ctx.miterLimit = /** @type {number} */ (state.miterLimit);\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'top';\n        if (CANVAS_LINE_DASH && state.lineDash) {\n          //FIXME: use pixelRatio\n          ctx.setLineDash(state.lineDash);\n          ctx.lineDashOffset = /** @type {number} */ (state.lineDashOffset);\n        }\n        if (state.scale !== 1) {\n          //FIXME: use pixelRatio\n          ctx.setTransform(/** @type {number} */ (state.scale), 0, 0,\n            /** @type {number} */ (state.scale), 0, 0);\n        }\n\n        //Draw the character on the canvas\n        if (state.strokeColor) {\n          ctx.strokeText(char, x, y);\n        }\n        if (state.fillColor) {\n          ctx.fillText(char, x, y);\n        }\n      });\n\n    if (info) {\n      glyphAtlas.width[char] = width;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTextReplay.prototype.finish = function(context) {\n  const gl = context.getGL();\n\n  this.groupIndices.push(this.indices.length);\n  this.hitDetectionGroupIndices = this.groupIndices;\n\n  // create, bind, and populate the vertices buffer\n  this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n  // create, bind, and populate the indices buffer\n  this.indicesBuffer = new WebGLBuffer(this.indices);\n\n  // create textures\n  /** @type {Object.<string, WebGLTexture>} */\n  const texturePerImage = {};\n\n  this.createTextures(this.textures_, this.images_, texturePerImage, gl);\n\n  this.state_ = {\n    strokeColor: null,\n    lineCap: undefined,\n    lineDash: null,\n    lineDashOffset: undefined,\n    lineJoin: undefined,\n    lineWidth: 0,\n    miterLimit: undefined,\n    fillColor: null,\n    font: undefined,\n    scale: undefined\n  };\n  this.text_ = '';\n  this.textAlign_ = undefined;\n  this.textBaseline_ = undefined;\n  this.offsetX_ = undefined;\n  this.offsetY_ = undefined;\n  this.images_ = null;\n  this.atlases_ = {};\n  this.currAtlas_ = undefined;\n  WebGLTextureReplay.prototype.finish.call(this, context);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTextReplay.prototype.setTextStyle = function(textStyle) {\n  const state = this.state_;\n  const textFillStyle = textStyle.getFill();\n  const textStrokeStyle = textStyle.getStroke();\n  if (!textStyle || !textStyle.getText() || (!textFillStyle && !textStrokeStyle)) {\n    this.text_ = '';\n  } else {\n    if (!textFillStyle) {\n      state.fillColor = null;\n    } else {\n      const textFillStyleColor = textFillStyle.getColor();\n      state.fillColor = asColorLike(textFillStyleColor ?\n        textFillStyleColor : DEFAULT_FILLSTYLE);\n    }\n    if (!textStrokeStyle) {\n      state.strokeColor = null;\n      state.lineWidth = 0;\n    } else {\n      const textStrokeStyleColor = textStrokeStyle.getColor();\n      state.strokeColor = asColorLike(textStrokeStyleColor ?\n        textStrokeStyleColor : DEFAULT_STROKESTYLE);\n      state.lineWidth = textStrokeStyle.getWidth() || DEFAULT_LINEWIDTH;\n      state.lineCap = textStrokeStyle.getLineCap() || DEFAULT_LINECAP;\n      state.lineDashOffset = textStrokeStyle.getLineDashOffset() || DEFAULT_LINEDASHOFFSET;\n      state.lineJoin = textStrokeStyle.getLineJoin() || DEFAULT_LINEJOIN;\n      state.miterLimit = textStrokeStyle.getMiterLimit() || DEFAULT_MITERLIMIT;\n      const lineDash = textStrokeStyle.getLineDash();\n      state.lineDash = lineDash ? lineDash.slice() : DEFAULT_LINEDASH;\n    }\n    state.font = textStyle.getFont() || DEFAULT_FONT;\n    state.scale = textStyle.getScale() || 1;\n    this.text_ = /** @type {string} */ (textStyle.getText());\n    const textAlign = TEXT_ALIGN[textStyle.getTextAlign()];\n    const textBaseline = TEXT_ALIGN[textStyle.getTextBaseline()];\n    this.textAlign_ = textAlign === undefined ?\n      DEFAULT_TEXTALIGN : textAlign;\n    this.textBaseline_ = textBaseline === undefined ?\n      DEFAULT_TEXTBASELINE : textBaseline;\n    this.offsetX_ = textStyle.getOffsetX() || 0;\n    this.offsetY_ = textStyle.getOffsetY() || 0;\n    this.rotateWithView = !!textStyle.getRotateWithView();\n    this.rotation = textStyle.getRotation() || 0;\n\n    this.currAtlas_ = this.getAtlas_(state);\n  }\n};\n\n\n/**\n * @private\n * @param {Object} state Font attributes.\n * @return {module:ol/render/webgl/TextReplay~GlyphAtlas} Glyph atlas.\n */\nWebGLTextReplay.prototype.getAtlas_ = function(state) {\n  let params = [];\n  for (const i in state) {\n    if (state[i] || state[i] === 0) {\n      if (Array.isArray(state[i])) {\n        params = params.concat(state[i]);\n      } else {\n        params.push(state[i]);\n      }\n    }\n  }\n  const hash = this.calculateHash_(params);\n  if (!this.atlases_[hash]) {\n    const mCtx = this.measureCanvas_.getContext('2d');\n    mCtx.font = state.font;\n    const height = Math.ceil((mCtx.measureText('M').width * 1.5 +\n        state.lineWidth / 2) * state.scale);\n\n    this.atlases_[hash] = {\n      atlas: new AtlasManager({\n        space: state.lineWidth + 1\n      }),\n      width: {},\n      height: height\n    };\n  }\n  return this.atlases_[hash];\n};\n\n\n/**\n * @private\n * @param {Array.<string|number>} params Array of parameters.\n * @return {string} Hash string.\n */\nWebGLTextReplay.prototype.calculateHash_ = function(params) {\n  //TODO: Create a more performant, reliable, general hash function.\n  let hash = '';\n  for (let i = 0, ii = params.length; i < ii; ++i) {\n    hash += params[i];\n  }\n  return hash;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTextReplay.prototype.getTextures = function(opt_all) {\n  return this.textures_;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTextReplay.prototype.getHitDetectionTextures = function() {\n  return this.textures_;\n};\nexport default WebGLTextReplay;\n","/**\n * @module ol/render/webgl/ReplayGroup\n */\nimport {inherits} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {buffer, createOrUpdateFromCoordinate} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {ORDER} from '../replay.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport WebGLCircleReplay from '../webgl/CircleReplay.js';\nimport WebGLImageReplay from '../webgl/ImageReplay.js';\nimport WebGLLineStringReplay from '../webgl/LineStringReplay.js';\nimport WebGLPolygonReplay from '../webgl/PolygonReplay.js';\nimport WebGLTextReplay from '../webgl/TextReplay.js';\n\n/**\n * @type {Array.<number>}\n */\nconst HIT_DETECTION_SIZE = [1, 1];\n\n/**\n * @type {Object.<module:ol/render/ReplayType,\n *                function(new: module:ol/render/webgl/Replay, number,\n *                module:ol/extent~Extent)>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': WebGLCircleReplay,\n  'Image': WebGLImageReplay,\n  'LineString': WebGLLineStringReplay,\n  'Polygon': WebGLPolygonReplay,\n  'Text': WebGLTextReplay\n};\n\n\n/**\n * @constructor\n * @extends {module:ol/render/ReplayGroup}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @param {number=} opt_renderBuffer Render buffer.\n * @struct\n */\nconst WebGLReplayGroup = function(tolerance, maxExtent, opt_renderBuffer) {\n  ReplayGroup.call(this);\n\n  /**\n   * @type {module:ol/extent~Extent}\n   * @private\n   */\n  this.maxExtent_ = maxExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.tolerance_ = tolerance;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.renderBuffer_ = opt_renderBuffer;\n\n  /**\n   * @private\n   * @type {!Object.<string,\n   *        Object.<module:ol/render/ReplayType, module:ol/render/webgl/Replay>>}\n   */\n  this.replaysByZIndex_ = {};\n\n};\n\ninherits(WebGLReplayGroup, ReplayGroup);\n\n\n/**\n * @param {module:ol/style/Style} style Style.\n * @param {boolean} group Group with previous replay.\n */\nWebGLReplayGroup.prototype.addDeclutter = function(style, group) {};\n\n\n/**\n * @param {module:ol/webgl/Context} context WebGL context.\n * @return {function()} Delete resources function.\n */\nWebGLReplayGroup.prototype.getDeleteResourcesFunction = function(context) {\n  const functions = [];\n  let zKey;\n  for (zKey in this.replaysByZIndex_) {\n    const replays = this.replaysByZIndex_[zKey];\n    for (const replayKey in replays) {\n      functions.push(\n        replays[replayKey].getDeleteResourcesFunction(context));\n    }\n  }\n  return function() {\n    const length = functions.length;\n    let result;\n    for (let i = 0; i < length; i++) {\n      result = functions[i].apply(this, arguments);\n    }\n    return result;\n  };\n};\n\n\n/**\n * @param {module:ol/webgl/Context} context Context.\n */\nWebGLReplayGroup.prototype.finish = function(context) {\n  let zKey;\n  for (zKey in this.replaysByZIndex_) {\n    const replays = this.replaysByZIndex_[zKey];\n    for (const replayKey in replays) {\n      replays[replayKey].finish(context);\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLReplayGroup.prototype.getReplay = function(zIndex, replayType) {\n  const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n  let replays = this.replaysByZIndex_[zIndexKey];\n  if (replays === undefined) {\n    replays = {};\n    this.replaysByZIndex_[zIndexKey] = replays;\n  }\n  let replay = replays[replayType];\n  if (replay === undefined) {\n    /**\n     * @type {Function}\n     */\n    const Constructor = BATCH_CONSTRUCTORS[replayType];\n    replay = new Constructor(this.tolerance_, this.maxExtent_);\n    replays[replayType] = replay;\n  }\n  return replay;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLReplayGroup.prototype.isEmpty = function() {\n  return isEmpty(this.replaysByZIndex_);\n};\n\n\n/**\n * @param {module:ol/webgl/Context} context Context.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} opacity Global opacity.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n */\nWebGLReplayGroup.prototype.replay = function(context,\n  center, resolution, rotation, size, pixelRatio,\n  opacity, skippedFeaturesHash) {\n  /** @type {Array.<number>} */\n  const zs = Object.keys(this.replaysByZIndex_).map(Number);\n  zs.sort(numberSafeCompareFunction);\n\n  let i, ii, j, jj, replays, replay;\n  for (i = 0, ii = zs.length; i < ii; ++i) {\n    replays = this.replaysByZIndex_[zs[i].toString()];\n    for (j = 0, jj = ORDER.length; j < jj; ++j) {\n      replay = replays[ORDER[j]];\n      if (replay !== undefined) {\n        replay.replay(context,\n          center, resolution, rotation, size, pixelRatio,\n          opacity, skippedFeaturesHash,\n          undefined, false);\n      }\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {module:ol/webgl/Context} context Context.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} opacity Global opacity.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n * @param {module:ol/extent~Extent=} opt_hitExtent Hit extent: Only features intersecting\n *  this extent are checked.\n * @return {T|undefined} Callback result.\n * @template T\n */\nWebGLReplayGroup.prototype.replayHitDetection_ = function(context,\n  center, resolution, rotation, size, pixelRatio, opacity,\n  skippedFeaturesHash, featureCallback, oneByOne, opt_hitExtent) {\n  /** @type {Array.<number>} */\n  const zs = Object.keys(this.replaysByZIndex_).map(Number);\n  zs.sort(function(a, b) {\n    return b - a;\n  });\n\n  let i, ii, j, replays, replay, result;\n  for (i = 0, ii = zs.length; i < ii; ++i) {\n    replays = this.replaysByZIndex_[zs[i].toString()];\n    for (j = ORDER.length - 1; j >= 0; --j) {\n      replay = replays[ORDER[j]];\n      if (replay !== undefined) {\n        result = replay.replay(context,\n          center, resolution, rotation, size, pixelRatio, opacity,\n          skippedFeaturesHash, featureCallback, oneByOne, opt_hitExtent);\n        if (result) {\n          return result;\n        }\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/webgl/Context} context Context.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} opacity Global opacity.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} callback Feature callback.\n * @return {T|undefined} Callback result.\n * @template T\n */\nWebGLReplayGroup.prototype.forEachFeatureAtCoordinate = function(\n  coordinate, context, center, resolution, rotation, size, pixelRatio,\n  opacity, skippedFeaturesHash,\n  callback) {\n  const gl = context.getGL();\n  gl.bindFramebuffer(\n    gl.FRAMEBUFFER, context.getHitDetectionFramebuffer());\n\n\n  /**\n   * @type {module:ol/extent~Extent}\n   */\n  let hitExtent;\n  if (this.renderBuffer_ !== undefined) {\n    // build an extent around the coordinate, so that only features that\n    // intersect this extent are checked\n    hitExtent = buffer(createOrUpdateFromCoordinate(coordinate), resolution * this.renderBuffer_);\n  }\n\n  return this.replayHitDetection_(context,\n    coordinate, resolution, rotation, HIT_DETECTION_SIZE,\n    pixelRatio, opacity, skippedFeaturesHash,\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @return {?} Callback result.\n     */\n    function(feature) {\n      const imageData = new Uint8Array(4);\n      gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n\n      if (imageData[3] > 0) {\n        const result = callback(feature);\n        if (result) {\n          return result;\n        }\n      }\n    }, true, hitExtent);\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/webgl/Context} context Context.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} opacity Global opacity.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @return {boolean} Is there a feature at the given coordinate?\n */\nWebGLReplayGroup.prototype.hasFeatureAtCoordinate = function(\n  coordinate, context, center, resolution, rotation, size, pixelRatio,\n  opacity, skippedFeaturesHash) {\n  const gl = context.getGL();\n  gl.bindFramebuffer(\n    gl.FRAMEBUFFER, context.getHitDetectionFramebuffer());\n\n  const hasFeature = this.replayHitDetection_(context,\n    coordinate, resolution, rotation, HIT_DETECTION_SIZE,\n    pixelRatio, opacity, skippedFeaturesHash,\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @return {boolean} Is there a feature?\n     */\n    function(feature) {\n      const imageData = new Uint8Array(4);\n      gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n      return imageData[3] > 0;\n    }, false);\n\n  return hasFeature !== undefined;\n};\n\nexport default WebGLReplayGroup;\n","/**\n * @module ol/render/webgl/Immediate\n */\nimport {inherits} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport ReplayType from '../ReplayType.js';\nimport VectorContext from '../VectorContext.js';\nimport WebGLReplayGroup from '../webgl/ReplayGroup.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/VectorContext}\n * @param {module:ol/webgl/Context} context Context.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} pixelRatio Pixel ratio.\n * @struct\n */\nconst WebGLImmediateRenderer = function(context, center, resolution, rotation, size, extent, pixelRatio) {\n  VectorContext.call(this);\n\n  /**\n   * @private\n   */\n  this.context_ = context;\n\n  /**\n   * @private\n   */\n  this.center_ = center;\n\n  /**\n   * @private\n   */\n  this.extent_ = extent;\n\n  /**\n   * @private\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   */\n  this.size_ = size;\n\n  /**\n   * @private\n   */\n  this.rotation_ = rotation;\n\n  /**\n   * @private\n   */\n  this.resolution_ = resolution;\n\n  /**\n   * @private\n   * @type {module:ol/style/Image}\n   */\n  this.imageStyle_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.fillStyle_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.strokeStyle_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Text}\n   */\n  this.textStyle_ = null;\n\n};\n\ninherits(WebGLImmediateRenderer, VectorContext);\n\n\n/**\n * @param {module:ol/render/webgl/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @private\n */\nWebGLImmediateRenderer.prototype.drawText_ = function(replayGroup, geometry) {\n  const context = this.context_;\n  const replay = /** @type {module:ol/render/webgl/TextReplay} */ (\n    replayGroup.getReplay(0, ReplayType.TEXT));\n  replay.setTextStyle(this.textStyle_);\n  replay.drawText(geometry, null);\n  replay.finish(context);\n  // default colors\n  const opacity = 1;\n  const skippedFeatures = {};\n  let featureCallback;\n  const oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n    this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n    oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n};\n\n\n/**\n * Set the rendering style.  Note that since this is an immediate rendering API,\n * any `zIndex` on the provided style will be ignored.\n *\n * @param {module:ol/style/Style} style The rendering style.\n * @override\n * @api\n */\nWebGLImmediateRenderer.prototype.setStyle = function(style) {\n  this.setFillStrokeStyle(style.getFill(), style.getStroke());\n  this.setImageStyle(style.getImage());\n  this.setTextStyle(style.getText());\n};\n\n\n/**\n * Render a geometry into the canvas.  Call\n * {@link ol/render/webgl/Immediate#setStyle} first to set the rendering style.\n *\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry The geometry to render.\n * @override\n * @api\n */\nWebGLImmediateRenderer.prototype.drawGeometry = function(geometry) {\n  const type = geometry.getType();\n  switch (type) {\n    case GeometryType.POINT:\n      this.drawPoint(/** @type {module:ol/geom/Point} */ (geometry), null);\n      break;\n    case GeometryType.LINE_STRING:\n      this.drawLineString(/** @type {module:ol/geom/LineString} */ (geometry), null);\n      break;\n    case GeometryType.POLYGON:\n      this.drawPolygon(/** @type {module:ol/geom/Polygon} */ (geometry), null);\n      break;\n    case GeometryType.MULTI_POINT:\n      this.drawMultiPoint(/** @type {module:ol/geom/MultiPoint} */ (geometry), null);\n      break;\n    case GeometryType.MULTI_LINE_STRING:\n      this.drawMultiLineString(/** @type {module:ol/geom/MultiLineString} */ (geometry), null);\n      break;\n    case GeometryType.MULTI_POLYGON:\n      this.drawMultiPolygon(/** @type {module:ol/geom/MultiPolygon} */ (geometry), null);\n      break;\n    case GeometryType.GEOMETRY_COLLECTION:\n      this.drawGeometryCollection(/** @type {module:ol/geom/GeometryCollection} */ (geometry), null);\n      break;\n    case GeometryType.CIRCLE:\n      this.drawCircle(/** @type {module:ol/geom/Circle} */ (geometry), null);\n      break;\n    default:\n      // pass\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nWebGLImmediateRenderer.prototype.drawFeature = function(feature, style) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  this.setStyle(style);\n  this.drawGeometry(geometry);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.drawGeometryCollection = function(geometry, data) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    this.drawGeometry(geometries[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.drawPoint = function(geometry, data) {\n  const context = this.context_;\n  const replayGroup = new WebGLReplayGroup(1, this.extent_);\n  const replay = /** @type {module:ol/render/webgl/ImageReplay} */ (\n    replayGroup.getReplay(0, ReplayType.IMAGE));\n  replay.setImageStyle(this.imageStyle_);\n  replay.drawPoint(geometry, data);\n  replay.finish(context);\n  // default colors\n  const opacity = 1;\n  const skippedFeatures = {};\n  let featureCallback;\n  const oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n    this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n    oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.drawMultiPoint = function(geometry, data) {\n  const context = this.context_;\n  const replayGroup = new WebGLReplayGroup(1, this.extent_);\n  const replay = /** @type {module:ol/render/webgl/ImageReplay} */ (\n    replayGroup.getReplay(0, ReplayType.IMAGE));\n  replay.setImageStyle(this.imageStyle_);\n  replay.drawMultiPoint(geometry, data);\n  replay.finish(context);\n  const opacity = 1;\n  const skippedFeatures = {};\n  let featureCallback;\n  const oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n    this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n    oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.drawLineString = function(geometry, data) {\n  const context = this.context_;\n  const replayGroup = new WebGLReplayGroup(1, this.extent_);\n  const replay = /** @type {module:ol/render/webgl/LineStringReplay} */ (\n    replayGroup.getReplay(0, ReplayType.LINE_STRING));\n  replay.setFillStrokeStyle(null, this.strokeStyle_);\n  replay.drawLineString(geometry, data);\n  replay.finish(context);\n  const opacity = 1;\n  const skippedFeatures = {};\n  let featureCallback;\n  const oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n    this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n    oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.drawMultiLineString = function(geometry, data) {\n  const context = this.context_;\n  const replayGroup = new WebGLReplayGroup(1, this.extent_);\n  const replay = /** @type {module:ol/render/webgl/LineStringReplay} */ (\n    replayGroup.getReplay(0, ReplayType.LINE_STRING));\n  replay.setFillStrokeStyle(null, this.strokeStyle_);\n  replay.drawMultiLineString(geometry, data);\n  replay.finish(context);\n  const opacity = 1;\n  const skippedFeatures = {};\n  let featureCallback;\n  const oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n    this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n    oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.drawPolygon = function(geometry, data) {\n  const context = this.context_;\n  const replayGroup = new WebGLReplayGroup(1, this.extent_);\n  const replay = /** @type {module:ol/render/webgl/PolygonReplay} */ (\n    replayGroup.getReplay(0, ReplayType.POLYGON));\n  replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n  replay.drawPolygon(geometry, data);\n  replay.finish(context);\n  const opacity = 1;\n  const skippedFeatures = {};\n  let featureCallback;\n  const oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n    this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n    oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.drawMultiPolygon = function(geometry, data) {\n  const context = this.context_;\n  const replayGroup = new WebGLReplayGroup(1, this.extent_);\n  const replay = /** @type {module:ol/render/webgl/PolygonReplay} */ (\n    replayGroup.getReplay(0, ReplayType.POLYGON));\n  replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n  replay.drawMultiPolygon(geometry, data);\n  replay.finish(context);\n  const opacity = 1;\n  const skippedFeatures = {};\n  let featureCallback;\n  const oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n    this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n    oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.drawCircle = function(geometry, data) {\n  const context = this.context_;\n  const replayGroup = new WebGLReplayGroup(1, this.extent_);\n  const replay = /** @type {module:ol/render/webgl/CircleReplay} */ (\n    replayGroup.getReplay(0, ReplayType.CIRCLE));\n  replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n  replay.drawCircle(geometry, data);\n  replay.finish(context);\n  const opacity = 1;\n  const skippedFeatures = {};\n  let featureCallback;\n  const oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n    this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n    oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.setImageStyle = function(imageStyle) {\n  this.imageStyle_ = imageStyle;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  this.fillStyle_ = fillStyle;\n  this.strokeStyle_ = strokeStyle;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.setTextStyle = function(textStyle) {\n  this.textStyle_ = textStyle;\n};\nexport default WebGLImmediateRenderer;\n","/**\n * @module ol/renderer/webgl/defaultmapshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../webgl.js';\nimport WebGLFragment from '../../webgl/Fragment.js';\nimport WebGLVertex from '../../webgl/Vertex.js';\n\nexport const fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\n\\n\\nuniform float u_opacity;\\nuniform sampler2D u_texture;\\n\\nvoid main(void) {\\n  vec4 texColor = texture2D(u_texture, v_texCoord);\\n  gl_FragColor.rgb = texColor.rgb;\\n  gl_FragColor.a = texColor.a * u_opacity;\\n}\\n' :\n  'precision mediump float;varying vec2 a;uniform float f;uniform sampler2D g;void main(void){vec4 texColor=texture2D(g,a);gl_FragColor.rgb=texColor.rgb;gl_FragColor.a=texColor.a*f;}');\n\nexport const vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\n\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\n\\nuniform mat4 u_texCoordMatrix;\\nuniform mat4 u_projectionMatrix;\\n\\nvoid main(void) {\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0., 1.);\\n  v_texCoord = (u_texCoordMatrix * vec4(a_texCoord, 0., 1.)).st;\\n}\\n\\n\\n' :\n  'varying vec2 a;attribute vec2 b;attribute vec2 c;uniform mat4 d;uniform mat4 e;void main(void){gl_Position=e*vec4(b,0.,1.);a=(d*vec4(c,0.,1.)).st;}');\n","/**\n * @module ol/renderer/webgl/defaultmapshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\n\n/**\n * @constructor\n * @param {WebGLRenderingContext} gl GL.\n * @param {WebGLProgram} program Program.\n * @struct\n */\nconst Locations = function(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_texCoordMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_texCoordMatrix' : 'd');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'e');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'f');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_texture = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_texture' : 'g');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'b');\n\n  /**\n   * @type {number}\n   */\n  this.a_texCoord = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_texCoord' : 'c');\n};\n\nexport default Locations;\n","/**\n * @module ol/renderer/webgl/Layer\n */\nimport {inherits} from '../../util.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLImmediateRenderer from '../../render/webgl/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {fragment, vertex} from '../webgl/defaultmapshader.js';\nimport Locations from '../webgl/defaultmapshader/Locations.js';\nimport {create as createTransform} from '../../transform.js';\nimport {create, fromTransform} from '../../vec/mat4.js';\nimport {ARRAY_BUFFER, FRAMEBUFFER, FLOAT, TEXTURE_2D,\n  TRIANGLE_STRIP, COLOR_ATTACHMENT0} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\nimport {createEmptyTexture} from '../../webgl/Context.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/renderer/Layer}\n * @param {module:ol/renderer/webgl/Map} mapRenderer Map renderer.\n * @param {module:ol/layer/Layer} layer Layer.\n */\nconst WebGLLayerRenderer = function(mapRenderer, layer) {\n\n  LayerRenderer.call(this, layer);\n\n  /**\n   * @protected\n   * @type {module:ol/renderer/webgl/Map}\n   */\n  this.mapRenderer = mapRenderer;\n\n  /**\n   * @private\n   * @type {module:ol/webgl/Buffer}\n   */\n  this.arrayBuffer_ = new WebGLBuffer([\n    -1, -1, 0, 0,\n    1, -1, 1, 0,\n    -1, 1, 0, 1,\n    1, 1, 1, 1\n  ]);\n\n  /**\n   * @protected\n   * @type {WebGLTexture}\n   */\n  this.texture = null;\n\n  /**\n   * @protected\n   * @type {WebGLFramebuffer}\n   */\n  this.framebuffer = null;\n\n  /**\n   * @protected\n   * @type {number|undefined}\n   */\n  this.framebufferDimension = undefined;\n\n  /**\n   * @protected\n   * @type {module:ol/transform~Transform}\n   */\n  this.texCoordMatrix = createTransform();\n\n  /**\n   * @protected\n   * @type {module:ol/transform~Transform}\n   */\n  this.projectionMatrix = createTransform();\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.tmpMat4_ = create();\n\n  /**\n   * @private\n   * @type {module:ol/renderer/webgl/defaultmapshader/Locations}\n   */\n  this.defaultLocations_ = null;\n\n};\n\ninherits(WebGLLayerRenderer, LayerRenderer);\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {number} framebufferDimension Framebuffer dimension.\n * @protected\n */\nWebGLLayerRenderer.prototype.bindFramebuffer = function(frameState, framebufferDimension) {\n\n  const gl = this.mapRenderer.getGL();\n\n  if (this.framebufferDimension === undefined ||\n      this.framebufferDimension != framebufferDimension) {\n    /**\n     * @param {WebGLRenderingContext} gl GL.\n     * @param {WebGLFramebuffer} framebuffer Framebuffer.\n     * @param {WebGLTexture} texture Texture.\n     */\n    const postRenderFunction = function(gl, framebuffer, texture) {\n      if (!gl.isContextLost()) {\n        gl.deleteFramebuffer(framebuffer);\n        gl.deleteTexture(texture);\n      }\n    }.bind(null, gl, this.framebuffer, this.texture);\n\n    frameState.postRenderFunctions.push(\n      /** @type {module:ol/PluggableMap~PostRenderFunction} */ (postRenderFunction)\n    );\n\n    const texture = createEmptyTexture(\n      gl, framebufferDimension, framebufferDimension);\n\n    const framebuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(FRAMEBUFFER, framebuffer);\n    gl.framebufferTexture2D(FRAMEBUFFER,\n      COLOR_ATTACHMENT0, TEXTURE_2D, texture, 0);\n\n    this.texture = texture;\n    this.framebuffer = framebuffer;\n    this.framebufferDimension = framebufferDimension;\n\n  } else {\n    gl.bindFramebuffer(FRAMEBUFFER, this.framebuffer);\n  }\n\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {module:ol/webgl/Context} context Context.\n */\nWebGLLayerRenderer.prototype.composeFrame = function(frameState, layerState, context) {\n\n  this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState);\n\n  context.bindBuffer(ARRAY_BUFFER, this.arrayBuffer_);\n\n  const gl = context.getGL();\n\n  const program = context.getProgram(fragment, vertex);\n\n  let locations;\n  if (!this.defaultLocations_) {\n    locations = new Locations(gl, program);\n    this.defaultLocations_ = locations;\n  } else {\n    locations = this.defaultLocations_;\n  }\n\n  if (context.useProgram(program)) {\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(\n      locations.a_position, 2, FLOAT, false, 16, 0);\n    gl.enableVertexAttribArray(locations.a_texCoord);\n    gl.vertexAttribPointer(\n      locations.a_texCoord, 2, FLOAT, false, 16, 8);\n    gl.uniform1i(locations.u_texture, 0);\n  }\n\n  gl.uniformMatrix4fv(locations.u_texCoordMatrix, false,\n    fromTransform(this.tmpMat4_, this.getTexCoordMatrix()));\n  gl.uniformMatrix4fv(locations.u_projectionMatrix, false,\n    fromTransform(this.tmpMat4_, this.getProjectionMatrix()));\n  gl.uniform1f(locations.u_opacity, layerState.opacity);\n  gl.bindTexture(TEXTURE_2D, this.getTexture());\n  gl.drawArrays(TRIANGLE_STRIP, 0, 4);\n\n  this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState);\n};\n\n\n/**\n * @param {module:ol/render/EventType} type Event type.\n * @param {module:ol/webgl/Context} context WebGL context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @private\n */\nWebGLLayerRenderer.prototype.dispatchComposeEvent_ = function(type, context, frameState) {\n  const layer = this.getLayer();\n  if (layer.hasListener(type)) {\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const extent = frameState.extent;\n    const center = viewState.center;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n\n    const render = new WebGLImmediateRenderer(\n      context, center, resolution, rotation, size, extent, pixelRatio);\n    const composeEvent = new RenderEvent(\n      type, render, frameState, null, context);\n    layer.dispatchEvent(composeEvent);\n  }\n};\n\n\n/**\n * @return {!module:ol/transform~Transform} Matrix.\n */\nWebGLLayerRenderer.prototype.getTexCoordMatrix = function() {\n  return this.texCoordMatrix;\n};\n\n\n/**\n * @return {WebGLTexture} Texture.\n */\nWebGLLayerRenderer.prototype.getTexture = function() {\n  return this.texture;\n};\n\n\n/**\n * @return {!module:ol/transform~Transform} Matrix.\n */\nWebGLLayerRenderer.prototype.getProjectionMatrix = function() {\n  return this.projectionMatrix;\n};\n\n\n/**\n * Handle webglcontextlost.\n */\nWebGLLayerRenderer.prototype.handleWebGLContextLost = function() {\n  this.texture = null;\n  this.framebuffer = null;\n  this.framebufferDimension = undefined;\n};\n\n\n/**\n * @abstract\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {module:ol/webgl/Context} context Context.\n * @return {boolean} whether composeFrame should be called.\n */\nWebGLLayerRenderer.prototype.prepareFrame = function(frameState, layerState, context) {};\n\n\n/**\n * @abstract\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n *     callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @return {T|undefined} Callback result.\n * @template S,T,U\n */\nWebGLLayerRenderer.prototype.forEachLayerAtPixel = function(pixel, frameState, callback, thisArg) {};\nexport default WebGLLayerRenderer;\n","/**\n * @module ol/renderer/webgl/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport {inherits} from '../../util.js';\nimport {TRUE, UNDEFINED} from '../../functions.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {getIntersection, isEmpty} from '../../extent.js';\nimport WebGLLayerRenderer from '../webgl/Layer.js';\nimport {\n  create as createTransform,\n  rotate as rotateTransform,\n  translate as translateTransform,\n  scale as scaleTransform,\n  reset as resetTransform,\n  apply as applyTransform,\n  invert as invertTransform,\n  multiply as multiplyTransform\n} from '../../transform.js';\nimport {CLAMP_TO_EDGE} from '../../webgl.js';\nimport {createTexture} from '../../webgl/Context.js';\n\n/**\n * @constructor\n * @extends {module:ol/renderer/webgl/Layer}\n * @param {module:ol/renderer/webgl/Map} mapRenderer Map renderer.\n * @param {module:ol/layer/Image} imageLayer Tile layer.\n * @api\n */\nconst WebGLImageLayerRenderer = function(mapRenderer, imageLayer) {\n\n  WebGLLayerRenderer.call(this, mapRenderer, imageLayer);\n\n  /**\n   * The last rendered image.\n   * @private\n   * @type {?module:ol/ImageBase}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.hitCanvasContext_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/transform~Transform}\n   */\n  this.hitTransformationMatrix_ = null;\n\n};\n\ninherits(WebGLImageLayerRenderer, WebGLLayerRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nWebGLImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/webgl/ImageLayer} The layer renderer.\n */\nWebGLImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new WebGLImageLayerRenderer(\n    /** @type {module:ol/renderer/webgl/Map} */ (mapRenderer),\n    /** @type {module:ol/layer/Image} */ (layer)\n  );\n};\n\n\n/**\n * @param {module:ol/ImageBase} image Image.\n * @private\n * @return {WebGLTexture} Texture.\n */\nWebGLImageLayerRenderer.prototype.createTexture_ = function(image) {\n\n  // We meet the conditions to work with non-power of two textures.\n  // http://www.khronos.org/webgl/wiki/WebGL_and_OpenGL_Differences#Non-Power_of_Two_Texture_Support\n  // http://learningwebgl.com/blog/?p=2101\n\n  const imageElement = image.getImage();\n  const gl = this.mapRenderer.getGL();\n\n  return createTexture(\n    gl, imageElement, CLAMP_TO_EDGE, CLAMP_TO_EDGE);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  const layer = this.getLayer();\n  const source = layer.getSource();\n  const resolution = frameState.viewState.resolution;\n  const rotation = frameState.viewState.rotation;\n  const skippedFeatureUids = frameState.skippedFeatureUids;\n  return source.forEachFeatureAtCoordinate(\n    coordinate, resolution, rotation, hitTolerance, skippedFeatureUids,\n\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @return {?} Callback result.\n     */\n    function(feature) {\n      return callback.call(thisArg, feature, layer);\n    });\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImageLayerRenderer.prototype.prepareFrame = function(frameState, layerState, context) {\n\n  const gl = this.mapRenderer.getGL();\n\n  const pixelRatio = frameState.pixelRatio;\n  const viewState = frameState.viewState;\n  const viewCenter = viewState.center;\n  const viewResolution = viewState.resolution;\n  const viewRotation = viewState.rotation;\n\n  let image = this.image_;\n  let texture = this.texture;\n  const imageLayer = /** @type {module:ol/layer/Image} */ (this.getLayer());\n  const imageSource = imageLayer.getSource();\n\n  const hints = frameState.viewHints;\n\n  let renderedExtent = frameState.extent;\n  if (layerState.extent !== undefined) {\n    renderedExtent = getIntersection(renderedExtent, layerState.extent);\n  }\n  if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)) {\n    let projection = viewState.projection;\n    if (!ENABLE_RASTER_REPROJECTION) {\n      const sourceProjection = imageSource.getProjection();\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n    }\n    const image_ = imageSource.getImage(renderedExtent, viewResolution,\n      pixelRatio, projection);\n    if (image_) {\n      const loaded = this.loadImage(image_);\n      if (loaded) {\n        image = image_;\n        texture = this.createTexture_(image_);\n        if (this.texture) {\n          /**\n           * @param {WebGLRenderingContext} gl GL.\n           * @param {WebGLTexture} texture Texture.\n           */\n          const postRenderFunction = function(gl, texture) {\n            if (!gl.isContextLost()) {\n              gl.deleteTexture(texture);\n            }\n          }.bind(null, gl, this.texture);\n          frameState.postRenderFunctions.push(\n            /** @type {module:ol/PluggableMap~PostRenderFunction} */ (postRenderFunction)\n          );\n        }\n      }\n    }\n  }\n\n  if (image) {\n    const canvas = this.mapRenderer.getContext().getCanvas();\n\n    this.updateProjectionMatrix_(canvas.width, canvas.height,\n      pixelRatio, viewCenter, viewResolution, viewRotation,\n      image.getExtent());\n    this.hitTransformationMatrix_ = null;\n\n    // Translate and scale to flip the Y coord.\n    const texCoordMatrix = this.texCoordMatrix;\n    resetTransform(texCoordMatrix);\n    scaleTransform(texCoordMatrix, 1, -1);\n    translateTransform(texCoordMatrix, 0, -1);\n\n    this.image_ = image;\n    this.texture = texture;\n  }\n\n  return !!image;\n};\n\n\n/**\n * @param {number} canvasWidth Canvas width.\n * @param {number} canvasHeight Canvas height.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/coordinate~Coordinate} viewCenter View center.\n * @param {number} viewResolution View resolution.\n * @param {number} viewRotation View rotation.\n * @param {module:ol/extent~Extent} imageExtent Image extent.\n * @private\n */\nWebGLImageLayerRenderer.prototype.updateProjectionMatrix_ = function(canvasWidth, canvasHeight, pixelRatio,\n  viewCenter, viewResolution, viewRotation, imageExtent) {\n\n  const canvasExtentWidth = canvasWidth * viewResolution;\n  const canvasExtentHeight = canvasHeight * viewResolution;\n\n  const projectionMatrix = this.projectionMatrix;\n  resetTransform(projectionMatrix);\n  scaleTransform(projectionMatrix,\n    pixelRatio * 2 / canvasExtentWidth,\n    pixelRatio * 2 / canvasExtentHeight);\n  rotateTransform(projectionMatrix, -viewRotation);\n  translateTransform(projectionMatrix,\n    imageExtent[0] - viewCenter[0],\n    imageExtent[1] - viewCenter[1]);\n  scaleTransform(projectionMatrix,\n    (imageExtent[2] - imageExtent[0]) / 2,\n    (imageExtent[3] - imageExtent[1]) / 2);\n  translateTransform(projectionMatrix, 1, 1);\n\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImageLayerRenderer.prototype.hasFeatureAtCoordinate = function(coordinate, frameState) {\n  const hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, 0, TRUE, this);\n  return hasFeature !== undefined;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImageLayerRenderer.prototype.forEachLayerAtPixel = function(pixel, frameState, callback, thisArg) {\n  if (!this.image_ || !this.image_.getImage()) {\n    return undefined;\n  }\n\n  if (this.getLayer().getSource().forEachFeatureAtCoordinate !== UNDEFINED) {\n    // for ImageCanvas sources use the original hit-detection logic,\n    // so that for example also transparent polygons are detected\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n    const hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, 0, TRUE, this);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  } else {\n    const imageSize =\n        [this.image_.getImage().width, this.image_.getImage().height];\n\n    if (!this.hitTransformationMatrix_) {\n      this.hitTransformationMatrix_ = this.getHitTransformationMatrix_(\n        frameState.size, imageSize);\n    }\n\n    const pixelOnFrameBuffer = applyTransform(\n      this.hitTransformationMatrix_, pixel.slice());\n\n    if (pixelOnFrameBuffer[0] < 0 || pixelOnFrameBuffer[0] > imageSize[0] ||\n        pixelOnFrameBuffer[1] < 0 || pixelOnFrameBuffer[1] > imageSize[1]) {\n      // outside the image, no need to check\n      return undefined;\n    }\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.image_.getImage(),\n      pixelOnFrameBuffer[0], pixelOnFrameBuffer[1], 1, 1, 0, 0, 1, 1);\n\n    const imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(),  imageData);\n    } else {\n      return undefined;\n    }\n  }\n};\n\n\n/**\n * The transformation matrix to get the pixel on the image for a\n * pixel on the map.\n * @param {module:ol/size~Size} mapSize The map size.\n * @param {module:ol/size~Size} imageSize The image size.\n * @return {module:ol/transform~Transform} The transformation matrix.\n * @private\n */\nWebGLImageLayerRenderer.prototype.getHitTransformationMatrix_ = function(mapSize, imageSize) {\n  // the first matrix takes a map pixel, flips the y-axis and scales to\n  // a range between -1 ... 1\n  const mapCoordTransform = createTransform();\n  translateTransform(mapCoordTransform, -1, -1);\n  scaleTransform(mapCoordTransform, 2 / mapSize[0], 2 / mapSize[1]);\n  translateTransform(mapCoordTransform, 0, mapSize[1]);\n  scaleTransform(mapCoordTransform, 1, -1);\n\n  // the second matrix is the inverse of the projection matrix used in the\n  // shader for drawing\n  const projectionMatrixInv = invertTransform(this.projectionMatrix.slice());\n\n  // the third matrix scales to the image dimensions and flips the y-axis again\n  const transform = createTransform();\n  translateTransform(transform, 0, imageSize[1]);\n  scaleTransform(transform, 1, -1);\n  scaleTransform(transform, imageSize[0] / 2, imageSize[1] / 2);\n  translateTransform(transform, 1, 1);\n\n  multiplyTransform(transform, projectionMatrixInv);\n  multiplyTransform(transform, mapCoordTransform);\n\n  return transform;\n};\nexport default WebGLImageLayerRenderer;\n","/**\n * @module ol/renderer/webgl/Map\n */\n\nimport {inherits} from '../../util.js';\nimport {stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen} from '../../events.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLImmediateRenderer from '../../render/webgl/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport PriorityQueue from '../../structs/PriorityQueue.js';\nimport {BLEND, CLAMP_TO_EDGE, COLOR_BUFFER_BIT, CULL_FACE, DEPTH_TEST, FRAMEBUFFER,\n  getContext, LINEAR, ONE, ONE_MINUS_SRC_ALPHA, RGBA, SCISSOR_TEST, SRC_ALPHA,\n  STENCIL_TEST, TEXTURE0, TEXTURE_2D, TEXTURE_MAG_FILTER, TEXTURE_MIN_FILTER,\n  TEXTURE_WRAP_S, TEXTURE_WRAP_T, UNSIGNED_BYTE} from '../../webgl.js';\nimport WebGLContext from '../../webgl/Context.js';\nimport ContextEventType from '../../webgl/ContextEventType.js';\n\n\n/**\n * @typedef {Object} TextureCacheEntry\n * @property {number} magFilter\n * @property {number} minFilter\n * @property {WebGLTexture} texture\n */\n\n\n/**\n * Texture cache high water mark.\n * @type {number}\n */\nconst WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK = 1024;\n\n\n/**\n * @constructor\n * @extends {module:ol/renderer/Map}\n * @param {module:ol/PluggableMap} map Map.\n * @api\n */\nconst WebGLMapRenderer = function(map) {\n  MapRenderer.call(this, map);\n\n  const container = map.getViewport();\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = /** @type {HTMLCanvasElement} */\n    (document.createElement('CANVAS'));\n  this.canvas_.style.width = '100%';\n  this.canvas_.style.height = '100%';\n  this.canvas_.style.display = 'block';\n  this.canvas_.className = CLASS_UNSELECTABLE;\n  container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.clipTileCanvasWidth_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.clipTileCanvasHeight_ = 0;\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.clipTileContext_ = createCanvasContext2D();\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderedVisible_ = true;\n\n  /**\n   * @private\n   * @type {WebGLRenderingContext}\n   */\n  this.gl_ = getContext(this.canvas_, {\n    antialias: true,\n    depth: true,\n    failIfMajorPerformanceCaveat: true,\n    preserveDrawingBuffer: false,\n    stencil: true\n  });\n\n  /**\n   * @private\n   * @type {module:ol/webgl/Context}\n   */\n  this.context_ = new WebGLContext(this.canvas_, this.gl_);\n\n  listen(this.canvas_, ContextEventType.LOST,\n    this.handleWebGLContextLost, this);\n  listen(this.canvas_, ContextEventType.RESTORED,\n    this.handleWebGLContextRestored, this);\n\n  /**\n   * @private\n   * @type {module:ol/structs/LRUCache.<module:ol/renderer/webgl/Map~TextureCacheEntry|null>}\n   */\n  this.textureCache_ = new LRUCache();\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.focus_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/structs/PriorityQueue.<Array>}\n   */\n  this.tileTextureQueue_ = new PriorityQueue(\n    /**\n     * @param {Array.<*>} element Element.\n     * @return {number} Priority.\n     * @this {module:ol/renderer/webgl/Map}\n     */\n    (function(element) {\n      const tileCenter = /** @type {module:ol/coordinate~Coordinate} */ (element[1]);\n      const tileResolution = /** @type {number} */ (element[2]);\n      const deltaX = tileCenter[0] - this.focus_[0];\n      const deltaY = tileCenter[1] - this.focus_[1];\n      return 65536 * Math.log(tileResolution) +\n            Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n    }).bind(this),\n    /**\n     * @param {Array.<*>} element Element.\n     * @return {string} Key.\n     */\n    function(element) {\n      return (\n        /** @type {module:ol/Tile} */ (element[0]).getKey()\n      );\n    });\n\n\n  /**\n   * @param {module:ol/PluggableMap} map Map.\n   * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @return {boolean} false.\n   * @this {module:ol/renderer/webgl/Map}\n   */\n  this.loadNextTileTexture_ =\n      function(map, frameState) {\n        if (!this.tileTextureQueue_.isEmpty()) {\n          this.tileTextureQueue_.reprioritize();\n          const element = this.tileTextureQueue_.dequeue();\n          const tile = /** @type {module:ol/Tile} */ (element[0]);\n          const tileSize = /** @type {module:ol/size~Size} */ (element[3]);\n          const tileGutter = /** @type {number} */ (element[4]);\n          this.bindTileTexture(\n            tile, tileSize, tileGutter, LINEAR, LINEAR);\n        }\n        return false;\n      }.bind(this);\n\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textureCacheFrameMarkerCount_ = 0;\n\n  this.initializeGL_();\n};\n\ninherits(WebGLMapRenderer, MapRenderer);\n\n\n/**\n * @param {module:ol/Tile} tile Tile.\n * @param {module:ol/size~Size} tileSize Tile size.\n * @param {number} tileGutter Tile gutter.\n * @param {number} magFilter Mag filter.\n * @param {number} minFilter Min filter.\n */\nWebGLMapRenderer.prototype.bindTileTexture = function(tile, tileSize, tileGutter, magFilter, minFilter) {\n  const gl = this.getGL();\n  const tileKey = tile.getKey();\n  if (this.textureCache_.containsKey(tileKey)) {\n    const textureCacheEntry = this.textureCache_.get(tileKey);\n    gl.bindTexture(TEXTURE_2D, textureCacheEntry.texture);\n    if (textureCacheEntry.magFilter != magFilter) {\n      gl.texParameteri(\n        TEXTURE_2D, TEXTURE_MAG_FILTER, magFilter);\n      textureCacheEntry.magFilter = magFilter;\n    }\n    if (textureCacheEntry.minFilter != minFilter) {\n      gl.texParameteri(\n        TEXTURE_2D, TEXTURE_MIN_FILTER, minFilter);\n      textureCacheEntry.minFilter = minFilter;\n    }\n  } else {\n    const texture = gl.createTexture();\n    gl.bindTexture(TEXTURE_2D, texture);\n    if (tileGutter > 0) {\n      const clipTileCanvas = this.clipTileContext_.canvas;\n      const clipTileContext = this.clipTileContext_;\n      if (this.clipTileCanvasWidth_ !== tileSize[0] ||\n          this.clipTileCanvasHeight_ !== tileSize[1]) {\n        clipTileCanvas.width = tileSize[0];\n        clipTileCanvas.height = tileSize[1];\n        this.clipTileCanvasWidth_ = tileSize[0];\n        this.clipTileCanvasHeight_ = tileSize[1];\n      } else {\n        clipTileContext.clearRect(0, 0, tileSize[0], tileSize[1]);\n      }\n      clipTileContext.drawImage(tile.getImage(), tileGutter, tileGutter,\n        tileSize[0], tileSize[1], 0, 0, tileSize[0], tileSize[1]);\n      gl.texImage2D(TEXTURE_2D, 0,\n        RGBA, RGBA,\n        UNSIGNED_BYTE, clipTileCanvas);\n    } else {\n      gl.texImage2D(TEXTURE_2D, 0,\n        RGBA, RGBA,\n        UNSIGNED_BYTE, tile.getImage());\n    }\n    gl.texParameteri(\n      TEXTURE_2D, TEXTURE_MAG_FILTER, magFilter);\n    gl.texParameteri(\n      TEXTURE_2D, TEXTURE_MIN_FILTER, minFilter);\n    gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_S,\n      CLAMP_TO_EDGE);\n    gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_T,\n      CLAMP_TO_EDGE);\n    this.textureCache_.set(tileKey, {\n      texture: texture,\n      magFilter: magFilter,\n      minFilter: minFilter\n    });\n  }\n};\n\n\n/**\n * @param {module:ol/render/EventType} type Event type.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @private\n */\nWebGLMapRenderer.prototype.dispatchComposeEvent_ = function(type, frameState) {\n  const map = this.getMap();\n  if (map.hasListener(type)) {\n    const context = this.context_;\n\n    const extent = frameState.extent;\n    const size = frameState.size;\n    const viewState = frameState.viewState;\n    const pixelRatio = frameState.pixelRatio;\n\n    const resolution = viewState.resolution;\n    const center = viewState.center;\n    const rotation = viewState.rotation;\n\n    const vectorContext = new WebGLImmediateRenderer(context,\n      center, resolution, rotation, size, extent, pixelRatio);\n    const composeEvent = new RenderEvent(type, vectorContext,\n      frameState, null, context);\n    map.dispatchEvent(composeEvent);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLMapRenderer.prototype.disposeInternal = function() {\n  const gl = this.getGL();\n  if (!gl.isContextLost()) {\n    this.textureCache_.forEach(\n      /**\n       * @param {?module:ol/renderer/webgl/Map~TextureCacheEntry} textureCacheEntry\n       *     Texture cache entry.\n       */\n      function(textureCacheEntry) {\n        if (textureCacheEntry) {\n          gl.deleteTexture(textureCacheEntry.texture);\n        }\n      });\n  }\n  this.context_.dispose();\n  MapRenderer.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @param {module:ol/PluggableMap} map Map.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @private\n */\nWebGLMapRenderer.prototype.expireCache_ = function(map, frameState) {\n  const gl = this.getGL();\n  let textureCacheEntry;\n  while (this.textureCache_.getCount() - this.textureCacheFrameMarkerCount_ >\n      WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK) {\n    textureCacheEntry = this.textureCache_.peekLast();\n    if (!textureCacheEntry) {\n      if (+this.textureCache_.peekLastKey() == frameState.index) {\n        break;\n      } else {\n        --this.textureCacheFrameMarkerCount_;\n      }\n    } else {\n      gl.deleteTexture(textureCacheEntry.texture);\n    }\n    this.textureCache_.pop();\n  }\n};\n\n\n/**\n * @return {module:ol/webgl/Context} The context.\n */\nWebGLMapRenderer.prototype.getContext = function() {\n  return this.context_;\n};\n\n\n/**\n * @return {WebGLRenderingContext} GL.\n */\nWebGLMapRenderer.prototype.getGL = function() {\n  return this.gl_;\n};\n\n\n/**\n * @return {module:ol/structs/PriorityQueue.<Array>} Tile texture queue.\n */\nWebGLMapRenderer.prototype.getTileTextureQueue = function() {\n  return this.tileTextureQueue_;\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n * @protected\n */\nWebGLMapRenderer.prototype.handleWebGLContextLost = function(event) {\n  event.preventDefault();\n  this.textureCache_.clear();\n  this.textureCacheFrameMarkerCount_ = 0;\n\n  const renderers = this.getLayerRenderers();\n  for (const id in renderers) {\n    const renderer = /** @type {module:ol/renderer/webgl/Layer} */ (renderers[id]);\n    renderer.handleWebGLContextLost();\n  }\n};\n\n\n/**\n * @protected\n */\nWebGLMapRenderer.prototype.handleWebGLContextRestored = function() {\n  this.initializeGL_();\n  this.getMap().render();\n};\n\n\n/**\n * @private\n */\nWebGLMapRenderer.prototype.initializeGL_ = function() {\n  const gl = this.gl_;\n  gl.activeTexture(TEXTURE0);\n  gl.blendFuncSeparate(\n    SRC_ALPHA, ONE_MINUS_SRC_ALPHA,\n    ONE, ONE_MINUS_SRC_ALPHA);\n  gl.disable(CULL_FACE);\n  gl.disable(DEPTH_TEST);\n  gl.disable(SCISSOR_TEST);\n  gl.disable(STENCIL_TEST);\n};\n\n\n/**\n * @param {module:ol/Tile} tile Tile.\n * @return {boolean} Is tile texture loaded.\n */\nWebGLMapRenderer.prototype.isTileTextureLoaded = function(tile) {\n  return this.textureCache_.containsKey(tile.getKey());\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLMapRenderer.prototype.renderFrame = function(frameState) {\n\n  const context = this.getContext();\n  const gl = this.getGL();\n\n  if (gl.isContextLost()) {\n    return false;\n  }\n\n  if (!frameState) {\n    if (this.renderedVisible_) {\n      this.canvas_.style.display = 'none';\n      this.renderedVisible_ = false;\n    }\n    return false;\n  }\n\n  this.focus_ = frameState.focus;\n\n  this.textureCache_.set((-frameState.index).toString(), null);\n  ++this.textureCacheFrameMarkerCount_;\n\n  this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, frameState);\n\n  /** @type {Array.<module:ol/layer/Layer~State>} */\n  const layerStatesToDraw = [];\n  const layerStatesArray = frameState.layerStatesArray;\n  stableSort(layerStatesArray, sortByZIndex);\n\n  const viewResolution = frameState.viewState.resolution;\n  let i, ii, layerRenderer, layerState;\n  for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n    layerState = layerStatesArray[i];\n    if (visibleAtResolution(layerState, viewResolution) &&\n        layerState.sourceState == SourceState.READY) {\n      layerRenderer = /** @type {module:ol/renderer/webgl/Layer} */ (this.getLayerRenderer(layerState.layer));\n      if (layerRenderer.prepareFrame(frameState, layerState, context)) {\n        layerStatesToDraw.push(layerState);\n      }\n    }\n  }\n\n  const width = frameState.size[0] * frameState.pixelRatio;\n  const height = frameState.size[1] * frameState.pixelRatio;\n  if (this.canvas_.width != width || this.canvas_.height != height) {\n    this.canvas_.width = width;\n    this.canvas_.height = height;\n  }\n\n  gl.bindFramebuffer(FRAMEBUFFER, null);\n\n  gl.clearColor(0, 0, 0, 0);\n  gl.clear(COLOR_BUFFER_BIT);\n  gl.enable(BLEND);\n  gl.viewport(0, 0, this.canvas_.width, this.canvas_.height);\n\n  for (i = 0, ii = layerStatesToDraw.length; i < ii; ++i) {\n    layerState = layerStatesToDraw[i];\n    layerRenderer = /** @type {module:ol/renderer/webgl/Layer} */ (this.getLayerRenderer(layerState.layer));\n    layerRenderer.composeFrame(frameState, layerState, context);\n  }\n\n  if (!this.renderedVisible_) {\n    this.canvas_.style.display = '';\n    this.renderedVisible_ = true;\n  }\n\n  this.calculateMatrices2D(frameState);\n\n  if (this.textureCache_.getCount() - this.textureCacheFrameMarkerCount_ >\n      WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK) {\n    frameState.postRenderFunctions.push(\n      /** @type {module:ol/PluggableMap~PostRenderFunction} */ (this.expireCache_.bind(this))\n    );\n  }\n\n  if (!this.tileTextureQueue_.isEmpty()) {\n    frameState.postRenderFunctions.push(this.loadNextTileTexture_);\n    frameState.animate = true;\n  }\n\n  this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, frameState);\n\n  this.scheduleRemoveUnusedLayerRenderers(frameState);\n  this.scheduleExpireIconCache(frameState);\n\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLMapRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg,\n  layerFilter, thisArg2) {\n  let result;\n\n  if (this.getGL().isContextLost()) {\n    return false;\n  }\n\n  const viewState = frameState.viewState;\n\n  const layerStates = frameState.layerStatesArray;\n  const numLayers = layerStates.length;\n  let i;\n  for (i = numLayers - 1; i >= 0; --i) {\n    const layerState = layerStates[i];\n    const layer = layerState.layer;\n    if (visibleAtResolution(layerState, viewState.resolution) &&\n        layerFilter.call(thisArg2, layer)) {\n      const layerRenderer = this.getLayerRenderer(layer);\n      result = layerRenderer.forEachFeatureAtCoordinate(\n        coordinate, frameState, hitTolerance, callback, thisArg);\n      if (result) {\n        return result;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLMapRenderer.prototype.hasFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n  let hasFeature = false;\n\n  if (this.getGL().isContextLost()) {\n    return false;\n  }\n\n  const viewState = frameState.viewState;\n\n  const layerStates = frameState.layerStatesArray;\n  const numLayers = layerStates.length;\n  let i;\n  for (i = numLayers - 1; i >= 0; --i) {\n    const layerState = layerStates[i];\n    const layer = layerState.layer;\n    if (visibleAtResolution(layerState, viewState.resolution) &&\n        layerFilter.call(thisArg, layer)) {\n      const layerRenderer = this.getLayerRenderer(layer);\n      hasFeature =\n          layerRenderer.hasFeatureAtCoordinate(coordinate, frameState);\n      if (hasFeature) {\n        return true;\n      }\n    }\n  }\n  return hasFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLMapRenderer.prototype.forEachLayerAtPixel = function(pixel, frameState, hitTolerance, callback, thisArg,\n  layerFilter, thisArg2) {\n  if (this.getGL().isContextLost()) {\n    return false;\n  }\n\n  const viewState = frameState.viewState;\n  let result;\n\n  const layerStates = frameState.layerStatesArray;\n  const numLayers = layerStates.length;\n  let i;\n  for (i = numLayers - 1; i >= 0; --i) {\n    const layerState = layerStates[i];\n    const layer = layerState.layer;\n    if (visibleAtResolution(layerState, viewState.resolution) &&\n        layerFilter.call(thisArg, layer)) {\n      const layerRenderer = /** @type {module:ol/renderer/webgl/Layer} */ (this.getLayerRenderer(layer));\n      result = layerRenderer.forEachLayerAtPixel(\n        pixel, frameState, callback, thisArg);\n      if (result) {\n        return result;\n      }\n    }\n  }\n  return undefined;\n};\n\nexport default WebGLMapRenderer;\n","/**\n * @module ol/renderer/webgl/tilelayershader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../webgl.js';\nimport WebGLFragment from '../../webgl/Fragment.js';\nimport WebGLVertex from '../../webgl/Vertex.js';\n\nexport const fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\n\\n\\nuniform sampler2D u_texture;\\n\\nvoid main(void) {\\n  gl_FragColor = texture2D(u_texture, v_texCoord);\\n}\\n' :\n  'precision mediump float;varying vec2 a;uniform sampler2D e;void main(void){gl_FragColor=texture2D(e,a);}');\n\nexport const vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\n\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\nuniform vec4 u_tileOffset;\\n\\nvoid main(void) {\\n  gl_Position = vec4(a_position * u_tileOffset.xy + u_tileOffset.zw, 0., 1.);\\n  v_texCoord = a_texCoord;\\n}\\n\\n\\n' :\n  'varying vec2 a;attribute vec2 b;attribute vec2 c;uniform vec4 d;void main(void){gl_Position=vec4(b*d.xy+d.zw,0.,1.);a=c;}');\n","/**\n * @module ol/renderer/webgl/tilelayershader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\n\n/**\n * @constructor\n * @param {WebGLRenderingContext} gl GL.\n * @param {WebGLProgram} program Program.\n * @struct\n */\nconst Locations = function(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_tileOffset = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_tileOffset' : 'd');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_texture = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_texture' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'b');\n\n  /**\n   * @type {number}\n   */\n  this.a_texCoord = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_texCoord' : 'c');\n};\n\nexport default Locations;\n","/**\n * @module ol/renderer/webgl/TileLayer\n */\n// FIXME large resolutions lead to too large framebuffers :-(\n// FIXME animated shaders! check in redraw\n\nimport {inherits} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createEmpty, intersects} from '../../extent.js';\nimport {roundUpToPowerOfTwo} from '../../math.js';\nimport WebGLLayerRenderer from '../webgl/Layer.js';\nimport {fragment, vertex} from '../webgl/tilelayershader.js';\nimport Locations from '../webgl/tilelayershader/Locations.js';\nimport {toSize} from '../../size.js';\nimport {\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform,\n  apply as applyTransform\n} from '../../transform.js';\nimport {COLOR_BUFFER_BIT, BLEND, ARRAY_BUFFER, FLOAT, LINEAR, TRIANGLE_STRIP} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n/**\n * @constructor\n * @extends {module:ol/renderer/webgl/Layer}\n * @param {module:ol/renderer/webgl/Map} mapRenderer Map renderer.\n * @param {module:ol/layer/Tile} tileLayer Tile layer.\n * @api\n */\nconst WebGLTileLayerRenderer = function(mapRenderer, tileLayer) {\n\n  WebGLLayerRenderer.call(this, mapRenderer, tileLayer);\n\n  /**\n   * @private\n   * @type {module:ol/webgl/Fragment}\n   */\n  this.fragmentShader_ = fragment;\n\n  /**\n   * @private\n   * @type {module:ol/webgl/Vertex}\n   */\n  this.vertexShader_ = vertex;\n\n  /**\n   * @private\n   * @type {module:ol/renderer/webgl/tilelayershader/Locations}\n   */\n  this.locations_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/webgl/Buffer}\n   */\n  this.renderArrayBuffer_ = new WebGLBuffer([\n    0, 0, 0, 1,\n    1, 0, 1, 1,\n    0, 1, 0, 0,\n    1, 1, 1, 0\n  ]);\n\n  /**\n   * @private\n   * @type {module:ol/TileRange}\n   */\n  this.renderedTileRange_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.renderedFramebufferExtent_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n};\n\ninherits(WebGLTileLayerRenderer, WebGLLayerRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nWebGLTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/webgl/TileLayer} The layer renderer.\n */\nWebGLTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new WebGLTileLayerRenderer(\n    /** @type {module:ol/renderer/webgl/Map} */ (mapRenderer),\n    /** @type {module:ol/layer/Tile} */ (layer)\n  );\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTileLayerRenderer.prototype.disposeInternal = function() {\n  const context = this.mapRenderer.getContext();\n  context.deleteBuffer(this.renderArrayBuffer_);\n  WebGLLayerRenderer.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTileLayerRenderer.prototype.createLoadedTileFinder = function(source, projection, tiles) {\n  const mapRenderer = this.mapRenderer;\n\n  return (\n    /**\n     * @param {number} zoom Zoom level.\n     * @param {module:ol/TileRange} tileRange Tile range.\n     * @return {boolean} The tile range is fully loaded.\n     */\n    function(zoom, tileRange) {\n      function callback(tile) {\n        const loaded = mapRenderer.isTileTextureLoaded(tile);\n        if (loaded) {\n          if (!tiles[zoom]) {\n            tiles[zoom] = {};\n          }\n          tiles[zoom][tile.tileCoord.toString()] = tile;\n        }\n        return loaded;\n      }\n      return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n    }\n  );\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTileLayerRenderer.prototype.handleWebGLContextLost = function() {\n  WebGLLayerRenderer.prototype.handleWebGLContextLost.call(this);\n  this.locations_ = null;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTileLayerRenderer.prototype.prepareFrame = function(frameState, layerState, context) {\n\n  const mapRenderer = this.mapRenderer;\n  const gl = context.getGL();\n\n  const viewState = frameState.viewState;\n  const projection = viewState.projection;\n\n  const tileLayer = /** @type {module:ol/layer/Tile} */ (this.getLayer());\n  const tileSource = tileLayer.getSource();\n  const tileGrid = tileSource.getTileGridForProjection(projection);\n  const z = tileGrid.getZForResolution(viewState.resolution);\n  const tileResolution = tileGrid.getResolution(z);\n\n  const tilePixelSize =\n      tileSource.getTilePixelSize(z, frameState.pixelRatio, projection);\n  const pixelRatio = tilePixelSize[0] /\n      toSize(tileGrid.getTileSize(z), this.tmpSize_)[0];\n  const tilePixelResolution = tileResolution / pixelRatio;\n  const tileGutter = tileSource.getTilePixelRatio(pixelRatio) * tileSource.getGutter(projection);\n\n  const center = viewState.center;\n  const extent = frameState.extent;\n  const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n  let framebufferExtent;\n  if (this.renderedTileRange_ &&\n      this.renderedTileRange_.equals(tileRange) &&\n      this.renderedRevision_ == tileSource.getRevision()) {\n    framebufferExtent = this.renderedFramebufferExtent_;\n  } else {\n\n    const tileRangeSize = tileRange.getSize();\n\n    const maxDimension = Math.max(\n      tileRangeSize[0] * tilePixelSize[0],\n      tileRangeSize[1] * tilePixelSize[1]);\n    const framebufferDimension = roundUpToPowerOfTwo(maxDimension);\n    const framebufferExtentDimension = tilePixelResolution * framebufferDimension;\n    const origin = tileGrid.getOrigin(z);\n    const minX = origin[0] +\n        tileRange.minX * tilePixelSize[0] * tilePixelResolution;\n    const minY = origin[1] +\n        tileRange.minY * tilePixelSize[1] * tilePixelResolution;\n    framebufferExtent = [\n      minX, minY,\n      minX + framebufferExtentDimension, minY + framebufferExtentDimension\n    ];\n\n    this.bindFramebuffer(frameState, framebufferDimension);\n    gl.viewport(0, 0, framebufferDimension, framebufferDimension);\n\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(COLOR_BUFFER_BIT);\n    gl.disable(BLEND);\n\n    const program = context.getProgram(this.fragmentShader_, this.vertexShader_);\n    context.useProgram(program);\n    if (!this.locations_) {\n      this.locations_ = new Locations(gl, program);\n    }\n\n    context.bindBuffer(ARRAY_BUFFER, this.renderArrayBuffer_);\n    gl.enableVertexAttribArray(this.locations_.a_position);\n    gl.vertexAttribPointer(\n      this.locations_.a_position, 2, FLOAT, false, 16, 0);\n    gl.enableVertexAttribArray(this.locations_.a_texCoord);\n    gl.vertexAttribPointer(\n      this.locations_.a_texCoord, 2, FLOAT, false, 16, 8);\n    gl.uniform1i(this.locations_.u_texture, 0);\n\n    /**\n     * @type {Object.<number, Object.<string, module:ol/Tile>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource, projection, tilesToDrawByZ);\n\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    let allTilesLoaded = true;\n    const tmpExtent = createEmpty();\n    const tmpTileRange = new TileRange(0, 0, 0, 0);\n    let childTileRange, drawable, fullyLoaded, tile, tileState;\n    let x, y, tileExtent;\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n\n        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (layerState.extent !== undefined) {\n          // ignore tiles outside layer extent\n          tileExtent = tileGrid.getTileCoordExtent(tile.tileCoord, tmpExtent);\n          if (!intersects(tileExtent, layerState.extent)) {\n            continue;\n          }\n        }\n        tileState = tile.getState();\n        drawable = tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            tileState == TileState.ERROR && !useInterimTilesOnError;\n        if (!drawable) {\n          tile = tile.getInterimTile();\n        }\n        tileState = tile.getState();\n        if (tileState == TileState.LOADED) {\n          if (mapRenderer.isTileTextureLoaded(tile)) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            continue;\n          }\n        } else if (tileState == TileState.EMPTY ||\n                   (tileState == TileState.ERROR &&\n                    !useInterimTilesOnError)) {\n          continue;\n        }\n\n        allTilesLoaded = false;\n        fullyLoaded = tileGrid.forEachTileCoordParentTileRange(\n          tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n        if (!fullyLoaded) {\n          childTileRange = tileGrid.getTileCoordChildTileRange(\n            tile.tileCoord, tmpTileRange, tmpExtent);\n          if (childTileRange) {\n            findLoadedTiles(z + 1, childTileRange);\n          }\n        }\n\n      }\n\n    }\n\n    /** @type {Array.<number>} */\n    const zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n    const u_tileOffset = new Float32Array(4);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      const tilesToDraw = tilesToDrawByZ[zs[i]];\n      for (const tileKey in tilesToDraw) {\n        tile = tilesToDraw[tileKey];\n        tileExtent = tileGrid.getTileCoordExtent(tile.tileCoord, tmpExtent);\n        u_tileOffset[0] = 2 * (tileExtent[2] - tileExtent[0]) /\n            framebufferExtentDimension;\n        u_tileOffset[1] = 2 * (tileExtent[3] - tileExtent[1]) /\n            framebufferExtentDimension;\n        u_tileOffset[2] = 2 * (tileExtent[0] - framebufferExtent[0]) /\n            framebufferExtentDimension - 1;\n        u_tileOffset[3] = 2 * (tileExtent[1] - framebufferExtent[1]) /\n            framebufferExtentDimension - 1;\n        gl.uniform4fv(this.locations_.u_tileOffset, u_tileOffset);\n        mapRenderer.bindTileTexture(tile, tilePixelSize,\n          tileGutter * pixelRatio, LINEAR, LINEAR);\n        gl.drawArrays(TRIANGLE_STRIP, 0, 4);\n      }\n    }\n\n    if (allTilesLoaded) {\n      this.renderedTileRange_ = tileRange;\n      this.renderedFramebufferExtent_ = framebufferExtent;\n      this.renderedRevision_ = tileSource.getRevision();\n    } else {\n      this.renderedTileRange_ = null;\n      this.renderedFramebufferExtent_ = null;\n      this.renderedRevision_ = -1;\n      frameState.animate = true;\n    }\n\n  }\n\n  this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n  const tileTextureQueue = mapRenderer.getTileTextureQueue();\n  this.manageTilePyramid(\n    frameState, tileSource, tileGrid, pixelRatio, projection, extent, z,\n    tileLayer.getPreload(),\n    /**\n     * @param {module:ol/Tile} tile Tile.\n     */\n    function(tile) {\n      if (tile.getState() == TileState.LOADED &&\n            !mapRenderer.isTileTextureLoaded(tile) &&\n            !tileTextureQueue.isKeyQueued(tile.getKey())) {\n        tileTextureQueue.enqueue([\n          tile,\n          tileGrid.getTileCoordCenter(tile.tileCoord),\n          tileGrid.getResolution(tile.tileCoord[0]),\n          tilePixelSize, tileGutter * pixelRatio\n        ]);\n      }\n    }, this);\n  this.scheduleExpireCache(frameState, tileSource);\n\n  const texCoordMatrix = this.texCoordMatrix;\n  resetTransform(texCoordMatrix);\n  translateTransform(texCoordMatrix,\n    (Math.round(center[0] / tileResolution) * tileResolution - framebufferExtent[0]) /\n          (framebufferExtent[2] - framebufferExtent[0]),\n    (Math.round(center[1] / tileResolution) * tileResolution - framebufferExtent[1]) /\n          (framebufferExtent[3] - framebufferExtent[1]));\n  if (viewState.rotation !== 0) {\n    rotateTransform(texCoordMatrix, viewState.rotation);\n  }\n  scaleTransform(texCoordMatrix,\n    frameState.size[0] * viewState.resolution /\n          (framebufferExtent[2] - framebufferExtent[0]),\n    frameState.size[1] * viewState.resolution /\n          (framebufferExtent[3] - framebufferExtent[1]));\n  translateTransform(texCoordMatrix, -0.5, -0.5);\n\n  return true;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTileLayerRenderer.prototype.forEachLayerAtPixel = function(pixel, frameState, callback, thisArg) {\n  if (!this.framebuffer) {\n    return undefined;\n  }\n\n  const pixelOnMapScaled = [\n    pixel[0] / frameState.size[0],\n    (frameState.size[1] - pixel[1]) / frameState.size[1]];\n\n  const pixelOnFrameBufferScaled = applyTransform(\n    this.texCoordMatrix, pixelOnMapScaled.slice());\n  const pixelOnFrameBuffer = [\n    pixelOnFrameBufferScaled[0] * this.framebufferDimension,\n    pixelOnFrameBufferScaled[1] * this.framebufferDimension];\n\n  const gl = this.mapRenderer.getContext().getGL();\n  gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n  const imageData = new Uint8Array(4);\n  gl.readPixels(pixelOnFrameBuffer[0], pixelOnFrameBuffer[1], 1, 1,\n    gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n\n  if (imageData[3] > 0) {\n    return callback.call(thisArg, this.getLayer(), imageData);\n  } else {\n    return undefined;\n  }\n};\nexport default WebGLTileLayerRenderer;\n","/**\n * @module ol/renderer/webgl/VectorLayer\n */\nimport {getUid, inherits} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {buffer, containsExtent, createEmpty} from '../../extent.js';\nimport WebGLReplayGroup from '../../render/webgl/ReplayGroup.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport WebGLLayerRenderer from '../webgl/Layer.js';\nimport {apply as applyTransform} from '../../transform.js';\n\n/**\n * @constructor\n * @extends {module:ol/renderer/webgl/Layer}\n * @param {module:ol/renderer/webgl/Map} mapRenderer Map renderer.\n * @param {module:ol/layer/Vector} vectorLayer Vector layer.\n * @api\n */\nconst WebGLVectorLayerRenderer = function(mapRenderer, vectorLayer) {\n\n  WebGLLayerRenderer.call(this, mapRenderer, vectorLayer);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.dirty_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedResolution_ = NaN;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.renderedExtent_ = createEmpty();\n\n  /**\n   * @private\n   * @type {function(module:ol/Feature, module:ol/Feature): number|null}\n   */\n  this.renderedRenderOrder_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/render/webgl/ReplayGroup}\n   */\n  this.replayGroup_ = null;\n\n  /**\n   * The last layer state.\n   * @private\n   * @type {?module:ol/layer/Layer~State}\n   */\n  this.layerState_ = null;\n\n};\n\ninherits(WebGLVectorLayerRenderer, WebGLLayerRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nWebGLVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/webgl/VectorLayer} The layer renderer.\n */\nWebGLVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new WebGLVectorLayerRenderer(\n    /** @type {module:ol/renderer/webgl/Map} */ (mapRenderer),\n    /** @type {module:ol/layer/Vector} */ (layer)\n  );\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLVectorLayerRenderer.prototype.composeFrame = function(frameState, layerState, context) {\n  this.layerState_ = layerState;\n  const viewState = frameState.viewState;\n  const replayGroup = this.replayGroup_;\n  const size = frameState.size;\n  const pixelRatio = frameState.pixelRatio;\n  const gl = this.mapRenderer.getGL();\n  if (replayGroup && !replayGroup.isEmpty()) {\n    gl.enable(gl.SCISSOR_TEST);\n    gl.scissor(0, 0, size[0] * pixelRatio, size[1] * pixelRatio);\n    replayGroup.replay(context,\n      viewState.center, viewState.resolution, viewState.rotation,\n      size, pixelRatio, layerState.opacity,\n      layerState.managed ? frameState.skippedFeatureUids : {});\n    gl.disable(gl.SCISSOR_TEST);\n  }\n\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLVectorLayerRenderer.prototype.disposeInternal = function() {\n  const replayGroup = this.replayGroup_;\n  if (replayGroup) {\n    const context = this.mapRenderer.getContext();\n    replayGroup.getDeleteResourcesFunction(context)();\n    this.replayGroup_ = null;\n  }\n  WebGLLayerRenderer.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  if (!this.replayGroup_ || !this.layerState_) {\n    return undefined;\n  } else {\n    const context = this.mapRenderer.getContext();\n    const viewState = frameState.viewState;\n    const layer = this.getLayer();\n    const layerState = this.layerState_;\n    /** @type {!Object.<string, boolean>} */\n    const features = {};\n    return this.replayGroup_.forEachFeatureAtCoordinate(coordinate,\n      context, viewState.center, viewState.resolution, viewState.rotation,\n      frameState.size, frameState.pixelRatio, layerState.opacity,\n      {},\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        const key = getUid(feature).toString();\n        if (!(key in features)) {\n          features[key] = true;\n          return callback.call(thisArg, feature, layer);\n        }\n      });\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLVectorLayerRenderer.prototype.hasFeatureAtCoordinate = function(coordinate, frameState) {\n  if (!this.replayGroup_ || !this.layerState_) {\n    return false;\n  } else {\n    const context = this.mapRenderer.getContext();\n    const viewState = frameState.viewState;\n    const layerState = this.layerState_;\n    return this.replayGroup_.hasFeatureAtCoordinate(coordinate,\n      context, viewState.center, viewState.resolution, viewState.rotation,\n      frameState.size, frameState.pixelRatio, layerState.opacity,\n      frameState.skippedFeatureUids);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLVectorLayerRenderer.prototype.forEachLayerAtPixel = function(pixel, frameState, callback, thisArg) {\n  const coordinate = applyTransform(\n    frameState.pixelToCoordinateTransform, pixel.slice());\n  const hasFeature = this.hasFeatureAtCoordinate(coordinate, frameState);\n\n  if (hasFeature) {\n    return callback.call(thisArg, this.getLayer(), null);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Handle changes in image style state.\n * @param {module:ol/events/Event} event Image style change event.\n * @private\n */\nWebGLVectorLayerRenderer.prototype.handleStyleImageChange_ = function(event) {\n  this.renderIfReadyAndVisible();\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLVectorLayerRenderer.prototype.prepareFrame = function(frameState, layerState, context) {\n  const vectorLayer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n  const vectorSource = vectorLayer.getSource();\n\n  const animating = frameState.viewHints[ViewHint.ANIMATING];\n  const interacting = frameState.viewHints[ViewHint.INTERACTING];\n  const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n  const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n  if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)) {\n    return true;\n  }\n\n  const frameStateExtent = frameState.extent;\n  const viewState = frameState.viewState;\n  const projection = viewState.projection;\n  const resolution = viewState.resolution;\n  const pixelRatio = frameState.pixelRatio;\n  const vectorLayerRevision = vectorLayer.getRevision();\n  const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n  let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n  if (vectorLayerRenderOrder === undefined) {\n    vectorLayerRenderOrder = defaultRenderOrder;\n  }\n\n  const extent = buffer(frameStateExtent,\n    vectorLayerRenderBuffer * resolution);\n\n  if (!this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.renderedExtent_, extent)) {\n    return true;\n  }\n\n  if (this.replayGroup_) {\n    frameState.postRenderFunctions.push(\n      this.replayGroup_.getDeleteResourcesFunction(context));\n  }\n\n  this.dirty_ = false;\n\n  const replayGroup = new WebGLReplayGroup(\n    getRenderTolerance(resolution, pixelRatio),\n    extent, vectorLayer.getRenderBuffer());\n  vectorSource.loadFeatures(extent, resolution, projection);\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @this {module:ol/renderer/webgl/VectorLayer}\n   */\n  const render = function(feature) {\n    let styles;\n    const styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n    if (styleFunction) {\n      styles = styleFunction(feature, resolution);\n    }\n    if (styles) {\n      const dirty = this.renderFeature(\n        feature, resolution, pixelRatio, styles, replayGroup);\n      this.dirty_ = this.dirty_ || dirty;\n    }\n  };\n  if (vectorLayerRenderOrder) {\n    /** @type {Array.<module:ol/Feature>} */\n    const features = [];\n    vectorSource.forEachFeatureInExtent(extent,\n      /**\n       * @param {module:ol/Feature} feature Feature.\n       */\n      function(feature) {\n        features.push(feature);\n      }, this);\n    features.sort(vectorLayerRenderOrder);\n    features.forEach(render.bind(this));\n  } else {\n    vectorSource.forEachFeatureInExtent(extent, render, this);\n  }\n  replayGroup.finish(context);\n\n  this.renderedResolution_ = resolution;\n  this.renderedRevision_ = vectorLayerRevision;\n  this.renderedRenderOrder_ = vectorLayerRenderOrder;\n  this.renderedExtent_ = extent;\n  this.replayGroup_ = replayGroup;\n\n  return true;\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {(module:ol/style/Style|Array.<module:ol/style/Style>)} styles The style or array of\n *     styles.\n * @param {module:ol/render/webgl/ReplayGroup} replayGroup Replay group.\n * @return {boolean} `true` if an image is loading.\n */\nWebGLVectorLayerRenderer.prototype.renderFeature = function(feature, resolution, pixelRatio, styles, replayGroup) {\n  if (!styles) {\n    return false;\n  }\n  let loading = false;\n  if (Array.isArray(styles)) {\n    for (let i = styles.length - 1, ii = 0; i >= ii; --i) {\n      loading = renderFeature(\n        replayGroup, feature, styles[i],\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this) || loading;\n    }\n  } else {\n    loading = renderFeature(\n      replayGroup, feature, styles,\n      getSquaredRenderTolerance(resolution, pixelRatio),\n      this.handleStyleImageChange_, this) || loading;\n  }\n  return loading;\n};\nexport default WebGLVectorLayerRenderer;\n","/**\n * @module ol/WebGLMap\n */\nimport {inherits} from './util.js';\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport WebGLImageLayerRenderer from './renderer/webgl/ImageLayer.js';\nimport WebGLMapRenderer from './renderer/webgl/Map.js';\nimport WebGLTileLayerRenderer from './renderer/webgl/TileLayer.js';\nimport WebGLVectorLayerRenderer from './renderer/webgl/VectorLayer.js';\n\n\n/**\n * @classdesc\n * The WebGLMap uses WebGL for rendering map layers.  This renderer has limited\n * support for vector data and no support for vector tiles.\n *\n *     import WebGLMap from 'ol/WebGLMap';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *     import View from 'ol/View';\n *\n *     var map = new WebGLMap({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`.\n * Note that {@link module:ol/layer/Group~Group} is a subclass of\n * {@link module:ol/layer/Base}, so layers entered in the options or added\n * with `addLayer` can be groups, which can contain further groups, and so on.\n *\n * @constructor\n * @extends {module:ol/PluggableMap}\n * @param {module:ol/PluggableMap~MapOptions} options Map options.\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nconst WebGLMap = function(options) {\n  options = assign({}, options);\n  if (!options.controls) {\n    options.controls = defaultControls();\n  }\n  if (!options.interactions) {\n    options.interactions = defaultInteractions();\n  }\n\n  PluggableMap.call(this, options);\n};\n\ninherits(WebGLMap, PluggableMap);\n\n\nWebGLMap.prototype.createRenderer = function() {\n  const renderer = new WebGLMapRenderer(this);\n  renderer.registerLayerRenderers([\n    WebGLImageLayerRenderer,\n    WebGLTileLayerRenderer,\n    WebGLVectorLayerRenderer\n  ]);\n  return renderer;\n};\n\nexport default WebGLMap;\n","/**\n * @module ol/tilegrid/WMTS\n */\nimport {inherits} from '../util.js';\nimport {find} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {module:ol/coordinate~Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and upwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array.<module:ol/coordinate~Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and upwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array.<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array.<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array.<module:ol/size~Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define the grid's extent together with the `origin`.\n * An `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. Note that when the top-left corner of\n * the `extent` is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates increase upwards.\n * @property {number|module:ol/size~Size} [tileSize] Tile size.\n * @property {Array.<module:ol/size~Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n * @property {Array.<number>} [widths] Number of tile columns that cover the grid's\n * extent for each zoom level. Only required when used with a source that has `wrapX`\n * set to `true`, and only when the grid's origin differs from the one of the\n * projection's extent. The array length has to match the length of the `resolutions`\n * array, i.e. each resolution will have a matching entry here.\n */\n\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n *\n * @constructor\n * @extends {module:ol/tilegrid/TileGrid}\n * @param {module:ol/tilegrid/WMTS~Options} options WMTS options.\n * @struct\n * @api\n */\nconst WMTSTileGrid = function(options) {\n  /**\n   * @private\n   * @type {!Array.<string>}\n   */\n  this.matrixIds_ = options.matrixIds;\n  // FIXME: should the matrixIds become optional?\n\n  TileGrid.call(this, {\n    extent: options.extent,\n    origin: options.origin,\n    origins: options.origins,\n    resolutions: options.resolutions,\n    tileSize: options.tileSize,\n    tileSizes: options.tileSizes,\n    sizes: options.sizes\n  });\n};\n\ninherits(WMTSTileGrid, TileGrid);\n\n\n/**\n * @param {number} z Z.\n * @return {string} MatrixId..\n */\nWMTSTileGrid.prototype.getMatrixId = function(z) {\n  return this.matrixIds_[z];\n};\n\n\n/**\n * Get the list of matrix identifiers.\n * @return {Array.<string>} MatrixIds.\n * @api\n */\nWMTSTileGrid.prototype.getMatrixIds = function() {\n  return this.matrixIds_;\n};\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {module:ol/extent~Extent=} opt_extent An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array.<Object>=} opt_matrixLimits An optional object representing\n *     the available matrices for tileGrid.\n * @return {module:ol/tilegrid/WMTS} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(matrixSet, opt_extent, opt_matrixLimits) {\n\n  /** @type {!Array.<number>} */\n  const resolutions = [];\n  /** @type {!Array.<string>} */\n  const matrixIds = [];\n  /** @type {!Array.<module:ol/coordinate~Coordinate>} */\n  const origins = [];\n  /** @type {!Array.<module:ol/size~Size>} */\n  const tileSizes = [];\n  /** @type {!Array.<module:ol/size~Size>} */\n  const sizes = [];\n\n  const matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n      getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function(a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function(elt) {\n\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = find(matrixLimits, function(elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (elt[identifierPropName].indexOf(':') === -1) {\n          return matrixSet[identifierPropName] + ':' + elt[identifierPropName] === elt_ml[matrixIdsPropName];\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution = elt[scaleDenominatorPropName] * 0.28E-3 / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0]]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(tileWidth == tileHeight ?\n        tileWidth : [tileWidth, tileHeight]);\n      // top-left origin, so height is negative\n      sizes.push([elt['MatrixWidth'], -elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: opt_extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes\n  });\n}\n","/**\n * @module ol/Image\n */\nimport {inherits} from './util.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(module:ol/Image, string)} LoadFunction\n * @api\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/ImageBase}\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/Image~LoadFunction} imageLoadFunction Image load function.\n */\nconst ImageWrapper = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  ImageBase.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {module:ol/ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {module:ol/Image~LoadFunction}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(ImageWrapper, ImageBase);\n\n\n/**\n * @inheritDoc\n * @api\n */\nImageWrapper.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\nImageWrapper.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\nImageWrapper.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\nImageWrapper.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\nImageWrapper.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\nImageWrapper.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\n\nexport default ImageWrapper;\n","/**\n * @module ol/render/Event\n */\nimport {inherits} from '../util.js';\nimport Event from '../events/Event.js';\n\n/**\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/render/EventType} type Type.\n * @param {module:ol/render/VectorContext=} opt_vectorContext Vector context.\n * @param {module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n * @param {?CanvasRenderingContext2D=} opt_context Context.\n * @param {?module:ol/webgl/Context=} opt_glContext WebGL Context.\n */\nconst RenderEvent = function(\n  type, opt_vectorContext, opt_frameState, opt_context,\n  opt_glContext) {\n\n  Event.call(this, type);\n\n  /**\n   * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n   * @type {module:ol/render/VectorContext|undefined}\n   * @api\n   */\n  this.vectorContext = opt_vectorContext;\n\n  /**\n   * An object representing the current render frame state.\n   * @type {module:ol/PluggableMap~FrameState|undefined}\n   * @api\n   */\n  this.frameState = opt_frameState;\n\n  /**\n   * Canvas context. Only available when a Canvas renderer is used, null\n   * otherwise.\n   * @type {CanvasRenderingContext2D|null|undefined}\n   * @api\n   */\n  this.context = opt_context;\n\n  /**\n   * WebGL context. Only available when a WebGL renderer is used, null\n   * otherwise.\n   * @type {module:ol/webgl/Context|null|undefined}\n   * @api\n   */\n  this.glContext = opt_glContext;\n\n};\n\ninherits(RenderEvent, Event);\nexport default RenderEvent;\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from '../flat/contains.js';\nimport {forEach as forEachSegment} from '../flat/segments.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {module:ol/coordinate~Coordinate} point1 Start point.\n     * @param {module:ol/coordinate~Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/source/Raster\n */\nimport {getUid, inherits} from '../util.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport TileQueue from '../TileQueue.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {Processor} from 'pixelworks/lib/index';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport ImageLayer from '../layer/Image.js';\nimport TileLayer from '../layer/Tile.js';\nimport {assign} from '../obj.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\nimport ImageSource from '../source/Image.js';\nimport SourceState from '../source/State.js';\nimport TileSource from '../source/Tile.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * {@link ImageData https://developer.mozilla.org/en-US/docs/Web/API/ImageData}\n * and should return a single {@link ImageData\n * https://developer.mozilla.org/en-US/docs/Web/API/ImageData}.  The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array.<Array.<number>>|Array.<ImageData>), Object):\n *     (Array.<number>|ImageData)} Operation\n */\n\n\n/**\n * @enum {string}\n */\nconst RasterEventType = {\n  /**\n   * Triggered before operations are run.\n   * @event ol/source/Raster~RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.\n   * @event ol/source/Raster~RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations'\n};\n\n\n/**\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n * @enum {string}\n */\nconst RasterOperationType = {\n  PIXEL: 'pixel',\n  IMAGE: 'image'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type Type.\n * @param {module:ol/PluggableMap~FrameState} frameState The frame state.\n * @param {Object} data An object made available to operations.\n */\nconst RasterSourceEvent = function(type, frameState, data) {\n  Event.call(this, type);\n\n  /**\n   * The raster extent.\n   * @type {module:ol/extent~Extent}\n   * @api\n   */\n  this.extent = frameState.extent;\n\n  /**\n   * The pixel resolution (map units per pixel).\n   * @type {number}\n   * @api\n   */\n  this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n  /**\n   * An object made available to all operations.  This can be used by operations\n   * as a storage object (e.g. for calculating statistics).\n   * @type {Object}\n   * @api\n   */\n  this.data = data;\n\n};\ninherits(RasterSourceEvent, Event);\n\n/**\n * @typedef {Object} Options\n * @property {Array.<module:ol/source/Source|module:ol/layer/Layer>} sources Input\n * sources or layers. Vector layers must be configured with `renderMode: 'image'`.\n * @property {module:ol/source/Raster~Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {module:ol/source/Raster~RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n */\n\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @constructor\n * @extends {module:ol/source/Image}\n * @fires ol/source/Raster~RasterSourceEvent\n * @param {module:ol/source/Raster~Options=} options Options.\n * @api\n */\nconst RasterSource = function(options) {\n\n  /**\n   * @private\n   * @type {*}\n   */\n  this.worker_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/source/Raster~RasterOperationType}\n   */\n  this.operationType_ = options.operationType !== undefined ?\n    options.operationType : RasterOperationType.PIXEL;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/renderer/canvas/Layer>}\n   */\n  this.renderers_ = createRenderers(options.sources);\n\n  for (let r = 0, rr = this.renderers_.length; r < rr; ++r) {\n    listen(this.renderers_[r], EventType.CHANGE,\n      this.changed, this);\n  }\n\n  /**\n   * @private\n   * @type {module:ol/TileQueue}\n   */\n  this.tileQueue_ = new TileQueue(\n    function() {\n      return 1;\n    },\n    this.changed.bind(this));\n\n  const layerStatesArray = getLayerStatesArray(this.renderers_);\n  const layerStates = {};\n  for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n    layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n  }\n\n  /**\n   * The most recently requested frame state.\n   * @type {module:ol/PluggableMap~FrameState}\n   * @private\n   */\n  this.requestedFrameState_;\n\n  /**\n   * The most recently rendered image canvas.\n   * @type {module:ol/ImageCanvas}\n   * @private\n   */\n  this.renderedImageCanvas_ = null;\n\n  /**\n   * The most recently rendered revision.\n   * @type {number}\n   */\n  this.renderedRevision_;\n\n  /**\n   * @private\n   * @type {module:ol/PluggableMap~FrameState}\n   */\n  this.frameState_ = {\n    animate: false,\n    coordinateToPixelTransform: createTransform(),\n    extent: null,\n    focus: null,\n    index: 0,\n    layerStates: layerStates,\n    layerStatesArray: layerStatesArray,\n    pixelRatio: 1,\n    pixelToCoordinateTransform: createTransform(),\n    postRenderFunctions: [],\n    size: [0, 0],\n    skippedFeatureUids: {},\n    tileQueue: this.tileQueue_,\n    time: Date.now(),\n    usedTiles: {},\n    viewState: /** @type {module:ol/View~State} */ ({\n      rotation: 0\n    }),\n    viewHints: [],\n    wantedTiles: {}\n  };\n\n  ImageSource.call(this, {});\n\n  if (options.operation !== undefined) {\n    this.setOperation(options.operation, options.lib);\n  }\n\n};\n\ninherits(RasterSource, ImageSource);\n\n\n/**\n * Set the operation.\n * @param {module:ol/source/Raster~Operation} operation New operation.\n * @param {Object=} opt_lib Functions that will be available to operations run\n *     in a worker.\n * @api\n */\nRasterSource.prototype.setOperation = function(operation, opt_lib) {\n  this.worker_ = new Processor({\n    operation: operation,\n    imageOps: this.operationType_ === RasterOperationType.IMAGE,\n    queue: 1,\n    lib: opt_lib,\n    threads: this.threads_\n  });\n  this.changed();\n};\n\n\n/**\n * Update the stored frame state.\n * @param {module:ol/extent~Extent} extent The view extent (in map units).\n * @param {number} resolution The view resolution.\n * @param {module:ol/proj/Projection} projection The view projection.\n * @return {module:ol/PluggableMap~FrameState} The updated frame state.\n * @private\n */\nRasterSource.prototype.updateFrameState_ = function(extent, resolution, projection) {\n\n  const frameState = /** @type {module:ol/PluggableMap~FrameState} */ (assign({}, this.frameState_));\n\n  frameState.viewState = /** @type {module:ol/View~State} */ (assign({}, frameState.viewState));\n\n  const center = getCenter(extent);\n\n  frameState.extent = extent.slice();\n  frameState.focus = center;\n  frameState.size[0] = Math.round(getWidth(extent) / resolution);\n  frameState.size[1] = Math.round(getHeight(extent) / resolution);\n  frameState.time = Date.now();\n  frameState.animate = false;\n\n  const viewState = frameState.viewState;\n  viewState.center = center;\n  viewState.projection = projection;\n  viewState.resolution = resolution;\n  return frameState;\n};\n\n\n/**\n * Determine if all sources are ready.\n * @return {boolean} All sources are ready.\n * @private\n */\nRasterSource.prototype.allSourcesReady_ = function() {\n  let ready = true;\n  let source;\n  for (let i = 0, ii = this.renderers_.length; i < ii; ++i) {\n    source = this.renderers_[i].getLayer().getSource();\n    if (source.getState() !== SourceState.READY) {\n      ready = false;\n      break;\n    }\n  }\n  return ready;\n};\n\n\n/**\n * @inheritDoc\n */\nRasterSource.prototype.getImage = function(extent, resolution, pixelRatio, projection) {\n  if (!this.allSourcesReady_()) {\n    return null;\n  }\n\n  const frameState = this.updateFrameState_(extent, resolution, projection);\n  this.requestedFrameState_ = frameState;\n\n  // check if we can't reuse the existing ol/ImageCanvas\n  if (this.renderedImageCanvas_) {\n    const renderedResolution = this.renderedImageCanvas_.getResolution();\n    const renderedExtent = this.renderedImageCanvas_.getExtent();\n    if (resolution !== renderedResolution || !equals(extent, renderedExtent)) {\n      this.renderedImageCanvas_ = null;\n    }\n  }\n\n  if (!this.renderedImageCanvas_ || this.getRevision() !== this.renderedRevision_) {\n    this.processSources_();\n  }\n\n  frameState.tileQueue.loadMoreTiles(16, 16);\n\n  if (frameState.animate) {\n    requestAnimationFrame(this.changed.bind(this));\n  }\n\n  return this.renderedImageCanvas_;\n};\n\n\n/**\n * Start processing source data.\n * @private\n */\nRasterSource.prototype.processSources_ = function() {\n  const frameState = this.requestedFrameState_;\n  const len = this.renderers_.length;\n  const imageDatas = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    const imageData = getImageData(\n      this.renderers_[i], frameState, frameState.layerStatesArray[i]);\n    if (imageData) {\n      imageDatas[i] = imageData;\n    } else {\n      return;\n    }\n  }\n\n  const data = {};\n  this.dispatchEvent(new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data));\n  this.worker_.process(imageDatas, data, this.onWorkerComplete_.bind(this, frameState));\n};\n\n\n/**\n * Called when pixel processing is complete.\n * @param {module:ol/PluggableMap~FrameState} frameState The frame state.\n * @param {Error} err Any error during processing.\n * @param {ImageData} output The output image data.\n * @param {Object} data The user data.\n * @private\n */\nRasterSource.prototype.onWorkerComplete_ = function(frameState, err, output, data) {\n  if (err || !output) {\n    return;\n  }\n\n  // do nothing if extent or resolution changed\n  const extent = frameState.extent;\n  const resolution = frameState.viewState.resolution;\n  if (resolution !== this.requestedFrameState_.viewState.resolution ||\n      !equals(extent, this.requestedFrameState_.extent)) {\n    return;\n  }\n\n  let context;\n  if (this.renderedImageCanvas_) {\n    context = this.renderedImageCanvas_.getImage().getContext('2d');\n  } else {\n    const width = Math.round(getWidth(extent) / resolution);\n    const height = Math.round(getHeight(extent) / resolution);\n    context = createCanvasContext2D(width, height);\n    this.renderedImageCanvas_ = new ImageCanvas(extent, resolution, 1, context.canvas);\n  }\n  context.putImageData(output, 0, 0);\n\n  this.changed();\n  this.renderedRevision_ = this.getRevision();\n\n  this.dispatchEvent(new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data));\n};\n\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nlet sharedContext = null;\n\n\n/**\n * Get image data from a renderer.\n * @param {module:ol/renderer/canvas/Layer} renderer Layer renderer.\n * @param {module:ol/PluggableMap~FrameState} frameState The frame state.\n * @param {module:ol/layer/Layer~State} layerState The layer state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(renderer, frameState, layerState) {\n  if (!renderer.prepareFrame(frameState, layerState)) {\n    return null;\n  }\n  const width = frameState.size[0];\n  const height = frameState.size[1];\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height);\n  } else {\n    const canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height);\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  renderer.composeFrame(frameState, layerState, sharedContext);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n\n/**\n * Get a list of layer states from a list of renderers.\n * @param {Array.<module:ol/renderer/canvas/Layer>} renderers Layer renderers.\n * @return {Array.<module:ol/layer/Layer~State>} The layer states.\n */\nfunction getLayerStatesArray(renderers) {\n  return renderers.map(function(renderer) {\n    return renderer.getLayer().getLayerState();\n  });\n}\n\n\n/**\n * Create renderers for all sources.\n * @param {Array.<module:ol/source/Source>} sources The sources.\n * @return {Array.<module:ol/renderer/canvas/Layer>} Array of layer renderers.\n */\nfunction createRenderers(sources) {\n  const len = sources.length;\n  const renderers = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    renderers[i] = createRenderer(sources[i]);\n  }\n  return renderers;\n}\n\n\n/**\n * Create a renderer for the provided source.\n * @param {module:ol/source/Source} source The source.\n * @return {module:ol/renderer/canvas/Layer} The renderer.\n */\nfunction createRenderer(source) {\n  let renderer = null;\n  if (source instanceof TileSource) {\n    renderer = createTileRenderer(source);\n  } else if (source instanceof ImageSource) {\n    renderer = createImageRenderer(source);\n  } else if (source instanceof TileLayer) {\n    renderer = new CanvasTileLayerRenderer(source);\n  } else if (source instanceof Layer &&\n      (source.getType() == LayerType.IMAGE || source.getType() == LayerType.VECTOR)) {\n    renderer = new CanvasImageLayerRenderer(source);\n  }\n  return renderer;\n}\n\n\n/**\n * Create an image renderer for the provided source.\n * @param {module:ol/source/Image} source The source.\n * @return {module:ol/renderer/canvas/Layer} The renderer.\n */\nfunction createImageRenderer(source) {\n  const layer = new ImageLayer({source: source});\n  return new CanvasImageLayerRenderer(layer);\n}\n\n\n/**\n * Create a tile renderer for the provided source.\n * @param {module:ol/source/Tile} source The source.\n * @return {module:ol/renderer/canvas/Layer} The renderer.\n */\nfunction createTileRenderer(source) {\n  const layer = new TileLayer({source: source});\n  return new CanvasTileLayerRenderer(layer);\n}\n\n\n/**\n * @override\n */\nRasterSource.prototype.getImageInternal = function() {\n  return null; // not implemented\n};\n\n\nexport default RasterSource;\n","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {module:ol/geom/Geometry} geometry A geometry.\n * @param {module:ol/sphere~SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {module:ol/geom/Geometry} geometry A geometry.\n * @param {module:ol/sphere~SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {module:ol/coordinate~Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {module:ol/coordinate~Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  const lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/pointer/MouseSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../util.js';\nimport EventSource from '../pointer/EventSource.js';\n\n/**\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @constructor\n * @extends {module:ol/pointer/EventSource}\n */\nconst MouseSource = function(dispatcher) {\n  const mapping = {\n    'mousedown': this.mousedown,\n    'mousemove': this.mousemove,\n    'mouseup': this.mouseup,\n    'mouseover': this.mouseover,\n    'mouseout': this.mouseout\n  };\n  EventSource.call(this, dispatcher, mapping);\n\n  /**\n   * @const\n   * @type {!Object.<string, Event|Object>}\n   */\n  this.pointerMap = dispatcher.pointerMap;\n\n  /**\n   * @const\n   * @type {Array.<module:ol~Pixel>}\n   */\n  this.lastTouches = [];\n};\n\ninherits(MouseSource, EventSource);\n\n\n/**\n * @type {number}\n */\nexport const POINTER_ID = 1;\n\n\n/**\n * @type {string}\n */\nexport const POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nconst DEDUP_DIST = 25;\n\n\n/**\n * Detect if a mouse event was simulated from a touch by\n * checking if previously there was a touch event at the\n * same position.\n *\n * FIXME - Known problem with the native Android browser on\n * Samsung GT-I9100 (Android 4.1.2):\n * In case the page is scrolled, this function does not work\n * correctly when a canvas is used (WebGL or canvas renderer).\n * Mouse listeners on canvas elements (for this browser), create\n * two mouse events: One 'good' and one 'bad' one (on other browsers or\n * when a div is used, there is only one event). For the 'bad' one,\n * clientX/clientY and also pageX/pageY are wrong when the page\n * is scrolled. Because of that, this function can not detect if\n * the events were simulated from a touch event. As result, a\n * pointer event at a wrong position is dispatched, which confuses\n * the map interactions.\n * It is unclear, how one can get the correct position for the event\n * or detect that the positions are invalid.\n *\n * @private\n * @param {Event} inEvent The in event.\n * @return {boolean} True, if the event was generated by a touch.\n */\nMouseSource.prototype.isEventSimulatedFromTouch_ = function(inEvent) {\n  const lts = this.lastTouches;\n  const x = inEvent.clientX;\n  const y = inEvent.clientY;\n  for (let i = 0, l = lts.length, t; i < l && (t = lts[i]); i++) {\n    // simulated mouse events will be swallowed near a primary touchend\n    const dx = Math.abs(x - t[0]);\n    const dy = Math.abs(y - t[1]);\n    if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nfunction prepareEvent(inEvent, dispatcher) {\n  const e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  const pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n\n  return e;\n}\n\n\n/**\n * Handler for `mousedown`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mousedown = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n};\n\n\n/**\n * Handler for `mousemove`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mousemove = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n};\n\n\n/**\n * Handler for `mouseup`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mouseup = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const p = this.pointerMap[POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      const e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n};\n\n\n/**\n * Handler for `mouseover`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mouseover = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n};\n\n\n/**\n * Handler for `mouseout`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mouseout = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n};\n\n\n/**\n * Dispatches a `pointercancel` event.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.cancel = function(inEvent) {\n  const e = prepareEvent(inEvent, this.dispatcher);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanupMouse();\n};\n\n\n/**\n * Remove the mouse from the list of active pointers.\n */\nMouseSource.prototype.cleanupMouse = function() {\n  delete this.pointerMap[POINTER_ID.toString()];\n};\nexport default MouseSource;\n","/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {inherits} from '../../util.js';\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {TRUE} from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/renderer/Layer}\n * @param {module:ol/layer/Layer} layer Layer.\n */\nconst CanvasLayerRenderer = function(layer) {\n\n  LayerRenderer.call(this, layer);\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.renderedResolution;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.transform_ = createTransform();\n\n};\n\ninherits(CanvasLayerRenderer, LayerRenderer);\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/extent~Extent} extent Clip extent.\n * @protected\n */\nCanvasLayerRenderer.prototype.clip = function(context, frameState, extent) {\n  const pixelRatio = frameState.pixelRatio;\n  const width = frameState.size[0] * pixelRatio;\n  const height = frameState.size[1] * pixelRatio;\n  const rotation = frameState.viewState.rotation;\n  const topLeft = getTopLeft(/** @type {module:ol/extent~Extent} */ (extent));\n  const topRight = getTopRight(/** @type {module:ol/extent~Extent} */ (extent));\n  const bottomRight = getBottomRight(/** @type {module:ol/extent~Extent} */ (extent));\n  const bottomLeft = getBottomLeft(/** @type {module:ol/extent~Extent} */ (extent));\n\n  applyTransform(frameState.coordinateToPixelTransform, topLeft);\n  applyTransform(frameState.coordinateToPixelTransform, topRight);\n  applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n  applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n  context.save();\n  rotateAtOffset(context, -rotation, width / 2, height / 2);\n  context.beginPath();\n  context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n  context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n  context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n  context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n  context.clip();\n  rotateAtOffset(context, rotation, width / 2, height / 2);\n};\n\n\n/**\n * @param {module:ol/render/EventType} type Event type.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/transform~Transform=} opt_transform Transform.\n * @private\n */\nCanvasLayerRenderer.prototype.dispatchComposeEvent_ = function(type, context, frameState, opt_transform) {\n  const layer = this.getLayer();\n  if (layer.hasListener(type)) {\n    const width = frameState.size[0] * frameState.pixelRatio;\n    const height = frameState.size[1] * frameState.pixelRatio;\n    const rotation = frameState.viewState.rotation;\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    const transform = opt_transform !== undefined ?\n      opt_transform : this.getTransform(frameState, 0);\n    const render = new CanvasImmediateRenderer(\n      context, frameState.pixelRatio, frameState.extent, transform,\n      frameState.viewState.rotation);\n    const composeEvent = new RenderEvent(type, render, frameState,\n      context, null);\n    layer.dispatchEvent(composeEvent);\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  }\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n *     callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @return {T|undefined} Callback result.\n * @template S,T,U\n */\nCanvasLayerRenderer.prototype.forEachLayerAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  const hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE, this);\n\n  if (hasFeature) {\n    return callback.call(thisArg, this.getLayer(), null);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {module:ol/transform~Transform=} opt_transform Transform.\n * @protected\n */\nCanvasLayerRenderer.prototype.postCompose = function(context, frameState, layerState, opt_transform) {\n  this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/transform~Transform=} opt_transform Transform.\n * @protected\n */\nCanvasLayerRenderer.prototype.preCompose = function(context, frameState, opt_transform) {\n  this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/transform~Transform=} opt_transform Transform.\n * @protected\n */\nCanvasLayerRenderer.prototype.dispatchRenderEvent = function(context, frameState, opt_transform) {\n  this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {number} offsetX Offset on the x-axis in view coordinates.\n * @protected\n * @return {!module:ol/transform~Transform} Transform.\n */\nCanvasLayerRenderer.prototype.getTransform = function(frameState, offsetX) {\n  const viewState = frameState.viewState;\n  const pixelRatio = frameState.pixelRatio;\n  const dx1 = pixelRatio * frameState.size[0] / 2;\n  const dy1 = pixelRatio * frameState.size[1] / 2;\n  const sx = pixelRatio / viewState.resolution;\n  const sy = -sx;\n  const angle = -viewState.rotation;\n  const dx2 = -viewState.center[0] + offsetX;\n  const dy2 = -viewState.center[1];\n  return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n};\n\n\n/**\n * @abstract\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {CanvasRenderingContext2D} context Context.\n */\nCanvasLayerRenderer.prototype.composeFrame = function(frameState, layerState, context) {};\n\n/**\n * @abstract\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @return {boolean} whether composeFrame should be called.\n */\nCanvasLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {};\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport {inherits} from '../../util.js';\nimport {scale as scaleCoordinate} from '../../coordinate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport {UNDEFINED} from '../../functions.js';\nimport CanvasLayerRenderer from '../canvas/Layer.js';\nimport {create as createTransform, apply as applyTransform} from '../../transform.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/renderer/canvas/Layer}\n * @param {module:ol/layer/Layer} layer Layer.\n */\nconst IntermediateCanvasRenderer = function(layer) {\n\n  CanvasLayerRenderer.call(this, layer);\n\n  /**\n   * @protected\n   * @type {module:ol/transform~Transform}\n   */\n  this.coordinateToCanvasPixelTransform = createTransform();\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.hitCanvasContext_ = null;\n\n};\n\ninherits(IntermediateCanvasRenderer, CanvasLayerRenderer);\n\n\n/**\n * @inheritDoc\n */\nIntermediateCanvasRenderer.prototype.composeFrame = function(frameState, layerState, context) {\n\n  this.preCompose(context, frameState);\n\n  const image = this.getImage();\n  if (image) {\n\n    // clipped rendering if layer extent is set\n    const extent = layerState.extent;\n    const clipped = extent !== undefined &&\n        !containsExtent(extent, frameState.extent) &&\n        intersects(extent, frameState.extent);\n    if (clipped) {\n      this.clip(context, frameState, /** @type {module:ol/extent~Extent} */ (extent));\n    }\n\n    const imageTransform = this.getImageTransform();\n    // for performance reasons, context.save / context.restore is not used\n    // to save and restore the transformation matrix and the opacity.\n    // see http://jsperf.com/context-save-restore-versus-variable\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layerState.opacity;\n\n    // for performance reasons, context.setTransform is only used\n    // when the view is rotated. see http://jsperf.com/canvas-transform\n    const dx = imageTransform[4];\n    const dy = imageTransform[5];\n    const dw = image.width * imageTransform[0];\n    const dh = image.height * imageTransform[3];\n    context.drawImage(image, 0, 0, +image.width, +image.height,\n      Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n    context.globalAlpha = alpha;\n\n    if (clipped) {\n      context.restore();\n    }\n  }\n\n  this.postCompose(context, frameState, layerState);\n};\n\n\n/**\n * @abstract\n * @return {HTMLCanvasElement|HTMLVideoElement|Image} Canvas.\n */\nIntermediateCanvasRenderer.prototype.getImage = function() {};\n\n\n/**\n * @abstract\n * @return {!module:ol/transform~Transform} Image transform.\n */\nIntermediateCanvasRenderer.prototype.getImageTransform = function() {};\n\n\n/**\n * @inheritDoc\n */\nIntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  const layer = this.getLayer();\n  const source = layer.getSource();\n  const resolution = frameState.viewState.resolution;\n  const rotation = frameState.viewState.rotation;\n  const skippedFeatureUids = frameState.skippedFeatureUids;\n  return source.forEachFeatureAtCoordinate(\n    coordinate, resolution, rotation, hitTolerance, skippedFeatureUids,\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @return {?} Callback result.\n     */\n    function(feature) {\n      return callback.call(thisArg, feature, layer);\n    });\n};\n\n\n/**\n * @inheritDoc\n */\nIntermediateCanvasRenderer.prototype.forEachLayerAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  if (!this.getImage()) {\n    return undefined;\n  }\n\n  if (this.getLayer().getSource().forEachFeatureAtCoordinate !== UNDEFINED) {\n    // for ImageCanvas sources use the original hit-detection logic,\n    // so that for example also transparent polygons are detected\n    return CanvasLayerRenderer.prototype.forEachLayerAtCoordinate.apply(this, arguments);\n  } else {\n    const pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n    scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n    const imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(),  imageData);\n    } else {\n      return undefined;\n    }\n  }\n};\n\nexport default IntermediateCanvasRenderer;\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {function()=} opt_errback Callback on error.\n * @param {string=} opt_callbackParam Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src = url + (url.indexOf('?') == -1 ? '?' : '&') +\n      (opt_callbackParam || 'callback') + '=' + key;\n  const timer = setTimeout(function() {\n    cleanup();\n    if (opt_errback) {\n      opt_errback();\n    }\n  }, 10000);\n  window[key] = function(data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.getElementsByTagName('head')[0].appendChild(script);\n}\n","/**\n * @module ol/structs/LRUCache\n */\nimport {inherits} from '../util.js';\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/EventTarget.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n * @constructor\n * @extends {module:ol/events/EventTarget}\n * @fires module:ol/events/Event~Event\n * @struct\n * @template T\n * @param {number=} opt_highWaterMark High water mark.\n */\nconst LRUCache = function(opt_highWaterMark) {\n\n  EventTarget.call(this);\n\n  /**\n   * @type {number}\n   */\n  this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.count_ = 0;\n\n  /**\n   * @private\n   * @type {!Object.<string, module:ol/structs/LRUCache~Entry>}\n   */\n  this.entries_ = {};\n\n  /**\n   * @private\n   * @type {?module:ol/structs/LRUCache~Entry}\n   */\n  this.oldest_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/structs/LRUCache~Entry}\n   */\n  this.newest_ = null;\n\n};\n\ninherits(LRUCache, EventTarget);\n\n\n/**\n * @return {boolean} Can expire cache.\n */\nLRUCache.prototype.canExpireCache = function() {\n  return this.getCount() > this.highWaterMark;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nLRUCache.prototype.clear = function() {\n  this.count_ = 0;\n  this.entries_ = {};\n  this.oldest_ = null;\n  this.newest_ = null;\n  this.dispatchEvent(EventType.CLEAR);\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Contains key.\n */\nLRUCache.prototype.containsKey = function(key) {\n  return this.entries_.hasOwnProperty(key);\n};\n\n\n/**\n * @param {function(this: S, T, string, module:ol/structs/LRUCache): ?} f The function\n *     to call for every entry from the oldest to the newer. This function takes\n *     3 arguments (the entry value, the entry key and the LRUCache object).\n *     The return value is ignored.\n * @param {S=} opt_this The object to use as `this` in `f`.\n * @template S\n */\nLRUCache.prototype.forEach = function(f, opt_this) {\n  let entry = this.oldest_;\n  while (entry) {\n    f.call(opt_this, entry.value_, entry.key_, this);\n    entry = entry.newer;\n  }\n};\n\n\n/**\n * @param {string} key Key.\n * @return {T} Value.\n */\nLRUCache.prototype.get = function(key) {\n  const entry = this.entries_[key];\n  assert(entry !== undefined,\n    15); // Tried to get a value for a key that does not exist in the cache\n  if (entry === this.newest_) {\n    return entry.value_;\n  } else if (entry === this.oldest_) {\n    this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (this.oldest_.newer);\n    this.oldest_.older = null;\n  } else {\n    entry.newer.older = entry.older;\n    entry.older.newer = entry.newer;\n  }\n  entry.newer = null;\n  entry.older = this.newest_;\n  this.newest_.newer = entry;\n  this.newest_ = entry;\n  return entry.value_;\n};\n\n\n/**\n * Remove an entry from the cache.\n * @param {string} key The entry key.\n * @return {T} The removed entry.\n */\nLRUCache.prototype.remove = function(key) {\n  const entry = this.entries_[key];\n  assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n  if (entry === this.newest_) {\n    this.newest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.older);\n    if (this.newest_) {\n      this.newest_.newer = null;\n    }\n  } else if (entry === this.oldest_) {\n    this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.newer);\n    if (this.oldest_) {\n      this.oldest_.older = null;\n    }\n  } else {\n    entry.newer.older = entry.older;\n    entry.older.newer = entry.newer;\n  }\n  delete this.entries_[key];\n  --this.count_;\n  return entry.value_;\n};\n\n\n/**\n * @return {number} Count.\n */\nLRUCache.prototype.getCount = function() {\n  return this.count_;\n};\n\n\n/**\n * @return {Array.<string>} Keys.\n */\nLRUCache.prototype.getKeys = function() {\n  const keys = new Array(this.count_);\n  let i = 0;\n  let entry;\n  for (entry = this.newest_; entry; entry = entry.older) {\n    keys[i++] = entry.key_;\n  }\n  return keys;\n};\n\n\n/**\n * @return {Array.<T>} Values.\n */\nLRUCache.prototype.getValues = function() {\n  const values = new Array(this.count_);\n  let i = 0;\n  let entry;\n  for (entry = this.newest_; entry; entry = entry.older) {\n    values[i++] = entry.value_;\n  }\n  return values;\n};\n\n\n/**\n * @return {T} Last value.\n */\nLRUCache.prototype.peekLast = function() {\n  return this.oldest_.value_;\n};\n\n\n/**\n * @return {string} Last key.\n */\nLRUCache.prototype.peekLastKey = function() {\n  return this.oldest_.key_;\n};\n\n\n/**\n * Get the key of the newest item in the cache.  Throws if the cache is empty.\n * @return {string} The newest key.\n */\nLRUCache.prototype.peekFirstKey = function() {\n  return this.newest_.key_;\n};\n\n\n/**\n * @return {T} value Value.\n */\nLRUCache.prototype.pop = function() {\n  const entry = this.oldest_;\n  delete this.entries_[entry.key_];\n  if (entry.newer) {\n    entry.newer.older = null;\n  }\n  this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.newer);\n  if (!this.oldest_) {\n    this.newest_ = null;\n  }\n  --this.count_;\n  return entry.value_;\n};\n\n\n/**\n * @param {string} key Key.\n * @param {T} value Value.\n */\nLRUCache.prototype.replace = function(key, value) {\n  this.get(key);  // update `newest_`\n  this.entries_[key].value_ = value;\n};\n\n\n/**\n * @param {string} key Key.\n * @param {T} value Value.\n */\nLRUCache.prototype.set = function(key, value) {\n  assert(!(key in this.entries_),\n    16); // Tried to set a value for a key that is used already\n  const entry = /** @type {module:ol/structs/LRUCache~Entry} */ ({\n    key_: key,\n    newer: null,\n    older: this.newest_,\n    value_: value\n  });\n  if (!this.newest_) {\n    this.oldest_ = entry;\n  } else {\n    this.newest_.newer = entry;\n  }\n  this.newest_ = entry;\n  this.entries_[key] = entry;\n  ++this.count_;\n};\n\n\n/**\n * Set a maximum number of entries for the cache.\n * @param {number} size Cache size.\n * @api\n */\nLRUCache.prototype.setSize = function(size) {\n  this.highWaterMark = size;\n};\n\n\n/**\n * Prune the cache.\n */\nLRUCache.prototype.prune = function() {\n  while (this.canExpireCache()) {\n    this.pop();\n  }\n};\nexport default LRUCache;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from '../flat/contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array.<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array.<number>} flatCenters Flat centers.\n * @return {Array.<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/interaction/Modify\n */\nimport {getUid, inherits} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {equals} from '../array.js';\nimport {equals as coordinatesEqual, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, closestOnSegment} from '../coordinate.js';\nimport {listen, unlisten} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {always, primaryAction, altKeyOnly, singleClick} from '../events/condition.js';\nimport {boundingExtent, buffer, createOrUpdateFromCoordinate} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend'\n};\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array.<number>} [depth]\n * @property {module:ol/Feature} feature\n * @property {module:ol/geom/SimpleGeometry} geometry\n * @property {number} index\n * @property {Array.<module:ol/extent~Extent>} segment\n * @property {Array.<module:ol/interaction/Modify~SegmentData>} [featureSegments]\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {module:ol/events/condition~Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {module:ol/events/condition~Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex can be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style used for the features being modified. By default the default edit\n * style is used (see {@link module:ol/style}).\n * @property {module:ol/source/Vector} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the features option.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the source option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {ModifyEventType} type Type.\n * @param {module:ol/Collection.<module:ol/Feature>} features\n * The features modified.\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserPointerEvent\n * Associated {@link module:ol/MapBrowserPointerEvent}.\n */\nexport const ModifyEvent = function(type, features, mapBrowserPointerEvent) {\n\n  Event.call(this, type);\n\n  /**\n   * The features being modified.\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @api\n   */\n  this.features = features;\n\n  /**\n   * Associated {@link module:ol/MapBrowserEvent}.\n   * @type {module:ol/MapBrowserEvent}\n   * @api\n   */\n  this.mapBrowserEvent = mapBrowserPointerEvent;\n};\n\ninherits(ModifyEvent, Event);\n\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/Modify~Options} options Options.\n * @fires module:ol/interaction/Modify~ModifyEvent\n * @api\n */\nconst Modify = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleEvent: handleEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : primaryAction;\n\n\n  /**\n   * @private\n   * @param {module:ol/MapBrowserEvent} mapBrowserEvent Browser event.\n   * @return {boolean} Combined condition result.\n   */\n  this.defaultDeleteCondition_ = function(mapBrowserEvent) {\n    return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n  };\n\n  /**\n   * @type {module:ol/events/condition~Condition}\n   * @private\n   */\n  this.deleteCondition_ = options.deleteCondition ?\n    options.deleteCondition : this.defaultDeleteCondition_;\n\n  /**\n   * @type {module:ol/events/condition~Condition}\n   * @private\n   */\n  this.insertVertexCondition_ = options.insertVertexCondition ?\n    options.insertVertexCondition : always;\n\n  /**\n   * Editing vertex.\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * Segments intersecting {@link this.vertexFeature_} by segment uid.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.vertexSegments_ = null;\n\n  /**\n   * @type {module:ol~Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * Tracks if the next `singleclick` event should be ignored to prevent\n   * accidental deletion right after vertex creation.\n   * @type {boolean}\n   * @private\n   */\n  this.ignoreNextSingleClick_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {module:ol/structs/RBush.<module:ol/interaction/Modify~SegmentData>}\n   * @private\n   */\n  this.rBush_ = new RBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = [];\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {module:ol/layer/Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style ? options.style :\n      getDefaultStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @const\n   * @private\n   * @type {!Object.<string, function(module:ol/Feature, module:ol/geom/Geometry)>}\n   */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'Circle': this.writeCircleGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_\n  };\n\n\n  /**\n   * @type {module:ol/source/Vector}\n   * @private\n   */\n  this.source_ = null;\n\n  let features;\n  if (options.source) {\n    this.source_ = options.source;\n    features = new Collection(this.source_.getFeatures());\n    listen(this.source_, VectorEventType.ADDFEATURE,\n      this.handleSourceAdd_, this);\n    listen(this.source_, VectorEventType.REMOVEFEATURE,\n      this.handleSourceRemove_, this);\n  } else {\n    features = options.features;\n  }\n  if (!features) {\n    throw new Error('The modify interaction requires features or a source');\n  }\n\n  /**\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @private\n   */\n  this.features_ = features;\n\n  this.features_.forEach(this.addFeature_.bind(this));\n  listen(this.features_, CollectionEventType.ADD,\n    this.handleFeatureAdd_, this);\n  listen(this.features_, CollectionEventType.REMOVE,\n    this.handleFeatureRemove_, this);\n\n  /**\n   * @type {module:ol/MapBrowserPointerEvent}\n   * @private\n   */\n  this.lastPointerEvent_ = null;\n\n};\n\ninherits(Modify, PointerInteraction);\n\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nModify.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n    this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n  }\n  const map = this.getMap();\n  if (map && map.isRendered() && this.getActive()) {\n    this.handlePointerAtPixel_(this.lastPixel_, map);\n  }\n  listen(feature, EventType.CHANGE,\n    this.handleFeatureChange_, this);\n};\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nModify.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new ModifyEvent(\n      ModifyEventType.MODIFYSTART, this.features_, evt));\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nModify.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n  unlisten(feature, EventType.CHANGE,\n    this.handleFeatureChange_, this);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nModify.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<module:ol/interaction/Modify~SegmentData>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n     * @param {module:ol/interaction/Modify~SegmentData} node RTree node.\n     */\n    function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nModify.prototype.setActive = function(active) {\n  if (this.vertexFeature_ && !active) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n  PointerInteraction.prototype.setActive.call(this, active);\n};\n\n\n/**\n * @inheritDoc\n */\nModify.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  PointerInteraction.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {module:ol/source/Vector~VectorSourceEvent} event Event.\n * @private\n */\nModify.prototype.handleSourceAdd_ = function(event) {\n  if (event.feature) {\n    this.features_.push(event.feature);\n  }\n};\n\n\n/**\n * @param {module:ol/source/Vector~VectorSourceEvent} event Event.\n * @private\n */\nModify.prototype.handleSourceRemove_ = function(event) {\n  if (event.feature) {\n    this.features_.remove(event.feature);\n  }\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nModify.prototype.handleFeatureAdd_ = function(evt) {\n  this.addFeature_(/** @type {module:ol/Feature} */ (evt.element));\n};\n\n\n/**\n * @param {module:ol/events/Event} evt Event.\n * @private\n */\nModify.prototype.handleFeatureChange_ = function(evt) {\n  if (!this.changingFeature_) {\n    const feature = /** @type {module:ol/Feature} */ (evt.target);\n    this.removeFeature_(feature);\n    this.addFeature_(feature);\n  }\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nModify.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {module:ol/Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Point} geometry Geometry.\n * @private\n */\nModify.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    feature: feature,\n    geometry: geometry,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiPoint} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      depth: [i],\n      index: i,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/LineString} geometry Geometry.\n * @private\n */\nModify.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: i,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiLineString} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Polygon} geometry Geometry.\n * @private\n */\nModify.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j, k],\n          index: i,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * We convert a circle into two segments.  The segment at index\n * {@link CIRCLE_CENTER_INDEX} is the\n * circle's center (a point).  The segment at index\n * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n * the circumference, and is not a line segment.\n *\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/geom/Circle} geometry Geometry.\n * @private\n */\nModify.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCenter();\n  const centerSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    feature: feature,\n    geometry: geometry,\n    index: CIRCLE_CENTER_INDEX,\n    segment: [coordinates, coordinates]\n  });\n  const circumferenceSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    feature: feature,\n    geometry: geometry,\n    index: CIRCLE_CIRCUMFERENCE_INDEX,\n    segment: [coordinates, coordinates]\n  });\n  const featureSegments = [centerSegmentData, circumferenceSegmentData];\n  centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n  this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n  this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @private\n */\nModify.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    this.SEGMENT_WRITERS_[geometries[i].getType()].call(this, feature, geometries[i]);\n  }\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinates Coordinates.\n * @return {module:ol/Feature} Vertex feature.\n * @private\n */\nModify.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new Feature(new Point(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {module:ol/interaction/Modify~SegmentData} a The first segment data.\n * @param {module:ol/interaction/Modify~SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Modify}\n */\nfunction handleDownEvent(evt) {\n  if (!this.condition_(evt)) {\n    return false;\n  }\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  const pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n  this.dragSegments_.length = 0;\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const insertVertices = [];\n    const geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(compareIndexes);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += '-' + depth.join('-'); // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n      segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        const closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch);\n        if (coordinatesEqual(closestVertex, vertex) && !componentSegments[uid][0]) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n        }\n      } else if (coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n\n        // prevent dragging closed linestrings by the connecting node\n        if ((segmentDataMatch.geometry.getType() ===\n            GeometryType.LINE_STRING ||\n            segmentDataMatch.geometry.getType() ===\n            GeometryType.MULTI_LINE_STRING) &&\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0) {\n          continue;\n        }\n\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      } else if (this.insertVertexCondition_(evt) && getUid(segment) in this.vertexSegments_ &&\n          (!componentSegments[uid][0] && !componentSegments[uid][1])) {\n        insertVertices.push([segmentDataMatch, vertex]);\n      }\n    }\n    if (insertVertices.length) {\n      this.willModifyFeatures_(evt);\n    }\n    for (let j = insertVertices.length - 1; j >= 0; --j) {\n      this.insertVertex_.apply(this, insertVertices[j]);\n    }\n  }\n  return !!this.vertexFeature_;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @this {module:ol/interaction/Modify}\n */\nfunction handleDragEvent(evt) {\n  this.ignoreNextSingleClick_ = false;\n  this.willModifyFeatures_(evt);\n\n  const vertex = evt.coordinate;\n  for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n    const dragSegment = this.dragSegments_[i];\n    const segmentData = dragSegment[0];\n    const depth = segmentData.depth;\n    const geometry = segmentData.geometry;\n    let coordinates;\n    const segment = segmentData.segment;\n    const index = dragSegment[1];\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(segment[index][vertex.length]);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.POINT:\n        coordinates = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.MULTI_POINT:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index] = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.CIRCLE:\n        segment[0] = segment[1] = vertex;\n        if (segmentData.index === CIRCLE_CENTER_INDEX) {\n          this.changingFeature_ = true;\n          geometry.setCenter(vertex);\n          this.changingFeature_ = false;\n        } else { // We're dragging the circle's circumference:\n          this.changingFeature_ = true;\n          geometry.setRadius(coordinateDistance(geometry.getCenter(), vertex));\n          this.changingFeature_ = false;\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (coordinates) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n    }\n  }\n  this.createOrUpdateVertexFeature_(vertex);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Modify}\n */\nfunction handleUpEvent(evt) {\n  for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n    const segmentData = this.dragSegments_[i][0];\n    const geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE) {\n      // Update a circle object in the R* bush:\n      const coordinates = geometry.getCenter();\n      const centerSegmentData = segmentData.featureSegments[0];\n      const circumferenceSegmentData = segmentData.featureSegments[1];\n      centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n      circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n      this.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n      this.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n    } else {\n      this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n    }\n  }\n  if (this.modified_) {\n    this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n  }\n  return false;\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Modify}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  this.lastPointerEvent_ = mapBrowserEvent;\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n    if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK || !this.ignoreNextSingleClick_) {\n      handled = this.removePoint();\n    } else {\n      handled = true;\n    }\n  }\n\n  if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n    this.ignoreNextSingleClick_ = false;\n  }\n\n  return handlePointerEvent.call(this, mapBrowserEvent) && !handled;\n}\n\n\n/**\n * @param {module:ol/MapBrowserEvent} evt Event.\n * @private\n */\nModify.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {module:ol~Pixel} pixel Pixel\n * @param {module:ol/PluggableMap} map Map.\n * @private\n */\nModify.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return pointDistanceToSegmentDataSquared(pixelCoordinate, a) -\n        pointDistanceToSegmentDataSquared(pixelCoordinate, b);\n  };\n\n  const box = buffer(createOrUpdateFromCoordinate(pixelCoordinate),\n    map.getView().getResolution() * this.pixelTolerance_);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = closestOnSegmentData(pixelCoordinate, node);\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    let dist = coordinateDistance(pixel, vertexPixel);\n    if (dist <= this.pixelTolerance_) {\n      const vertexSegments = {};\n\n      if (node.geometry.getType() === GeometryType.CIRCLE &&\n      node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        this.snappedToVertex_ = true;\n        this.createOrUpdateVertexFeature_(vertex);\n      } else {\n        const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        }\n        this.createOrUpdateVertexFeature_(vertex);\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          const segment = nodes[i].segment;\n          if ((coordinatesEqual(closestSegment[0], segment[0]) &&\n              coordinatesEqual(closestSegment[1], segment[1]) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n              coordinatesEqual(closestSegment[1], segment[0])))) {\n            vertexSegments[getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n      }\n\n      vertexSegments[getUid(closestSegment)] = true;\n      this.vertexSegments_ = vertexSegments;\n      return;\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {module:ol/coordinate~Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {module:ol/interaction/Modify~SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction pointDistanceToSegmentDataSquared(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    const circleGeometry = /** @type {module:ol/geom/Circle} */ (geometry);\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const distanceToCenterSquared =\n            squaredCoordinateDistance(circleGeometry.getCenter(), pointCoordinates);\n      const distanceToCircumference =\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n  return squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {module:ol/coordinate~Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {module:ol/interaction/Modify~SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {module:ol/coordinate~Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE &&\n  segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n    return geometry.getClosestPoint(pointCoordinates);\n  }\n  return closestOnSegment(pointCoordinates, segmentData.segment);\n}\n\n\n/**\n * @param {module:ol/interaction/Modify~SegmentData} segmentData Segment data.\n * @param {module:ol/coordinate~Coordinate} vertex Vertex.\n * @private\n */\nModify.prototype.insertVertex_ = function(segmentData, vertex) {\n  const segment = segmentData.segment;\n  const feature = segmentData.feature;\n  const geometry = segmentData.geometry;\n  const depth = segmentData.depth;\n  const index = /** @type {number} */ (segmentData.index);\n  let coordinates;\n\n  while (vertex.length < geometry.getStride()) {\n    vertex.push(0);\n  }\n\n  switch (geometry.getType()) {\n    case GeometryType.MULTI_LINE_STRING:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.POLYGON:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.MULTI_POLYGON:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.LINE_STRING:\n      coordinates = geometry.getCoordinates();\n      coordinates.splice(index + 1, 0, vertex);\n      break;\n    default:\n      return;\n  }\n\n  this.setGeometryCoordinates_(geometry, coordinates);\n  const rTree = this.rBush_;\n  rTree.remove(segmentData);\n  this.updateSegmentIndices_(geometry, index, depth, 1);\n  const newSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    segment: [segment[0], vertex],\n    feature: feature,\n    geometry: geometry,\n    depth: depth,\n    index: index\n  });\n  rTree.insert(boundingExtent(newSegmentData.segment),\n    newSegmentData);\n  this.dragSegments_.push([newSegmentData, 1]);\n\n  const newSegmentData2 = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    segment: [vertex, segment[1]],\n    feature: feature,\n    geometry: geometry,\n    depth: depth,\n    index: index + 1\n  });\n  rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n  this.dragSegments_.push([newSegmentData2, 0]);\n  this.ignoreNextSingleClick_ = true;\n};\n\n/**\n * Removes the vertex currently being pointed.\n * @return {boolean} True when a vertex was removed.\n * @api\n */\nModify.prototype.removePoint = function() {\n  if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n    const evt = this.lastPointerEvent_;\n    this.willModifyFeatures_(evt);\n    this.removeVertex_();\n    this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Removes a vertex from all matching features.\n * @return {boolean} True when a vertex was removed.\n * @private\n */\nModify.prototype.removeVertex_ = function() {\n  const dragSegments = this.dragSegments_;\n  const segmentsByFeature = {};\n  let deleted = false;\n  let component, coordinates, dragSegment, geometry, i, index, left;\n  let newIndex, right, segmentData, uid;\n  for (i = dragSegments.length - 1; i >= 0; --i) {\n    dragSegment = dragSegments[i];\n    segmentData = dragSegment[0];\n    uid = getUid(segmentData.feature);\n    if (segmentData.depth) {\n      // separate feature components\n      uid += '-' + segmentData.depth.join('-');\n    }\n    if (!(uid in segmentsByFeature)) {\n      segmentsByFeature[uid] = {};\n    }\n    if (dragSegment[1] === 0) {\n      segmentsByFeature[uid].right = segmentData;\n      segmentsByFeature[uid].index = segmentData.index;\n    } else if (dragSegment[1] == 1) {\n      segmentsByFeature[uid].left = segmentData;\n      segmentsByFeature[uid].index = segmentData.index + 1;\n    }\n\n  }\n  for (uid in segmentsByFeature) {\n    right = segmentsByFeature[uid].right;\n    left = segmentsByFeature[uid].left;\n    index = segmentsByFeature[uid].index;\n    newIndex = index - 1;\n    if (left !== undefined) {\n      segmentData = left;\n    } else {\n      segmentData = right;\n    }\n    if (newIndex < 0) {\n      newIndex = 0;\n    }\n    geometry = segmentData.geometry;\n    coordinates = geometry.getCoordinates();\n    component = coordinates;\n    deleted = false;\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        if (coordinates[segmentData.depth[0]].length > 2) {\n          coordinates[segmentData.depth[0]].splice(index, 1);\n          deleted = true;\n        }\n        break;\n      case GeometryType.LINE_STRING:\n        if (coordinates.length > 2) {\n          coordinates.splice(index, 1);\n          deleted = true;\n        }\n        break;\n      case GeometryType.MULTI_POLYGON:\n        component = component[segmentData.depth[1]];\n        /* falls through */\n      case GeometryType.POLYGON:\n        component = component[segmentData.depth[0]];\n        if (component.length > 4) {\n          if (index == component.length - 1) {\n            index = 0;\n          }\n          component.splice(index, 1);\n          deleted = true;\n          if (index === 0) {\n            // close the ring again\n            component.pop();\n            component.push(component[0]);\n            newIndex = component.length - 1;\n          }\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (deleted) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n      const segments = [];\n      if (left !== undefined) {\n        this.rBush_.remove(left);\n        segments.push(left.segment[0]);\n      }\n      if (right !== undefined) {\n        this.rBush_.remove(right);\n        segments.push(right.segment[1]);\n      }\n      if (left !== undefined && right !== undefined) {\n        const newSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n          depth: segmentData.depth,\n          feature: segmentData.feature,\n          geometry: segmentData.geometry,\n          index: newIndex,\n          segment: segments\n        });\n        this.rBush_.insert(boundingExtent(newSegmentData.segment),\n          newSegmentData);\n      }\n      this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n      if (this.vertexFeature_) {\n        this.overlay_.getSource().removeFeature(this.vertexFeature_);\n        this.vertexFeature_ = null;\n      }\n      dragSegments.length = 0;\n    }\n\n  }\n  return deleted;\n};\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nModify.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @param {number} index Index.\n * @param {Array.<number>|undefined} depth Depth.\n * @param {number} delta Delta (1 or -1).\n * @private\n */\nModify.prototype.updateSegmentIndices_ = function(\n  geometry, index, depth, delta) {\n  this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\n    if (segmentDataMatch.geometry === geometry &&\n        (depth === undefined || segmentDataMatch.depth === undefined ||\n        equals(segmentDataMatch.depth, depth)) &&\n        segmentDataMatch.index > index) {\n      segmentDataMatch.index += delta;\n    }\n  });\n};\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n\nexport default Modify;\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n","/**\n * @module ol/render/Box\n */\n// FIXME add rotation\n\nimport {inherits} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\n/**\n * @constructor\n * @extends {module:ol/Disposable}\n * @param {string} className CSS class name.\n */\nconst RenderBox = function(className) {\n\n  /**\n   * @type {module:ol/geom/Polygon}\n   * @private\n   */\n  this.geometry_ = null;\n\n  /**\n   * @type {HTMLDivElement}\n   * @private\n   */\n  this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\n  this.element_.style.position = 'absolute';\n  this.element_.className = 'ol-box ' + className;\n\n  /**\n   * @private\n   * @type {module:ol/PluggableMap}\n   */\n  this.map_ = null;\n\n  /**\n   * @private\n   * @type {module:ol~Pixel}\n   */\n  this.startPixel_ = null;\n\n  /**\n   * @private\n   * @type {module:ol~Pixel}\n   */\n  this.endPixel_ = null;\n\n};\n\ninherits(RenderBox, Disposable);\n\n\n/**\n * @inheritDoc\n */\nRenderBox.prototype.disposeInternal = function() {\n  this.setMap(null);\n};\n\n\n/**\n * @private\n */\nRenderBox.prototype.render_ = function() {\n  const startPixel = this.startPixel_;\n  const endPixel = this.endPixel_;\n  const px = 'px';\n  const style = this.element_.style;\n  style.left = Math.min(startPixel[0], endPixel[0]) + px;\n  style.top = Math.min(startPixel[1], endPixel[1]) + px;\n  style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n  style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n};\n\n\n/**\n * @param {module:ol/PluggableMap} map Map.\n */\nRenderBox.prototype.setMap = function(map) {\n  if (this.map_) {\n    this.map_.getOverlayContainer().removeChild(this.element_);\n    const style = this.element_.style;\n    style.left = style.top = style.width = style.height = 'inherit';\n  }\n  this.map_ = map;\n  if (this.map_) {\n    this.map_.getOverlayContainer().appendChild(this.element_);\n  }\n};\n\n\n/**\n * @param {module:ol~Pixel} startPixel Start pixel.\n * @param {module:ol~Pixel} endPixel End pixel.\n */\nRenderBox.prototype.setPixels = function(startPixel, endPixel) {\n  this.startPixel_ = startPixel;\n  this.endPixel_ = endPixel;\n  this.createOrUpdateGeometry();\n  this.render_();\n};\n\n\n/**\n * Creates or updates the cached geometry.\n */\nRenderBox.prototype.createOrUpdateGeometry = function() {\n  const startPixel = this.startPixel_;\n  const endPixel = this.endPixel_;\n  const pixels = [\n    startPixel,\n    [startPixel[0], endPixel[1]],\n    endPixel,\n    [endPixel[0], startPixel[1]]\n  ];\n  const coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n  // close the polygon\n  coordinates[4] = coordinates[0].slice();\n  if (!this.geometry_) {\n    this.geometry_ = new Polygon([coordinates]);\n  } else {\n    this.geometry_.setCoordinates([coordinates]);\n  }\n};\n\n\n/**\n * @return {module:ol/geom/Polygon} Geometry.\n */\nRenderBox.prototype.getGeometry = function() {\n  return this.geometry_;\n};\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {inherits} from '../util.js';\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {UNDEFINED} from '../functions.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, module:ol/MapBrowserEvent, module:ol~Pixel, module:ol~Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {module:ol/interaction/DragBox~EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n */\n\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n *\n * @param {string} type The event type.\n * @param {module:ol/coordinate~Coordinate} coordinate The event coordinate.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Originating event.\n * @extends {module:ol/events/Event}\n * @constructor\n */\nconst DragBoxEvent = function(type, coordinate, mapBrowserEvent) {\n  Event.call(this, type);\n\n  /**\n   * The coordinate of the drag event.\n   * @const\n   * @type {module:ol/coordinate~Coordinate}\n   * @api\n   */\n  this.coordinate = coordinate;\n\n  /**\n   * @const\n   * @type {module:ol/MapBrowserEvent}\n   * @api\n   */\n  this.mapBrowserEvent = mapBrowserEvent;\n\n};\n\ninherits(DragBoxEvent, Event);\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @fires module:ol/interaction/DragBox~DragBoxEvent\n * @param {module:ol/interaction/DragBox~Options=} opt_options Options.\n * @api\n */\nconst DragBox = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {module:ol/render/Box}\n   * @private\n   */\n  this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n  /**\n   * @type {module:ol~Pixel}\n   * @private\n   */\n  this.startPixel_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : always;\n\n  /**\n   * @private\n   * @type {module:ol/interaction/DragBox~EndCondition}\n   */\n  this.boxEndCondition_ = options.boxEndCondition ?\n    options.boxEndCondition : defaultBoxEndCondition;\n};\n\ninherits(DragBox, PointerInteraction);\n\n\n/**\n * The default condition for determining whether the boxend event\n * should fire.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent The originating MapBrowserEvent\n *     leading to the box end.\n * @param {module:ol~Pixel} startPixel The starting pixel of the box.\n * @param {module:ol~Pixel} endPixel The end pixel of the box.\n * @return {boolean} Whether or not the boxend condition should be fired.\n * @this {module:ol/interaction/DragBox}\n */\nfunction defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n  const width = endPixel[0] - startPixel[0];\n  const height = endPixel[1] - startPixel[1];\n  return width * width + height * height >= this.minArea_;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n  this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n    mapBrowserEvent.coordinate, mapBrowserEvent));\n}\n\n\n/**\n * Returns geometry of last drawn box.\n * @return {module:ol/geom/Polygon} Geometry.\n * @api\n */\nDragBox.prototype.getGeometry = function() {\n  return this.box_.getGeometry();\n};\n\n\n/**\n * To be overridden by child classes.\n * FIXME: use constructor option instead of relying on overriding.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @protected\n */\nDragBox.prototype.onBoxEnd = UNDEFINED;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  this.box_.setMap(null);\n\n  if (this.boxEndCondition_(mapBrowserEvent,\n    this.startPixel_, mapBrowserEvent.pixel)) {\n    this.onBoxEnd(mapBrowserEvent);\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)) {\n    this.startPixel_ = mapBrowserEvent.pixel;\n    this.box_.setMap(mapBrowserEvent.map);\n    this.box_.setPixels(this.startPixel_, this.startPixel_);\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\nexport default DragBox;\n","/**\n * @module ol/GeolocationProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions'\n};\n","/**\n * @module ol/Geolocation\n */\nimport {inherits} from './util.js';\nimport GeolocationProperty from './GeolocationProperty.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport {listen} from './events.js';\nimport EventType from './events/EventType.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {GEOLOCATION} from './has.js';\nimport {toRadians} from './math.js';\nimport {get as getProjection, getTransformFromProjections, identityTransform} from './proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {GeolocationPositionOptions} [trackingOptions] Tracking options.\n * See {@link http://www.w3.org/TR/geolocation-API/#position_options_interface}.\n * @property {module:ol/proj~ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](http://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes, register a listener for the generic\n * `change` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     var geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       window.console.log(geolocation.getPosition());\n *     });\n *\n * @fires error\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/Geolocation~Options=} opt_options Options.\n * @api\n */\nconst Geolocation = function(opt_options) {\n\n  BaseObject.call(this);\n\n  const options = opt_options || {};\n\n  /**\n   * The unprojected (EPSG:4326) device position.\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.position_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/proj~TransformFunction}\n   */\n  this.transform_ = identityTransform;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.watchId_ = undefined;\n\n  listen(\n    this, getChangeEventType(GeolocationProperty.PROJECTION),\n    this.handleProjectionChanged_, this);\n  listen(\n    this, getChangeEventType(GeolocationProperty.TRACKING),\n    this.handleTrackingChanged_, this);\n\n  if (options.projection !== undefined) {\n    this.setProjection(options.projection);\n  }\n  if (options.trackingOptions !== undefined) {\n    this.setTrackingOptions(options.trackingOptions);\n  }\n\n  this.setTracking(options.tracking !== undefined ? options.tracking : false);\n\n};\n\ninherits(Geolocation, BaseObject);\n\n\n/**\n * @inheritDoc\n */\nGeolocation.prototype.disposeInternal = function() {\n  this.setTracking(false);\n  BaseObject.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @private\n */\nGeolocation.prototype.handleProjectionChanged_ = function() {\n  const projection = this.getProjection();\n  if (projection) {\n    this.transform_ = getTransformFromProjections(\n      getProjection('EPSG:4326'), projection);\n    if (this.position_) {\n      this.set(GeolocationProperty.POSITION, this.transform_(this.position_));\n    }\n  }\n};\n\n\n/**\n * @private\n */\nGeolocation.prototype.handleTrackingChanged_ = function() {\n  if (GEOLOCATION) {\n    const tracking = this.getTracking();\n    if (tracking && this.watchId_ === undefined) {\n      this.watchId_ = navigator.geolocation.watchPosition(\n        this.positionChange_.bind(this),\n        this.positionError_.bind(this),\n        this.getTrackingOptions());\n    } else if (!tracking && this.watchId_ !== undefined) {\n      navigator.geolocation.clearWatch(this.watchId_);\n      this.watchId_ = undefined;\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {GeolocationPosition} position position event.\n */\nGeolocation.prototype.positionChange_ = function(position) {\n  const coords = position.coords;\n  this.set(GeolocationProperty.ACCURACY, coords.accuracy);\n  this.set(GeolocationProperty.ALTITUDE,\n    coords.altitude === null ? undefined : coords.altitude);\n  this.set(GeolocationProperty.ALTITUDE_ACCURACY,\n    coords.altitudeAccuracy === null ?\n      undefined : coords.altitudeAccuracy);\n  this.set(GeolocationProperty.HEADING, coords.heading === null ?\n    undefined : toRadians(coords.heading));\n  if (!this.position_) {\n    this.position_ = [coords.longitude, coords.latitude];\n  } else {\n    this.position_[0] = coords.longitude;\n    this.position_[1] = coords.latitude;\n  }\n  const projectedPosition = this.transform_(this.position_);\n  this.set(GeolocationProperty.POSITION, projectedPosition);\n  this.set(GeolocationProperty.SPEED,\n    coords.speed === null ? undefined : coords.speed);\n  const geometry = circularPolygon(this.position_, coords.accuracy);\n  geometry.applyTransform(this.transform_);\n  this.set(GeolocationProperty.ACCURACY_GEOMETRY, geometry);\n  this.changed();\n};\n\n/**\n * Triggered when the Geolocation returns an error.\n * @event error\n * @api\n */\n\n/**\n * @private\n * @param {GeolocationPositionError} error error object.\n */\nGeolocation.prototype.positionError_ = function(error) {\n  error.type = EventType.ERROR;\n  this.setTracking(false);\n  this.dispatchEvent(/** @type {{type: string, target: undefined}} */ (error));\n};\n\n\n/**\n * Get the accuracy of the position in meters.\n * @return {number|undefined} The accuracy of the position measurement in\n *     meters.\n * @observable\n * @api\n */\nGeolocation.prototype.getAccuracy = function() {\n  return /** @type {number|undefined} */ (this.get(GeolocationProperty.ACCURACY));\n};\n\n\n/**\n * Get a geometry of the position accuracy.\n * @return {?module:ol/geom/Polygon} A geometry of the position accuracy.\n * @observable\n * @api\n */\nGeolocation.prototype.getAccuracyGeometry = function() {\n  return (\n    /** @type {?module:ol/geom/Polygon} */ (this.get(GeolocationProperty.ACCURACY_GEOMETRY) || null)\n  );\n};\n\n\n/**\n * Get the altitude associated with the position.\n * @return {number|undefined} The altitude of the position in meters above mean\n *     sea level.\n * @observable\n * @api\n */\nGeolocation.prototype.getAltitude = function() {\n  return /** @type {number|undefined} */ (this.get(GeolocationProperty.ALTITUDE));\n};\n\n\n/**\n * Get the altitude accuracy of the position.\n * @return {number|undefined} The accuracy of the altitude measurement in\n *     meters.\n * @observable\n * @api\n */\nGeolocation.prototype.getAltitudeAccuracy = function() {\n  return /** @type {number|undefined} */ (this.get(GeolocationProperty.ALTITUDE_ACCURACY));\n};\n\n\n/**\n * Get the heading as radians clockwise from North.\n * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n * is set to `true` in the tracking options.\n * @return {number|undefined} The heading of the device in radians from north.\n * @observable\n * @api\n */\nGeolocation.prototype.getHeading = function() {\n  return /** @type {number|undefined} */ (this.get(GeolocationProperty.HEADING));\n};\n\n\n/**\n * Get the position of the device.\n * @return {module:ol/coordinate~Coordinate|undefined} The current position of the device reported\n *     in the current projection.\n * @observable\n * @api\n */\nGeolocation.prototype.getPosition = function() {\n  return (\n    /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(GeolocationProperty.POSITION))\n  );\n};\n\n\n/**\n * Get the projection associated with the position.\n * @return {module:ol/proj/Projection|undefined} The projection the position is\n *     reported in.\n * @observable\n * @api\n */\nGeolocation.prototype.getProjection = function() {\n  return (\n    /** @type {module:ol/proj/Projection|undefined} */ (this.get(GeolocationProperty.PROJECTION))\n  );\n};\n\n\n/**\n * Get the speed in meters per second.\n * @return {number|undefined} The instantaneous speed of the device in meters\n *     per second.\n * @observable\n * @api\n */\nGeolocation.prototype.getSpeed = function() {\n  return /** @type {number|undefined} */ (this.get(GeolocationProperty.SPEED));\n};\n\n\n/**\n * Determine if the device location is being tracked.\n * @return {boolean} The device location is being tracked.\n * @observable\n * @api\n */\nGeolocation.prototype.getTracking = function() {\n  return /** @type {boolean} */ (this.get(GeolocationProperty.TRACKING));\n};\n\n\n/**\n * Get the tracking options.\n * @see http://www.w3.org/TR/geolocation-API/#position-options\n * @return {GeolocationPositionOptions|undefined} PositionOptions as defined by\n *     the [HTML5 Geolocation spec\n *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n * @observable\n * @api\n */\nGeolocation.prototype.getTrackingOptions = function() {\n  return /** @type {GeolocationPositionOptions|undefined} */ (this.get(GeolocationProperty.TRACKING_OPTIONS));\n};\n\n\n/**\n * Set the projection to use for transforming the coordinates.\n * @param {module:ol/proj~ProjectionLike} projection The projection the position is\n *     reported in.\n * @observable\n * @api\n */\nGeolocation.prototype.setProjection = function(projection) {\n  this.set(GeolocationProperty.PROJECTION, getProjection(projection));\n};\n\n\n/**\n * Enable or disable tracking.\n * @param {boolean} tracking Enable tracking.\n * @observable\n * @api\n */\nGeolocation.prototype.setTracking = function(tracking) {\n  this.set(GeolocationProperty.TRACKING, tracking);\n};\n\n\n/**\n * Set the tracking options.\n * @see http://www.w3.org/TR/geolocation-API/#position-options\n * @param {GeolocationPositionOptions} options PositionOptions as defined by the\n *     [HTML5 Geolocation spec\n *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n * @observable\n * @api\n */\nGeolocation.prototype.setTrackingOptions = function(options) {\n  this.set(GeolocationProperty.TRACKING_OPTIONS, options);\n};\nexport default Geolocation;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {inherits} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n *\n * @constructor\n * @extends {module:ol/render/VectorContext}\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @struct\n */\nconst CanvasImmediateRenderer = function(context, pixelRatio, extent, transform, viewRotation) {\n  VectorContext.call(this);\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = context;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = extent;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.transform_ = transform;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.viewRotation_ = viewRotation;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~FillState}\n   */\n  this.contextFillState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~StrokeState}\n   */\n  this.contextStrokeState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~TextState}\n   */\n  this.contextTextState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~FillState}\n   */\n  this.fillState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~StrokeState}\n   */\n  this.strokeState_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|HTMLVideoElement|Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageAnchorX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageAnchorY_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageHeight_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageOpacity_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageOriginX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageOriginY_ = 0;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.imageRotateWithView_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageRotation_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageScale_ = 0;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.imageSnapToPixel_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageWidth_ = 0;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.text_ = '';\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetY_ = 0;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.textRotateWithView_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textRotation_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textScale_ = 0;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~FillState}\n   */\n  this.textFillState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~StrokeState}\n   */\n  this.textStrokeState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~TextState}\n   */\n  this.textState_ = null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.pixelCoordinates_ = [];\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.tmpLocalTransform_ = createTransform();\n\n};\n\ninherits(CanvasImmediateRenderer, VectorContext);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n */\nCanvasImmediateRenderer.prototype.drawImages_ = function(flatCoordinates, offset, end, stride) {\n  if (!this.image_) {\n    return;\n  }\n  const pixelCoordinates = transform2D(\n    flatCoordinates, offset, end, 2, this.transform_,\n    this.pixelCoordinates_);\n  const context = this.context_;\n  const localTransform = this.tmpLocalTransform_;\n  const alpha = context.globalAlpha;\n  if (this.imageOpacity_ != 1) {\n    context.globalAlpha = alpha * this.imageOpacity_;\n  }\n  let rotation = this.imageRotation_;\n  if (this.imageRotateWithView_) {\n    rotation += this.viewRotation_;\n  }\n  for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n    let x = pixelCoordinates[i] - this.imageAnchorX_;\n    let y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n    if (this.imageSnapToPixel_) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      const centerX = x + this.imageAnchorX_;\n      const centerY = y + this.imageAnchorY_;\n      composeTransform(localTransform,\n        centerX, centerY,\n        this.imageScale_, this.imageScale_,\n        rotation,\n        -centerX, -centerY);\n      context.setTransform.apply(context, localTransform);\n    }\n    context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_,\n      this.imageWidth_, this.imageHeight_, x, y,\n      this.imageWidth_, this.imageHeight_);\n  }\n  if (rotation !== 0 || this.imageScale_ != 1) {\n    context.setTransform(1, 0, 0, 1, 0, 0);\n  }\n  if (this.imageOpacity_ != 1) {\n    context.globalAlpha = alpha;\n  }\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n */\nCanvasImmediateRenderer.prototype.drawText_ = function(flatCoordinates, offset, end, stride) {\n  if (!this.textState_ || this.text_ === '') {\n    return;\n  }\n  if (this.textFillState_) {\n    this.setContextFillState_(this.textFillState_);\n  }\n  if (this.textStrokeState_) {\n    this.setContextStrokeState_(this.textStrokeState_);\n  }\n  this.setContextTextState_(this.textState_);\n  const pixelCoordinates = transform2D(\n    flatCoordinates, offset, end, stride, this.transform_,\n    this.pixelCoordinates_);\n  const context = this.context_;\n  let rotation = this.textRotation_;\n  if (this.textRotateWithView_) {\n    rotation += this.viewRotation_;\n  }\n  for (; offset < end; offset += stride) {\n    const x = pixelCoordinates[offset] + this.textOffsetX_;\n    const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n    if (rotation !== 0 || this.textScale_ != 1) {\n      const localTransform = composeTransform(this.tmpLocalTransform_,\n        x, y,\n        this.textScale_, this.textScale_,\n        rotation,\n        -x, -y);\n      context.setTransform.apply(context, localTransform);\n    }\n    if (this.textStrokeState_) {\n      context.strokeText(this.text_, x, y);\n    }\n    if (this.textFillState_) {\n      context.fillText(this.text_, x, y);\n    }\n  }\n  if (rotation !== 0 || this.textScale_ != 1) {\n    context.setTransform(1, 0, 0, 1, 0, 0);\n  }\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {boolean} close Close.\n * @private\n * @return {number} end End.\n */\nCanvasImmediateRenderer.prototype.moveToLineTo_ = function(flatCoordinates, offset, end, stride, close) {\n  const context = this.context_;\n  const pixelCoordinates = transform2D(\n    flatCoordinates, offset, end, stride, this.transform_,\n    this.pixelCoordinates_);\n  context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n  let length = pixelCoordinates.length;\n  if (close) {\n    length -= 2;\n  }\n  for (let i = 2; i < length; i += 2) {\n    context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n  }\n  if (close) {\n    context.closePath();\n  }\n  return end;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @private\n * @return {number} End.\n */\nCanvasImmediateRenderer.prototype.drawRings_ = function(flatCoordinates, offset, ends, stride) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n  }\n  return offset;\n};\n\n\n/**\n * Render a circle geometry into the canvas.  Rendering is immediate and uses\n * the current fill and stroke styles.\n *\n * @param {module:ol/geom/Circle} geometry Circle geometry.\n * @override\n * @api\n */\nCanvasImmediateRenderer.prototype.drawCircle = function(geometry) {\n  if (!intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.fillState_ || this.strokeState_) {\n    if (this.fillState_) {\n      this.setContextFillState_(this.fillState_);\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n    }\n    const pixelCoordinates = transformGeom2D(\n      geometry, this.transform_, this.pixelCoordinates_);\n    const dx = pixelCoordinates[2] - pixelCoordinates[0];\n    const dy = pixelCoordinates[3] - pixelCoordinates[1];\n    const radius = Math.sqrt(dx * dx + dy * dy);\n    const context = this.context_;\n    context.beginPath();\n    context.arc(\n      pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n    if (this.fillState_) {\n      context.fill();\n    }\n    if (this.strokeState_) {\n      context.stroke();\n    }\n  }\n  if (this.text_ !== '') {\n    this.drawText_(geometry.getCenter(), 0, 2, 2);\n  }\n};\n\n\n/**\n * Set the rendering style.  Note that since this is an immediate rendering API,\n * any `zIndex` on the provided style will be ignored.\n *\n * @param {module:ol/style/Style} style The rendering style.\n * @override\n * @api\n */\nCanvasImmediateRenderer.prototype.setStyle = function(style) {\n  this.setFillStrokeStyle(style.getFill(), style.getStroke());\n  this.setImageStyle(style.getImage());\n  this.setTextStyle(style.getText());\n};\n\n\n/**\n * Render a geometry into the canvas.  Call\n * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n *\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry The geometry to render.\n * @override\n * @api\n */\nCanvasImmediateRenderer.prototype.drawGeometry = function(geometry) {\n  const type = geometry.getType();\n  switch (type) {\n    case GeometryType.POINT:\n      this.drawPoint(/** @type {module:ol/geom/Point} */ (geometry));\n      break;\n    case GeometryType.LINE_STRING:\n      this.drawLineString(/** @type {module:ol/geom/LineString} */ (geometry));\n      break;\n    case GeometryType.POLYGON:\n      this.drawPolygon(/** @type {module:ol/geom/Polygon} */ (geometry));\n      break;\n    case GeometryType.MULTI_POINT:\n      this.drawMultiPoint(/** @type {module:ol/geom/MultiPoint} */ (geometry));\n      break;\n    case GeometryType.MULTI_LINE_STRING:\n      this.drawMultiLineString(/** @type {module:ol/geom/MultiLineString} */ (geometry));\n      break;\n    case GeometryType.MULTI_POLYGON:\n      this.drawMultiPolygon(/** @type {module:ol/geom/MultiPolygon} */ (geometry));\n      break;\n    case GeometryType.GEOMETRY_COLLECTION:\n      this.drawGeometryCollection(/** @type {module:ol/geom/GeometryCollection} */ (geometry));\n      break;\n    case GeometryType.CIRCLE:\n      this.drawCircle(/** @type {module:ol/geom/Circle} */ (geometry));\n      break;\n    default:\n  }\n};\n\n\n/**\n * Render a feature into the canvas.  Note that any `zIndex` on the provided\n * style will be ignored - features are rendered immediately in the order that\n * this method is called.  If you need `zIndex` support, you should be using an\n * {@link module:ol/layer/Vector~VectorLayer} instead.\n *\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @override\n * @api\n */\nCanvasImmediateRenderer.prototype.drawFeature = function(feature, style) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  this.setStyle(style);\n  this.drawGeometry(geometry);\n};\n\n\n/**\n * Render a GeometryCollection to the canvas.  Rendering is immediate and\n * uses the current styles appropriate for each geometry in the collection.\n *\n * @param {module:ol/geom/GeometryCollection} geometry Geometry collection.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawGeometryCollection = function(geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    this.drawGeometry(geometries[i]);\n  }\n};\n\n\n/**\n * Render a Point geometry into the canvas.  Rendering is immediate and uses\n * the current style.\n *\n * @param {module:ol/geom/Point|module:ol/render/Feature} geometry Point geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawPoint = function(geometry) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  if (this.image_) {\n    this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n  if (this.text_ !== '') {\n    this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n};\n\n\n/**\n * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n * uses the current style.\n *\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} geometry MultiPoint geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawMultiPoint = function(geometry) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  if (this.image_) {\n    this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n  if (this.text_ !== '') {\n    this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n};\n\n\n/**\n * Render a LineString into the canvas.  Rendering is immediate and uses\n * the current style.\n *\n * @param {module:ol/geom/LineString|module:ol/render/Feature} geometry LineString geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawLineString = function(geometry) {\n  if (!intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.strokeState_) {\n    this.setContextStrokeState_(this.strokeState_);\n    const context = this.context_;\n    const flatCoordinates = geometry.getFlatCoordinates();\n    context.beginPath();\n    this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n      geometry.getStride(), false);\n    context.stroke();\n  }\n  if (this.text_ !== '') {\n    const flatMidpoint = geometry.getFlatMidpoint();\n    this.drawText_(flatMidpoint, 0, 2, 2);\n  }\n};\n\n\n/**\n * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n * and uses the current style.\n *\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} geometry MultiLineString geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawMultiLineString = function(geometry) {\n  const geometryExtent = geometry.getExtent();\n  if (!intersects(this.extent_, geometryExtent)) {\n    return;\n  }\n  if (this.strokeState_) {\n    this.setContextStrokeState_(this.strokeState_);\n    const context = this.context_;\n    const flatCoordinates = geometry.getFlatCoordinates();\n    let offset = 0;\n    const ends = geometry.getEnds();\n    const stride = geometry.getStride();\n    context.beginPath();\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n    }\n    context.stroke();\n  }\n  if (this.text_ !== '') {\n    const flatMidpoints = geometry.getFlatMidpoints();\n    this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n  }\n};\n\n\n/**\n * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n * the current style.\n *\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} geometry Polygon geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawPolygon = function(geometry) {\n  if (!intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.strokeState_ || this.fillState_) {\n    if (this.fillState_) {\n      this.setContextFillState_(this.fillState_);\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n    }\n    const context = this.context_;\n    context.beginPath();\n    this.drawRings_(geometry.getOrientedFlatCoordinates(),\n      0, geometry.getEnds(), geometry.getStride());\n    if (this.fillState_) {\n      context.fill();\n    }\n    if (this.strokeState_) {\n      context.stroke();\n    }\n  }\n  if (this.text_ !== '') {\n    const flatInteriorPoint = geometry.getFlatInteriorPoint();\n    this.drawText_(flatInteriorPoint, 0, 2, 2);\n  }\n};\n\n\n/**\n * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n * uses the current style.\n * @param {module:ol/geom/MultiPolygon} geometry MultiPolygon geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawMultiPolygon = function(geometry) {\n  if (!intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.strokeState_ || this.fillState_) {\n    if (this.fillState_) {\n      this.setContextFillState_(this.fillState_);\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n    }\n    const context = this.context_;\n    const flatCoordinates = geometry.getOrientedFlatCoordinates();\n    let offset = 0;\n    const endss = geometry.getEndss();\n    const stride = geometry.getStride();\n    context.beginPath();\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i];\n      offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n    }\n    if (this.fillState_) {\n      context.fill();\n    }\n    if (this.strokeState_) {\n      context.stroke();\n    }\n  }\n  if (this.text_ !== '') {\n    const flatInteriorPoints = geometry.getFlatInteriorPoints();\n    this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillState} fillState Fill state.\n * @private\n */\nCanvasImmediateRenderer.prototype.setContextFillState_ = function(fillState) {\n  const context = this.context_;\n  const contextFillState = this.contextFillState_;\n  if (!contextFillState) {\n    context.fillStyle = fillState.fillStyle;\n    this.contextFillState_ = {\n      fillStyle: fillState.fillStyle\n    };\n  } else {\n    if (contextFillState.fillStyle != fillState.fillStyle) {\n      contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~StrokeState} strokeState Stroke state.\n * @private\n */\nCanvasImmediateRenderer.prototype.setContextStrokeState_ = function(strokeState) {\n  const context = this.context_;\n  const contextStrokeState = this.contextStrokeState_;\n  if (!contextStrokeState) {\n    context.lineCap = strokeState.lineCap;\n    if (CANVAS_LINE_DASH) {\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n    }\n    context.lineJoin = strokeState.lineJoin;\n    context.lineWidth = strokeState.lineWidth;\n    context.miterLimit = strokeState.miterLimit;\n    context.strokeStyle = strokeState.strokeStyle;\n    this.contextStrokeState_ = {\n      lineCap: strokeState.lineCap,\n      lineDash: strokeState.lineDash,\n      lineDashOffset: strokeState.lineDashOffset,\n      lineJoin: strokeState.lineJoin,\n      lineWidth: strokeState.lineWidth,\n      miterLimit: strokeState.miterLimit,\n      strokeStyle: strokeState.strokeStyle\n    };\n  } else {\n    if (contextStrokeState.lineCap != strokeState.lineCap) {\n      contextStrokeState.lineCap = context.lineCap = strokeState.lineCap;\n    }\n    if (CANVAS_LINE_DASH) {\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = context.lineDashOffset =\n            strokeState.lineDashOffset;\n      }\n    }\n    if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n      contextStrokeState.lineJoin = context.lineJoin = strokeState.lineJoin;\n    }\n    if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n      contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n    }\n    if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n      contextStrokeState.miterLimit = context.miterLimit =\n          strokeState.miterLimit;\n    }\n    if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n      contextStrokeState.strokeStyle = context.strokeStyle =\n          strokeState.strokeStyle;\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~TextState} textState Text state.\n * @private\n */\nCanvasImmediateRenderer.prototype.setContextTextState_ = function(textState) {\n  const context = this.context_;\n  const contextTextState = this.contextTextState_;\n  const textAlign = textState.textAlign ?\n    textState.textAlign : defaultTextAlign;\n  if (!contextTextState) {\n    context.font = textState.font;\n    context.textAlign = textAlign;\n    context.textBaseline = textState.textBaseline;\n    this.contextTextState_ = {\n      font: textState.font,\n      textAlign: textAlign,\n      textBaseline: textState.textBaseline\n    };\n  } else {\n    if (contextTextState.font != textState.font) {\n      contextTextState.font = context.font = textState.font;\n    }\n    if (contextTextState.textAlign != textAlign) {\n      contextTextState.textAlign = context.textAlign = textAlign;\n    }\n    if (contextTextState.textBaseline != textState.textBaseline) {\n      contextTextState.textBaseline = context.textBaseline =\n          textState.textBaseline;\n    }\n  }\n};\n\n\n/**\n * Set the fill and stroke style for subsequent draw operations.  To clear\n * either fill or stroke styles, pass null for the appropriate parameter.\n *\n * @param {module:ol/style/Fill} fillStyle Fill style.\n * @param {module:ol/style/Stroke} strokeStyle Stroke style.\n * @override\n */\nCanvasImmediateRenderer.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  if (!fillStyle) {\n    this.fillState_ = null;\n  } else {\n    const fillStyleColor = fillStyle.getColor();\n    this.fillState_ = {\n      fillStyle: asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle)\n    };\n  }\n  if (!strokeStyle) {\n    this.strokeState_ = null;\n  } else {\n    const strokeStyleColor = strokeStyle.getColor();\n    const strokeStyleLineCap = strokeStyle.getLineCap();\n    const strokeStyleLineDash = strokeStyle.getLineDash();\n    const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n    const strokeStyleLineJoin = strokeStyle.getLineJoin();\n    const strokeStyleWidth = strokeStyle.getWidth();\n    const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n    this.strokeState_ = {\n      lineCap: strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap,\n      lineDash: strokeStyleLineDash ?\n        strokeStyleLineDash : defaultLineDash,\n      lineDashOffset: strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset,\n      lineJoin: strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin,\n      lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth),\n      miterLimit: strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit,\n      strokeStyle: asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle)\n    };\n  }\n};\n\n\n/**\n * Set the image style for subsequent draw operations.  Pass null to remove\n * the image style.\n *\n * @param {module:ol/style/Image} imageStyle Image style.\n * @override\n */\nCanvasImmediateRenderer.prototype.setImageStyle = function(imageStyle) {\n  if (!imageStyle) {\n    this.image_ = null;\n  } else {\n    const imageAnchor = imageStyle.getAnchor();\n    // FIXME pixel ratio\n    const imageImage = imageStyle.getImage(1);\n    const imageOrigin = imageStyle.getOrigin();\n    const imageSize = imageStyle.getSize();\n    this.imageAnchorX_ = imageAnchor[0];\n    this.imageAnchorY_ = imageAnchor[1];\n    this.imageHeight_ = imageSize[1];\n    this.image_ = imageImage;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n    this.imageSnapToPixel_ = imageStyle.getSnapToPixel();\n    this.imageWidth_ = imageSize[0];\n  }\n};\n\n\n/**\n * Set the text style for subsequent draw operations.  Pass null to\n * remove the text style.\n *\n * @param {module:ol/style/Text} textStyle Text style.\n * @override\n */\nCanvasImmediateRenderer.prototype.setTextStyle = function(textStyle) {\n  if (!textStyle) {\n    this.text_ = '';\n  } else {\n    const textFillStyle = textStyle.getFill();\n    if (!textFillStyle) {\n      this.textFillState_ = null;\n    } else {\n      const textFillStyleColor = textFillStyle.getColor();\n      this.textFillState_ = {\n        fillStyle: asColorLike(textFillStyleColor ?\n          textFillStyleColor : defaultFillStyle)\n      };\n    }\n    const textStrokeStyle = textStyle.getStroke();\n    if (!textStrokeStyle) {\n      this.textStrokeState_ = null;\n    } else {\n      const textStrokeStyleColor = textStrokeStyle.getColor();\n      const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n      const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n      const textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n      const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n      const textStrokeStyleWidth = textStrokeStyle.getWidth();\n      const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n      this.textStrokeState_ = {\n        lineCap: textStrokeStyleLineCap !== undefined ?\n          textStrokeStyleLineCap : defaultLineCap,\n        lineDash: textStrokeStyleLineDash ?\n          textStrokeStyleLineDash : defaultLineDash,\n        lineDashOffset: textStrokeStyleLineDashOffset ?\n          textStrokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: textStrokeStyleLineJoin !== undefined ?\n          textStrokeStyleLineJoin : defaultLineJoin,\n        lineWidth: textStrokeStyleWidth !== undefined ?\n          textStrokeStyleWidth : defaultLineWidth,\n        miterLimit: textStrokeStyleMiterLimit !== undefined ?\n          textStrokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(textStrokeStyleColor ?\n          textStrokeStyleColor : defaultStrokeStyle)\n      };\n    }\n    const textFont = textStyle.getFont();\n    const textOffsetX = textStyle.getOffsetX();\n    const textOffsetY = textStyle.getOffsetY();\n    const textRotateWithView = textStyle.getRotateWithView();\n    const textRotation = textStyle.getRotation();\n    const textScale = textStyle.getScale();\n    const textText = textStyle.getText();\n    const textTextAlign = textStyle.getTextAlign();\n    const textTextBaseline = textStyle.getTextBaseline();\n    this.textState_ = {\n      font: textFont !== undefined ?\n        textFont : defaultFont,\n      textAlign: textTextAlign !== undefined ?\n        textTextAlign : defaultTextAlign,\n      textBaseline: textTextBaseline !== undefined ?\n        textTextBaseline : defaultTextBaseline\n    };\n    this.text_ = textText !== undefined ? textText : '';\n    this.textOffsetX_ =\n        textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n    this.textOffsetY_ =\n        textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n    this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n    this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n    this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n      textScale : 1);\n  }\n};\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/ImageCanvas\n */\nimport {inherits} from './util.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error))} Loader\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/ImageBase}\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {module:ol/ImageCanvas~Loader=} opt_loader Optional loader function to\n *     support asynchronous canvas drawing.\n */\nconst ImageCanvas = function(extent, resolution, pixelRatio, canvas, opt_loader) {\n\n  /**\n   * Optional canvas loader function.\n   * @type {?module:ol/ImageCanvas~Loader}\n   * @private\n   */\n  this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n  const state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n  ImageBase.call(this, extent, resolution, pixelRatio, state);\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = canvas;\n\n  /**\n   * @private\n   * @type {Error}\n   */\n  this.error_ = null;\n\n};\n\ninherits(ImageCanvas, ImageBase);\n\n\n/**\n * Get any error associated with asynchronous rendering.\n * @return {Error} Any error that occurred during rendering.\n */\nImageCanvas.prototype.getError = function() {\n  return this.error_;\n};\n\n\n/**\n * Handle async drawing complete.\n * @param {Error} err Any error during drawing.\n * @private\n */\nImageCanvas.prototype.handleLoad_ = function(err) {\n  if (err) {\n    this.error_ = err;\n    this.state = ImageState.ERROR;\n  } else {\n    this.state = ImageState.LOADED;\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nImageCanvas.prototype.load = function() {\n  if (this.state == ImageState.IDLE) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.loader_(this.handleLoad_.bind(this));\n  }\n};\n\n\n/**\n * @return {HTMLCanvasElement} Canvas element.\n */\nImageCanvas.prototype.getImage = function() {\n  return this.canvas_;\n};\nexport default ImageCanvas;\n","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/MapBrowserEventHandler\n */\nimport {inherits} from './util.js';\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventTarget from './events/EventTarget.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\n\n/**\n * @param {module:ol/PluggableMap} map The map with the viewport to\n * listen to events on.\n * @param {number=} moveTolerance The minimal distance the pointer must travel\n * to trigger a move.\n * @constructor\n * @extends {module:ol/events/EventTarget}\n */\nconst MapBrowserEventHandler = function(map, moveTolerance) {\n\n  EventTarget.call(this);\n\n  /**\n   * This is the element that we will listen to the real events on.\n   * @type {module:ol/PluggableMap}\n   * @private\n   */\n  this.map_ = map;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.clickTimeoutId_ = 0;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.dragging_ = false;\n\n  /**\n   * @type {!Array.<module:ol/events~EventsKey>}\n   * @private\n   */\n  this.dragListenerKeys_ = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.moveTolerance_ = moveTolerance ?\n    moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n\n  /**\n   * The most recent \"down\" type event (or null if none have occurred).\n   * Set on pointerdown.\n   * @type {module:ol/pointer/PointerEvent}\n   * @private\n   */\n  this.down_ = null;\n\n  const element = this.map_.getViewport();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.activePointers_ = 0;\n\n  /**\n   * @type {!Object.<number, boolean>}\n   * @private\n   */\n  this.trackedTouches_ = {};\n\n  /**\n   * Event handler which generates pointer events for\n   * the viewport element.\n   *\n   * @type {module:ol/pointer/PointerEventHandler}\n   * @private\n   */\n  this.pointerEventHandler_ = new PointerEventHandler(element);\n\n  /**\n   * Event handler which generates pointer events for\n   * the document (used when dragging).\n   *\n   * @type {module:ol/pointer/PointerEventHandler}\n   * @private\n   */\n  this.documentPointerEventHandler_ = null;\n\n  /**\n   * @type {?module:ol/events~EventsKey}\n   * @private\n   */\n  this.pointerdownListenerKey_ = listen(this.pointerEventHandler_,\n    PointerEventType.POINTERDOWN,\n    this.handlePointerDown_, this);\n\n  /**\n   * @type {?module:ol/events~EventsKey}\n   * @private\n   */\n  this.relayedListenerKey_ = listen(this.pointerEventHandler_,\n    PointerEventType.POINTERMOVE,\n    this.relayEvent_, this);\n\n};\n\ninherits(MapBrowserEventHandler, EventTarget);\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.emulateClick_ = function(pointerEvent) {\n  let newEvent = new MapBrowserPointerEvent(\n    MapBrowserEventType.CLICK, this.map_, pointerEvent);\n  this.dispatchEvent(newEvent);\n  if (this.clickTimeoutId_ !== 0) {\n    // double-click\n    clearTimeout(this.clickTimeoutId_);\n    this.clickTimeoutId_ = 0;\n    newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n  } else {\n    // click\n    this.clickTimeoutId_ = setTimeout(function() {\n      this.clickTimeoutId_ = 0;\n      const newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    }.bind(this), 250);\n  }\n};\n\n\n/**\n * Keeps track on how many pointers are currently active.\n *\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.updateActivePointers_ = function(pointerEvent) {\n  const event = pointerEvent;\n\n  if (event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL) {\n    delete this.trackedTouches_[event.pointerId];\n  } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n    this.trackedTouches_[event.pointerId] = true;\n  }\n  this.activePointers_ = Object.keys(this.trackedTouches_).length;\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.handlePointerUp_ = function(pointerEvent) {\n  this.updateActivePointers_(pointerEvent);\n  const newEvent = new MapBrowserPointerEvent(\n    MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n  this.dispatchEvent(newEvent);\n\n  // We emulate click events on left mouse button click, touch contact, and pen\n  // contact. isMouseActionButton returns true in these cases (evt.button is set\n  // to 0).\n  // See http://www.w3.org/TR/pointerevents/#button-states\n  // We only fire click, singleclick, and doubleclick if nobody has called\n  // event.stopPropagation() or event.preventDefault().\n  if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n    this.emulateClick_(this.down_);\n  }\n\n  if (this.activePointers_ === 0) {\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n    this.dragging_ = false;\n    this.down_ = null;\n    this.documentPointerEventHandler_.dispose();\n    this.documentPointerEventHandler_ = null;\n  }\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @return {boolean} If the left mouse button was pressed.\n * @private\n */\nMapBrowserEventHandler.prototype.isMouseActionButton_ = function(pointerEvent) {\n  return pointerEvent.button === 0;\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.handlePointerDown_ = function(pointerEvent) {\n  this.updateActivePointers_(pointerEvent);\n  const newEvent = new MapBrowserPointerEvent(\n    MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n  this.dispatchEvent(newEvent);\n\n  this.down_ = pointerEvent;\n\n  if (this.dragListenerKeys_.length === 0) {\n    /* Set up a pointer event handler on the `document`,\n     * which is required when the pointer is moved outside\n     * the viewport when dragging.\n     */\n    this.documentPointerEventHandler_ =\n        new PointerEventHandler(document);\n\n    this.dragListenerKeys_.push(\n      listen(this.documentPointerEventHandler_,\n        MapBrowserEventType.POINTERMOVE,\n        this.handlePointerMove_, this),\n      listen(this.documentPointerEventHandler_,\n        MapBrowserEventType.POINTERUP,\n        this.handlePointerUp_, this),\n      /* Note that the listener for `pointercancel is set up on\n       * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n       * the `pointerup` and `pointermove` listeners.\n       *\n       * The reason for this is the following: `TouchSource.vacuumTouches_()`\n       * issues `pointercancel` events, when there was no `touchend` for a\n       * `touchstart`. Now, let's say a first `touchstart` is registered on\n       * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n       * But `documentPointerEventHandler_` doesn't know about the first\n       * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n       * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n       * only registered there.\n       */\n      listen(this.pointerEventHandler_,\n        MapBrowserEventType.POINTERCANCEL,\n        this.handlePointerUp_, this)\n    );\n  }\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.handlePointerMove_ = function(pointerEvent) {\n  // Between pointerdown and pointerup, pointermove events are triggered.\n  // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n  // moved a significant distance.\n  if (this.isMoving_(pointerEvent)) {\n    this.dragging_ = true;\n    const newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\n      this.dragging_);\n    this.dispatchEvent(newEvent);\n  }\n\n  // Some native android browser triggers mousemove events during small period\n  // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n  // https://code.google.com/p/android/issues/detail?id=19827\n  // ex: Galaxy Tab P3110 + Android 4.1.1\n  pointerEvent.preventDefault();\n};\n\n\n/**\n * Wrap and relay a pointer event.  Note that this requires that the type\n * string for the MapBrowserPointerEvent matches the PointerEvent type.\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.relayEvent_ = function(pointerEvent) {\n  const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n  this.dispatchEvent(new MapBrowserPointerEvent(\n    pointerEvent.type, this.map_, pointerEvent, dragging));\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @return {boolean} Is moving.\n * @private\n */\nMapBrowserEventHandler.prototype.isMoving_ = function(pointerEvent) {\n  return this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n};\n\n\n/**\n * @inheritDoc\n */\nMapBrowserEventHandler.prototype.disposeInternal = function() {\n  if (this.relayedListenerKey_) {\n    unlistenByKey(this.relayedListenerKey_);\n    this.relayedListenerKey_ = null;\n  }\n  if (this.pointerdownListenerKey_) {\n    unlistenByKey(this.pointerdownListenerKey_);\n    this.pointerdownListenerKey_ = null;\n  }\n\n  this.dragListenerKeys_.forEach(unlistenByKey);\n  this.dragListenerKeys_.length = 0;\n\n  if (this.documentPointerEventHandler_) {\n    this.documentPointerEventHandler_.dispose();\n    this.documentPointerEventHandler_ = null;\n  }\n  if (this.pointerEventHandler_) {\n    this.pointerEventHandler_.dispose();\n    this.pointerEventHandler_ = null;\n  }\n  EventTarget.prototype.disposeInternal.call(this);\n};\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/PluggableMap\n */\nimport {getUid, inherits} from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {assert} from './asserts.js';\nimport {removeNode} from './dom.js';\nimport {listen, unlistenByKey, unlisten} from './events.js';\nimport {stopPropagation} from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, TOUCH} from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport {hasArea} from './size.js';\nimport {DROP} from './structs/PriorityQueue.js';\nimport {create as createTransform, apply as applyTransform} from './transform.js';\n\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {module:ol/View~State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {module:ol/transform~Transform} coordinateToPixelTransform\n * @property {null|module:ol/extent~Extent} extent\n * @property {module:ol/coordinate~Coordinate} focus\n * @property {number} index\n * @property {Object.<number, module:ol/layer/Layer~State>} layerStates\n * @property {Array.<module:ol/layer/Layer~State>} layerStatesArray\n * @property {module:ol/transform~Transform} pixelToCoordinateTransform\n * @property {Array.<module:ol/PluggableMap~PostRenderFunction>} postRenderFunctions\n * @property {module:ol/size~Size} size\n * @property {!Object.<string, boolean>} skippedFeatureUids\n * @property {module:ol/TileQueue} tileQueue\n * @property {Object.<string, Object.<string, module:ol/TileRange>>} usedTiles\n * @property {Array.<number>} viewHints\n * @property {!Object.<string, Object.<string, boolean>>} wantedTiles\n */\n\n\n/**\n * @typedef {function(module:ol/PluggableMap, ?module:ol/PluggableMap~FrameState): boolean} PostRenderFunction\n */\n\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {((function(module:ol/layer/Layer): boolean)|undefined)} layerFilter Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {module:ol/Collection.<module:ol/control/Control>} [controls]\n * @property {module:ol/Collection.<module:ol/interaction/Interaction>} [interactions]\n * @property {Element|Document} keyboardEventTarget\n * @property {module:ol/Collection.<module:ol/Overlay>} overlays\n * @property {Object.<string, *>} values\n */\n\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {module:ol/Collection.<module:ol/control/Control>|Array.<module:ol/control/Control>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/util~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {module:ol/Collection.<module:ol/interaction/Interaction>|Array.<module:ol/interaction/Interaction>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {Element|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array.<module:ol/layer/Base>|module:ol/Collection.<module:ol/layer/Base>} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {boolean} [loadTilesWhileAnimating=false] When set to `true`, tiles\n * will be loaded during animations. This may improve the user experience, but\n * can also make animations stutter on devices with slow memory.\n * @property {boolean} [loadTilesWhileInteracting=false] When set to `true`,\n * tiles will be loaded while interacting with the map. This may improve the\n * user experience, but can also make map panning and zooming choppy on devices\n * with slow memory.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {module:ol/Collection.<module:ol/Overlay>|Array.<module:ol/Overlay>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {Element|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {module:ol/View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/PluggableMap~MapOptions} options Map options.\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nconst PluggableMap = function(options) {\n\n  BaseObject.call(this);\n\n  const optionsInternal = createOptionsInternal(options);\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.loadTilesWhileAnimating_ =\n      options.loadTilesWhileAnimating !== undefined ?\n        options.loadTilesWhileAnimating : false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.loadTilesWhileInteracting_ =\n      options.loadTilesWhileInteracting !== undefined ?\n        options.loadTilesWhileInteracting : false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = options.pixelRatio !== undefined ?\n    options.pixelRatio : DEVICE_PIXEL_RATIO;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.animationDelayKey_;\n\n  /**\n   * @private\n   */\n  this.animationDelay_ = function() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_.call(this, Date.now());\n  }.bind(this);\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.coordinateToPixelTransform_ = createTransform();\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.pixelToCoordinateTransform_ = createTransform();\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.frameIndex_ = 0;\n\n  /**\n   * @private\n   * @type {?module:ol/PluggableMap~FrameState}\n   */\n  this.frameState_ = null;\n\n  /**\n   * The extent at the previous 'moveend' event.\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.previousExtent_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.viewPropertyListenerKey_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.viewChangeListenerKey_ = null;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.layerGroupPropertyListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.viewport_ = document.createElement('DIV');\n  this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n  this.viewport_.style.position = 'relative';\n  this.viewport_.style.overflow = 'hidden';\n  this.viewport_.style.width = '100%';\n  this.viewport_.style.height = '100%';\n  // prevent page zoom on IE >= 10 browsers\n  this.viewport_.style.msTouchAction = 'none';\n  this.viewport_.style.touchAction = 'none';\n\n  /**\n   * @private\n   * @type {!Element}\n   */\n  this.overlayContainer_ = document.createElement('DIV');\n  this.overlayContainer_.className = 'ol-overlaycontainer';\n  this.viewport_.appendChild(this.overlayContainer_);\n\n  /**\n   * @private\n   * @type {!Element}\n   */\n  this.overlayContainerStopEvent_ = document.createElement('DIV');\n  this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n  const overlayEvents = [\n    EventType.CLICK,\n    EventType.DBLCLICK,\n    EventType.MOUSEDOWN,\n    EventType.TOUCHSTART,\n    EventType.MSPOINTERDOWN,\n    MapBrowserEventType.POINTERDOWN,\n    EventType.MOUSEWHEEL,\n    EventType.WHEEL\n  ];\n  for (let i = 0, ii = overlayEvents.length; i < ii; ++i) {\n    listen(this.overlayContainerStopEvent_, overlayEvents[i], stopPropagation);\n  }\n  this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n  /**\n   * @private\n   * @type {module:ol/MapBrowserEventHandler}\n   */\n  this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\n  for (const key in MapBrowserEventType) {\n    listen(this.mapBrowserEventHandler_, MapBrowserEventType[key],\n      this.handleMapBrowserEvent, this);\n  }\n\n  /**\n   * @private\n   * @type {Element|Document}\n   */\n  this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.keyHandlerKeys_ = null;\n\n  listen(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n  listen(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n  listen(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n\n  /**\n   * @type {module:ol/Collection.<module:ol/control/Control>}\n   * @protected\n   */\n  this.controls = optionsInternal.controls || new Collection();\n\n  /**\n   * @type {module:ol/Collection.<module:ol/interaction/Interaction>}\n   * @protected\n   */\n  this.interactions = optionsInternal.interactions || new Collection();\n\n  /**\n   * @type {module:ol/Collection.<module:ol/Overlay>}\n   * @private\n   */\n  this.overlays_ = optionsInternal.overlays;\n\n  /**\n   * A lookup of overlays by id.\n   * @private\n   * @type {Object.<string, module:ol/Overlay>}\n   */\n  this.overlayIdIndex_ = {};\n\n  /**\n   * @type {module:ol/renderer/Map}\n   * @private\n   */\n  this.renderer_ = this.createRenderer();\n\n  /**\n   * @type {function(Event)|undefined}\n   * @private\n   */\n  this.handleResize_;\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.focus_ = null;\n\n  /**\n   * @private\n   * @type {!Array.<module:ol/PluggableMap~PostRenderFunction>}\n   */\n  this.postRenderFunctions_ = [];\n\n  /**\n   * @private\n   * @type {module:ol/TileQueue}\n   */\n  this.tileQueue_ = new TileQueue(\n    this.getTilePriority.bind(this),\n    this.handleTileChange_.bind(this));\n\n  /**\n   * Uids of features to skip at rendering time.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.skippedFeatureUids_ = {};\n\n  listen(\n    this, getChangeEventType(MapProperty.LAYERGROUP),\n    this.handleLayerGroupChanged_, this);\n  listen(this, getChangeEventType(MapProperty.VIEW),\n    this.handleViewChanged_, this);\n  listen(this, getChangeEventType(MapProperty.SIZE),\n    this.handleSizeChanged_, this);\n  listen(this, getChangeEventType(MapProperty.TARGET),\n    this.handleTargetChanged_, this);\n\n  // setProperties will trigger the rendering of the map if the map\n  // is \"defined\" already.\n  this.setProperties(optionsInternal.values);\n\n  this.controls.forEach(\n    /**\n     * @param {module:ol/control/Control} control Control.\n     * @this {module:ol/PluggableMap}\n     */\n    (function(control) {\n      control.setMap(this);\n    }).bind(this));\n\n  listen(this.controls, CollectionEventType.ADD,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      event.element.setMap(this);\n    }, this);\n\n  listen(this.controls, CollectionEventType.REMOVE,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      event.element.setMap(null);\n    }, this);\n\n  this.interactions.forEach(\n    /**\n     * @param {module:ol/interaction/Interaction} interaction Interaction.\n     * @this {module:ol/PluggableMap}\n     */\n    (function(interaction) {\n      interaction.setMap(this);\n    }).bind(this));\n\n  listen(this.interactions, CollectionEventType.ADD,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      event.element.setMap(this);\n    }, this);\n\n  listen(this.interactions, CollectionEventType.REMOVE,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      event.element.setMap(null);\n    }, this);\n\n  this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n  listen(this.overlays_, CollectionEventType.ADD,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      this.addOverlayInternal_(/** @type {module:ol/Overlay} */ (event.element));\n    }, this);\n\n  listen(this.overlays_, CollectionEventType.REMOVE,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      const overlay = /** @type {module:ol/Overlay} */ (event.element);\n      const id = overlay.getId();\n      if (id !== undefined) {\n        delete this.overlayIdIndex_[id.toString()];\n      }\n      event.element.setMap(null);\n    }, this);\n\n};\n\ninherits(PluggableMap, BaseObject);\n\n\nPluggableMap.prototype.createRenderer = function() {\n  throw new Error('Use a map type that has a createRenderer method');\n};\n\n\n/**\n * Add the given control to the map.\n * @param {module:ol/control/Control} control Control.\n * @api\n */\nPluggableMap.prototype.addControl = function(control) {\n  this.getControls().push(control);\n};\n\n\n/**\n * Add the given interaction to the map.\n * @param {module:ol/interaction/Interaction} interaction Interaction to add.\n * @api\n */\nPluggableMap.prototype.addInteraction = function(interaction) {\n  this.getInteractions().push(interaction);\n};\n\n\n/**\n * Adds the given layer to the top of this map. If you want to add a layer\n * elsewhere in the stack, use `getLayers()` and the methods available on\n * {@link module:ol/Collection~Collection}.\n * @param {module:ol/layer/Base} layer Layer.\n * @api\n */\nPluggableMap.prototype.addLayer = function(layer) {\n  const layers = this.getLayerGroup().getLayers();\n  layers.push(layer);\n};\n\n\n/**\n * Add the given overlay to the map.\n * @param {module:ol/Overlay} overlay Overlay.\n * @api\n */\nPluggableMap.prototype.addOverlay = function(overlay) {\n  this.getOverlays().push(overlay);\n};\n\n\n/**\n * This deals with map's overlay collection changes.\n * @param {module:ol/Overlay} overlay Overlay.\n * @private\n */\nPluggableMap.prototype.addOverlayInternal_ = function(overlay) {\n  const id = overlay.getId();\n  if (id !== undefined) {\n    this.overlayIdIndex_[id.toString()] = overlay;\n  }\n  overlay.setMap(this);\n};\n\n\n/**\n *\n * @inheritDoc\n */\nPluggableMap.prototype.disposeInternal = function() {\n  this.mapBrowserEventHandler_.dispose();\n  unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n  unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n  unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n  if (this.handleResize_ !== undefined) {\n    removeEventListener(EventType.RESIZE, this.handleResize_, false);\n    this.handleResize_ = undefined;\n  }\n  if (this.animationDelayKey_) {\n    cancelAnimationFrame(this.animationDelayKey_);\n    this.animationDelayKey_ = undefined;\n  }\n  this.setTarget(null);\n  BaseObject.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Detect features that intersect a pixel on the viewport, and execute a\n * callback with each intersecting feature. Layers included in the detection can\n * be configured through the `layerFilter` option in `opt_options`.\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature),\n *     module:ol/layer/Layer): T} callback Feature callback. The callback will be\n *     called with two arguments. The first argument is one\n *     {@link module:ol/Feature feature} or\n *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n *     unmanaged layers. To stop detection, callback functions can return a\n *     truthy value.\n * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n * @return {T|undefined} Callback result, i.e. the return value of last\n * callback execution, or the first truthy callback return value.\n * @template S,T\n * @api\n */\nPluggableMap.prototype.forEachFeatureAtPixel = function(pixel, callback, opt_options) {\n  if (!this.frameState_) {\n    return;\n  }\n  const coordinate = this.getCoordinateFromPixel(pixel);\n  opt_options = opt_options !== undefined ? opt_options : {};\n  const hitTolerance = opt_options.hitTolerance !== undefined ?\n    opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n  const layerFilter = opt_options.layerFilter !== undefined ?\n    opt_options.layerFilter : TRUE;\n  return this.renderer_.forEachFeatureAtCoordinate(\n    coordinate, this.frameState_, hitTolerance, callback, null,\n    layerFilter, null);\n};\n\n\n/**\n * Get all features that intersect a pixel on the viewport.\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n * @return {Array.<module:ol/Feature|module:ol/render/Feature>} The detected features or\n * `null` if none were found.\n * @api\n */\nPluggableMap.prototype.getFeaturesAtPixel = function(pixel, opt_options) {\n  let features = null;\n  this.forEachFeatureAtPixel(pixel, function(feature) {\n    if (!features) {\n      features = [];\n    }\n    features.push(feature);\n  }, opt_options);\n  return features;\n};\n\n/**\n * Detect layers that have a color value at a pixel on the viewport, and\n * execute a callback with each matching layer. Layers included in the\n * detection can be configured through `opt_layerFilter`.\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback\n *     Layer callback. This callback will receive two arguments: first is the\n *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n *     that do not currently support this argument. To stop detection, callback\n *     functions can return a truthy value.\n * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Configuration options.\n * @return {T|undefined} Callback result, i.e. the return value of last\n * callback execution, or the first truthy callback return value.\n * @template S,T\n * @api\n */\nPluggableMap.prototype.forEachLayerAtPixel = function(pixel, callback, opt_options) {\n  if (!this.frameState_) {\n    return;\n  }\n  const options = opt_options || {};\n  const hitTolerance = options.hitTolerance !== undefined ?\n    opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n  const layerFilter = options.layerFilter || TRUE;\n  return this.renderer_.forEachLayerAtPixel(\n    pixel, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n};\n\n\n/**\n * Detect if features intersect a pixel on the viewport. Layers included in the\n * detection can be configured through `opt_layerFilter`.\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n * @return {boolean} Is there a feature at the given pixel?\n * @template U\n * @api\n */\nPluggableMap.prototype.hasFeatureAtPixel = function(pixel, opt_options) {\n  if (!this.frameState_) {\n    return false;\n  }\n  const coordinate = this.getCoordinateFromPixel(pixel);\n  opt_options = opt_options !== undefined ? opt_options : {};\n  const layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n  const hitTolerance = opt_options.hitTolerance !== undefined ?\n    opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n  return this.renderer_.hasFeatureAtCoordinate(\n    coordinate, this.frameState_, hitTolerance, layerFilter, null);\n};\n\n\n/**\n * Returns the coordinate in view projection for a browser event.\n * @param {Event} event Event.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nPluggableMap.prototype.getEventCoordinate = function(event) {\n  return this.getCoordinateFromPixel(this.getEventPixel(event));\n};\n\n\n/**\n * Returns the map pixel position for a browser event relative to the viewport.\n * @param {Event} event Event.\n * @return {module:ol~Pixel} Pixel.\n * @api\n */\nPluggableMap.prototype.getEventPixel = function(event) {\n  const viewportPosition = this.viewport_.getBoundingClientRect();\n  const eventPosition = event.changedTouches ? event.changedTouches[0] : event;\n  return [\n    eventPosition.clientX - viewportPosition.left,\n    eventPosition.clientY - viewportPosition.top\n  ];\n};\n\n\n/**\n * Get the target in which this map is rendered.\n * Note that this returns what is entered as an option or in setTarget:\n * if that was an element, it returns an element; if a string, it returns that.\n * @return {Element|string|undefined} The Element or id of the Element that the\n *     map is rendered in.\n * @observable\n * @api\n */\nPluggableMap.prototype.getTarget = function() {\n  return /** @type {Element|string|undefined} */ (this.get(MapProperty.TARGET));\n};\n\n\n/**\n * Get the DOM element into which this map is rendered. In contrast to\n * `getTarget` this method always return an `Element`, or `null` if the\n * map has no target.\n * @return {Element} The element that the map is rendered in.\n * @api\n */\nPluggableMap.prototype.getTargetElement = function() {\n  const target = this.getTarget();\n  if (target !== undefined) {\n    return typeof target === 'string' ? document.getElementById(target) : target;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Get the coordinate for a given pixel.  This returns a coordinate in the\n * map view projection.\n * @param {module:ol~Pixel} pixel Pixel position in the map viewport.\n * @return {module:ol/coordinate~Coordinate} The coordinate for the pixel position.\n * @api\n */\nPluggableMap.prototype.getCoordinateFromPixel = function(pixel) {\n  const frameState = this.frameState_;\n  if (!frameState) {\n    return null;\n  } else {\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n};\n\n\n/**\n * Get the map controls. Modifying this collection changes the controls\n * associated with the map.\n * @return {module:ol/Collection.<module:ol/control/Control>} Controls.\n * @api\n */\nPluggableMap.prototype.getControls = function() {\n  return this.controls;\n};\n\n\n/**\n * Get the map overlays. Modifying this collection changes the overlays\n * associated with the map.\n * @return {module:ol/Collection.<module:ol/Overlay>} Overlays.\n * @api\n */\nPluggableMap.prototype.getOverlays = function() {\n  return this.overlays_;\n};\n\n\n/**\n * Get an overlay by its identifier (the value returned by overlay.getId()).\n * Note that the index treats string and numeric identifiers as the same. So\n * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n * @param {string|number} id Overlay identifier.\n * @return {module:ol/Overlay} Overlay.\n * @api\n */\nPluggableMap.prototype.getOverlayById = function(id) {\n  const overlay = this.overlayIdIndex_[id.toString()];\n  return overlay !== undefined ? overlay : null;\n};\n\n\n/**\n * Get the map interactions. Modifying this collection changes the interactions\n * associated with the map.\n *\n * Interactions are used for e.g. pan, zoom and rotate.\n * @return {module:ol/Collection.<module:ol/interaction/Interaction>} Interactions.\n * @api\n */\nPluggableMap.prototype.getInteractions = function() {\n  return this.interactions;\n};\n\n\n/**\n * Get the layergroup associated with this map.\n * @return {module:ol/layer/Group} A layer group containing the layers in this map.\n * @observable\n * @api\n */\nPluggableMap.prototype.getLayerGroup = function() {\n  return (\n    /** @type {module:ol/layer/Group} */ (this.get(MapProperty.LAYERGROUP))\n  );\n};\n\n\n/**\n * Get the collection of layers associated with this map.\n * @return {!module:ol/Collection.<module:ol/layer/Base>} Layers.\n * @api\n */\nPluggableMap.prototype.getLayers = function() {\n  const layers = this.getLayerGroup().getLayers();\n  return layers;\n};\n\n\n/**\n * Get the pixel for a coordinate.  This takes a coordinate in the map view\n * projection and returns the corresponding pixel.\n * @param {module:ol/coordinate~Coordinate} coordinate A map coordinate.\n * @return {module:ol~Pixel} A pixel position in the map viewport.\n * @api\n */\nPluggableMap.prototype.getPixelFromCoordinate = function(coordinate) {\n  const frameState = this.frameState_;\n  if (!frameState) {\n    return null;\n  } else {\n    return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n  }\n};\n\n\n/**\n * Get the map renderer.\n * @return {module:ol/renderer/Map} Renderer\n */\nPluggableMap.prototype.getRenderer = function() {\n  return this.renderer_;\n};\n\n\n/**\n * Get the size of this map.\n * @return {module:ol/size~Size|undefined} The size in pixels of the map in the DOM.\n * @observable\n * @api\n */\nPluggableMap.prototype.getSize = function() {\n  return (\n    /** @type {module:ol/size~Size|undefined} */ (this.get(MapProperty.SIZE))\n  );\n};\n\n\n/**\n * Get the view associated with this map. A view manages properties such as\n * center and resolution.\n * @return {module:ol/View} The view that controls this map.\n * @observable\n * @api\n */\nPluggableMap.prototype.getView = function() {\n  return (\n    /** @type {module:ol/View} */ (this.get(MapProperty.VIEW))\n  );\n};\n\n\n/**\n * Get the element that serves as the map viewport.\n * @return {Element} Viewport.\n * @api\n */\nPluggableMap.prototype.getViewport = function() {\n  return this.viewport_;\n};\n\n\n/**\n * Get the element that serves as the container for overlays.  Elements added to\n * this container will let mousedown and touchstart events through to the map,\n * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n * events.\n * @return {!Element} The map's overlay container.\n */\nPluggableMap.prototype.getOverlayContainer = function() {\n  return this.overlayContainer_;\n};\n\n\n/**\n * Get the element that serves as a container for overlays that don't allow\n * event propagation. Elements added to this container won't let mousedown and\n * touchstart events through to the map, so clicks and gestures on an overlay\n * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n * @return {!Element} The map's overlay container that stops events.\n */\nPluggableMap.prototype.getOverlayContainerStopEvent = function() {\n  return this.overlayContainerStopEvent_;\n};\n\n\n/**\n * @param {module:ol/Tile} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {module:ol/coordinate~Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nPluggableMap.prototype.getTilePriority = function(tile, tileSourceKey, tileCenter, tileResolution) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  const frameState = this.frameState_;\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels\n  // between the center of the tile and the focus.  The factor of 65536 means\n  // that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const deltaX = tileCenter[0] - frameState.focus[0];\n  const deltaY = tileCenter[1] - frameState.focus[1];\n  return 65536 * Math.log(tileResolution) +\n      Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n};\n\n\n/**\n * @param {Event} browserEvent Browser event.\n * @param {string=} opt_type Type.\n */\nPluggableMap.prototype.handleBrowserEvent = function(browserEvent, opt_type) {\n  const type = opt_type || browserEvent.type;\n  const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n  this.handleMapBrowserEvent(mapBrowserEvent);\n};\n\n\n/**\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent The event to handle.\n */\nPluggableMap.prototype.handleMapBrowserEvent = function(mapBrowserEvent) {\n  if (!this.frameState_) {\n    // With no view defined, we cannot translate pixels into geographical\n    // coordinates so interactions cannot be used.\n    return;\n  }\n  this.focus_ = mapBrowserEvent.coordinate;\n  mapBrowserEvent.frameState = this.frameState_;\n  const interactionsArray = this.getInteractions().getArray();\n  if (this.dispatchEvent(mapBrowserEvent) !== false) {\n    for (let i = interactionsArray.length - 1; i >= 0; i--) {\n      const interaction = interactionsArray[i];\n      if (!interaction.getActive()) {\n        continue;\n      }\n      const cont = interaction.handleEvent(mapBrowserEvent);\n      if (!cont) {\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * @protected\n */\nPluggableMap.prototype.handlePostRender = function() {\n\n  const frameState = this.frameState_;\n\n  // Manage the tile queue\n  // Image loads are expensive and a limited resource, so try to use them\n  // efficiently:\n  // * When the view is static we allow a large number of parallel tile loads\n  //   to complete the frame as quickly as possible.\n  // * When animating or interacting, image loads can cause janks, so we reduce\n  //   the maximum number of loads per frame and limit the number of parallel\n  //   tile loads to remain reactive to view changes and to reduce the chance of\n  //   loading tiles that will quickly disappear from view.\n  const tileQueue = this.tileQueue_;\n  if (!tileQueue.isEmpty()) {\n    let maxTotalLoading = this.maxTilesLoading_;\n    let maxNewLoads = maxTotalLoading;\n    if (frameState) {\n      const hints = frameState.viewHints;\n      if (hints[ViewHint.ANIMATING]) {\n        maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n        maxNewLoads = 2;\n      }\n      if (hints[ViewHint.INTERACTING]) {\n        maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n        maxNewLoads = 2;\n      }\n    }\n    if (tileQueue.getTilesLoading() < maxTotalLoading) {\n      tileQueue.reprioritize(); // FIXME only call if view has changed\n      tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n    }\n  }\n\n  const postRenderFunctions = this.postRenderFunctions_;\n  for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n    postRenderFunctions[i](this, frameState);\n  }\n  postRenderFunctions.length = 0;\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleSizeChanged_ = function() {\n  this.render();\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleTargetChanged_ = function() {\n  // target may be undefined, null, a string or an Element.\n  // If it's a string we convert it to an Element before proceeding.\n  // If it's not now an Element we remove the viewport from the DOM.\n  // If it's an Element we append the viewport element to it.\n\n  let targetElement;\n  if (this.getTarget()) {\n    targetElement = this.getTargetElement();\n  }\n\n  if (this.keyHandlerKeys_) {\n    for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n      unlistenByKey(this.keyHandlerKeys_[i]);\n    }\n    this.keyHandlerKeys_ = null;\n  }\n\n  if (!targetElement) {\n    this.renderer_.removeLayerRenderers();\n    removeNode(this.viewport_);\n    if (this.handleResize_ !== undefined) {\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n  } else {\n    targetElement.appendChild(this.viewport_);\n\n    const keyboardEventTarget = !this.keyboardEventTarget_ ?\n      targetElement : this.keyboardEventTarget_;\n    this.keyHandlerKeys_ = [\n      listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n      listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n    ];\n\n    if (!this.handleResize_) {\n      this.handleResize_ = this.updateSize.bind(this);\n      addEventListener(EventType.RESIZE, this.handleResize_, false);\n    }\n  }\n\n  this.updateSize();\n  // updateSize calls setSize, so no need to call this.render\n  // ourselves here.\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleTileChange_ = function() {\n  this.render();\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleViewPropertyChanged_ = function() {\n  this.render();\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleViewChanged_ = function() {\n  if (this.viewPropertyListenerKey_) {\n    unlistenByKey(this.viewPropertyListenerKey_);\n    this.viewPropertyListenerKey_ = null;\n  }\n  if (this.viewChangeListenerKey_) {\n    unlistenByKey(this.viewChangeListenerKey_);\n    this.viewChangeListenerKey_ = null;\n  }\n  const view = this.getView();\n  if (view) {\n    this.viewport_.setAttribute('data-view', getUid(view));\n    this.viewPropertyListenerKey_ = listen(\n      view, ObjectEventType.PROPERTYCHANGE,\n      this.handleViewPropertyChanged_, this);\n    this.viewChangeListenerKey_ = listen(\n      view, EventType.CHANGE,\n      this.handleViewPropertyChanged_, this);\n  }\n  this.render();\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleLayerGroupChanged_ = function() {\n  if (this.layerGroupPropertyListenerKeys_) {\n    this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n    this.layerGroupPropertyListenerKeys_ = null;\n  }\n  const layerGroup = this.getLayerGroup();\n  if (layerGroup) {\n    this.layerGroupPropertyListenerKeys_ = [\n      listen(\n        layerGroup, ObjectEventType.PROPERTYCHANGE,\n        this.render, this),\n      listen(\n        layerGroup, EventType.CHANGE,\n        this.render, this)\n    ];\n  }\n  this.render();\n};\n\n\n/**\n * @return {boolean} Is rendered.\n */\nPluggableMap.prototype.isRendered = function() {\n  return !!this.frameState_;\n};\n\n\n/**\n * Requests an immediate render in a synchronous manner.\n * @api\n */\nPluggableMap.prototype.renderSync = function() {\n  if (this.animationDelayKey_) {\n    cancelAnimationFrame(this.animationDelayKey_);\n  }\n  this.animationDelay_();\n};\n\n\n/**\n * Request a map rendering (at the next animation frame).\n * @api\n */\nPluggableMap.prototype.render = function() {\n  if (this.animationDelayKey_ === undefined) {\n    this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n  }\n};\n\n\n/**\n * Remove the given control from the map.\n * @param {module:ol/control/Control} control Control.\n * @return {module:ol/control/Control|undefined} The removed control (or undefined\n *     if the control was not found).\n * @api\n */\nPluggableMap.prototype.removeControl = function(control) {\n  return this.getControls().remove(control);\n};\n\n\n/**\n * Remove the given interaction from the map.\n * @param {module:ol/interaction/Interaction} interaction Interaction to remove.\n * @return {module:ol/interaction/Interaction|undefined} The removed interaction (or\n *     undefined if the interaction was not found).\n * @api\n */\nPluggableMap.prototype.removeInteraction = function(interaction) {\n  return this.getInteractions().remove(interaction);\n};\n\n\n/**\n * Removes the given layer from the map.\n * @param {module:ol/layer/Base} layer Layer.\n * @return {module:ol/layer/Base|undefined} The removed layer (or undefined if the\n *     layer was not found).\n * @api\n */\nPluggableMap.prototype.removeLayer = function(layer) {\n  const layers = this.getLayerGroup().getLayers();\n  return layers.remove(layer);\n};\n\n\n/**\n * Remove the given overlay from the map.\n * @param {module:ol/Overlay} overlay Overlay.\n * @return {module:ol/Overlay|undefined} The removed overlay (or undefined\n *     if the overlay was not found).\n * @api\n */\nPluggableMap.prototype.removeOverlay = function(overlay) {\n  return this.getOverlays().remove(overlay);\n};\n\n\n/**\n * @param {number} time Time.\n * @private\n */\nPluggableMap.prototype.renderFrame_ = function(time) {\n  let viewState;\n\n  const size = this.getSize();\n  const view = this.getView();\n  const extent = createEmpty();\n  const previousFrameState = this.frameState_;\n  /** @type {?module:ol/PluggableMap~FrameState} */\n  let frameState = null;\n  if (size !== undefined && hasArea(size) && view && view.isDef()) {\n    const viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    const layerStates = {};\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n    }\n    viewState = view.getState();\n    let focus = this.focus_;\n    if (!focus) {\n      focus = viewState.center;\n      const pixelResolution = viewState.resolution / this.pixelRatio_;\n      focus[0] = Math.round(focus[0] / pixelResolution) * pixelResolution;\n      focus[1] = Math.round(focus[1] / pixelResolution) * pixelResolution;\n    }\n    frameState = /** @type {module:ol/PluggableMap~FrameState} */ ({\n      animate: false,\n      coordinateToPixelTransform: this.coordinateToPixelTransform_,\n      extent: extent,\n      focus: focus,\n      index: this.frameIndex_++,\n      layerStates: layerStates,\n      layerStatesArray: layerStatesArray,\n      pixelRatio: this.pixelRatio_,\n      pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n      postRenderFunctions: [],\n      size: size,\n      skippedFeatureUids: this.skippedFeatureUids_,\n      tileQueue: this.tileQueue_,\n      time: time,\n      usedTiles: {},\n      viewState: viewState,\n      viewHints: viewHints,\n      wantedTiles: {}\n    });\n  }\n\n  if (frameState) {\n    frameState.extent = getForViewAndSize(viewState.center,\n      viewState.resolution, viewState.rotation, frameState.size, extent);\n  }\n\n  this.frameState_ = frameState;\n  this.renderer_.renderFrame(frameState);\n\n  if (frameState) {\n    if (frameState.animate) {\n      this.render();\n    }\n    Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n    if (previousFrameState) {\n      const moveStart = !this.previousExtent_ ||\n                  (!isEmpty(this.previousExtent_) &&\n                  !equals(frameState.extent, this.previousExtent_));\n      if (moveStart) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n        this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n      }\n    }\n\n    const idle = this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n    if (idle) {\n      this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n      clone(frameState.extent, this.previousExtent_);\n    }\n  }\n\n  this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n  setTimeout(this.handlePostRender.bind(this), 0);\n\n};\n\n\n/**\n * Sets the layergroup of this map.\n * @param {module:ol/layer/Group} layerGroup A layer group containing the layers in this map.\n * @observable\n * @api\n */\nPluggableMap.prototype.setLayerGroup = function(layerGroup) {\n  this.set(MapProperty.LAYERGROUP, layerGroup);\n};\n\n\n/**\n * Set the size of this map.\n * @param {module:ol/size~Size|undefined} size The size in pixels of the map in the DOM.\n * @observable\n * @api\n */\nPluggableMap.prototype.setSize = function(size) {\n  this.set(MapProperty.SIZE, size);\n};\n\n\n/**\n * Set the target element to render this map into.\n * @param {Element|string|undefined} target The Element or id of the Element\n *     that the map is rendered in.\n * @observable\n * @api\n */\nPluggableMap.prototype.setTarget = function(target) {\n  this.set(MapProperty.TARGET, target);\n};\n\n\n/**\n * Set the view for this map.\n * @param {module:ol/View} view The view that controls this map.\n * @observable\n * @api\n */\nPluggableMap.prototype.setView = function(view) {\n  this.set(MapProperty.VIEW, view);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n */\nPluggableMap.prototype.skipFeature = function(feature) {\n  const featureUid = getUid(feature).toString();\n  this.skippedFeatureUids_[featureUid] = true;\n  this.render();\n};\n\n\n/**\n * Force a recalculation of the map viewport size.  This should be called when\n * third-party code changes the size of the map viewport.\n * @api\n */\nPluggableMap.prototype.updateSize = function() {\n  const targetElement = this.getTargetElement();\n\n  if (!targetElement) {\n    this.setSize(undefined);\n  } else {\n    const computedStyle = getComputedStyle(targetElement);\n    this.setSize([\n      targetElement.offsetWidth -\n          parseFloat(computedStyle['borderLeftWidth']) -\n          parseFloat(computedStyle['paddingLeft']) -\n          parseFloat(computedStyle['paddingRight']) -\n          parseFloat(computedStyle['borderRightWidth']),\n      targetElement.offsetHeight -\n          parseFloat(computedStyle['borderTopWidth']) -\n          parseFloat(computedStyle['paddingTop']) -\n          parseFloat(computedStyle['paddingBottom']) -\n          parseFloat(computedStyle['borderBottomWidth'])\n    ]);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n */\nPluggableMap.prototype.unskipFeature = function(feature) {\n  const featureUid = getUid(feature).toString();\n  delete this.skippedFeatureUids_[featureUid];\n  this.render();\n};\n\n\n/**\n * @param {MapOptions} options Map options.\n * @return {module:ol/PluggableMap~MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n\n  /**\n   * @type {Element|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object.<string, *>}\n   */\n  const values = {};\n\n  const layerGroup = (options.layers instanceof LayerGroup) ?\n    options.layers : new LayerGroup({layers: options.layers});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] = options.view !== undefined ?\n    options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(options.controls instanceof Collection,\n        47); // Expected `controls` to be an array or an `module:ol/Collection~Collection`\n      controls = options.controls;\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(options.interactions instanceof Collection,\n        48); // Expected `interactions` to be an array or an `module:ol/Collection~Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(options.overlays instanceof Collection,\n        49); // Expected `overlays` to be an array or an `module:ol/Collection~Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n\n}\nexport default PluggableMap;\n","/**\n * @module ol/format/TopoJSON\n */\nimport {inherits} from '../util.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport JSONFeature from '../format/JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/proj~ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {string} [layerName] Set the name of the TopoJSON topology\n * `objects`'s children as feature property with the specified name. This means\n * that when set to `'layer'`, a topology like\n * ```\n * {\n *   \"type\": \"Topology\",\n *   \"objects\": {\n *     \"example\": {\n *       \"type\": \"GeometryCollection\",\n *       \"geometries\": []\n *     }\n *   }\n * }\n * ```\n * will result in features that have a property `'layer'` set to `'example'`.\n * When not set, no property will be added to features.\n * @property {Array.<string>} [layers] Names of the TopoJSON topology's\n * `objects`'s children to read features from.  If not provided, features will\n * be read from all children.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading data in the TopoJSON format.\n *\n * @constructor\n * @extends {module:ol/format/JSONFeature}\n * @param {module:ol/format/TopoJSON~Options=} opt_options Options.\n * @api\n */\nconst TopoJSON = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  JSONFeature.call(this);\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.layerName_ = options.layerName;\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  /**\n   * @inheritDoc\n   */\n  this.dataProjection = getProjection(\n    options.dataProjection ?\n      options.dataProjection : 'EPSG:4326');\n\n};\n\ninherits(TopoJSON, JSONFeature);\n\n\n/**\n * @const\n * @type {Object.<string, function(TopoJSONGeometry, Array, ...Array): module:ol/geom/Geometry>}\n */\nconst GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry\n};\n\n\n/**\n * Concatenate arcs into a coordinate array.\n * @param {Array.<number>} indices Indices of arcs to concatenate.  Negative\n *     values indicate arcs need to be reversed.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} arcs Array of arcs (already\n *     transformed).\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates array.\n */\nfunction concatenateArcs(indices, arcs) {\n  /** @type {Array.<module:ol/coordinate~Coordinate>} */\n  const coordinates = [];\n  let index, arc;\n  for (let i = 0, ii = indices.length; i < ii; ++i) {\n    index = indices[i];\n    if (i > 0) {\n      // splicing together arcs, discard last point\n      coordinates.pop();\n    }\n    if (index >= 0) {\n      // forward arc\n      arc = arcs[index];\n    } else {\n      // reverse arc\n      arc = arcs[~index].slice().reverse();\n    }\n    coordinates.push.apply(coordinates, arc);\n  }\n  // provide fresh copies of coordinate arrays\n  for (let j = 0, jj = coordinates.length; j < jj; ++j) {\n    coordinates[j] = coordinates[j].slice();\n  }\n  return coordinates;\n}\n\n\n/**\n * Create a point from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array.<number>} scale Scale for each dimension.\n * @param {Array.<number>} translate Translation for each dimension.\n * @return {module:ol/geom/Point} Geometry.\n */\nfunction readPointGeometry(object, scale, translate) {\n  const coordinates = object.coordinates;\n  if (scale && translate) {\n    transformVertex(coordinates, scale, translate);\n  }\n  return new Point(coordinates);\n}\n\n\n/**\n * Create a multi-point from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array.<number>} scale Scale for each dimension.\n * @param {Array.<number>} translate Translation for each dimension.\n * @return {module:ol/geom/MultiPoint} Geometry.\n */\nfunction readMultiPointGeometry(object, scale, translate) {\n  const coordinates = object.coordinates;\n  if (scale && translate) {\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      transformVertex(coordinates[i], scale, translate);\n    }\n  }\n  return new MultiPoint(coordinates);\n}\n\n\n/**\n * Create a linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @return {module:ol/geom/LineString} Geometry.\n */\nfunction readLineStringGeometry(object, arcs) {\n  const coordinates = concatenateArcs(object.arcs, arcs);\n  return new LineString(coordinates);\n}\n\n\n/**\n * Create a multi-linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @return {module:ol/geom/MultiLineString} Geometry.\n */\nfunction readMultiLineStringGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object.arcs.length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object.arcs[i], arcs);\n  }\n  return new MultiLineString(coordinates);\n}\n\n\n/**\n * Create a polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @return {module:ol/geom/Polygon} Geometry.\n */\nfunction readPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object.arcs.length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object.arcs[i], arcs);\n  }\n  return new Polygon(coordinates);\n}\n\n\n/**\n * Create a multi-polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @return {module:ol/geom/MultiPolygon} Geometry.\n */\nfunction readMultiPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object.arcs.length; i < ii; ++i) {\n    // for each polygon\n    const polyArray = object.arcs[i];\n    const ringCoords = [];\n    for (let j = 0, jj = polyArray.length; j < jj; ++j) {\n      // for each ring\n      ringCoords[j] = concatenateArcs(polyArray[j], arcs);\n    }\n    coordinates[i] = ringCoords;\n  }\n  return new MultiPolygon(coordinates);\n}\n\n\n/**\n * Create features from a TopoJSON GeometryCollection object.\n *\n * @param {TopoJSONGeometryCollection} collection TopoJSON Geometry\n *     object.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @param {Array.<number>} scale Scale for each dimension.\n * @param {Array.<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {Array.<module:ol/Feature>} Array of features.\n */\nfunction readFeaturesFromGeometryCollection(collection, arcs, scale, translate, property, name, opt_options) {\n  const geometries = collection.geometries;\n  const features = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    features[i] = readFeatureFromGeometry(\n      geometries[i], arcs, scale, translate, property, name, opt_options);\n  }\n  return features;\n}\n\n\n/**\n * Create a feature from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON geometry object.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @param {Array.<number>} scale Scale for each dimension.\n * @param {Array.<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/Feature} Feature.\n */\nfunction readFeatureFromGeometry(object, arcs, scale, translate, property, name, opt_options) {\n  let geometry;\n  const type = object.type;\n  const geometryReader = GEOMETRY_READERS[type];\n  if ((type === 'Point') || (type === 'MultiPoint')) {\n    geometry = geometryReader(object, scale, translate);\n  } else {\n    geometry = geometryReader(object, arcs);\n  }\n  const feature = new Feature();\n  feature.setGeometry(/** @type {module:ol/geom/Geometry} */ (\n    transformWithOptions(geometry, false, opt_options)));\n  if (object.id !== undefined) {\n    feature.setId(object.id);\n  }\n  let properties = object.properties;\n  if (property) {\n    if (!properties) {\n      properties = {};\n    }\n    properties[property] = name;\n  }\n  if (properties) {\n    feature.setProperties(properties);\n  }\n  return feature;\n}\n\n\n/**\n * Read all features from a TopoJSON source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nTopoJSON.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nTopoJSON.prototype.readFeaturesFromObject = function(object, opt_options) {\n  if (object.type == 'Topology') {\n    const topoJSONTopology = /** @type {TopoJSONTopology} */ (object);\n    let transform, scale = null, translate = null;\n    if (topoJSONTopology.transform) {\n      transform = topoJSONTopology.transform;\n      scale = transform.scale;\n      translate = transform.translate;\n    }\n    const arcs = topoJSONTopology.arcs;\n    if (transform) {\n      transformArcs(arcs, scale, translate);\n    }\n    /** @type {Array.<module:ol/Feature>} */\n    const features = [];\n    const topoJSONFeatures = topoJSONTopology.objects;\n    const property = this.layerName_;\n    let feature;\n    for (const objectName in topoJSONFeatures) {\n      if (this.layers_ && this.layers_.indexOf(objectName) == -1) {\n        continue;\n      }\n      if (topoJSONFeatures[objectName].type === 'GeometryCollection') {\n        feature = /** @type {TopoJSONGeometryCollection} */ (topoJSONFeatures[objectName]);\n        features.push.apply(features, readFeaturesFromGeometryCollection(\n          feature, arcs, scale, translate, property, objectName, opt_options));\n      } else {\n        feature = /** @type {TopoJSONGeometry} */ (topoJSONFeatures[objectName]);\n        features.push(readFeatureFromGeometry(\n          feature, arcs, scale, translate, property, objectName, opt_options));\n      }\n    }\n    return features;\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * Apply a linear transform to array of arcs.  The provided array of arcs is\n * modified in place.\n *\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @param {Array.<number>} scale Scale for each dimension.\n * @param {Array.<number>} translate Translation for each dimension.\n */\nfunction transformArcs(arcs, scale, translate) {\n  for (let i = 0, ii = arcs.length; i < ii; ++i) {\n    transformArc(arcs[i], scale, translate);\n  }\n}\n\n\n/**\n * Apply a linear transform to an arc.  The provided arc is modified in place.\n *\n * @param {Array.<module:ol/coordinate~Coordinate>} arc Arc.\n * @param {Array.<number>} scale Scale for each dimension.\n * @param {Array.<number>} translate Translation for each dimension.\n */\nfunction transformArc(arc, scale, translate) {\n  let x = 0;\n  let y = 0;\n  for (let i = 0, ii = arc.length; i < ii; ++i) {\n    const vertex = arc[i];\n    x += vertex[0];\n    y += vertex[1];\n    vertex[0] = x;\n    vertex[1] = y;\n    transformVertex(vertex, scale, translate);\n  }\n}\n\n\n/**\n * Apply a linear transform to a vertex.  The provided vertex is modified in\n * place.\n *\n * @param {module:ol/coordinate~Coordinate} vertex Vertex.\n * @param {Array.<number>} scale Scale for each dimension.\n * @param {Array.<number>} translate Translation for each dimension.\n */\nfunction transformVertex(vertex, scale, translate) {\n  vertex[0] = vertex[0] * scale[0] + translate[0];\n  vertex[1] = vertex[1] * scale[1] + translate[1];\n}\n\n\n/**\n * Read the projection from a TopoJSON source.\n *\n * @param {Document|Node|Object|string} object Source.\n * @return {module:ol/proj/Projection} Projection.\n * @override\n * @api\n */\nTopoJSON.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nTopoJSON.prototype.readProjectionFromObject = function(object) {\n  return this.dataProjection;\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nTopoJSON.prototype.writeFeatureObject = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nTopoJSON.prototype.writeFeaturesObject = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nTopoJSON.prototype.writeGeometryObject = function(geometry, opt_options) {};\n\n\n/**\n * Not implemented.\n * @override\n */\nTopoJSON.prototype.readGeometryFromObject = function() {};\n\n\n/**\n * Not implemented.\n * @override\n */\nTopoJSON.prototype.readFeatureFromObject = function() {};\nexport default TopoJSON;\n","/**\n * @module ol/ImageTile\n */\nimport {inherits} from './util.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @typedef {function(new: module:ol/ImageTile, module:ol/tilecoord~TileCoord,\n * module:ol/TileState, string, ?string, module:ol/Tile~LoadFunction)} TileClass\n * @api\n */\n\n/**\n * @constructor\n * @extends {module:ol/Tile}\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileState} state State.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n * @param {module:ol/Tile~Options=} opt_options Tile options.\n */\nconst ImageTile = function(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n  Tile.call(this, tileCoord, state, opt_options);\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ = crossOrigin;\n\n  /**\n   * Image URI\n   *\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {Image|HTMLCanvasElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/Tile~LoadFunction}\n   */\n  this.tileLoadFunction_ = tileLoadFunction;\n\n};\n\ninherits(ImageTile, Tile);\n\n\n/**\n * @inheritDoc\n */\nImageTile.prototype.disposeInternal = function() {\n  if (this.state == TileState.LOADING) {\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n  }\n  if (this.interimTile) {\n    this.interimTile.dispose();\n  }\n  this.state = TileState.ABORT;\n  this.changed();\n  Tile.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n * @api\n */\nImageTile.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageTile.prototype.getKey = function() {\n  return this.src_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\nImageTile.prototype.handleImageError_ = function() {\n  this.state = TileState.ERROR;\n  this.unlistenImage_();\n  this.image_ = getBlankImage();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\nImageTile.prototype.handleImageLoad_ = function() {\n  if (this.image_.naturalWidth && this.image_.naturalHeight) {\n    this.state = TileState.LOADED;\n  } else {\n    this.state = TileState.EMPTY;\n  }\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nImageTile.prototype.load = function() {\n  if (this.state == TileState.ERROR) {\n    this.state = TileState.IDLE;\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n  if (this.state == TileState.IDLE) {\n    this.state = TileState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.tileLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\nImageTile.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/render/ReplayGroup\n */\n/**\n * Base class for replay groups.\n * @constructor\n * @abstract\n */\nconst ReplayGroup = function() {};\n\n\n/**\n * @abstract\n * @param {number|undefined} zIndex Z index.\n * @param {module:ol/render/ReplayType} replayType Replay type.\n * @return {module:ol/render/VectorContext} Replay.\n */\nReplayGroup.prototype.getReplay = function(zIndex, replayType) {};\n\n\n/**\n * @abstract\n * @return {boolean} Is empty.\n */\nReplayGroup.prototype.isEmpty = function() {};\nexport default ReplayGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport {getUid, inherits} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {FALSE, UNDEFINED} from '../functions.js';\nimport SourceState from '../source/State.js';\n\n/**\n * @constructor\n * @extends {module:ol/Observable}\n * @param {module:ol/layer/Layer} layer Layer.\n * @struct\n */\nconst LayerRenderer = function(layer) {\n\n  Observable.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/layer/Layer}\n   */\n  this.layer_ = layer;\n\n\n};\n\ninherits(LayerRenderer, Observable);\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature), module:ol/layer/Layer): T}\n *     callback Feature callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @return {T|undefined} Callback result.\n * @template S,T\n */\nLayerRenderer.prototype.forEachFeatureAtCoordinate = UNDEFINED;\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @return {boolean} Is there a feature at the given coordinate?\n */\nLayerRenderer.prototype.hasFeatureAtCoordinate = FALSE;\n\n\n/**\n * Create a function that adds loaded tiles to the tile lookup.\n * @param {module:ol/source/Tile} source Tile source.\n * @param {module:ol/proj/Projection} projection Projection of the tiles.\n * @param {Object.<number, Object.<string, module:ol/Tile>>} tiles Lookup of loaded tiles by zoom level.\n * @return {function(number, module:ol/TileRange):boolean} A function that can be\n *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n * @protected\n */\nLayerRenderer.prototype.createLoadedTileFinder = function(source, projection, tiles) {\n  return (\n    /**\n     * @param {number} zoom Zoom level.\n     * @param {module:ol/TileRange} tileRange Tile range.\n     * @return {boolean} The tile range is fully loaded.\n     */\n    function(zoom, tileRange) {\n      function callback(tile) {\n        if (!tiles[zoom]) {\n          tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n      }\n      return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n    }\n  );\n};\n\n\n/**\n * @return {module:ol/layer/Layer} Layer.\n */\nLayerRenderer.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * Handle changes in image state.\n * @param {module:ol/events/Event} event Image change event.\n * @private\n */\nLayerRenderer.prototype.handleImageChange_ = function(event) {\n  const image = /** @type {module:ol/Image} */ (event.target);\n  if (image.getState() === ImageState.LOADED) {\n    this.renderIfReadyAndVisible();\n  }\n};\n\n\n/**\n * Load the image if not already loaded, and register the image change\n * listener if needed.\n * @param {module:ol/ImageBase} image Image.\n * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n * @protected\n */\nLayerRenderer.prototype.loadImage = function(image) {\n  let imageState = image.getState();\n  if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n    listen(image, EventType.CHANGE, this.handleImageChange_, this);\n  }\n  if (imageState == ImageState.IDLE) {\n    image.load();\n    imageState = image.getState();\n  }\n  return imageState == ImageState.LOADED;\n};\n\n\n/**\n * @protected\n */\nLayerRenderer.prototype.renderIfReadyAndVisible = function() {\n  const layer = this.getLayer();\n  if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/source/Tile} tileSource Tile source.\n * @protected\n */\nLayerRenderer.prototype.scheduleExpireCache = function(frameState, tileSource) {\n  if (tileSource.canExpireCache()) {\n    /**\n     * @param {module:ol/source/Tile} tileSource Tile source.\n     * @param {module:ol/PluggableMap} map Map.\n     * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n     */\n    const postRenderFunction = function(tileSource, map, frameState) {\n      const tileSourceKey = getUid(tileSource).toString();\n      if (tileSourceKey in frameState.usedTiles) {\n        tileSource.expireCache(frameState.viewState.projection,\n          frameState.usedTiles[tileSourceKey]);\n      }\n    }.bind(null, tileSource);\n\n    frameState.postRenderFunctions.push(\n      /** @type {module:ol/PluggableMap~PostRenderFunction} */ (postRenderFunction)\n    );\n  }\n};\n\n\n/**\n * @param {!Object.<string, !Object.<string, module:ol/TileRange>>} usedTiles Used tiles.\n * @param {module:ol/source/Tile} tileSource Tile source.\n * @param {number} z Z.\n * @param {module:ol/TileRange} tileRange Tile range.\n * @protected\n */\nLayerRenderer.prototype.updateUsedTiles = function(usedTiles, tileSource, z, tileRange) {\n  // FIXME should we use tilesToDrawByZ instead?\n  const tileSourceKey = getUid(tileSource).toString();\n  const zKey = z.toString();\n  if (tileSourceKey in usedTiles) {\n    if (zKey in usedTiles[tileSourceKey]) {\n      usedTiles[tileSourceKey][zKey].extend(tileRange);\n    } else {\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  } else {\n    usedTiles[tileSourceKey] = {};\n    usedTiles[tileSourceKey][zKey] = tileRange;\n  }\n};\n\n\n/**\n * Manage tile pyramid.\n * This function performs a number of functions related to the tiles at the\n * current zoom and lower zoom levels:\n * - registers idle tiles in frameState.wantedTiles so that they are not\n *   discarded by the tile queue\n * - enqueues missing tiles\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/source/Tile} tileSource Tile source.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} currentZ Current Z.\n * @param {number} preload Load low resolution tiles up to 'preload' levels.\n * @param {function(this: T, module:ol/Tile)=} opt_tileCallback Tile callback.\n * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n * @protected\n * @template T\n */\nLayerRenderer.prototype.manageTilePyramid = function(\n  frameState, tileSource, tileGrid, pixelRatio, projection, extent,\n  currentZ, preload, opt_tileCallback, opt_this) {\n  const tileSourceKey = getUid(tileSource).toString();\n  if (!(tileSourceKey in frameState.wantedTiles)) {\n    frameState.wantedTiles[tileSourceKey] = {};\n  }\n  const wantedTiles = frameState.wantedTiles[tileSourceKey];\n  const tileQueue = frameState.tileQueue;\n  const minZoom = tileGrid.getMinZoom();\n  let tile, tileRange, tileResolution, x, y, z;\n  for (z = minZoom; z <= currentZ; ++z) {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n    tileResolution = tileGrid.getResolution(z);\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (currentZ - z <= preload) {\n          tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n          if (tile.getState() == TileState.IDLE) {\n            wantedTiles[tile.getKey()] = true;\n            if (!tileQueue.isKeyQueued(tile.getKey())) {\n              tileQueue.enqueue([tile, tileSourceKey,\n                tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n            }\n          }\n          if (opt_tileCallback !== undefined) {\n            opt_tileCallback.call(opt_this, tile);\n          }\n        } else {\n          tileSource.useTile(z, x, y, projection);\n        }\n      }\n    }\n  }\n};\nexport default LayerRenderer;\n","/**\n * @module ol/style/Image\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n * @property {boolean} snapToPixel\n */\n\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n *\n * @constructor\n * @abstract\n * @param {module:ol/style/Image~Options} options Options.\n * @api\n */\nconst ImageStyle = function(options) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.opacity_ = options.opacity;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.snapToPixel_ = options.snapToPixel;\n\n};\n\n\n/**\n * Get the symbolizer opacity.\n * @return {number} Opacity.\n * @api\n */\nImageStyle.prototype.getOpacity = function() {\n  return this.opacity_;\n};\n\n\n/**\n * Determine whether the symbolizer rotates with the map.\n * @return {boolean} Rotate with map.\n * @api\n */\nImageStyle.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the symoblizer rotation.\n * @return {number} Rotation.\n * @api\n */\nImageStyle.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the symbolizer scale.\n * @return {number} Scale.\n * @api\n */\nImageStyle.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Determine whether the symbolizer should be snapped to a pixel.\n * @return {boolean} The symbolizer should snap to a pixel.\n * @api\n */\nImageStyle.prototype.getSnapToPixel = function() {\n  return this.snapToPixel_;\n};\n\n\n/**\n * Get the anchor point in pixels. The anchor determines the center point for the\n * symbolizer.\n * @abstract\n * @return {Array.<number>} Anchor.\n */\nImageStyle.prototype.getAnchor = function() {};\n\n\n/**\n * Get the image element for the symbolizer.\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|Image} Image element.\n */\nImageStyle.prototype.getImage = function(pixelRatio) {};\n\n\n/**\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|Image} Image element.\n */\nImageStyle.prototype.getHitDetectionImage = function(pixelRatio) {};\n\n\n/**\n * @abstract\n * @return {module:ol/ImageState} Image state.\n */\nImageStyle.prototype.getImageState = function() {};\n\n\n/**\n * @abstract\n * @return {module:ol/size~Size} Image size.\n */\nImageStyle.prototype.getImageSize = function() {};\n\n\n/**\n * @abstract\n * @return {module:ol/size~Size} Size of the hit-detection image.\n */\nImageStyle.prototype.getHitDetectionImageSize = function() {};\n\n\n/**\n * Get the origin of the symbolizer.\n * @abstract\n * @return {Array.<number>} Origin.\n */\nImageStyle.prototype.getOrigin = function() {};\n\n\n/**\n * Get the size of the symbolizer (in pixels).\n * @abstract\n * @return {module:ol/size~Size} Size.\n */\nImageStyle.prototype.getSize = function() {};\n\n\n/**\n * Set the opacity.\n *\n * @param {number} opacity Opacity.\n * @api\n */\nImageStyle.prototype.setOpacity = function(opacity) {\n  this.opacity_ = opacity;\n};\n\n\n/**\n * Set whether to rotate the style with the view.\n *\n * @param {boolean} rotateWithView Rotate with map.\n * @api\n */\nImageStyle.prototype.setRotateWithView = function(rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number} rotation Rotation.\n * @api\n */\nImageStyle.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number} scale Scale.\n * @api\n */\nImageStyle.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set whether to snap the image to the closest pixel.\n *\n * @param {boolean} snapToPixel Snap to pixel?\n * @api\n */\nImageStyle.prototype.setSnapToPixel = function(snapToPixel) {\n  this.snapToPixel_ = snapToPixel;\n};\n\n\n/**\n * @abstract\n * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {module:ol/events~EventsKey|undefined} Listener key.\n * @template T\n */\nImageStyle.prototype.listenImageChange = function(listener, thisArg) {};\n\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\nImageStyle.prototype.load = function() {};\n\n\n/**\n * @abstract\n * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @template T\n */\nImageStyle.prototype.unlistenImageChange = function(listener, thisArg) {};\nexport default ImageStyle;\n","/**\n * @module ol/layer/Base\n */\nimport {inherits} from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from '../layer/Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/Object}\n * @param {module:ol/layer/Base~Options} options Layer options.\n * @api\n */\nconst BaseLayer = function(options) {\n\n  BaseObject.call(this);\n\n  /**\n   * @type {Object.<string, *>}\n   */\n  const properties = assign({}, options);\n  properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n  properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n  properties[LayerProperty.Z_INDEX] =\n      options.zIndex !== undefined ? options.zIndex : 0;\n  properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n  properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n\n  this.setProperties(properties);\n\n  /**\n   * @type {module:ol/layer/Layer~State}\n   * @private\n   */\n  this.state_ = /** @type {module:ol/layer/Layer~State} */ ({\n    layer: /** @type {module:ol/layer/Layer} */ (this),\n    managed: true\n  });\n\n  /**\n   * The layer type.\n   * @type {module:ol/LayerType}\n   * @protected;\n   */\n  this.type;\n\n};\n\ninherits(BaseLayer, BaseObject);\n\n\n/**\n * Get the layer type (used when creating a layer renderer).\n * @return {module:ol/LayerType} The layer type.\n */\nBaseLayer.prototype.getType = function() {\n  return this.type;\n};\n\n\n/**\n * @return {module:ol/layer/Layer~State} Layer state.\n */\nBaseLayer.prototype.getLayerState = function() {\n  this.state_.opacity = clamp(this.getOpacity(), 0, 1);\n  this.state_.sourceState = this.getSourceState();\n  this.state_.visible = this.getVisible();\n  this.state_.extent = this.getExtent();\n  this.state_.zIndex = this.getZIndex();\n  this.state_.maxResolution = this.getMaxResolution();\n  this.state_.minResolution = Math.max(this.getMinResolution(), 0);\n\n  return this.state_;\n};\n\n\n/**\n * @abstract\n * @param {Array.<module:ol/layer/Layer>=} opt_array Array of layers (to be\n *     modified in place).\n * @return {Array.<module:ol/layer/Layer>} Array of layers.\n */\nBaseLayer.prototype.getLayersArray = function(opt_array) {};\n\n\n/**\n * @abstract\n * @param {Array.<module:ol/layer/Layer~State>=} opt_states Optional list of layer\n *     states (to be modified in place).\n * @return {Array.<module:ol/layer/Layer~State>} List of layer states.\n */\nBaseLayer.prototype.getLayerStatesArray = function(opt_states) {};\n\n\n/**\n * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n * will be visible regardless of extent.\n * @return {module:ol/extent~Extent|undefined} The layer extent.\n * @observable\n * @api\n */\nBaseLayer.prototype.getExtent = function() {\n  return (\n    /** @type {module:ol/extent~Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n  );\n};\n\n\n/**\n * Return the maximum resolution of the layer.\n * @return {number} The maximum resolution of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getMaxResolution = function() {\n  return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n};\n\n\n/**\n * Return the minimum resolution of the layer.\n * @return {number} The minimum resolution of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getMinResolution = function() {\n  return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n};\n\n\n/**\n * Return the opacity of the layer (between 0 and 1).\n * @return {number} The opacity of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getOpacity = function() {\n  return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n};\n\n\n/**\n * @abstract\n * @return {module:ol/source/State} Source state.\n */\nBaseLayer.prototype.getSourceState = function() {};\n\n\n/**\n * Return the visibility of the layer (`true` or `false`).\n * @return {boolean} The visibility of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getVisible = function() {\n  return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n};\n\n\n/**\n * Return the Z-index of the layer, which is used to order layers before\n * rendering. The default Z-index is 0.\n * @return {number} The Z-index of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getZIndex = function() {\n  return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n};\n\n\n/**\n * Set the extent at which the layer is visible.  If `undefined`, the layer\n * will be visible at all extents.\n * @param {module:ol/extent~Extent|undefined} extent The extent of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setExtent = function(extent) {\n  this.set(LayerProperty.EXTENT, extent);\n};\n\n\n/**\n * Set the maximum resolution at which the layer is visible.\n * @param {number} maxResolution The maximum resolution of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setMaxResolution = function(maxResolution) {\n  this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n};\n\n\n/**\n * Set the minimum resolution at which the layer is visible.\n * @param {number} minResolution The minimum resolution of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setMinResolution = function(minResolution) {\n  this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n};\n\n\n/**\n * Set the opacity of the layer, allowed values range from 0 to 1.\n * @param {number} opacity The opacity of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setOpacity = function(opacity) {\n  this.set(LayerProperty.OPACITY, opacity);\n};\n\n\n/**\n * Set the visibility of the layer (`true` or `false`).\n * @param {boolean} visible The visibility of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setVisible = function(visible) {\n  this.set(LayerProperty.VISIBLE, visible);\n};\n\n\n/**\n * Set Z-index of the layer, which is used to order layers before rendering.\n * The default Z-index is 0.\n * @param {number} zindex The z-index of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setZIndex = function(zindex) {\n  this.set(LayerProperty.Z_INDEX, zindex);\n};\nexport default BaseLayer;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport {inherits} from '../util.js';\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {zoom, zoomWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/PinchZoom~Options=} opt_options Options.\n * @api\n */\nconst PinchZoom = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.constrainResolution_ = options.constrainResolution || false;\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.anchor_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastDistance_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.lastScaleDelta_ = 1;\n\n};\n\ninherits(PinchZoom, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  let scaleDelta = 1.0;\n\n  const touch0 = this.targetPointers[0];\n  const touch1 = this.targetPointers[1];\n  const dx = touch0.clientX - touch1.clientX;\n  const dy = touch0.clientY - touch1.clientY;\n\n  // distance between touches\n  const distance = Math.sqrt(dx * dx + dy * dy);\n\n  if (this.lastDistance_ !== undefined) {\n    scaleDelta = this.lastDistance_ / distance;\n  }\n  this.lastDistance_ = distance;\n\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  const resolution = view.getResolution();\n  const maxResolution = view.getMaxResolution();\n  const minResolution = view.getMinResolution();\n  let newResolution = resolution * scaleDelta;\n  if (newResolution > maxResolution) {\n    scaleDelta = maxResolution / resolution;\n    newResolution = maxResolution;\n  } else if (newResolution < minResolution) {\n    scaleDelta = minResolution / resolution;\n    newResolution = minResolution;\n  }\n\n  if (scaleDelta != 1.0) {\n    this.lastScaleDelta_ = scaleDelta;\n  }\n\n  // scale anchor point.\n  const viewportPosition = map.getViewport().getBoundingClientRect();\n  const centroid = centroidFromPointers(this.targetPointers);\n  centroid[0] -= viewportPosition.left;\n  centroid[1] -= viewportPosition.top;\n  this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n  // scale, bypass the resolution constraint\n  map.render();\n  zoomWithoutConstraints(view, newResolution, this.anchor_);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (this.targetPointers.length < 2) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    const resolution = view.getResolution();\n    if (this.constrainResolution_ ||\n        resolution < view.getMinResolution() ||\n        resolution > view.getMaxResolution()) {\n      // Zoom to final resolution, with an animation, and provide a\n      // direction not to zoom out/in if user was pinching in/out.\n      // Direction is > 0 if pinching out, and < 0 if pinching in.\n      const direction = this.lastScaleDelta_ - 1;\n      zoom(view, resolution, this.anchor_, this.duration_, direction);\n    }\n    return false;\n  } else {\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length >= 2) {\n    const map = mapBrowserEvent.map;\n    this.anchor_ = null;\n    this.lastDistance_ = undefined;\n    this.lastScaleDelta_ = 1;\n    if (!this.handlingDownUpSequence) {\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nPinchZoom.prototype.shouldStopEvent = FALSE;\nexport default PinchZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport {inherits} from '../util.js';\nimport ViewHint from '../ViewHint.js';\nimport {always} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\nconst MAX_DELTA = 1;\n\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [constrainResolution=false] When using a trackpad or\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\n * ends.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @param {module:ol/interaction/MouseWheelZoom~Options=} opt_options Options.\n * @api\n */\nconst MouseWheelZoom = function(opt_options) {\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delta_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.constrainResolution_ = options.constrainResolution || false;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : always;\n\n  /**\n   * @private\n   * @type {?module:ol/coordinate~Coordinate}\n   */\n  this.lastAnchor_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.startTime_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.timeoutId_ = undefined;\n\n  /**\n   * @private\n   * @type {module:ol/interaction/MouseWheelZoom~Mode|undefined}\n   */\n  this.mode_ = undefined;\n\n  /**\n   * Trackpad events separated by this delay will be considered separate\n   * interactions.\n   * @type {number}\n   */\n  this.trackpadEventGap_ = 400;\n\n  /**\n   * @type {number|undefined}\n   */\n  this.trackpadTimeoutId_ = undefined;\n\n  /**\n   * The number of delta values per zoom level\n   * @private\n   * @type {number}\n   */\n  this.trackpadDeltaPerZoom_ = 300;\n\n  /**\n   * The zoom factor by which scroll zooming is allowed to exceed the limits.\n   * @private\n   * @type {number}\n   */\n  this.trackpadZoomBuffer_ = 1.5;\n\n};\n\ninherits(MouseWheelZoom, Interaction);\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * mousewheel-event) and eventually zooms the map.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} Allow event propagation.\n * @this {module:ol/interaction/MouseWheelZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  const type = mapBrowserEvent.type;\n  if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n    return true;\n  }\n\n  mapBrowserEvent.preventDefault();\n\n  const map = mapBrowserEvent.map;\n  const wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n  if (this.useAnchor_) {\n    this.lastAnchor_ = mapBrowserEvent.coordinate;\n  }\n\n  // Delta normalisation inspired by\n  // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n  let delta;\n  if (mapBrowserEvent.type == EventType.WHEEL) {\n    delta = wheelEvent.deltaY;\n    if (FIREFOX &&\n        wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      delta /= DEVICE_PIXEL_RATIO;\n    }\n    if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      delta *= 40;\n    }\n  } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n    delta = -wheelEvent.wheelDeltaY;\n    if (SAFARI) {\n      delta /= 3;\n    }\n  }\n\n  if (delta === 0) {\n    return false;\n  }\n\n  const now = Date.now();\n\n  if (this.startTime_ === undefined) {\n    this.startTime_ = now;\n  }\n\n  if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n    this.mode_ = Math.abs(delta) < 4 ?\n      Mode.TRACKPAD :\n      Mode.WHEEL;\n  }\n\n  if (this.mode_ === Mode.TRACKPAD) {\n    const view = map.getView();\n    if (this.trackpadTimeoutId_) {\n      clearTimeout(this.trackpadTimeoutId_);\n    } else {\n      view.setHint(ViewHint.INTERACTING, 1);\n    }\n    this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n    let resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n    const minResolution = view.getMinResolution();\n    const maxResolution = view.getMaxResolution();\n    let rebound = 0;\n    if (resolution < minResolution) {\n      resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n      rebound = 1;\n    } else if (resolution > maxResolution) {\n      resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n      rebound = -1;\n    }\n    if (this.lastAnchor_) {\n      const center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n      view.setCenter(view.constrainCenter(center));\n    }\n    view.setResolution(resolution);\n\n    if (rebound === 0 && this.constrainResolution_) {\n      view.animate({\n        resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: this.duration_\n      });\n    }\n\n    if (rebound > 0) {\n      view.animate({\n        resolution: minResolution,\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: 500\n      });\n    } else if (rebound < 0) {\n      view.animate({\n        resolution: maxResolution,\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: 500\n      });\n    }\n    this.startTime_ = now;\n    return false;\n  }\n\n  this.delta_ += delta;\n\n  const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n  clearTimeout(this.timeoutId_);\n  this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n  return false;\n}\n\n\n/**\n * @private\n */\nMouseWheelZoom.prototype.decrementInteractingHint_ = function() {\n  this.trackpadTimeoutId_ = undefined;\n  const view = this.getMap().getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n};\n\n\n/**\n * @private\n * @param {module:ol/PluggableMap} map Map.\n */\nMouseWheelZoom.prototype.handleWheelZoom_ = function(map) {\n  const view = map.getView();\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  const maxDelta = MAX_DELTA;\n  const delta = clamp(this.delta_, -maxDelta, maxDelta);\n  zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n  this.mode_ = undefined;\n  this.delta_ = 0;\n  this.lastAnchor_ = null;\n  this.startTime_ = undefined;\n  this.timeoutId_ = undefined;\n};\n\n\n/**\n * Enable or disable using the mouse's location as an anchor when zooming\n * @param {boolean} useAnchor true to zoom to the mouse's location, false\n * to zoom to the center of the map\n * @api\n */\nMouseWheelZoom.prototype.setMouseAnchor = function(useAnchor) {\n  this.useAnchor_ = useAnchor;\n  if (!useAnchor) {\n    this.lastAnchor_ = null;\n  }\n};\n\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../util.js';\nimport EventSource from '../pointer/EventSource.js';\n\n/**\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @constructor\n * @extends {module:ol/pointer/EventSource}\n */\nconst MsSource = function(dispatcher) {\n  const mapping = {\n    'MSPointerDown': this.msPointerDown,\n    'MSPointerMove': this.msPointerMove,\n    'MSPointerUp': this.msPointerUp,\n    'MSPointerOut': this.msPointerOut,\n    'MSPointerOver': this.msPointerOver,\n    'MSPointerCancel': this.msPointerCancel,\n    'MSGotPointerCapture': this.msGotPointerCapture,\n    'MSLostPointerCapture': this.msLostPointerCapture\n  };\n  EventSource.call(this, dispatcher, mapping);\n\n  /**\n   * @const\n   * @type {!Object.<string, MSPointerEvent|Object>}\n   */\n  this.pointerMap = dispatcher.pointerMap;\n};\n\ninherits(MsSource, EventSource);\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst POINTER_TYPES = [\n  '',\n  'unavailable',\n  'touch',\n  'pen',\n  'mouse'\n];\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @private\n * @param {MSPointerEvent} inEvent The in event.\n * @return {Object} The copied event.\n */\nMsSource.prototype.prepareEvent_ = function(inEvent) {\n  let e = inEvent;\n  if (typeof inEvent.pointerType === 'number') {\n    e = this.dispatcher.cloneEvent(inEvent, inEvent);\n    e.pointerType = POINTER_TYPES[inEvent.pointerType];\n  }\n\n  return e;\n};\n\n\n/**\n * Remove this pointer from the list of active pointers.\n * @param {number} pointerId Pointer identifier.\n */\nMsSource.prototype.cleanup = function(pointerId) {\n  delete this.pointerMap[pointerId.toString()];\n};\n\n\n/**\n * Handler for `msPointerDown`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerDown = function(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerMove`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerMove = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerUp`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerUp = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n};\n\n\n/**\n * Handler for `msPointerOut`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerOut = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerOver`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerOver = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerCancel`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerCancel = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n};\n\n\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msLostPointerCapture = function(inEvent) {\n  const e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n};\n\n\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msGotPointerCapture = function(inEvent) {\n  const e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n};\nexport default MsSource;\n","/**\n * @module ol/pointer/NativeSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../util.js';\nimport EventSource from '../pointer/EventSource.js';\n\n/**\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @constructor\n * @extends {module:ol/pointer/EventSource}\n */\nconst NativeSource = function(dispatcher) {\n  const mapping = {\n    'pointerdown': this.pointerDown,\n    'pointermove': this.pointerMove,\n    'pointerup': this.pointerUp,\n    'pointerout': this.pointerOut,\n    'pointerover': this.pointerOver,\n    'pointercancel': this.pointerCancel,\n    'gotpointercapture': this.gotPointerCapture,\n    'lostpointercapture': this.lostPointerCapture\n  };\n  EventSource.call(this, dispatcher, mapping);\n};\n\ninherits(NativeSource, EventSource);\n\n\n/**\n * Handler for `pointerdown`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerDown = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointermove`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerMove = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointerup`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerUp = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointerout`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerOut = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointerover`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerOver = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointercancel`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerCancel = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.lostPointerCapture = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.gotPointerCapture = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\nexport default NativeSource;\n","/**\n * @module ol/pointer/PointerEvent\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../util.js';\nimport Event from '../events/Event.js';\n\n/**\n * A class for pointer events.\n *\n * This class is used as an abstraction for mouse events,\n * touch events and even native pointer events.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type The type of the event to create.\n * @param {Event} originalEvent The event.\n * @param {Object.<string, ?>=} opt_eventDict An optional dictionary of\n *    initial event properties.\n */\nconst PointerEvent = function(type, originalEvent, opt_eventDict) {\n  Event.call(this, type);\n\n  /**\n   * @const\n   * @type {Event}\n   */\n  this.originalEvent = originalEvent;\n\n  const eventDict = opt_eventDict ? opt_eventDict : {};\n\n  /**\n   * @type {number}\n   */\n  this.buttons = this.getButtons_(eventDict);\n\n  /**\n   * @type {number}\n   */\n  this.pressure = this.getPressure_(eventDict, this.buttons);\n\n  // MouseEvent related properties\n\n  /**\n   * @type {boolean}\n   */\n  this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n  /**\n   * @type {Object}\n   */\n  this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n  /**\n   * @type {number}\n   */\n  this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n  /**\n   * @type {number}\n   */\n  this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n  /**\n   * @type {boolean}\n   */\n  this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n  /**\n   * @type {number}\n   */\n  this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n  /**\n   * @type {Node}\n   */\n  this.relatedTarget = 'relatedTarget' in eventDict ?\n    eventDict['relatedTarget'] : null;\n\n  // PointerEvent related properties\n\n  /**\n   * @const\n   * @type {number}\n   */\n  this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n  /**\n   * @type {string}\n   */\n  this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n  /**\n   * @type {number}\n   */\n  this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n  /**\n   * @type {boolean}\n   */\n  this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n  // keep the semantics of preventDefault\n  if (originalEvent.preventDefault) {\n    this.preventDefault = function() {\n      originalEvent.preventDefault();\n    };\n  }\n};\n\ninherits(PointerEvent, Event);\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nlet HAS_BUTTONS = false;\n\n\n/**\n * @private\n * @param {Object.<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nPointerEvent.prototype.getButtons_ = function(eventDict) {\n  // According to the w3c spec,\n  // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n  // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n  // left mouse button depressed.\n  //\n  // As of now, the only way to distinguish between the two states of\n  // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n  // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n  // no mouse button is held.\n  //\n  // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n  // but initMouseEvent does not expose an argument with which to set\n  // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n  // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n  // of app developers.\n  //\n  // The only way to propagate the correct state of MouseEvent.which and\n  // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n  // is to call initMouseEvent with a buttonArg value of -1.\n  //\n  // This is fixed with DOM Level 4's use of buttons\n  let buttons;\n  if (eventDict.buttons || HAS_BUTTONS) {\n    buttons = eventDict.buttons;\n  } else {\n    switch (eventDict.which) {\n      case 1: buttons = 1; break;\n      case 2: buttons = 4; break;\n      case 3: buttons = 2; break;\n      default: buttons = 0;\n    }\n  }\n  return buttons;\n};\n\n\n/**\n * @private\n * @param {Object.<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nPointerEvent.prototype.getPressure_ = function(eventDict, buttons) {\n  // Spec requires that pointers without pressure specified use 0.5 for down\n  // state and 0 for up state.\n  let pressure = 0;\n  if (eventDict.pressure) {\n    pressure = eventDict.pressure;\n  } else {\n    pressure = buttons ? 0.5 : 0;\n  }\n  return pressure;\n};\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    const ev = new MouseEvent('click', {buttons: 1});\n    HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\nexport default PointerEvent;\n","/**\n * @module ol/pointer/TouchSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../util.js';\nimport {remove} from '../array.js';\nimport EventSource from '../pointer/EventSource.js';\nimport {POINTER_ID} from '../pointer/MouseSource.js';\n\n\n/**\n * @constructor\n * @param {module:ol/pointer/PointerEventHandler} dispatcher The event handler.\n * @param {module:ol/pointer/MouseSource} mouseSource Mouse source.\n * @extends {module:ol/pointer/EventSource}\n */\nconst TouchSource = function(dispatcher, mouseSource) {\n  const mapping = {\n    'touchstart': this.touchstart,\n    'touchmove': this.touchmove,\n    'touchend': this.touchend,\n    'touchcancel': this.touchcancel\n  };\n  EventSource.call(this, dispatcher, mapping);\n\n  /**\n   * @const\n   * @type {!Object.<string, Event|Object>}\n   */\n  this.pointerMap = dispatcher.pointerMap;\n\n  /**\n   * @const\n   * @type {module:ol/pointer/MouseSource}\n   */\n  this.mouseSource = mouseSource;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.firstTouchId_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.clickCount_ = 0;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.resetId_ = undefined;\n\n  /**\n   * Mouse event timeout: This should be long enough to\n   * ignore compat mouse events made by touch.\n   * @private\n   * @type {number}\n   */\n  this.dedupTimeout_ = 2500;\n};\n\ninherits(TouchSource, EventSource);\n\n\n/**\n * @type {number}\n */\nconst CLICK_COUNT_TIMEOUT = 200;\n\n\n/**\n * @type {string}\n */\nconst POINTER_TYPE = 'touch';\n\n/**\n * @private\n * @param {Touch} inTouch The in touch.\n * @return {boolean} True, if this is the primary touch.\n */\nTouchSource.prototype.isPrimaryTouch_ = function(inTouch) {\n  return this.firstTouchId_ === inTouch.identifier;\n};\n\n\n/**\n * Set primary touch if there are no pointers, or the only pointer is the mouse.\n * @param {Touch} inTouch The in touch.\n * @private\n */\nTouchSource.prototype.setPrimaryTouch_ = function(inTouch) {\n  const count = Object.keys(this.pointerMap).length;\n  if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n    this.firstTouchId_ = inTouch.identifier;\n    this.cancelResetClickCount_();\n  }\n};\n\n\n/**\n * @private\n * @param {Object} inPointer The in pointer object.\n */\nTouchSource.prototype.removePrimaryPointer_ = function(inPointer) {\n  if (inPointer.isPrimary) {\n    this.firstTouchId_ = undefined;\n    this.resetClickCount_();\n  }\n};\n\n\n/**\n * @private\n */\nTouchSource.prototype.resetClickCount_ = function() {\n  this.resetId_ = setTimeout(\n    this.resetClickCountHandler_.bind(this),\n    CLICK_COUNT_TIMEOUT);\n};\n\n\n/**\n * @private\n */\nTouchSource.prototype.resetClickCountHandler_ = function() {\n  this.clickCount_ = 0;\n  this.resetId_ = undefined;\n};\n\n\n/**\n * @private\n */\nTouchSource.prototype.cancelResetClickCount_ = function() {\n  if (this.resetId_ !== undefined) {\n    clearTimeout(this.resetId_);\n  }\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent Browser event\n * @param {Touch} inTouch Touch event\n * @return {Object} A pointer object.\n */\nTouchSource.prototype.touchToPointer_ = function(browserEvent, inTouch) {\n  const e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n  // Spec specifies that pointerId 1 is reserved for Mouse.\n  // Touch identifiers can start at 0.\n  // Add 2 to the touch identifier for compatibility.\n  e.pointerId = inTouch.identifier + 2;\n  // TODO: check if this is necessary?\n  //e.target = findTarget(e);\n  e.bubbles = true;\n  e.cancelable = true;\n  e.detail = this.clickCount_;\n  e.button = 0;\n  e.buttons = 1;\n  e.width = inTouch.webkitRadiusX || inTouch.radiusX || 0;\n  e.height = inTouch.webkitRadiusY || inTouch.radiusY || 0;\n  e.pressure = inTouch.webkitForce || inTouch.force || 0.5;\n  e.isPrimary = this.isPrimaryTouch_(inTouch);\n  e.pointerType = POINTER_TYPE;\n\n  // make sure that the properties that are different for\n  // each `Touch` object are not copied from the BrowserEvent object\n  e.clientX = inTouch.clientX;\n  e.clientY = inTouch.clientY;\n  e.screenX = inTouch.screenX;\n  e.screenY = inTouch.screenY;\n\n  return e;\n};\n\n\n/**\n * @private\n * @param {Event} inEvent Touch event\n * @param {function(Event, Object)} inFunction In function.\n */\nTouchSource.prototype.processTouches_ = function(inEvent, inFunction) {\n  const touches = Array.prototype.slice.call(inEvent.changedTouches);\n  const count = touches.length;\n  function preventDefault() {\n    inEvent.preventDefault();\n  }\n  for (let i = 0; i < count; ++i) {\n    const pointer = this.touchToPointer_(inEvent, touches[i]);\n    // forward touch preventDefaults\n    pointer.preventDefault = preventDefault;\n    inFunction.call(this, inEvent, pointer);\n  }\n};\n\n\n/**\n * @private\n * @param {TouchList} touchList The touch list.\n * @param {number} searchId Search identifier.\n * @return {boolean} True, if the `Touch` with the given id is in the list.\n */\nTouchSource.prototype.findTouch_ = function(touchList, searchId) {\n  const l = touchList.length;\n  for (let i = 0; i < l; i++) {\n    const touch = touchList[i];\n    if (touch.identifier === searchId) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * In some instances, a touchstart can happen without a touchend. This\n * leaves the pointermap in a broken state.\n * Therefore, on every touchstart, we remove the touches that did not fire a\n * touchend event.\n * To keep state globally consistent, we fire a pointercancel for\n * this \"abandoned\" touch\n *\n * @private\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.vacuumTouches_ = function(inEvent) {\n  const touchList = inEvent.touches;\n  // pointerMap.getCount() should be < touchList.length here,\n  // as the touchstart has not been processed yet.\n  const keys = Object.keys(this.pointerMap);\n  const count = keys.length;\n  if (count >= touchList.length) {\n    const d = [];\n    for (let i = 0; i < count; ++i) {\n      const key = keys[i];\n      const value = this.pointerMap[key];\n      // Never remove pointerId == 1, which is mouse.\n      // Touch identifiers are 2 smaller than their pointerId, which is the\n      // index in pointermap.\n      if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n        d.push(value.out);\n      }\n    }\n    for (let i = 0; i < d.length; ++i) {\n      this.cancelOut_(inEvent, d[i]);\n    }\n  }\n};\n\n\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.touchstart = function(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent The event.\n * @param {Object} inPointer The in pointer object.\n */\nTouchSource.prototype.overDown_ = function(browserEvent, inPointer) {\n  this.pointerMap[inPointer.pointerId] = {\n    target: inPointer.target,\n    out: inPointer,\n    outTarget: inPointer.target\n  };\n  this.dispatcher.over(inPointer, browserEvent);\n  this.dispatcher.enter(inPointer, browserEvent);\n  this.dispatcher.down(inPointer, browserEvent);\n};\n\n\n/**\n * Handler for `touchmove`.\n *\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.touchmove = function(inEvent) {\n  inEvent.preventDefault();\n  this.processTouches_(inEvent, this.moveOverOut_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent The event.\n * @param {Object} inPointer The in pointer.\n */\nTouchSource.prototype.moveOverOut_ = function(browserEvent, inPointer) {\n  const event = inPointer;\n  const pointer = this.pointerMap[event.pointerId];\n  // a finger drifted off the screen, ignore it\n  if (!pointer) {\n    return;\n  }\n  const outEvent = pointer.out;\n  const outTarget = pointer.outTarget;\n  this.dispatcher.move(event, browserEvent);\n  if (outEvent && outTarget !== event.target) {\n    outEvent.relatedTarget = event.target;\n    event.relatedTarget = outTarget;\n    // recover from retargeting by shadow\n    outEvent.target = outTarget;\n    if (event.target) {\n      this.dispatcher.leaveOut(outEvent, browserEvent);\n      this.dispatcher.enterOver(event, browserEvent);\n    } else {\n      // clean up case when finger leaves the screen\n      event.target = outTarget;\n      event.relatedTarget = null;\n      this.cancelOut_(browserEvent, event);\n    }\n  }\n  pointer.out = event;\n  pointer.outTarget = event.target;\n};\n\n\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @param {Event} inEvent The event.\n */\nTouchSource.prototype.touchend = function(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent An event.\n * @param {Object} inPointer The inPointer object.\n */\nTouchSource.prototype.upOut_ = function(browserEvent, inPointer) {\n  this.dispatcher.up(inPointer, browserEvent);\n  this.dispatcher.out(inPointer, browserEvent);\n  this.dispatcher.leave(inPointer, browserEvent);\n  this.cleanUpPointer_(inPointer);\n};\n\n\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.touchcancel = function(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent The event.\n * @param {Object} inPointer The in pointer.\n */\nTouchSource.prototype.cancelOut_ = function(browserEvent, inPointer) {\n  this.dispatcher.cancel(inPointer, browserEvent);\n  this.dispatcher.out(inPointer, browserEvent);\n  this.dispatcher.leave(inPointer, browserEvent);\n  this.cleanUpPointer_(inPointer);\n};\n\n\n/**\n * @private\n * @param {Object} inPointer The inPointer object.\n */\nTouchSource.prototype.cleanUpPointer_ = function(inPointer) {\n  delete this.pointerMap[inPointer.pointerId];\n  this.removePrimaryPointer_(inPointer);\n};\n\n\n/**\n * Prevent synth mouse events from creating pointer events.\n *\n * @private\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.dedupSynthMouse_ = function(inEvent) {\n  const lts = this.mouseSource.lastTouches;\n  const t = inEvent.changedTouches[0];\n  // only the primary finger will synth mouse events\n  if (this.isPrimaryTouch_(t)) {\n    // remember x/y of last touch\n    const lt = [t.clientX, t.clientY];\n    lts.push(lt);\n\n    setTimeout(function() {\n      // remove touch after timeout\n      remove(lts, lt);\n    }, this.dedupTimeout_);\n  }\n};\nexport default TouchSource;\n","/**\n * @module ol/pointer/PointerEventHandler\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../util.js';\nimport {listen, unlisten} from '../events.js';\nimport EventTarget from '../events/EventTarget.js';\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport MsSource from '../pointer/MsSource.js';\nimport NativeSource from '../pointer/NativeSource.js';\nimport PointerEvent from '../pointer/PointerEvent.js';\nimport TouchSource from '../pointer/TouchSource.js';\n\n/**\n * @constructor\n * @extends {module:ol/events/EventTarget}\n * @param {Element|HTMLDocument} element Viewport element.\n */\nconst PointerEventHandler = function(element) {\n  EventTarget.call(this);\n\n  /**\n   * @const\n   * @private\n   * @type {Element|HTMLDocument}\n   */\n  this.element_ = element;\n\n  /**\n   * @const\n   * @type {!Object.<string, Event|Object>}\n   */\n  this.pointerMap = {};\n\n  /**\n   * @type {Object.<string, function(Event)>}\n   * @private\n   */\n  this.eventMap_ = {};\n\n  /**\n   * @type {Array.<module:ol/pointer/EventSource>}\n   * @private\n   */\n  this.eventSourceList_ = [];\n\n  this.registerSources();\n};\n\ninherits(PointerEventHandler, EventTarget);\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array.<Array>}\n */\nconst CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\n\n\n/**\n * Set up the event sources (mouse, touch and native pointers)\n * that generate pointer events.\n */\nPointerEventHandler.prototype.registerSources = function() {\n  if (POINTER) {\n    this.registerSource('native', new NativeSource(this));\n  } else if (MSPOINTER) {\n    this.registerSource('ms', new MsSource(this));\n  } else {\n    const mouseSource = new MouseSource(this);\n    this.registerSource('mouse', mouseSource);\n\n    if (TOUCH) {\n      this.registerSource('touch', new TouchSource(this, mouseSource));\n    }\n  }\n\n  // register events on the viewport element\n  this.register_();\n};\n\n\n/**\n * Add a new event source that will generate pointer events.\n *\n * @param {string} name A name for the event source\n * @param {module:ol/pointer/EventSource} source The source event.\n */\nPointerEventHandler.prototype.registerSource = function(name, source) {\n  const s = source;\n  const newEvents = s.getEvents();\n\n  if (newEvents) {\n    newEvents.forEach(function(e) {\n      const handler = s.getHandlerForEvent(e);\n\n      if (handler) {\n        this.eventMap_[e] = handler.bind(s);\n      }\n    }.bind(this));\n    this.eventSourceList_.push(s);\n  }\n};\n\n\n/**\n * Set up the events for all registered event sources.\n * @private\n */\nPointerEventHandler.prototype.register_ = function() {\n  const l = this.eventSourceList_.length;\n  for (let i = 0; i < l; i++) {\n    const eventSource = this.eventSourceList_[i];\n    this.addEvents_(eventSource.getEvents());\n  }\n};\n\n\n/**\n * Remove all registered events.\n * @private\n */\nPointerEventHandler.prototype.unregister_ = function() {\n  const l = this.eventSourceList_.length;\n  for (let i = 0; i < l; i++) {\n    const eventSource = this.eventSourceList_[i];\n    this.removeEvents_(eventSource.getEvents());\n  }\n};\n\n\n/**\n * Calls the right handler for a new event.\n * @private\n * @param {Event} inEvent Browser event.\n */\nPointerEventHandler.prototype.eventHandler_ = function(inEvent) {\n  const type = inEvent.type;\n  const handler = this.eventMap_[type];\n  if (handler) {\n    handler(inEvent);\n  }\n};\n\n\n/**\n * Setup listeners for the given events.\n * @private\n * @param {Array.<string>} events List of events.\n */\nPointerEventHandler.prototype.addEvents_ = function(events) {\n  events.forEach(function(eventName) {\n    listen(this.element_, eventName, this.eventHandler_, this);\n  }.bind(this));\n};\n\n\n/**\n * Unregister listeners for the given events.\n * @private\n * @param {Array.<string>} events List of events.\n */\nPointerEventHandler.prototype.removeEvents_ = function(events) {\n  events.forEach(function(e) {\n    unlisten(this.element_, e, this.eventHandler_, this);\n  }.bind(this));\n};\n\n\n/**\n * Returns a snapshot of inEvent, with writable properties.\n *\n * @param {Event} event Browser event.\n * @param {Event|Touch} inEvent An event that contains\n *    properties to copy.\n * @return {Object} An object containing shallow copies of\n *    `inEvent`'s properties.\n */\nPointerEventHandler.prototype.cloneEvent = function(event, inEvent) {\n  const eventCopy = {};\n  for (let i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n    const p = CLONE_PROPS[i][0];\n    eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n  }\n\n  return eventCopy;\n};\n\n\n// EVENTS\n\n\n/**\n * Triggers a 'pointerdown' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.down = function(data, event) {\n  this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n};\n\n\n/**\n * Triggers a 'pointermove' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.move = function(data, event) {\n  this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n};\n\n\n/**\n * Triggers a 'pointerup' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.up = function(data, event) {\n  this.fireEvent(PointerEventType.POINTERUP, data, event);\n};\n\n\n/**\n * Triggers a 'pointerenter' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.enter = function(data, event) {\n  data.bubbles = false;\n  this.fireEvent(PointerEventType.POINTERENTER, data, event);\n};\n\n\n/**\n * Triggers a 'pointerleave' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.leave = function(data, event) {\n  data.bubbles = false;\n  this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n};\n\n\n/**\n * Triggers a 'pointerover' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.over = function(data, event) {\n  data.bubbles = true;\n  this.fireEvent(PointerEventType.POINTEROVER, data, event);\n};\n\n\n/**\n * Triggers a 'pointerout' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.out = function(data, event) {\n  data.bubbles = true;\n  this.fireEvent(PointerEventType.POINTEROUT, data, event);\n};\n\n\n/**\n * Triggers a 'pointercancel' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.cancel = function(data, event) {\n  this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n};\n\n\n/**\n * Triggers a combination of 'pointerout' and 'pointerleave' events.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.leaveOut = function(data, event) {\n  this.out(data, event);\n  if (!this.contains_(data.target, data.relatedTarget)) {\n    this.leave(data, event);\n  }\n};\n\n\n/**\n * Triggers a combination of 'pointerover' and 'pointerevents' events.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.enterOver = function(data, event) {\n  this.over(data, event);\n  if (!this.contains_(data.target, data.relatedTarget)) {\n    this.enter(data, event);\n  }\n};\n\n\n/**\n * @private\n * @param {Element} container The container element.\n * @param {Element} contained The contained element.\n * @return {boolean} Returns true if the container element\n *   contains the other element.\n */\nPointerEventHandler.prototype.contains_ = function(container, contained) {\n  if (!container || !contained) {\n    return false;\n  }\n  return container.contains(contained);\n};\n\n\n// EVENT CREATION AND TRACKING\n/**\n * Creates a new Event of type `inType`, based on the information in\n * `data`.\n *\n * @param {string} inType A string representing the type of event to create.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n * @return {module:ol/pointer/PointerEvent} A PointerEvent of type `inType`.\n */\nPointerEventHandler.prototype.makeEvent = function(inType, data, event) {\n  return new PointerEvent(inType, event, data);\n};\n\n\n/**\n * Make and dispatch an event in one call.\n * @param {string} inType A string representing the type of event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.fireEvent = function(inType, data, event) {\n  const e = this.makeEvent(inType, data, event);\n  this.dispatchEvent(e);\n};\n\n\n/**\n * Creates a pointer event from a native pointer event\n * and dispatches this event.\n * @param {Event} event A platform event with a target.\n */\nPointerEventHandler.prototype.fireNativeEvent = function(event) {\n  const e = this.makeEvent(event.type, event, event);\n  this.dispatchEvent(e);\n};\n\n\n/**\n * Wrap a native mouse event into a pointer event.\n * This proxy method is required for the legacy IE support.\n * @param {string} eventType The pointer event type.\n * @param {Event} event The event.\n * @return {module:ol/pointer/PointerEvent} The wrapped event.\n */\nPointerEventHandler.prototype.wrapMouseEvent = function(eventType, event) {\n  const pointerEvent = this.makeEvent(\n    eventType, MouseSource.prepareEvent(event, this), event);\n  return pointerEvent;\n};\n\n\n/**\n * @inheritDoc\n */\nPointerEventHandler.prototype.disposeInternal = function() {\n  this.unregister_();\n  EventTarget.prototype.disposeInternal.call(this);\n};\n\n\nexport default PointerEventHandler;\n","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../util.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase, {GMLNS} from '../format/GMLBase.js';\nimport {writeStringTextNode} from '../format/xsd.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport {createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender,\n  makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, pushParseAndPop, pushSerializeAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {string}\n */\nconst schemaLocation = GMLNS + ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {module:ol/format/GMLBase~Options=} opt_options Optional configuration object.\n * @extends {module:ol/format/GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {module:ol/format/GMLBase~Options} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLNS][\n    'featureMember'] =\n      makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : schemaLocation;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {module:ol/xml~NodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    const x = parseFloat(coords[0]);\n    const y = parseFloat(coords[1]);\n    const z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {module:ol/extent~Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {module:ol/geom/Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n    (item), context.serializers,\n    makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    this.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Geometry|module:ol/extent~Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {module:ol/geom/Geometry} */ (geometry), true, context);\n  }\n  pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n    (item), this.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LineString|module:ol/geom/LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    const point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      this.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    this.POINTMEMBER_SERIALIZERS_,\n    makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    this.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n    ({node: node}), this.ENVELOPE_SERIALIZERS_,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS('http://www.opengis.net/gml',\n    MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode)\n  }\n};\n\nexport default GML2;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n * @constructor\n */\nconst IconImageCache = function() {\n\n  /**\n   * @type {!Object.<string, module:ol/style/IconImage>}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.cacheSize_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxCacheSize_ = 32;\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/color~Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\n/**\n * FIXME empty description for jsdoc\n */\nIconImageCache.prototype.clear = function() {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nIconImageCache.prototype.expire = function() {\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    let i = 0;\n    for (const key in this.cache_) {\n      const iconImage = this.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this.cache_[key];\n        --this.cacheSize_;\n      }\n    }\n  }\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/color~Color} color Color.\n * @return {module:ol/style/IconImage} Icon image.\n */\nIconImageCache.prototype.get = function(src, crossOrigin, color) {\n  const key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/color~Color} color Color.\n * @param {module:ol/style/IconImage} iconImage Icon image.\n */\nIconImageCache.prototype.set = function(src, crossOrigin, color, iconImage) {\n  const key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n\n/**\n * Set the cache size of the icon cache. Default is `32`. Change this value when\n * your map uses more than 32 different icon images and you are not caching icon\n * styles on the application level.\n * @param {number} maxCacheSize Cache max size.\n * @api\n */\nIconImageCache.prototype.setSize = function(maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {inherits} from '../../util.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array.<module:ol/renderer/Layer>}\n */\nexport const layerRendererConstructors = [];\n\n\n/**\n * @constructor\n * @extends {module:ol/renderer/Map}\n * @param {module:ol/PluggableMap} map Map.\n * @api\n */\nconst CanvasMapRenderer = function(map) {\n  MapRenderer.call(this, map);\n\n  const container = map.getViewport();\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = createCanvasContext2D();\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = this.context_.canvas;\n\n  this.canvas_.style.width = '100%';\n  this.canvas_.style.height = '100%';\n  this.canvas_.style.display = 'block';\n  this.canvas_.className = CLASS_UNSELECTABLE;\n  container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderedVisible_ = true;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.transform_ = createTransform();\n\n};\n\ninherits(CanvasMapRenderer, MapRenderer);\n\n\n/**\n * @param {module:ol/render/EventType} type Event type.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @private\n */\nCanvasMapRenderer.prototype.dispatchComposeEvent_ = function(type, frameState) {\n  const map = this.getMap();\n  const context = this.context_;\n  if (map.hasListener(type)) {\n    const extent = frameState.extent;\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n\n    const transform = this.getTransform(frameState);\n\n    const vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n      extent, transform, rotation);\n    const composeEvent = new RenderEvent(type, vectorContext,\n      frameState, context, null);\n    map.dispatchEvent(composeEvent);\n  }\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @protected\n * @return {!module:ol/transform~Transform} Transform.\n */\nCanvasMapRenderer.prototype.getTransform = function(frameState) {\n  const viewState = frameState.viewState;\n  const dx1 = this.canvas_.width / 2;\n  const dy1 = this.canvas_.height / 2;\n  const sx = frameState.pixelRatio / viewState.resolution;\n  const sy = -sx;\n  const angle = -viewState.rotation;\n  const dx2 = -viewState.center[0];\n  const dy2 = -viewState.center[1];\n  return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasMapRenderer.prototype.renderFrame = function(frameState) {\n\n  if (!frameState) {\n    if (this.renderedVisible_) {\n      this.canvas_.style.display = 'none';\n      this.renderedVisible_ = false;\n    }\n    return;\n  }\n\n  const context = this.context_;\n  const pixelRatio = frameState.pixelRatio;\n  const width = Math.round(frameState.size[0] * pixelRatio);\n  const height = Math.round(frameState.size[1] * pixelRatio);\n  if (this.canvas_.width != width || this.canvas_.height != height) {\n    this.canvas_.width = width;\n    this.canvas_.height = height;\n  } else {\n    context.clearRect(0, 0, width, height);\n  }\n\n  const rotation = frameState.viewState.rotation;\n\n  this.calculateMatrices2D(frameState);\n\n  this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, frameState);\n\n  const layerStatesArray = frameState.layerStatesArray;\n  stableSort(layerStatesArray, sortByZIndex);\n\n  if (rotation) {\n    context.save();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  }\n\n  const viewResolution = frameState.viewState.resolution;\n  let i, ii, layer, layerRenderer, layerState;\n  for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n    layerState = layerStatesArray[i];\n    layer = layerState.layer;\n    layerRenderer = /** @type {module:ol/renderer/canvas/Layer} */ (this.getLayerRenderer(layer));\n    if (!visibleAtResolution(layerState, viewResolution) ||\n        layerState.sourceState != SourceState.READY) {\n      continue;\n    }\n    if (layerRenderer.prepareFrame(frameState, layerState)) {\n      layerRenderer.composeFrame(frameState, layerState, context);\n    }\n  }\n\n  if (rotation) {\n    context.restore();\n  }\n\n  this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, frameState);\n\n  if (!this.renderedVisible_) {\n    this.canvas_.style.display = '';\n    this.renderedVisible_ = true;\n  }\n\n  this.scheduleRemoveUnusedLayerRenderers(frameState);\n  this.scheduleExpireIconCache(frameState);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasMapRenderer.prototype.forEachLayerAtPixel = function(pixel, frameState, hitTolerance, callback, thisArg,\n  layerFilter, thisArg2) {\n  let result;\n  const viewState = frameState.viewState;\n  const viewResolution = viewState.resolution;\n\n  const layerStates = frameState.layerStatesArray;\n  const numLayers = layerStates.length;\n\n  const coordinate = applyTransform(\n    frameState.pixelToCoordinateTransform, pixel.slice());\n\n  let i;\n  for (i = numLayers - 1; i >= 0; --i) {\n    const layerState = layerStates[i];\n    const layer = layerState.layer;\n    if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n      const layerRenderer = /** @type {module:ol/renderer/canvas/Layer} */ (this.getLayerRenderer(layer));\n      result = layerRenderer.forEachLayerAtCoordinate(\n        coordinate, frameState, hitTolerance, callback, thisArg);\n      if (result) {\n        return result;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasMapRenderer.prototype.registerLayerRenderers = function(constructors) {\n  MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n  for (let i = 0, ii = constructors.length; i < ii; ++i) {\n    const ctor = constructors[i];\n    if (!includes(layerRendererConstructors, ctor)) {\n      layerRendererConstructors.push(ctor);\n    }\n  }\n};\n\nexport default CanvasMapRenderer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport {inherits} from '../../util.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from '../canvas/IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @constructor\n * @extends {module:ol/renderer/canvas/IntermediateCanvas}\n * @param {module:ol/layer/Image|module:ol/layer/Vector} imageLayer Image or vector layer.\n * @api\n */\nconst CanvasImageLayerRenderer = function(imageLayer) {\n\n  IntermediateCanvasRenderer.call(this, imageLayer);\n\n  /**\n   * @private\n   * @type {?module:ol/ImageBase}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.imageTransform_ = createTransform();\n\n  /**\n   * @type {!Array.<string>}\n   */\n  this.skippedFeatures_ = [];\n\n  /**\n   * @private\n   * @type {module:ol/renderer/canvas/VectorLayer}\n   */\n  this.vectorRenderer_ = null;\n\n  if (imageLayer.getType() === LayerType.VECTOR) {\n    for (let i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n      const ctor = layerRendererConstructors[i];\n      if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n        this.vectorRenderer_ = new ctor(imageLayer);\n        break;\n      }\n    }\n  }\n\n};\n\ninherits(CanvasImageLayerRenderer, IntermediateCanvasRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {module:ol/layer/Vector} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/ImageLayer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {module:ol/layer/Image} */ (layer));\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.disposeInternal = function() {\n  if (this.vectorRenderer_) {\n    this.vectorRenderer_.dispose();\n  }\n  IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.getImage = function() {\n  return !this.image_ ? null : this.image_.getImage();\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.getImageTransform = function() {\n  return this.imageTransform_;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {\n\n  const pixelRatio = frameState.pixelRatio;\n  const size = frameState.size;\n  const viewState = frameState.viewState;\n  const viewCenter = viewState.center;\n  const viewResolution = viewState.resolution;\n\n  let image;\n  const imageLayer = /** @type {module:ol/layer/Image} */ (this.getLayer());\n  const imageSource = imageLayer.getSource();\n\n  const hints = frameState.viewHints;\n\n  const vectorRenderer = this.vectorRenderer_;\n  let renderedExtent = frameState.extent;\n  if (!vectorRenderer && layerState.extent !== undefined) {\n    renderedExtent = getIntersection(renderedExtent, layerState.extent);\n  }\n\n  if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)) {\n    let projection = viewState.projection;\n    if (!ENABLE_RASTER_REPROJECTION) {\n      const sourceProjection = imageSource.getProjection();\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n    }\n    let skippedFeatures = this.skippedFeatures_;\n    if (vectorRenderer) {\n      const context = vectorRenderer.context;\n      const imageFrameState = /** @type {module:ol/PluggableMap~FrameState} */ (assign({}, frameState, {\n        size: [\n          getWidth(renderedExtent) / viewResolution,\n          getHeight(renderedExtent) / viewResolution\n        ],\n        viewState: /** @type {module:ol/View~State} */ (assign({}, frameState.viewState, {\n          rotation: 0\n        }))\n      }));\n      const newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n      image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n        if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n            (vectorRenderer.replayGroupChanged ||\n            !equals(skippedFeatures, newSkippedFeatures))) {\n          context.canvas.width = imageFrameState.size[0] * pixelRatio;\n          context.canvas.height = imageFrameState.size[1] * pixelRatio;\n          vectorRenderer.compose(context, imageFrameState, layerState);\n          skippedFeatures = newSkippedFeatures;\n          callback();\n        }\n      });\n    } else {\n      image = imageSource.getImage(\n        renderedExtent, viewResolution, pixelRatio, projection);\n    }\n    if (image && this.loadImage(image)) {\n      this.image_ = image;\n      this.skippedFeatures_ = skippedFeatures;\n    }\n  }\n\n  if (this.image_) {\n    image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const imagePixelRatio = image.getPixelRatio();\n    const scale = pixelRatio * imageResolution /\n        (viewResolution * imagePixelRatio);\n    const transform = composeTransform(this.imageTransform_,\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n      scale, scale,\n      0,\n      imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n      imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n    composeTransform(this.coordinateToCanvasPixelTransform,\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\n      0,\n      -viewCenter[0], -viewCenter[1]);\n\n    this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n  }\n\n  return !!this.image_;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  if (this.vectorRenderer_) {\n    return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg);\n  } else {\n    return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback, thisArg);\n  }\n};\n\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../util.js';\nimport {CollectionEvent} from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, closestOnCircle, closestOnSegment, squaredDistanceToSegment} from '../coordinate.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport {VectorSourceEvent} from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped\n * @property {module:ol/coordinate~Coordinate|null} vertex\n * @property {module:ol~Pixel|null} vertexPixel\n */\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {module:ol/Feature} feature\n * @property {Array.<module:ol/coordinate~Coordinate>} segment\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/Collection.<module:ol/Feature>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {module:ol/source/Vector} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     var snap = new Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/Snap~Options=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: handleEvent,\n    handleDownEvent: TRUE,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {module:ol/source/Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<module:ol/events~EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, module:ol/events~EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, module:ol/extent~Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {!Object.<number, module:ol/Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {module:ol/coordinate~Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(module:ol/interaction/Snap~SegmentData, module:ol/interaction/Snap~SegmentData): number}\n   * @private\n   */\n  this.sortByDistance_ = sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {module:ol/structs/RBush.<module:ol/interaction/Snap~SegmentData>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(module:ol/Feature, module:ol/geom/Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {module:ol/Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const register = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (register) {\n    this.featureChangeListenerKeys_[feature_uid] = listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {module:ol/Collection.<module:ol/Feature>|Array.<module:ol/Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return (\n    /** @type {!Array.<module:ol/Feature>|!module:ol/Collection.<module:ol/Feature>} */ (features)\n  );\n};\n\n\n/**\n * @param {module:ol/source/Vector|module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSourceEvent) {\n    feature = evt.feature;\n  } else if (evt instanceof CollectionEvent) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {module:ol/Feature} */ (feature));\n};\n\n\n/**\n * @param {module:ol/source/Vector|module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSourceEvent) {\n    feature = evt.feature;\n  } else if (evt instanceof CollectionEvent) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {module:ol/Feature} */ (feature));\n};\n\n\n/**\n * @param {module:ol/events/Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {module:ol/Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {module:ol/Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unregister) {\n    unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {module:ol~Pixel} pixel Pixel\n * @param {module:ol/coordinate~Coordinate} pixelCoordinate Coordinate\n * @param {module:ol/PluggableMap} map Map.\n * @return {module:ol/interaction/Snap~Result} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n      squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = closestOnCircle(pixelCoordinate,\n          /** @type {module:ol/geom/Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = closestOnSegment(pixelCoordinate, closestSegment);\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return (\n    /** @type {module:ol/interaction/Snap~Result} */ ({\n      snapped: snapped,\n      vertex: vertex,\n      vertexPixel: vertexPixel\n    })\n  );\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {module:ol/MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {module:ol/interaction/Snap}\n */\nexport function handleEvent(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return handlePointerEvent.call(this, evt);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Snap}\n */\nfunction handleUpEvent(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n}\n\n\n/**\n * Sort segments by distance, helper function\n * @param {module:ol/interaction/Snap~SegmentData} a The first segment data.\n * @param {module:ol/interaction/Snap~SegmentData} b The second segment data.\n * @return {number} The difference in distance.\n * @this {module:ol/interaction/Snap}\n */\nfunction sortByDistance(a, b) {\n  const deltaA = squaredDistanceToSegment(this.pixelCoordinate_, a.segment);\n  const deltaB = squaredDistanceToSegment(this.pixelCoordinate_, b.segment);\n  return deltaA - deltaB;\n}\n\nexport default Snap;\n","/**\n * @module ol/geom/Circle\n */\nimport {inherits} from '../util.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinate} from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number=} opt_radius Radius.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Circle = function(center, opt_radius, opt_layout) {\n  SimpleGeometry.call(this);\n  const radius = opt_radius ? opt_radius : 0;\n  this.setCenterAndRadius(center, radius, opt_layout);\n};\n\ninherits(Circle, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/Circle} Clone.\n * @override\n * @api\n */\nCircle.prototype.clone = function() {\n  const circle = new Circle(null);\n  circle.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return circle;\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  const squaredDistance = dx * dx + dy * dy;\n  if (squaredDistance < minSquaredDistance) {\n    if (squaredDistance === 0) {\n      for (let i = 0; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    } else {\n      const delta = this.getRadius() / Math.sqrt(squaredDistance);\n      closestPoint[0] = flatCoordinates[0] + delta * dx;\n      closestPoint[1] = flatCoordinates[1] + delta * dy;\n      for (let i = 2; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    }\n    closestPoint.length = this.stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.containsXY = function(x, y) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  return dx * dx + dy * dy <= this.getRadiusSquared_();\n};\n\n\n/**\n * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n * @return {module:ol/coordinate~Coordinate} Center.\n * @api\n */\nCircle.prototype.getCenter = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.computeExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n  return createOrUpdate(\n    flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n    flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n    extent);\n};\n\n\n/**\n * Return the radius of the circle.\n * @return {number} Radius.\n * @api\n */\nCircle.prototype.getRadius = function() {\n  return Math.sqrt(this.getRadiusSquared_());\n};\n\n\n/**\n * @private\n * @return {number} Radius squared.\n */\nCircle.prototype.getRadiusSquared_ = function() {\n  const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n  const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.getType = function() {\n  return GeometryType.CIRCLE;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.intersectsExtent = function(extent) {\n  const circleExtent = this.getExtent();\n  if (intersects(extent, circleExtent)) {\n    const center = this.getCenter();\n\n    if (extent[0] <= center[0] && extent[2] >= center[0]) {\n      return true;\n    }\n    if (extent[1] <= center[1] && extent[3] >= center[1]) {\n      return true;\n    }\n\n    return forEachCorner(extent, this.intersectsCoordinate, this);\n  }\n  return false;\n\n};\n\n\n/**\n * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @api\n */\nCircle.prototype.setCenter = function(center) {\n  const stride = this.stride;\n  const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n  const flatCoordinates = center.slice();\n  flatCoordinates[stride] = flatCoordinates[0] + radius;\n  for (let i = 1; i < stride; ++i) {\n    flatCoordinates[stride + i] = center[i];\n  }\n  this.setFlatCoordinates(this.layout, flatCoordinates);\n};\n\n\n/**\n * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n * number) of the circle.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} radius Radius.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nCircle.prototype.setCenterAndRadius = function(center, radius, opt_layout) {\n  if (!center) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.getCoordinates = function() {};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nCircle.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\n\n\n/**\n * Set the radius of the circle. The radius is in the units of the projection.\n * @param {number} radius Radius.\n * @api\n */\nCircle.prototype.setRadius = function(radius) {\n  this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n  this.changed();\n};\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {module:ol/proj~ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {module:ol/proj~ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {module:ol/geom/Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport {inherits} from '../util.js';\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {shiftKeyOnly, mouseOnly} from '../events/condition.js';\nimport {rotate, rotateWithoutConstraints, zoom, zoomWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/DragRotateAndZoom~Options=} opt_options Options.\n * @api\n */\nconst DragRotateAndZoom = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastAngle_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastMagnitude_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.lastScaleDelta_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n};\n\ninherits(DragRotateAndZoom, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  const map = mapBrowserEvent.map;\n  const size = map.getSize();\n  const offset = mapBrowserEvent.pixel;\n  const deltaX = offset[0] - size[0] / 2;\n  const deltaY = size[1] / 2 - offset[1];\n  const theta = Math.atan2(deltaY, deltaX);\n  const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n  const view = map.getView();\n  if (view.getConstraints().rotation !== disable && this.lastAngle_ !== undefined) {\n    const angleDelta = theta - this.lastAngle_;\n    rotateWithoutConstraints(view, view.getRotation() - angleDelta);\n  }\n  this.lastAngle_ = theta;\n  if (this.lastMagnitude_ !== undefined) {\n    const resolution = this.lastMagnitude_ * (view.getResolution() / magnitude);\n    zoomWithoutConstraints(view, resolution);\n  }\n  if (this.lastMagnitude_ !== undefined) {\n    this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n  }\n  this.lastMagnitude_ = magnitude;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n  const direction = this.lastScaleDelta_ - 1;\n  rotate(view, view.getRotation());\n  zoom(view, view.getResolution(), undefined, this.duration_, direction);\n  this.lastScaleDelta_ = 0;\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (this.condition_(mapBrowserEvent)) {\n    mapBrowserEvent.map.getView().setHint(ViewHint.INTERACTING, 1);\n    this.lastAngle_ = undefined;\n    this.lastMagnitude_ = undefined;\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default DragRotateAndZoom;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport {inherits} from './util.js';\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n *\n * @constructor\n * @extends {module:ol/MapEvent}\n * @param {string} type Event type.\n * @param {module:ol/PluggableMap} map Map.\n * @param {Event} browserEvent Browser event.\n * @param {boolean=} opt_dragging Is the map currently being dragged?\n * @param {?module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n */\nconst MapBrowserEvent = function(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n  MapEvent.call(this, type, map, opt_frameState);\n\n  /**\n   * The original browser event.\n   * @const\n   * @type {Event}\n   * @api\n   */\n  this.originalEvent = browserEvent;\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original browser event.\n   * @type {module:ol~Pixel}\n   * @api\n   */\n  this.pixel = map.getEventPixel(browserEvent);\n\n  /**\n   * The coordinate in view projection corresponding to the original browser event.\n   * @type {module:ol/coordinate~Coordinate}\n   * @api\n   */\n  this.coordinate = map.getCoordinateFromPixel(this.pixel);\n\n  /**\n   * Indicates if the map is currently being dragged. Only set for\n   * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n   *\n   * @type {boolean}\n   * @api\n   */\n  this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n};\n\ninherits(MapBrowserEvent, MapEvent);\n\n\n/**\n * Prevents the default browser action.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault\n * @override\n * @api\n */\nMapBrowserEvent.prototype.preventDefault = function() {\n  MapEvent.prototype.preventDefault.call(this);\n  this.originalEvent.preventDefault();\n};\n\n\n/**\n * Prevents further propagation of the current event.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation\n * @override\n * @api\n */\nMapBrowserEvent.prototype.stopPropagation = function() {\n  MapEvent.prototype.stopPropagation.call(this);\n  this.originalEvent.stopPropagation();\n};\nexport default MapBrowserEvent;\n","/**\n * @module ol/layer/Group\n */\nimport {getUid, inherits} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from '../layer/Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {(Array.<module:ol/layer/Base>|module:ol/Collection.<module:ol/layer/Base>)} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @constructor\n * @extends {module:ol/layer/Base}\n * @param {module:ol/layer/Group~Options=} opt_options Layer options.\n * @api\n */\nconst LayerGroup = function(opt_options) {\n\n  const options = opt_options || {};\n  const baseOptions = /** @type {module:ol/layer/Group~Options} */ (assign({}, options));\n  delete baseOptions.layers;\n\n  let layers = options.layers;\n\n  BaseLayer.call(this, baseOptions);\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.layersListenerKeys_ = [];\n\n  /**\n   * @private\n   * @type {Object.<string, Array.<module:ol/events~EventsKey>>}\n   */\n  this.listenerKeys_ = {};\n\n  listen(this,\n    getChangeEventType(Property.LAYERS),\n    this.handleLayersChanged_, this);\n\n  if (layers) {\n    if (Array.isArray(layers)) {\n      layers = new Collection(layers.slice(), {unique: true});\n    } else {\n      assert(layers instanceof Collection,\n        43); // Expected `layers` to be an array or a `Collection`\n      layers = layers;\n    }\n  } else {\n    layers = new Collection(undefined, {unique: true});\n  }\n\n  this.setLayers(layers);\n\n};\n\ninherits(LayerGroup, BaseLayer);\n\n\n/**\n * @private\n */\nLayerGroup.prototype.handleLayerChange_ = function() {\n  this.changed();\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n * @private\n */\nLayerGroup.prototype.handleLayersChanged_ = function(event) {\n  this.layersListenerKeys_.forEach(unlistenByKey);\n  this.layersListenerKeys_.length = 0;\n\n  const layers = this.getLayers();\n  this.layersListenerKeys_.push(\n    listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n    listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n  );\n\n  for (const id in this.listenerKeys_) {\n    this.listenerKeys_[id].forEach(unlistenByKey);\n  }\n  clear(this.listenerKeys_);\n\n  const layersArray = layers.getArray();\n  for (let i = 0, ii = layersArray.length; i < ii; i++) {\n    const layer = layersArray[i];\n    this.listenerKeys_[getUid(layer).toString()] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n  }\n\n  this.changed();\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} collectionEvent CollectionEvent.\n * @private\n */\nLayerGroup.prototype.handleLayersAdd_ = function(collectionEvent) {\n  const layer = /** @type {module:ol/layer/Base} */ (collectionEvent.element);\n  const key = getUid(layer).toString();\n  this.listenerKeys_[key] = [\n    listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n    listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n  ];\n  this.changed();\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} collectionEvent CollectionEvent.\n * @private\n */\nLayerGroup.prototype.handleLayersRemove_ = function(collectionEvent) {\n  const layer = /** @type {module:ol/layer/Base} */ (collectionEvent.element);\n  const key = getUid(layer).toString();\n  this.listenerKeys_[key].forEach(unlistenByKey);\n  delete this.listenerKeys_[key];\n  this.changed();\n};\n\n\n/**\n * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n * in this group.\n * @return {!module:ol/Collection.<module:ol/layer/Base>} Collection of\n *   {@link module:ol/layer/Base layers} that are part of this group.\n * @observable\n * @api\n */\nLayerGroup.prototype.getLayers = function() {\n  return (\n    /** @type {!module:ol/Collection.<module:ol/layer/Base>} */ (this.get(Property.LAYERS))\n  );\n};\n\n\n/**\n * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n * in this group.\n * @param {!module:ol/Collection.<module:ol/layer/Base>} layers Collection of\n *   {@link module:ol/layer/Base layers} that are part of this group.\n * @observable\n * @api\n */\nLayerGroup.prototype.setLayers = function(layers) {\n  this.set(Property.LAYERS, layers);\n};\n\n\n/**\n * @inheritDoc\n */\nLayerGroup.prototype.getLayersArray = function(opt_array) {\n  const array = opt_array !== undefined ? opt_array : [];\n  this.getLayers().forEach(function(layer) {\n    layer.getLayersArray(array);\n  });\n  return array;\n};\n\n\n/**\n * @inheritDoc\n */\nLayerGroup.prototype.getLayerStatesArray = function(opt_states) {\n  const states = opt_states !== undefined ? opt_states : [];\n\n  const pos = states.length;\n\n  this.getLayers().forEach(function(layer) {\n    layer.getLayerStatesArray(states);\n  });\n\n  const ownLayerState = this.getLayerState();\n  for (let i = pos, ii = states.length; i < ii; i++) {\n    const layerState = states[i];\n    layerState.opacity *= ownLayerState.opacity;\n    layerState.visible = layerState.visible && ownLayerState.visible;\n    layerState.maxResolution = Math.min(\n      layerState.maxResolution, ownLayerState.maxResolution);\n    layerState.minResolution = Math.max(\n      layerState.minResolution, ownLayerState.minResolution);\n    if (ownLayerState.extent !== undefined) {\n      if (layerState.extent !== undefined) {\n        layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n      } else {\n        layerState.extent = ownLayerState.extent;\n      }\n    }\n  }\n\n  return states;\n};\n\n\n/**\n * @inheritDoc\n */\nLayerGroup.prototype.getSourceState = function() {\n  return SourceState.READY;\n};\n\nexport default LayerGroup;\n","/**\n * @module ol/control/ScaleLine\n */\nimport {inherits} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport {assert} from '../asserts.js';\nimport Control from '../control/Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {listen} from '../events.js';\nimport {getPointResolution, METERS_PER_UNIT} from '../proj.js';\nimport ProjUnits from '../proj/Units.js';\n\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport const Units = {\n  DEGREES: 'degrees',\n  IMPERIAL: 'imperial',\n  NAUTICAL: 'nautical',\n  METRIC: 'metric',\n  US: 'us'\n};\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {Element|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {module:ol/control/ScaleLine~Units|string} [units='metric'] Units.\n */\n\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/ScaleLine~Options=} opt_options Scale line options.\n * @api\n */\nconst ScaleLine = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const className = options.className !== undefined ? options.className : 'ol-scale-line';\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.innerElement_ = document.createElement('DIV');\n  this.innerElement_.className = className + '-inner';\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.element_ = document.createElement('DIV');\n  this.element_.className = className + ' ' + CLASS_UNSELECTABLE;\n  this.element_.appendChild(this.innerElement_);\n\n  /**\n   * @private\n   * @type {?module:ol/View~State}\n   */\n  this.viewState_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderedVisible_ = false;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.renderedWidth_ = undefined;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.renderedHTML_ = '';\n\n  Control.call(this, {\n    element: this.element_,\n    render: options.render || render,\n    target: options.target\n  });\n\n  listen(\n    this, getChangeEventType(UNITS_PROP),\n    this.handleUnitsChanged_, this);\n\n  this.setUnits(/** @type {module:ol/control/ScaleLine~Units} */ (options.units) ||\n      Units.METRIC);\n\n};\n\ninherits(ScaleLine, Control);\n\n\n/**\n * Return the units to use in the scale line.\n * @return {module:ol/control/ScaleLine~Units|undefined} The units\n * to use in the scale line.\n * @observable\n * @api\n */\nScaleLine.prototype.getUnits = function() {\n  return (\n    /** @type {module:ol/control/ScaleLine~Units|undefined} */ (this.get(UNITS_PROP))\n  );\n};\n\n\n/**\n * Update the scale line element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/ScaleLine}\n * @api\n */\nexport function render(mapEvent) {\n  const frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.viewState_ = null;\n  } else {\n    this.viewState_ = frameState.viewState;\n  }\n  this.updateElement_();\n}\n\n\n/**\n * @private\n */\nScaleLine.prototype.handleUnitsChanged_ = function() {\n  this.updateElement_();\n};\n\n\n/**\n * Set the units to use in the scale line.\n * @param {module:ol/control/ScaleLine~Units} units The units to use in the scale line.\n * @observable\n * @api\n */\nScaleLine.prototype.setUnits = function(units) {\n  this.set(UNITS_PROP, units);\n};\n\n\n/**\n * @private\n */\nScaleLine.prototype.updateElement_ = function() {\n  const viewState = this.viewState_;\n\n  if (!viewState) {\n    if (this.renderedVisible_) {\n      this.element_.style.display = 'none';\n      this.renderedVisible_ = false;\n    }\n    return;\n  }\n\n  const center = viewState.center;\n  const projection = viewState.projection;\n  const units = this.getUnits();\n  const pointResolutionUnits = units == Units.DEGREES ?\n    ProjUnits.DEGREES :\n    ProjUnits.METERS;\n  let pointResolution =\n      getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n  if (projection.getUnits() != ProjUnits.DEGREES && projection.getMetersPerUnit()\n    && pointResolutionUnits == ProjUnits.METERS) {\n    pointResolution *= projection.getMetersPerUnit();\n  }\n\n  let nominalCount = this.minWidth_ * pointResolution;\n  let suffix = '';\n  if (units == Units.DEGREES) {\n    const metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n    if (projection.getUnits() == ProjUnits.DEGREES) {\n      nominalCount *= metersPerDegree;\n    } else {\n      pointResolution /= metersPerDegree;\n    }\n    if (nominalCount < metersPerDegree / 60) {\n      suffix = '\\u2033'; // seconds\n      pointResolution *= 3600;\n    } else if (nominalCount < metersPerDegree) {\n      suffix = '\\u2032'; // minutes\n      pointResolution *= 60;\n    } else {\n      suffix = '\\u00b0'; // degrees\n    }\n  } else if (units == Units.IMPERIAL) {\n    if (nominalCount < 0.9144) {\n      suffix = 'in';\n      pointResolution /= 0.0254;\n    } else if (nominalCount < 1609.344) {\n      suffix = 'ft';\n      pointResolution /= 0.3048;\n    } else {\n      suffix = 'mi';\n      pointResolution /= 1609.344;\n    }\n  } else if (units == Units.NAUTICAL) {\n    pointResolution /= 1852;\n    suffix = 'nm';\n  } else if (units == Units.METRIC) {\n    if (nominalCount < 0.001) {\n      suffix = 'μm';\n      pointResolution *= 1000000;\n    } else if (nominalCount < 1) {\n      suffix = 'mm';\n      pointResolution *= 1000;\n    } else if (nominalCount < 1000) {\n      suffix = 'm';\n    } else {\n      suffix = 'km';\n      pointResolution /= 1000;\n    }\n  } else if (units == Units.US) {\n    if (nominalCount < 0.9144) {\n      suffix = 'in';\n      pointResolution *= 39.37;\n    } else if (nominalCount < 1609.344) {\n      suffix = 'ft';\n      pointResolution /= 0.30480061;\n    } else {\n      suffix = 'mi';\n      pointResolution /= 1609.3472;\n    }\n  } else {\n    assert(false, 33); // Invalid units\n  }\n\n  let i = 3 * Math.floor(\n    Math.log(this.minWidth_ * pointResolution) / Math.log(10));\n  let count, width;\n  while (true) {\n    count = LEADING_DIGITS[((i % 3) + 3) % 3] *\n        Math.pow(10, Math.floor(i / 3));\n    width = Math.round(count / pointResolution);\n    if (isNaN(width)) {\n      this.element_.style.display = 'none';\n      this.renderedVisible_ = false;\n      return;\n    } else if (width >= this.minWidth_) {\n      break;\n    }\n    ++i;\n  }\n\n  const html = count + ' ' + suffix;\n  if (this.renderedHTML_ != html) {\n    this.innerElement_.innerHTML = html;\n    this.renderedHTML_ = html;\n  }\n\n  if (this.renderedWidth_ != width) {\n    this.innerElement_.style.width = width + 'px';\n    this.renderedWidth_ = width;\n  }\n\n  if (!this.renderedVisible_) {\n    this.element_.style.display = '';\n    this.renderedVisible_ = true;\n  }\n\n};\n\nexport default ScaleLine;\n","/**\n * @module ol/style/IconImage\n */\nimport {inherits} from '../util.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {listenOnce, unlistenByKey} from '../events.js';\nimport EventTarget from '../events/EventTarget.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\n\n/**\n * @constructor\n * @param {Image|HTMLCanvasElement} image Image.\n * @param {string|undefined} src Src.\n * @param {module:ol/size~Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/ImageState} imageState Image state.\n * @param {module:ol/color~Color} color Color.\n * @extends {module:ol/events/EventTarget}\n */\nconst IconImage = function(image, src, size, crossOrigin, imageState, color) {\n\n  EventTarget.call(this);\n\n  /**\n   * @private\n   * @type {Image|HTMLCanvasElement}\n   */\n  this.hitDetectionImage_ = null;\n\n  /**\n   * @private\n   * @type {Image|HTMLCanvasElement}\n   */\n  this.image_ = !image ? new Image() : image;\n\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = color ?\n    /** @type {HTMLCanvasElement} */ (document.createElement('CANVAS')) :\n    null;\n\n  /**\n   * @private\n   * @type {module:ol/color~Color}\n   */\n  this.color_ = color;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/ImageState}\n   */\n  this.imageState_ = imageState;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.size_ = size;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.tainting_ = false;\n  if (this.imageState_ == ImageState.LOADED) {\n    this.determineTainting_();\n  }\n\n};\n\ninherits(IconImage, EventTarget);\n\n\n/**\n * @param {Image|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {module:ol/size~Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/ImageState} imageState Image state.\n * @param {module:ol/color~Color} color Color.\n * @return {module:ol/style/IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\n\n/**\n * @private\n */\nIconImage.prototype.determineTainting_ = function() {\n  const context = createCanvasContext2D(1, 1);\n  try {\n    context.drawImage(this.image_, 0, 0);\n    context.getImageData(0, 0, 1, 1);\n  } catch (e) {\n    this.tainting_ = true;\n  }\n};\n\n\n/**\n * @private\n */\nIconImage.prototype.dispatchChangeEvent_ = function() {\n  this.dispatchEvent(EventType.CHANGE);\n};\n\n\n/**\n * @private\n */\nIconImage.prototype.handleImageError_ = function() {\n  this.imageState_ = ImageState.ERROR;\n  this.unlistenImage_();\n  this.dispatchChangeEvent_();\n};\n\n\n/**\n * @private\n */\nIconImage.prototype.handleImageLoad_ = function() {\n  this.imageState_ = ImageState.LOADED;\n  if (this.size_) {\n    this.image_.width = this.size_[0];\n    this.image_.height = this.size_[1];\n  }\n  this.size_ = [this.image_.width, this.image_.height];\n  this.unlistenImage_();\n  this.determineTainting_();\n  this.replaceColor_();\n  this.dispatchChangeEvent_();\n};\n\n\n/**\n * @param {number} pixelRatio Pixel ratio.\n * @return {Image|HTMLCanvasElement} Image or Canvas element.\n */\nIconImage.prototype.getImage = function(pixelRatio) {\n  return this.canvas_ ? this.canvas_ : this.image_;\n};\n\n\n/**\n * @return {module:ol/ImageState} Image state.\n */\nIconImage.prototype.getImageState = function() {\n  return this.imageState_;\n};\n\n\n/**\n * @param {number} pixelRatio Pixel ratio.\n * @return {Image|HTMLCanvasElement} Image element.\n */\nIconImage.prototype.getHitDetectionImage = function(pixelRatio) {\n  if (!this.hitDetectionImage_) {\n    if (this.tainting_) {\n      const width = this.size_[0];\n      const height = this.size_[1];\n      const context = createCanvasContext2D(width, height);\n      context.fillRect(0, 0, width, height);\n      this.hitDetectionImage_ = context.canvas;\n    } else {\n      this.hitDetectionImage_ = this.image_;\n    }\n  }\n  return this.hitDetectionImage_;\n};\n\n\n/**\n * @return {module:ol/size~Size} Image size.\n */\nIconImage.prototype.getSize = function() {\n  return this.size_;\n};\n\n\n/**\n * @return {string|undefined} Image src.\n */\nIconImage.prototype.getSrc = function() {\n  return this.src_;\n};\n\n\n/**\n * Load not yet loaded URI.\n */\nIconImage.prototype.load = function() {\n  if (this.imageState_ == ImageState.IDLE) {\n    this.imageState_ = ImageState.LOADING;\n    this.imageListenerKeys_ = [\n      listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    try {\n      this.image_.src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n  }\n};\n\n\n/**\n * @private\n */\nIconImage.prototype.replaceColor_ = function() {\n  if (this.tainting_ || this.color_ === null) {\n    return;\n  }\n\n  this.canvas_.width = this.image_.width;\n  this.canvas_.height = this.image_.height;\n\n  const ctx = this.canvas_.getContext('2d');\n  ctx.drawImage(this.image_, 0, 0);\n\n  const imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n  const data = imgData.data;\n  const r = this.color_[0] / 255.0;\n  const g = this.color_[1] / 255.0;\n  const b = this.color_[2] / 255.0;\n\n  for (let i = 0, ii = data.length; i < ii; i += 4) {\n    data[i] *= r;\n    data[i + 1] *= g;\n    data[i + 2] *= b;\n  }\n  ctx.putImageData(imgData, 0, 0);\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\nIconImage.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport {getUid, inherits} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport {get as getIconImage} from '../style/IconImage.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport ImageStyle from '../style/Image.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array.<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {module:ol/style/IconOrigin} [anchorOrigin] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {module:ol/style/IconAnchorUnits} [anchorXUnits] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels. Default is `'fraction'`.\n * @property {module:ol/style/IconAnchorUnits} [anchorYUnits] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels. Default is `'fraction'`.\n * @property {module:ol/color~Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you are using the WebGL renderer or if you want to access pixel data with the Canvas renderer.\n * See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {Image|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array.<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {module:ol/style/IconOrigin} [offsetOrigin] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [scale=1] Scale.\n * @property {boolean} [snapToPixel=true] If `true` integral numbers of pixels are used as the X and Y pixel coordinate\n * when drawing the icon in the output canvas. If `false` fractional numbers may be used. Using `true` allows for\n * \"sharp\" rendering (no blur), while using `false` allows for \"accurate\" rendering. Note that accuracy is important if\n * the icon's position is animated. Without it, the icon may jitter noticeably.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {module:ol/size~Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {module:ol/size~Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n\n/**\n * @classdesc\n * Set icon style for vector features.\n *\n * @constructor\n * @param {module:ol/style/Icon~Options=} opt_options Options.\n * @extends {module:ol/style/Image}\n * @api\n */\nconst Icon = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.normalizedAnchor_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/style/IconOrigin}\n   */\n  this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n    options.anchorOrigin : IconOrigin.TOP_LEFT;\n\n  /**\n   * @private\n   * @type {module:ol/style/IconAnchorUnits}\n   */\n  this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n    options.anchorXUnits : IconAnchorUnits.FRACTION;\n\n  /**\n   * @private\n   * @type {module:ol/style/IconAnchorUnits}\n   */\n  this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n    options.anchorYUnits : IconAnchorUnits.FRACTION;\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @type {Image|HTMLCanvasElement}\n   */\n  const image = options.img !== undefined ? options.img : null;\n\n  /**\n   * @type {module:ol/size~Size}\n   */\n  const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n  /**\n   * @type {string|undefined}\n   */\n  let src = options.src;\n\n  assert(!(src !== undefined && image),\n    4); // `image` and `src` cannot be provided at the same time\n  assert(!image || (image && imgSize),\n    5); // `imgSize` must be set when `image` is provided\n\n  if ((src === undefined || src.length === 0) && image) {\n    src = image.src || getUid(image).toString();\n  }\n  assert(src !== undefined && src.length > 0,\n    6); // A defined and non-empty `src` or `image` must be provided\n\n  /**\n   * @type {module:ol/ImageState}\n   */\n  const imageState = options.src !== undefined ?\n    ImageState.IDLE : ImageState.LOADED;\n\n  /**\n   * @private\n   * @type {module:ol/color~Color}\n   */\n  this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/IconImage}\n   */\n  this.iconImage_ = getIconImage(\n    image, /** @type {string} */ (src), imgSize, this.crossOrigin_, imageState, this.color_);\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n\n  /**\n   * @private\n   * @type {module:ol/style/IconOrigin}\n   */\n  this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n    options.offsetOrigin : IconOrigin.TOP_LEFT;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.origin_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.size_ = options.size !== undefined ? options.size : null;\n\n  /**\n   * @type {number}\n   */\n  const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n  /**\n   * @type {boolean}\n   */\n  const rotateWithView = options.rotateWithView !== undefined ?\n    options.rotateWithView : false;\n\n  /**\n   * @type {number}\n   */\n  const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n  /**\n   * @type {number}\n   */\n  const scale = options.scale !== undefined ? options.scale : 1;\n\n  /**\n   * @type {boolean}\n   */\n  const snapToPixel = options.snapToPixel !== undefined ?\n    options.snapToPixel : true;\n\n  ImageStyle.call(this, {\n    opacity: opacity,\n    rotation: rotation,\n    scale: scale,\n    snapToPixel: snapToPixel,\n    rotateWithView: rotateWithView\n  });\n\n};\n\ninherits(Icon, ImageStyle);\n\n\n/**\n * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n * @return {module:ol/style/Icon} The cloned style.\n * @api\n */\nIcon.prototype.clone = function() {\n  return new Icon({\n    anchor: this.anchor_.slice(),\n    anchorOrigin: this.anchorOrigin_,\n    anchorXUnits: this.anchorXUnits_,\n    anchorYUnits: this.anchorYUnits_,\n    crossOrigin: this.crossOrigin_,\n    color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n    src: this.getSrc(),\n    offset: this.offset_.slice(),\n    offsetOrigin: this.offsetOrigin_,\n    size: this.size_ !== null ? this.size_.slice() : undefined,\n    opacity: this.getOpacity(),\n    scale: this.getScale(),\n    snapToPixel: this.getSnapToPixel(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView()\n  });\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nIcon.prototype.getAnchor = function() {\n  if (this.normalizedAnchor_) {\n    return this.normalizedAnchor_;\n  }\n  let anchor = this.anchor_;\n  const size = this.getSize();\n  if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n      this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n    if (!size) {\n      return null;\n    }\n    anchor = this.anchor_.slice();\n    if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n      anchor[0] *= size[0];\n    }\n    if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n      anchor[1] *= size[1];\n    }\n  }\n\n  if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n    if (!size) {\n      return null;\n    }\n    if (anchor === this.anchor_) {\n      anchor = this.anchor_.slice();\n    }\n    if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n      anchor[0] = -anchor[0] + size[0];\n    }\n    if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n      anchor[1] = -anchor[1] + size[1];\n    }\n  }\n  this.normalizedAnchor_ = anchor;\n  return this.normalizedAnchor_;\n};\n\n\n/**\n * Get the icon color.\n * @return {module:ol/color~Color} Color.\n * @api\n */\nIcon.prototype.getColor = function() {\n  return this.color_;\n};\n\n\n/**\n * Get the image icon.\n * @param {number} pixelRatio Pixel ratio.\n * @return {Image|HTMLCanvasElement} Image or Canvas element.\n * @override\n * @api\n */\nIcon.prototype.getImage = function(pixelRatio) {\n  return this.iconImage_.getImage(pixelRatio);\n};\n\n\n/**\n * @override\n */\nIcon.prototype.getImageSize = function() {\n  return this.iconImage_.getSize();\n};\n\n\n/**\n * @override\n */\nIcon.prototype.getHitDetectionImageSize = function() {\n  return this.getImageSize();\n};\n\n\n/**\n * @override\n */\nIcon.prototype.getImageState = function() {\n  return this.iconImage_.getImageState();\n};\n\n\n/**\n * @override\n */\nIcon.prototype.getHitDetectionImage = function(pixelRatio) {\n  return this.iconImage_.getHitDetectionImage(pixelRatio);\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nIcon.prototype.getOrigin = function() {\n  if (this.origin_) {\n    return this.origin_;\n  }\n  let offset = this.offset_;\n\n  if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n    const size = this.getSize();\n    const iconImageSize = this.iconImage_.getSize();\n    if (!size || !iconImageSize) {\n      return null;\n    }\n    offset = offset.slice();\n    if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n      offset[0] = iconImageSize[0] - size[0] - offset[0];\n    }\n    if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n      offset[1] = iconImageSize[1] - size[1] - offset[1];\n    }\n  }\n  this.origin_ = offset;\n  return this.origin_;\n};\n\n\n/**\n * Get the image URL.\n * @return {string|undefined} Image src.\n * @api\n */\nIcon.prototype.getSrc = function() {\n  return this.iconImage_.getSrc();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nIcon.prototype.getSize = function() {\n  return !this.size_ ? this.iconImage_.getSize() : this.size_;\n};\n\n\n/**\n * @override\n */\nIcon.prototype.listenImageChange = function(listener, thisArg) {\n  return listen(this.iconImage_, EventType.CHANGE,\n    listener, thisArg);\n};\n\n\n/**\n * Load not yet loaded URI.\n * When rendering a feature with an icon style, the vector renderer will\n * automatically call this method. However, you might want to call this\n * method yourself for preloading or other purposes.\n * @override\n * @api\n */\nIcon.prototype.load = function() {\n  this.iconImage_.load();\n};\n\n\n/**\n * @override\n */\nIcon.prototype.unlistenImageChange = function(listener, thisArg) {\n  unlisten(this.iconImage_, EventType.CHANGE,\n    listener, thisArg);\n};\nexport default Icon;\n","/**\n * @module ol/geom/flat/geodesic\n */\nimport {squaredSegmentDistance, toRadians, toDegrees} from '../../math.js';\nimport {get as getProjection, getTransform} from '../../proj.js';\n\n\n/**\n * @param {function(number): module:ol/coordinate~Coordinate} interpolate Interpolate function.\n * @param {module:ol/proj~TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array.<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n  // FIXME reduce garbage generation\n  // FIXME optimize stack operations\n\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n\n  let geoA = interpolate(0);\n  let geoB = interpolate(1);\n\n  let a = transform(geoA);\n  let b = transform(geoB);\n\n  /** @type {Array.<module:ol/coordinate~Coordinate>} */\n  const geoStack = [geoB, geoA];\n  /** @type {Array.<module:ol/coordinate~Coordinate>} */\n  const stack = [b, a];\n  /** @type {Array.<number>} */\n  const fractionStack = [1, 0];\n\n  /** @type {!Object.<string, boolean>} */\n  const fractions = {};\n\n  let maxIterations = 1e5;\n  let geoM, m, fracA, fracB, fracM, key;\n\n  while (--maxIterations > 0 && fractionStack.length > 0) {\n    // Pop the a coordinate off the stack\n    fracA = fractionStack.pop();\n    geoA = geoStack.pop();\n    a = stack.pop();\n    // Add the a coordinate if it has not been added yet\n    key = fracA.toString();\n    if (!(key in fractions)) {\n      flatCoordinates.push(a[0], a[1]);\n      fractions[key] = true;\n    }\n    // Pop the b coordinate off the stack\n    fracB = fractionStack.pop();\n    geoB = geoStack.pop();\n    b = stack.pop();\n    // Find the m point between the a and b coordinates\n    fracM = (fracA + fracB) / 2;\n    geoM = interpolate(fracM);\n    m = transform(geoM);\n    if (squaredSegmentDistance(m[0], m[1], a[0], a[1],\n      b[0], b[1]) < squaredTolerance) {\n      // If the m point is sufficiently close to the straight line, then we\n      // discard it.  Just use the b coordinate and move on to the next line\n      // segment.\n      flatCoordinates.push(b[0], b[1]);\n      key = fracB.toString();\n      fractions[key] = true;\n    } else {\n      // Otherwise, we need to subdivide the current line segment.  Split it\n      // into two and push the two line segments onto the stack.\n      fractionStack.push(fracB, fracM, fracM, fracA);\n      stack.push(b, m, m, a);\n      geoStack.push(geoB, geoM, geoM, geoA);\n    }\n  }\n\n  return flatCoordinates;\n}\n\n\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array.<number>} Flat coordinates.\n */\nexport function greatCircleArc(lon1, lat1, lon2, lat2, projection, squaredTolerance) {\n  const geoProjection = getProjection('EPSG:4326');\n\n  const cosLat1 = Math.cos(toRadians(lat1));\n  const sinLat1 = Math.sin(toRadians(lat1));\n  const cosLat2 = Math.cos(toRadians(lat2));\n  const sinLat2 = Math.sin(toRadians(lat2));\n  const cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n  const sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n  const d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {module:ol/coordinate~Coordinate} Coordinate.\n     */\n    function(frac) {\n      if (1 <= d) {\n        return [lon2, lat2];\n      }\n      const D = frac * Math.acos(d);\n      const cosD = Math.cos(D);\n      const sinD = Math.sin(D);\n      const y = sinDeltaLon * cosLat2;\n      const x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n      const theta = Math.atan2(y, x);\n      const lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n      const lon = toRadians(lon1) +\n            Math.atan2(Math.sin(theta) * sinD * cosLat1,\n              cosD - sinLat1 * Math.sin(lat));\n      return [toDegrees(lon), toDegrees(lat)];\n    }, getTransform(geoProjection, projection), squaredTolerance);\n}\n\n\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array.<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {module:ol/coordinate~Coordinate} Coordinate.\n     */\n    function(frac) {\n      return [lon, lat1 + ((lat2 - lat1) * frac)];\n    },\n    getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n\n\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array.<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {module:ol/coordinate~Coordinate} Coordinate.\n     */\n    function(frac) {\n      return [lon1 + ((lon2 - lon1) * frac), lat];\n    },\n    getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n","/**\n * @module ol/Graticule\n */\nimport {degreesToStringHDMS} from './coordinate.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {intersects, getCenter} from './extent.js';\nimport GeometryLayout from './geom/GeometryLayout.js';\nimport LineString from './geom/LineString.js';\nimport Point from './geom/Point.js';\nimport {meridian, parallel} from './geom/flat/geodesic.js';\nimport {clamp} from './math.js';\nimport {get as getProjection, equivalent as equivalentProjection, getTransform, transformExtent} from './proj.js';\nimport RenderEventType from './render/EventType.js';\nimport Fill from './style/Fill.js';\nimport Stroke from './style/Stroke.js';\nimport Text from './style/Text.js';\n\n\n/**\n * @type {module:ol/style/Stroke}\n * @private\n * @const\n */\nconst DEFAULT_STROKE_STYLE = new Stroke({\n  color: 'rgba(0,0,0,0.2)'\n});\n\n/**\n * TODO can be configurable\n * @type {Array.<number>}\n * @private\n */\nconst INTERVALS = [\n  90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001\n];\n\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {module:ol/geom/Point} geom\n * @property {string} text\n */\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/PluggableMap} [map] Reference to an\n * {@link module:ol/Map~Map} object.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {module:ol/style/Stroke} [strokeStyle='rgba(0,0,0,0.2)'] The\n * stroke style to use for drawing the graticule. If not provided, a not fully\n * opaque black will be used.\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {module:ol/style/Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {module:ol/style/Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n */\n\n\n/**\n * Render a grid for a coordinate system on a map.\n * @constructor\n * @param {module:ol/Graticule~Options=} opt_options Options.\n * @api\n */\nconst Graticule = function(opt_options) {\n  const options = opt_options || {};\n\n  /**\n   * @type {module:ol/PluggableMap}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?module:ol/events~EventsKey}\n   * @private\n   */\n  this.postcomposeListenerKey_ = null;\n\n  /**\n   * @type {module:ol/proj/Projection}\n   */\n  this.projection_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLat_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLon_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLat_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLon_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLatP_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLonP_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLatP_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLonP_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.targetSize_ = options.targetSize !== undefined ? options.targetSize : 100;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n\n  /**\n   * @type {Array.<module:ol/geom/LineString>}\n   * @private\n   */\n  this.meridians_ = [];\n\n  /**\n   * @type {Array.<module:ol/geom/LineString>}\n   * @private\n   */\n  this.parallels_ = [];\n\n  /**\n   * @type {module:ol/style/Stroke}\n   * @private\n   */\n  this.strokeStyle_ = options.strokeStyle !== undefined ? options.strokeStyle : DEFAULT_STROKE_STYLE;\n\n  /**\n   * @type {module:ol/proj~TransformFunction|undefined}\n   * @private\n   */\n  this.fromLonLatTransform_ = undefined;\n\n  /**\n   * @type {module:ol/proj~TransformFunction|undefined}\n   * @private\n   */\n  this.toLonLatTransform_ = undefined;\n\n  /**\n   * @type {module:ol/coordinate~Coordinate}\n   * @private\n   */\n  this.projectionCenterLonLat_ = null;\n\n  /**\n   * @type {Array.<module:ol/Graticule~GraticuleLabelDataType>}\n   * @private\n   */\n  this.meridiansLabels_ = null;\n\n  /**\n   * @type {Array.<module:ol/Graticule~GraticuleLabelDataType>}\n   * @private\n   */\n  this.parallelsLabels_ = null;\n\n  if (options.showLabels == true) {\n\n    /**\n     * @type {null|function(number):string}\n     * @private\n     */\n    this.lonLabelFormatter_ = options.lonLabelFormatter == undefined ?\n      degreesToStringHDMS.bind(this, 'EW') : options.lonLabelFormatter;\n\n    /**\n     * @type {function(number):string}\n     * @private\n     */\n    this.latLabelFormatter_ = options.latLabelFormatter == undefined ?\n      degreesToStringHDMS.bind(this, 'NS') : options.latLabelFormatter;\n\n    /**\n     * Longitude label position in fractions (0..1) of view extent. 0 means\n     * bottom, 1 means top.\n     * @type {number}\n     * @private\n     */\n    this.lonLabelPosition_ = options.lonLabelPosition == undefined ? 0 :\n      options.lonLabelPosition;\n\n    /**\n     * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n     * means right.\n     * @type {number}\n     * @private\n     */\n    this.latLabelPosition_ = options.latLabelPosition == undefined ? 1 :\n      options.latLabelPosition;\n\n    /**\n     * @type {module:ol/style/Text}\n     * @private\n     */\n    this.lonLabelStyle_ = options.lonLabelStyle !== undefined ? options.lonLabelStyle :\n      new Text({\n        font: '12px Calibri,sans-serif',\n        textBaseline: 'bottom',\n        fill: new Fill({\n          color: 'rgba(0,0,0,1)'\n        }),\n        stroke: new Stroke({\n          color: 'rgba(255,255,255,1)',\n          width: 3\n        })\n      });\n\n    /**\n     * @type {module:ol/style/Text}\n     * @private\n     */\n    this.latLabelStyle_ = options.latLabelStyle !== undefined ? options.latLabelStyle :\n      new Text({\n        font: '12px Calibri,sans-serif',\n        textAlign: 'end',\n        fill: new Fill({\n          color: 'rgba(0,0,0,1)'\n        }),\n        stroke: new Stroke({\n          color: 'rgba(255,255,255,1)',\n          width: 3\n        })\n      });\n\n    this.meridiansLabels_ = [];\n    this.parallelsLabels_ = [];\n  }\n\n  this.setMap(options.map !== undefined ? options.map : null);\n};\n\n\n/**\n * @param {number} lon Longitude.\n * @param {number} minLat Minimal latitude.\n * @param {number} maxLat Maximal latitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} index Index.\n * @return {number} Index.\n * @private\n */\nGraticule.prototype.addMeridian_ = function(lon, minLat, maxLat, squaredTolerance, extent, index) {\n  const lineString = this.getMeridian_(lon, minLat, maxLat, squaredTolerance, index);\n  if (intersects(lineString.getExtent(), extent)) {\n    if (this.meridiansLabels_) {\n      const textPoint = this.getMeridianPoint_(lineString, extent, index);\n      this.meridiansLabels_[index] = {\n        geom: textPoint,\n        text: this.lonLabelFormatter_(lon)\n      };\n    }\n    this.meridians_[index++] = lineString;\n  }\n  return index;\n};\n\n/**\n * @param {module:ol/geom/LineString} lineString Meridian\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} index Index.\n * @return {module:ol/geom/Point} Meridian point.\n * @private\n */\nGraticule.prototype.getMeridianPoint_ = function(lineString, extent, index) {\n  const flatCoordinates = lineString.getFlatCoordinates();\n  const clampedBottom = Math.max(extent[1], flatCoordinates[1]);\n  const clampedTop = Math.min(extent[3], flatCoordinates[flatCoordinates.length - 1]);\n  const lat = clamp(\n    extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\n    clampedBottom, clampedTop);\n  const coordinate = [flatCoordinates[0], lat];\n  const point = this.meridiansLabels_[index] !== undefined ?\n    this.meridiansLabels_[index].geom : new Point(null);\n  point.setCoordinates(coordinate);\n  return point;\n};\n\n\n/**\n * @param {number} lat Latitude.\n * @param {number} minLon Minimal longitude.\n * @param {number} maxLon Maximal longitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} index Index.\n * @return {number} Index.\n * @private\n */\nGraticule.prototype.addParallel_ = function(lat, minLon, maxLon, squaredTolerance, extent, index) {\n  const lineString = this.getParallel_(lat, minLon, maxLon, squaredTolerance, index);\n  if (intersects(lineString.getExtent(), extent)) {\n    if (this.parallelsLabels_) {\n      const textPoint = this.getParallelPoint_(lineString, extent, index);\n      this.parallelsLabels_[index] = {\n        geom: textPoint,\n        text: this.latLabelFormatter_(lat)\n      };\n    }\n    this.parallels_[index++] = lineString;\n  }\n  return index;\n};\n\n\n/**\n * @param {module:ol/geom/LineString} lineString Parallels.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} index Index.\n * @return {module:ol/geom/Point} Parallel point.\n * @private\n */\nGraticule.prototype.getParallelPoint_ = function(lineString, extent, index) {\n  const flatCoordinates = lineString.getFlatCoordinates();\n  const clampedLeft = Math.max(extent[0], flatCoordinates[0]);\n  const clampedRight = Math.min(extent[2], flatCoordinates[flatCoordinates.length - 2]);\n  const lon = clamp(\n    extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\n    clampedLeft, clampedRight);\n  const coordinate = [lon, flatCoordinates[1]];\n  const point = this.parallelsLabels_[index] !== undefined ?\n    this.parallelsLabels_[index].geom : new Point(null);\n  point.setCoordinates(coordinate);\n  return point;\n};\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} squaredTolerance Squared tolerance.\n * @private\n */\nGraticule.prototype.createGraticule_ = function(extent, center, resolution, squaredTolerance) {\n\n  const interval = this.getInterval_(resolution);\n  if (interval == -1) {\n    this.meridians_.length = this.parallels_.length = 0;\n    if (this.meridiansLabels_) {\n      this.meridiansLabels_.length = 0;\n    }\n    if (this.parallelsLabels_) {\n      this.parallelsLabels_.length = 0;\n    }\n    return;\n  }\n\n  const centerLonLat = this.toLonLatTransform_(center);\n  let centerLon = centerLonLat[0];\n  let centerLat = centerLonLat[1];\n  const maxLines = this.maxLines_;\n  let cnt, idx, lat, lon;\n\n  let validExtent = [\n    Math.max(extent[0], this.minLonP_),\n    Math.max(extent[1], this.minLatP_),\n    Math.min(extent[2], this.maxLonP_),\n    Math.min(extent[3], this.maxLatP_)\n  ];\n\n  validExtent = transformExtent(validExtent, this.projection_, 'EPSG:4326');\n  const maxLat = validExtent[3];\n  const maxLon = validExtent[2];\n  const minLat = validExtent[1];\n  const minLon = validExtent[0];\n\n  // Create meridians\n\n  centerLon = Math.floor(centerLon / interval) * interval;\n  lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n  idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n\n  cnt = 0;\n  while (lon != this.minLon_ && cnt++ < maxLines) {\n    lon = Math.max(lon - interval, this.minLon_);\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n  }\n\n  lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n  cnt = 0;\n  while (lon != this.maxLon_ && cnt++ < maxLines) {\n    lon = Math.min(lon + interval, this.maxLon_);\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n  }\n\n  this.meridians_.length = idx;\n  if (this.meridiansLabels_) {\n    this.meridiansLabels_.length = idx;\n  }\n\n  // Create parallels\n\n  centerLat = Math.floor(centerLat / interval) * interval;\n  lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n  idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n\n  cnt = 0;\n  while (lat != this.minLat_ && cnt++ < maxLines) {\n    lat = Math.max(lat - interval, this.minLat_);\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n  }\n\n  lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n  cnt = 0;\n  while (lat != this.maxLat_ && cnt++ < maxLines) {\n    lat = Math.min(lat + interval, this.maxLat_);\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n  }\n\n  this.parallels_.length = idx;\n  if (this.parallelsLabels_) {\n    this.parallelsLabels_.length = idx;\n  }\n\n};\n\n\n/**\n * @param {number} resolution Resolution.\n * @return {number} The interval in degrees.\n * @private\n */\nGraticule.prototype.getInterval_ = function(resolution) {\n  const centerLon = this.projectionCenterLonLat_[0];\n  const centerLat = this.projectionCenterLonLat_[1];\n  let interval = -1;\n  const target = Math.pow(this.targetSize_ * resolution, 2);\n  /** @type {Array.<number>} **/\n  const p1 = [];\n  /** @type {Array.<number>} **/\n  const p2 = [];\n  for (let i = 0, ii = INTERVALS.length; i < ii; ++i) {\n    const delta = INTERVALS[i] / 2;\n    p1[0] = centerLon - delta;\n    p1[1] = centerLat - delta;\n    p2[0] = centerLon + delta;\n    p2[1] = centerLat + delta;\n    this.fromLonLatTransform_(p1, p1);\n    this.fromLonLatTransform_(p2, p2);\n    const dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n    if (dist <= target) {\n      break;\n    }\n    interval = INTERVALS[i];\n  }\n  return interval;\n};\n\n\n/**\n * Get the map associated with this graticule.\n * @return {module:ol/PluggableMap} The map.\n * @api\n */\nGraticule.prototype.getMap = function() {\n  return this.map_;\n};\n\n\n/**\n * @param {number} lon Longitude.\n * @param {number} minLat Minimal latitude.\n * @param {number} maxLat Maximal latitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {module:ol/geom/LineString} The meridian line string.\n * @param {number} index Index.\n * @private\n */\nGraticule.prototype.getMeridian_ = function(lon, minLat, maxLat, squaredTolerance, index) {\n  const flatCoordinates = meridian(lon, minLat, maxLat, this.projection_, squaredTolerance);\n  const lineString = this.meridians_[index] !== undefined ? this.meridians_[index] : new LineString(null);\n  lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Get the list of meridians.  Meridians are lines of equal longitude.\n * @return {Array.<module:ol/geom/LineString>} The meridians.\n * @api\n */\nGraticule.prototype.getMeridians = function() {\n  return this.meridians_;\n};\n\n\n/**\n * @param {number} lat Latitude.\n * @param {number} minLon Minimal longitude.\n * @param {number} maxLon Maximal longitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {module:ol/geom/LineString} The parallel line string.\n * @param {number} index Index.\n * @private\n */\nGraticule.prototype.getParallel_ = function(lat, minLon, maxLon, squaredTolerance, index) {\n  const flatCoordinates = parallel(lat, minLon, maxLon, this.projection_, squaredTolerance);\n  const lineString = this.parallels_[index] !== undefined ? this.parallels_[index] : new LineString(null);\n  lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Get the list of parallels.  Parallels are lines of equal latitude.\n * @return {Array.<module:ol/geom/LineString>} The parallels.\n * @api\n */\nGraticule.prototype.getParallels = function() {\n  return this.parallels_;\n};\n\n\n/**\n * @param {module:ol/render/Event} e Event.\n * @private\n */\nGraticule.prototype.handlePostCompose_ = function(e) {\n  const vectorContext = e.vectorContext;\n  const frameState = e.frameState;\n  const extent = frameState.extent;\n  const viewState = frameState.viewState;\n  const center = viewState.center;\n  const projection = viewState.projection;\n  const resolution = viewState.resolution;\n  const pixelRatio = frameState.pixelRatio;\n  const squaredTolerance =\n      resolution * resolution / (4 * pixelRatio * pixelRatio);\n\n  const updateProjectionInfo = !this.projection_ ||\n      !equivalentProjection(this.projection_, projection);\n\n  if (updateProjectionInfo) {\n    this.updateProjectionInfo_(projection);\n  }\n\n  this.createGraticule_(extent, center, resolution, squaredTolerance);\n\n  // Draw the lines\n  vectorContext.setFillStrokeStyle(null, this.strokeStyle_);\n  let i, l, line;\n  for (i = 0, l = this.meridians_.length; i < l; ++i) {\n    line = this.meridians_[i];\n    vectorContext.drawGeometry(line);\n  }\n  for (i = 0, l = this.parallels_.length; i < l; ++i) {\n    line = this.parallels_[i];\n    vectorContext.drawGeometry(line);\n  }\n  let labelData;\n  if (this.meridiansLabels_) {\n    for (i = 0, l = this.meridiansLabels_.length; i < l; ++i) {\n      labelData = this.meridiansLabels_[i];\n      this.lonLabelStyle_.setText(labelData.text);\n      vectorContext.setTextStyle(this.lonLabelStyle_);\n      vectorContext.drawGeometry(labelData.geom);\n    }\n  }\n  if (this.parallelsLabels_) {\n    for (i = 0, l = this.parallelsLabels_.length; i < l; ++i) {\n      labelData = this.parallelsLabels_[i];\n      this.latLabelStyle_.setText(labelData.text);\n      vectorContext.setTextStyle(this.latLabelStyle_);\n      vectorContext.drawGeometry(labelData.geom);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @private\n */\nGraticule.prototype.updateProjectionInfo_ = function(projection) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n\n  const worldExtent = projection.getWorldExtent();\n  const worldExtentP = transformExtent(worldExtent, epsg4326Projection, projection);\n\n  this.maxLat_ = worldExtent[3];\n  this.maxLon_ = worldExtent[2];\n  this.minLat_ = worldExtent[1];\n  this.minLon_ = worldExtent[0];\n\n  this.maxLatP_ = worldExtentP[3];\n  this.maxLonP_ = worldExtentP[2];\n  this.minLatP_ = worldExtentP[1];\n  this.minLonP_ = worldExtentP[0];\n\n  this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n\n  this.toLonLatTransform_ = getTransform(projection, epsg4326Projection);\n\n  this.projectionCenterLonLat_ = this.toLonLatTransform_(getCenter(projection.getExtent()));\n\n  this.projection_ = projection;\n};\n\n\n/**\n * Set the map for this graticule.  The graticule will be rendered on the\n * provided map.\n * @param {module:ol/PluggableMap} map Map.\n * @api\n */\nGraticule.prototype.setMap = function(map) {\n  if (this.map_) {\n    unlistenByKey(this.postcomposeListenerKey_);\n    this.postcomposeListenerKey_ = null;\n    this.map_.render();\n  }\n  if (map) {\n    this.postcomposeListenerKey_ = listen(map, RenderEventType.POSTCOMPOSE, this.handlePostCompose_, this);\n    map.render();\n  }\n  this.map_ = map;\n};\nexport default Graticule;\n","/**\n * @module ol/control/MousePosition\n */\n\nimport {inherits} from '../util.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport Control from '../control/Control.js';\nimport {getTransformFromProjections, identityTransform, get as getProjection} from '../proj.js';\n\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {module:ol/coordinate~CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {function(module:ol/MapEvent)} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {Element|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [undefinedHTML='&nbsp;'] Markup to show when coordinates are not\n * available (e.g. when the pointer leaves the map viewport).  By default, the last position\n * will be replaced with `'&nbsp;'` when the pointer leaves the viewport.  To\n * retain the last rendered position, set this option to something falsey (like an empty\n * string `''`).\n */\n\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/MousePosition~Options=} opt_options Mouse position\n *     options.\n * @api\n */\nconst MousePosition = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const element = document.createElement('DIV');\n  element.className = options.className !== undefined ? options.className : 'ol-mouse-position';\n\n  Control.call(this, {\n    element: element,\n    render: options.render || render,\n    target: options.target\n  });\n\n  listen(this,\n    getChangeEventType(PROJECTION),\n    this.handleProjectionChanged_, this);\n\n  if (options.coordinateFormat) {\n    this.setCoordinateFormat(options.coordinateFormat);\n  }\n  if (options.projection) {\n    this.setProjection(options.projection);\n  }\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.undefinedHTML_ = 'undefinedHTML' in options ? options.undefinedHTML : '&nbsp;';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderOnMouseOut_ = !!this.undefinedHTML_;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.renderedHTML_ = element.innerHTML;\n\n  /**\n   * @private\n   * @type {module:ol/proj/Projection}\n   */\n  this.mapProjection_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/proj~TransformFunction}\n   */\n  this.transform_ = null;\n\n  /**\n   * @private\n   * @type {module:ol~Pixel}\n   */\n  this.lastMouseMovePixel_ = null;\n\n};\n\ninherits(MousePosition, Control);\n\n\n/**\n * Update the mouseposition element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/MousePosition}\n * @api\n */\nexport function render(mapEvent) {\n  const frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.mapProjection_ = null;\n  } else {\n    if (this.mapProjection_ != frameState.viewState.projection) {\n      this.mapProjection_ = frameState.viewState.projection;\n      this.transform_ = null;\n    }\n  }\n  this.updateHTML_(this.lastMouseMovePixel_);\n}\n\n\n/**\n * @private\n */\nMousePosition.prototype.handleProjectionChanged_ = function() {\n  this.transform_ = null;\n};\n\n\n/**\n * Return the coordinate format type used to render the current position or\n * undefined.\n * @return {module:ol/coordinate~CoordinateFormat|undefined} The format to render the current\n *     position in.\n * @observable\n * @api\n */\nMousePosition.prototype.getCoordinateFormat = function() {\n  return (\n    /** @type {module:ol/coordinate~CoordinateFormat|undefined} */ (this.get(COORDINATE_FORMAT))\n  );\n};\n\n\n/**\n * Return the projection that is used to report the mouse position.\n * @return {module:ol/proj/Projection|undefined} The projection to report mouse\n *     position in.\n * @observable\n * @api\n */\nMousePosition.prototype.getProjection = function() {\n  return (\n    /** @type {module:ol/proj/Projection|undefined} */ (this.get(PROJECTION))\n  );\n};\n\n\n/**\n * @param {Event} event Browser event.\n * @protected\n */\nMousePosition.prototype.handleMouseMove = function(event) {\n  const map = this.getMap();\n  this.lastMouseMovePixel_ = map.getEventPixel(event);\n  this.updateHTML_(this.lastMouseMovePixel_);\n};\n\n\n/**\n * @param {Event} event Browser event.\n * @protected\n */\nMousePosition.prototype.handleMouseOut = function(event) {\n  this.updateHTML_(null);\n  this.lastMouseMovePixel_ = null;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMousePosition.prototype.setMap = function(map) {\n  Control.prototype.setMap.call(this, map);\n  if (map) {\n    const viewport = map.getViewport();\n    this.listenerKeys.push(\n      listen(viewport, EventType.MOUSEMOVE, this.handleMouseMove, this)\n    );\n    if (this.renderOnMouseOut_) {\n      this.listenerKeys.push(\n        listen(viewport, EventType.MOUSEOUT, this.handleMouseOut, this)\n      );\n    }\n  }\n};\n\n\n/**\n * Set the coordinate format type used to render the current position.\n * @param {module:ol/coordinate~CoordinateFormat} format The format to render the current\n *     position in.\n * @observable\n * @api\n */\nMousePosition.prototype.setCoordinateFormat = function(format) {\n  this.set(COORDINATE_FORMAT, format);\n};\n\n\n/**\n * Set the projection that is used to report the mouse position.\n * @param {module:ol/proj~ProjectionLike} projection The projection to report mouse\n *     position in.\n * @observable\n * @api\n */\nMousePosition.prototype.setProjection = function(projection) {\n  this.set(PROJECTION, getProjection(projection));\n};\n\n\n/**\n * @param {?module:ol~Pixel} pixel Pixel.\n * @private\n */\nMousePosition.prototype.updateHTML_ = function(pixel) {\n  let html = this.undefinedHTML_;\n  if (pixel && this.mapProjection_) {\n    if (!this.transform_) {\n      const projection = this.getProjection();\n      if (projection) {\n        this.transform_ = getTransformFromProjections(\n          this.mapProjection_, projection);\n      } else {\n        this.transform_ = identityTransform;\n      }\n    }\n    const map = this.getMap();\n    const coordinate = map.getCoordinateFromPixel(pixel);\n    if (coordinate) {\n      this.transform_(coordinate, coordinate);\n      const coordinateFormat = this.getCoordinateFormat();\n      if (coordinateFormat) {\n        html = coordinateFormat(coordinate);\n      } else {\n        html = coordinate.toString();\n      }\n    }\n  }\n  if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n    this.element.innerHTML = html;\n    this.renderedHTML_ = html;\n  }\n};\n\n\nexport default MousePosition;\n","/**\n * @module ol/render\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {create as createTransform, scale as scaleTransform} from './transform.js';\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\n\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {module:ol/Feature|module:ol/render/Feature} feature\n * @property {module:ol/geom/SimpleGeometry} geometry\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and returns a `{number}`.\n *\n * @typedef {function((module:ol/Feature|module:ol/render/Feature),\n *           (module:ol/Feature|module:ol/render/Feature)):number} OrderFunction\n */\n\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {module:ol/size~Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render';\n * import Fill from 'ol/style/Fill';\n * import Polygon from 'ol/geom/Polygon';\n *\n * var canvas = document.createElement('canvas');\n * var render = toContext(canvas.getContext('2d'),\n *     { size: [100, 100] });\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]]));\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {module:ol/render~ToContextOptions=} opt_options Options.\n * @return {module:ol/render/canvas/Immediate} Canvas Immediate.\n * @api\n */\nexport function toContext(context, opt_options) {\n  const canvas = context.canvas;\n  const options = opt_options ? opt_options : {};\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  const size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  const extent = [0, 0, canvas.width, canvas.height];\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n","/**\n * @module ol/format/WKT\n */\nimport {inherits} from '../util.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport TextFeature from '../format/TextFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [splitCollection=false] Whether to split GeometryCollections into\n * multiple features on reading.\n */\n\n/**\n * @typedef {Object} Token\n * @property {number} type\n * @property {number|string} [value]\n * @property {number} position\n */\n\n/**\n * @const\n * @type {string}\n */\nconst EMPTY = 'EMPTY';\n\n\n/**\n * @const\n * @type {string}\n */\nconst Z = 'Z';\n\n\n/**\n * @const\n * @type {string}\n */\nconst M = 'M';\n\n\n/**\n * @const\n * @type {string}\n */\nconst ZM = 'ZM';\n\n\n/**\n * @const\n * @enum {number}\n */\nconst TokenType = {\n  TEXT: 1,\n  LEFT_PAREN: 2,\n  RIGHT_PAREN: 3,\n  NUMBER: 4,\n  COMMA: 5,\n  EOF: 6\n};\n\n\n/**\n * Class to tokenize a WKT string.\n * @param {string} wkt WKT string.\n * @constructor\n */\nconst Lexer = function(wkt) {\n\n  /**\n   * @type {string}\n   */\n  this.wkt = wkt;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = -1;\n};\n\n\n/**\n * @param {string} c Character.\n * @return {boolean} Whether the character is alphabetic.\n * @private\n */\nLexer.prototype.isAlpha_ = function(c) {\n  return c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z';\n};\n\n\n/**\n * @param {string} c Character.\n * @param {boolean=} opt_decimal Whether the string number\n *     contains a dot, i.e. is a decimal number.\n * @return {boolean} Whether the character is numeric.\n * @private\n */\nLexer.prototype.isNumeric_ = function(c, opt_decimal) {\n  const decimal = opt_decimal !== undefined ? opt_decimal : false;\n  return c >= '0' && c <= '9' || c == '.' && !decimal;\n};\n\n\n/**\n * @param {string} c Character.\n * @return {boolean} Whether the character is whitespace.\n * @private\n */\nLexer.prototype.isWhiteSpace_ = function(c) {\n  return c == ' ' || c == '\\t' || c == '\\r' || c == '\\n';\n};\n\n\n/**\n * @return {string} Next string character.\n * @private\n */\nLexer.prototype.nextChar_ = function() {\n  return this.wkt.charAt(++this.index_);\n};\n\n\n/**\n * Fetch and return the next token.\n * @return {!module:ol/format/WKT~Token} Next string token.\n */\nLexer.prototype.nextToken = function() {\n  const c = this.nextChar_();\n  const token = {position: this.index_, value: c};\n\n  if (c == '(') {\n    token.type = TokenType.LEFT_PAREN;\n  } else if (c == ',') {\n    token.type = TokenType.COMMA;\n  } else if (c == ')') {\n    token.type = TokenType.RIGHT_PAREN;\n  } else if (this.isNumeric_(c) || c == '-') {\n    token.type = TokenType.NUMBER;\n    token.value = this.readNumber_();\n  } else if (this.isAlpha_(c)) {\n    token.type = TokenType.TEXT;\n    token.value = this.readText_();\n  } else if (this.isWhiteSpace_(c)) {\n    return this.nextToken();\n  } else if (c === '') {\n    token.type = TokenType.EOF;\n  } else {\n    throw new Error('Unexpected character: ' + c);\n  }\n\n  return token;\n};\n\n\n/**\n * @return {number} Numeric token value.\n * @private\n */\nLexer.prototype.readNumber_ = function() {\n  let c;\n  const index = this.index_;\n  let decimal = false;\n  let scientificNotation = false;\n  do {\n    if (c == '.') {\n      decimal = true;\n    } else if (c == 'e' || c == 'E') {\n      scientificNotation = true;\n    }\n    c = this.nextChar_();\n  } while (\n    this.isNumeric_(c, decimal) ||\n      // if we haven't detected a scientific number before, 'e' or 'E'\n      // hint that we should continue to read\n      !scientificNotation && (c == 'e' || c == 'E') ||\n      // once we know that we have a scientific number, both '-' and '+'\n      // are allowed\n      scientificNotation && (c == '-' || c == '+')\n  );\n  return parseFloat(this.wkt.substring(index, this.index_--));\n};\n\n\n/**\n * @return {string} String token value.\n * @private\n */\nLexer.prototype.readText_ = function() {\n  let c;\n  const index = this.index_;\n  do {\n    c = this.nextChar_();\n  } while (this.isAlpha_(c));\n  return this.wkt.substring(index, this.index_--).toUpperCase();\n};\n\n\n/**\n * Class to parse the tokens from the WKT string.\n * @param {module:ol/format/WKT~Lexer} lexer The lexer.\n * @constructor\n */\nconst Parser = function(lexer) {\n\n  /**\n   * @type {module:ol/format/WKT~Lexer}\n   * @private\n   */\n  this.lexer_ = lexer;\n\n  /**\n   * @type {module:ol/format/WKT~Token}\n   * @private\n   */\n  this.token_;\n\n  /**\n   * @type {module:ol/geom/GeometryLayout}\n   * @private\n   */\n  this.layout_ = GeometryLayout.XY;\n};\n\n\n/**\n * Fetch the next token form the lexer and replace the active token.\n * @private\n */\nParser.prototype.consume_ = function() {\n  this.token_ = this.lexer_.nextToken();\n};\n\n/**\n * Tests if the given type matches the type of the current token.\n * @param {module:ol/format/WKT~TokenType} type Token type.\n * @return {boolean} Whether the token matches the given type.\n */\nParser.prototype.isTokenType = function(type) {\n  const isMatch = this.token_.type == type;\n  return isMatch;\n};\n\n\n/**\n * If the given type matches the current token, consume it.\n * @param {module:ol/format/WKT~TokenType} type Token type.\n * @return {boolean} Whether the token matches the given type.\n */\nParser.prototype.match = function(type) {\n  const isMatch = this.isTokenType(type);\n  if (isMatch) {\n    this.consume_();\n  }\n  return isMatch;\n};\n\n\n/**\n * Try to parse the tokens provided by the lexer.\n * @return {module:ol/geom/Geometry} The geometry.\n */\nParser.prototype.parse = function() {\n  this.consume_();\n  const geometry = this.parseGeometry_();\n  return geometry;\n};\n\n\n/**\n * Try to parse the dimensional info.\n * @return {module:ol/geom/GeometryLayout} The layout.\n * @private\n */\nParser.prototype.parseGeometryLayout_ = function() {\n  let layout = GeometryLayout.XY;\n  const dimToken = this.token_;\n  if (this.isTokenType(TokenType.TEXT)) {\n    const dimInfo = dimToken.value;\n    if (dimInfo === Z) {\n      layout = GeometryLayout.XYZ;\n    } else if (dimInfo === M) {\n      layout = GeometryLayout.XYM;\n    } else if (dimInfo === ZM) {\n      layout = GeometryLayout.XYZM;\n    }\n    if (layout !== GeometryLayout.XY) {\n      this.consume_();\n    }\n  }\n  return layout;\n};\n\n\n/**\n * @return {!Array.<module:ol/geom/Geometry>} A collection of geometries.\n * @private\n */\nParser.prototype.parseGeometryCollectionText_ = function() {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    const geometries = [];\n    do {\n      geometries.push(this.parseGeometry_());\n    } while (this.match(TokenType.COMMA));\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return geometries;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @return {Array.<number>} All values in a point.\n * @private\n */\nParser.prototype.parsePointText_ = function() {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    const coordinates = this.parsePoint_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return null;\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @return {!Array.<!Array.<number>>} All points in a linestring.\n * @private\n */\nParser.prototype.parseLineStringText_ = function() {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    const coordinates = this.parsePointList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @return {!Array.<!Array.<number>>} All points in a polygon.\n * @private\n */\nParser.prototype.parsePolygonText_ = function() {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    const coordinates = this.parseLineStringTextList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @return {!Array.<!Array.<number>>} All points in a multipoint.\n * @private\n */\nParser.prototype.parseMultiPointText_ = function() {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    let coordinates;\n    if (this.token_.type == TokenType.LEFT_PAREN) {\n      coordinates = this.parsePointTextList_();\n    } else {\n      coordinates = this.parsePointList_();\n    }\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @return {!Array.<!Array.<number>>} All linestring points\n *                                        in a multilinestring.\n * @private\n */\nParser.prototype.parseMultiLineStringText_ = function() {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    const coordinates = this.parseLineStringTextList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @return {!Array.<!Array.<number>>} All polygon points in a multipolygon.\n * @private\n */\nParser.prototype.parseMultiPolygonText_ = function() {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    const coordinates = this.parsePolygonTextList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @return {!Array.<number>} A point.\n * @private\n */\nParser.prototype.parsePoint_ = function() {\n  const coordinates = [];\n  const dimensions = this.layout_.length;\n  for (let i = 0; i < dimensions; ++i) {\n    const token = this.token_;\n    if (this.match(TokenType.NUMBER)) {\n      coordinates.push(token.value);\n    } else {\n      break;\n    }\n  }\n  if (coordinates.length == dimensions) {\n    return coordinates;\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @return {!Array.<!Array.<number>>} An array of points.\n * @private\n */\nParser.prototype.parsePointList_ = function() {\n  const coordinates = [this.parsePoint_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this.parsePoint_());\n  }\n  return coordinates;\n};\n\n\n/**\n * @return {!Array.<!Array.<number>>} An array of points.\n * @private\n */\nParser.prototype.parsePointTextList_ = function() {\n  const coordinates = [this.parsePointText_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this.parsePointText_());\n  }\n  return coordinates;\n};\n\n\n/**\n * @return {!Array.<!Array.<number>>} An array of points.\n * @private\n */\nParser.prototype.parseLineStringTextList_ = function() {\n  const coordinates = [this.parseLineStringText_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this.parseLineStringText_());\n  }\n  return coordinates;\n};\n\n\n/**\n * @return {!Array.<!Array.<number>>} An array of points.\n * @private\n */\nParser.prototype.parsePolygonTextList_ = function() {\n  const coordinates = [this.parsePolygonText_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this.parsePolygonText_());\n  }\n  return coordinates;\n};\n\n\n/**\n * @return {boolean} Whether the token implies an empty geometry.\n * @private\n */\nParser.prototype.isEmptyGeometry_ = function() {\n  const isEmpty = this.isTokenType(TokenType.TEXT) &&\n      this.token_.value == EMPTY;\n  if (isEmpty) {\n    this.consume_();\n  }\n  return isEmpty;\n};\n\n\n/**\n * Create an error message for an unexpected token error.\n * @return {string} Error message.\n * @private\n */\nParser.prototype.formatErrorMessage_ = function() {\n  return 'Unexpected `' + this.token_.value + '` at position ' +\n      this.token_.position + ' in `' + this.lexer_.wkt + '`';\n};\n\n\n/**\n * @classdesc\n * Geometry format for reading and writing data in the `WellKnownText` (WKT)\n * format.\n *\n * @constructor\n * @extends {module:ol/format/TextFeature}\n * @param {module:ol/format/WKT~Options=} opt_options Options.\n * @api\n */\nconst WKT = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  TextFeature.call(this);\n\n  /**\n   * Split GeometryCollection into multiple features.\n   * @type {boolean}\n   * @private\n   */\n  this.splitCollection_ = options.splitCollection !== undefined ?\n    options.splitCollection : false;\n\n};\n\ninherits(WKT, TextFeature);\n\n\n/**\n * @param {module:ol/geom/Point} geom Point geometry.\n * @return {string} Coordinates part of Point as WKT.\n */\nfunction encodePointGeometry(geom) {\n  const coordinates = geom.getCoordinates();\n  if (coordinates.length === 0) {\n    return '';\n  }\n  return coordinates.join(' ');\n}\n\n\n/**\n * @param {module:ol/geom/MultiPoint} geom MultiPoint geometry.\n * @return {string} Coordinates part of MultiPoint as WKT.\n */\nfunction encodeMultiPointGeometry(geom) {\n  const array = [];\n  const components = geom.getPoints();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePointGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {module:ol/geom/GeometryCollection} geom GeometryCollection geometry.\n * @return {string} Coordinates part of GeometryCollection as WKT.\n */\nfunction encodeGeometryCollectionGeometry(geom) {\n  const array = [];\n  const geoms = geom.getGeometries();\n  for (let i = 0, ii = geoms.length; i < ii; ++i) {\n    array.push(encode(geoms[i]));\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {module:ol/geom/LineString|module:ol/geom/LinearRing} geom LineString geometry.\n * @return {string} Coordinates part of LineString as WKT.\n */\nfunction encodeLineStringGeometry(geom) {\n  const coordinates = geom.getCoordinates();\n  const array = [];\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    array.push(coordinates[i].join(' '));\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {module:ol/geom/MultiLineString} geom MultiLineString geometry.\n * @return {string} Coordinates part of MultiLineString as WKT.\n */\nfunction encodeMultiLineStringGeometry(geom) {\n  const array = [];\n  const components = geom.getLineStrings();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {module:ol/geom/Polygon} geom Polygon geometry.\n * @return {string} Coordinates part of Polygon as WKT.\n */\nfunction encodePolygonGeometry(geom) {\n  const array = [];\n  const rings = geom.getLinearRings();\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(rings[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {module:ol/geom/MultiPolygon} geom MultiPolygon geometry.\n * @return {string} Coordinates part of MultiPolygon as WKT.\n */\nfunction encodeMultiPolygonGeometry(geom) {\n  const array = [];\n  const components = geom.getPolygons();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePolygonGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {module:ol/geom/SimpleGeometry} geom SimpleGeometry geometry.\n * @return {string} Potential dimensional information for WKT type.\n */\nfunction encodeGeometryLayout(geom) {\n  const layout = geom.getLayout();\n  let dimInfo = '';\n  if (layout === GeometryLayout.XYZ || layout === GeometryLayout.XYZM) {\n    dimInfo += Z;\n  }\n  if (layout === GeometryLayout.XYM || layout === GeometryLayout.XYZM) {\n    dimInfo += M;\n  }\n  return dimInfo;\n}\n\n\n/**\n * @const\n * @type {Object.<string, function(module:ol/geom/Geometry): string>}\n */\nconst GeometryEncoder = {\n  'Point': encodePointGeometry,\n  'LineString': encodeLineStringGeometry,\n  'Polygon': encodePolygonGeometry,\n  'MultiPoint': encodeMultiPointGeometry,\n  'MultiLineString': encodeMultiLineStringGeometry,\n  'MultiPolygon': encodeMultiPolygonGeometry,\n  'GeometryCollection': encodeGeometryCollectionGeometry\n};\n\n\n/**\n * Encode a geometry as WKT.\n * @param {module:ol/geom/Geometry} geom The geometry to encode.\n * @return {string} WKT string for the geometry.\n */\nfunction encode(geom) {\n  let type = geom.getType();\n  const geometryEncoder = GeometryEncoder[type];\n  const enc = geometryEncoder(geom);\n  type = type.toUpperCase();\n  if (geom instanceof SimpleGeometry) {\n    const dimInfo = encodeGeometryLayout(geom);\n    if (dimInfo.length > 0) {\n      type += ' ' + dimInfo;\n    }\n  }\n  if (enc.length === 0) {\n    return type + ' ' + EMPTY;\n  }\n  return type + '(' + enc + ')';\n}\n\n\n/**\n * Parse a WKT string.\n * @param {string} wkt WKT string.\n * @return {module:ol/geom/Geometry|undefined}\n *     The geometry created.\n * @private\n */\nWKT.prototype.parse_ = function(wkt) {\n  const lexer = new Lexer(wkt);\n  const parser = new Parser(lexer);\n  return parser.parse();\n};\n\n\n/**\n * Read a feature from a WKT source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/Feature} Feature.\n * @api\n */\nWKT.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nWKT.prototype.readFeatureFromText = function(text, opt_options) {\n  const geom = this.readGeometryFromText(text, opt_options);\n  if (geom) {\n    const feature = new Feature();\n    feature.setGeometry(geom);\n    return feature;\n  }\n  return null;\n};\n\n\n/**\n * Read all features from a WKT source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nWKT.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWKT.prototype.readFeaturesFromText = function(text, opt_options) {\n  let geometries = [];\n  const geometry = this.readGeometryFromText(text, opt_options);\n  if (this.splitCollection_ &&\n      geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    geometries = (/** @type {module:ol/geom/GeometryCollection} */ (geometry))\n      .getGeometriesArray();\n  } else {\n    geometries = [geometry];\n  }\n  const features = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    const feature = new Feature();\n    feature.setGeometry(geometries[i]);\n    features.push(feature);\n  }\n  return features;\n};\n\n\n/**\n * Read a single geometry from a WKT source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/Geometry} Geometry.\n * @api\n */\nWKT.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nWKT.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometry = this.parse_(text);\n  if (geometry) {\n    return (\n      /** @type {module:ol/geom/Geometry} */ (transformWithOptions(geometry, false, opt_options))\n    );\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @enum {function (new:module:ol/geom/Geometry, Array, module:ol/geom/GeometryLayout)}\n */\nconst GeometryConstructor = {\n  'POINT': Point,\n  'LINESTRING': LineString,\n  'POLYGON': Polygon,\n  'MULTIPOINT': MultiPoint,\n  'MULTILINESTRING': MultiLineString,\n  'MULTIPOLYGON': MultiPolygon\n};\n\n\n/**\n * @enum {(function(): Array)}\n */\nconst GeometryParser = {\n  'POINT': Parser.prototype.parsePointText_,\n  'LINESTRING': Parser.prototype.parseLineStringText_,\n  'POLYGON': Parser.prototype.parsePolygonText_,\n  'MULTIPOINT': Parser.prototype.parseMultiPointText_,\n  'MULTILINESTRING': Parser.prototype.parseMultiLineStringText_,\n  'MULTIPOLYGON': Parser.prototype.parseMultiPolygonText_\n};\n\n\n/**\n * @return {!module:ol/geom/Geometry} The geometry.\n * @private\n */\nParser.prototype.parseGeometry_ = function() {\n  const token = this.token_;\n  if (this.match(TokenType.TEXT)) {\n    const geomType = token.value;\n    this.layout_ = this.parseGeometryLayout_();\n    if (geomType == GeometryType.GEOMETRY_COLLECTION.toUpperCase()) {\n      const geometries = this.parseGeometryCollectionText_();\n      return new GeometryCollection(geometries);\n    } else {\n      const parser = GeometryParser[geomType];\n      const ctor = GeometryConstructor[geomType];\n      if (!parser || !ctor) {\n        throw new Error('Invalid geometry type: ' + geomType);\n      }\n      const coordinates = parser.call(this);\n      return new ctor(coordinates, this.layout_);\n    }\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * Encode a feature as a WKT string.\n *\n * @function\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} WKT string.\n * @api\n */\nWKT.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nWKT.prototype.writeFeatureText = function(feature, opt_options) {\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    return this.writeGeometryText(geometry, opt_options);\n  }\n  return '';\n};\n\n\n/**\n * Encode an array of features as a WKT string.\n *\n * @function\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} WKT string.\n * @api\n */\nWKT.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nWKT.prototype.writeFeaturesText = function(features, opt_options) {\n  if (features.length == 1) {\n    return this.writeFeatureText(features[0], opt_options);\n  }\n  const geometries = [];\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    geometries.push(features[i].getGeometry());\n  }\n  const collection = new GeometryCollection(geometries);\n  return this.writeGeometryText(collection, opt_options);\n};\n\n\n/**\n * Write a single geometry as a WKT string.\n *\n * @function\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} WKT string.\n * @api\n */\nWKT.prototype.writeGeometry;\n\n\n/**\n * @inheritDoc\n */\nWKT.prototype.writeGeometryText = function(geometry, opt_options) {\n  return encode(/** @type {module:ol/geom/Geometry} */ (\n    transformWithOptions(geometry, true, opt_options)));\n};\n\n\nexport default WKT;\n","/**\n * @module ol/format/EsriJSON\n */\nimport {inherits} from '../util.js';\nimport Feature from '../Feature.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport JSONFeature from '../format/JSONFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {linearRingIsClockwise} from '../geom/flat/orient.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @const\n * @type {Object.<module:ol/geom/GeometryType, function(EsriJSONGeometry): module:ol/geom/Geometry>}\n */\nconst GEOMETRY_READERS = {};\nGEOMETRY_READERS[GeometryType.POINT] = readPointGeometry;\nGEOMETRY_READERS[GeometryType.LINE_STRING] = readLineStringGeometry;\nGEOMETRY_READERS[GeometryType.POLYGON] = readPolygonGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_POINT] = readMultiPointGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_LINE_STRING] = readMultiLineStringGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_POLYGON] = readMultiPolygonGeometry;\n\n\n/**\n * @const\n * @type {Object.<string, function(module:ol/geom/Geometry, module:ol/format/Feature~WriteOptions=): (EsriJSONGeometry)>}\n */\nconst GEOMETRY_WRITERS = {};\nGEOMETRY_WRITERS[GeometryType.POINT] = writePointGeometry;\nGEOMETRY_WRITERS[GeometryType.LINE_STRING] = writeLineStringGeometry;\nGEOMETRY_WRITERS[GeometryType.POLYGON] = writePolygonGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_POINT] = writeMultiPointGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_LINE_STRING] = writeMultiLineStringGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_POLYGON] = writeMultiPolygonGeometry;\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [geometryName] Geometry name to use when creating features.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the EsriJSON format.\n *\n * @constructor\n * @extends {module:ol/format/JSONFeature}\n * @param {module:ol/format/EsriJSON~Options=} opt_options Options.\n * @api\n */\nconst EsriJSON = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  JSONFeature.call(this);\n\n  /**\n   * Name of the geometry attribute for features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n};\n\ninherits(EsriJSON, JSONFeature);\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/Geometry} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n  /** @type {module:ol/geom/GeometryType} */\n  let type;\n  if (typeof object.x === 'number' && typeof object.y === 'number') {\n    type = GeometryType.POINT;\n  } else if (object.points) {\n    type = GeometryType.MULTI_POINT;\n  } else if (object.paths) {\n    if (object.paths.length === 1) {\n      type = GeometryType.LINE_STRING;\n    } else {\n      type = GeometryType.MULTI_LINE_STRING;\n    }\n  } else if (object.rings) {\n    const layout = getGeometryLayout(object);\n    const rings = convertRings(object.rings, layout);\n    object = /** @type {EsriJSONGeometry} */(assign({}, object));\n    if (rings.length === 1) {\n      type = GeometryType.POLYGON;\n      object.rings = rings[0];\n    } else {\n      type = GeometryType.MULTI_POLYGON;\n      object.rings = rings;\n    }\n  }\n  const geometryReader = GEOMETRY_READERS[type];\n  return (\n    /** @type {module:ol/geom/Geometry} */ (transformWithOptions(geometryReader(object), false, opt_options))\n  );\n}\n\n\n/**\n * Determines inner and outer rings.\n * Checks if any polygons in this array contain any other polygons in this\n * array. It is used for checking for holes.\n * Logic inspired by: https://github.com/Esri/terraformer-arcgis-parser\n * @param {Array.<!Array.<!Array.<number>>>} rings Rings.\n * @param {module:ol/geom/GeometryLayout} layout Geometry layout.\n * @return {Array.<!Array.<!Array.<number>>>} Transformed rings.\n */\nfunction convertRings(rings, layout) {\n  const flatRing = [];\n  const outerRings = [];\n  const holes = [];\n  let i, ii;\n  for (i = 0, ii = rings.length; i < ii; ++i) {\n    flatRing.length = 0;\n    deflateCoordinates(flatRing, 0, rings[i], layout.length);\n    // is this ring an outer ring? is it clockwise?\n    const clockwise = linearRingIsClockwise(flatRing, 0,\n      flatRing.length, layout.length);\n    if (clockwise) {\n      outerRings.push([rings[i]]);\n    } else {\n      holes.push(rings[i]);\n    }\n  }\n  while (holes.length) {\n    const hole = holes.shift();\n    let matched = false;\n    // loop over all outer rings and see if they contain our hole.\n    for (i = outerRings.length - 1; i >= 0; i--) {\n      const outerRing = outerRings[i][0];\n      const containsHole = containsExtent(\n        new LinearRing(outerRing).getExtent(),\n        new LinearRing(hole).getExtent()\n      );\n      if (containsHole) {\n        // the hole is contained push it into our polygon\n        outerRings[i].push(hole);\n        matched = true;\n        break;\n      }\n    }\n    if (!matched) {\n      // no outer rings contain this hole turn it into and outer\n      // ring (reverse it)\n      outerRings.push([hole.reverse()]);\n    }\n  }\n  return outerRings;\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} Point.\n */\nfunction readPointGeometry(object) {\n  let point;\n  if (object.m !== undefined && object.z !== undefined) {\n    point = new Point([object.x, object.y, object.z, object.m],\n      GeometryLayout.XYZM);\n  } else if (object.z !== undefined) {\n    point = new Point([object.x, object.y, object.z],\n      GeometryLayout.XYZ);\n  } else if (object.m !== undefined) {\n    point = new Point([object.x, object.y, object.m],\n      GeometryLayout.XYM);\n  } else {\n    point = new Point([object.x, object.y]);\n  }\n  return point;\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} LineString.\n */\nfunction readLineStringGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new LineString(object.paths[0], layout);\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new MultiLineString(object.paths, layout);\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/GeometryLayout} The geometry layout to use.\n */\nfunction getGeometryLayout(object) {\n  let layout = GeometryLayout.XY;\n  if (object.hasZ === true && object.hasM === true) {\n    layout = GeometryLayout.XYZM;\n  } else if (object.hasZ === true) {\n    layout = GeometryLayout.XYZ;\n  } else if (object.hasM === true) {\n    layout = GeometryLayout.XYM;\n  }\n  return layout;\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new MultiPoint(object.points, layout);\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new MultiPolygon(\n    /** @type {Array.<Array.<Array.<Array.<number>>>>} */(object.rings),\n    layout);\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new Polygon(object.rings, layout);\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONGeometry} EsriJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  const coordinates = /** @type {module:ol/geom/Point} */ (geometry).getCoordinates();\n  let esriJSON;\n  const layout = /** @type {module:ol/geom/Point} */ (geometry).getLayout();\n  if (layout === GeometryLayout.XYZ) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1],\n      z: coordinates[2]\n    });\n  } else if (layout === GeometryLayout.XYM) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1],\n      m: coordinates[2]\n    });\n  } else if (layout === GeometryLayout.XYZM) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1],\n      z: coordinates[2],\n      m: coordinates[3]\n    });\n  } else if (layout === GeometryLayout.XY) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1]\n    });\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n  return /** @type {EsriJSONGeometry} */ (esriJSON);\n}\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @return {Object} Object with boolean hasZ and hasM keys.\n */\nfunction getHasZM(geometry) {\n  const layout = geometry.getLayout();\n  return {\n    hasZ: (layout === GeometryLayout.XYZ ||\n      layout === GeometryLayout.XYZM),\n    hasM: (layout === GeometryLayout.XYM ||\n      layout === GeometryLayout.XYZM)\n  };\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  const hasZM = getHasZM(/** @type {module:ol/geom/LineString} */(geometry));\n  return (\n    /** @type {EsriJSONPolyline} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      paths: [\n        /** @type {module:ol/geom/LineString} */ (geometry).getCoordinates()\n      ]\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  // Esri geometries use the left-hand rule\n  const hasZM = getHasZM(/** @type {module:ol/geom/Polygon} */(geometry));\n  return (\n    /** @type {EsriJSONPolygon} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      rings: /** @type {module:ol/geom/Polygon} */ (geometry).getCoordinates(false)\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  const hasZM = getHasZM(/** @type {module:ol/geom/MultiLineString} */(geometry));\n  return (\n    /** @type {EsriJSONPolyline} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      paths: /** @type {module:ol/geom/MultiLineString} */ (geometry).getCoordinates()\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONMultipoint} EsriJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  const hasZM = getHasZM(/** @type {module:ol/geom/MultiPoint} */(geometry));\n  return (\n    /** @type {EsriJSONMultipoint} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      points: /** @type {module:ol/geom/MultiPoint} */ (geometry).getCoordinates()\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  const hasZM = getHasZM(/** @type {module:ol/geom/MultiPolygon} */(geometry));\n  const coordinates = /** @type {module:ol/geom/MultiPolygon} */ (geometry).getCoordinates(false);\n  const output = [];\n  for (let i = 0; i < coordinates.length; i++) {\n    for (let x = coordinates[i].length - 1; x >= 0; x--) {\n      output.push(coordinates[i][x]);\n    }\n  }\n  return /** @type {EsriJSONPolygon} */ ({\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    rings: output\n  });\n}\n\n\n/**\n * Read a feature from a EsriJSON Feature source.  Only works for Feature,\n * use `readFeatures` to read FeatureCollection source.\n *\n * @function\n * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/Feature} Feature.\n * @api\n */\nEsriJSON.prototype.readFeature;\n\n\n/**\n * Read all features from a EsriJSON source.  Works with both Feature and\n * FeatureCollection sources.\n *\n * @function\n * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nEsriJSON.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nEsriJSON.prototype.readFeatureFromObject = function(object, opt_options) {\n  const esriJSONFeature = /** @type {EsriJSONFeature} */ (object);\n  const geometry = readGeometry(esriJSONFeature.geometry, opt_options);\n  const feature = new Feature();\n  if (this.geometryName_) {\n    feature.setGeometryName(this.geometryName_);\n  }\n  feature.setGeometry(geometry);\n  if (opt_options && opt_options.idField &&\n    esriJSONFeature.attributes[opt_options.idField]) {\n    feature.setId(/** @type {number} */(esriJSONFeature.attributes[opt_options.idField]));\n  }\n  if (esriJSONFeature.attributes) {\n    feature.setProperties(esriJSONFeature.attributes);\n  }\n  return feature;\n};\n\n\n/**\n * @inheritDoc\n */\nEsriJSON.prototype.readFeaturesFromObject = function(object, opt_options) {\n  const esriJSONObject = /** @type {EsriJSONObject} */ (object);\n  const options = opt_options ? opt_options : {};\n  if (esriJSONObject.features) {\n    const esriJSONFeatureCollection = /** @type {EsriJSONFeatureCollection} */ (object);\n    /** @type {Array.<module:ol/Feature>} */\n    const features = [];\n    const esriJSONFeatures = esriJSONFeatureCollection.features;\n    options.idField = object.objectIdFieldName;\n    for (let i = 0, ii = esriJSONFeatures.length; i < ii; ++i) {\n      features.push(this.readFeatureFromObject(esriJSONFeatures[i], options));\n    }\n    return features;\n  } else {\n    return [this.readFeatureFromObject(object, options)];\n  }\n};\n\n\n/**\n * Read a geometry from a EsriJSON source.\n *\n * @function\n * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/Geometry} Geometry.\n * @api\n */\nEsriJSON.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nEsriJSON.prototype.readGeometryFromObject = function(object, opt_options) {\n  return readGeometry(/** @type {EsriJSONGeometry} */(object), opt_options);\n};\n\n\n/**\n * Read the projection from a EsriJSON source.\n *\n * @function\n * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n * @return {module:ol/proj/Projection} Projection.\n * @api\n */\nEsriJSON.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nEsriJSON.prototype.readProjectionFromObject = function(object) {\n  const esriJSONObject = /** @type {EsriJSONObject} */ (object);\n  if (esriJSONObject.spatialReference && esriJSONObject.spatialReference.wkid) {\n    const crs = esriJSONObject.spatialReference.wkid;\n    return getProjection('EPSG:' + crs);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONGeometry} EsriJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  const geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n  return geometryWriter(/** @type {module:ol/geom/Geometry} */(\n    transformWithOptions(geometry, true, opt_options)), opt_options);\n}\n\n\n/**\n * Encode a geometry as a EsriJSON string.\n *\n * @function\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} EsriJSON.\n * @api\n */\nEsriJSON.prototype.writeGeometry;\n\n\n/**\n * Encode a geometry as a EsriJSON object.\n *\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONGeometry} Object.\n * @override\n * @api\n */\nEsriJSON.prototype.writeGeometryObject = function(geometry, opt_options) {\n  return writeGeometry(geometry, this.adaptOptions(opt_options));\n};\n\n\n/**\n * Encode a feature as a EsriJSON Feature string.\n *\n * @function\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} EsriJSON.\n * @api\n */\nEsriJSON.prototype.writeFeature;\n\n\n/**\n * Encode a feature as a esriJSON Feature object.\n *\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n * @override\n * @api\n */\nEsriJSON.prototype.writeFeatureObject = function(feature, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const object = {};\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    object['geometry'] = writeGeometry(geometry, opt_options);\n    if (opt_options && opt_options.featureProjection) {\n      object['geometry']['spatialReference'] = /** @type {EsriJSONCRS} */({\n        wkid: getProjection(opt_options.featureProjection).getCode().split(':').pop()\n      });\n    }\n  }\n  const properties = feature.getProperties();\n  delete properties[feature.getGeometryName()];\n  if (!isEmpty(properties)) {\n    object['attributes'] = properties;\n  } else {\n    object['attributes'] = {};\n  }\n  return object;\n};\n\n\n/**\n * Encode an array of features as EsriJSON.\n *\n * @function\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} EsriJSON.\n * @api\n */\nEsriJSON.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features as a EsriJSON object.\n *\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {Object} EsriJSON Object.\n * @override\n * @api\n */\nEsriJSON.prototype.writeFeaturesObject = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const objects = [];\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    objects.push(this.writeFeatureObject(features[i], opt_options));\n  }\n  return /** @type {EsriJSONFeatureCollection} */ ({\n    'features': objects\n  });\n};\n\nexport default EsriJSON;\n","/**\n * @module ol/source/ImageStatic\n */\nimport {inherits} from '../util.js';\nimport ImageWrapper from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {intersects, getHeight, getWidth} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport ImageSource, {defaultImageLoadFunction} from '../source/Image.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {module:ol/extent~Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {module:ol/Image~LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {module:ol/size~Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n *\n * @constructor\n * @extends {module:ol/source/Image}\n * @param {module:ol/source/ImageStatic~Options=} options ImageStatic options.\n * @api\n */\nconst Static = function(options) {\n  const imageExtent = options.imageExtent;\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : null;\n\n  const /** @type {module:ol/Image~LoadFunction} */ imageLoadFunction =\n      options.imageLoadFunction !== undefined ?\n        options.imageLoadFunction : defaultImageLoadFunction;\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: getProjection(options.projection)\n  });\n\n  /**\n   * @private\n   * @type {module:ol/Image}\n   */\n  this.image_ = new ImageWrapper(imageExtent, undefined, 1, options.url, crossOrigin, imageLoadFunction);\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.imageSize_ = options.imageSize ? options.imageSize : null;\n\n  listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n};\n\ninherits(Static, ImageSource);\n\n\n/**\n * @inheritDoc\n */\nStatic.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n  if (intersects(extent, this.image_.getExtent())) {\n    return this.image_;\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nStatic.prototype.handleImageChange = function(evt) {\n  if (this.image_.getState() == ImageState.LOADED) {\n    const imageExtent = this.image_.getExtent();\n    const image = this.image_.getImage();\n    let imageWidth, imageHeight;\n    if (this.imageSize_) {\n      imageWidth = this.imageSize_[0];\n      imageHeight = this.imageSize_[1];\n    } else {\n      imageWidth = image.width;\n      imageHeight = image.height;\n    }\n    const resolution = getHeight(imageExtent) / imageHeight;\n    const targetWidth = Math.ceil(getWidth(imageExtent) / resolution);\n    if (targetWidth != imageWidth) {\n      const context = createCanvasContext2D(targetWidth, imageHeight);\n      const canvas = context.canvas;\n      context.drawImage(image, 0, 0, imageWidth, imageHeight,\n        0, 0, canvas.width, canvas.height);\n      this.image_.setImage(canvas);\n    }\n  }\n  ImageSource.prototype.handleImageChange.call(this, evt);\n};\nexport default Static;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array.<module:ol/coordinate~Coordinate>} source\n * @property {Array.<module:ol/coordinate~Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n *\n * @param {module:ol/proj/Projection} sourceProj Source projection.\n * @param {module:ol/proj/Projection} targetProj Target projection.\n * @param {module:ol/extent~Extent} targetExtent Target extent to triangulate.\n * @param {module:ol/extent~Extent} maxSourceExtent Maximal source extent that can be used.\n * @param {number} errorThreshold Acceptable error (in source units).\n * @constructor\n */\nconst Triangulation = function(sourceProj, targetProj, targetExtent,\n  maxSourceExtent, errorThreshold) {\n\n  /**\n   * @type {module:ol/proj/Projection}\n   * @private\n   */\n  this.sourceProj_ = sourceProj;\n\n  /**\n   * @type {module:ol/proj/Projection}\n   * @private\n   */\n  this.targetProj_ = targetProj;\n\n  /** @type {!Object.<string, module:ol/coordinate~Coordinate>} */\n  let transformInvCache = {};\n  const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} c A coordinate.\n   * @return {module:ol/coordinate~Coordinate} Transformed coordinate.\n   * @private\n   */\n  this.transformInv_ = function(c) {\n    const key = c[0] + '/' + c[1];\n    if (!transformInvCache[key]) {\n      transformInvCache[key] = transformInv(c);\n    }\n    return transformInvCache[key];\n  };\n\n  /**\n   * @type {module:ol/extent~Extent}\n   * @private\n   */\n  this.maxSourceExtent_ = maxSourceExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n  /**\n   * @type {Array.<module:ol/reproj/Triangulation~Triangle>}\n   * @private\n   */\n  this.triangles_ = [];\n\n  /**\n   * Indicates that the triangulation crosses edge of the source projection.\n   * @type {boolean}\n   * @private\n   */\n  this.wrapsXInSource_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n    getWidth(this.sourceProj_.getExtent()) : null;\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n    getWidth(this.targetProj_.getExtent()) : null;\n\n  const destinationTopLeft = getTopLeft(targetExtent);\n  const destinationTopRight = getTopRight(targetExtent);\n  const destinationBottomRight = getBottomRight(targetExtent);\n  const destinationBottomLeft = getBottomLeft(targetExtent);\n  const sourceTopLeft = this.transformInv_(destinationTopLeft);\n  const sourceTopRight = this.transformInv_(destinationTopRight);\n  const sourceBottomRight = this.transformInv_(destinationBottomRight);\n  const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n  this.addQuad_(\n    destinationTopLeft, destinationTopRight,\n    destinationBottomRight, destinationBottomLeft,\n    sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n    MAX_SUBDIVISION);\n\n  if (this.wrapsXInSource_) {\n    let leftBound = Infinity;\n    this.triangles_.forEach(function(triangle, i, arr) {\n      leftBound = Math.min(leftBound,\n        triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n    });\n\n    // Shift triangles to be as close to `leftBound` as possible\n    // (if the distance is more than `worldWidth / 2` it can be closer.\n    this.triangles_.forEach(function(triangle) {\n      if (Math.max(triangle.source[0][0], triangle.source[1][0],\n        triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n        const newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n          [triangle.source[1][0], triangle.source[1][1]],\n          [triangle.source[2][0], triangle.source[2][1]]];\n        if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[0][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[1][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[2][0] -= this.sourceWorldWidth_;\n        }\n\n        // Rarely (if the extent contains both the dateline and prime meridian)\n        // the shift can in turn break some triangles.\n        // Detect this here and don't shift in such cases.\n        const minX = Math.min(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        const maxX = Math.max(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n          triangle.source = newTriangle;\n        }\n      }\n    }.bind(this));\n  }\n\n  transformInvCache = {};\n};\n\n\n/**\n * Adds triangle to the triangulation.\n * @param {module:ol/coordinate~Coordinate} a The target a coordinate.\n * @param {module:ol/coordinate~Coordinate} b The target b coordinate.\n * @param {module:ol/coordinate~Coordinate} c The target c coordinate.\n * @param {module:ol/coordinate~Coordinate} aSrc The source a coordinate.\n * @param {module:ol/coordinate~Coordinate} bSrc The source b coordinate.\n * @param {module:ol/coordinate~Coordinate} cSrc The source c coordinate.\n * @private\n */\nTriangulation.prototype.addTriangle_ = function(a, b, c,\n  aSrc, bSrc, cSrc) {\n  this.triangles_.push({\n    source: [aSrc, bSrc, cSrc],\n    target: [a, b, c]\n  });\n};\n\n\n/**\n * Adds quad (points in clock-wise order) to the triangulation\n * (and reprojects the vertices) if valid.\n * Performs quad subdivision if needed to increase precision.\n *\n * @param {module:ol/coordinate~Coordinate} a The target a coordinate.\n * @param {module:ol/coordinate~Coordinate} b The target b coordinate.\n * @param {module:ol/coordinate~Coordinate} c The target c coordinate.\n * @param {module:ol/coordinate~Coordinate} d The target d coordinate.\n * @param {module:ol/coordinate~Coordinate} aSrc The source a coordinate.\n * @param {module:ol/coordinate~Coordinate} bSrc The source b coordinate.\n * @param {module:ol/coordinate~Coordinate} cSrc The source c coordinate.\n * @param {module:ol/coordinate~Coordinate} dSrc The source d coordinate.\n * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n * @private\n */\nTriangulation.prototype.addQuad_ = function(a, b, c, d,\n  aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n  const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n  const sourceCoverageX = this.sourceWorldWidth_ ?\n    getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n  const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n  // when the quad is wrapped in the source projection\n  // it covers most of the projection extent, but not fully\n  const wrapsX = this.sourceProj_.canWrapX() &&\n               sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n  let needsSubdivision = false;\n\n  if (maxSubdivision > 0) {\n    if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n      const targetQuadExtent = boundingExtent([a, b, c, d]);\n      const targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n      needsSubdivision |=\n          targetCoverageX > MAX_TRIANGLE_WIDTH;\n    }\n    if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n      needsSubdivision |=\n          sourceCoverageX > MAX_TRIANGLE_WIDTH;\n    }\n  }\n\n  if (!needsSubdivision && this.maxSourceExtent_) {\n    if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n      // whole quad outside source projection extent -> ignore\n      return;\n    }\n  }\n\n  if (!needsSubdivision) {\n    if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n      if (maxSubdivision > 0) {\n        needsSubdivision = true;\n      } else {\n        return;\n      }\n    }\n  }\n\n  if (maxSubdivision > 0) {\n    if (!needsSubdivision) {\n      const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n      const centerSrc = this.transformInv_(center);\n\n      let dx;\n      if (wrapsX) {\n        const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n             modulo(cSrc[0], sourceWorldWidth)) / 2;\n        dx = centerSrcEstimX -\n            modulo(centerSrc[0], sourceWorldWidth);\n      } else {\n        dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n      }\n      const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n      const centerSrcErrorSquared = dx * dx + dy * dy;\n      needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n    }\n    if (needsSubdivision) {\n      if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n        // split horizontally (top & bottom)\n        const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n        const bcSrc = this.transformInv_(bc);\n        const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n        const daSrc = this.transformInv_(da);\n\n        this.addQuad_(\n          a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n        this.addQuad_(\n          da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n      } else {\n        // split vertically (left & right)\n        const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n        const abSrc = this.transformInv_(ab);\n        const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n        const cdSrc = this.transformInv_(cd);\n\n        this.addQuad_(\n          a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n        this.addQuad_(\n          ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n      }\n      return;\n    }\n  }\n\n  if (wrapsX) {\n    if (!this.canWrapXInSource_) {\n      return;\n    }\n    this.wrapsXInSource_ = true;\n  }\n\n  this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n  this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n};\n\n\n/**\n * Calculates extent of the 'source' coordinates from all the triangles.\n *\n * @return {module:ol/extent~Extent} Calculated extent.\n */\nTriangulation.prototype.calculateSourceExtent = function() {\n  const extent = createEmpty();\n\n  this.triangles_.forEach(function(triangle, i, arr) {\n    const src = triangle.source;\n    extendCoordinate(extent, src[0]);\n    extendCoordinate(extent, src[1]);\n    extendCoordinate(extent, src[2]);\n  });\n\n  return extent;\n};\n\n\n/**\n * @return {Array.<module:ol/reproj/Triangulation~Triangle>} Array of the calculated triangles.\n */\nTriangulation.prototype.getTriangles = function() {\n  return this.triangles_;\n};\nexport default Triangulation;\n","/**\n * @module ol/TileCache\n */\nimport {inherits} from './util.js';\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\n/**\n * @constructor\n * @extends {module:ol/structs/LRUCache.<module:ol/Tile>}\n * @param {number=} opt_highWaterMark High water mark.\n * @struct\n */\nconst TileCache = function(opt_highWaterMark) {\n\n  LRUCache.call(this, opt_highWaterMark);\n\n};\n\ninherits(TileCache, LRUCache);\n\n\n/**\n * @param {!Object.<string, module:ol/TileRange>} usedTiles Used tiles.\n */\nTileCache.prototype.expireCache = function(usedTiles) {\n  while (this.canExpireCache()) {\n    const tile = this.peekLast();\n    const zKey = tile.tileCoord[0].toString();\n    if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n      break;\n    } else {\n      this.pop().dispose();\n    }\n  }\n};\n\n\n/**\n * Prune all tiles from the cache that don't have the same z as the newest tile.\n */\nTileCache.prototype.pruneExceptNewestZ = function() {\n  if (this.getCount() === 0) {\n    return;\n  }\n  const key = this.peekFirstKey();\n  const tileCoord = fromKey(key);\n  const z = tileCoord[0];\n  this.forEach(function(tile) {\n    if (tile.tileCoord[0] !== z) {\n      this.remove(getKey(tile.tileCoord));\n      tile.dispose();\n    }\n  }, this);\n};\nexport default TileCache;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n","/**\n * @module ol/featureloader\n */\nimport {UNDEFINED} from './functions.js';\nimport FormatType from './format/FormatType.js';\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:module:ol/source/Vector, module:ol/extent~Extent, number,\n *                    module:ol/proj/Projection)} FeatureLoader\n * @api\n */\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(module:ol/extent~Extent, number, module:ol/proj/Projection): string} FeatureUrlFunction\n * @api\n */\n\n\n/**\n * @param {string|module:ol/featureloader~FeatureUrlFunction} url Feature URL service.\n * @param {module:ol/format/Feature} format Feature format.\n * @param {function(this:module:ol/VectorTile, Array.<module:ol/Feature>, module:ol/proj/Projection, module:ol/extent~Extent)|function(this:module:ol/source/Vector, Array.<module:ol/Feature>)} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:module:ol/VectorTile)|function(this:module:ol/source/Vector)} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {module:ol/featureloader~FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {module:ol/extent~Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @this {module:ol/source/Vector|module:ol/VectorTile}\n     */\n    function(extent, resolution, projection) {\n      const xhr = new XMLHttpRequest();\n      xhr.open('GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true);\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          const type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          let source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source,\n              {featureProjection: projection}),\n            format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|module:ol/featureloader~FeatureUrlFunction} url Feature URL service.\n * @param {module:ol/format/Feature} format Feature format.\n * @return {module:ol/featureloader~FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n    /**\n     * @param {Array.<module:ol/Feature>} features The loaded features.\n     * @param {module:ol/proj/Projection} dataProjection Data\n     * projection.\n     * @this {module:ol/source/Vector}\n     */\n    function(features, dataProjection) {\n      this.addFeatures(features);\n    }, /* FIXME handle error */ UNDEFINED);\n}\n","/**\n * @module ol/layer/VectorRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array.<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport {inherits} from '../util.js';\nimport {TRUE} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from '../interaction/Interaction.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array.<function(new: module:ol/format/Feature)>} [formatConstructors] Format constructors.\n * @property {module:ol/source/Vector} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {module:ol/proj~ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {Element} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n\n/**\n * @enum {string}\n */\nconst DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event module:ol/interaction/DragAndDrop~DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/interaction/DragAndDrop~DragAndDropEventType} type Type.\n * @param {File} file File.\n * @param {Array.<module:ol/Feature>=} opt_features Features.\n * @param {module:ol/proj/Projection=} opt_projection Projection.\n */\nconst DragAndDropEvent = function(type, file, opt_features, opt_projection) {\n\n  Event.call(this, type);\n\n  /**\n   * The features parsed from dropped data.\n   * @type {Array.<module:ol/Feature>|undefined}\n   * @api\n   */\n  this.features = opt_features;\n\n  /**\n   * The dropped file.\n   * @type {File}\n   * @api\n   */\n  this.file = file;\n\n  /**\n   * The feature projection.\n   * @type {module:ol/proj/Projection|undefined}\n   * @api\n   */\n  this.projection = opt_projection;\n\n};\ninherits(DragAndDropEvent, Event);\n\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @fires module:ol/interaction/DragAndDrop~DragAndDropEvent\n * @param {module:ol/interaction/DragAndDrop~Options=} opt_options Options.\n * @api\n */\nconst DragAndDrop = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  Interaction.call(this, {\n    handleEvent: TRUE\n  });\n\n  /**\n   * @private\n   * @type {Array.<function(new: module:ol/format/Feature)>}\n   */\n  this.formatConstructors_ = options.formatConstructors ?\n    options.formatConstructors : [];\n\n  /**\n   * @private\n   * @type {module:ol/proj/Projection}\n   */\n  this.projection_ = options.projection ?\n    getProjection(options.projection) : null;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.dropListenKeys_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/source/Vector}\n   */\n  this.source_ = options.source || null;\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.target = options.target ? options.target : null;\n\n};\n\ninherits(DragAndDrop, Interaction);\n\n\n/**\n * @param {DragEvent} event Event.\n * @this {module:ol/interaction/DragAndDrop}\n */\nfunction handleDrop(event) {\n  const files = event.dataTransfer.files;\n  for (let i = 0, ii = files.length; i < ii; ++i) {\n    const file = files.item(i);\n    const reader = new FileReader();\n    reader.addEventListener(EventType.LOAD, this.handleResult_.bind(this, file));\n    reader.readAsText(file);\n  }\n}\n\n\n/**\n * @param {DragEvent} event Event.\n */\nfunction handleStop(event) {\n  event.stopPropagation();\n  event.preventDefault();\n  event.dataTransfer.dropEffect = 'copy';\n}\n\n\n/**\n * @param {File} file File.\n * @param {Event} event Load event.\n * @private\n */\nDragAndDrop.prototype.handleResult_ = function(file, event) {\n  const result = event.target.result;\n  const map = this.getMap();\n  let projection = this.projection_;\n  if (!projection) {\n    const view = map.getView();\n    projection = view.getProjection();\n  }\n\n  const formatConstructors = this.formatConstructors_;\n  let features = [];\n  for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\n    /**\n     * Avoid \"cannot instantiate abstract class\" error.\n     * @type {Function}\n     */\n    const formatConstructor = formatConstructors[i];\n    /**\n     * @type {module:ol/format/Feature}\n     */\n    const format = new formatConstructor();\n    features = this.tryReadFeatures_(format, result, {\n      featureProjection: projection\n    });\n    if (features && features.length > 0) {\n      break;\n    }\n  }\n  if (this.source_) {\n    this.source_.clear();\n    this.source_.addFeatures(features);\n  }\n  this.dispatchEvent(\n    new DragAndDropEvent(\n      DragAndDropEventType.ADD_FEATURES, file,\n      features, projection));\n};\n\n\n/**\n * @private\n */\nDragAndDrop.prototype.registerListeners_ = function() {\n  const map = this.getMap();\n  if (map) {\n    const dropArea = this.target ? this.target : map.getViewport();\n    this.dropListenKeys_ = [\n      listen(dropArea, EventType.DROP, handleDrop, this),\n      listen(dropArea, EventType.DRAGENTER, handleStop, this),\n      listen(dropArea, EventType.DRAGOVER, handleStop, this),\n      listen(dropArea, EventType.DROP, handleStop, this)\n    ];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nDragAndDrop.prototype.setActive = function(active) {\n  Interaction.prototype.setActive.call(this, active);\n  if (active) {\n    this.registerListeners_();\n  } else {\n    this.unregisterListeners_();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nDragAndDrop.prototype.setMap = function(map) {\n  this.unregisterListeners_();\n  Interaction.prototype.setMap.call(this, map);\n  if (this.getActive()) {\n    this.registerListeners_();\n  }\n};\n\n\n/**\n * @param {module:ol/format/Feature} format Format.\n * @param {string} text Text.\n * @param {module:ol/format/Feature~ReadOptions} options Read options.\n * @private\n * @return {Array.<module:ol/Feature>} Features.\n */\nDragAndDrop.prototype.tryReadFeatures_ = function(format, text, options) {\n  try {\n    return format.readFeatures(text, options);\n  } catch (e) {\n    return null;\n  }\n};\n\n\n/**\n * @private\n */\nDragAndDrop.prototype.unregisterListeners_ = function() {\n  if (this.dropListenKeys_) {\n    this.dropListenKeys_.forEach(unlistenByKey);\n    this.dropListenKeys_ = null;\n  }\n};\n\n\nexport default DragAndDrop;\n","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, module:ol/coordinate~Coordinate, module:ol/coordinate~Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  const point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const point2 = [];\n  let ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n","/**\n * @module ol/TileQueue\n */\nimport {inherits} from './util.js';\nimport TileState from './TileState.js';\nimport {listen, unlisten} from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n\n\n/**\n * @typedef {function(module:ol/Tile, string, module:ol/coordinate~Coordinate, number): number} PriorityFunction\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/structs/PriorityQueue.<Array>}\n * @param {module:ol/TileQueue~PriorityFunction} tilePriorityFunction\n *     Tile priority function.\n * @param {function(): ?} tileChangeCallback\n *     Function called on each tile change event.\n * @struct\n */\nconst TileQueue = function(tilePriorityFunction, tileChangeCallback) {\n\n  PriorityQueue.call(\n    this,\n    /**\n     * @param {Array} element Element.\n     * @return {number} Priority.\n     */\n    function(element) {\n      return tilePriorityFunction.apply(null, element);\n    },\n    /**\n     * @param {Array} element Element.\n     * @return {string} Key.\n     */\n    function(element) {\n      return (/** @type {module:ol/Tile} */ (element[0]).getKey());\n    });\n\n  /**\n   * @private\n   * @type {function(): ?}\n   */\n  this.tileChangeCallback_ = tileChangeCallback;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.tilesLoading_ = 0;\n\n  /**\n   * @private\n   * @type {!Object.<string,boolean>}\n   */\n  this.tilesLoadingKeys_ = {};\n\n};\n\ninherits(TileQueue, PriorityQueue);\n\n\n/**\n * @inheritDoc\n */\nTileQueue.prototype.enqueue = function(element) {\n  const added = PriorityQueue.prototype.enqueue.call(this, element);\n  if (added) {\n    const tile = element[0];\n    listen(tile, EventType.CHANGE, this.handleTileChange, this);\n  }\n  return added;\n};\n\n\n/**\n * @return {number} Number of tiles loading.\n */\nTileQueue.prototype.getTilesLoading = function() {\n  return this.tilesLoading_;\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n * @protected\n */\nTileQueue.prototype.handleTileChange = function(event) {\n  const tile = /** @type {module:ol/Tile} */ (event.target);\n  const state = tile.getState();\n  if (state === TileState.LOADED || state === TileState.ERROR ||\n      state === TileState.EMPTY || state === TileState.ABORT) {\n    unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n    const tileKey = tile.getKey();\n    if (tileKey in this.tilesLoadingKeys_) {\n      delete this.tilesLoadingKeys_[tileKey];\n      --this.tilesLoading_;\n    }\n    this.tileChangeCallback_();\n  }\n};\n\n\n/**\n * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n * @param {number} maxNewLoads Maximum number of new tiles to load.\n */\nTileQueue.prototype.loadMoreTiles = function(maxTotalLoading, maxNewLoads) {\n  let newLoads = 0;\n  let abortedTiles = false;\n  let state, tile, tileKey;\n  while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n         this.getCount() > 0) {\n    tile = /** @type {module:ol/Tile} */ (this.dequeue()[0]);\n    tileKey = tile.getKey();\n    state = tile.getState();\n    if (state === TileState.ABORT) {\n      abortedTiles = true;\n    } else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n      this.tilesLoadingKeys_[tileKey] = true;\n      ++this.tilesLoading_;\n      ++newLoads;\n      tile.load();\n    }\n  }\n  if (newLoads === 0 && abortedTiles) {\n    // Do not stop the render loop when all wanted tiles were aborted due to\n    // a small, saturated tile cache.\n    this.tileChangeCallback_();\n  }\n};\nexport default TileQueue;\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION, inherits} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error}\n * @constructor\n * @extends {Error}\n * @param {number} code Error code.\n */\nconst AssertionError = function(code) {\n\n  const path = VERSION.split('-')[0];\n\n  /**\n   * @type {string}\n   */\n  this.message = 'Assertion failed. See https://openlayers.org/en/' + path +\n      '/doc/errors/#' + code + ' for details.';\n\n  /**\n   * Error code. The meaning of the code can be found on\n   * {@link https://openlayers.org/en/latest/doc/errors/} (replace `latest` with\n   * the version found in the OpenLayers script's header comment if a version\n   * other than the latest is used).\n   * @type {number}\n   * @api\n   */\n  this.code = code;\n\n  this.name = 'AssertionError';\n\n};\n\ninherits(AssertionError, Error);\n\nexport default AssertionError;\n","/**\n * @module ol/format/IGC\n */\nimport {inherits} from '../util.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport TextFeature from '../format/TextFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * IGC altitude/z. One of 'barometric', 'gps', 'none'.\n * @enum {string}\n */\nconst IGCZ = {\n  BAROMETRIC: 'barometric',\n  GPS: 'gps',\n  NONE: 'none'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {IGCZ|string} [altitudeMode='none'] Altitude mode. Possible\n * values are `'barometric'`, `'gps'`, and `'none'`.\n */\n\n\n/**\n * @classdesc\n * Feature format for `*.igc` flight recording files.\n *\n * @constructor\n * @extends {module:ol/format/TextFeature}\n * @param {module:ol/format/IGC~Options=} opt_options Options.\n * @api\n */\nconst IGC = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  TextFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.dataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @private\n   * @type {IGCZ}\n   */\n  this.altitudeMode_ = options.altitudeMode ? options.altitudeMode : IGCZ.NONE;\n};\n\ninherits(IGC, TextFeature);\n\n\n/**\n * @const\n * @type {RegExp}\n */\nconst B_RECORD_RE =\n    /^B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5})/;\n\n\n/**\n * @const\n * @type {RegExp}\n */\nconst H_RECORD_RE = /^H.([A-Z]{3}).*?:(.*)/;\n\n\n/**\n * @const\n * @type {RegExp}\n */\nconst HFDTE_RECORD_RE = /^HFDTE(\\d{2})(\\d{2})(\\d{2})/;\n\n\n/**\n * A regular expression matching the newline characters `\\r\\n`, `\\r` and `\\n`.\n *\n * @const\n * @type {RegExp}\n */\nconst NEWLINE_RE = /\\r\\n|\\r|\\n/;\n\n\n/**\n * Read the feature from the IGC source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/Feature} Feature.\n * @api\n */\nIGC.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nIGC.prototype.readFeatureFromText = function(text, opt_options) {\n  const altitudeMode = this.altitudeMode_;\n  const lines = text.split(NEWLINE_RE);\n  /** @type {Object.<string, string>} */\n  const properties = {};\n  const flatCoordinates = [];\n  let year = 2000;\n  let month = 0;\n  let day = 1;\n  let lastDateTime = -1;\n  let i, ii;\n  for (i = 0, ii = lines.length; i < ii; ++i) {\n    const line = lines[i];\n    let m;\n    if (line.charAt(0) == 'B') {\n      m = B_RECORD_RE.exec(line);\n      if (m) {\n        const hour = parseInt(m[1], 10);\n        const minute = parseInt(m[2], 10);\n        const second = parseInt(m[3], 10);\n        let y = parseInt(m[4], 10) + parseInt(m[5], 10) / 60000;\n        if (m[6] == 'S') {\n          y = -y;\n        }\n        let x = parseInt(m[7], 10) + parseInt(m[8], 10) / 60000;\n        if (m[9] == 'W') {\n          x = -x;\n        }\n        flatCoordinates.push(x, y);\n        if (altitudeMode != IGCZ.NONE) {\n          let z;\n          if (altitudeMode == IGCZ.GPS) {\n            z = parseInt(m[11], 10);\n          } else if (altitudeMode == IGCZ.BAROMETRIC) {\n            z = parseInt(m[12], 10);\n          } else {\n            z = 0;\n          }\n          flatCoordinates.push(z);\n        }\n        let dateTime = Date.UTC(year, month, day, hour, minute, second);\n        // Detect UTC midnight wrap around.\n        if (dateTime < lastDateTime) {\n          dateTime = Date.UTC(year, month, day + 1, hour, minute, second);\n        }\n        flatCoordinates.push(dateTime / 1000);\n        lastDateTime = dateTime;\n      }\n    } else if (line.charAt(0) == 'H') {\n      m = HFDTE_RECORD_RE.exec(line);\n      if (m) {\n        day = parseInt(m[1], 10);\n        month = parseInt(m[2], 10) - 1;\n        year = 2000 + parseInt(m[3], 10);\n      } else {\n        m = H_RECORD_RE.exec(line);\n        if (m) {\n          properties[m[1]] = m[2].trim();\n        }\n      }\n    }\n  }\n  if (flatCoordinates.length === 0) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  const layout = altitudeMode == IGCZ.NONE ? GeometryLayout.XYM : GeometryLayout.XYZM;\n  lineString.setFlatCoordinates(layout, flatCoordinates);\n  const feature = new Feature(transformWithOptions(lineString, false, opt_options));\n  feature.setProperties(properties);\n  return feature;\n};\n\n\n/**\n * Read the feature from the source. As IGC sources contain a single\n * feature, this will return the feature in an array.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nIGC.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nIGC.prototype.readFeaturesFromText = function(text, opt_options) {\n  const feature = this.readFeatureFromText(text, opt_options);\n  if (feature) {\n    return [feature];\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * Read the projection from the IGC source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {module:ol/proj/Projection} Projection.\n * @api\n */\nIGC.prototype.readProjection;\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nIGC.prototype.writeFeatureText = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nIGC.prototype.writeFeaturesText = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nIGC.prototype.writeGeometryText = function(geometry, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nIGC.prototype.readGeometryFromText = function(text, opt_options) {};\nexport default IGC;\n","/**\n * @module ol/format/GPX\n */\nimport {inherits} from '../util.js';\nimport Feature from '../Feature.js';\nimport {includes} from '../array.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {readString, readDecimal, readNonNegativeInteger, readDateTime, writeStringTextNode, writeNonNegativeIntegerTextNode, writeDecimalTextNode, writeDateTimeTextNode} from '../format/xsd.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport {get as getProjection} from '../proj.js';\nimport {createElementNS, makeArrayPusher, makeArraySerializer, makeChildAppender,\n  makeObjectPropertySetter, makeSequence, makeSimpleNodeFactory, makeStructureNS,\n  OBJECT_PROPERTY_NODE_FACTORY, parseNode, pushParseAndPop, pushSerializeAndPop,\n  XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {function(module:ol/Feature, Node)} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ]\n * @property {boolean} [hasM]\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * @constructor\n * @extends {module:ol/format/XMLFeature}\n * @param {module:ol/format/GPX~Options=} opt_options Options.\n * @api\n */\nconst GPX = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.dataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @type {function(module:ol/Feature, Node)|undefined}\n   * @private\n   */\n  this.readExtensions_ = options.readExtensions;\n};\n\ninherits(GPX, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n\n/**\n * @const\n * @type {Object.<string, function(Node, Array.<*>): (module:ol/Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst GPX_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': makeArrayPusher(readRte),\n    'trk': makeArrayPusher(readTrk),\n    'wpt': makeArrayPusher(readWpt)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst LINK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': makeObjectPropertySetter(readString, 'linkText'),\n    'type': makeObjectPropertySetter(readString, 'linkType')\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst RTE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\n    'extensions': parseExtensions,\n    'type': makeObjectPropertySetter(readString),\n    'rtept': parseRtePt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst RTEPT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst TRK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\n    'type': makeObjectPropertySetter(readString),\n    'extensions': parseExtensions,\n    'trkseg': parseTrkSeg\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst TRKSEG_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': parseTrkPt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst TRKPT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst WPT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime),\n    'magvar': makeObjectPropertySetter(readDecimal),\n    'geoidheight': makeObjectPropertySetter(readDecimal),\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'sym': makeObjectPropertySetter(readString),\n    'type': makeObjectPropertySetter(readString),\n    'fix': makeObjectPropertySetter(readString),\n    'sat': makeObjectPropertySetter(readNonNegativeInteger),\n    'hdop': makeObjectPropertySetter(readDecimal),\n    'vdop': makeObjectPropertySetter(readDecimal),\n    'pdop': makeObjectPropertySetter(readDecimal),\n    'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n    'dgpsid': makeObjectPropertySetter(readNonNegativeInteger),\n    'extensions': parseExtensions\n  });\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst LINK_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': makeChildAppender(writeStringTextNode),\n    'type': makeChildAppender(writeStringTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst RTE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'rtept': makeArraySerializer(makeChildAppender(writeWptType))\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTEPT_TYPE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst TRK_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst TRK_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg))\n  });\n\n\n/**\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst TRKSEG_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': makeChildAppender(writeWptType)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst WPT_TYPE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n    'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n    'ageofdgpsdata', 'dgpsid'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst WPT_TYPE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeChildAppender(writeDecimalTextNode),\n    'time': makeChildAppender(writeDateTimeTextNode),\n    'magvar': makeChildAppender(writeDecimalTextNode),\n    'geoidheight': makeChildAppender(writeDecimalTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'sym': makeChildAppender(writeStringTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'fix': makeChildAppender(writeStringTextNode),\n    'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'hdop': makeChildAppender(writeDecimalTextNode),\n    'vdop': makeChildAppender(writeDecimalTextNode),\n    'pdop': makeChildAppender(writeDecimalTextNode),\n    'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n    'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk'\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  const geometry = /** @type {module:ol/Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst GPX_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': makeChildAppender(writeRte),\n    'trk': makeChildAppender(writeTrk),\n    'wpt': makeChildAppender(writeWpt)\n  });\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {module:ol/format/GPX~LayoutOptions} layoutOptions Layout options.\n * @param {Node} node Node.\n * @param {!Object} values Values.\n * @return {Array.<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')));\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {module:ol/format/GPX~LayoutOptions} layoutOptions Layout options.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>=} ends Ends.\n * @return {module:ol/geom/GeometryLayout} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n  let layout = GeometryLayout.XY;\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    for (let i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = flatCoordinates.length / 4 * stride;\n    if (ends) {\n      for (let i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = ends[i] / 4 * stride;\n      }\n    }\n  }\n  return layout;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */ (rteValues['flatCoordinates']);\n    const layoutOptions = /** @type {module:ol/format/GPX~LayoutOptions} */ (rteValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */ (trkValues['flatCoordinates']);\n    const layoutOptions = /** @type {module:ol/format/GPX~LayoutOptions} */ (trkValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {module:ol/format/Feature~ReadOptions} */ (objectStack[0]);\n  const values = pushParseAndPop({\n    'flatCoordinates': [],\n    'layoutOptions': {}\n  }, RTE_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {module:ol/format/GPX~LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n  const geometry = new LineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {module:ol/format/Feature~ReadOptions} */ (objectStack[0]);\n  const values = pushParseAndPop({\n    'flatCoordinates': [],\n    'ends': [],\n    'layoutOptions': {}\n  }, TRK_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {module:ol/format/GPX~LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates, ends);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {module:ol/format/Feature~ReadOptions} */ (objectStack[0]);\n  const values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {module:ol/format/GPX~LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = applyLayoutOptions(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Array.<module:ol/Feature>} features List of features.\n * @private\n */\nGPX.prototype.handleReadExtensions_ = function(features) {\n  if (!features) {\n    features = [];\n  }\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    const feature = features[i];\n    if (this.readExtensions_) {\n      const extensionsNode = feature.get('extensionsNode_') || null;\n      this.readExtensions_(feature, extensionsNode);\n    }\n    feature.set('extensionsNode_', undefined);\n  }\n};\n\n\n/**\n * Read the first feature from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/Feature} Feature.\n * @api\n */\nGPX.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return null;\n  }\n  const featureReader = FEATURE_READER[node.localName];\n  if (!featureReader) {\n    return null;\n  }\n  const feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n  if (!feature) {\n    return null;\n  }\n  this.handleReadExtensions_([feature]);\n  return feature;\n};\n\n\n/**\n * Read all features from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nGPX.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return [];\n  }\n  if (node.localName == 'gpx') {\n    /** @type {Array.<module:ol/Feature>} */\n    const features = pushParseAndPop([], GPX_PARSERS,\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      this.handleReadExtensions_(features);\n      return features;\n    } else {\n      return [];\n    }\n  }\n  return [];\n};\n\n\n/**\n * Read the projection from a GPX source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {module:ol/proj/Projection} Projection.\n * @api\n */\nGPX.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [\n    properties['linkText'],\n    properties['linkType']\n  ];\n  pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    link, objectStack, LINK_SEQUENCE);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  node.setAttributeNS(null, 'lat', coordinate[1]);\n  node.setAttributeNS(null, 'lon', coordinate[0]);\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n      // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n      // pass\n  }\n  const orderedKeys = (node.nodeName == 'rtept') ?\n    RTEPT_TYPE_SEQUENCE[namespaceURI] :\n    WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {module:ol/geom/LineString} */ (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    properties['rtept'] = geometry.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context,\n    RTE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  /** @type {module:ol/xml~NodeStackItem} */\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {module:ol/geom/MultiLineString} */\n      (transformWithOptions(geometry, true, options));\n    properties['trkseg'] = geometry.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context,\n    TRK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LineString} lineString LineString.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {module:ol/xml~NodeStackItem} */\n  const context = {node: node, 'geometryLayout': lineString.getLayout(),\n    'properties': {}};\n  pushSerializeAndPop(context,\n    TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(), objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[0]);\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {module:ol/geom/Point} */\n      (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    writeWptType(node, geometry.getCoordinates(), objectStack);\n  }\n}\n\n\n/**\n * Encode an array of features in the GPX format.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @function\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} Result.\n * @api\n */\nGPX.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GPX format as an XML node.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGPX.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  //FIXME Serialize metadata\n  const gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n  gpx.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n  gpx.setAttribute('version', '1.1');\n  gpx.setAttribute('creator', 'OpenLayers');\n\n  pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n    ({node: gpx}), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n  return gpx;\n};\nexport default GPX;\n","/**\n * @module ol/style/Atlas\n */\nimport {createCanvasContext2D} from '../dom.js';\n\n\n/**\n * @typedef {Object} AtlasBlock\n * @property {number} x\n * @property {number} y\n * @property {number} width\n * @property {number} height\n */\n\n/**\n * Provides information for an image inside an atlas.\n * `offsetX` and `offsetY` are the position of the image inside the atlas image `image`.\n * @typedef {Object} AtlasInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n */\n\n/**\n * This class facilitates the creation of image atlases.\n *\n * Images added to an atlas will be rendered onto a single\n * atlas canvas. The distribution of images on the canvas is\n * managed with the bin packing algorithm described in:\n * http://www.blackpawn.com/texts/lightmaps/\n *\n * @constructor\n * @struct\n * @param {number} size The size in pixels of the sprite image.\n * @param {number} space The space in pixels between images.\n *    Because texture coordinates are float values, the edges of\n *    images might not be completely correct (in a way that the\n *    edges overlap when being rendered). To avoid this we add a\n *    padding around each image.\n */\nconst Atlas = function(size, space) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.space_ = space;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/style/Atlas~AtlasBlock>}\n   */\n  this.emptyBlocks_ = [{x: 0, y: 0, width: size, height: size}];\n\n  /**\n   * @private\n   * @type {Object.<string, module:ol/style/Atlas~AtlasInfo>}\n   */\n  this.entries_ = {};\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = createCanvasContext2D(size, size);\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = this.context_.canvas;\n};\n\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?module:ol/style/Atlas~AtlasInfo} The atlas info.\n */\nAtlas.prototype.get = function(id) {\n  return this.entries_[id] || null;\n};\n\n\n/**\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *    Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *    `renderCallback`.\n * @return {?module:ol/style/Atlas~AtlasInfo} The position and atlas image for the entry.\n */\nAtlas.prototype.add = function(id, width, height, renderCallback, opt_this) {\n  for (let i = 0, ii = this.emptyBlocks_.length; i < ii; ++i) {\n    const block = this.emptyBlocks_[i];\n    if (block.width >= width + this.space_ &&\n        block.height >= height + this.space_) {\n      // we found a block that is big enough for our entry\n      const entry = {\n        offsetX: block.x + this.space_,\n        offsetY: block.y + this.space_,\n        image: this.canvas_\n      };\n      this.entries_[id] = entry;\n\n      // render the image on the atlas image\n      renderCallback.call(opt_this, this.context_,\n        block.x + this.space_, block.y + this.space_);\n\n      // split the block after the insertion, either horizontally or vertically\n      this.split_(i, block, width + this.space_, height + this.space_);\n\n      return entry;\n    }\n  }\n\n  // there is no space for the new entry in this atlas\n  return null;\n};\n\n\n/**\n * @private\n * @param {number} index The index of the block.\n * @param {module:ol/style/Atlas~AtlasBlock} block The block to split.\n * @param {number} width The width of the entry to insert.\n * @param {number} height The height of the entry to insert.\n */\nAtlas.prototype.split_ = function(index, block, width, height) {\n  const deltaWidth = block.width - width;\n  const deltaHeight = block.height - height;\n\n  /** @type {module:ol/style/Atlas~AtlasBlock} */\n  let newBlock1;\n  /** @type {module:ol/style/Atlas~AtlasBlock} */\n  let newBlock2;\n\n  if (deltaWidth > deltaHeight) {\n    // split vertically\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: block.height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  } else {\n    // split horizontally\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: block.width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  }\n};\n\n\n/**\n * Remove the old block and insert new blocks at the same array position.\n * The new blocks are inserted at the same position, so that splitted\n * blocks (that are potentially smaller) are filled first.\n * @private\n * @param {number} index The index of the block to remove.\n * @param {module:ol/style/Atlas~AtlasBlock} newBlock1 The 1st block to add.\n * @param {module:ol/style/Atlas~AtlasBlock} newBlock2 The 2nd block to add.\n */\nAtlas.prototype.updateBlocks_ = function(index, newBlock1, newBlock2) {\n  const args = [index, 1];\n  if (newBlock1.width > 0 && newBlock1.height > 0) {\n    args.push(newBlock1);\n  }\n  if (newBlock2.width > 0 && newBlock2.height > 0) {\n    args.push(newBlock2);\n  }\n  this.emptyBlocks_.splice.apply(this.emptyBlocks_, args);\n};\nexport default Atlas;\n","/**\n * @module ol/style/AtlasManager\n */\nimport {MAX_TEXTURE_SIZE as WEBGL_MAX_TEXTURE_SIZE} from '../webgl.js';\nimport {UNDEFINED} from '../functions.js';\nimport Atlas from '../style/Atlas.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [initialSize=256] The size in pixels of the first atlas image.\n * @property {number} [maxSize] The maximum size in pixels of atlas images. Default is\n * `webgl/MAX_TEXTURE_SIZE` or 2048 if WebGL is not supported.\n * @property {number} [space=1] The space in pixels between images.\n */\n\n\n/**\n * Provides information for an image inside an atlas manager.\n * `offsetX` and `offsetY` is the position of the image inside\n * the atlas image `image` and the position of the hit-detection image\n * inside the hit-detection atlas image `hitImage`.\n * @typedef {Object} AtlasManagerInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n * @property {HTMLCanvasElement} hitImage\n */\n\n\n/**\n * The size in pixels of the first atlas image.\n * @type {number}\n */\nconst INITIAL_ATLAS_SIZE = 256;\n\n/**\n * The maximum size in pixels of atlas images.\n * @type {number}\n */\nconst MAX_ATLAS_SIZE = -1;\n\n\n/**\n * Manages the creation of image atlases.\n *\n * Images added to this manager will be inserted into an atlas, which\n * will be used for rendering.\n * The `size` given in the constructor is the size for the first\n * atlas. After that, when new atlases are created, they will have\n * twice the size as the latest atlas (until `maxSize` is reached).\n *\n * If an application uses many images or very large images, it is recommended\n * to set a higher `size` value to avoid the creation of too many atlases.\n *\n * @constructor\n * @struct\n * @api\n * @param {module:ol/style/AtlasManager~Options=} opt_options Options.\n */\nconst AtlasManager = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * The size in pixels of the latest atlas image.\n   * @private\n   * @type {number}\n   */\n  this.currentSize_ = options.initialSize !== undefined ?\n    options.initialSize : INITIAL_ATLAS_SIZE;\n\n  /**\n   * The maximum size in pixels of atlas images.\n   * @private\n   * @type {number}\n   */\n  this.maxSize_ = options.maxSize !== undefined ?\n    options.maxSize : MAX_ATLAS_SIZE != -1 ?\n      MAX_ATLAS_SIZE : WEBGL_MAX_TEXTURE_SIZE !== undefined ?\n        WEBGL_MAX_TEXTURE_SIZE : 2048;\n\n  /**\n   * The size in pixels between images.\n   * @private\n   * @type {number}\n   */\n  this.space_ = options.space !== undefined ? options.space : 1;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/style/Atlas>}\n   */\n  this.atlases_ = [new Atlas(this.currentSize_, this.space_)];\n\n  /**\n   * The size in pixels of the latest atlas image for hit-detection images.\n   * @private\n   * @type {number}\n   */\n  this.currentHitSize_ = this.currentSize_;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/style/Atlas>}\n   */\n  this.hitAtlases_ = [new Atlas(this.currentHitSize_, this.space_)];\n};\n\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?module:ol/style/AtlasManager~AtlasManagerInfo} The position and atlas image for the\n *    entry, or `null` if the entry is not part of the atlas manager.\n */\nAtlasManager.prototype.getInfo = function(id) {\n  /** @type {?module:ol/style/Atlas~AtlasInfo} */\n  const info = this.getInfo_(this.atlases_, id);\n\n  if (!info) {\n    return null;\n  }\n  const hitInfo = /** @type {module:ol/style/Atlas~AtlasInfo} */ (this.getInfo_(this.hitAtlases_, id));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n\n/**\n * @private\n * @param {Array.<module:ol/style/Atlas>} atlases The atlases to search.\n * @param {string} id The identifier of the entry to check.\n * @return {?module:ol/style/Atlas~AtlasInfo} The position and atlas image for the entry,\n *    or `null` if the entry is not part of the atlases.\n */\nAtlasManager.prototype.getInfo_ = function(atlases, id) {\n  for (let i = 0, ii = atlases.length; i < ii; ++i) {\n    const atlas = atlases[i];\n    const info = atlas.get(id);\n    if (info) {\n      return info;\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n * @param {module:ol/style/Atlas~AtlasInfo} info The info for the real image.\n * @param {module:ol/style/Atlas~AtlasInfo} hitInfo The info for the hit-detection\n *    image.\n * @return {?module:ol/style/AtlasManager~AtlasManagerInfo} The position and atlas image for the\n *    entry, or `null` if the entry is not part of the atlases.\n */\nAtlasManager.prototype.mergeInfos_ = function(info, hitInfo) {\n  return (\n    /** @type {module:ol/style/AtlasManager~AtlasManagerInfo} */ ({\n      offsetX: info.offsetX,\n      offsetY: info.offsetY,\n      image: info.image,\n      hitImage: hitInfo.image\n    })\n  );\n};\n\n\n/**\n * Add an image to the atlas manager.\n *\n * If an entry for the given id already exists, the entry will\n * be overridden (but the space on the atlas graphic will not be freed).\n *\n * If `renderHitCallback` is provided, the image (or the hit-detection version\n * of the image) will be rendered into a separate hit-detection atlas image.\n *\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *    Called to render the new image onto an atlas image.\n * @param {function(CanvasRenderingContext2D, number, number)=}\n *    opt_renderHitCallback Called to render a hit-detection image onto a hit\n *    detection atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *    `renderCallback` and `renderHitCallback`.\n * @return {?module:ol/style/AtlasManager~AtlasManagerInfo}  The position and atlas image for the\n *    entry, or `null` if the image is too big.\n */\nAtlasManager.prototype.add = function(id, width, height,\n  renderCallback, opt_renderHitCallback, opt_this) {\n  if (width + this.space_ > this.maxSize_ ||\n      height + this.space_ > this.maxSize_) {\n    return null;\n  }\n\n  /** @type {?module:ol/style/Atlas~AtlasInfo} */\n  const info = this.add_(false, id, width, height, renderCallback, opt_this);\n  if (!info) {\n    return null;\n  }\n\n  // even if no hit-detection entry is requested, we insert a fake entry into\n  // the hit-detection atlas, to make sure that the offset is the same for\n  // the original image and the hit-detection image.\n  const renderHitCallback = opt_renderHitCallback !== undefined ?\n    opt_renderHitCallback : UNDEFINED;\n\n  const hitInfo = /** @type {module:ol/style/Atlas~AtlasInfo} */ (this.add_(true,\n    id, width, height, renderHitCallback, opt_this));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n\n/**\n * @private\n * @param {boolean} isHitAtlas If the hit-detection atlases are used.\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *    Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *    `renderCallback` and `renderHitCallback`.\n * @return {?module:ol/style/Atlas~AtlasInfo}  The position and atlas image for the entry,\n *    or `null` if the image is too big.\n */\nAtlasManager.prototype.add_ = function(isHitAtlas, id, width, height, renderCallback, opt_this) {\n  const atlases = (isHitAtlas) ? this.hitAtlases_ : this.atlases_;\n  let atlas, info, i, ii;\n  for (i = 0, ii = atlases.length; i < ii; ++i) {\n    atlas = atlases[i];\n    info = atlas.add(id, width, height, renderCallback, opt_this);\n    if (info) {\n      return info;\n    } else if (!info && i === ii - 1) {\n      // the entry could not be added to one of the existing atlases,\n      // create a new atlas that is twice as big and try to add to this one.\n      let size;\n      if (isHitAtlas) {\n        size = Math.min(this.currentHitSize_ * 2, this.maxSize_);\n        this.currentHitSize_ = size;\n      } else {\n        size = Math.min(this.currentSize_ * 2, this.maxSize_);\n        this.currentSize_ = size;\n      }\n      atlas = new Atlas(size, this.space_);\n      atlases.push(atlas);\n      // run the loop another time\n      ++ii;\n    }\n  }\n  return null;\n};\nexport default AtlasManager;\n","/**\n * @module ol/control/Attribution\n */\nimport {inherits} from '../util.js';\nimport {equals} from '../array.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {Element|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible=true] Specify if attributions can\n * be collapsed. If you use an OSM source, should be set to `false` — see\n * {@link https://www.openstreetmap.org/copyright OSM Copyright} —\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Element} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(module:ol/MapEvent)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/Attribution~Options=} opt_options Attribution options.\n * @api\n */\nconst Attribution = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.ulElement_ = document.createElement('UL');\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.collapsible_ = options.collapsible !== undefined ?\n    options.collapsible : true;\n\n  if (!this.collapsible_) {\n    this.collapsed_ = false;\n  }\n\n  const className = options.className !== undefined ? options.className : 'ol-attribution';\n\n  const tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n  const collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n  if (typeof collapseLabel === 'string') {\n    /**\n     * @private\n     * @type {Element}\n     */\n    this.collapseLabel_ = document.createElement('span');\n    this.collapseLabel_.textContent = collapseLabel;\n  } else {\n    this.collapseLabel_ = collapseLabel;\n  }\n\n  const label = options.label !== undefined ? options.label : 'i';\n\n  if (typeof label === 'string') {\n    /**\n     * @private\n     * @type {Element}\n     */\n    this.label_ = document.createElement('span');\n    this.label_.textContent = label;\n  } else {\n    this.label_ = label;\n  }\n\n\n  const activeLabel = (this.collapsible_ && !this.collapsed_) ?\n    this.collapseLabel_ : this.label_;\n  const button = document.createElement('button');\n  button.setAttribute('type', 'button');\n  button.title = tipLabel;\n  button.appendChild(activeLabel);\n\n  listen(button, EventType.CLICK, this.handleClick_, this);\n\n  const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n  const element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(this.ulElement_);\n  element.appendChild(button);\n\n  Control.call(this, {\n    element: element,\n    render: options.render || render,\n    target: options.target\n  });\n\n  /**\n   * A list of currently rendered resolutions.\n   * @type {Array.<string>}\n   * @private\n   */\n  this.renderedAttributions_ = [];\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderedVisible_ = true;\n\n};\n\ninherits(Attribution, Control);\n\n\n/**\n * Get a list of visible attributions.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @return {Array.<string>} Attributions.\n * @private\n */\nAttribution.prototype.getSourceAttributions_ = function(frameState) {\n  /**\n   * Used to determine if an attribution already exists.\n   * @type {!Object.<string, boolean>}\n   */\n  const lookup = {};\n\n  /**\n   * A list of visible attributions.\n   * @type {Array.<string>}\n   */\n  const visibleAttributions = [];\n\n  const layerStatesArray = frameState.layerStatesArray;\n  const resolution = frameState.viewState.resolution;\n  for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n    const layerState = layerStatesArray[i];\n    if (!visibleAtResolution(layerState, resolution)) {\n      continue;\n    }\n\n    const source = layerState.layer.getSource();\n    if (!source) {\n      continue;\n    }\n\n    const attributionGetter = source.getAttributions();\n    if (!attributionGetter) {\n      continue;\n    }\n\n    const attributions = attributionGetter(frameState);\n    if (!attributions) {\n      continue;\n    }\n\n    if (Array.isArray(attributions)) {\n      for (let j = 0, jj = attributions.length; j < jj; ++j) {\n        if (!(attributions[j] in lookup)) {\n          visibleAttributions.push(attributions[j]);\n          lookup[attributions[j]] = true;\n        }\n      }\n    } else {\n      if (!(attributions in lookup)) {\n        visibleAttributions.push(attributions);\n        lookup[attributions] = true;\n      }\n    }\n  }\n  return visibleAttributions;\n};\n\n\n/**\n * Update the attribution element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/Attribution}\n * @api\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\n/**\n * @private\n * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nAttribution.prototype.updateElement_ = function(frameState) {\n  if (!frameState) {\n    if (this.renderedVisible_) {\n      this.element.style.display = 'none';\n      this.renderedVisible_ = false;\n    }\n    return;\n  }\n\n  const attributions = this.getSourceAttributions_(frameState);\n\n  const visible = attributions.length > 0;\n  if (this.renderedVisible_ != visible) {\n    this.element.style.display = visible ? '' : 'none';\n    this.renderedVisible_ = visible;\n  }\n\n  if (equals(attributions, this.renderedAttributions_)) {\n    return;\n  }\n\n  removeChildren(this.ulElement_);\n\n  // append the attributions\n  for (let i = 0, ii = attributions.length; i < ii; ++i) {\n    const element = document.createElement('LI');\n    element.innerHTML = attributions[i];\n    this.ulElement_.appendChild(element);\n  }\n\n  this.renderedAttributions_ = attributions;\n};\n\n\n/**\n * @param {Event} event The event to handle\n * @private\n */\nAttribution.prototype.handleClick_ = function(event) {\n  event.preventDefault();\n  this.handleToggle_();\n};\n\n\n/**\n * @private\n */\nAttribution.prototype.handleToggle_ = function() {\n  this.element.classList.toggle(CLASS_COLLAPSED);\n  if (this.collapsed_) {\n    replaceNode(this.collapseLabel_, this.label_);\n  } else {\n    replaceNode(this.label_, this.collapseLabel_);\n  }\n  this.collapsed_ = !this.collapsed_;\n};\n\n\n/**\n * Return `true` if the attribution is collapsible, `false` otherwise.\n * @return {boolean} True if the widget is collapsible.\n * @api\n */\nAttribution.prototype.getCollapsible = function() {\n  return this.collapsible_;\n};\n\n\n/**\n * Set whether the attribution should be collapsible.\n * @param {boolean} collapsible True if the widget is collapsible.\n * @api\n */\nAttribution.prototype.setCollapsible = function(collapsible) {\n  if (this.collapsible_ === collapsible) {\n    return;\n  }\n  this.collapsible_ = collapsible;\n  this.element.classList.toggle('ol-uncollapsible');\n  if (!collapsible && this.collapsed_) {\n    this.handleToggle_();\n  }\n};\n\n\n/**\n * Collapse or expand the attribution according to the passed parameter. Will\n * not do anything if the attribution isn't collapsible or if the current\n * collapsed state is already the one requested.\n * @param {boolean} collapsed True if the widget is collapsed.\n * @api\n */\nAttribution.prototype.setCollapsed = function(collapsed) {\n  if (!this.collapsible_ || this.collapsed_ === collapsed) {\n    return;\n  }\n  this.handleToggle_();\n};\n\n\n/**\n * Return `true` when the attribution is currently collapsed or `false`\n * otherwise.\n * @return {boolean} True if the widget is collapsed.\n * @api\n */\nAttribution.prototype.getCollapsed = function() {\n  return this.collapsed_;\n};\nexport default Attribution;\n","/**\n * @module ol/control/FullScreen\n */\nimport {inherits} from '../util.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @return {string} Change type.\n */\nconst getChangeType = (function() {\n  let changeType;\n  return function() {\n    if (!changeType) {\n      const body = document.body;\n      if (body.webkitRequestFullscreen) {\n        changeType = 'webkitfullscreenchange';\n      } else if (body.mozRequestFullScreen) {\n        changeType = 'mozfullscreenchange';\n      } else if (body.msRequestFullscreen) {\n        changeType = 'MSFullscreenChange';\n      } else if (body.requestFullscreen) {\n        changeType = 'fullscreenchange';\n      }\n    }\n    return changeType;\n  };\n})();\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Element} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Element} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {Element|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {Element|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](http://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/FullScreen~Options=} opt_options Options.\n * @api\n */\nconst FullScreen = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.cssClassName_ = options.className !== undefined ? options.className :\n    'ol-full-screen';\n\n  const label = options.label !== undefined ? options.label : '\\u2922';\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.labelNode_ = typeof label === 'string' ?\n    document.createTextNode(label) : label;\n\n  const labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.labelActiveNode_ = typeof labelActive === 'string' ?\n    document.createTextNode(labelActive) : labelActive;\n\n  const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n  const button = document.createElement('button');\n  button.className = this.cssClassName_ + '-' + isFullScreen();\n  button.setAttribute('type', 'button');\n  button.title = tipLabel;\n  button.appendChild(this.labelNode_);\n\n  listen(button, EventType.CLICK,\n    this.handleClick_, this);\n\n  const cssClasses = this.cssClassName_ + ' ' + CLASS_UNSELECTABLE +\n      ' ' + CLASS_CONTROL + ' ' +\n      (!isFullScreenSupported() ? CLASS_UNSUPPORTED : '');\n  const element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(button);\n\n  Control.call(this, {\n    element: element,\n    target: options.target\n  });\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.keys_ = options.keys !== undefined ? options.keys : false;\n\n  /**\n   * @private\n   * @type {Element|string|undefined}\n   */\n  this.source_ = options.source;\n\n};\n\ninherits(FullScreen, Control);\n\n\n/**\n * @param {Event} event The event to handle\n * @private\n */\nFullScreen.prototype.handleClick_ = function(event) {\n  event.preventDefault();\n  this.handleFullScreen_();\n};\n\n\n/**\n * @private\n */\nFullScreen.prototype.handleFullScreen_ = function() {\n  if (!isFullScreenSupported()) {\n    return;\n  }\n  const map = this.getMap();\n  if (!map) {\n    return;\n  }\n  if (isFullScreen()) {\n    exitFullScreen();\n  } else {\n    let element;\n    if (this.source_) {\n      element = typeof this.source_ === 'string' ?\n        document.getElementById(this.source_) :\n        this.source_;\n    } else {\n      element = map.getTargetElement();\n    }\n    if (this.keys_) {\n      requestFullScreenWithKeys(element);\n\n    } else {\n      requestFullScreen(element);\n    }\n  }\n};\n\n\n/**\n * @private\n */\nFullScreen.prototype.handleFullScreenChange_ = function() {\n  const button = this.element.firstElementChild;\n  const map = this.getMap();\n  if (isFullScreen()) {\n    button.className = this.cssClassName_ + '-true';\n    replaceNode(this.labelActiveNode_, this.labelNode_);\n  } else {\n    button.className = this.cssClassName_ + '-false';\n    replaceNode(this.labelNode_, this.labelActiveNode_);\n  }\n  if (map) {\n    map.updateSize();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nFullScreen.prototype.setMap = function(map) {\n  Control.prototype.setMap.call(this, map);\n  if (map) {\n    this.listenerKeys.push(listen(document,\n      getChangeType(),\n      this.handleFullScreenChange_, this)\n    );\n  }\n};\n\n/**\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported() {\n  const body = document.body;\n  return !!(\n    body.webkitRequestFullscreen ||\n    (body.mozRequestFullScreen && document.mozFullScreenEnabled) ||\n    (body.msRequestFullscreen && document.msFullscreenEnabled) ||\n    (body.requestFullscreen && document.fullscreenEnabled)\n  );\n}\n\n/**\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen() {\n  return !!(\n    document.webkitIsFullScreen || document.mozFullScreen ||\n    document.msFullscreenElement || document.fullscreenElement\n  );\n}\n\n/**\n * Request to fullscreen an element.\n * @param {Element} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.msRequestFullscreen) {\n    element.msRequestFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {Element} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element.mozRequestFullScreenWithKeys) {\n    element.mozRequestFullScreenWithKeys();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n */\nfunction exitFullScreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.msExitFullscreen) {\n    document.msExitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n\nexport default FullScreen;\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos,\n            str = readUtf8(this.buf, this.pos, end);\n        this.pos = end;\n        return str;\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.ceil(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","var Processor = require('./processor');\n\nexports.Processor = Processor;\n","/**\n * @module ol/source/Cluster\n */\n\nimport {getUid, inherits} from '../util.js';\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {scale as scaleCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {buffer, createEmpty, createOrUpdateFromCoordinate} from '../extent.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from '../source/Vector.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Minimum distance in pixels between clusters.\n * @property {module:ol/extent~Extent} [extent] Extent.\n * @property {function(module:ol/Feature):module:ol/geom/Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underyling source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {module:ol/source/Vector} source Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n *\n * @constructor\n * @param {module:ol/source/Cluster~Options=} options Cluster options.\n * @extends {module:ol/source/Vector}\n * @api\n */\nconst Cluster = function(options) {\n  VectorSource.call(this, {\n    attributions: options.attributions,\n    extent: options.extent,\n    projection: options.projection,\n    wrapX: options.wrapX\n  });\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.resolution = undefined;\n\n  /**\n   * @type {number}\n   * @protected\n   */\n  this.distance = options.distance !== undefined ? options.distance : 20;\n\n  /**\n   * @type {Array.<module:ol/Feature>}\n   * @protected\n   */\n  this.features = [];\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @return {module:ol/geom/Point} Cluster calculation point.\n   * @protected\n   */\n  this.geometryFunction = options.geometryFunction || function(feature) {\n    const geometry = /** @type {module:ol/geom/Point} */ (feature.getGeometry());\n    assert(geometry instanceof Point,\n      10); // The default `geometryFunction` can only handle `module:ol/geom/Point~Point` geometries\n    return geometry;\n  };\n\n  /**\n   * @type {module:ol/source/Vector}\n   * @protected\n   */\n  this.source = options.source;\n\n  listen(this.source, EventType.CHANGE, this.refresh, this);\n};\n\ninherits(Cluster, VectorSource);\n\n\n/**\n * Get the distance in pixels between clusters.\n * @return {number} Distance.\n * @api\n */\nCluster.prototype.getDistance = function() {\n  return this.distance;\n};\n\n\n/**\n * Get a reference to the wrapped source.\n * @return {module:ol/source/Vector} Source.\n * @api\n */\nCluster.prototype.getSource = function() {\n  return this.source;\n};\n\n\n/**\n * @inheritDoc\n */\nCluster.prototype.loadFeatures = function(extent, resolution, projection) {\n  this.source.loadFeatures(extent, resolution, projection);\n  if (resolution !== this.resolution) {\n    this.clear();\n    this.resolution = resolution;\n    this.cluster();\n    this.addFeatures(this.features);\n  }\n};\n\n\n/**\n * Set the distance in pixels between clusters.\n * @param {number} distance The distance in pixels.\n * @api\n */\nCluster.prototype.setDistance = function(distance) {\n  this.distance = distance;\n  this.refresh();\n};\n\n\n/**\n * handle the source changing\n * @override\n */\nCluster.prototype.refresh = function() {\n  this.clear();\n  this.cluster();\n  this.addFeatures(this.features);\n  VectorSource.prototype.refresh.call(this);\n};\n\n\n/**\n * @protected\n */\nCluster.prototype.cluster = function() {\n  if (this.resolution === undefined) {\n    return;\n  }\n  this.features.length = 0;\n  const extent = createEmpty();\n  const mapDistance = this.distance * this.resolution;\n  const features = this.source.getFeatures();\n\n  /**\n   * @type {!Object.<string, boolean>}\n   */\n  const clustered = {};\n\n  for (let i = 0, ii = features.length; i < ii; i++) {\n    const feature = features[i];\n    if (!(getUid(feature).toString() in clustered)) {\n      const geometry = this.geometryFunction(feature);\n      if (geometry) {\n        const coordinates = geometry.getCoordinates();\n        createOrUpdateFromCoordinate(coordinates, extent);\n        buffer(extent, mapDistance, extent);\n\n        let neighbors = this.source.getFeaturesInExtent(extent);\n        neighbors = neighbors.filter(function(neighbor) {\n          const uid = getUid(neighbor).toString();\n          if (!(uid in clustered)) {\n            clustered[uid] = true;\n            return true;\n          } else {\n            return false;\n          }\n        });\n        this.features.push(this.createCluster(neighbors));\n      }\n    }\n  }\n};\n\n\n/**\n * @param {Array.<module:ol/Feature>} features Features\n * @return {module:ol/Feature} The cluster feature.\n * @protected\n */\nCluster.prototype.createCluster = function(features) {\n  const centroid = [0, 0];\n  for (let i = features.length - 1; i >= 0; --i) {\n    const geometry = this.geometryFunction(features[i]);\n    if (geometry) {\n      addCoordinate(centroid, geometry.getCoordinates());\n    } else {\n      features.splice(i, 1);\n    }\n  }\n  scaleCoordinate(centroid, 1 / features.length);\n\n  const cluster = new Feature(new Point(centroid));\n  cluster.set('features', features);\n  return cluster;\n};\nexport default Cluster;\n","/**\n * @module ol/control/OverviewMap\n */\nimport {inherits} from '../util.js';\nimport Collection from '../Collection.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport OverlayPositioning from '../OverlayPositioning.js';\nimport ViewProperty from '../ViewProperty.js';\nimport Control from '../control/Control.js';\nimport {rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen, listenOnce, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight, scaleFromCenter} from '../extent.js';\n\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nconst MAX_RATIO = 0.75;\n\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nconst MIN_RATIO = 0.1;\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|Element} [collapseLabel='«'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|Element} [label='»'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array.<module:ol/layer/Layer>|module:ol/Collection.<module:ol/layer/Layer>} [layers]\n * Layers for the overview map. If not set, then all main map layers are used\n * instead.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {Element|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {module:ol/View} [view] Custom view for the overview map. If not provided,\n * a default view with an EPSG:3857 projection will be used.\n */\n\n\n/**\n * Create a new control with a map acting as an overview map for an other\n * defined map.\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/OverviewMap~Options=} opt_options OverviewMap options.\n * @api\n */\nconst OverviewMap = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.collapsible_ = options.collapsible !== undefined ?\n    options.collapsible : true;\n\n  if (!this.collapsible_) {\n    this.collapsed_ = false;\n  }\n\n  const className = options.className !== undefined ? options.className : 'ol-overviewmap';\n\n  const tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n  const collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00AB';\n\n  if (typeof collapseLabel === 'string') {\n    /**\n     * @private\n     * @type {Element}\n     */\n    this.collapseLabel_ = document.createElement('span');\n    this.collapseLabel_.textContent = collapseLabel;\n  } else {\n    this.collapseLabel_ = collapseLabel;\n  }\n\n  const label = options.label !== undefined ? options.label : '\\u00BB';\n\n\n  if (typeof label === 'string') {\n    /**\n     * @private\n     * @type {Element}\n     */\n    this.label_ = document.createElement('span');\n    this.label_.textContent = label;\n  } else {\n    this.label_ = label;\n  }\n\n  const activeLabel = (this.collapsible_ && !this.collapsed_) ?\n    this.collapseLabel_ : this.label_;\n  const button = document.createElement('button');\n  button.setAttribute('type', 'button');\n  button.title = tipLabel;\n  button.appendChild(activeLabel);\n\n  listen(button, EventType.CLICK,\n    this.handleClick_, this);\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  this.ovmapDiv_ = document.createElement('DIV');\n  this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n  /**\n   * @type {module:ol/Map}\n   * @private\n   */\n  this.ovmap_ = new Map({\n    controls: new Collection(),\n    interactions: new Collection(),\n    view: options.view\n  });\n  const ovmap = this.ovmap_;\n\n  if (options.layers) {\n    options.layers.forEach(\n      /**\n       * @param {module:ol/layer/Layer} layer Layer.\n       */\n      (function(layer) {\n        ovmap.addLayer(layer);\n      }).bind(this));\n  }\n\n  const box = document.createElement('DIV');\n  box.className = 'ol-overviewmap-box';\n  box.style.boxSizing = 'border-box';\n\n  /**\n   * @type {module:ol/Overlay}\n   * @private\n   */\n  this.boxOverlay_ = new Overlay({\n    position: [0, 0],\n    positioning: OverlayPositioning.BOTTOM_LEFT,\n    element: box\n  });\n  this.ovmap_.addOverlay(this.boxOverlay_);\n\n  const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n  const element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(this.ovmapDiv_);\n  element.appendChild(button);\n\n  Control.call(this, {\n    element: element,\n    render: options.render || render,\n    target: options.target\n  });\n\n  /* Interactive map */\n\n  const scope = this;\n\n  const overlay = this.boxOverlay_;\n  const overlayBox = this.boxOverlay_.getElement();\n\n  /* Functions definition */\n\n  const computeDesiredMousePosition = function(mousePosition) {\n    return {\n      clientX: mousePosition.clientX - (overlayBox.offsetWidth / 2),\n      clientY: mousePosition.clientY + (overlayBox.offsetHeight / 2)\n    };\n  };\n\n  const move = function(event) {\n    const coordinates = ovmap.getEventCoordinate(computeDesiredMousePosition(event));\n\n    overlay.setPosition(coordinates);\n  };\n\n  const endMoving = function(event) {\n    const coordinates = ovmap.getEventCoordinate(event);\n\n    scope.getMap().getView().setCenter(coordinates);\n\n    window.removeEventListener('mousemove', move);\n    window.removeEventListener('mouseup', endMoving);\n  };\n\n  /* Binding */\n\n  overlayBox.addEventListener('mousedown', function() {\n    window.addEventListener('mousemove', move);\n    window.addEventListener('mouseup', endMoving);\n  });\n};\n\ninherits(OverviewMap, Control);\n\n\n/**\n * @inheritDoc\n * @api\n */\nOverviewMap.prototype.setMap = function(map) {\n  const oldMap = this.getMap();\n  if (map === oldMap) {\n    return;\n  }\n  if (oldMap) {\n    const oldView = oldMap.getView();\n    if (oldView) {\n      this.unbindView_(oldView);\n    }\n    this.ovmap_.setTarget(null);\n  }\n  Control.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.ovmap_.setTarget(this.ovmapDiv_);\n    this.listenerKeys.push(listen(\n      map, ObjectEventType.PROPERTYCHANGE,\n      this.handleMapPropertyChange_, this));\n\n    // TODO: to really support map switching, this would need to be reworked\n    if (this.ovmap_.getLayers().getLength() === 0) {\n      this.ovmap_.setLayerGroup(map.getLayerGroup());\n    }\n\n    const view = map.getView();\n    if (view) {\n      this.bindView_(view);\n      if (view.isDef()) {\n        this.ovmap_.updateSize();\n        this.resetExtent_();\n      }\n    }\n  }\n};\n\n\n/**\n * Handle map property changes.  This only deals with changes to the map's view.\n * @param {module:ol/Object~ObjectEvent} event The propertychange event.\n * @private\n */\nOverviewMap.prototype.handleMapPropertyChange_ = function(event) {\n  if (event.key === MapProperty.VIEW) {\n    const oldView = /** @type {module:ol/View} */ (event.oldValue);\n    if (oldView) {\n      this.unbindView_(oldView);\n    }\n    const newView = this.getMap().getView();\n    this.bindView_(newView);\n  }\n};\n\n\n/**\n * Register listeners for view property changes.\n * @param {module:ol/View} view The view.\n * @private\n */\nOverviewMap.prototype.bindView_ = function(view) {\n  listen(view,\n    getChangeEventType(ViewProperty.ROTATION),\n    this.handleRotationChanged_, this);\n};\n\n\n/**\n * Unregister listeners for view property changes.\n * @param {module:ol/View} view The view.\n * @private\n */\nOverviewMap.prototype.unbindView_ = function(view) {\n  unlisten(view,\n    getChangeEventType(ViewProperty.ROTATION),\n    this.handleRotationChanged_, this);\n};\n\n\n/**\n * Handle rotation changes to the main map.\n * TODO: This should rotate the extent rectrangle instead of the\n * overview map's view.\n * @private\n */\nOverviewMap.prototype.handleRotationChanged_ = function() {\n  this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n};\n\n\n/**\n * Update the overview map element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/OverviewMap}\n * @api\n */\nexport function render(mapEvent) {\n  this.validateExtent_();\n  this.updateBox_();\n}\n\n\n/**\n * Reset the overview map extent if the box size (width or\n * height) is less than the size of the overview map size times minRatio\n * or is greater than the size of the overview size times maxRatio.\n *\n * If the map extent was not reset, the box size can fits in the defined\n * ratio sizes. This method then checks if is contained inside the overview\n * map current extent. If not, recenter the overview map to the current\n * main map center location.\n * @private\n */\nOverviewMap.prototype.validateExtent_ = function() {\n  const map = this.getMap();\n  const ovmap = this.ovmap_;\n\n  if (!map.isRendered() || !ovmap.isRendered()) {\n    return;\n  }\n\n  const mapSize = /** @type {module:ol/size~Size} */ (map.getSize());\n\n  const view = map.getView();\n  const extent = view.calculateExtent(mapSize);\n\n  const ovmapSize = /** @type {module:ol/size~Size} */ (ovmap.getSize());\n\n  const ovview = ovmap.getView();\n  const ovextent = ovview.calculateExtent(ovmapSize);\n\n  const topLeftPixel =\n      ovmap.getPixelFromCoordinate(getTopLeft(extent));\n  const bottomRightPixel =\n      ovmap.getPixelFromCoordinate(getBottomRight(extent));\n\n  const boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n  const boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n  const ovmapWidth = ovmapSize[0];\n  const ovmapHeight = ovmapSize[1];\n\n  if (boxWidth < ovmapWidth * MIN_RATIO ||\n      boxHeight < ovmapHeight * MIN_RATIO ||\n      boxWidth > ovmapWidth * MAX_RATIO ||\n      boxHeight > ovmapHeight * MAX_RATIO) {\n    this.resetExtent_();\n  } else if (!containsExtent(ovextent, extent)) {\n    this.recenter_();\n  }\n};\n\n\n/**\n * Reset the overview map extent to half calculated min and max ratio times\n * the extent of the main map.\n * @private\n */\nOverviewMap.prototype.resetExtent_ = function() {\n  if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n    return;\n  }\n\n  const map = this.getMap();\n  const ovmap = this.ovmap_;\n\n  const mapSize = /** @type {module:ol/size~Size} */ (map.getSize());\n\n  const view = map.getView();\n  const extent = view.calculateExtent(mapSize);\n\n  const ovview = ovmap.getView();\n\n  // get how many times the current map overview could hold different\n  // box sizes using the min and max ratio, pick the step in the middle used\n  // to calculate the extent from the main map to set it to the overview map,\n  const steps = Math.log(\n    MAX_RATIO / MIN_RATIO) / Math.LN2;\n  const ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n  scaleFromCenter(extent, ratio);\n  ovview.fit(extent);\n};\n\n\n/**\n * Set the center of the overview map to the map center without changing its\n * resolution.\n * @private\n */\nOverviewMap.prototype.recenter_ = function() {\n  const map = this.getMap();\n  const ovmap = this.ovmap_;\n\n  const view = map.getView();\n\n  const ovview = ovmap.getView();\n\n  ovview.setCenter(view.getCenter());\n};\n\n\n/**\n * Update the box using the main map extent\n * @private\n */\nOverviewMap.prototype.updateBox_ = function() {\n  const map = this.getMap();\n  const ovmap = this.ovmap_;\n\n  if (!map.isRendered() || !ovmap.isRendered()) {\n    return;\n  }\n\n  const mapSize = /** @type {module:ol/size~Size} */ (map.getSize());\n\n  const view = map.getView();\n\n  const ovview = ovmap.getView();\n\n  const rotation = view.getRotation();\n\n  const overlay = this.boxOverlay_;\n  const box = this.boxOverlay_.getElement();\n  const extent = view.calculateExtent(mapSize);\n  const ovresolution = ovview.getResolution();\n  const bottomLeft = getBottomLeft(extent);\n  const topRight = getTopRight(extent);\n\n  // set position using bottom left coordinates\n  const rotateBottomLeft = this.calculateCoordinateRotate_(rotation, bottomLeft);\n  overlay.setPosition(rotateBottomLeft);\n\n  // set box size calculated from map extent size and overview map resolution\n  if (box) {\n    box.style.width = Math.abs((bottomLeft[0] - topRight[0]) / ovresolution) + 'px';\n    box.style.height = Math.abs((topRight[1] - bottomLeft[1]) / ovresolution) + 'px';\n  }\n};\n\n\n/**\n * @param {number} rotation Target rotation.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {module:ol/coordinate~Coordinate|undefined} Coordinate for rotation and center anchor.\n * @private\n */\nOverviewMap.prototype.calculateCoordinateRotate_ = function(\n  rotation, coordinate) {\n  let coordinateRotate;\n\n  const map = this.getMap();\n  const view = map.getView();\n\n  const currentCenter = view.getCenter();\n\n  if (currentCenter) {\n    coordinateRotate = [\n      coordinate[0] - currentCenter[0],\n      coordinate[1] - currentCenter[1]\n    ];\n    rotateCoordinate(coordinateRotate, rotation);\n    addCoordinate(coordinateRotate, currentCenter);\n  }\n  return coordinateRotate;\n};\n\n\n/**\n * @param {Event} event The event to handle\n * @private\n */\nOverviewMap.prototype.handleClick_ = function(event) {\n  event.preventDefault();\n  this.handleToggle_();\n};\n\n\n/**\n * @private\n */\nOverviewMap.prototype.handleToggle_ = function() {\n  this.element.classList.toggle(CLASS_COLLAPSED);\n  if (this.collapsed_) {\n    replaceNode(this.collapseLabel_, this.label_);\n  } else {\n    replaceNode(this.label_, this.collapseLabel_);\n  }\n  this.collapsed_ = !this.collapsed_;\n\n  // manage overview map if it had not been rendered before and control\n  // is expanded\n  const ovmap = this.ovmap_;\n  if (!this.collapsed_ && !ovmap.isRendered()) {\n    ovmap.updateSize();\n    this.resetExtent_();\n    listenOnce(ovmap, MapEventType.POSTRENDER,\n      function(event) {\n        this.updateBox_();\n      },\n      this);\n  }\n};\n\n\n/**\n * Return `true` if the overview map is collapsible, `false` otherwise.\n * @return {boolean} True if the widget is collapsible.\n * @api\n */\nOverviewMap.prototype.getCollapsible = function() {\n  return this.collapsible_;\n};\n\n\n/**\n * Set whether the overview map should be collapsible.\n * @param {boolean} collapsible True if the widget is collapsible.\n * @api\n */\nOverviewMap.prototype.setCollapsible = function(collapsible) {\n  if (this.collapsible_ === collapsible) {\n    return;\n  }\n  this.collapsible_ = collapsible;\n  this.element.classList.toggle('ol-uncollapsible');\n  if (!collapsible && this.collapsed_) {\n    this.handleToggle_();\n  }\n};\n\n\n/**\n * Collapse or expand the overview map according to the passed parameter. Will\n * not do anything if the overview map isn't collapsible or if the current\n * collapsed state is already the one requested.\n * @param {boolean} collapsed True if the widget is collapsed.\n * @api\n */\nOverviewMap.prototype.setCollapsed = function(collapsed) {\n  if (!this.collapsible_ || this.collapsed_ === collapsed) {\n    return;\n  }\n  this.handleToggle_();\n};\n\n\n/**\n * Determine if the overview map is collapsed.\n * @return {boolean} The overview map is collapsed.\n * @api\n */\nOverviewMap.prototype.getCollapsed = function() {\n  return this.collapsed_;\n};\n\n\n/**\n * Return the overview map.\n * @return {module:ol/PluggableMap} Overview map.\n * @api\n */\nOverviewMap.prototype.getOverviewMap = function() {\n  return this.ovmap_;\n};\nexport default OverviewMap;\n","/**\n * @module ol/control/Rotate\n */\n\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {inherits} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|Element} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {Element|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/Rotate~Options=} opt_options Rotate options.\n * @api\n */\nconst Rotate = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const className = options.className !== undefined ? options.className : 'ol-rotate';\n\n  const label = options.label !== undefined ? options.label : '\\u21E7';\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  this.label_ = null;\n\n  if (typeof label === 'string') {\n    this.label_ = document.createElement('span');\n    this.label_.className = 'ol-compass';\n    this.label_.textContent = label;\n  } else {\n    this.label_ = label;\n    this.label_.classList.add('ol-compass');\n  }\n\n  const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n  const button = document.createElement('button');\n  button.className = className + '-reset';\n  button.setAttribute('type', 'button');\n  button.title = tipLabel;\n  button.appendChild(this.label_);\n\n  listen(button, EventType.CLICK,\n    Rotate.prototype.handleClick_, this);\n\n  const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n  const element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(button);\n\n  this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n  Control.call(this, {\n    element: element,\n    render: options.render || render,\n    target: options.target\n  });\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = undefined;\n\n  if (this.autoHide_) {\n    this.element.classList.add(CLASS_HIDDEN);\n  }\n\n};\n\ninherits(Rotate, Control);\n\n\n/**\n * @param {Event} event The event to handle\n * @private\n */\nRotate.prototype.handleClick_ = function(event) {\n  event.preventDefault();\n  if (this.callResetNorth_ !== undefined) {\n    this.callResetNorth_();\n  } else {\n    this.resetNorth_();\n  }\n};\n\n\n/**\n * @private\n */\nRotate.prototype.resetNorth_ = function() {\n  const map = this.getMap();\n  const view = map.getView();\n  if (!view) {\n    // the map does not have a view, so we can't act\n    // upon it\n    return;\n  }\n  if (view.getRotation() !== undefined) {\n    if (this.duration_ > 0) {\n      view.animate({\n        rotation: 0,\n        duration: this.duration_,\n        easing: easeOut\n      });\n    } else {\n      view.setRotation(0);\n    }\n  }\n};\n\n\n/**\n * Update the rotate control element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/Rotate}\n * @api\n */\nexport function render(mapEvent) {\n  const frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  const rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    const transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      const contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport {inherits} from '../util.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|Element} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Element} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {Element|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/Zoom~Options=} opt_options Zoom options.\n * @api\n */\nconst Zoom = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const className = options.className !== undefined ? options.className : 'ol-zoom';\n\n  const delta = options.delta !== undefined ? options.delta : 1;\n\n  const zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n  const zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n  const zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n    options.zoomInTipLabel : 'Zoom in';\n  const zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n    options.zoomOutTipLabel : 'Zoom out';\n\n  const inElement = document.createElement('button');\n  inElement.className = className + '-in';\n  inElement.setAttribute('type', 'button');\n  inElement.title = zoomInTipLabel;\n  inElement.appendChild(\n    typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n  );\n\n  listen(inElement, EventType.CLICK,\n    Zoom.prototype.handleClick_.bind(this, delta));\n\n  const outElement = document.createElement('button');\n  outElement.className = className + '-out';\n  outElement.setAttribute('type', 'button');\n  outElement.title = zoomOutTipLabel;\n  outElement.appendChild(\n    typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n  );\n\n  listen(outElement, EventType.CLICK,\n    Zoom.prototype.handleClick_.bind(this, -delta));\n\n  const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n  const element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(inElement);\n  element.appendChild(outElement);\n\n  Control.call(this, {\n    element: element,\n    target: options.target\n  });\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n};\n\ninherits(Zoom, Control);\n\n\n/**\n * @param {number} delta Zoom delta.\n * @param {Event} event The event to handle\n * @private\n */\nZoom.prototype.handleClick_ = function(delta, event) {\n  event.preventDefault();\n  this.zoomByDelta_(delta);\n};\n\n\n/**\n * @param {number} delta Zoom delta.\n * @private\n */\nZoom.prototype.zoomByDelta_ = function(delta) {\n  const map = this.getMap();\n  const view = map.getView();\n  if (!view) {\n    // the map does not have a view, so we can't act\n    // upon it\n    return;\n  }\n  const currentResolution = view.getResolution();\n  if (currentResolution) {\n    const newResolution = view.constrainResolution(currentResolution, delta);\n    if (this.duration_ > 0) {\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      view.animate({\n        resolution: newResolution,\n        duration: this.duration_,\n        easing: easeOut\n      });\n    } else {\n      view.setResolution(newResolution);\n    }\n  }\n};\nexport default Zoom;\n","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {module:ol/control/Attribution~Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {module:ol/control/Rotate~Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {module:ol/control/Zoom~Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {module:ol/control/util~DefaultsOptions=} opt_options\n * Defaults options.\n * @return {module:ol/Collection.<module:ol/control/Control>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\nvar context = document.createElement('canvas').getContext('2d');\n\nfunction newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  } else {\n    var imageData = context.createImageData(width, height);\n    imageData.data.set(data);\n    return imageData;\n  }\n}\n\nexports.newImageData = newImageData;\n","var newImageData = require('./util').newImageData;\n\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(Object):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  var workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    } else {\n      return {data: data, width: width, height: height};\n    }\n  }\n\n  return function(data) {\n    // bracket notation for minification support\n    var buffers = data['buffers'];\n    var meta = data['meta'];\n    var imageOps = data['imageOps'];\n    var width = data['width'];\n    var height = data['height'];\n\n    var numBuffers = buffers.length;\n    var numBytes = buffers[0].byteLength;\n    var output, b;\n\n    if (imageOps) {\n      var images = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n            new Uint8ClampedArray(buffers[b]), width, height);\n      }\n      output = operation(images, meta).data;\n    } else {\n      output = new Uint8ClampedArray(numBytes);\n      var arrays = new Array(numBuffers);\n      var pixels = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        arrays[b] = new Uint8ClampedArray(buffers[b]);\n        pixels[b] = [0, 0, 0, 0];\n      }\n      for (var i = 0; i < numBytes; i += 4) {\n        for (var j = 0; j < numBuffers; ++j) {\n          var array = arrays[j];\n          pixels[j][0] = array[i];\n          pixels[j][1] = array[i + 1];\n          pixels[j][2] = array[i + 2];\n          pixels[j][3] = array[i + 3];\n        }\n        var pixel = operation(pixels, meta);\n        output[i] = pixel[0];\n        output[i + 1] = pixel[1];\n        output[i + 2] = pixel[2];\n        output[i + 3] = pixel[3];\n      }\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  var lib = Object.keys(config.lib || {}).map(function(name) {\n    return 'var ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  var lines = lib.concat([\n    'var __minion__ = (' + createMinion.toString() + ')(', config.operation.toString(), ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  var buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});'\n  ]);\n\n  var blob = new Blob(lines, {type: 'text/javascript'});\n  var source = URL.createObjectURL(blob);\n  var worker = new Worker(source);\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * Create a faux worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  var minion = createMinion(config.operation);\n  return {\n    postMessage: function(data) {\n      setTimeout(function() {\n        onMessage({'data': {'buffer': minion(data), 'meta': data['meta']}});\n      }, 0);\n    }\n  };\n}\n\n/**\n * A processor runs pixel or image operations in workers.\n * @param {Object} config Configuration.\n */\nfunction Processor(config) {\n  this._imageOps = !!config.imageOps;\n  var threads;\n  if (config.threads === 0) {\n    threads = 0;\n  } else if (this._imageOps) {\n    threads = 1;\n  } else {\n    threads = config.threads || 1;\n  }\n  var workers = [];\n  if (threads) {\n    for (var i = 0; i < threads; ++i) {\n      workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n    }\n  } else {\n    workers[0] = createFauxWorker(config, this._onWorkerMessage.bind(this, 0));\n  }\n  this._workers = workers;\n  this._queue = [];\n  this._maxQueueLength = config.queue || Infinity;\n  this._running = 0;\n  this._dataLookup = {};\n  this._job = null;\n}\n\n/**\n * Run operation on input data.\n * @param {Array.<Array|ImageData>} inputs Array of pixels or image data\n *     (depending on the operation type).\n * @param {Object} meta A user data object.  This is passed to all operations\n *     and must be serializable.\n * @param {function(Error, ImageData, Object)} callback Called when work\n *     completes.  The first argument is any error.  The second is the ImageData\n *     generated by operations.  The third is the user data object.\n */\nProcessor.prototype.process = function(inputs, meta, callback) {\n  this._enqueue({\n    inputs: inputs,\n    meta: meta,\n    callback: callback\n  });\n  this._dispatch();\n};\n\n/**\n * Stop responding to any completed work and destroy the processor.\n */\nProcessor.prototype.destroy = function() {\n  for (var key in this) {\n    this[key] = null;\n  }\n  this._destroyed = true;\n};\n\n/**\n * Add a job to the queue.\n * @param {Object} job The job.\n */\nProcessor.prototype._enqueue = function(job) {\n  this._queue.push(job);\n  while (this._queue.length > this._maxQueueLength) {\n    this._queue.shift().callback(null, null);\n  }\n};\n\n/**\n * Dispatch a job.\n */\nProcessor.prototype._dispatch = function() {\n  if (this._running === 0 && this._queue.length > 0) {\n    var job = this._job = this._queue.shift();\n    var width = job.inputs[0].width;\n    var height = job.inputs[0].height;\n    var buffers = job.inputs.map(function(input) {\n      return input.data.buffer;\n    });\n    var threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage({\n        'buffers': buffers,\n        'meta': job.meta,\n        'imageOps': this._imageOps,\n        'width': width,\n        'height': height\n      }, buffers);\n    } else {\n      var length = job.inputs[0].data.length;\n      var segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (var i = 0; i < threads; ++i) {\n        var offset = i * segmentLength;\n        var slices = [];\n        for (var j = 0, jj = buffers.length; j < jj; ++j) {\n          slices.push(buffers[i].slice(offset, offset + segmentLength));\n        }\n        this._workers[i].postMessage({\n          'buffers': slices,\n          'meta': job.meta,\n          'imageOps': this._imageOps,\n          'width': width,\n          'height': height\n        }, slices);\n      }\n    }\n  }\n};\n\n/**\n * Handle messages from the worker.\n * @param {number} index The worker index.\n * @param {MessageEvent} event The message event.\n */\nProcessor.prototype._onWorkerMessage = function(index, event) {\n  if (this._destroyed) {\n    return;\n  }\n  this._dataLookup[index] = event.data;\n  --this._running;\n  if (this._running === 0) {\n    this._resolveJob();\n  }\n};\n\n/**\n * Resolve a job.  If there are no more worker threads, the processor callback\n * will be called.\n */\nProcessor.prototype._resolveJob = function() {\n  var job = this._job;\n  var threads = this._workers.length;\n  var data, meta;\n  if (threads === 1) {\n    data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n    meta = this._dataLookup[0]['meta'];\n  } else {\n    var length = job.inputs[0].data.length;\n    data = new Uint8ClampedArray(length);\n    meta = new Array(length);\n    var segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (var i = 0; i < threads; ++i) {\n      var buffer = this._dataLookup[i]['buffer'];\n      var offset = i * segmentLength;\n      data.set(new Uint8ClampedArray(buffer), offset);\n      meta[i] = this._dataLookup[i]['meta'];\n    }\n  }\n  this._job = null;\n  this._dataLookup = {};\n  job.callback(null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height), meta);\n  this._dispatch();\n};\n\nmodule.exports = Processor;\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","/**\n * @module ol/style/Circle\n */\nimport {inherits} from '../util.js';\nimport RegularShape from '../style/RegularShape.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {boolean} [snapToPixel=true] If `true` integral numbers of pixels are used as the X and Y pixel coordinate\n * when drawing the circle in the output canvas. If `false` fractional numbers may be used. Using `true` allows for\n * \"sharp\" rendering (no blur), while using `false` allows for \"accurate\" rendering. Note that accuracy is important if\n * the circle's position is animated. Without it, the circle may jitter noticeably.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/AtlasManager} [atlasManager] The atlas manager to use for this circle.\n * When using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given,\n * the circle is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @classdesc\n * Set circle style for vector features.\n *\n * @constructor\n * @param {module:ol/style/Circle~Options=} opt_options Options.\n * @extends {module:ol/style/RegularShape}\n * @api\n */\nconst CircleStyle = function(opt_options) {\n\n  const options = opt_options || {};\n\n  RegularShape.call(this, {\n    points: Infinity,\n    fill: options.fill,\n    radius: options.radius,\n    snapToPixel: options.snapToPixel,\n    stroke: options.stroke,\n    atlasManager: options.atlasManager\n  });\n\n};\n\ninherits(CircleStyle, RegularShape);\n\n\n/**\n * Clones the style.  If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n * @return {module:ol/style/Circle} The cloned style.\n * @override\n * @api\n */\nCircleStyle.prototype.clone = function() {\n  const style = new CircleStyle({\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    radius: this.getRadius(),\n    snapToPixel: this.getSnapToPixel(),\n    atlasManager: this.atlasManager_\n  });\n  style.setOpacity(this.getOpacity());\n  style.setScale(this.getScale());\n  return style;\n};\n\n\n/**\n * Set the circle radius.\n *\n * @param {number} radius Circle radius.\n * @api\n */\nCircleStyle.prototype.setRadius = function(radius) {\n  this.radius_ = radius;\n  this.render_(this.atlasManager_);\n};\nexport default CircleStyle;\n"],"sourceRoot":""}