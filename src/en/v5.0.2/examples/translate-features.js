(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{218:function(t,e,a){"use strict";var n=a(0),s=a(53),i=a(30),o=a(9),r=a(34),l=a(23),c=a(15),h=a(38),u=a(168);const f={TRANSLATESTART:"translatestart",TRANSLATING:"translating",TRANSLATEEND:"translateend"},d=function(t,e,a){r.a.call(this,t),this.features=e,this.coordinate=a};Object(n.c)(d,r.a);const p=function(t){h.b.call(this,{handleDownEvent:_,handleDragEvent:g,handleMoveEvent:T,handleUpEvent:b});const e=t||{};let a;if(this.lastCoordinate_=null,this.features_=void 0!==e.features?e.features:null,e.layers)if("function"==typeof e.layers)a=e.layers;else{const t=e.layers;a=function(e){return Object(c.f)(t,e)}}else a=l.b;this.layerFilter_=a,this.hitTolerance_=e.hitTolerance?e.hitTolerance:0,this.lastFeature_=null,Object(o.a)(this,Object(i.b)(u.a.ACTIVE),this.handleActiveChanged_,this)};function _(t){if(this.lastFeature_=this.featuresAtPixel_(t.pixel,t.map),!this.lastCoordinate_&&this.lastFeature_){this.lastCoordinate_=t.coordinate,T.call(this,t);const e=this.features_||new s.b([this.lastFeature_]);return this.dispatchEvent(new d(f.TRANSLATESTART,e,t.coordinate)),!0}return!1}function b(t){if(this.lastCoordinate_){this.lastCoordinate_=null,T.call(this,t);const e=this.features_||new s.b([this.lastFeature_]);return this.dispatchEvent(new d(f.TRANSLATEEND,e,t.coordinate)),!0}return!1}function g(t){if(this.lastCoordinate_){const e=t.coordinate,a=e[0]-this.lastCoordinate_[0],n=e[1]-this.lastCoordinate_[1],i=this.features_||new s.b([this.lastFeature_]);i.forEach(function(t){const e=t.getGeometry();e.translate(a,n),t.setGeometry(e)}),this.lastCoordinate_=e,this.dispatchEvent(new d(f.TRANSLATING,i,e))}}function T(t){const e=t.map.getViewport();this.featuresAtPixel_(t.pixel,t.map)?(e.classList.remove(this.lastCoordinate_?"ol-grab":"ol-grabbing"),e.classList.add(this.lastCoordinate_?"ol-grabbing":"ol-grab")):e.classList.remove("ol-grab","ol-grabbing")}Object(n.c)(p,h.b),p.prototype.featuresAtPixel_=function(t,e){return e.forEachFeatureAtPixel(t,function(t){if(!this.features_||Object(c.f)(this.features_.getArray(),t))return t}.bind(this),{layerFilter:this.layerFilter_,hitTolerance:this.hitTolerance_})},p.prototype.getHitTolerance=function(){return this.hitTolerance_},p.prototype.setHitTolerance=function(t){this.hitTolerance_=t},p.prototype.setMap=function(t){const e=this.getMap();h.b.prototype.setMap.call(this,t),this.updateState_(e)},p.prototype.handleActiveChanged_=function(){this.updateState_(null)},p.prototype.updateState_=function(t){let e=this.getMap();const a=this.getActive();if((!e||!a)&&(e=e||t)){e.getViewport().classList.remove("ol-grab","ol-grabbing")}},e.a=p},275:function(t,e,a){"use strict";a.r(e);var n=a(3),s=a(2),i=a(28),o=a(50),r=a(100),l=a(218),c=a(4),h=a(29),u=a(5),f=a(13);const d=new c.a({source:new u.b}),p=new h.a({source:new f.b({url:"data/geojson/countries.geojson",format:new i.a})}),_=new r.a,b=new l.a({features:_.getFeatures()});new n.a({interactions:Object(o.a)().extend([_,b]),layers:[d,p],target:"map",view:new s.a({center:[0,0],zoom:2})})}},[[275,0]]]);
//# sourceMappingURL=translate-features.js.map