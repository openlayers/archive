{"version":3,"sources":["webpack:///./geolocation.js"],"names":["view","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_3__","center","zoom","map","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_2__","layers","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_6__","source","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_8__","target","controls","Object","_src_ol_control_js__WEBPACK_IMPORTED_MODULE_4__","attributionOptions","collapsible","geolocation","_src_ol_Geolocation_js__WEBPACK_IMPORTED_MODULE_1__","trackingOptions","enableHighAccuracy","projection","getProjection","el","id","document","getElementById","addEventListener","setTracking","this","checked","on","innerText","getAccuracy","getAltitude","getAltitudeAccuracy","getHeading","getSpeed","error","info","innerHTML","message","style","display","accuracyFeature","_src_ol_Feature_js__WEBPACK_IMPORTED_MODULE_0__","setGeometry","getAccuracyGeometry","positionFeature","setStyle","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_10__","image","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_11__","radius","fill","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_12__","color","stroke","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_13__","width","coordinates","getPosition","_src_ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_5__","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_7__","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_9__","features"],"mappings":"wNAUA,MAAAA,EAAA,IAAAC,EAAA,GACAC,QAAA,KACAC,KAAA,IAGAC,EAAA,IAAAC,EAAA,GACAC,QACA,IAAAC,EAAA,GACAC,OAAA,IAAAC,EAAA,KAGAC,OAAA,MACAC,SAAAC,OAAAC,EAAA,EAAAD,EACAE,oBACAC,aAAA,KAGAf,SAGAgB,EAAA,IAAAC,EAAA,GAEAC,iBACAC,oBAAA,GAEAC,WAAApB,EAAAqB,kBAGA,SAAAC,EAAAC,GACA,OAAAC,SAAAC,eAAAF,GAGAD,EAAA,SAAAI,iBAAA,oBACAV,EAAAW,YAAAC,KAAAC,WAIAb,EAAAc,GAAA,oBACAR,EAAA,YAAAS,UAAAf,EAAAgB,cAAA,OACAV,EAAA,YAAAS,UAAAf,EAAAiB,cAAA,OACAX,EAAA,oBAAAS,UAAAf,EAAAkB,sBAAA,OACAZ,EAAA,WAAAS,UAAAf,EAAAmB,aAAA,SACAb,EAAA,SAAAS,UAAAf,EAAAoB,WAAA,WAIApB,EAAAc,GAAA,iBAAAO,GACA,MAAAC,EAAAd,SAAAC,eAAA,QACAa,EAAAC,UAAAF,EAAAG,QACAF,EAAAG,MAAAC,QAAA,KAGA,MAAAC,EAAA,IAAAC,EAAA,EACA5B,EAAAc,GAAA,qCACAa,EAAAE,YAAA7B,EAAA8B,yBAGA,MAAAC,EAAA,IAAAH,EAAA,EACAG,EAAAC,SAAA,IAAAC,EAAA,GACAC,MAAA,IAAAC,EAAA,GACAC,OAAA,EACAC,KAAA,IAAAC,EAAA,GACAC,MAAA,YAEAC,OAAA,IAAAC,EAAA,GACAF,MAAA,OACAG,MAAA,SAKA1C,EAAAc,GAAA,6BACA,MAAA6B,EAAA3C,EAAA4C,cACAb,EAAAF,YAAAc,EACA,IAAAE,EAAA,EAAAF,GAAA,QAGA,IAAAG,EAAA,GACA1D,MACAI,OAAA,IAAAuD,EAAA,GACAC,UAAArB,EAAAI","file":"geolocation.js","sourcesContent":["import Feature from '../src/ol/Feature.js';\nimport Geolocation from '../src/ol/Geolocation.js';\nimport Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {defaults as defaultControls} from '../src/ol/control.js';\nimport Point from '../src/ol/geom/Point.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\nimport {Circle as CircleStyle, Fill, Stroke, Style} from '../src/ol/style.js';\n\nconst view = new View({\n  center: [0, 0],\n  zoom: 2\n});\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM()\n    })\n  ],\n  target: 'map',\n  controls: defaultControls({\n    attributionOptions: {\n      collapsible: false\n    }\n  }),\n  view: view\n});\n\nconst geolocation = new Geolocation({\n  // enableHighAccuracy must be set to true to have the heading value.\n  trackingOptions: {\n    enableHighAccuracy: true\n  },\n  projection: view.getProjection()\n});\n\nfunction el(id) {\n  return document.getElementById(id);\n}\n\nel('track').addEventListener('change', function() {\n  geolocation.setTracking(this.checked);\n});\n\n// update the HTML page when the position changes.\ngeolocation.on('change', function() {\n  el('accuracy').innerText = geolocation.getAccuracy() + ' [m]';\n  el('altitude').innerText = geolocation.getAltitude() + ' [m]';\n  el('altitudeAccuracy').innerText = geolocation.getAltitudeAccuracy() + ' [m]';\n  el('heading').innerText = geolocation.getHeading() + ' [rad]';\n  el('speed').innerText = geolocation.getSpeed() + ' [m/s]';\n});\n\n// handle geolocation error.\ngeolocation.on('error', function(error) {\n  const info = document.getElementById('info');\n  info.innerHTML = error.message;\n  info.style.display = '';\n});\n\nconst accuracyFeature = new Feature();\ngeolocation.on('change:accuracyGeometry', function() {\n  accuracyFeature.setGeometry(geolocation.getAccuracyGeometry());\n});\n\nconst positionFeature = new Feature();\npositionFeature.setStyle(new Style({\n  image: new CircleStyle({\n    radius: 6,\n    fill: new Fill({\n      color: '#3399CC'\n    }),\n    stroke: new Stroke({\n      color: '#fff',\n      width: 2\n    })\n  })\n}));\n\ngeolocation.on('change:position', function() {\n  const coordinates = geolocation.getPosition();\n  positionFeature.setGeometry(coordinates ?\n    new Point(coordinates) : null);\n});\n\nnew VectorLayer({\n  map: map,\n  source: new VectorSource({\n    features: [accuracyFeature, positionFeature]\n  })\n});\n"],"sourceRoot":""}