{"version":3,"sources":["webpack:///./modify-test.js"],"names":["styleFunction","styles","image","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_8__","radius","fill","stroke","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_9__","color","width","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_10__","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_11__","feature","getGeometry","getType","source","_src_ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_7__","features","_src_ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_2__","readFeatures","type","crs","properties","name","geometry","coordinates","geometries","layer","_src_ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_6__","style","overlayStyle","zIndex","concat","select","_src_ol_interaction_js__WEBPACK_IMPORTED_MODULE_4__","modify","_src_ol_interaction_js__WEBPACK_IMPORTED_MODULE_5__","getFeatures","insertVertexCondition","getArray","every","match","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","interactions","Object","_src_ol_interaction_js__WEBPACK_IMPORTED_MODULE_3__","extend","layers","target","view","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","center","zoom"],"mappings":"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","file":"modify-test.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport GeoJSON from '../src/ol/format/GeoJSON.js';\nimport {defaults as defaultInteractions, Modify, Select} from '../src/ol/interaction.js';\nimport VectorLayer from '../src/ol/layer/Vector.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport {Circle as CircleStyle, Fill, Stroke, Style} from '../src/ol/style.js';\n\n\nconst styleFunction = (function() {\n  const styles = {};\n  const image = new CircleStyle({\n    radius: 5,\n    fill: null,\n    stroke: new Stroke({color: 'orange', width: 2})\n  });\n  styles['Point'] = new Style({image: image});\n  styles['Polygon'] = new Style({\n    stroke: new Stroke({\n      color: 'blue',\n      width: 3\n    }),\n    fill: new Fill({\n      color: 'rgba(0, 0, 255, 0.1)'\n    })\n  });\n  styles['MultiLineString'] = new Style({\n    stroke: new Stroke({\n      color: 'green',\n      width: 3\n    })\n  });\n  styles['MultiPolygon'] = new Style({\n    stroke: new Stroke({\n      color: 'yellow',\n      width: 1\n    }),\n    fill: new Fill({\n      color: 'rgba(255, 255, 0, 0.1)'\n    })\n  });\n  styles['default'] = new Style({\n    stroke: new Stroke({\n      color: 'red',\n      width: 3\n    }),\n    fill: new Fill({\n      color: 'rgba(255, 0, 0, 0.1)'\n    }),\n    image: image\n  });\n  return function(feature) {\n    return styles[feature.getGeometry().getType()] || styles['default'];\n  };\n})();\n\nconst geojsonObject = {\n  'type': 'FeatureCollection',\n  'crs': {\n    'type': 'name',\n    'properties': {\n      'name': 'EPSG:3857'\n    }\n  },\n  'features': [{\n    'type': 'Feature',\n    'geometry': {\n      'type': 'Point',\n      'coordinates': [0, 0]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'MultiPoint',\n      'coordinates': [[-2e6, 0], [0, -2e6]]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'LineString',\n      'coordinates': [[4e6, -2e6], [8e6, 2e6], [9e6, 2e6]]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'LineString',\n      'coordinates': [[4e6, -2e6], [8e6, 2e6], [8e6, 3e6]]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'Polygon',\n      'coordinates': [[[-5e6, -1e6], [-4e6, 1e6],\n        [-3e6, -1e6], [-5e6, -1e6]], [[-4.5e6, -0.5e6],\n        [-3.5e6, -0.5e6], [-4e6, 0.5e6], [-4.5e6, -0.5e6]]]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'MultiLineString',\n      'coordinates': [\n        [[-1e6, -7.5e5], [-1e6, 7.5e5]],\n        [[-1e6, -7.5e5], [-1e6, 7.5e5], [-5e5, 0], [-1e6, -7.5e5]],\n        [[1e6, -7.5e5], [15e5, 0], [15e5, 0], [1e6, 7.5e5]],\n        [[-7.5e5, -1e6], [7.5e5, -1e6]],\n        [[-7.5e5, 1e6], [7.5e5, 1e6]]\n      ]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'MultiPolygon',\n      'coordinates': [\n        [[[-5e6, 6e6], [-5e6, 8e6], [-3e6, 8e6],\n          [-3e6, 6e6], [-5e6, 6e6]]],\n        [[[-3e6, 6e6], [-2e6, 8e6], [0, 8e6],\n          [0, 6e6], [-3e6, 6e6]]],\n        [[[1e6, 6e6], [1e6, 8e6], [3e6, 8e6],\n          [3e6, 6e6], [1e6, 6e6]]]\n      ]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'GeometryCollection',\n      'geometries': [{\n        'type': 'LineString',\n        'coordinates': [[-5e6, -5e6], [0, -5e6]]\n      }, {\n        'type': 'Point',\n        'coordinates': [4e6, -5e6]\n      }, {\n        'type': 'Polygon',\n        'coordinates': [\n          [[1e6, -6e6], [2e6, -4e6], [3e6, -6e6], [1e6, -6e6]]\n        ]\n      }]\n    }\n  }]\n};\n\nconst source = new VectorSource({\n  features: (new GeoJSON()).readFeatures(geojsonObject)\n});\n\nconst layer = new VectorLayer({\n  source: source,\n  style: styleFunction\n});\n\nconst overlayStyle = (function() {\n  const styles = {};\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: [255, 255, 255, 1],\n        width: 5\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: [0, 153, 255, 1],\n        width: 3\n      })\n    })\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: [255, 255, 255, 1],\n        width: 5\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: [0, 153, 255, 1],\n        width: 3\n      })\n    })\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: 7,\n        fill: new Fill({\n          color: [0, 153, 255, 1]\n        }),\n        stroke: new Stroke({\n          color: [255, 255, 255, 0.75],\n          width: 1.5\n        })\n      }),\n      zIndex: 100000\n    })\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(styles['Point']);\n\n  return function(feature) {\n    return styles[feature.getGeometry().getType()];\n  };\n})();\n\nconst select = new Select({\n  style: overlayStyle\n});\n\nconst modify = new Modify({\n  features: select.getFeatures(),\n  style: overlayStyle,\n  insertVertexCondition: function() {\n    // prevent new vertices to be added to the polygons\n    return !select.getFeatures().getArray().every(function(feature) {\n      return feature.getGeometry().getType().match(/Polygon/);\n    });\n  }\n});\n\nconst map = new Map({\n  interactions: defaultInteractions().extend([select, modify]),\n  layers: [layer],\n  target: 'map',\n  view: new View({\n    center: [0, 1000000],\n    zoom: 2\n  })\n});\n"],"sourceRoot":""}