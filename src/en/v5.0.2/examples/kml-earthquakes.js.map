{"version":3,"sources":["webpack:///./kml-earthquakes.js"],"names":["styleCache","vector","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_3__","source","_src_ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_6__","url","format","_src_ol_format_KML_js__WEBPACK_IMPORTED_MODULE_2__","extractStyles","style","feature","name","get","radius","parseFloat","substr","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_7__","image","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_8__","fill","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_9__","color","stroke","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_10__","width","raster","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_4__","_src_ol_source_Stamen_js__WEBPACK_IMPORTED_MODULE_5__","layer","map","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","layers","target","view","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","center","zoom","info","$","tooltip","animation","trigger","displayFeatureInfo","pixel","css","left","top","forEachFeatureAtPixel","attr","on","evt","dragging","getEventPixel","originalEvent"],"mappings":"gMASA,MAAAA,KA2BAC,EAAA,IAAAC,EAAA,GACAC,OAAA,IAAAC,EAAA,GACAC,IAAA,qCACAC,OAAA,IAAAC,EAAA,GACAC,eAAA,MAGAC,MAjCA,SAAAC,GAIA,MAAAC,EAAAD,EAAAE,IAAA,QAEAC,EAAA,MADAC,WAAAH,EAAAI,OAAA,IACA,GACA,IAAAN,EAAAT,EAAAa,GAgBA,OAfAJ,IACAA,EAAA,IAAAO,EAAA,GACAC,MAAA,IAAAC,EAAA,GACAL,SACAM,KAAA,IAAAC,EAAA,GACAC,MAAA,2BAEAC,OAAA,IAAAC,EAAA,GACAF,MAAA,yBACAG,MAAA,QAIAxB,EAAAa,GAAAJ,GAEAA,KAaAgB,EAAA,IAAAC,EAAA,GACAvB,OAAA,IAAAwB,EAAA,GACAC,MAAA,YAIAC,EAAA,IAAAC,EAAA,GACAC,QAAAN,EAAAxB,GACA+B,OAAA,MACAC,KAAA,IAAAC,EAAA,GACAC,QAAA,KACAC,KAAA,MAIAC,EAAAC,EAAA,SACAD,EAAAE,SACAC,WAAA,EACAC,QAAA,WAGA,MAAAC,EAAA,SAAAC,GACAN,EAAAO,KACAC,KAAAF,EAAA,QACAG,IAAAH,EAAA,aAEA,MAAAjC,EAAAmB,EAAAkB,sBAAAJ,EAAA,SAAAjC,GACA,OAAAA,IAEAA,EACA2B,EAAAE,QAAA,QACAS,KAAA,sBAAAtC,EAAAE,IAAA,SACA2B,QAAA,YACAA,QAAA,QAEAF,EAAAE,QAAA,SAIAV,EAAAoB,GAAA,uBAAAC,GACAA,EAAAC,SACAd,EAAAE,QAAA,QAGAG,EAAAb,EAAAuB,cAAAF,EAAAG,kBAGAxB,EAAAoB,GAAA,iBAAAC,GACAR,EAAAQ,EAAAP","file":"kml-earthquakes.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport KML from '../src/ol/format/KML.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport Stamen from '../src/ol/source/Stamen.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport {Circle as CircleStyle, Fill, Stroke, Style} from '../src/ol/style.js';\n\n\nconst styleCache = {};\nconst styleFunction = function(feature) {\n  // 2012_Earthquakes_Mag5.kml stores the magnitude of each earthquake in a\n  // standards-violating <magnitude> tag in each Placemark.  We extract it from\n  // the Placemark's name instead.\n  const name = feature.get('name');\n  const magnitude = parseFloat(name.substr(2));\n  const radius = 5 + 20 * (magnitude - 5);\n  let style = styleCache[radius];\n  if (!style) {\n    style = new Style({\n      image: new CircleStyle({\n        radius: radius,\n        fill: new Fill({\n          color: 'rgba(255, 153, 0, 0.4)'\n        }),\n        stroke: new Stroke({\n          color: 'rgba(255, 204, 0, 0.2)',\n          width: 1\n        })\n      })\n    });\n    styleCache[radius] = style;\n  }\n  return style;\n};\n\nconst vector = new VectorLayer({\n  source: new VectorSource({\n    url: 'data/kml/2012_Earthquakes_Mag5.kml',\n    format: new KML({\n      extractStyles: false\n    })\n  }),\n  style: styleFunction\n});\n\nconst raster = new TileLayer({\n  source: new Stamen({\n    layer: 'toner'\n  })\n});\n\nconst map = new Map({\n  layers: [raster, vector],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n\nconst info = $('#info');\ninfo.tooltip({\n  animation: false,\n  trigger: 'manual'\n});\n\nconst displayFeatureInfo = function(pixel) {\n  info.css({\n    left: pixel[0] + 'px',\n    top: (pixel[1] - 15) + 'px'\n  });\n  const feature = map.forEachFeatureAtPixel(pixel, function(feature) {\n    return feature;\n  });\n  if (feature) {\n    info.tooltip('hide')\n      .attr('data-original-title', feature.get('name'))\n      .tooltip('fixTitle')\n      .tooltip('show');\n  } else {\n    info.tooltip('hide');\n  }\n};\n\nmap.on('pointermove', function(evt) {\n  if (evt.dragging) {\n    info.tooltip('hide');\n    return;\n  }\n  displayFeatureInfo(map.getEventPixel(evt.originalEvent));\n});\n\nmap.on('click', function(evt) {\n  displayFeatureInfo(evt.pixel);\n});\n"],"sourceRoot":""}