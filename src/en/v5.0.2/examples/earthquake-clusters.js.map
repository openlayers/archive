{"version":3,"sources":["webpack:///./earthquake-clusters.js"],"names":["earthquakeFill","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_11__","color","earthquakeStroke","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_12__","width","textFill","textStroke","invisibleFill","createEarthquakeStyle","feature","name","get","radius","parseFloat","substr","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_13__","geometry","getGeometry","image","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_14__","radius1","radius2","points","angle","Math","PI","fill","stroke","maxFeatureCount","vector","calculateClusterInfo","resolution","features","getSource","getFeatures","i","length","originalFeatures","extent","Object","_src_ol_extent_js__WEBPACK_IMPORTED_MODULE_2__","j","jj","getExtent","max","set","currentResolution","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_6__","source","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_8__","distance","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_9__","url","format","_src_ol_format_KML_js__WEBPACK_IMPORTED_MODULE_3__","extractStyles","style","size","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_15__","min","text","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_16__","toString","raster","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_7__","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_10__","layer","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","layers","interactions","_src_ol_interaction_js__WEBPACK_IMPORTED_MODULE_4__","extend","_src_ol_interaction_js__WEBPACK_IMPORTED_MODULE_5__","condition","evt","type","styles","originalFeature","push","target","view","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","center","zoom"],"mappings":"kPAUA,MAAAA,EAAA,IAAAC,EAAA,GACAC,MAAA,2BAEAC,EAAA,IAAAC,EAAA,GACAF,MAAA,yBACAG,MAAA,IAEAC,EAAA,IAAAL,EAAA,GACAC,MAAA,SAEAK,EAAA,IAAAH,EAAA,GACAF,MAAA,qBACAG,MAAA,IAEAG,EAAA,IAAAP,EAAA,GACAC,MAAA,8BAGA,SAAAO,EAAAC,GAIA,MAAAC,EAAAD,EAAAE,IAAA,QAEAC,EAAA,MADAC,WAAAH,EAAAI,OAAA,IACA,GAEA,WAAAC,EAAA,GACAC,SAAAP,EAAAQ,cACAC,MAAA,IAAAC,EAAA,GACAC,QAAAR,EACAS,QAAA,EACAC,OAAA,EACAC,MAAAC,KAAAC,GACAC,KAAA3B,EACA4B,OAAAzB,MAKA,IAAA0B,EACAC,EAAA,KACA,MAAAC,EAAA,SAAAC,GACAH,EAAA,EACA,MAAAI,EAAAH,EAAAI,YAAAC,cACA,IAAAzB,EAAAG,EACA,QAAAuB,EAAAH,EAAAI,OAAA,EAAmCD,GAAA,IAAQA,EAAA,CAE3C,MAAAE,GADA5B,EAAAuB,EAAAG,IACAxB,IAAA,YACA2B,EAAAC,OAAAC,EAAA,EAAAD,GACA,IAAAE,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAL,EAAAD,OAA6CK,EAAAC,IAAQD,EACrDF,OAAAC,EAAA,EAAAD,CAAAD,EAAAD,EAAAI,GAAAxB,cAAA0B,aAEAf,EAAAJ,KAAAoB,IAAAhB,EAAAc,GACA9B,EAAA,KAAA2B,OAAAC,EAAA,EAAAD,CAAAD,GAAAC,OAAAC,EAAA,EAAAD,CAAAD,IACAP,EACAtB,EAAAoC,IAAA,SAAAjC,KAIA,IAAAkC,EA6CAjB,EAAA,IAAAkB,EAAA,GACAC,OAAA,IAAAC,EAAA,GACAC,SAAA,GACAF,OAAA,IAAAG,EAAA,GACAC,IAAA,qCACAC,OAAA,IAAAC,EAAA,GACAC,eAAA,QAIAC,MAtDA,SAAA/C,EAAAsB,GAKA,IAAAyB,EAJAzB,GAAAe,IACAhB,EAAAC,GACAe,EAAAf,GAGA,MAAA0B,EAAAhD,EAAAE,IAAA,YAAAyB,OAEAoB,EADAC,EAAA,EACA,IAAA1C,EAAA,GACAG,MAAA,IAAAwC,EAAA,GACA9C,OAAAH,EAAAE,IAAA,UACAe,KAAA,IAAA1B,EAAA,GACAC,OAAA,UAAAuB,KAAAmC,IAAA,MAAAF,EAAA7B,QAGAgC,KAAA,IAAAC,EAAA,GACAD,KAAAH,EAAAK,WACApC,KAAArB,EACAsB,OAAArB,MAKAE,EADAC,EAAAE,IAAA,gBAGA,OAAA6C,KAgCA,MAAAO,EAAA,IAAAC,EAAA,GACAhB,OAAA,IAAAiB,EAAA,GACAC,MAAA,YAIA,IAAAC,EAAA,GACAC,QAAAL,EAAAlC,GACAwC,aAAA9B,OAAA+B,EAAA,EAAA/B,GAAAgC,QAAA,IAAAC,EAAA,GACAC,UAAA,SAAAC,GACA,qBAAAA,EAAAC,MACA,eAAAD,EAAAC,MAEAnB,MA1CA,SAAA/C,GACA,MAAAmE,GAAA,IAAA7D,EAAA,GACAG,MAAA,IAAAwC,EAAA,GACA9C,OAAAH,EAAAE,IAAA,UACAe,KAAAnB,OAGA8B,EAAA5B,EAAAE,IAAA,YACA,IAAAkE,EACA,QAAA1C,EAAAE,EAAAD,OAAA,EAA2CD,GAAA,IAAQA,EACnD0C,EAAAxC,EAAAF,GACAyC,EAAAE,KAAAtE,EAAAqE,IAEA,OAAAD,OA+BAG,OAAA,MACAC,KAAA,IAAAC,EAAA,GACAC,QAAA,KACAC,KAAA","file":"earthquake-clusters.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {createEmpty, getWidth, getHeight, extend} from '../src/ol/extent.js';\nimport KML from '../src/ol/format/KML.js';\nimport {defaults as defaultInteractions, Select} from '../src/ol/interaction.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {Cluster, Stamen, Vector as VectorSource} from '../src/ol/source.js';\nimport {Circle as CircleStyle, Fill, RegularShape, Stroke, Style, Text} from '../src/ol/style.js';\n\n\nconst earthquakeFill = new Fill({\n  color: 'rgba(255, 153, 0, 0.8)'\n});\nconst earthquakeStroke = new Stroke({\n  color: 'rgba(255, 204, 0, 0.2)',\n  width: 1\n});\nconst textFill = new Fill({\n  color: '#fff'\n});\nconst textStroke = new Stroke({\n  color: 'rgba(0, 0, 0, 0.6)',\n  width: 3\n});\nconst invisibleFill = new Fill({\n  color: 'rgba(255, 255, 255, 0.01)'\n});\n\nfunction createEarthquakeStyle(feature) {\n  // 2012_Earthquakes_Mag5.kml stores the magnitude of each earthquake in a\n  // standards-violating <magnitude> tag in each Placemark.  We extract it\n  // from the Placemark's name instead.\n  const name = feature.get('name');\n  const magnitude = parseFloat(name.substr(2));\n  const radius = 5 + 20 * (magnitude - 5);\n\n  return new Style({\n    geometry: feature.getGeometry(),\n    image: new RegularShape({\n      radius1: radius,\n      radius2: 3,\n      points: 5,\n      angle: Math.PI,\n      fill: earthquakeFill,\n      stroke: earthquakeStroke\n    })\n  });\n}\n\nlet maxFeatureCount;\nlet vector = null;\nconst calculateClusterInfo = function(resolution) {\n  maxFeatureCount = 0;\n  const features = vector.getSource().getFeatures();\n  let feature, radius;\n  for (let i = features.length - 1; i >= 0; --i) {\n    feature = features[i];\n    const originalFeatures = feature.get('features');\n    const extent = createEmpty();\n    let j, jj;\n    for (j = 0, jj = originalFeatures.length; j < jj; ++j) {\n      extend(extent, originalFeatures[j].getGeometry().getExtent());\n    }\n    maxFeatureCount = Math.max(maxFeatureCount, jj);\n    radius = 0.25 * (getWidth(extent) + getHeight(extent)) /\n        resolution;\n    feature.set('radius', radius);\n  }\n};\n\nlet currentResolution;\nfunction styleFunction(feature, resolution) {\n  if (resolution != currentResolution) {\n    calculateClusterInfo(resolution);\n    currentResolution = resolution;\n  }\n  let style;\n  const size = feature.get('features').length;\n  if (size > 1) {\n    style = new Style({\n      image: new CircleStyle({\n        radius: feature.get('radius'),\n        fill: new Fill({\n          color: [255, 153, 0, Math.min(0.8, 0.4 + (size / maxFeatureCount))]\n        })\n      }),\n      text: new Text({\n        text: size.toString(),\n        fill: textFill,\n        stroke: textStroke\n      })\n    });\n  } else {\n    const originalFeature = feature.get('features')[0];\n    style = createEarthquakeStyle(originalFeature);\n  }\n  return style;\n}\n\nfunction selectStyleFunction(feature) {\n  const styles = [new Style({\n    image: new CircleStyle({\n      radius: feature.get('radius'),\n      fill: invisibleFill\n    })\n  })];\n  const originalFeatures = feature.get('features');\n  let originalFeature;\n  for (let i = originalFeatures.length - 1; i >= 0; --i) {\n    originalFeature = originalFeatures[i];\n    styles.push(createEarthquakeStyle(originalFeature));\n  }\n  return styles;\n}\n\nvector = new VectorLayer({\n  source: new Cluster({\n    distance: 40,\n    source: new VectorSource({\n      url: 'data/kml/2012_Earthquakes_Mag5.kml',\n      format: new KML({\n        extractStyles: false\n      })\n    })\n  }),\n  style: styleFunction\n});\n\nconst raster = new TileLayer({\n  source: new Stamen({\n    layer: 'toner'\n  })\n});\n\nconst map = new Map({\n  layers: [raster, vector],\n  interactions: defaultInteractions().extend([new Select({\n    condition: function(evt) {\n      return  evt.type == 'pointermove' ||\n          evt.type == 'singleclick';\n    },\n    style: selectStyleFunction\n  })]),\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n"],"sourceRoot":""}