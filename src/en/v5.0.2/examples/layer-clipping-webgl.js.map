{"version":3,"sources":["webpack:///./layer-clipping-webgl.js"],"names":["_src_ol_has_js__WEBPACK_IMPORTED_MODULE_3__","osm","_src_ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_4__","source","_src_ol_source_OSM_js__WEBPACK_IMPORTED_MODULE_5__","fragmentShaderSource","_src_ol_WebGLMap_js__WEBPACK_IMPORTED_MODULE_0__","layers","target","controls","Object","_src_ol_control_js__WEBPACK_IMPORTED_MODULE_2__","attributionOptions","collapsible","view","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","center","zoom","join","vertexShaderSource","on","event","context","glContext","gl","getGL","program","createProgram","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","attachShader","fragmentShader","FRAGMENT_SHADER","linkProgram","useProgram","positionLocation","getAttribLocation","enable","STENCIL_TEST","colorMask","stencilOp","KEEP","REPLACE","stencilFunc","ALWAYS","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","drawArrays","TRIANGLES","deleteBuffer","NOTEQUAL","disable","document","getElementById","style","display"],"mappings":"sJAOA,GAAAA,EAAA,EAMC,CAED,MAAAC,EAAA,IAAAC,EAAA,GACAC,OAAA,IAAAC,EAAA,IAiBAC,GAdA,IAAAC,EAAA,GACAC,QAAAN,GACAO,OAAA,MACAC,SAAAC,OAAAC,EAAA,EAAAD,EACAE,oBACAC,aAAA,KAGAC,KAAA,IAAAC,EAAA,GACAC,QAAA,KACAC,KAAA,OAKA,2BACA,gBACA,KACAC,KAAA,KAEAC,GACA,6BACA,gBACA,0CACA,KACAD,KAAA,IAEAjB,EAAAmB,GAAA,sBAAAC,GACA,MAAAC,EAAAD,EAAAE,UAEAC,EAAAF,EAAAG,QACAC,EAAAF,EAAAG,gBAEAC,EAAAJ,EAAAK,aAAAL,EAAAM,eACAN,EAAAO,aAAAH,EAAAT,GACAK,EAAAQ,cAAAJ,GACAJ,EAAAS,aAAAP,EAAAE,GAEA,MAAAM,EAAAV,EAAAK,aAAAL,EAAAW,iBACAX,EAAAO,aAAAG,EAAA7B,GACAmB,EAAAQ,cAAAE,GACAV,EAAAS,aAAAP,EAAAQ,GAEAV,EAAAY,YAAAV,GACAJ,EAAAe,WAAAX,GAEA,MAAAY,EAAAd,EAAAe,kBAAAb,EAAA,cAEAF,EAAAgB,OAAAhB,EAAAiB,cACAjB,EAAAkB,WAAA,YACAlB,EAAAmB,UAAAnB,EAAAoB,KAAApB,EAAAoB,KAAApB,EAAAqB,SACArB,EAAAsB,YAAAtB,EAAAuB,OAAA,OAEA,MAAAC,EAAAxB,EAAAyB,eACAzB,EAAA0B,WAAA1B,EAAA2B,aAAAH,GACAxB,EAAA4B,WAAA5B,EAAA2B,aAAA,IAAAE,eAEA,mBACA,oBAEA,qBACA,oBAEA,gBACA,iBAEA,kBACA,oBACA7B,EAAA8B,aAEA9B,EAAA+B,wBAAAjB,GACAd,EAAAgC,oBAAAlB,EAAA,EAAAd,EAAAiC,OAAA,OACAjC,EAAAkC,WAAAlC,EAAAmC,UAAA,MAEAnC,EAAA0B,WAAA1B,EAAA2B,aAAA,MACA3B,EAAAoC,aAAAZ,GAEAxB,EAAAkB,WAAA,YACAlB,EAAAsB,YAAAtB,EAAAqC,SAAA,OACArC,EAAAmB,UAAAnB,EAAAoB,KAAApB,EAAAoB,KAAApB,EAAAoB,QAGA3C,EAAAmB,GAAA,uBAAAC,GACA,MACAG,EADAH,EAAAE,UACAE,QACAD,EAAAsC,QAAAtC,EAAAiB,oBAjGA,CACAsB,SAAAC,eAAA,YAIAC,MAAAC,QAAA","file":"layer-clipping-webgl.js","sourcesContent":["import Map from '../src/ol/WebGLMap.js';\nimport View from '../src/ol/View.js';\nimport {defaults as defaultControls} from '../src/ol/control.js';\nimport {WEBGL} from '../src/ol/has.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport OSM from '../src/ol/source/OSM.js';\n\nif (!WEBGL) {\n  const info = document.getElementById('no-webgl');\n  /**\n   * display error message\n   */\n  info.style.display = '';\n} else {\n\n  const osm = new TileLayer({\n    source: new OSM()\n  });\n\n  const map = new Map({\n    layers: [osm],\n    target: 'map',\n    controls: defaultControls({\n      attributionOptions: {\n        collapsible: false\n      }\n    }),\n    view: new View({\n      center: [0, 0],\n      zoom: 2\n    })\n  });\n\n  const fragmentShaderSource = [\n    'precision mediump float;',\n    'void main() {',\n    '}'\n  ].join('');\n\n  const vertexShaderSource = [\n    'attribute vec2 a_position;',\n    'void main() {',\n    '  gl_Position = vec4(a_position, 0, 1);',\n    '}'\n  ].join('');\n\n  osm.on('precompose', function(event) {\n    const context = event.glContext;\n\n    const gl = context.getGL();\n    const program = gl.createProgram();\n\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertexShader, vertexShaderSource);\n    gl.compileShader(vertexShader);\n    gl.attachShader(program, vertexShader);\n\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentShaderSource);\n    gl.compileShader(fragmentShader);\n    gl.attachShader(program, fragmentShader);\n\n    gl.linkProgram(program);\n    context.useProgram(program);\n\n    const positionLocation = gl.getAttribLocation(program, 'a_position');\n\n    gl.enable(gl.STENCIL_TEST);\n    gl.colorMask(false, false, false, false);\n    gl.stencilOp(gl.KEEP, gl.KEEP, gl.REPLACE);\n    gl.stencilFunc(gl.ALWAYS, 1, 0xff);\n\n    const buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n      // first band\n      -1.0, -1.0, -0.75, -1.0, -1.0, 1.0,\n      -1.0, 1.0, -0.75, -1.0, -0.75, 1.0,\n      // second band\n      -0.5, -1.0, -0.25, -1.0, -0.5, 1.0,\n      -0.5, 1.0, -0.25, -1.0, -0.25, 1.0,\n      // third band\n      0.0, -1.0, 0.25, -1.0, 0.0, 1.0,\n      0.0, 1.0, 0.25, -1.0, 0.25, 1.0,\n      // forth band\n      0.5, -1.0, 0.75, -1.0, 0.5, 1.0,\n      0.5, 1.0, 0.75, -1.0, 0.75, 1.0\n    ]), gl.STATIC_DRAW);\n\n    gl.enableVertexAttribArray(positionLocation);\n    gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.drawArrays(gl.TRIANGLES, 0, 24);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    gl.deleteBuffer(buffer);\n\n    gl.colorMask(true, true, true, true);\n    gl.stencilFunc(gl.NOTEQUAL, 0, 0xff);\n    gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n  });\n\n  osm.on('postcompose', function(event) {\n    const context = event.glContext;\n    const gl = context.getGL();\n    gl.disable(gl.STENCIL_TEST);\n  });\n}\n"],"sourceRoot":""}