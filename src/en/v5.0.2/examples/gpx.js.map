{"version":3,"sources":["webpack:///./gpx.js"],"names":["raster","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_3__","source","_src_ol_source_BingMaps_js__WEBPACK_IMPORTED_MODULE_5__","imagerySet","key","style","Point","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_7__","image","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_8__","fill","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_9__","color","radius","stroke","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_10__","width","LineString","MultiLineString","vector","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_4__","_src_ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_6__","url","format","_src_ol_format_GPX_js__WEBPACK_IMPORTED_MODULE_2__","feature","getGeometry","getType","map","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","layers","target","document","getElementById","view","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","center","zoom","displayFeatureInfo","pixel","features","forEachFeatureAtPixel","push","length","info","i","ii","get","innerHTML","join","getTarget","cursor","on","evt","dragging","getEventPixel","originalEvent"],"mappings":"gMAQA,MAAAA,EAAA,IAAAC,EAAA,GACAC,OAAA,IAAAC,EAAA,GACAC,WAAA,SACAC,IAAA,uEAIAC,GACAC,MAAA,IAAAC,EAAA,GACAC,MAAA,IAAAC,EAAA,GACAC,KAAA,IAAAC,EAAA,GACAC,MAAA,wBAEAC,OAAA,EACAC,OAAA,IAAAC,EAAA,GACAH,MAAA,OACAI,MAAA,QAIAC,WAAA,IAAAV,EAAA,GACAO,OAAA,IAAAC,EAAA,GACAH,MAAA,OACAI,MAAA,MAGAE,gBAAA,IAAAX,EAAA,GACAO,OAAA,IAAAC,EAAA,GACAH,MAAA,OACAI,MAAA,OAKAG,EAAA,IAAAC,EAAA,GACAnB,OAAA,IAAAoB,EAAA,GACAC,IAAA,0BACAC,OAAA,IAAAC,EAAA,IAEAnB,MAAA,SAAAoB,GACA,OAAApB,EAAAoB,EAAAC,cAAAC,cAIAC,EAAA,IAAAC,EAAA,GACAC,QAAA/B,EAAAoB,GACAY,OAAAC,SAAAC,eAAA,OACAC,KAAA,IAAAC,EAAA,GACAC,SAAA,qCACAC,KAAA,OAIAC,EAAA,SAAAC,GACA,MAAAC,KAIA,GAHAZ,EAAAa,sBAAAF,EAAA,SAAAd,GACAe,EAAAE,KAAAjB,KAEAe,EAAAG,OAAA,GACA,MAAAC,KACA,IAAAC,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAN,EAAAG,OAAqCE,EAAAC,IAAQD,EAC7CD,EAAAF,KAAAF,EAAAK,GAAAE,IAAA,SAEAf,SAAAC,eAAA,QAAAe,UAAAJ,EAAAK,KAAA,mBACArB,EAAAsB,YAAA7C,MAAA8C,OAAA,eAEAnB,SAAAC,eAAA,QAAAe,UAAA,SACApB,EAAAsB,YAAA7C,MAAA8C,OAAA,IAIAvB,EAAAwB,GAAA,uBAAAC,GACA,GAAAA,EAAAC,SACA,OAEA,MAAAf,EAAAX,EAAA2B,cAAAF,EAAAG,eACAlB,EAAAC,KAGAX,EAAAwB,GAAA,iBAAAC,GACAf,EAAAe,EAAAd","file":"gpx.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport GPX from '../src/ol/format/GPX.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport BingMaps from '../src/ol/source/BingMaps.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport {Circle as CircleStyle, Fill, Stroke, Style} from '../src/ol/style.js';\n\nconst raster = new TileLayer({\n  source: new BingMaps({\n    imagerySet: 'Aerial',\n    key: 'As1HiMj1PvLPlqc_gtM7AqZfBL8ZL3VrjaS3zIb22Uvb9WKhuJObROC-qUpa81U5'\n  })\n});\n\nconst style = {\n  'Point': new Style({\n    image: new CircleStyle({\n      fill: new Fill({\n        color: 'rgba(255,255,0,0.4)'\n      }),\n      radius: 5,\n      stroke: new Stroke({\n        color: '#ff0',\n        width: 1\n      })\n    })\n  }),\n  'LineString': new Style({\n    stroke: new Stroke({\n      color: '#f00',\n      width: 3\n    })\n  }),\n  'MultiLineString': new Style({\n    stroke: new Stroke({\n      color: '#0f0',\n      width: 3\n    })\n  })\n};\n\nconst vector = new VectorLayer({\n  source: new VectorSource({\n    url: 'data/gpx/fells_loop.gpx',\n    format: new GPX()\n  }),\n  style: function(feature) {\n    return style[feature.getGeometry().getType()];\n  }\n});\n\nconst map = new Map({\n  layers: [raster, vector],\n  target: document.getElementById('map'),\n  view: new View({\n    center: [-7916041.528716288, 5228379.045749711],\n    zoom: 12\n  })\n});\n\nconst displayFeatureInfo = function(pixel) {\n  const features = [];\n  map.forEachFeatureAtPixel(pixel, function(feature) {\n    features.push(feature);\n  });\n  if (features.length > 0) {\n    const info = [];\n    let i, ii;\n    for (i = 0, ii = features.length; i < ii; ++i) {\n      info.push(features[i].get('desc'));\n    }\n    document.getElementById('info').innerHTML = info.join(', ') || '(unknown)';\n    map.getTarget().style.cursor = 'pointer';\n  } else {\n    document.getElementById('info').innerHTML = '&nbsp;';\n    map.getTarget().style.cursor = '';\n  }\n};\n\nmap.on('pointermove', function(evt) {\n  if (evt.dragging) {\n    return;\n  }\n  const pixel = map.getEventPixel(evt.originalEvent);\n  displayFeatureInfo(pixel);\n});\n\nmap.on('click', function(evt) {\n  displayFeatureInfo(evt.pixel);\n});\n"],"sourceRoot":""}