{"version":3,"sources":["webpack:///./dynamic-data.js"],"names":["map","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","layers","_src_ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_4__","source","_src_ol_source_OSM_js__WEBPACK_IMPORTED_MODULE_5__","target","view","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","center","zoom","imageStyle","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_6__","image","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_7__","radius","snapToPixel","fill","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_8__","color","stroke","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_9__","width","headInnerImageStyle","headOuterImageStyle","r","on","event","vectorContext","frameState","theta","Math","PI","time","coordinates","i","t","x","cos","y","sin","push","setStyle","drawGeometry","_src_ol_geom_js__WEBPACK_IMPORTED_MODULE_2__","headPoint","_src_ol_geom_js__WEBPACK_IMPORTED_MODULE_3__","length","render"],"mappings":"sLAQA,MAAAA,EAAA,IAAAC,EAAA,GACAC,QACA,IAAAC,EAAA,GACAC,OAAA,IAAAC,EAAA,KAGAC,OAAA,MACAC,KAAA,IAAAC,EAAA,GACAC,QAAA,KACAC,KAAA,MAIAC,EAAA,IAAAC,EAAA,GACAC,MAAA,IAAAC,EAAA,GACAC,OAAA,EACAC,aAAA,EACAC,KAAA,IAAAC,EAAA,GAAoBC,MAAA,WACpBC,OAAA,IAAAC,EAAA,GAAwBF,MAAA,MAAAG,MAAA,QAIxBC,EAAA,IAAAX,EAAA,GACAC,MAAA,IAAAC,EAAA,GACAC,OAAA,EACAC,aAAA,EACAC,KAAA,IAAAC,EAAA,GAAoBC,MAAA,aAIpBK,EAAA,IAAAZ,EAAA,GACAC,MAAA,IAAAC,EAAA,GACAC,OAAA,EACAC,aAAA,EACAC,KAAA,IAAAC,EAAA,GAAoBC,MAAA,cAOpBM,EAAA,IAEAzB,EAAA0B,GAAA,uBAAAC,GACA,MAAAC,EAAAD,EAAAC,cACAC,EAAAF,EAAAE,WACAC,EAAA,EAAAC,KAAAC,GAAAH,EAAAI,KAPA,IAQAC,KACA,IAAAC,EACA,IAAAA,EAAA,EAAaA,EAXb,MAWoBA,EAAA,CACpB,MAAAC,EAAAN,EAAA,EAAAC,KAAAC,GAAAG,EAZA,IAaAE,EAAA,IAAAN,KAAAO,IAAAF,GATA,IASAL,KAAAO,IAAA,IAAAF,EAAAX,GACAc,EAAA,IAAAR,KAAAS,IAAAJ,GAVA,IAUAL,KAAAS,IAAA,IAAAJ,EAAAX,GACAS,EAAAO,MAAAJ,EAAAE,IAEAX,EAAAc,SAAA/B,GACAiB,EAAAe,aAAA,IAAAC,EAAA,EAAAV,IAEA,MAAAW,EAAA,IAAAC,EAAA,EAAAZ,IAAAa,OAAA,IAEAnB,EAAAc,SAAAlB,GACAI,EAAAe,aAAAE,GAEAjB,EAAAc,SAAAnB,GACAK,EAAAe,aAAAE,GAEA7C,EAAAgD,WAEAhD,EAAAgD","file":"dynamic-data.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {MultiPoint, Point} from '../src/ol/geom.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport OSM from '../src/ol/source/OSM.js';\nimport {Circle as CircleStyle, Fill, Stroke, Style} from '../src/ol/style.js';\n\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM()\n    })\n  ],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n\nconst imageStyle = new Style({\n  image: new CircleStyle({\n    radius: 5,\n    snapToPixel: false,\n    fill: new Fill({color: 'yellow'}),\n    stroke: new Stroke({color: 'red', width: 1})\n  })\n});\n\nconst headInnerImageStyle = new Style({\n  image: new CircleStyle({\n    radius: 2,\n    snapToPixel: false,\n    fill: new Fill({color: 'blue'})\n  })\n});\n\nconst headOuterImageStyle = new Style({\n  image: new CircleStyle({\n    radius: 5,\n    snapToPixel: false,\n    fill: new Fill({color: 'black'})\n  })\n});\n\nconst n = 200;\nconst omegaTheta = 30000; // Rotation period in ms\nconst R = 7e6;\nconst r = 2e6;\nconst p = 2e6;\nmap.on('postcompose', function(event) {\n  const vectorContext = event.vectorContext;\n  const frameState = event.frameState;\n  const theta = 2 * Math.PI * frameState.time / omegaTheta;\n  const coordinates = [];\n  let i;\n  for (i = 0; i < n; ++i) {\n    const t = theta + 2 * Math.PI * i / n;\n    const x = (R + r) * Math.cos(t) + p * Math.cos((R + r) * t / r);\n    const y = (R + r) * Math.sin(t) + p * Math.sin((R + r) * t / r);\n    coordinates.push([x, y]);\n  }\n  vectorContext.setStyle(imageStyle);\n  vectorContext.drawGeometry(new MultiPoint(coordinates));\n\n  const headPoint = new Point(coordinates[coordinates.length - 1]);\n\n  vectorContext.setStyle(headOuterImageStyle);\n  vectorContext.drawGeometry(headPoint);\n\n  vectorContext.setStyle(headInnerImageStyle);\n  vectorContext.drawGeometry(headPoint);\n\n  map.render();\n});\nmap.render();\n"],"sourceRoot":""}