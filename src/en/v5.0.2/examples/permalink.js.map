{"version":3,"sources":["webpack:///./permalink.js"],"names":["zoom","center","rotation","window","location","hash","parts","replace","split","length","parseInt","parseFloat","map","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","layers","_src_ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_3__","source","_src_ol_source_OSM_js__WEBPACK_IMPORTED_MODULE_4__","controls","Object","_src_ol_control_js__WEBPACK_IMPORTED_MODULE_2__","attributionOptions","collapsible","target","view","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","shouldUpdate","getView","on","getCenter","getZoom","Math","round","getRotation","state","history","pushState","addEventListener","event","setCenter","setZoom","setRotation"],"mappings":"2IAOA,IAAAA,EAAA,EACAC,GAAA,KACAC,EAAA,EAEA,QAAAC,OAAAC,SAAAC,KAAA,CAEA,MACAC,EADAH,OAAAC,SAAAC,KAAAE,QAAA,YACAC,MAAA,KACA,IAAAF,EAAAG,SACAT,EAAAU,SAAAJ,EAAA,OACAL,GACAU,WAAAL,EAAA,IACAK,WAAAL,EAAA,KAEAJ,EAAAS,WAAAL,EAAA,KAIA,MAAAM,EAAA,IAAAC,EAAA,GACAC,QACA,IAAAC,EAAA,GACAC,OAAA,IAAAC,EAAA,KAGAC,SAAAC,OAAAC,EAAA,EAAAD,EACAE,oBACAC,aAAA,KAGAC,OAAA,MACAC,KAAA,IAAAC,EAAA,GACAxB,SACAD,OACAE,eAIA,IAAAwB,GAAA,EACA,MAAAF,EAAAZ,EAAAe,UAsBAf,EAAAgB,GAAA,UArBA,WACA,IAAAF,EAGA,YADAA,GAAA,GAIA,MAAAzB,EAAAuB,EAAAK,YACAxB,EAAA,QACAmB,EAAAM,UAAA,IACAC,KAAAC,MAAA,IAAA/B,EAAA,YACA8B,KAAAC,MAAA,IAAA/B,EAAA,YACAuB,EAAAS,cACAC,GACAlC,KAAAwB,EAAAM,UACA7B,OAAAuB,EAAAK,YACA3B,SAAAsB,EAAAS,eAEA9B,OAAAgC,QAAAC,UAAAF,EAAA,MAAA7B,KAOAF,OAAAkC,iBAAA,oBAAAC,GACA,OAAAA,EAAAJ,QAGAtB,EAAAe,UAAAY,UAAAD,EAAAJ,MAAAjC,QACAW,EAAAe,UAAAa,QAAAF,EAAAJ,MAAAlC,MACAY,EAAAe,UAAAc,YAAAH,EAAAJ,MAAAhC,UACAwB,GAAA","file":"permalink.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {defaults as defaultControls} from '../src/ol/control.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport OSM from '../src/ol/source/OSM.js';\n\n// default zoom, center and rotation\nlet zoom = 2;\nlet center = [0, 0];\nlet rotation = 0;\n\nif (window.location.hash !== '') {\n  // try to restore center, zoom-level and rotation from the URL\n  const hash = window.location.hash.replace('#map=', '');\n  const parts = hash.split('/');\n  if (parts.length === 4) {\n    zoom = parseInt(parts[0], 10);\n    center = [\n      parseFloat(parts[1]),\n      parseFloat(parts[2])\n    ];\n    rotation = parseFloat(parts[3]);\n  }\n}\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM()\n    })\n  ],\n  controls: defaultControls({\n    attributionOptions: {\n      collapsible: false\n    }\n  }),\n  target: 'map',\n  view: new View({\n    center: center,\n    zoom: zoom,\n    rotation: rotation\n  })\n});\n\nlet shouldUpdate = true;\nconst view = map.getView();\nconst updatePermalink = function() {\n  if (!shouldUpdate) {\n    // do not update the URL when the view was changed in the 'popstate' handler\n    shouldUpdate = true;\n    return;\n  }\n\n  const center = view.getCenter();\n  const hash = '#map=' +\n      view.getZoom() + '/' +\n      Math.round(center[0] * 100) / 100 + '/' +\n      Math.round(center[1] * 100) / 100 + '/' +\n      view.getRotation();\n  const state = {\n    zoom: view.getZoom(),\n    center: view.getCenter(),\n    rotation: view.getRotation()\n  };\n  window.history.pushState(state, 'map', hash);\n};\n\nmap.on('moveend', updatePermalink);\n\n// restore the view state when navigating through the history, see\n// https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onpopstate\nwindow.addEventListener('popstate', function(event) {\n  if (event.state === null) {\n    return;\n  }\n  map.getView().setCenter(event.state.center);\n  map.getView().setZoom(event.state.zoom);\n  map.getView().setRotation(event.state.rotation);\n  shouldUpdate = false;\n});\n"],"sourceRoot":""}