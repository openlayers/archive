{"version":3,"sources":["webpack:///./drag-and-drop-image-vector.js"],"names":["defaultStyle","Point","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_13__","image","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_14__","fill","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_15__","color","radius","stroke","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_16__","width","LineString","Polygon","MultiPoint","MultiLineString","MultiPolygon","styleFunction","feature","resolution","featureStyleFunction","getStyleFunction","call","getGeometry","getType","dragAndDropInteraction","_src_ol_interaction_js__WEBPACK_IMPORTED_MODULE_8__","formatConstructors","_src_ol_format_js__WEBPACK_IMPORTED_MODULE_2__","_src_ol_format_js__WEBPACK_IMPORTED_MODULE_3__","_src_ol_format_js__WEBPACK_IMPORTED_MODULE_4__","_src_ol_format_js__WEBPACK_IMPORTED_MODULE_5__","_src_ol_format_js__WEBPACK_IMPORTED_MODULE_6__","map","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","interactions","Object","_src_ol_interaction_js__WEBPACK_IMPORTED_MODULE_7__","extend","layers","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_9__","source","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_11__","imagerySet","key","target","view","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","center","zoom","on","event","vectorSource","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_12__","features","addLayer","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_10__","renderMode","style","getView","fit","getExtent","displayFeatureInfo","pixel","forEachFeatureAtPixel","push","length","info","i","ii","get","document","getElementById","innerHTML","join","evt","dragging","getEventPixel","originalEvent"],"mappings":"oPASA,MAAAA,GACAC,MAAA,IAAAC,EAAA,GACAC,MAAA,IAAAC,EAAA,GACAC,KAAA,IAAAC,EAAA,GACAC,MAAA,wBAEAC,OAAA,EACAC,OAAA,IAAAC,EAAA,GACAH,MAAA,OACAI,MAAA,QAIAC,WAAA,IAAAV,EAAA,GACAO,OAAA,IAAAC,EAAA,GACAH,MAAA,OACAI,MAAA,MAGAE,QAAA,IAAAX,EAAA,GACAG,KAAA,IAAAC,EAAA,GACAC,MAAA,wBAEAE,OAAA,IAAAC,EAAA,GACAH,MAAA,OACAI,MAAA,MAGAG,WAAA,IAAAZ,EAAA,GACAC,MAAA,IAAAC,EAAA,GACAC,KAAA,IAAAC,EAAA,GACAC,MAAA,wBAEAC,OAAA,EACAC,OAAA,IAAAC,EAAA,GACAH,MAAA,OACAI,MAAA,QAIAI,gBAAA,IAAAb,EAAA,GACAO,OAAA,IAAAC,EAAA,GACAH,MAAA,OACAI,MAAA,MAGAK,aAAA,IAAAd,EAAA,GACAG,KAAA,IAAAC,EAAA,GACAC,MAAA,sBAEAE,OAAA,IAAAC,EAAA,GACAH,MAAA,OACAI,MAAA,OAKAM,EAAA,SAAAC,EAAAC,GACA,MAAAC,EAAAF,EAAAG,mBACA,OAAAD,EACAA,EAAAE,KAAAJ,EAAAC,GAEAnB,EAAAkB,EAAAK,cAAAC,YAIAC,EAAA,IAAAC,EAAA,GACAC,oBACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,KAIAC,EAAA,IAAAC,EAAA,GACAC,aAAAC,OAAAC,EAAA,EAAAD,GAAAE,QAAAb,IACAc,QACA,IAAAC,EAAA,GACAC,OAAA,IAAAC,EAAA,GACAC,WAAA,SACAC,IAAA,wEAIAC,OAAA,MACAC,KAAA,IAAAC,EAAA,GACAC,QAAA,KACAC,KAAA,MAIAxB,EAAAyB,GAAA,uBAAAC,GACA,MAAAC,EAAA,IAAAC,EAAA,GACAC,SAAAH,EAAAG,WAEArB,EAAAsB,SAAA,IAAAC,EAAA,GACAC,WAAA,QACAhB,OAAAW,EACAM,MAAAzC,KAEAgB,EAAA0B,UAAAC,IAAAR,EAAAS,eAGA,MAAAC,EAAA,SAAAC,GACA,MAAAT,KAIA,GAHArB,EAAA+B,sBAAAD,EAAA,SAAA7C,GACAoC,EAAAW,KAAA/C,KAEAoC,EAAAY,OAAA,GACA,MAAAC,KACA,IAAAC,EAAAC,EACA,IAAAD,EAAA,EAAAC,EAAAf,EAAAY,OAAqCE,EAAAC,IAAQD,EAC7CD,EAAAF,KAAAX,EAAAc,GAAAE,IAAA,SAEAC,SAAAC,eAAA,QAAAC,UAAAN,EAAAO,KAAA,oBAEAH,SAAAC,eAAA,QAAAC,UAAA,UAIAxC,EAAAiB,GAAA,uBAAAyB,GACA,GAAAA,EAAAC,SACA,OAEA,MAAAb,EAAA9B,EAAA4C,cAAAF,EAAAG,eACAhB,EAAAC,KAGA9B,EAAAiB,GAAA,iBAAAyB,GACAb,EAAAa,EAAAZ","file":"drag-and-drop-image-vector.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {GPX, GeoJSON, IGC, KML, TopoJSON} from '../src/ol/format.js';\nimport {defaults as defaultInteractions, DragAndDrop} from '../src/ol/interaction.js';\nimport {Vector as VectorLayer, Tile as TileLayer} from '../src/ol/layer.js';\nimport {BingMaps, Vector as VectorSource} from '../src/ol/source.js';\nimport {Circle as CircleStyle, Fill, Stroke, Style} from '../src/ol/style.js';\n\n\nconst defaultStyle = {\n  'Point': new Style({\n    image: new CircleStyle({\n      fill: new Fill({\n        color: 'rgba(255,255,0,0.5)'\n      }),\n      radius: 5,\n      stroke: new Stroke({\n        color: '#ff0',\n        width: 1\n      })\n    })\n  }),\n  'LineString': new Style({\n    stroke: new Stroke({\n      color: '#f00',\n      width: 3\n    })\n  }),\n  'Polygon': new Style({\n    fill: new Fill({\n      color: 'rgba(0,255,255,0.5)'\n    }),\n    stroke: new Stroke({\n      color: '#0ff',\n      width: 1\n    })\n  }),\n  'MultiPoint': new Style({\n    image: new CircleStyle({\n      fill: new Fill({\n        color: 'rgba(255,0,255,0.5)'\n      }),\n      radius: 5,\n      stroke: new Stroke({\n        color: '#f0f',\n        width: 1\n      })\n    })\n  }),\n  'MultiLineString': new Style({\n    stroke: new Stroke({\n      color: '#0f0',\n      width: 3\n    })\n  }),\n  'MultiPolygon': new Style({\n    fill: new Fill({\n      color: 'rgba(0,0,255,0.5)'\n    }),\n    stroke: new Stroke({\n      color: '#00f',\n      width: 1\n    })\n  })\n};\n\nconst styleFunction = function(feature, resolution) {\n  const featureStyleFunction = feature.getStyleFunction();\n  if (featureStyleFunction) {\n    return featureStyleFunction.call(feature, resolution);\n  } else {\n    return defaultStyle[feature.getGeometry().getType()];\n  }\n};\n\nconst dragAndDropInteraction = new DragAndDrop({\n  formatConstructors: [\n    GPX,\n    GeoJSON,\n    IGC,\n    KML,\n    TopoJSON\n  ]\n});\n\nconst map = new Map({\n  interactions: defaultInteractions().extend([dragAndDropInteraction]),\n  layers: [\n    new TileLayer({\n      source: new BingMaps({\n        imagerySet: 'Aerial',\n        key: 'As1HiMj1PvLPlqc_gtM7AqZfBL8ZL3VrjaS3zIb22Uvb9WKhuJObROC-qUpa81U5'\n      })\n    })\n  ],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n\ndragAndDropInteraction.on('addfeatures', function(event) {\n  const vectorSource = new VectorSource({\n    features: event.features\n  });\n  map.addLayer(new VectorLayer({\n    renderMode: 'image',\n    source: vectorSource,\n    style: styleFunction\n  }));\n  map.getView().fit(vectorSource.getExtent());\n});\n\nconst displayFeatureInfo = function(pixel) {\n  const features = [];\n  map.forEachFeatureAtPixel(pixel, function(feature) {\n    features.push(feature);\n  });\n  if (features.length > 0) {\n    const info = [];\n    let i, ii;\n    for (i = 0, ii = features.length; i < ii; ++i) {\n      info.push(features[i].get('name'));\n    }\n    document.getElementById('info').innerHTML = info.join(', ') || '&nbsp';\n  } else {\n    document.getElementById('info').innerHTML = '&nbsp;';\n  }\n};\n\nmap.on('pointermove', function(evt) {\n  if (evt.dragging) {\n    return;\n  }\n  const pixel = map.getEventPixel(evt.originalEvent);\n  displayFeatureInfo(pixel);\n});\n\nmap.on('click', function(evt) {\n  displayFeatureInfo(evt.pixel);\n});\n"],"sourceRoot":""}