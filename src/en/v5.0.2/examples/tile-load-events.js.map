{"version":3,"sources":["webpack:///./tile-load-events.js"],"names":["Progress","el","this","loading","loaded","prototype","addLoading","show","update","addLoaded","this_","setTimeout","width","toFixed","style","hide","visibility","progress","document","getElementById","source","_src_ol_source_TileJSON_js__WEBPACK_IMPORTED_MODULE_3__","url","crossOrigin","on","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","layers","_src_ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_2__","target","view","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","center","zoom"],"mappings":"mIAWA,SAAAA,EAAAC,GACAC,KAAAD,KACAC,KAAAC,QAAA,EACAD,KAAAE,OAAA,EAOAJ,EAAAK,UAAAC,WAAA,WACA,IAAAJ,KAAAC,SACAD,KAAAK,SAEAL,KAAAC,QACAD,KAAAM,UAOAR,EAAAK,UAAAI,UAAA,WACA,MAAAC,EAAAR,KACAS,WAAA,aACAD,EAAAN,OACAM,EAAAF,UACG,MAOHR,EAAAK,UAAAG,OAAA,WACA,MAAAI,GAAAV,KAAAE,OAAAF,KAAAC,QAAA,KAAAU,QAAA,OAEA,GADAX,KAAAD,GAAAa,MAAAF,QACAV,KAAAC,UAAAD,KAAAE,OAAA,CACAF,KAAAC,QAAA,EACAD,KAAAE,OAAA,EACA,MAAAM,EAAAR,KACAS,WAAA,WACAD,EAAAK,QACK,OAQLf,EAAAK,UAAAE,KAAA,WACAL,KAAAD,GAAAa,MAAAE,WAAA,WAOAhB,EAAAK,UAAAU,KAAA,WACAb,KAAAC,UAAAD,KAAAE,SACAF,KAAAD,GAAAa,MAAAE,WAAA,SACAd,KAAAD,GAAAa,MAAAF,MAAA,IAIA,MAAAK,EAAA,IAAAjB,EAAAkB,SAAAC,eAAA,aAEAC,EAAA,IAAAC,EAAA,GACAC,IAAA,kEACAC,YAAA,cAGAH,EAAAI,GAAA,2BACAP,EAAAX,eAGAc,EAAAI,GAAA,yBACAP,EAAAR,cAEAW,EAAAI,GAAA,2BACAP,EAAAR,cAGA,IAAAgB,EAAA,GACAC,QACA,IAAAC,EAAA,GAAmBP,YAEnBQ,OAAA,MACAC,KAAA,IAAAC,EAAA,GACAC,QAAA,KACAC,KAAA","file":"tile-load-events.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport TileJSON from '../src/ol/source/TileJSON.js';\n\n\n/**\n * Renders a progress bar.\n * @param {Element} el The target element.\n * @constructor\n */\nfunction Progress(el) {\n  this.el = el;\n  this.loading = 0;\n  this.loaded = 0;\n}\n\n\n/**\n * Increment the count of loading tiles.\n */\nProgress.prototype.addLoading = function() {\n  if (this.loading === 0) {\n    this.show();\n  }\n  ++this.loading;\n  this.update();\n};\n\n\n/**\n * Increment the count of loaded tiles.\n */\nProgress.prototype.addLoaded = function() {\n  const this_ = this;\n  setTimeout(function() {\n    ++this_.loaded;\n    this_.update();\n  }, 100);\n};\n\n\n/**\n * Update the progress bar.\n */\nProgress.prototype.update = function() {\n  const width = (this.loaded / this.loading * 100).toFixed(1) + '%';\n  this.el.style.width = width;\n  if (this.loading === this.loaded) {\n    this.loading = 0;\n    this.loaded = 0;\n    const this_ = this;\n    setTimeout(function() {\n      this_.hide();\n    }, 500);\n  }\n};\n\n\n/**\n * Show the progress bar.\n */\nProgress.prototype.show = function() {\n  this.el.style.visibility = 'visible';\n};\n\n\n/**\n * Hide the progress bar.\n */\nProgress.prototype.hide = function() {\n  if (this.loading === this.loaded) {\n    this.el.style.visibility = 'hidden';\n    this.el.style.width = 0;\n  }\n};\n\nconst progress = new Progress(document.getElementById('progress'));\n\nconst source = new TileJSON({\n  url: 'https://api.tiles.mapbox.com/v3/mapbox.world-bright.json?secure',\n  crossOrigin: 'anonymous'\n});\n\nsource.on('tileloadstart', function() {\n  progress.addLoading();\n});\n\nsource.on('tileloadend', function() {\n  progress.addLoaded();\n});\nsource.on('tileloaderror', function() {\n  progress.addLoaded();\n});\n\nconst map = new Map({\n  layers: [\n    new TileLayer({source: source})\n  ],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n"],"sourceRoot":""}