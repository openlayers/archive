{"version":3,"sources":["webpack:///./turf.js"],"names":["source","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_6__","fetch","then","response","json","format","_src_ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_2__","street","readFeatures","turfLine","writeFeatureObject","length","turf","lineDistance","i","turfPoint","along","marker","readFeature","getGeometry","transform","addFeature","vectorLayer","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_3__","rasterLayer","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_4__","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_7__","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","layers","target","document","getElementById","view","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","center","Object","_src_ol_proj_js__WEBPACK_IMPORTED_MODULE_5__","zoom"],"mappings":"iKAQA,MAAAA,EAAA,IAAAC,EAAA,EACAC,MAAA,oCAAAC,KAAA,SAAAC,GACA,OAAAA,EAAAC,SACCF,KAAA,SAAAE,GACD,MAAAC,EAAA,IAAAC,EAAA,EAEAC,EADAF,EAAAG,aAAAJ,GACA,GAGAK,EAAAJ,EAAAK,mBAAAH,GAMAI,EAAAC,KAAAC,aAAAJ,EAAA,cACA,QAAAK,EAAA,EAAiBA,GAAAH,EAJjB,GAIyCG,IAAA,CACzC,MAAAC,EAAAH,KAAAI,MAAAP,EALA,GAKAK,EAAA,cAGAG,EAAAZ,EAAAa,YAAAH,GACAE,EAAAE,cAAAC,UAAA,yBACArB,EAAAsB,WAAAJ,GAGAV,EAAAY,cAAAC,UAAA,yBACArB,EAAAsB,WAAAd,KAEA,MAAAe,EAAA,IAAAC,EAAA,GACAxB,WAGAyB,EAAA,IAAAC,EAAA,GACA1B,OAAA,IAAA2B,EAAA,IAGA,IAAAC,EAAA,GACAC,QAAAJ,EAAAF,GACAO,OAAAC,SAAAC,eAAA,OACAC,KAAA,IAAAC,EAAA,GACAC,OAAAC,OAAAC,EAAA,EAAAD,EAAA,sBACAE,KAAA","file":"turf.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport GeoJSON from '../src/ol/format/GeoJSON.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {fromLonLat} from '../src/ol/proj.js';\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\n\n\nconst source = new VectorSource();\nfetch('data/geojson/roads-seoul.geojson').then(function(response) {\n  return response.json();\n}).then(function(json) {\n  const format = new GeoJSON();\n  const features = format.readFeatures(json);\n  const street = features[0];\n\n  // convert to a turf.js feature\n  const turfLine = format.writeFeatureObject(street);\n\n  // show a marker every 200 meters\n  const distance = 0.2;\n\n  // get the line length in kilometers\n  const length = turf.lineDistance(turfLine, 'kilometers');\n  for (let i = 1; i <= length / distance; i++) {\n    const turfPoint = turf.along(turfLine, i * distance, 'kilometers');\n\n    // convert the generated point to a OpenLayers feature\n    const marker = format.readFeature(turfPoint);\n    marker.getGeometry().transform('EPSG:4326', 'EPSG:3857');\n    source.addFeature(marker);\n  }\n\n  street.getGeometry().transform('EPSG:4326', 'EPSG:3857');\n  source.addFeature(street);\n});\nconst vectorLayer = new VectorLayer({\n  source: source\n});\n\nconst rasterLayer = new TileLayer({\n  source: new OSM()\n});\n\nconst map = new Map({\n  layers: [rasterLayer, vectorLayer],\n  target: document.getElementById('map'),\n  view: new View({\n    center: fromLonLat([126.980366, 37.526540]),\n    zoom: 15\n  })\n});\n"],"sourceRoot":""}