{"version":3,"sources":["webpack:///./sphere-mollweide.js"],"names":["proj4__WEBPACK_IMPORTED_MODULE_8__","defs","Object","_src_ol_proj_proj4_js__WEBPACK_IMPORTED_MODULE_7__","sphereMollweideProjection","_src_ol_proj_Projection_js__WEBPACK_IMPORTED_MODULE_5__","code","extent","worldExtent","map","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_1__","keyboardEventTarget","document","layers","_src_ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_4__","source","_src_ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_6__","url","format","_src_ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_3__","target","view","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_2__","center","projection","resolutions","zoom","_src_ol_Graticule_js__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"8KAWAA,EAAA,EAAAC,KAAA,0FAEAC,OAAAC,EAAA,EAAAD,CAAAF,EAAA,GAIA,MAAAI,EAAA,IAAAC,EAAA,GACAC,KAAA,aACAC,SAAA,qCACA,qCACAC,cAAA,wBAGAC,EAAA,IAAAC,EAAA,GACAC,oBAAAC,SACAC,QACA,IAAAC,EAAA,GACAC,OAAA,IAAAC,EAAA,GACAC,IAAA,sCACAC,OAAA,IAAAC,EAAA,OAIAC,OAAA,MACAC,KAAA,IAAAC,EAAA,GACAC,QAAA,KACAC,WAAApB,EACAqB,aAAA,kCACAC,KAAA,MAIA,IAAAC,EAAA,GACAlB","file":"sphere-mollweide.js","sourcesContent":["import Graticule from '../src/ol/Graticule.js';\nimport Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport GeoJSON from '../src/ol/format/GeoJSON.js';\nimport VectorLayer from '../src/ol/layer/Vector.js';\nimport Projection from '../src/ol/proj/Projection.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport {register} from '../src/ol/proj/proj4.js';\nimport proj4 from 'proj4';\n\n\nproj4.defs('ESRI:53009', '+proj=moll +lon_0=0 +x_0=0 +y_0=0 +a=6371000 ' +\n    '+b=6371000 +units=m +no_defs');\nregister(proj4);\n\n// Configure the Sphere Mollweide projection object with an extent,\n// and a world extent. These are required for the Graticule.\nconst sphereMollweideProjection = new Projection({\n  code: 'ESRI:53009',\n  extent: [-9009954.605703328, -9009954.605703328,\n    9009954.605703328, 9009954.605703328],\n  worldExtent: [-179, -89.99, 179, 89.99]\n});\n\nconst map = new Map({\n  keyboardEventTarget: document,\n  layers: [\n    new VectorLayer({\n      source: new VectorSource({\n        url: 'data/geojson/countries-110m.geojson',\n        format: new GeoJSON()\n      })\n    })\n  ],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    projection: sphereMollweideProjection,\n    resolutions: [65536, 32768, 16384, 8192, 4096, 2048],\n    zoom: 0\n  })\n});\n\nnew Graticule({\n  map: map\n});\n"],"sourceRoot":""}