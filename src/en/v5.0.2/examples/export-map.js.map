{"version":3,"sources":["webpack:///./export-map.js"],"names":["map","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","layers","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_4__","source","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_6__","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_5__","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_7__","url","format","_src_ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_3__","target","controls","Object","_src_ol_control_js__WEBPACK_IMPORTED_MODULE_2__","attributionOptions","collapsible","view","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","center","zoom","document","getElementById","addEventListener","once","event","canvas","context","navigator","msSaveBlob","msToBlob","toBlob","blob","saveAs","renderSync"],"mappings":"oKAOA,MAAAA,EAAA,IAAAC,EAAA,GACAC,QACA,IAAAC,EAAA,GACAC,OAAA,IAAAC,EAAA,IAEA,IAAAC,EAAA,GACAF,OAAA,IAAAG,EAAA,GACAC,IAAA,iCACAC,OAAA,IAAAC,EAAA,OAIAC,OAAA,MACAC,SAAAC,OAAAC,EAAA,EAAAD,EACAE,oBACAC,aAAA,KAGAC,KAAA,IAAAC,EAAA,GACAC,QAAA,KACAC,KAAA,MAIAC,SAAAC,eAAA,cAAAC,iBAAA,mBACAvB,EAAAwB,KAAA,uBAAAC,GACA,MAAAC,EAAAD,EAAAE,QAAAD,OACAE,UAAAC,WACAD,UAAAC,WAAAH,EAAAI,WAAA,WAEAJ,EAAAK,OAAA,SAAAC,GACAC,OAAAD,EAAA,eAIAhC,EAAAkC","file":"export-map.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {defaults as defaultControls} from '../src/ol/control.js';\nimport GeoJSON from '../src/ol/format/GeoJSON.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM()\n    }),\n    new VectorLayer({\n      source: new VectorSource({\n        url: 'data/geojson/countries.geojson',\n        format: new GeoJSON()\n      })\n    })\n  ],\n  target: 'map',\n  controls: defaultControls({\n    attributionOptions: {\n      collapsible: false\n    }\n  }),\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n\ndocument.getElementById('export-png').addEventListener('click', function() {\n  map.once('postcompose', function(event) {\n    const canvas = event.context.canvas;\n    if (navigator.msSaveBlob) {\n      navigator.msSaveBlob(canvas.msToBlob(), 'map.png');\n    } else {\n      canvas.toBlob(function(blob) {\n        saveAs(blob, 'map.png');\n      });\n    }\n  });\n  map.renderSync();\n});\n"],"sourceRoot":""}