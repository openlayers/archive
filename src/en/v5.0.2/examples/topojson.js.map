{"version":3,"sources":["webpack:///./topojson.js"],"names":["raster","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_3__","source","_src_ol_source_TileJSON_js__WEBPACK_IMPORTED_MODULE_5__","url","style","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_7__","fill","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_8__","color","stroke","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_9__","width","vector","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_4__","_src_ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_6__","format","_src_ol_format_TopoJSON_js__WEBPACK_IMPORTED_MODULE_2__","layers","overlaps","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","target","view","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","center","zoom"],"mappings":"sLASA,MAAAA,EAAA,IAAAC,EAAA,GACAC,OAAA,IAAAC,EAAA,GACAC,IAAA,oEAIAC,EAAA,IAAAC,EAAA,GACAC,KAAA,IAAAC,EAAA,GACAC,MAAA,6BAEAC,OAAA,IAAAC,EAAA,GACAF,MAAA,UACAG,MAAA,MAIAC,EAAA,IAAAC,EAAA,GACAZ,OAAA,IAAAa,EAAA,GACAX,IAAA,gCACAY,OAAA,IAAAC,EAAA,GAGAC,QAAA,eAEAC,UAAA,IAEAd,UAGA,IAAAe,EAAA,GACAF,QAAAlB,EAAAa,GACAQ,OAAA,MACAC,KAAA,IAAAC,EAAA,GACAC,QAAA,KACAC,KAAA","file":"topojson.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport TopoJSON from '../src/ol/format/TopoJSON.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport TileJSON from '../src/ol/source/TileJSON.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport {Fill, Stroke, Style} from '../src/ol/style.js';\n\n\nconst raster = new TileLayer({\n  source: new TileJSON({\n    url: 'https://api.tiles.mapbox.com/v3/mapbox.world-dark.json?secure'\n  })\n});\n\nconst style = new Style({\n  fill: new Fill({\n    color: 'rgba(255, 255, 255, 0.6)'\n  }),\n  stroke: new Stroke({\n    color: '#319FD3',\n    width: 1\n  })\n});\n\nconst vector = new VectorLayer({\n  source: new VectorSource({\n    url: 'data/topojson/world-110m.json',\n    format: new TopoJSON({\n      // don't want to render the full world polygon (stored as 'land' layer),\n      // which repeats all countries\n      layers: ['countries']\n    }),\n    overlaps: false\n  }),\n  style: style\n});\n\nconst map = new Map({\n  layers: [raster, vector],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 1\n  })\n});\n"],"sourceRoot":""}