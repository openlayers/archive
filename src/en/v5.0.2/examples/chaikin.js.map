{"version":3,"sources":["webpack:///../node_modules/chaikin-smooth/index.js","webpack:///../node_modules/vec2-copy/index.js","webpack:///./chaikin.js"],"names":["copy","__webpack_require__","module","exports","input","output","Array","isArray","length","push","i","p0","p1","p0x","p0y","p1x","p1y","Q","R","out","a","vectorSource","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_4__","map","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","layers","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_2__","source","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_5__","opacity","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_3__","target","view","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","center","zoom","shallSmoothen","document","getElementById","numIterations","draw","_src_ol_interaction_Draw_js__WEBPACK_IMPORTED_MODULE_6__","type","addInteraction","on","event","checked","geometry","feature","getGeometry","smoothened","path","Math","min","max","chaikin_smooth__WEBPACK_IMPORTED_MODULE_7___default","makeSmooth","getCoordinates","parseInt","value","setCoordinates"],"mappings":"+EAAA,IAAAA,EAAAC,EAAA,KAEAC,EAAAC,QAAA,SAAAC,EAAAC,GACAC,MAAAC,QAAAF,KACAA,MAEAD,EAAAI,OAAA,GACAH,EAAAI,KAAAT,GAAA,KAAAI,EAAA,KACA,QAAAM,EAAA,EAAiBA,EAAAN,EAAAI,OAAA,EAAkBE,IAAA,CACnC,IAAAC,EAAAP,EAAAM,GACAE,EAAAR,EAAAM,EAAA,GACAG,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAI,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GAEAK,GAAA,IAAAJ,EAAA,IAAAE,EAAA,IAAAD,EAAA,IAAAE,GACAE,GAAA,IAAAL,EAAA,IAAAE,EAAA,IAAAD,EAAA,IAAAE,GACAX,EAAAI,KAAAQ,GACAZ,EAAAI,KAAAS,GAIA,OAFAd,EAAAI,OAAA,GACAH,EAAAI,KAAAT,GAAA,KAAAI,IAAAI,OAAA,KACAH,sBCvBAH,EAAAC,QAAA,SAAAgB,EAAAC,GAGA,OAFAD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAD,sHCcA,MAAAE,EAAA,IAAAC,EAAA,MAEAC,EAAA,IAAAC,EAAA,GACAC,QACA,IAAAC,EAAA,GACAC,OAAA,IAAAC,EAAA,EACAC,QAAA,KAEA,IAAAC,EAAA,GACAH,OAAAN,KAGAU,OAAA,MACAC,KAAA,IAAAC,EAAA,GACAC,QAAA,yBACAC,KAAA,MAIAC,EAAAC,SAAAC,eAAA,kBACAC,EAAAF,SAAAC,eAAA,cAEAE,EAAA,IAAAC,EAAA,GACAd,OAAAN,EACAqB,KAAA,eAEAnB,EAAAoB,eAAAH,GACAA,EAAAI,GAAA,mBAAAC,GACA,IAAAT,EAAAU,QACA,OAEA,MACAC,EADAF,EAAAG,QACAC,cAEAC,EA3CA,SAAAC,EAAAZ,GAEA,IADAA,EAAAa,KAAAC,IAAAD,KAAAE,IAAAf,EAAA,OACAA,EAAA,GACAY,EAAAI,IAAAJ,GACAZ,IAEA,OAAAY,EAqCAK,CADAT,EAAAU,iBACAC,SAAAnB,EAAAoB,MAAA,QACAZ,EAAAa,eAAAV","file":"chaikin.js","sourcesContent":["var copy = require('vec2-copy')\n\nmodule.exports = function(input, output) {\n    if (!Array.isArray(output))\n        output = []\n\n    if (input.length>0)\n        output.push(copy([0, 0], input[0]))\n    for (var i=0; i<input.length-1; i++) {\n        var p0 = input[i]\n        var p1 = input[i+1]\n        var p0x = p0[0],\n            p0y = p0[1],\n            p1x = p1[0],\n            p1y = p1[1]\n\n        var Q = [ 0.75 * p0x + 0.25 * p1x, 0.75 * p0y + 0.25 * p1y ]\n        var R = [ 0.25 * p0x + 0.75 * p1x, 0.25 * p0y + 0.75 * p1y ]\n        output.push(Q)\n        output.push(R)\n    }\n    if (input.length > 1)\n        output.push(copy([0, 0], input[ input.length-1 ]))\n    return output\n}","module.exports = function vec2Copy(out, a) {\n    out[0] = a[0]\n    out[1] = a[1]\n    return out\n}","import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\nimport Draw from '../src/ol/interaction/Draw.js';\n\nimport smooth from 'chaikin-smooth';\n\nfunction makeSmooth(path, numIterations) {\n  numIterations = Math.min(Math.max(numIterations, 1), 10);\n  while (numIterations > 0) {\n    path = smooth(path);\n    numIterations--;\n  }\n  return path;\n}\n\nconst vectorSource = new VectorSource({});\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM(),\n      opacity: 0.5\n    }),\n    new VectorLayer({\n      source: vectorSource\n    })\n  ],\n  target: 'map',\n  view: new View({\n    center: [1078373.5950, 6871994.5910],\n    zoom: 5\n  })\n});\n\nconst shallSmoothen = document.getElementById('shall-smoothen');\nconst numIterations = document.getElementById('iterations');\n\nconst draw = new Draw({\n  source: vectorSource,\n  type: 'LineString'\n});\nmap.addInteraction(draw);\ndraw.on('drawend', function(event) {\n  if (!shallSmoothen.checked) {\n    return;\n  }\n  const feat = event.feature;\n  const geometry = feat.getGeometry();\n  const coords = geometry.getCoordinates();\n  const smoothened = makeSmooth(coords, parseInt(numIterations.value, 10) || 5);\n  geometry.setCoordinates(smoothened);\n});\n"],"sourceRoot":""}