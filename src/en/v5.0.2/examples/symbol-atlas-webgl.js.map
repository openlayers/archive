{"version":3,"sources":["webpack:///./symbol-atlas-webgl.js"],"names":["atlasManager","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_6__","initialSize","symbolInfo","opacity","scale","fillColor","strokeColor","radiuses","symbolCount","length","symbols","i","j","info","push","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_7__","radius","fill","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_8__","color","stroke","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_9__","width","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_10__","points","radius2","angle","features","Array","feature","geometry","e","_src_ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_3__","Math","random","_src_ol_Feature_js__WEBPACK_IMPORTED_MODULE_0__","setStyle","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_11__","image","vectorSource","_src_ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_5__","vector","_src_ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_4__","source","_src_ol_WebGLMap_js__WEBPACK_IMPORTED_MODULE_1__","layers","target","document","getElementById","view","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_2__","center","zoom"],"mappings":"2MAQA,MAAAA,EAAA,IAAAC,EAAA,GAGAC,YAAA,MAGAC,IACAC,QAAA,EACAC,MAAA,EACAC,UAAA,yBACAC,YAAA,2BAEAH,QAAA,IACAC,MAAA,KACAC,UAAA,yBACAC,YAAA,2BAEAH,QAAA,GACAC,MAAA,IACAC,UAAA,yBACAC,YAAA,0BAEAH,QAAA,EACAC,MAAA,EACAC,UAAA,yBACAC,YAAA,2BAGAC,GAAA,gBACAC,EAAAN,EAAAO,OAAAF,EAAAE,OAAA,EACAC,KACA,IAAAC,EAAAC,EACA,IAAAD,EAAA,EAAWA,EAAAT,EAAAO,SAAuBE,EAAA,CAClC,MAAAE,EAAAX,EAAAS,GACA,IAAAC,EAAA,EAAaA,EAAAL,EAAAE,SAAqBG,EAElCF,EAAAI,KAAA,IAAAC,EAAA,GACAZ,QAAAU,EAAAV,QACAC,MAAAS,EAAAT,MACAY,OAAAT,EAAAK,GACAK,KAAA,IAAAC,EAAA,GACAC,MAAAN,EAAAR,YAEAe,OAAA,IAAAC,EAAA,GACAF,MAAAN,EAAAP,YACAgB,MAAA,IAIAvB,kBAIAW,EAAAI,KAAA,IAAAS,EAAA,GACAC,OAAA,EACArB,QAAAU,EAAAV,QACAC,MAAAS,EAAAT,MACAY,OAAAT,EAAAK,GACAa,QAAA,GAAAlB,EAAAK,GACAc,MAAA,IACAT,KAAA,IAAAC,EAAA,GACAC,MAAAN,EAAAR,YAEAe,OAAA,IAAAC,EAAA,GACAF,MAAAN,EAAAP,YACAgB,MAAA,IAEAvB,kBAKA,MACA4B,EAAA,IAAAC,MADA,KAEA,IAAAC,EAAAC,EACA,MAAAC,EAAA,KACA,IAAApB,EAAA,EAAWA,EAJX,MAI6BA,EAC7BmB,EAAA,IAAAE,EAAA,GACA,IAAAC,KAAAC,SAAAH,EAAA,IAAAE,KAAAC,SAAAH,KACAF,EAAA,IAAAM,EAAA,EAAAL,IACAM,SACA,IAAAC,EAAA,GACAC,MAAA5B,EAAAC,EAAAH,MAGAmB,EAAAhB,GAAAkB,EAGA,MAAAU,EAAA,IAAAC,EAAA,GACAb,aAEAc,EAAA,IAAAC,EAAA,GACAC,OAAAJ,IAGA,IAAAK,EAAA,GACAC,QAAAJ,GACAK,OAAAC,SAAAC,eAAA,OACAC,KAAA,IAAAC,EAAA,GACAC,QAAA,KACAC,KAAA","file":"symbol-atlas-webgl.js","sourcesContent":["import Feature from '../src/ol/Feature.js';\nimport Map from '../src/ol/WebGLMap.js';\nimport View from '../src/ol/View.js';\nimport Point from '../src/ol/geom/Point.js';\nimport VectorLayer from '../src/ol/layer/Vector.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport {AtlasManager, Circle as CircleStyle, Fill, RegularShape, Stroke, Style} from '../src/ol/style.js';\n\nconst atlasManager = new AtlasManager({\n  // we increase the initial size so that all symbols fit into\n  // a single atlas image\n  initialSize: 512\n});\n\nconst symbolInfo = [{\n  opacity: 1.0,\n  scale: 1.0,\n  fillColor: 'rgba(255, 153, 0, 0.4)',\n  strokeColor: 'rgba(255, 204, 0, 0.2)'\n}, {\n  opacity: 0.75,\n  scale: 1.25,\n  fillColor: 'rgba(70, 80, 224, 0.4)',\n  strokeColor: 'rgba(12, 21, 138, 0.2)'\n}, {\n  opacity: 0.5,\n  scale: 1.5,\n  fillColor: 'rgba(66, 150, 79, 0.4)',\n  strokeColor: 'rgba(20, 99, 32, 0.2)'\n}, {\n  opacity: 1.0,\n  scale: 1.0,\n  fillColor: 'rgba(176, 61, 35, 0.4)',\n  strokeColor: 'rgba(145, 43, 20, 0.2)'\n}];\n\nconst radiuses = [3, 6, 9, 15, 19, 25];\nconst symbolCount = symbolInfo.length * radiuses.length * 2;\nconst symbols = [];\nlet i, j;\nfor (i = 0; i < symbolInfo.length; ++i) {\n  const info = symbolInfo[i];\n  for (j = 0; j < radiuses.length; ++j) {\n    // circle symbol\n    symbols.push(new CircleStyle({\n      opacity: info.opacity,\n      scale: info.scale,\n      radius: radiuses[j],\n      fill: new Fill({\n        color: info.fillColor\n      }),\n      stroke: new Stroke({\n        color: info.strokeColor,\n        width: 1\n      }),\n      // by passing the atlas manager to the symbol,\n      // the symbol will be added to an atlas\n      atlasManager: atlasManager\n    }));\n\n    // star symbol\n    symbols.push(new RegularShape({\n      points: 8,\n      opacity: info.opacity,\n      scale: info.scale,\n      radius: radiuses[j],\n      radius2: radiuses[j] * 0.7,\n      angle: 1.4,\n      fill: new Fill({\n        color: info.fillColor\n      }),\n      stroke: new Stroke({\n        color: info.strokeColor,\n        width: 1\n      }),\n      atlasManager: atlasManager\n    }));\n  }\n}\n\nconst featureCount = 50000;\nconst features = new Array(featureCount);\nlet feature, geometry;\nconst e = 25000000;\nfor (i = 0; i < featureCount; ++i) {\n  geometry = new Point(\n    [2 * e * Math.random() - e, 2 * e * Math.random() - e]);\n  feature = new Feature(geometry);\n  feature.setStyle(\n    new Style({\n      image: symbols[i % symbolCount]\n    })\n  );\n  features[i] = feature;\n}\n\nconst vectorSource = new VectorSource({\n  features: features\n});\nconst vector = new VectorLayer({\n  source: vectorSource\n});\n\nconst map = new Map({\n  layers: [vector],\n  target: document.getElementById('map'),\n  view: new View({\n    center: [0, 0],\n    zoom: 4\n  })\n});\n"],"sourceRoot":""}