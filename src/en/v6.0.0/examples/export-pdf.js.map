{"version":3,"sources":["webpack:///./export-pdf.js"],"names":["raster","source","feature","readFeature","getGeometry","transform","const","vector","features","map","layers","target","view","center","zoom","dims","a0","a1","a2","a3","a4","a5","exportOptions","filter","element","className","indexOf","exportButton","document","getElementById","addEventListener","disabled","body","style","cursor","format","value","resolution","dim","width","Math","round","height","size","getSize","viewResolution","getView","getResolution","once","getViewport","then","dataUrl","pdf","jsPDF","undefined","addImage","save","setSize","setResolution","printSize","scaling","min"],"mappings":"2FAAA,yEAQMA,EAAS,IAAI,IAAU,CAC3BC,OAAQ,IAAI,MAIRC,GADS,IAAI,KACIC,YACrB,6KAGFD,EAAQE,cAAcC,UAAU,YAAa,aAE7CC,IAAMC,EAAS,IAAI,IAAY,CAC7BN,OAAQ,IAAI,IAAa,CACvBO,SAAU,CAACN,OAKTO,EAAM,IAAI,IAAI,CAClBC,OAAQ,CAACV,EAAQO,GACjBI,OAAQ,MACRC,KAAM,IAAI,IAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAKJC,EAAO,CACXC,GAAI,CAAC,KAAM,KACXC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,KACVC,GAAI,CAAC,IAAK,MAMNC,EAAgB,CACpBC,OAAQ,SAASC,GACf,OAAoD,IAA7CA,EAAQC,UAAUC,QAAQ,gBAI/BC,EAAeC,SAASC,eAAe,cAE7CF,EAAaG,iBAAiB,QAAS,WAErCH,EAAaI,UAAW,EACxBH,SAASI,KAAKC,MAAMC,OAAS,WAE7B5B,IAAM6B,EAASP,SAASC,eAAe,UAAUO,MAC3CC,EAAaT,SAASC,eAAe,cAAcO,MACnDE,EAAMvB,EAAKoB,GACXI,EAAQC,KAAKC,MAAMH,EAAI,GAAKD,EAAa,MACzCK,EAASF,KAAKC,MAAMH,EAAI,GAAKD,EAAa,MAC1CM,EAAOlC,EAAImC,UACXC,EAAiBpC,EAAIqC,UAAUC,gBAErCtC,EAAIuC,KAAK,iBAAkB,WACzB1B,EAAciB,MAAQA,EACtBjB,EAAcoB,OAASA,EACvB,iBAAOjC,EAAIwC,cAAe3B,GAAe4B,KAAK,SAASC,GACrD7C,IAAM8C,EAAM,IAAIC,MAAM,iBAAaC,EAAWnB,GAC9CiB,EAAIG,SAASJ,EAAS,OAAQ,EAAG,EAAGb,EAAI,GAAIA,EAAI,IAChDc,EAAII,KAAK,WAET/C,EAAIgD,QAAQd,GACZlC,EAAIqC,UAAUY,cAAcb,GAC5BlB,EAAaI,UAAW,EACxBH,SAASI,KAAKC,MAAMC,OAAS,WAKjC5B,IAAMqD,EAAY,CAACpB,EAAOG,GAC1BjC,EAAIgD,QAAQE,GACZrD,IAAMsD,EAAUpB,KAAKqB,IAAItB,EAAQI,EAAK,GAAID,EAASC,EAAK,IACxDlC,EAAIqC,UAAUY,cAAcb,EAAiBe,KAE5C,K","file":"export-pdf.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport WKT from '../src/ol/format/WKT.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\n\nimport {toJpeg} from 'html-to-image';\n\nconst raster = new TileLayer({\n  source: new OSM()\n});\n\nconst format = new WKT();\nconst feature = format.readFeature(\n  'POLYGON((10.689697265625 -25.0927734375, 34.595947265625 ' +\n        '-20.1708984375, 38.814697265625 -35.6396484375, 13.502197265625 ' +\n        '-39.1552734375, 10.689697265625 -25.0927734375))');\nfeature.getGeometry().transform('EPSG:4326', 'EPSG:3857');\n\nconst vector = new VectorLayer({\n  source: new VectorSource({\n    features: [feature]\n  })\n});\n\n\nconst map = new Map({\n  layers: [raster, vector],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n\n\nconst dims = {\n  a0: [1189, 841],\n  a1: [841, 594],\n  a2: [594, 420],\n  a3: [420, 297],\n  a4: [297, 210],\n  a5: [210, 148]\n};\n\n\n// export options for html-to-image.\n// See: https://github.com/bubkoo/html-to-image#options\nconst exportOptions = {\n  filter: function(element) {\n    return element.className.indexOf('ol-control') === -1;\n  }\n};\n\nconst exportButton = document.getElementById('export-pdf');\n\nexportButton.addEventListener('click', function() {\n\n  exportButton.disabled = true;\n  document.body.style.cursor = 'progress';\n\n  const format = document.getElementById('format').value;\n  const resolution = document.getElementById('resolution').value;\n  const dim = dims[format];\n  const width = Math.round(dim[0] * resolution / 25.4);\n  const height = Math.round(dim[1] * resolution / 25.4);\n  const size = map.getSize();\n  const viewResolution = map.getView().getResolution();\n\n  map.once('rendercomplete', function() {\n    exportOptions.width = width;\n    exportOptions.height = height;\n    toJpeg(map.getViewport(), exportOptions).then(function(dataUrl) {\n      const pdf = new jsPDF('landscape', undefined, format);\n      pdf.addImage(dataUrl, 'JPEG', 0, 0, dim[0], dim[1]);\n      pdf.save('map.pdf');\n      // Reset original map size\n      map.setSize(size);\n      map.getView().setResolution(viewResolution);\n      exportButton.disabled = false;\n      document.body.style.cursor = 'auto';\n    });\n  });\n\n  // Set print size\n  const printSize = [width, height];\n  map.setSize(printSize);\n  const scaling = Math.min(width / size[0], height / size[1]);\n  map.getView().setResolution(viewResolution / scaling);\n\n}, false);\n"],"sourceRoot":""}