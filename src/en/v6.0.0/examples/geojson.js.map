{"version":3,"sources":["webpack:///./geojson.js"],"names":["image","radius","fill","stroke","color","width","styles","lineDash","vectorSource","features","readFeatures","addFeature","const","vectorLayer","source","style","feature","getGeometry","getType","layers","target","view","center","zoom"],"mappings":"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","file":"geojson.js","sourcesContent":["import Feature from '../src/ol/Feature.js';\nimport Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport GeoJSON from '../src/ol/format/GeoJSON.js';\nimport Circle from '../src/ol/geom/Circle.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\nimport {Circle as CircleStyle, Fill, Stroke, Style} from '../src/ol/style.js';\n\n\nconst image = new CircleStyle({\n  radius: 5,\n  fill: null,\n  stroke: new Stroke({color: 'red', width: 1})\n});\n\nconst styles = {\n  'Point': new Style({\n    image: image\n  }),\n  'LineString': new Style({\n    stroke: new Stroke({\n      color: 'green',\n      width: 1\n    })\n  }),\n  'MultiLineString': new Style({\n    stroke: new Stroke({\n      color: 'green',\n      width: 1\n    })\n  }),\n  'MultiPoint': new Style({\n    image: image\n  }),\n  'MultiPolygon': new Style({\n    stroke: new Stroke({\n      color: 'yellow',\n      width: 1\n    }),\n    fill: new Fill({\n      color: 'rgba(255, 255, 0, 0.1)'\n    })\n  }),\n  'Polygon': new Style({\n    stroke: new Stroke({\n      color: 'blue',\n      lineDash: [4],\n      width: 3\n    }),\n    fill: new Fill({\n      color: 'rgba(0, 0, 255, 0.1)'\n    })\n  }),\n  'GeometryCollection': new Style({\n    stroke: new Stroke({\n      color: 'magenta',\n      width: 2\n    }),\n    fill: new Fill({\n      color: 'magenta'\n    }),\n    image: new CircleStyle({\n      radius: 10,\n      fill: null,\n      stroke: new Stroke({\n        color: 'magenta'\n      })\n    })\n  }),\n  'Circle': new Style({\n    stroke: new Stroke({\n      color: 'red',\n      width: 2\n    }),\n    fill: new Fill({\n      color: 'rgba(255,0,0,0.2)'\n    })\n  })\n};\n\nconst styleFunction = function(feature) {\n  return styles[feature.getGeometry().getType()];\n};\n\nconst geojsonObject = {\n  'type': 'FeatureCollection',\n  'crs': {\n    'type': 'name',\n    'properties': {\n      'name': 'EPSG:3857'\n    }\n  },\n  'features': [{\n    'type': 'Feature',\n    'geometry': {\n      'type': 'Point',\n      'coordinates': [0, 0]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'LineString',\n      'coordinates': [[4e6, -2e6], [8e6, 2e6]]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'LineString',\n      'coordinates': [[4e6, 2e6], [8e6, -2e6]]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'Polygon',\n      'coordinates': [[[-5e6, -1e6], [-4e6, 1e6], [-3e6, -1e6]]]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'MultiLineString',\n      'coordinates': [\n        [[-1e6, -7.5e5], [-1e6, 7.5e5]],\n        [[1e6, -7.5e5], [1e6, 7.5e5]],\n        [[-7.5e5, -1e6], [7.5e5, -1e6]],\n        [[-7.5e5, 1e6], [7.5e5, 1e6]]\n      ]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'MultiPolygon',\n      'coordinates': [\n        [[[-5e6, 6e6], [-5e6, 8e6], [-3e6, 8e6], [-3e6, 6e6]]],\n        [[[-2e6, 6e6], [-2e6, 8e6], [0, 8e6], [0, 6e6]]],\n        [[[1e6, 6e6], [1e6, 8e6], [3e6, 8e6], [3e6, 6e6]]]\n      ]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'GeometryCollection',\n      'geometries': [{\n        'type': 'LineString',\n        'coordinates': [[-5e6, -5e6], [0, -5e6]]\n      }, {\n        'type': 'Point',\n        'coordinates': [4e6, -5e6]\n      }, {\n        'type': 'Polygon',\n        'coordinates': [[[1e6, -6e6], [2e6, -4e6], [3e6, -6e6]]]\n      }]\n    }\n  }]\n};\n\nconst vectorSource = new VectorSource({\n  features: (new GeoJSON()).readFeatures(geojsonObject)\n});\n\nvectorSource.addFeature(new Feature(new Circle([5e6, 7e6], 1e6)));\n\nconst vectorLayer = new VectorLayer({\n  source: vectorSource,\n  style: styleFunction\n});\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM()\n    }),\n    vectorLayer\n  ],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n"],"sourceRoot":""}