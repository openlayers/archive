{"version":3,"sources":["webpack:///../src/ol/interaction/Translate.js","webpack:///./translate-features.js"],"names":["_interaction_Property_js__WEBPACK_IMPORTED_MODULE_8__","__webpack_require__","TranslateEventType","TRANSLATESTART","TRANSLATING","TRANSLATEEND","TranslateEvent","type","features","coordinate","_events_Event_js__WEBPACK_IMPORTED_MODULE_4__","call","this","Object","_util_js__WEBPACK_IMPORTED_MODULE_0__","const","Translate","opt_options","_interaction_Pointer_js__WEBPACK_IMPORTED_MODULE_7__","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","layerFilter","options","lastCoordinate_","features_","undefined","layers","layer","_array_js__WEBPACK_IMPORTED_MODULE_6__","_functions_js__WEBPACK_IMPORTED_MODULE_5__","layerFilter_","hitTolerance_","hitTolerance","lastFeature_","_events_js__WEBPACK_IMPORTED_MODULE_3__","_Object_js__WEBPACK_IMPORTED_MODULE_2__","ACTIVE","handleActiveChanged_","event","featuresAtPixel_","pixel","map","_Collection_js__WEBPACK_IMPORTED_MODULE_1__","dispatchEvent","newCoordinate","deltaX","deltaY","forEach","feature","geom","getGeometry","translate","setGeometry","elem","getViewport","classList","remove","add","prototype","forEachFeatureAtPixel","getArray","bind","getHitTolerance","setHitTolerance","setMap","oldMap","getMap","updateState_","let","active","getActive","__webpack_exports__","raster","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_6__","source","_src_ol_source_OSM_js__WEBPACK_IMPORTED_MODULE_8__","vector","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_7__","_src_ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_9__","url","format","_src_ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_2__","select","_src_ol_interaction_js__WEBPACK_IMPORTED_MODULE_3__","_src_ol_interaction_js__WEBPACK_IMPORTED_MODULE_4__","getFeatures","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","interactions","_src_ol_interaction_js__WEBPACK_IMPORTED_MODULE_5__","extend","target","view","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","center","zoom"],"mappings":"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","file":"translate-features.js","sourcesContent":["/**\n * @module ol/interaction/Translate\n */\nimport {inherits} from '../util.js';\nimport Collection from '../Collection.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {TRUE} from '../functions.js';\nimport {includes} from '../array.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\n\n\n/**\n * @enum {string}\n */\nconst TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/Collection.<module:ol/Feature>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array.<module:ol/layer/Layer>|function(module:ol/layer/Layer): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/interaction/Translate~TranslateEventType} type Type.\n * @param {module:ol/Collection.<module:ol/Feature>} features The features translated.\n * @param {module:ol/coordinate~Coordinate} coordinate The event coordinate.\n */\nexport const TranslateEvent = function(type, features, coordinate) {\n\n  Event.call(this, type);\n\n  /**\n   * The features being translated.\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @api\n   */\n  this.features = features;\n\n  /**\n   * The coordinate of the drag event.\n   * @const\n   * @type {module:ol/coordinate~Coordinate}\n   * @api\n   */\n  this.coordinate = coordinate;\n};\n\ninherits(TranslateEvent, Event);\n\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @fires module:ol/interaction/Translate~TranslateEvent\n * @param {module:ol/interaction/Translate~Options=} opt_options Options.\n * @api\n */\nconst Translate = function(opt_options) {\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleMoveEvent: handleMoveEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * The last position we translated to.\n   * @type {module:ol/coordinate~Coordinate}\n   * @private\n   */\n  this.lastCoordinate_ = null;\n\n\n  /**\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @private\n   */\n  this.features_ = options.features !== undefined ? options.features : null;\n\n  /** @type {function(module:ol/layer/Layer): boolean} */\n  let layerFilter;\n  if (options.layers) {\n    if (typeof options.layers === 'function') {\n      layerFilter = options.layers;\n    } else {\n      const layers = options.layers;\n      layerFilter = function(layer) {\n        return includes(layers, layer);\n      };\n    }\n  } else {\n    layerFilter = TRUE;\n  }\n\n  /**\n   * @private\n   * @type {function(module:ol/layer/Layer): boolean}\n   */\n  this.layerFilter_ = layerFilter;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n  /**\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.lastFeature_ = null;\n\n  listen(this,\n    getChangeEventType(InteractionProperty.ACTIVE),\n    this.handleActiveChanged_, this);\n\n};\n\ninherits(Translate, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Translate}\n */\nfunction handleDownEvent(event) {\n  this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n  if (!this.lastCoordinate_ && this.lastFeature_) {\n    this.lastCoordinate_ = event.coordinate;\n    handleMoveEvent.call(this, event);\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATESTART, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Translate}\n */\nfunction handleUpEvent(event) {\n  if (this.lastCoordinate_) {\n    this.lastCoordinate_ = null;\n    handleMoveEvent.call(this, event);\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATEEND, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @this {module:ol/interaction/Translate}\n */\nfunction handleDragEvent(event) {\n  if (this.lastCoordinate_) {\n    const newCoordinate = event.coordinate;\n    const deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n    const deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    features.forEach(function(feature) {\n      const geom = feature.getGeometry();\n      geom.translate(deltaX, deltaY);\n      feature.setGeometry(geom);\n    });\n\n    this.lastCoordinate_ = newCoordinate;\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATING, features,\n        newCoordinate));\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserEvent} event Event.\n * @this {module:ol/interaction/Translate}\n */\nfunction handleMoveEvent(event) {\n  const elem = event.map.getViewport();\n\n  // Change the cursor to grab/grabbing if hovering any of the features managed\n  // by the interaction\n  if (this.featuresAtPixel_(event.pixel, event.map)) {\n    elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n    elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n  } else {\n    elem.classList.remove('ol-grab', 'ol-grabbing');\n  }\n}\n\n\n/**\n * Tests to see if the given coordinates intersects any of our selected\n * features.\n * @param {module:ol~Pixel} pixel Pixel coordinate to test for intersection.\n * @param {module:ol/PluggableMap} map Map to test the intersection on.\n * @return {module:ol/Feature} Returns the feature found at the specified pixel\n * coordinates.\n * @private\n */\nTranslate.prototype.featuresAtPixel_ = function(pixel, map) {\n  return map.forEachFeatureAtPixel(pixel,\n    function(feature) {\n      if (!this.features_ || includes(this.features_.getArray(), feature)) {\n        return feature;\n      }\n    }.bind(this), {\n      layerFilter: this.layerFilter_,\n      hitTolerance: this.hitTolerance_\n    });\n};\n\n\n/**\n * Returns the Hit-detection tolerance.\n * @returns {number} Hit tolerance in pixels.\n * @api\n */\nTranslate.prototype.getHitTolerance = function() {\n  return this.hitTolerance_;\n};\n\n\n/**\n * Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @api\n */\nTranslate.prototype.setHitTolerance = function(hitTolerance) {\n  this.hitTolerance_ = hitTolerance;\n};\n\n\n/**\n * @inheritDoc\n */\nTranslate.prototype.setMap = function(map) {\n  const oldMap = this.getMap();\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_(oldMap);\n};\n\n\n/**\n * @private\n */\nTranslate.prototype.handleActiveChanged_ = function() {\n  this.updateState_(null);\n};\n\n\n/**\n * @param {module:ol/PluggableMap} oldMap Old map.\n * @private\n */\nTranslate.prototype.updateState_ = function(oldMap) {\n  let map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    map = map || oldMap;\n    if (map) {\n      const elem = map.getViewport();\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n};\n\n\nexport default Translate;\n","import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport GeoJSON from '../src/ol/format/GeoJSON.js';\nimport {defaults as defaultInteractions, Select, Translate} from '../src/ol/interaction.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport OSM from '../src/ol/source/OSM.js';\nimport VectorSource from '../src/ol/source/Vector.js';\n\n\nconst raster = new TileLayer({\n  source: new OSM()\n});\n\nconst vector = new VectorLayer({\n  source: new VectorSource({\n    url: 'data/geojson/countries.geojson',\n    format: new GeoJSON()\n  })\n});\n\nconst select = new Select();\n\nconst translate = new Translate({\n  features: select.getFeatures()\n});\n\nconst map = new Map({\n  interactions: defaultInteractions().extend([select, translate]),\n  layers: [raster, vector],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n"],"sourceRoot":""}