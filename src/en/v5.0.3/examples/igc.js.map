{"version":3,"sources":["webpack:///./igc.js"],"names":["colors","Clement Latour","Damien de Baesnt","Sylvain Dhonneur","Tom Payne","Ulrich Prinz","styleCache","vectorSource","_src_ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_10__","igcUrls","get","url","callback","const","client","XMLHttpRequest","open","onload","responseText","send","igcFormat","_src_ol_format_IGC_js__WEBPACK_IMPORTED_MODULE_4__","i","length","data","features","readFeatures","featureProjection","addFeatures","time","start","Infinity","stop","duration","on","event","geometry","feature","getGeometry","Math","min","getFirstCoordinate","max","getLastCoordinate","map","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_1__","layers","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_7__","source","_src_ol_source_OSM_js__WEBPACK_IMPORTED_MODULE_9__","attributions","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_8__","style","color","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_11__","stroke","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_12__","width","target","controls","Object","_src_ol_control_js__WEBPACK_IMPORTED_MODULE_3__","attributionOptions","collapsible","view","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_2__","center","zoom","point","line","displaySnap","coordinate","closestFeature","getClosestFeatureToCoordinate","info","document","getElementById","innerHTML","closestPoint","getClosestPoint","_src_ol_geom_js__WEBPACK_IMPORTED_MODULE_5__","setCoordinates","date","Date","toUTCString","coordinates","_src_ol_geom_js__WEBPACK_IMPORTED_MODULE_6__","render","evt","dragging","getEventCoordinate","originalEvent","image","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_13__","radius","fill","vectorContext","setStyle","drawGeometry","featureOverlay","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_14__","addEventListener","value","parseInt","this","m","forEachFeature","getCoordinateAtM","highlight","undefined","_src_ol_Feature_js__WEBPACK_IMPORTED_MODULE_0__","set","getSource","addFeature"],"mappings":"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","file":"igc.js","sourcesContent":["import Feature from '../src/ol/Feature.js';\nimport Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {defaults as defaultControls} from '../src/ol/control.js';\nimport IGC from '../src/ol/format/IGC.js';\nimport {LineString, Point} from '../src/ol/geom.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport OSM, {ATTRIBUTION} from '../src/ol/source/OSM.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport {Circle as CircleStyle, Fill, Stroke, Style} from '../src/ol/style.js';\n\n\nconst colors = {\n  'Clement Latour': 'rgba(0, 0, 255, 0.7)',\n  'Damien de Baesnt': 'rgba(0, 215, 255, 0.7)',\n  'Sylvain Dhonneur': 'rgba(0, 165, 255, 0.7)',\n  'Tom Payne': 'rgba(0, 255, 255, 0.7)',\n  'Ulrich Prinz': 'rgba(0, 215, 255, 0.7)'\n};\n\nconst styleCache = {};\nconst styleFunction = function(feature) {\n  const color = colors[feature.get('PLT')];\n  let style = styleCache[color];\n  if (!style) {\n    style = new Style({\n      stroke: new Stroke({\n        color: color,\n        width: 3\n      })\n    });\n    styleCache[color] = style;\n  }\n  return style;\n};\n\nconst vectorSource = new VectorSource();\n\nconst igcUrls = [\n  'data/igc/Clement-Latour.igc',\n  'data/igc/Damien-de-Baenst.igc',\n  'data/igc/Sylvain-Dhonneur.igc',\n  'data/igc/Tom-Payne.igc',\n  'data/igc/Ulrich-Prinz.igc'\n];\n\nfunction get(url, callback) {\n  const client = new XMLHttpRequest();\n  client.open('GET', url);\n  client.onload = function() {\n    callback(client.responseText);\n  };\n  client.send();\n}\n\nconst igcFormat = new IGC();\nfor (let i = 0; i < igcUrls.length; ++i) {\n  get(igcUrls[i], function(data) {\n    const features = igcFormat.readFeatures(data,\n      {featureProjection: 'EPSG:3857'});\n    vectorSource.addFeatures(features);\n  });\n}\n\nconst time = {\n  start: Infinity,\n  stop: -Infinity,\n  duration: 0\n};\nvectorSource.on('addfeature', function(event) {\n  const geometry = event.feature.getGeometry();\n  time.start = Math.min(time.start, geometry.getFirstCoordinate()[2]);\n  time.stop = Math.max(time.stop, geometry.getLastCoordinate()[2]);\n  time.duration = time.stop - time.start;\n});\n\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM({\n        attributions: [\n          'All maps Â© <a href=\"https://www.opencyclemap.org/\">OpenCycleMap</a>',\n          ATTRIBUTION\n        ],\n        url: 'https://{a-c}.tile.thunderforest.com/cycle/{z}/{x}/{y}.png' +\n            '?apikey=0e6fc415256d4fbb9b5166a718591d71'\n      })\n    }),\n    new VectorLayer({\n      source: vectorSource,\n      style: styleFunction\n    })\n  ],\n  target: 'map',\n  controls: defaultControls({\n    attributionOptions: {\n      collapsible: false\n    }\n  }),\n  view: new View({\n    center: [703365.7089403362, 5714629.865071137],\n    zoom: 9\n  })\n});\n\n\nlet point = null;\nlet line = null;\nconst displaySnap = function(coordinate) {\n  const closestFeature = vectorSource.getClosestFeatureToCoordinate(coordinate);\n  const info = document.getElementById('info');\n  if (closestFeature === null) {\n    point = null;\n    line = null;\n    info.innerHTML = '&nbsp;';\n  } else {\n    const geometry = closestFeature.getGeometry();\n    const closestPoint = geometry.getClosestPoint(coordinate);\n    if (point === null) {\n      point = new Point(closestPoint);\n    } else {\n      point.setCoordinates(closestPoint);\n    }\n    const date = new Date(closestPoint[2] * 1000);\n    info.innerHTML =\n        closestFeature.get('PLT') + ' (' + date.toUTCString() + ')';\n    const coordinates = [coordinate, [closestPoint[0], closestPoint[1]]];\n    if (line === null) {\n      line = new LineString(coordinates);\n    } else {\n      line.setCoordinates(coordinates);\n    }\n  }\n  map.render();\n};\n\nmap.on('pointermove', function(evt) {\n  if (evt.dragging) {\n    return;\n  }\n  const coordinate = map.getEventCoordinate(evt.originalEvent);\n  displaySnap(coordinate);\n});\n\nmap.on('click', function(evt) {\n  displaySnap(evt.coordinate);\n});\n\nconst stroke = new Stroke({\n  color: 'rgba(255,0,0,0.9)',\n  width: 1\n});\nconst style = new Style({\n  stroke: stroke,\n  image: new CircleStyle({\n    radius: 5,\n    fill: null,\n    stroke: stroke\n  })\n});\nmap.on('postcompose', function(evt) {\n  const vectorContext = evt.vectorContext;\n  vectorContext.setStyle(style);\n  if (point !== null) {\n    vectorContext.drawGeometry(point);\n  }\n  if (line !== null) {\n    vectorContext.drawGeometry(line);\n  }\n});\n\nconst featureOverlay = new VectorLayer({\n  source: new VectorSource(),\n  map: map,\n  style: new Style({\n    image: new CircleStyle({\n      radius: 5,\n      fill: new Fill({\n        color: 'rgba(255,0,0,0.9)'\n      })\n    })\n  })\n});\n\ndocument.getElementById('time').addEventListener('input', function() {\n  const value = parseInt(this.value, 10) / 100;\n  const m = time.start + (time.duration * value);\n  vectorSource.forEachFeature(function(feature) {\n    const geometry = /** @type {module:ol/geom/LineString~LineString} */ (feature.getGeometry());\n    const coordinate = geometry.getCoordinateAtM(m, true);\n    let highlight = feature.get('highlight');\n    if (highlight === undefined) {\n      highlight = new Feature(new Point(coordinate));\n      feature.set('highlight', highlight);\n      featureOverlay.getSource().addFeature(highlight);\n    } else {\n      highlight.getGeometry().setCoordinates(coordinate);\n    }\n  });\n  map.render();\n});\n"],"sourceRoot":""}